<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250325 21:35:45.670" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-haproxy-s3g">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:26:33.759" endtime="20250325 21:26:33.759"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:33.762" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:33.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:33.766" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:26:33.760" endtime="20250325 21:26:33.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:33.766" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:26:33.766" endtime="20250325 21:26:33.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:33.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:33.767" endtime="20250325 21:26:33.767"/>
</kw>
<status status="PASS" starttime="20250325 21:26:33.760" endtime="20250325 21:26:33.767"/>
</kw>
<msg timestamp="20250325 21:26:33.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:33.759" endtime="20250325 21:26:33.767"/>
</kw>
<msg timestamp="20250325 21:26:33.767" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:26:33.759" endtime="20250325 21:26:33.767"/>
</kw>
<msg timestamp="20250325 21:26:33.768" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:26:33.759" endtime="20250325 21:26:33.768"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:26:33.768" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:26:33.768" endtime="20250325 21:26:33.768"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:33.771" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:33.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:33.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:26:33.769" endtime="20250325 21:26:33.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:33.794" level="INFO"/>
<status status="PASS" starttime="20250325 21:26:33.794" endtime="20250325 21:26:33.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:33.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:33.794" endtime="20250325 21:26:33.795"/>
</kw>
<status status="PASS" starttime="20250325 21:26:33.769" endtime="20250325 21:26:33.795"/>
</kw>
<msg timestamp="20250325 21:26:33.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:33.769" endtime="20250325 21:26:33.795"/>
</kw>
<status status="PASS" starttime="20250325 21:26:33.768" endtime="20250325 21:26:33.795"/>
</kw>
<status status="PASS" starttime="20250325 21:26:33.768" endtime="20250325 21:26:33.795"/>
</kw>
<status status="PASS" starttime="20250325 21:26:33.758" endtime="20250325 21:26:33.795"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250325 21:26:33.757" endtime="20250325 21:26:33.795"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250325 21:26:33.723" endtime="20250325 21:26:33.796"/>
</suite>
<suite id="s1-s2" name="Security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s2-s1" name="Admin-Cert" source="/opt/hadoop/smoketest/security/admin-cert.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:26:34.415" endtime="20250325 21:26:34.415"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:34.418" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:34.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:34.421" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:26:34.416" endtime="20250325 21:26:34.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:34.422" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:26:34.422" endtime="20250325 21:26:34.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:34.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:34.422" endtime="20250325 21:26:34.422"/>
</kw>
<status status="PASS" starttime="20250325 21:26:34.416" endtime="20250325 21:26:34.422"/>
</kw>
<msg timestamp="20250325 21:26:34.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:34.415" endtime="20250325 21:26:34.423"/>
</kw>
<msg timestamp="20250325 21:26:34.423" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:26:34.415" endtime="20250325 21:26:34.423"/>
</kw>
<msg timestamp="20250325 21:26:34.423" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:26:34.415" endtime="20250325 21:26:34.423"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:26:34.423" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:26:34.423" endtime="20250325 21:26:34.423"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:34.426" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:34.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:34.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:26:34.424" endtime="20250325 21:26:34.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:34.445" level="INFO"/>
<status status="PASS" starttime="20250325 21:26:34.444" endtime="20250325 21:26:34.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:34.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:34.445" endtime="20250325 21:26:34.445"/>
</kw>
<status status="PASS" starttime="20250325 21:26:34.424" endtime="20250325 21:26:34.445"/>
</kw>
<msg timestamp="20250325 21:26:34.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:34.424" endtime="20250325 21:26:34.445"/>
</kw>
<status status="PASS" starttime="20250325 21:26:34.424" endtime="20250325 21:26:34.445"/>
</kw>
<status status="PASS" starttime="20250325 21:26:34.423" endtime="20250325 21:26:34.445"/>
</kw>
<status status="PASS" starttime="20250325 21:26:34.414" endtime="20250325 21:26:34.445"/>
</kw>
<status status="PASS" starttime="20250325 21:26:34.414" endtime="20250325 21:26:34.445"/>
</kw>
<status status="PASS" starttime="20250325 21:26:34.414" endtime="20250325 21:26:34.445"/>
</kw>
<test id="s1-s2-s1-t1" name="List valid certificates" line="33">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:34.449" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:36.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:36.928" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20250325 21:26:34.447" endtime="20250325 21:26:36.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:36.929" level="INFO">Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Tue Mar 25 21:25:47 UTC 2025   Fri May 03 21:25:47 UTC 2030   CN=scm@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=1   CN=scm@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=1  
2                 Tue Mar 25 21:25:47 UTC 2025   Fri May 03 21:25:47 UTC 2030   CN=scm-sub@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=2 CN=scm@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=1  
3                 Tue Mar 25 21:26:06 UTC 2025   Wed Mar 25 21:26:06 UTC 2026   CN=dn@dn,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=3     CN=scm-sub@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=2
4                 Tue Mar 25 21:26:07 UTC 2025   Wed Mar 25 21:26:07 UTC 2026   CN=recon@recon,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=4 CN=scm-sub@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=2
5                 Tue Mar 25 21:26:07 UTC 2025   Wed Mar 25 21:26:07 UTC 2026   CN=dn@dn,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=5     CN=scm-sub@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=2
6                 Tue Mar 25 21:26:07 UTC 2025   Wed Mar 25 21:26:07 UTC 2026   CN=dn@dn,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=6     CN=scm-sub@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=2
7                 Tue Mar 25 21:26:07 UTC 2025   Wed Mar 25 21:26:07 UTC 2026   CN=om,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=7        CN=scm-sub@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=2</msg>
<status status="PASS" starttime="20250325 21:26:36.929" endtime="20250325 21:26:36.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:36.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:36.929" endtime="20250325 21:26:36.930"/>
</kw>
<status status="PASS" starttime="20250325 21:26:34.447" endtime="20250325 21:26:36.930"/>
</kw>
<msg timestamp="20250325 21:26:36.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:34.446" endtime="20250325 21:26:36.930"/>
</kw>
<msg timestamp="20250325 21:26:36.930" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20250325 21:26:34.446" endtime="20250325 21:26:36.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate list:(BatchSize=20,</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:26:36.930" endtime="20250325 21:26:36.931"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:26:34.446" endtime="20250325 21:26:36.931"/>
</test>
<test id="s1-s2-s1-t2" name="List revoked certificates" line="38">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -t revoked</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:36.936" level="INFO">Running command 'ozone admin cert list -t revoked 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:39.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:39.367" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20250325 21:26:36.933" endtime="20250325 21:26:39.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:39.368" level="INFO">Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Tue Mar 25 21:25:47 UTC 2025   Fri May 03 21:25:47 UTC 2030   CN=scm@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=1   CN=scm@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=1  
2                 Tue Mar 25 21:25:47 UTC 2025   Fri May 03 21:25:47 UTC 2030   CN=scm-sub@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=2 CN=scm@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=1  
3                 Tue Mar 25 21:26:06 UTC 2025   Wed Mar 25 21:26:06 UTC 2026   CN=dn@dn,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=3     CN=scm-sub@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=2
4                 Tue Mar 25 21:26:07 UTC 2025   Wed Mar 25 21:26:07 UTC 2026   CN=recon@recon,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=4 CN=scm-sub@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=2
5                 Tue Mar 25 21:26:07 UTC 2025   Wed Mar 25 21:26:07 UTC 2026   CN=dn@dn,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=5     CN=scm-sub@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=2
6                 Tue Mar 25 21:26:07 UTC 2025   Wed Mar 25 21:26:07 UTC 2026   CN=dn@dn,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=6     CN=scm-sub@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=2
7                 Tue Mar 25 21:26:07 UTC 2025   Wed Mar 25 21:26:07 UTC 2026   CN=om,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=7        CN=scm-sub@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=2</msg>
<status status="PASS" starttime="20250325 21:26:39.368" endtime="20250325 21:26:39.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:39.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:39.368" endtime="20250325 21:26:39.369"/>
</kw>
<status status="PASS" starttime="20250325 21:26:36.933" endtime="20250325 21:26:39.369"/>
</kw>
<msg timestamp="20250325 21:26:39.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:36.932" endtime="20250325 21:26:39.369"/>
</kw>
<msg timestamp="20250325 21:26:39.369" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20250325 21:26:36.932" endtime="20250325 21:26:39.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate list:(BatchSize=20,</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:26:39.369" endtime="20250325 21:26:39.370"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:26:36.931" endtime="20250325 21:26:39.370"/>
</test>
<test id="s1-s2-s1-t3" name="Info of the cert" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:39.374" level="INFO">Running command 'for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:44.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:44.877" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             Issue...</msg>
<status status="PASS" starttime="20250325 21:26:39.371" endtime="20250325 21:26:44.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:44.878" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             IssuerDN: CN=scm@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=1
           Start Date: Tue Mar 25 21:25:47 UTC 2025
           Final Date: Fri May 03 21:25:47 UTC 2030
            SubjectDN: CN=scm@scm,OU=7e1913b9-36ed-4133-b909-f1fbcf74a192,O=CID-2d66b234-60f1-4745-af48-ded1b573f0ef,SERIALNUMBER=1
           Public Key: RSA Public Key [11:dc:05:e1:f0:56:6d:ce:5d:6d:1d:26:0b:00:bb:ff:98:cc:40:c4],[56:66:d1:a4]
        modulus: 8f0ef3906ae8b3aea7d1035d1a060d43431be1e0717e2991d941850476aa192da79d4c5df45f17dfeaa7934de5388aec9d5ce80478b64cabc49d484d1ac1b9a79a13f077f8cd7672833dacde9df91561472dfe25fafb1d3c59d7719e7378d447a75eb54b16a366358fbbbdc75c8176ba07fc64fd2eba4796ab69b1f032623b8c5af172e2e6fa48cd77c07d9dcd66578d09d65b7d287508b6b2e65560fff529b37fa76db1fd434e4903bb5a6e0660aa3dcd098a018c69a0fc3f94bdc77b3954db861596452ab963af1b8532aa445b417d6e3b54fd1b2db40565207796da38543932b1ad5f297d9ec948c276209aaa8f170df96e22e2013a0e9d541c57978f52cb
public exponent: 10001

  Signature Algorithm: SHA256WITHRSA
            Signature: 5e6e80322e38f7588b078a17ede18d686df02679
                       5c52ec37b337b30d604e6dff1928f5428b4eb409
                       1da352fe15fa71ff1fffaf8b14441dfa2a79416c
                       5a1a91603da02874dd9b14d4e4a5dc7f7412bdce
                       12669a2ce972901980d6af05ef445e13d551580f
                       6681efab8b3723f74d0e27934077d8dc6095ac94
                       7bc8c2331156955d4cb63554ba17e42e68fc9cc2
                       c1e1d36b313fdfaf34b3db3b283af4d1db29f994
                       75d45db8fa52963dcedb778299cc4d3611c49eec
                       3b01a33db7ae8e52a7a540da0ebcb73229bf5386
                       1c03467e0ca7c4fe8cc86526f8a197d83c5d2f55
                       077766e123957e36fca11f4910cbe47cfe7fd4f4
                       4acffd4f8388c38af22081bb15352696
       Extensions: 
                       critical(true) BasicConstraints: isCa(true)
                       critical(true) KeyUsage: 0x6
                       critical(false) 2.5.29.17 value = Sequence
    Tagged [CONTEXT 7] IMPLICIT 
        DER Octet String[4] 

</msg>
<status status="PASS" starttime="20250325 21:26:44.877" endtime="20250325 21:26:44.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:44.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:44.878" endtime="20250325 21:26:44.878"/>
</kw>
<status status="PASS" starttime="20250325 21:26:39.371" endtime="20250325 21:26:44.878"/>
</kw>
<msg timestamp="20250325 21:26:44.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:39.371" endtime="20250325 21:26:44.879"/>
</kw>
<msg timestamp="20250325 21:26:44.879" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             Issue...</msg>
<status status="PASS" starttime="20250325 21:26:39.371" endtime="20250325 21:26:44.879"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate not found</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:26:44.879" endtime="20250325 21:26:44.879"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:26:39.370" endtime="20250325 21:26:44.879"/>
</test>
<doc>Test for ozone admin cert command</doc>
<status status="PASS" starttime="20250325 21:26:34.390" endtime="20250325 21:26:44.880"/>
</suite>
<suite id="s1-s2-s2" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s2-s2-t1" name="Create volume bucket with wrong credentials" line="52">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:44.893" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:44.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:44.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:26:44.891" endtime="20250325 21:26:44.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:44.898" level="INFO"/>
<status status="PASS" starttime="20250325 21:26:44.898" endtime="20250325 21:26:44.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:44.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:44.898" endtime="20250325 21:26:44.899"/>
</kw>
<status status="PASS" starttime="20250325 21:26:44.891" endtime="20250325 21:26:44.899"/>
</kw>
<msg timestamp="20250325 21:26:44.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:44.891" endtime="20250325 21:26:44.899"/>
</kw>
<status status="PASS" starttime="20250325 21:26:44.890" endtime="20250325 21:26:44.899"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:44.901" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:47.081" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:26:47.081" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20250325 21:26:44.899" endtime="20250325 21:26:47.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:26:47.082" endtime="20250325 21:26:47.082"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:26:44.890" endtime="20250325 21:26:47.082"/>
</test>
<test id="s1-s2-s2-t2" name="Create volume with non-admin user" line="57">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:26:47.084" endtime="20250325 21:26:47.084"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:47.088" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:47.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:47.091" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:26:47.086" endtime="20250325 21:26:47.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:47.092" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:26:47.092" endtime="20250325 21:26:47.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:47.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:47.092" endtime="20250325 21:26:47.093"/>
</kw>
<status status="PASS" starttime="20250325 21:26:47.085" endtime="20250325 21:26:47.093"/>
</kw>
<msg timestamp="20250325 21:26:47.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:47.085" endtime="20250325 21:26:47.093"/>
</kw>
<msg timestamp="20250325 21:26:47.093" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:26:47.085" endtime="20250325 21:26:47.093"/>
</kw>
<msg timestamp="20250325 21:26:47.093" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:26:47.084" endtime="20250325 21:26:47.093"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:26:47.094" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:26:47.093" endtime="20250325 21:26:47.094"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:47.097" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:47.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:47.118" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:26:47.095" endtime="20250325 21:26:47.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:47.118" level="INFO"/>
<status status="PASS" starttime="20250325 21:26:47.118" endtime="20250325 21:26:47.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:47.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:47.119" endtime="20250325 21:26:47.119"/>
</kw>
<status status="PASS" starttime="20250325 21:26:47.095" endtime="20250325 21:26:47.119"/>
</kw>
<msg timestamp="20250325 21:26:47.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:47.094" endtime="20250325 21:26:47.119"/>
</kw>
<status status="PASS" starttime="20250325 21:26:47.094" endtime="20250325 21:26:47.119"/>
</kw>
<status status="PASS" starttime="20250325 21:26:47.094" endtime="20250325 21:26:47.119"/>
</kw>
<status status="PASS" starttime="20250325 21:26:47.084" endtime="20250325 21:26:47.119"/>
</kw>
<status status="PASS" starttime="20250325 21:26:47.083" endtime="20250325 21:26:47.119"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:47.121" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:50.182" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:26:50.182" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have CREATE permission to access volume Volume:fstest </msg>
<status status="PASS" starttime="20250325 21:26:47.119" endtime="20250325 21:26:50.182"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:26:50.182" endtime="20250325 21:26:50.183"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:26:47.083" endtime="20250325 21:26:50.183"/>
</test>
<test id="s1-s2-s2-t3" name="Create bucket with non-admin owner(testuser2)" line="62">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:26:50.184" endtime="20250325 21:26:50.185"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:50.188" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:50.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:50.192" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:26:50.186" endtime="20250325 21:26:50.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:50.193" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:26:50.192" endtime="20250325 21:26:50.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:50.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:50.193" endtime="20250325 21:26:50.193"/>
</kw>
<status status="PASS" starttime="20250325 21:26:50.186" endtime="20250325 21:26:50.193"/>
</kw>
<msg timestamp="20250325 21:26:50.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:50.185" endtime="20250325 21:26:50.193"/>
</kw>
<msg timestamp="20250325 21:26:50.194" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:26:50.185" endtime="20250325 21:26:50.194"/>
</kw>
<msg timestamp="20250325 21:26:50.194" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:26:50.185" endtime="20250325 21:26:50.194"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:26:50.194" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:26:50.194" endtime="20250325 21:26:50.194"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:50.197" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:50.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:50.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:26:50.195" endtime="20250325 21:26:50.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:50.234" level="INFO"/>
<status status="PASS" starttime="20250325 21:26:50.233" endtime="20250325 21:26:50.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:50.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:50.234" endtime="20250325 21:26:50.234"/>
</kw>
<status status="PASS" starttime="20250325 21:26:50.195" endtime="20250325 21:26:50.234"/>
</kw>
<msg timestamp="20250325 21:26:50.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:50.195" endtime="20250325 21:26:50.234"/>
</kw>
<status status="PASS" starttime="20250325 21:26:50.195" endtime="20250325 21:26:50.234"/>
</kw>
<status status="PASS" starttime="20250325 21:26:50.194" endtime="20250325 21:26:50.235"/>
</kw>
<status status="PASS" starttime="20250325 21:26:50.184" endtime="20250325 21:26:50.235"/>
</kw>
<status status="PASS" starttime="20250325 21:26:50.184" endtime="20250325 21:26:50.235"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:26:50.236" level="INFO">${random} = 25</msg>
<status status="PASS" starttime="20250325 21:26:50.235" endtime="20250325 21:26:50.236"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:26:50.237" level="INFO">${volume1} = fstest25</msg>
<status status="PASS" starttime="20250325 21:26:50.236" endtime="20250325 21:26:50.237"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:26:50.238" level="INFO">${volume2} = fstest225</msg>
<status status="PASS" starttime="20250325 21:26:50.237" endtime="20250325 21:26:50.238"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:26:50.239" level="INFO">${volume3} = fstest325</msg>
<status status="PASS" starttime="20250325 21:26:50.238" endtime="20250325 21:26:50.239"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:26:50.240" level="INFO">${volume4} = fstest425</msg>
<status status="PASS" starttime="20250325 21:26:50.239" endtime="20250325 21:26:50.240"/>
</kw>
<status status="PASS" starttime="20250325 21:26:50.235" endtime="20250325 21:26:50.240"/>
</kw>
<status status="PASS" starttime="20250325 21:26:50.235" endtime="20250325 21:26:50.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume4} -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:50.243" level="INFO">Running command 'ozone sh volume create o3://om/fstest425 -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:53.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:53.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:26:50.241" endtime="20250325 21:26:53.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:53.299" level="INFO"/>
<status status="PASS" starttime="20250325 21:26:53.299" endtime="20250325 21:26:53.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:53.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:53.300" endtime="20250325 21:26:53.301"/>
</kw>
<status status="PASS" starttime="20250325 21:26:50.240" endtime="20250325 21:26:53.301"/>
</kw>
<msg timestamp="20250325 21:26:53.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:50.240" endtime="20250325 21:26:53.301"/>
</kw>
<status status="PASS" starttime="20250325 21:26:50.240" endtime="20250325 21:26:53.301"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:26:53.302" endtime="20250325 21:26:53.302"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:53.307" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:53.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:53.311" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:26:53.304" endtime="20250325 21:26:53.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:53.311" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:26:53.311" endtime="20250325 21:26:53.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:53.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:53.311" endtime="20250325 21:26:53.312"/>
</kw>
<status status="PASS" starttime="20250325 21:26:53.304" endtime="20250325 21:26:53.312"/>
</kw>
<msg timestamp="20250325 21:26:53.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:53.303" endtime="20250325 21:26:53.312"/>
</kw>
<msg timestamp="20250325 21:26:53.312" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:26:53.303" endtime="20250325 21:26:53.312"/>
</kw>
<msg timestamp="20250325 21:26:53.312" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:26:53.302" endtime="20250325 21:26:53.312"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:26:53.313" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:26:53.312" endtime="20250325 21:26:53.313"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:53.316" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:53.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:53.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:26:53.314" endtime="20250325 21:26:53.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:53.340" level="INFO"/>
<status status="PASS" starttime="20250325 21:26:53.340" endtime="20250325 21:26:53.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:53.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:53.340" endtime="20250325 21:26:53.341"/>
</kw>
<status status="PASS" starttime="20250325 21:26:53.314" endtime="20250325 21:26:53.341"/>
</kw>
<msg timestamp="20250325 21:26:53.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:53.313" endtime="20250325 21:26:53.341"/>
</kw>
<status status="PASS" starttime="20250325 21:26:53.313" endtime="20250325 21:26:53.341"/>
</kw>
<status status="PASS" starttime="20250325 21:26:53.313" endtime="20250325 21:26:53.341"/>
</kw>
<status status="PASS" starttime="20250325 21:26:53.302" endtime="20250325 21:26:53.341"/>
</kw>
<status status="PASS" starttime="20250325 21:26:53.301" endtime="20250325 21:26:53.341"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create o3://om/${volume4}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:53.344" level="INFO">Running command 'ozone sh bucket create o3://om/fstest425/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:26:56.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:26:56.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:26:53.342" endtime="20250325 21:26:56.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:26:56.268" level="INFO"/>
<status status="PASS" starttime="20250325 21:26:56.268" endtime="20250325 21:26:56.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:26:56.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:26:56.269" endtime="20250325 21:26:56.269"/>
</kw>
<status status="PASS" starttime="20250325 21:26:53.342" endtime="20250325 21:26:56.269"/>
</kw>
<msg timestamp="20250325 21:26:56.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:53.342" endtime="20250325 21:26:56.269"/>
</kw>
<msg timestamp="20250325 21:26:56.269" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:26:53.341" endtime="20250325 21:26:56.269"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:26:56.270" endtime="20250325 21:26:56.270"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume4}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:26:56.273" level="INFO">Running command 'ozone sh key put fstest425/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:01.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:01.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:26:56.271" endtime="20250325 21:27:01.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:01.632" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:01.631" endtime="20250325 21:27:01.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:01.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:01.632" endtime="20250325 21:27:01.632"/>
</kw>
<status status="PASS" starttime="20250325 21:26:56.271" endtime="20250325 21:27:01.633"/>
</kw>
<msg timestamp="20250325 21:27:01.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:26:56.270" endtime="20250325 21:27:01.633"/>
</kw>
<msg timestamp="20250325 21:27:01.633" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:26:56.270" endtime="20250325 21:27:01.633"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:27:01.633" endtime="20250325 21:27:01.633"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:01.637" level="INFO">Running command 'ozone sh key list fstest425/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:05.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:05.135" level="INFO">${output} = [ {
  "volumeName" : "fstest425",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser2",
  "dataSize" : 17289,
  "creationTime" : "2025-03-25T21:26:59.203Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20250325 21:27:01.635" endtime="20250325 21:27:05.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:05.136" level="INFO">[ {
  "volumeName" : "fstest425",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser2",
  "dataSize" : 17289,
  "creationTime" : "2025-03-25T21:26:59.203Z",
  "modificationTime" : "2025-03-25T21:27:01.215Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250325 21:27:05.135" endtime="20250325 21:27:05.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:05.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:05.136" endtime="20250325 21:27:05.136"/>
</kw>
<status status="PASS" starttime="20250325 21:27:01.635" endtime="20250325 21:27:05.137"/>
</kw>
<msg timestamp="20250325 21:27:05.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:01.634" endtime="20250325 21:27:05.137"/>
</kw>
<msg timestamp="20250325 21:27:05.137" level="INFO">${result} = [ {
  "volumeName" : "fstest425",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser2",
  "dataSize" : 17289,
  "creationTime" : "2025-03-25T21:26:59.203Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20250325 21:27:01.633" endtime="20250325 21:27:05.137"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:27:05.137" endtime="20250325 21:27:05.137"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key delete ${volume4}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:05.140" level="INFO">Running command 'ozone sh key delete fstest425/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:08.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:08.205" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20250325 21:27:05.138" endtime="20250325 21:27:08.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:08.206" level="INFO">Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20250325 21:27:08.206" endtime="20250325 21:27:08.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:08.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:08.206" endtime="20250325 21:27:08.207"/>
</kw>
<status status="PASS" starttime="20250325 21:27:05.138" endtime="20250325 21:27:08.207"/>
</kw>
<msg timestamp="20250325 21:27:08.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:05.138" endtime="20250325 21:27:08.207"/>
</kw>
<msg timestamp="20250325 21:27:08.207" level="INFO">${result} = Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20250325 21:27:05.137" endtime="20250325 21:27:08.207"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:27:08.207" endtime="20250325 21:27:08.207"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket delete -r --yes ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:08.210" level="INFO">Running command 'ozone sh bucket delete -r --yes fstest425/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:11.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:11.601" level="INFO">${output} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250325 21:27:08.208" endtime="20250325 21:27:11.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:11.602" level="INFO">Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250325 21:27:11.602" endtime="20250325 21:27:11.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:11.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:11.602" endtime="20250325 21:27:11.603"/>
</kw>
<status status="PASS" starttime="20250325 21:27:08.208" endtime="20250325 21:27:11.603"/>
</kw>
<msg timestamp="20250325 21:27:11.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:08.208" endtime="20250325 21:27:11.603"/>
</kw>
<msg timestamp="20250325 21:27:11.603" level="INFO">${result} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250325 21:27:08.207" endtime="20250325 21:27:11.603"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:27:11.603" endtime="20250325 21:27:11.604"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:26:50.183" endtime="20250325 21:27:11.604"/>
</test>
<test id="s1-s2-s2-t4" name="Create volume bucket with credentials" line="78">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:27:11.605" endtime="20250325 21:27:11.605"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:11.609" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:11.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:11.612" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:27:11.607" endtime="20250325 21:27:11.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:11.613" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:27:11.613" endtime="20250325 21:27:11.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:11.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:11.613" endtime="20250325 21:27:11.614"/>
</kw>
<status status="PASS" starttime="20250325 21:27:11.606" endtime="20250325 21:27:11.614"/>
</kw>
<msg timestamp="20250325 21:27:11.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:11.606" endtime="20250325 21:27:11.614"/>
</kw>
<msg timestamp="20250325 21:27:11.614" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:27:11.606" endtime="20250325 21:27:11.614"/>
</kw>
<msg timestamp="20250325 21:27:11.614" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:27:11.605" endtime="20250325 21:27:11.614"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:27:11.615" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:27:11.614" endtime="20250325 21:27:11.615"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:11.618" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:11.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:11.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:11.616" endtime="20250325 21:27:11.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:11.664" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:11.664" endtime="20250325 21:27:11.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:11.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:11.664" endtime="20250325 21:27:11.665"/>
</kw>
<status status="PASS" starttime="20250325 21:27:11.616" endtime="20250325 21:27:11.665"/>
</kw>
<msg timestamp="20250325 21:27:11.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:11.615" endtime="20250325 21:27:11.665"/>
</kw>
<status status="PASS" starttime="20250325 21:27:11.615" endtime="20250325 21:27:11.665"/>
</kw>
<status status="PASS" starttime="20250325 21:27:11.615" endtime="20250325 21:27:11.665"/>
</kw>
<status status="PASS" starttime="20250325 21:27:11.605" endtime="20250325 21:27:11.665"/>
</kw>
<status status="PASS" starttime="20250325 21:27:11.605" endtime="20250325 21:27:11.665"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:27:11.666" level="INFO">${random} = 93</msg>
<status status="PASS" starttime="20250325 21:27:11.666" endtime="20250325 21:27:11.666"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:27:11.666" level="INFO">${volume1} = fstest93</msg>
<status status="PASS" starttime="20250325 21:27:11.666" endtime="20250325 21:27:11.666"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:27:11.667" level="INFO">${volume2} = fstest293</msg>
<status status="PASS" starttime="20250325 21:27:11.666" endtime="20250325 21:27:11.667"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:27:11.667" level="INFO">${volume3} = fstest393</msg>
<status status="PASS" starttime="20250325 21:27:11.667" endtime="20250325 21:27:11.667"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:27:11.667" level="INFO">${volume4} = fstest493</msg>
<status status="PASS" starttime="20250325 21:27:11.667" endtime="20250325 21:27:11.667"/>
</kw>
<status status="PASS" starttime="20250325 21:27:11.665" endtime="20250325 21:27:11.667"/>
</kw>
<status status="PASS" starttime="20250325 21:27:11.665" endtime="20250325 21:27:11.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:11.670" level="INFO">Running command 'ozone sh volume create o3://om/fstest93 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:14.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:14.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:11.668" endtime="20250325 21:27:14.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:14.713" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:14.713" endtime="20250325 21:27:14.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:14.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:14.714" endtime="20250325 21:27:14.714"/>
</kw>
<status status="PASS" starttime="20250325 21:27:11.668" endtime="20250325 21:27:14.714"/>
</kw>
<msg timestamp="20250325 21:27:14.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:11.668" endtime="20250325 21:27:14.714"/>
</kw>
<status status="PASS" starttime="20250325 21:27:11.668" endtime="20250325 21:27:14.714"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:14.717" level="INFO">Running command 'ozone sh volume create o3://om/fstest293 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:17.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:17.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:14.715" endtime="20250325 21:27:17.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:17.558" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:17.557" endtime="20250325 21:27:17.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:17.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:17.558" endtime="20250325 21:27:17.558"/>
</kw>
<status status="PASS" starttime="20250325 21:27:14.715" endtime="20250325 21:27:17.559"/>
</kw>
<msg timestamp="20250325 21:27:17.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:14.715" endtime="20250325 21:27:17.559"/>
</kw>
<status status="PASS" starttime="20250325 21:27:14.714" endtime="20250325 21:27:17.559"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:17.562" level="INFO">Running command 'ozone sh bucket create o3://om/fstest93/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:20.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:20.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:17.560" endtime="20250325 21:27:20.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:20.473" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:20.472" endtime="20250325 21:27:20.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:20.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:20.473" endtime="20250325 21:27:20.473"/>
</kw>
<status status="PASS" starttime="20250325 21:27:17.559" endtime="20250325 21:27:20.474"/>
</kw>
<msg timestamp="20250325 21:27:20.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:17.559" endtime="20250325 21:27:20.474"/>
</kw>
<status status="PASS" starttime="20250325 21:27:17.559" endtime="20250325 21:27:20.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket2 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:20.477" level="INFO">Running command 'ozone sh bucket create o3://om/fstest93/bucket2 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:23.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:23.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:20.475" endtime="20250325 21:27:23.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:23.736" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:23.736" endtime="20250325 21:27:23.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:23.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:23.736" endtime="20250325 21:27:23.737"/>
</kw>
<status status="PASS" starttime="20250325 21:27:20.474" endtime="20250325 21:27:23.737"/>
</kw>
<msg timestamp="20250325 21:27:23.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:20.474" endtime="20250325 21:27:23.737"/>
</kw>
<status status="PASS" starttime="20250325 21:27:20.474" endtime="20250325 21:27:23.737"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume2}/bucket3 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:23.740" level="INFO">Running command 'ozone sh bucket create o3://om/fstest293/bucket3 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:26.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:26.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:23.738" endtime="20250325 21:27:26.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:26.690" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:26.689" endtime="20250325 21:27:26.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:26.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:26.690" endtime="20250325 21:27:26.690"/>
</kw>
<status status="PASS" starttime="20250325 21:27:23.738" endtime="20250325 21:27:26.691"/>
</kw>
<msg timestamp="20250325 21:27:26.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:23.737" endtime="20250325 21:27:26.691"/>
</kw>
<status status="PASS" starttime="20250325 21:27:23.737" endtime="20250325 21:27:26.691"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:27:11.604" endtime="20250325 21:27:26.691"/>
</test>
<test id="s1-s2-s2-t5" name="Check volume from ozonefs" line="88">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:26.695" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest93/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:29.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:29.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:26.693" endtime="20250325 21:27:29.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:29.794" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:29.793" endtime="20250325 21:27:29.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:29.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:29.794" endtime="20250325 21:27:29.795"/>
</kw>
<status status="PASS" starttime="20250325 21:27:26.692" endtime="20250325 21:27:29.795"/>
</kw>
<msg timestamp="20250325 21:27:29.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:26.692" endtime="20250325 21:27:29.795"/>
</kw>
<msg timestamp="20250325 21:27:29.795" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:27:26.692" endtime="20250325 21:27:29.795"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:27:26.691" endtime="20250325 21:27:29.795"/>
</test>
<test id="s1-s2-s2-t6" name="Test tmp mount for shared ofs tmp dir" line="91">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.enable.ofs.shared.tmp.dir</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:29.799" level="INFO">Running command 'ozone getconf confKey ozone.om.enable.ofs.shared.tmp.dir 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:30.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:30.795" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20250325 21:27:29.796" endtime="20250325 21:27:30.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:30.796" level="INFO">false</msg>
<status status="PASS" starttime="20250325 21:27:30.796" endtime="20250325 21:27:30.796"/>
</kw>
<msg timestamp="20250325 21:27:30.797" level="INFO">${result} = false</msg>
<status status="PASS" starttime="20250325 21:27:29.796" endtime="20250325 21:27:30.797"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${contains}</var>
<arg>"true" in """${result}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250325 21:27:30.797" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20250325 21:27:30.797" endtime="20250325 21:27:30.797"/>
</kw>
<if>
<branch type="IF" condition="${contains} == ${True}">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:27:30.797" endtime="20250325 21:27:30.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${TMP_MOUNT} -u testuser</arg>
<status status="NOT RUN" starttime="20250325 21:27:30.798" endtime="20250325 21:27:30.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${TMP_MOUNT}/${TMP_DIR} -u testuser</arg>
<status status="NOT RUN" starttime="20250325 21:27:30.798" endtime="20250325 21:27:30.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl /${TMP_MOUNT} -a user:testuser:a,user:testuser2:rw</arg>
<status status="NOT RUN" starttime="20250325 21:27:30.798" endtime="20250325 21:27:30.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl /${TMP_MOUNT}/${TMP_DIR} -a user:testuser:a,user:testuser2:rwlc</arg>
<status status="NOT RUN" starttime="20250325 21:27:30.798" endtime="20250325 21:27:30.798"/>
</kw>
<kw name="Format ofs TMPMOUNT">
<var>${tmpdirmount}</var>
<arg>${TMP_MOUNT}</arg>
<status status="NOT RUN" starttime="20250325 21:27:30.798" endtime="20250325 21:27:30.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put ./NOTICE.txt ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20250325 21:27:30.798" endtime="20250325 21:27:30.798"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20250325 21:27:30.798" endtime="20250325 21:27:30.798"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:27:30.798" endtime="20250325 21:27:30.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put ./LICENSE.txt ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20250325 21:27:30.798" endtime="20250325 21:27:30.799"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20250325 21:27:30.799" endtime="20250325 21:27:30.799"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20250325 21:27:30.799" endtime="20250325 21:27:30.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:27:30.799" endtime="20250325 21:27:30.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LICENSE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:27:30.799" endtime="20250325 21:27:30.799"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20250325 21:27:30.799" endtime="20250325 21:27:30.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:27:30.799" endtime="20250325 21:27:30.799"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/LICENSE.txt</arg>
<status status="NOT RUN" starttime="20250325 21:27:30.799" endtime="20250325 21:27:30.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:27:30.800" endtime="20250325 21:27:30.800"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:27:30.800" endtime="20250325 21:27:30.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20250325 21:27:30.800" endtime="20250325 21:27:30.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:27:30.800" endtime="20250325 21:27:30.800"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -r -skipTrash ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20250325 21:27:30.800" endtime="20250325 21:27:30.800"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete /${TMP_MOUNT}</arg>
<status status="NOT RUN" starttime="20250325 21:27:30.800" endtime="20250325 21:27:30.800"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:27:30.797" endtime="20250325 21:27:30.800"/>
</branch>
<status status="PASS" starttime="20250325 21:27:30.797" endtime="20250325 21:27:30.800"/>
</if>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:27:29.796" endtime="20250325 21:27:30.800"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20250325 21:26:44.881" endtime="20250325 21:27:30.801"/>
</suite>
<suite id="s1-s2-s3" name="Ozone-Secure-Owner-S3" source="/opt/hadoop/smoketest/security/ozone-secure-owner-s3.robot">
<test id="s1-s2-s3-t1" name="Initialize testuser Credentials" line="51">
<kw name="Initialize User Credentials">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>${username}</arg>
<arg>${keytab}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>${username}</arg>
<arg>${keytab}</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:27:30.824" endtime="20250325 21:27:30.824"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:30.827" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:30.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:30.831" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:27:30.825" endtime="20250325 21:27:30.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:30.831" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:27:30.831" endtime="20250325 21:27:30.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:30.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:30.832" endtime="20250325 21:27:30.832"/>
</kw>
<status status="PASS" starttime="20250325 21:27:30.825" endtime="20250325 21:27:30.832"/>
</kw>
<msg timestamp="20250325 21:27:30.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:30.824" endtime="20250325 21:27:30.832"/>
</kw>
<msg timestamp="20250325 21:27:30.832" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:27:30.824" endtime="20250325 21:27:30.832"/>
</kw>
<msg timestamp="20250325 21:27:30.833" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:27:30.824" endtime="20250325 21:27:30.833"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:27:30.833" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:27:30.833" endtime="20250325 21:27:30.833"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:30.836" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:30.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:30.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:30.834" endtime="20250325 21:27:30.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:30.862" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:30.862" endtime="20250325 21:27:30.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:30.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:30.862" endtime="20250325 21:27:30.862"/>
</kw>
<status status="PASS" starttime="20250325 21:27:30.834" endtime="20250325 21:27:30.863"/>
</kw>
<msg timestamp="20250325 21:27:30.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:30.834" endtime="20250325 21:27:30.863"/>
</kw>
<status status="PASS" starttime="20250325 21:27:30.833" endtime="20250325 21:27:30.863"/>
</kw>
<status status="PASS" starttime="20250325 21:27:30.833" endtime="20250325 21:27:30.863"/>
</kw>
<status status="PASS" starttime="20250325 21:27:30.823" endtime="20250325 21:27:30.863"/>
</kw>
<status status="PASS" starttime="20250325 21:27:30.823" endtime="20250325 21:27:30.863"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u ${username}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:30.865" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:33.639" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:27:33.639" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:27:30.863" endtime="20250325 21:27:33.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:33.640" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:27:33.639" endtime="20250325 21:27:33.640"/>
</kw>
<status status="PASS" starttime="20250325 21:27:30.863" endtime="20250325 21:27:33.640"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u ${username}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:33.644" level="INFO">Running command 'ozone s3 getsecret -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:36.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:36.285" level="INFO">${output} = awsAccessKey=testuser
awsSecret=fb911d7c9e939341432a436cfefc51496dcd8d44e17b0e8396660b28bb60f1cc</msg>
<status status="PASS" starttime="20250325 21:27:33.642" endtime="20250325 21:27:36.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:36.286" level="INFO">awsAccessKey=testuser
awsSecret=fb911d7c9e939341432a436cfefc51496dcd8d44e17b0e8396660b28bb60f1cc</msg>
<status status="PASS" starttime="20250325 21:27:36.286" endtime="20250325 21:27:36.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:36.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:36.287" endtime="20250325 21:27:36.287"/>
</kw>
<status status="PASS" starttime="20250325 21:27:33.641" endtime="20250325 21:27:36.287"/>
</kw>
<msg timestamp="20250325 21:27:36.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:33.641" endtime="20250325 21:27:36.287"/>
</kw>
<msg timestamp="20250325 21:27:36.287" level="INFO">${output} = awsAccessKey=testuser
awsSecret=fb911d7c9e939341432a436cfefc51496dcd8d44e17b0e8396660b28bb60f1cc</msg>
<status status="PASS" starttime="20250325 21:27:33.641" endtime="20250325 21:27:36.287"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250325 21:27:36.288" level="INFO">${accessId} = ['testuser']</msg>
<status status="PASS" starttime="20250325 21:27:36.287" endtime="20250325 21:27:36.288"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250325 21:27:36.288" level="INFO">${secretKey} = ['fb911d7c9e939341432a436cfefc51496dcd8d44e17b0e8396660b28bb60f1cc']</msg>
<status status="PASS" starttime="20250325 21:27:36.288" endtime="20250325 21:27:36.288"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:27:36.289" level="INFO">${accessId} = testuser</msg>
<status status="PASS" starttime="20250325 21:27:36.289" endtime="20250325 21:27:36.289"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:27:36.290" level="INFO">${secretKey} = fb911d7c9e939341432a436cfefc51496dcd8d44e17b0e8396660b28bb60f1cc</msg>
<status status="PASS" starttime="20250325 21:27:36.289" endtime="20250325 21:27:36.290"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID_${username}}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:27:36.291" level="INFO">${ACCESS_ID_testuser} = testuser</msg>
<status status="PASS" starttime="20250325 21:27:36.290" endtime="20250325 21:27:36.291"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY_${username}}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:27:36.292" level="INFO">${SECRET_KEY_testuser} = fb911d7c9e939341432a436cfefc51496dcd8d44e17b0e8396660b28bb60f1cc</msg>
<status status="PASS" starttime="20250325 21:27:36.291" endtime="20250325 21:27:36.292"/>
</kw>
<status status="PASS" starttime="20250325 21:27:30.823" endtime="20250325 21:27:36.292"/>
</kw>
<kw name="Initialize AWS S3">
<arg>${ACCESS_ID_testuser}</arg>
<arg>${SECRET_KEY_testuser}</arg>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${acess_id}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:36.296" level="INFO">Running command 'aws configure set aws_access_key_id testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:36.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:36.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:36.294" endtime="20250325 21:27:36.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:36.656" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:36.655" endtime="20250325 21:27:36.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:36.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:36.656" endtime="20250325 21:27:36.656"/>
</kw>
<status status="PASS" starttime="20250325 21:27:36.294" endtime="20250325 21:27:36.656"/>
</kw>
<msg timestamp="20250325 21:27:36.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:36.293" endtime="20250325 21:27:36.656"/>
</kw>
<status status="PASS" starttime="20250325 21:27:36.293" endtime="20250325 21:27:36.656"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret_key}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:36.659" level="INFO">Running command 'aws configure set aws_secret_access_key fb911d7c9e939341432a436cfefc51496dcd8d44e17b0e8396660b28bb60f1cc 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:37.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:37.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:36.657" endtime="20250325 21:27:37.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:37.004" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:37.004" endtime="20250325 21:27:37.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:37.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:37.005" endtime="20250325 21:27:37.005"/>
</kw>
<status status="PASS" starttime="20250325 21:27:36.657" endtime="20250325 21:27:37.005"/>
</kw>
<msg timestamp="20250325 21:27:37.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:36.657" endtime="20250325 21:27:37.005"/>
</kw>
<status status="PASS" starttime="20250325 21:27:36.657" endtime="20250325 21:27:37.005"/>
</kw>
<status status="PASS" starttime="20250325 21:27:36.292" endtime="20250325 21:27:37.005"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:27:30.822" endtime="20250325 21:27:37.005"/>
</test>
<test id="s1-s2-s3-t2" name="Create Bucket" line="55">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test-owner1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:37.009" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test-owner1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:38.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:38.740" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test-owner1"
}</msg>
<status status="PASS" starttime="20250325 21:27:37.007" endtime="20250325 21:27:38.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:38.741" level="INFO">{
    "Location": "http://s3g:9878/bucket-test-owner1"
}</msg>
<status status="PASS" starttime="20250325 21:27:38.740" endtime="20250325 21:27:38.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:38.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:38.741" endtime="20250325 21:27:38.741"/>
</kw>
<status status="PASS" starttime="20250325 21:27:37.007" endtime="20250325 21:27:38.742"/>
</kw>
<msg timestamp="20250325 21:27:38.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:37.007" endtime="20250325 21:27:38.742"/>
</kw>
<msg timestamp="20250325 21:27:38.742" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test-owner1"
}</msg>
<status status="PASS" starttime="20250325 21:27:37.006" endtime="20250325 21:27:38.742"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test-owner1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:27:38.742" endtime="20250325 21:27:38.742"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:27:37.006" endtime="20250325 21:27:38.742"/>
</test>
<test id="s1-s2-s3-t3" name="Verify Owner of Uploaded S3 Object By testuser" line="59">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:38.746" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250325 21:27:38.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:38.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:38.744" endtime="20250325 21:27:38.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:38.749" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:38.749" endtime="20250325 21:27:38.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:38.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:38.749" endtime="20250325 21:27:38.750"/>
</kw>
<status status="PASS" starttime="20250325 21:27:38.744" endtime="20250325 21:27:38.750"/>
</kw>
<msg timestamp="20250325 21:27:38.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:38.744" endtime="20250325 21:27:38.750"/>
</kw>
<status status="PASS" starttime="20250325 21:27:38.743" endtime="20250325 21:27:38.750"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} put-object --bucket bucket-test-owner1 --key mykey --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:38.752" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-test-owner1 --key mykey --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:41.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:41.149" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:27:38.750" endtime="20250325 21:27:41.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:41.150" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:27:41.149" endtime="20250325 21:27:41.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:41.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:41.150" endtime="20250325 21:27:41.150"/>
</kw>
<status status="PASS" starttime="20250325 21:27:38.750" endtime="20250325 21:27:41.150"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/bucket-test-owner1/mykey | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:41.153" level="INFO">Running command 'ozone sh key info /s3v/bucket-test-owner1/mykey | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:44.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:44.436" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250325 21:27:41.151" endtime="20250325 21:27:44.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:44.437" level="INFO">testuser</msg>
<status status="PASS" starttime="20250325 21:27:44.436" endtime="20250325 21:27:44.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:44.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:44.437" endtime="20250325 21:27:44.437"/>
</kw>
<status status="PASS" starttime="20250325 21:27:41.151" endtime="20250325 21:27:44.437"/>
</kw>
<msg timestamp="20250325 21:27:44.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:41.151" endtime="20250325 21:27:44.438"/>
</kw>
<msg timestamp="20250325 21:27:44.438" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20250325 21:27:41.150" endtime="20250325 21:27:44.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:27:44.438" endtime="20250325 21:27:44.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:27:38.743" endtime="20250325 21:27:44.438"/>
</test>
<doc>This test suite verifies the functionality of S3 secure mode in a Ceph cluster environment using docker-compose.</doc>
<status status="PASS" starttime="20250325 21:27:30.803" endtime="20250325 21:27:44.439"/>
</suite>
<suite id="s1-s2-s4" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s2-s4-t1" name="Secure S3 test Success" line="37">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup s3 tests</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:27:44.448" endtime="20250325 21:27:44.449"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:27:44.450" level="INFO">${randStr} = 2103303924</msg>
<status status="PASS" starttime="20250325 21:27:44.449" endtime="20250325 21:27:44.450"/>
</kw>
<msg timestamp="20250325 21:27:44.450" level="INFO">${random} = ozone-test-2103303924</msg>
<status status="PASS" starttime="20250325 21:27:44.449" endtime="20250325 21:27:44.450"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:27:44.451" level="INFO">${PREFIX} = ozone-test-2103303924</msg>
<status status="PASS" starttime="20250325 21:27:44.450" endtime="20250325 21:27:44.451"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.449" endtime="20250325 21:27:44.451"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.449" endtime="20250325 21:27:44.451"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:44.453" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:44.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:44.456" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20250325 21:27:44.451" endtime="20250325 21:27:44.456"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:27:44.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:44.456" endtime="20250325 21:27:44.457"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250325 21:27:44.457" endtime="20250325 21:27:44.457"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:27:44.457" endtime="20250325 21:27:44.457"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250325 21:27:44.457" endtime="20250325 21:27:44.457"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:27:44.457" endtime="20250325 21:27:44.457"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.451" endtime="20250325 21:27:44.457"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.451" endtime="20250325 21:27:44.457"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:27:44.459" endtime="20250325 21:27:44.459"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:44.462" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:44.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:44.465" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:27:44.460" endtime="20250325 21:27:44.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:44.466" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:27:44.466" endtime="20250325 21:27:44.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:44.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:44.466" endtime="20250325 21:27:44.466"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.460" endtime="20250325 21:27:44.467"/>
</kw>
<msg timestamp="20250325 21:27:44.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:44.459" endtime="20250325 21:27:44.467"/>
</kw>
<msg timestamp="20250325 21:27:44.467" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:27:44.459" endtime="20250325 21:27:44.467"/>
</kw>
<msg timestamp="20250325 21:27:44.467" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:27:44.459" endtime="20250325 21:27:44.467"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:27:44.467" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:27:44.467" endtime="20250325 21:27:44.467"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:44.471" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:44.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:44.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:44.469" endtime="20250325 21:27:44.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:44.488" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:44.487" endtime="20250325 21:27:44.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:44.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:44.488" endtime="20250325 21:27:44.488"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.469" endtime="20250325 21:27:44.488"/>
</kw>
<msg timestamp="20250325 21:27:44.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:44.468" endtime="20250325 21:27:44.488"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.468" endtime="20250325 21:27:44.488"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.467" endtime="20250325 21:27:44.488"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.458" endtime="20250325 21:27:44.488"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.458" endtime="20250325 21:27:44.488"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:44.491" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:47.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:47.039" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8fda9aabf46213951d631a628fbbfaab632c775166c0b0e4a8a92d08b1e8b976</msg>
<status status="PASS" starttime="20250325 21:27:44.489" endtime="20250325 21:27:47.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:47.040" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8fda9aabf46213951d631a628fbbfaab632c775166c0b0e4a8a92d08b1e8b976</msg>
<status status="PASS" starttime="20250325 21:27:47.040" endtime="20250325 21:27:47.040"/>
</kw>
<msg timestamp="20250325 21:27:47.040" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8fda9aabf46213951d631a628fbbfaab632c775166c0b0e4a8a92d08b1e8b976</msg>
<status status="PASS" starttime="20250325 21:27:44.489" endtime="20250325 21:27:47.041"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250325 21:27:47.041" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8fda9aabf46213951d631a628fbbfaab632c775166c0b0e4a8a92d08b1e8b976' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20250325 21:27:47.041" endtime="20250325 21:27:47.041"/>
</kw>
<msg timestamp="20250325 21:27:47.041" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250325 21:27:47.041" endtime="20250325 21:27:47.041"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250325 21:27:47.042" endtime="20250325 21:27:47.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250325 21:27:47.042" endtime="20250325 21:27:47.042"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:27:47.042" endtime="20250325 21:27:47.042"/>
</branch>
<status status="PASS" starttime="20250325 21:27:47.042" endtime="20250325 21:27:47.042"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250325 21:27:47.042" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250325 21:27:47.042" endtime="20250325 21:27:47.042"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250325 21:27:47.043" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250325 21:27:47.043" endtime="20250325 21:27:47.043"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250325 21:27:47.043" level="INFO">${secret} = ['8fda9aabf46213951d631a628fbbfaab632c775166c0b0e4a8a92d08b1e8b976']</msg>
<status status="PASS" starttime="20250325 21:27:47.043" endtime="20250325 21:27:47.043"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:27:47.044" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:27:47.043" endtime="20250325 21:27:47.044"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:27:47.045" level="INFO">${secret} = 8fda9aabf46213951d631a628fbbfaab632c775166c0b0e4a8a92d08b1e8b976</msg>
<status status="PASS" starttime="20250325 21:27:47.044" endtime="20250325 21:27:47.045"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:47.049" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:47.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:47.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:47.046" endtime="20250325 21:27:47.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:47.395" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:47.394" endtime="20250325 21:27:47.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:47.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:47.395" endtime="20250325 21:27:47.395"/>
</kw>
<status status="PASS" starttime="20250325 21:27:47.045" endtime="20250325 21:27:47.395"/>
</kw>
<msg timestamp="20250325 21:27:47.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:47.045" endtime="20250325 21:27:47.396"/>
</kw>
<status status="PASS" starttime="20250325 21:27:47.045" endtime="20250325 21:27:47.396"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:47.399" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:47.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:47.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:47.397" endtime="20250325 21:27:47.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:47.737" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:47.736" endtime="20250325 21:27:47.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:47.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:47.737" endtime="20250325 21:27:47.737"/>
</kw>
<status status="PASS" starttime="20250325 21:27:47.396" endtime="20250325 21:27:47.737"/>
</kw>
<msg timestamp="20250325 21:27:47.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:47.396" endtime="20250325 21:27:47.737"/>
</kw>
<status status="PASS" starttime="20250325 21:27:47.396" endtime="20250325 21:27:47.737"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:47.741" level="INFO">Running command 'aws configure set aws_secret_access_key 8fda9aabf46213951d631a628fbbfaab632c775166c0b0e4a8a92d08b1e8b976 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:48.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:48.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:47.738" endtime="20250325 21:27:48.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:48.081" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:48.081" endtime="20250325 21:27:48.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:48.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:48.082" endtime="20250325 21:27:48.082"/>
</kw>
<status status="PASS" starttime="20250325 21:27:47.738" endtime="20250325 21:27:48.082"/>
</kw>
<msg timestamp="20250325 21:27:48.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:47.738" endtime="20250325 21:27:48.082"/>
</kw>
<status status="PASS" starttime="20250325 21:27:47.738" endtime="20250325 21:27:48.082"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:48.086" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:48.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:48.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:48.083" endtime="20250325 21:27:48.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:48.422" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:48.422" endtime="20250325 21:27:48.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:48.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:48.423" endtime="20250325 21:27:48.423"/>
</kw>
<status status="PASS" starttime="20250325 21:27:48.083" endtime="20250325 21:27:48.423"/>
</kw>
<msg timestamp="20250325 21:27:48.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:48.083" endtime="20250325 21:27:48.423"/>
</kw>
<status status="PASS" starttime="20250325 21:27:48.083" endtime="20250325 21:27:48.423"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:48.426" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:48.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:48.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:48.424" endtime="20250325 21:27:48.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:48.786" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:48.786" endtime="20250325 21:27:48.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:48.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:48.787" endtime="20250325 21:27:48.787"/>
</kw>
<status status="PASS" starttime="20250325 21:27:48.424" endtime="20250325 21:27:48.787"/>
</kw>
<msg timestamp="20250325 21:27:48.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:48.424" endtime="20250325 21:27:48.787"/>
</kw>
<status status="PASS" starttime="20250325 21:27:48.423" endtime="20250325 21:27:48.787"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.489" endtime="20250325 21:27:48.787"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.489" endtime="20250325 21:27:48.787"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:27:48.787" endtime="20250325 21:27:48.788"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.458" endtime="20250325 21:27:48.788"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.458" endtime="20250325 21:27:48.788"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create generated bucket" library="commonawslib">
<arg>${BUCKET_LAYOUT}</arg>
<kw name="Create bucket with layout" library="shell">
<var>${BUCKET}</var>
<arg>s3v</arg>
<arg>${layout}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:27:48.789" level="INFO">${postfix} = mayhyhrcee</msg>
<status status="PASS" starttime="20250325 21:27:48.789" endtime="20250325 21:27:48.789"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:27:48.789" level="INFO">${bucket} = bucket-mayhyhrcee</msg>
<status status="PASS" starttime="20250325 21:27:48.789" endtime="20250325 21:27:48.789"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --layout ${layout} ${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:48.793" level="INFO">Running command 'ozone sh bucket create --layout OBJECT_STORE s3v/bucket-mayhyhrcee 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:51.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:51.679" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:48.791" endtime="20250325 21:27:51.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:51.680" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:51.679" endtime="20250325 21:27:51.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:51.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:51.680" endtime="20250325 21:27:51.680"/>
</kw>
<status status="PASS" starttime="20250325 21:27:48.790" endtime="20250325 21:27:51.681"/>
</kw>
<msg timestamp="20250325 21:27:51.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:48.790" endtime="20250325 21:27:51.681"/>
</kw>
<msg timestamp="20250325 21:27:51.681" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:27:48.790" endtime="20250325 21:27:51.681"/>
</kw>
<msg timestamp="20250325 21:27:51.681" level="INFO">${BUCKET} = bucket-mayhyhrcee</msg>
<status status="PASS" starttime="20250325 21:27:48.789" endtime="20250325 21:27:51.681"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:27:51.681" level="INFO">${BUCKET} = bucket-mayhyhrcee</msg>
<status status="PASS" starttime="20250325 21:27:51.681" endtime="20250325 21:27:51.682"/>
</kw>
<status status="PASS" starttime="20250325 21:27:48.788" endtime="20250325 21:27:51.682"/>
</kw>
<status status="PASS" starttime="20250325 21:27:48.788" endtime="20250325 21:27:51.682"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:27:51.682" endtime="20250325 21:27:51.682"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:27:51.682" endtime="20250325 21:27:51.682"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:27:51.683" endtime="20250325 21:27:51.683"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:27:51.683" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20250325 21:27:51.683" endtime="20250325 21:27:51.683"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.448" endtime="20250325 21:27:51.683"/>
</kw>
<status status="PASS" starttime="20250325 21:27:44.448" endtime="20250325 21:27:51.683"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:51.686" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:53.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:53.281" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20250325 21:27:51.684" endtime="20250325 21:27:53.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:53.282" level="INFO">{
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20250325 21:27:53.281" endtime="20250325 21:27:53.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:53.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:53.282" endtime="20250325 21:27:53.282"/>
</kw>
<status status="PASS" starttime="20250325 21:27:51.684" endtime="20250325 21:27:53.283"/>
</kw>
<msg timestamp="20250325 21:27:53.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:51.684" endtime="20250325 21:27:53.283"/>
</kw>
<msg timestamp="20250325 21:27:53.283" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20250325 21:27:51.683" endtime="20250325 21:27:53.283"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:53.286" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:53.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:53.802" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-mayhyhrcee",
            "CreationDate": "2025-03-25T21:27:51.591Z"
        },
        {
            "Name": "bucket-test-owner1",
            ...</msg>
<status status="PASS" starttime="20250325 21:27:53.284" endtime="20250325 21:27:53.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:53.803" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-mayhyhrcee",
            "CreationDate": "2025-03-25T21:27:51.591Z"
        },
        {
            "Name": "bucket-test-owner1",
            "CreationDate": "2025-03-25T21:27:38.662Z"
        },
        {
            "Name": "bucket-test123",
            "CreationDate": "2025-03-25T21:27:53.175Z"
        }
    ],
    "Owner": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:27:53.803" endtime="20250325 21:27:53.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:53.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:53.803" endtime="20250325 21:27:53.804"/>
</kw>
<status status="PASS" starttime="20250325 21:27:53.284" endtime="20250325 21:27:53.804"/>
</kw>
<msg timestamp="20250325 21:27:53.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:53.283" endtime="20250325 21:27:53.804"/>
</kw>
<msg timestamp="20250325 21:27:53.804" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-mayhyhrcee",
            "CreationDate": "2025-03-25T21:27:51.591Z"
        },
        {
            "Name": "bucket-test-owner1",
            ...</msg>
<status status="PASS" starttime="20250325 21:27:53.283" endtime="20250325 21:27:53.804"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test123</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:27:53.804" endtime="20250325 21:27:53.804"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:27:44.448" endtime="20250325 21:27:53.804"/>
</test>
<test id="s1-s2-s4-t2" name="Secure S3 put-object test" line="43">
<kw name="Set Variable" library="BuiltIn">
<var>${testFilePath}</var>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:27:53.806" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20250325 21:27:53.805" endtime="20250325 21:27:53.806"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20250325 21:27:53.807" level="INFO" html="true">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250325 21:27:53.806" endtime="20250325 21:27:53.807"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:53.810" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:54.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:54.383" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250325 21:27:53.808" endtime="20250325 21:27:54.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:54.384" level="INFO">{
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250325 21:27:54.383" endtime="20250325 21:27:54.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:54.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:54.384" endtime="20250325 21:27:54.384"/>
</kw>
<status status="PASS" starttime="20250325 21:27:53.808" endtime="20250325 21:27:54.384"/>
</kw>
<msg timestamp="20250325 21:27:54.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:53.808" endtime="20250325 21:27:54.385"/>
</kw>
<msg timestamp="20250325 21:27:54.385" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250325 21:27:53.807" endtime="20250325 21:27:54.385"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:54.388" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:54.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:54.917" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-03-25T21:27:54.333Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
    ...</msg>
<status status="PASS" starttime="20250325 21:27:54.386" endtime="20250325 21:27:54.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:54.919" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-03-25T21:27:54.333Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:27:54.918" endtime="20250325 21:27:54.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:54.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:54.919" endtime="20250325 21:27:54.919"/>
</kw>
<status status="PASS" starttime="20250325 21:27:54.386" endtime="20250325 21:27:54.919"/>
</kw>
<msg timestamp="20250325 21:27:54.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:54.385" endtime="20250325 21:27:54.920"/>
</kw>
<msg timestamp="20250325 21:27:54.920" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-03-25T21:27:54.333Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
    ...</msg>
<status status="PASS" starttime="20250325 21:27:54.385" endtime="20250325 21:27:54.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:27:54.920" endtime="20250325 21:27:54.920"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:54.924" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:56.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:56.137" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250325 21:27:54.922" endtime="20250325 21:27:56.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:56.138" level="INFO">{
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250325 21:27:56.137" endtime="20250325 21:27:56.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:56.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:56.138" endtime="20250325 21:27:56.138"/>
</kw>
<status status="PASS" starttime="20250325 21:27:54.921" endtime="20250325 21:27:56.138"/>
</kw>
<msg timestamp="20250325 21:27:56.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:54.921" endtime="20250325 21:27:56.139"/>
</kw>
<msg timestamp="20250325 21:27:56.139" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250325 21:27:54.920" endtime="20250325 21:27:56.139"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:56.142" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:56.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:56.654" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-03-25T21:27:54.333Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
    ...</msg>
<status status="PASS" starttime="20250325 21:27:56.140" endtime="20250325 21:27:56.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:56.655" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-03-25T21:27:54.333Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2025-03-25T21:27:56.063Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:27:56.655" endtime="20250325 21:27:56.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:56.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:56.655" endtime="20250325 21:27:56.656"/>
</kw>
<status status="PASS" starttime="20250325 21:27:56.140" endtime="20250325 21:27:56.656"/>
</kw>
<msg timestamp="20250325 21:27:56.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:56.139" endtime="20250325 21:27:56.656"/>
</kw>
<msg timestamp="20250325 21:27:56.656" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-03-25T21:27:54.333Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
    ...</msg>
<status status="PASS" starttime="20250325 21:27:56.139" endtime="20250325 21:27:56.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:27:56.656" endtime="20250325 21:27:56.656"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:56.660" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:57.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:57.777" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250325 21:27:56.658" endtime="20250325 21:27:57.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:57.778" level="INFO">{
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250325 21:27:57.777" endtime="20250325 21:27:57.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:57.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:57.778" endtime="20250325 21:27:57.778"/>
</kw>
<status status="PASS" starttime="20250325 21:27:56.657" endtime="20250325 21:27:57.778"/>
</kw>
<msg timestamp="20250325 21:27:57.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:56.657" endtime="20250325 21:27:57.778"/>
</kw>
<msg timestamp="20250325 21:27:57.779" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250325 21:27:56.657" endtime="20250325 21:27:57.779"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:57.782" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:58.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:58.284" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2025-03-25T21:27:57.721Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
  ...</msg>
<status status="PASS" starttime="20250325 21:27:57.780" endtime="20250325 21:27:58.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:58.285" level="INFO">{
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2025-03-25T21:27:57.721Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-03-25T21:27:54.333Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2025-03-25T21:27:56.063Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:27:58.285" endtime="20250325 21:27:58.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:58.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:58.286" endtime="20250325 21:27:58.286"/>
</kw>
<status status="PASS" starttime="20250325 21:27:57.779" endtime="20250325 21:27:58.286"/>
</kw>
<msg timestamp="20250325 21:27:58.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:57.779" endtime="20250325 21:27:58.286"/>
</kw>
<msg timestamp="20250325 21:27:58.287" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2025-03-25T21:27:57.721Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
  ...</msg>
<status status="PASS" starttime="20250325 21:27:57.779" endtime="20250325 21:27:58.287"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:27:58.287" endtime="20250325 21:27:58.287"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:27:53.805" endtime="20250325 21:27:58.287"/>
</test>
<test id="s1-s2-s4-t3" name="Secure S3 test Failure" line="56">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:58.291" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:58.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:58.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:58.289" endtime="20250325 21:27:58.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:58.634" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:58.633" endtime="20250325 21:27:58.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:58.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:58.634" endtime="20250325 21:27:58.634"/>
</kw>
<status status="PASS" starttime="20250325 21:27:58.289" endtime="20250325 21:27:58.634"/>
</kw>
<msg timestamp="20250325 21:27:58.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:58.289" endtime="20250325 21:27:58.634"/>
</kw>
<status status="PASS" starttime="20250325 21:27:58.288" endtime="20250325 21:27:58.635"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:58.638" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:58.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:58.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:58.635" endtime="20250325 21:27:58.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:58.989" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:58.989" endtime="20250325 21:27:58.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:58.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:58.989" endtime="20250325 21:27:58.990"/>
</kw>
<status status="PASS" starttime="20250325 21:27:58.635" endtime="20250325 21:27:58.990"/>
</kw>
<msg timestamp="20250325 21:27:58.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:58.635" endtime="20250325 21:27:58.990"/>
</kw>
<status status="PASS" starttime="20250325 21:27:58.635" endtime="20250325 21:27:58.990"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:58.993" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:59.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:59.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:58.991" endtime="20250325 21:27:59.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:59.332" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:59.332" endtime="20250325 21:27:59.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:59.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:59.333" endtime="20250325 21:27:59.333"/>
</kw>
<status status="PASS" starttime="20250325 21:27:58.991" endtime="20250325 21:27:59.333"/>
</kw>
<msg timestamp="20250325 21:27:59.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:58.990" endtime="20250325 21:27:59.333"/>
</kw>
<status status="PASS" starttime="20250325 21:27:58.990" endtime="20250325 21:27:59.333"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:59.337" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:27:59.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:27:59.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:27:59.335" endtime="20250325 21:27:59.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:27:59.684" level="INFO"/>
<status status="PASS" starttime="20250325 21:27:59.684" endtime="20250325 21:27:59.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:27:59.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:27:59.684" endtime="20250325 21:27:59.685"/>
</kw>
<status status="PASS" starttime="20250325 21:27:59.334" endtime="20250325 21:27:59.685"/>
</kw>
<msg timestamp="20250325 21:27:59.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:27:59.334" endtime="20250325 21:27:59.685"/>
</kw>
<status status="PASS" starttime="20250325 21:27:59.334" endtime="20250325 21:27:59.685"/>
</kw>
<status status="PASS" starttime="20250325 21:27:58.288" endtime="20250325 21:27:59.685"/>
</kw>
<status status="PASS" starttime="20250325 21:27:58.288" endtime="20250325 21:27:59.685"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${result}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:27:59.687" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:00.288" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:28:00.288" level="INFO">${result} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250325 21:27:59.685" endtime="20250325 21:28:00.288"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250325 21:28:00.289" endtime="20250325 21:28:00.289"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:27:58.288" endtime="20250325 21:28:00.290"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20250325 21:27:44.440" endtime="20250325 21:28:00.290"/>
</suite>
<suite id="s1-s2-s5" name="Ozone-Secure-Tenant" source="/opt/hadoop/smoketest/security/ozone-secure-tenant.robot">
<test id="s1-s2-s5-t1" name="Create Tenant Success with Cluster Admin" line="30">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:28:00.300" endtime="20250325 21:28:00.300"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:00.303" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:00.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:00.307" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:28:00.301" endtime="20250325 21:28:00.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:00.308" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:28:00.307" endtime="20250325 21:28:00.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:00.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:00.308" endtime="20250325 21:28:00.308"/>
</kw>
<status status="PASS" starttime="20250325 21:28:00.301" endtime="20250325 21:28:00.308"/>
</kw>
<msg timestamp="20250325 21:28:00.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:00.301" endtime="20250325 21:28:00.308"/>
</kw>
<msg timestamp="20250325 21:28:00.308" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:28:00.300" endtime="20250325 21:28:00.308"/>
</kw>
<msg timestamp="20250325 21:28:00.309" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:28:00.300" endtime="20250325 21:28:00.309"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:28:00.309" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:28:00.309" endtime="20250325 21:28:00.309"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:00.312" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:00.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:00.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:00.310" endtime="20250325 21:28:00.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:00.333" level="INFO"/>
<status status="PASS" starttime="20250325 21:28:00.333" endtime="20250325 21:28:00.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:00.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:00.334" endtime="20250325 21:28:00.334"/>
</kw>
<status status="PASS" starttime="20250325 21:28:00.310" endtime="20250325 21:28:00.334"/>
</kw>
<msg timestamp="20250325 21:28:00.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:00.310" endtime="20250325 21:28:00.334"/>
</kw>
<status status="PASS" starttime="20250325 21:28:00.309" endtime="20250325 21:28:00.334"/>
</kw>
<status status="PASS" starttime="20250325 21:28:00.309" endtime="20250325 21:28:00.334"/>
</kw>
<status status="PASS" starttime="20250325 21:28:00.300" endtime="20250325 21:28:00.334"/>
</kw>
<status status="PASS" starttime="20250325 21:28:00.299" endtime="20250325 21:28:00.334"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose create tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:00.337" level="INFO">Running command 'ozone tenant --verbose create tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:03.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:03.295" level="INFO">${output} = {
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20250325 21:28:00.335" endtime="20250325 21:28:03.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:03.295" level="INFO">{
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20250325 21:28:03.295" endtime="20250325 21:28:03.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:03.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:03.296" endtime="20250325 21:28:03.296"/>
</kw>
<status status="PASS" starttime="20250325 21:28:00.335" endtime="20250325 21:28:03.296"/>
</kw>
<msg timestamp="20250325 21:28:03.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:00.335" endtime="20250325 21:28:03.296"/>
</kw>
<msg timestamp="20250325 21:28:03.296" level="INFO">${output} = {
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20250325 21:28:00.334" endtime="20250325 21:28:03.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantId" : "tenantone"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:03.296" endtime="20250325 21:28:03.297"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:00.299" endtime="20250325 21:28:03.297"/>
</test>
<test id="s1-s2-s5-t2" name="Assign User Success with Cluster Admin" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user assign testuser --tenant=tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:03.301" level="INFO">Running command 'ozone tenant --verbose user assign testuser --tenant=tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:06.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:06.329" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='1006907cf1363f0dfaba6777e204752bb10edfa68cb1b36de73fe041de99386d'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20250325 21:28:03.299" endtime="20250325 21:28:06.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:06.330" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='1006907cf1363f0dfaba6777e204752bb10edfa68cb1b36de73fe041de99386d'
Assigned 'testuser' to 'tenantone' with accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20250325 21:28:06.329" endtime="20250325 21:28:06.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:06.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:06.330" endtime="20250325 21:28:06.330"/>
</kw>
<status status="PASS" starttime="20250325 21:28:03.298" endtime="20250325 21:28:06.330"/>
</kw>
<msg timestamp="20250325 21:28:06.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:03.298" endtime="20250325 21:28:06.330"/>
</kw>
<msg timestamp="20250325 21:28:06.330" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='1006907cf1363f0dfaba6777e204752bb10edfa68cb1b36de73fe041de99386d'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20250325 21:28:03.298" endtime="20250325 21:28:06.330"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Assigned 'testuser' to 'tenantone'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:06.331" endtime="20250325 21:28:06.331"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_ACCESS_KEY_ID=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250325 21:28:06.331" level="INFO">${accessId} = ["'tenantone$testuser'"]</msg>
<status status="PASS" starttime="20250325 21:28:06.331" endtime="20250325 21:28:06.331"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_SECRET_ACCESS_KEY=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250325 21:28:06.332" level="INFO">${secretKey} = ["'1006907cf1363f0dfaba6777e204752bb10edfa68cb1b36de73fe041de99386d'"]</msg>
<status status="PASS" starttime="20250325 21:28:06.332" endtime="20250325 21:28:06.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:28:06.333" level="INFO">${accessId} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250325 21:28:06.332" endtime="20250325 21:28:06.333"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:28:06.334" level="INFO">${secretKey} = '1006907cf1363f0dfaba6777e204752bb10edfa68cb1b36de73fe041de99386d'</msg>
<status status="PASS" starttime="20250325 21:28:06.333" endtime="20250325 21:28:06.334"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:28:06.334" level="INFO">${ACCESS_ID} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250325 21:28:06.334" endtime="20250325 21:28:06.334"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:28:06.335" level="INFO">${SECRET_KEY} = '1006907cf1363f0dfaba6777e204752bb10edfa68cb1b36de73fe041de99386d'</msg>
<status status="PASS" starttime="20250325 21:28:06.334" endtime="20250325 21:28:06.335"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:03.297" endtime="20250325 21:28:06.335"/>
</test>
<test id="s1-s2-s5-t3" name="Assign User Failure to Non-existent Tenant" line="45">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user assign testuser --tenant=thistenantdoesnotexist</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:06.338" level="INFO">Running command 'ozone tenant user assign testuser --tenant=thistenantdoesnotexist 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:09.333" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:28:09.333" level="INFO">${output} = TENANT_NOT_FOUND Tenant 'thistenantdoesnotexist' doesn't exist.</msg>
<status status="PASS" starttime="20250325 21:28:06.336" endtime="20250325 21:28:09.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'thistenantdoesnotexist' doesn't exist</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:09.333" endtime="20250325 21:28:09.334"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:06.335" endtime="20250325 21:28:09.334"/>
</test>
<test id="s1-s2-s5-t4" name="GetUserInfo Success" line="49">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:09.338" level="INFO">Running command 'ozone tenant user info testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:12.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:12.157" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250325 21:28:09.336" endtime="20250325 21:28:12.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:12.158" level="INFO">User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250325 21:28:12.158" endtime="20250325 21:28:12.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:12.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:12.158" endtime="20250325 21:28:12.159"/>
</kw>
<status status="PASS" starttime="20250325 21:28:09.336" endtime="20250325 21:28:12.159"/>
</kw>
<msg timestamp="20250325 21:28:12.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:09.336" endtime="20250325 21:28:12.159"/>
</kw>
<msg timestamp="20250325 21:28:12.159" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250325 21:28:09.335" endtime="20250325 21:28:12.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'tenantone' with accessId 'tenantone$testuser'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:12.159" endtime="20250325 21:28:12.159"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:09.335" endtime="20250325 21:28:12.160"/>
</test>
<test id="s1-s2-s5-t5" name="GetUserInfo as JSON Success" line="53">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info --json testuser | jq '.tenants | .[].accessId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:12.163" level="INFO">Running command 'ozone tenant user info --json testuser | jq '.tenants | .[].accessId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:15.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:15.253" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20250325 21:28:12.161" endtime="20250325 21:28:15.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:15.255" level="INFO">"tenantone$testuser"</msg>
<status status="PASS" starttime="20250325 21:28:15.254" endtime="20250325 21:28:15.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:15.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:15.255" endtime="20250325 21:28:15.255"/>
</kw>
<status status="PASS" starttime="20250325 21:28:12.161" endtime="20250325 21:28:15.256"/>
</kw>
<msg timestamp="20250325 21:28:15.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:12.161" endtime="20250325 21:28:15.256"/>
</kw>
<msg timestamp="20250325 21:28:15.256" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20250325 21:28:12.160" endtime="20250325 21:28:15.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantone$testuser"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:15.256" endtime="20250325 21:28:15.257"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:12.160" endtime="20250325 21:28:15.257"/>
</test>
<test id="s1-s2-s5-t6" name="Create Bucket 1 Success via S3 API" line="57">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${ACCESS_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:15.262" level="INFO">Running command 'aws configure set aws_access_key_id 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:15.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:15.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:15.259" endtime="20250325 21:28:15.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:15.633" level="INFO"/>
<status status="PASS" starttime="20250325 21:28:15.633" endtime="20250325 21:28:15.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:15.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:15.633" endtime="20250325 21:28:15.634"/>
</kw>
<status status="PASS" starttime="20250325 21:28:15.259" endtime="20250325 21:28:15.634"/>
</kw>
<msg timestamp="20250325 21:28:15.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:15.258" endtime="20250325 21:28:15.634"/>
</kw>
<status status="PASS" starttime="20250325 21:28:15.258" endtime="20250325 21:28:15.634"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${SECRET_KEY}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:15.637" level="INFO">Running command 'aws configure set aws_secret_access_key '1006907cf1363f0dfaba6777e204752bb10edfa68cb1b36de73fe041de99386d' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:15.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:15.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:15.635" endtime="20250325 21:28:15.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:15.973" level="INFO"/>
<status status="PASS" starttime="20250325 21:28:15.973" endtime="20250325 21:28:15.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:15.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:15.973" endtime="20250325 21:28:15.974"/>
</kw>
<status status="PASS" starttime="20250325 21:28:15.635" endtime="20250325 21:28:15.974"/>
</kw>
<msg timestamp="20250325 21:28:15.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:15.635" endtime="20250325 21:28:15.974"/>
</kw>
<status status="PASS" starttime="20250325 21:28:15.634" endtime="20250325 21:28:15.974"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:15.977" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:16.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:16.469" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20250325 21:28:15.975" endtime="20250325 21:28:16.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:16.470" level="INFO">{
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20250325 21:28:16.469" endtime="20250325 21:28:16.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:16.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:16.470" endtime="20250325 21:28:16.470"/>
</kw>
<status status="PASS" starttime="20250325 21:28:15.975" endtime="20250325 21:28:16.470"/>
</kw>
<msg timestamp="20250325 21:28:16.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:15.975" endtime="20250325 21:28:16.471"/>
</kw>
<msg timestamp="20250325 21:28:16.471" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20250325 21:28:15.974" endtime="20250325 21:28:16.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:16.471" endtime="20250325 21:28:16.471"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:16.474" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:16.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:16.976" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2025-03-25T21:28:16.408Z"
        }
    ],
    "Owner": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:28:16.472" endtime="20250325 21:28:16.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:16.977" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2025-03-25T21:28:16.408Z"
        }
    ],
    "Owner": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:28:16.976" endtime="20250325 21:28:16.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:16.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:16.977" endtime="20250325 21:28:16.977"/>
</kw>
<status status="PASS" starttime="20250325 21:28:16.472" endtime="20250325 21:28:16.977"/>
</kw>
<msg timestamp="20250325 21:28:16.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:16.472" endtime="20250325 21:28:16.977"/>
</kw>
<msg timestamp="20250325 21:28:16.977" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2025-03-25T21:28:16.408Z"
        }
    ],
    "Owner": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:28:16.471" endtime="20250325 21:28:16.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:16.978" endtime="20250325 21:28:16.978"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:15.257" endtime="20250325 21:28:16.978"/>
</test>
<test id="s1-s2-s5-t7" name="Verify Bucket 1 Owner" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:16.982" level="INFO">Running command 'ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:20.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:20.156" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250325 21:28:16.980" endtime="20250325 21:28:20.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:20.157" level="INFO">testuser</msg>
<status status="PASS" starttime="20250325 21:28:20.157" endtime="20250325 21:28:20.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:20.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:20.158" endtime="20250325 21:28:20.158"/>
</kw>
<status status="PASS" starttime="20250325 21:28:16.979" endtime="20250325 21:28:20.158"/>
</kw>
<msg timestamp="20250325 21:28:20.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:16.979" endtime="20250325 21:28:20.158"/>
</kw>
<msg timestamp="20250325 21:28:20.158" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20250325 21:28:16.979" endtime="20250325 21:28:20.158"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:28:20.158" endtime="20250325 21:28:20.159"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:16.978" endtime="20250325 21:28:20.159"/>
</test>
<test id="s1-s2-s5-t8" name="Put a key in the tenant bucket" line="69">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:20.163" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250325 21:28:20.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:20.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:20.161" endtime="20250325 21:28:20.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:20.166" level="INFO"/>
<status status="PASS" starttime="20250325 21:28:20.165" endtime="20250325 21:28:20.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:20.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:20.166" endtime="20250325 21:28:20.166"/>
</kw>
<status status="PASS" starttime="20250325 21:28:20.160" endtime="20250325 21:28:20.166"/>
</kw>
<msg timestamp="20250325 21:28:20.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:20.160" endtime="20250325 21:28:20.166"/>
</kw>
<status status="PASS" starttime="20250325 21:28:20.160" endtime="20250325 21:28:20.166"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} put-object --bucket bucket-test1 --key mykey --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:20.169" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-test1 --key mykey --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:20.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:20.743" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:28:20.167" endtime="20250325 21:28:20.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:20.744" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:28:20.744" endtime="20250325 21:28:20.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:20.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:20.744" endtime="20250325 21:28:20.745"/>
</kw>
<status status="PASS" starttime="20250325 21:28:20.166" endtime="20250325 21:28:20.745"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:20.159" endtime="20250325 21:28:20.745"/>
</test>
<test id="s1-s2-s5-t9" name="Verify Object Owner" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /tenantone/bucket-test1/mykey | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:20.749" level="INFO">Running command 'ozone sh key info /tenantone/bucket-test1/mykey | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:24.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:24.120" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250325 21:28:20.747" endtime="20250325 21:28:24.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:24.121" level="INFO">testuser</msg>
<status status="PASS" starttime="20250325 21:28:24.121" endtime="20250325 21:28:24.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:24.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:24.122" endtime="20250325 21:28:24.122"/>
</kw>
<status status="PASS" starttime="20250325 21:28:20.746" endtime="20250325 21:28:24.122"/>
</kw>
<msg timestamp="20250325 21:28:24.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:20.746" endtime="20250325 21:28:24.122"/>
</kw>
<msg timestamp="20250325 21:28:24.122" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20250325 21:28:20.746" endtime="20250325 21:28:24.122"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:28:24.122" endtime="20250325 21:28:24.123"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:20.745" endtime="20250325 21:28:24.123"/>
</test>
<test id="s1-s2-s5-t10" name="Get and delete a key in the tenant bucket" line="77">
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} head-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:24.126" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:24.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:24.602" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:28:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:28:24.124" endtime="20250325 21:28:24.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:24.603" level="INFO">{
    "LastModified": "Tue, 25 Mar 2025 21:28:20 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:28:24 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:28:24 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:28:24.602" endtime="20250325 21:28:24.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:24.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:24.603" endtime="20250325 21:28:24.603"/>
</kw>
<status status="PASS" starttime="20250325 21:28:24.124" endtime="20250325 21:28:24.603"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:24.606" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:25.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:25.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:24.604" endtime="20250325 21:28:25.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:25.093" level="INFO"/>
<status status="PASS" starttime="20250325 21:28:25.092" endtime="20250325 21:28:25.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:25.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:25.093" endtime="20250325 21:28:25.093"/>
</kw>
<status status="PASS" starttime="20250325 21:28:24.603" endtime="20250325 21:28:25.093"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:24.123" endtime="20250325 21:28:25.093"/>
</test>
<test id="s1-s2-s5-t11" name="SetSecret Success with Cluster Admin" line="81">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:25.098" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:28.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:28.054" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250325 21:28:25.095" endtime="20250325 21:28:28.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:28.055" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250325 21:28:28.054" endtime="20250325 21:28:28.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:28.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:28.055" endtime="20250325 21:28:28.055"/>
</kw>
<status status="PASS" starttime="20250325 21:28:25.095" endtime="20250325 21:28:28.055"/>
</kw>
<msg timestamp="20250325 21:28:28.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:25.095" endtime="20250325 21:28:28.056"/>
</kw>
<msg timestamp="20250325 21:28:28.056" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250325 21:28:25.094" endtime="20250325 21:28:28.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:28.056" endtime="20250325 21:28:28.056"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:25.094" endtime="20250325 21:28:28.056"/>
</test>
<test id="s1-s2-s5-t12" name="SetSecret Failure For Invalid Secret 1" line="85">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=''</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:28.059" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret='' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:31.022" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:28:31.022" level="INFO">${output} = secretKey cannot be null or empty.</msg>
<status status="PASS" starttime="20250325 21:28:28.057" endtime="20250325 21:28:31.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>secretKey cannot be null or empty.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:31.023" endtime="20250325 21:28:31.023"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:28.057" endtime="20250325 21:28:31.024"/>
</test>
<test id="s1-s2-s5-t13" name="SetSecret Failure For Invalid Secret 2" line="89">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=short</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:31.027" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=short 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:33.857" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:28:33.857" level="INFO">${output} = INVALID_REQUEST Secret key length should be at least 8 characters</msg>
<status status="PASS" starttime="20250325 21:28:31.025" endtime="20250325 21:28:33.857"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Secret key length should be at least 8 characters</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:33.857" endtime="20250325 21:28:33.858"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:31.024" endtime="20250325 21:28:33.858"/>
</test>
<test id="s1-s2-s5-t14" name="GetSecret Success" line="93">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user getsecret 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:33.862" level="INFO">Running command 'ozone tenant user getsecret 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:36.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:36.589" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250325 21:28:33.860" endtime="20250325 21:28:36.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:36.590" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250325 21:28:36.590" endtime="20250325 21:28:36.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:36.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:36.590" endtime="20250325 21:28:36.591"/>
</kw>
<status status="PASS" starttime="20250325 21:28:33.859" endtime="20250325 21:28:36.591"/>
</kw>
<msg timestamp="20250325 21:28:36.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:33.859" endtime="20250325 21:28:36.591"/>
</kw>
<msg timestamp="20250325 21:28:36.591" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250325 21:28:33.859" endtime="20250325 21:28:36.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:36.591" endtime="20250325 21:28:36.591"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:33.858" endtime="20250325 21:28:36.591"/>
</test>
<test id="s1-s2-s5-t15" name="Delete Bucket 1 Failure With Old SecretKey via S3 API" line="97">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:36.595" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:37.074" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:28:37.074" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250325 21:28:36.592" endtime="20250325 21:28:37.074"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250325 21:28:37.075" endtime="20250325 21:28:37.075"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:36.592" endtime="20250325 21:28:37.075"/>
</test>
<test id="s1-s2-s5-t16" name="Delete Bucket 1 Success With Newly Set SecretKey via S3 API" line="101">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:37.079" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:37.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:37.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:37.077" endtime="20250325 21:28:37.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:37.422" level="INFO"/>
<status status="PASS" starttime="20250325 21:28:37.421" endtime="20250325 21:28:37.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:37.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:37.422" endtime="20250325 21:28:37.422"/>
</kw>
<status status="PASS" starttime="20250325 21:28:37.077" endtime="20250325 21:28:37.423"/>
</kw>
<msg timestamp="20250325 21:28:37.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:37.077" endtime="20250325 21:28:37.423"/>
</kw>
<status status="PASS" starttime="20250325 21:28:37.076" endtime="20250325 21:28:37.423"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:37.427" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:37.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:37.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:37.424" endtime="20250325 21:28:37.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:37.897" level="INFO"/>
<status status="PASS" starttime="20250325 21:28:37.897" endtime="20250325 21:28:37.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:37.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:37.897" endtime="20250325 21:28:37.898"/>
</kw>
<status status="PASS" starttime="20250325 21:28:37.423" endtime="20250325 21:28:37.898"/>
</kw>
<msg timestamp="20250325 21:28:37.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:37.423" endtime="20250325 21:28:37.898"/>
</kw>
<msg timestamp="20250325 21:28:37.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:37.423" endtime="20250325 21:28:37.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:37.076" endtime="20250325 21:28:37.898"/>
</test>
<test id="s1-s2-s5-t17" name="Delete Tenant Failure Tenant Not Empty" line="105">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:37.901" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:40.799" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:28:40.799" level="INFO">${output} = TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</msg>
<status status="PASS" starttime="20250325 21:28:37.899" endtime="20250325 21:28:40.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:40.800" endtime="20250325 21:28:40.800"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:37.899" endtime="20250325 21:28:40.801"/>
</test>
<test id="s1-s2-s5-t18" name="Trigger and wait for background Sync to recover Policies and Roles in Authorizer" line="109">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone admin om updateranger -host=om</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:40.804" level="INFO">Running command 'ozone admin om updateranger -host=om 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:43.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:43.406" level="INFO">${output} = Operation completed successfully</msg>
<status status="PASS" starttime="20250325 21:28:40.802" endtime="20250325 21:28:43.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Operation completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:43.406" endtime="20250325 21:28:43.407"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:40.801" endtime="20250325 21:28:43.407"/>
</test>
<test id="s1-s2-s5-t19" name="Create Tenant Failure with Regular User" line="113">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:28:43.411" endtime="20250325 21:28:43.412"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:43.416" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:43.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:43.420" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:28:43.413" endtime="20250325 21:28:43.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:43.421" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:28:43.421" endtime="20250325 21:28:43.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:43.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:43.421" endtime="20250325 21:28:43.422"/>
</kw>
<status status="PASS" starttime="20250325 21:28:43.413" endtime="20250325 21:28:43.422"/>
</kw>
<msg timestamp="20250325 21:28:43.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:43.412" endtime="20250325 21:28:43.422"/>
</kw>
<msg timestamp="20250325 21:28:43.423" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:28:43.412" endtime="20250325 21:28:43.423"/>
</kw>
<msg timestamp="20250325 21:28:43.423" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:28:43.412" endtime="20250325 21:28:43.423"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:28:43.424" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:28:43.423" endtime="20250325 21:28:43.424"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:43.441" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:43.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:43.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:43.425" endtime="20250325 21:28:43.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:43.472" level="INFO"/>
<status status="PASS" starttime="20250325 21:28:43.471" endtime="20250325 21:28:43.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:43.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:43.472" endtime="20250325 21:28:43.473"/>
</kw>
<status status="PASS" starttime="20250325 21:28:43.425" endtime="20250325 21:28:43.473"/>
</kw>
<msg timestamp="20250325 21:28:43.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:43.425" endtime="20250325 21:28:43.473"/>
</kw>
<status status="PASS" starttime="20250325 21:28:43.424" endtime="20250325 21:28:43.473"/>
</kw>
<status status="PASS" starttime="20250325 21:28:43.424" endtime="20250325 21:28:43.473"/>
</kw>
<status status="PASS" starttime="20250325 21:28:43.411" endtime="20250325 21:28:43.473"/>
</kw>
<status status="PASS" starttime="20250325 21:28:43.410" endtime="20250325 21:28:43.473"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant create tenanttwo</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:43.476" level="INFO">Running command 'ozone tenant create tenanttwo 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:46.167" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:28:46.167" level="INFO">${output} = PERMISSION_DENIED User 'testuser2' is not an Ozone admin</msg>
<status status="PASS" starttime="20250325 21:28:43.473" endtime="20250325 21:28:46.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>PERMISSION_DENIED User 'testuser2' is not an Ozone admin</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:46.168" endtime="20250325 21:28:46.168"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:43.409" endtime="20250325 21:28:46.169"/>
</test>
<test id="s1-s2-s5-t20" name="SetSecret Failure with Regular User" line="118">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:46.172" level="INFO">Running command 'ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:49.027" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:28:49.027" level="INFO">${output} = USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</msg>
<status status="PASS" starttime="20250325 21:28:46.169" endtime="20250325 21:28:49.027"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:49.028" endtime="20250325 21:28:49.028"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:46.169" endtime="20250325 21:28:49.028"/>
</test>
<test id="s1-s2-s5-t21" name="Create Bucket 2 Success with somesecret1 via S3 API" line="122">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:49.033" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:49.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:49.532" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20250325 21:28:49.030" endtime="20250325 21:28:49.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:49.533" level="INFO">{
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20250325 21:28:49.532" endtime="20250325 21:28:49.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:49.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:49.533" endtime="20250325 21:28:49.534"/>
</kw>
<status status="PASS" starttime="20250325 21:28:49.030" endtime="20250325 21:28:49.534"/>
</kw>
<msg timestamp="20250325 21:28:49.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:49.030" endtime="20250325 21:28:49.534"/>
</kw>
<msg timestamp="20250325 21:28:49.534" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20250325 21:28:49.029" endtime="20250325 21:28:49.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:49.534" endtime="20250325 21:28:49.534"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:49.029" endtime="20250325 21:28:49.535"/>
</test>
<test id="s1-s2-s5-t22" name="Delete Bucket 2 Failure with somesecret2 via S3 API" line="126">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret2'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:49.539" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret2' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:49.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:49.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:49.536" endtime="20250325 21:28:49.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:49.890" level="INFO"/>
<status status="PASS" starttime="20250325 21:28:49.890" endtime="20250325 21:28:49.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:49.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:49.890" endtime="20250325 21:28:49.891"/>
</kw>
<status status="PASS" starttime="20250325 21:28:49.536" endtime="20250325 21:28:49.891"/>
</kw>
<msg timestamp="20250325 21:28:49.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:49.536" endtime="20250325 21:28:49.891"/>
</kw>
<status status="PASS" starttime="20250325 21:28:49.536" endtime="20250325 21:28:49.891"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:49.893" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:50.364" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:28:50.364" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250325 21:28:49.891" endtime="20250325 21:28:50.364"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250325 21:28:50.365" endtime="20250325 21:28:50.365"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:49.535" endtime="20250325 21:28:50.366"/>
</test>
<test id="s1-s2-s5-t23" name="Delete Bucket 2 Success with somesecret1 via S3 API" line="131">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:50.370" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:50.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:50.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:50.368" endtime="20250325 21:28:50.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:50.714" level="INFO"/>
<status status="PASS" starttime="20250325 21:28:50.714" endtime="20250325 21:28:50.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:50.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:50.714" endtime="20250325 21:28:50.715"/>
</kw>
<status status="PASS" starttime="20250325 21:28:50.368" endtime="20250325 21:28:50.715"/>
</kw>
<msg timestamp="20250325 21:28:50.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:50.367" endtime="20250325 21:28:50.715"/>
</kw>
<status status="PASS" starttime="20250325 21:28:50.367" endtime="20250325 21:28:50.715"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:50.718" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:51.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:51.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:50.716" endtime="20250325 21:28:51.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:51.213" level="INFO"/>
<status status="PASS" starttime="20250325 21:28:51.213" endtime="20250325 21:28:51.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:51.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:51.213" endtime="20250325 21:28:51.214"/>
</kw>
<status status="PASS" starttime="20250325 21:28:50.716" endtime="20250325 21:28:51.214"/>
</kw>
<msg timestamp="20250325 21:28:51.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:50.715" endtime="20250325 21:28:51.214"/>
</kw>
<msg timestamp="20250325 21:28:51.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:50.715" endtime="20250325 21:28:51.214"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:50.366" endtime="20250325 21:28:51.214"/>
</test>
<test id="s1-s2-s5-t24" name="Revoke User AccessId Success with Cluster Admin" line="135">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:28:51.216" endtime="20250325 21:28:51.216"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:51.219" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:51.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:51.223" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:28:51.217" endtime="20250325 21:28:51.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:51.224" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:28:51.223" endtime="20250325 21:28:51.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:51.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:51.224" endtime="20250325 21:28:51.224"/>
</kw>
<status status="PASS" starttime="20250325 21:28:51.217" endtime="20250325 21:28:51.224"/>
</kw>
<msg timestamp="20250325 21:28:51.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:51.216" endtime="20250325 21:28:51.224"/>
</kw>
<msg timestamp="20250325 21:28:51.224" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:28:51.216" endtime="20250325 21:28:51.224"/>
</kw>
<msg timestamp="20250325 21:28:51.225" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:28:51.216" endtime="20250325 21:28:51.225"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:28:51.225" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:28:51.225" endtime="20250325 21:28:51.225"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:51.228" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:51.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:51.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:28:51.226" endtime="20250325 21:28:51.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:51.257" level="INFO"/>
<status status="PASS" starttime="20250325 21:28:51.257" endtime="20250325 21:28:51.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:51.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:51.257" endtime="20250325 21:28:51.258"/>
</kw>
<status status="PASS" starttime="20250325 21:28:51.226" endtime="20250325 21:28:51.258"/>
</kw>
<msg timestamp="20250325 21:28:51.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:51.226" endtime="20250325 21:28:51.258"/>
</kw>
<status status="PASS" starttime="20250325 21:28:51.225" endtime="20250325 21:28:51.258"/>
</kw>
<status status="PASS" starttime="20250325 21:28:51.225" endtime="20250325 21:28:51.258"/>
</kw>
<status status="PASS" starttime="20250325 21:28:51.215" endtime="20250325 21:28:51.258"/>
</kw>
<status status="PASS" starttime="20250325 21:28:51.215" endtime="20250325 21:28:51.258"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user revoke 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:51.261" level="INFO">Running command 'ozone tenant --verbose user revoke 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:54.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:54.322" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20250325 21:28:51.259" endtime="20250325 21:28:54.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:54.323" level="INFO">Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20250325 21:28:54.323" endtime="20250325 21:28:54.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:54.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:54.323" endtime="20250325 21:28:54.324"/>
</kw>
<status status="PASS" starttime="20250325 21:28:51.259" endtime="20250325 21:28:54.324"/>
</kw>
<msg timestamp="20250325 21:28:54.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:51.259" endtime="20250325 21:28:54.324"/>
</kw>
<msg timestamp="20250325 21:28:54.324" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20250325 21:28:51.258" endtime="20250325 21:28:54.324"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Revoked accessId 'tenantone$testuser'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:54.324" endtime="20250325 21:28:54.324"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:51.215" endtime="20250325 21:28:54.325"/>
</test>
<test id="s1-s2-s5-t25" name="Create Bucket 3 Failure with Revoked AccessId via S3 API" line="140">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test3</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:54.328" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test3 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:54.908" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:28:54.908" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250325 21:28:54.326" endtime="20250325 21:28:54.908"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250325 21:28:54.909" endtime="20250325 21:28:54.909"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:54.325" endtime="20250325 21:28:54.910"/>
</test>
<test id="s1-s2-s5-t26" name="Delete Tenant Success with Cluster Admin" line="144">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:54.914" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:28:57.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:28:57.787" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20250325 21:28:54.912" endtime="20250325 21:28:57.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:28:57.788" level="INFO">Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20250325 21:28:57.788" endtime="20250325 21:28:57.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:28:57.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:28:57.788" endtime="20250325 21:28:57.789"/>
</kw>
<status status="PASS" starttime="20250325 21:28:54.911" endtime="20250325 21:28:57.789"/>
</kw>
<msg timestamp="20250325 21:28:57.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:54.911" endtime="20250325 21:28:57.789"/>
</kw>
<msg timestamp="20250325 21:28:57.789" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20250325 21:28:54.911" endtime="20250325 21:28:57.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Deleted tenant 'tenantone'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:28:57.789" endtime="20250325 21:28:57.790"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:54.910" endtime="20250325 21:28:57.790"/>
</test>
<test id="s1-s2-s5-t27" name="Delete Volume Success with Cluster Admin" line="148">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:28:57.794" level="INFO">Running command 'ozone sh volume delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:00.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:00.611" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20250325 21:28:57.791" endtime="20250325 21:29:00.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:00.611" level="INFO">Volume tenantone is deleted</msg>
<status status="PASS" starttime="20250325 21:29:00.611" endtime="20250325 21:29:00.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:00.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:00.612" endtime="20250325 21:29:00.612"/>
</kw>
<status status="PASS" starttime="20250325 21:28:57.791" endtime="20250325 21:29:00.612"/>
</kw>
<msg timestamp="20250325 21:29:00.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:28:57.791" endtime="20250325 21:29:00.612"/>
</kw>
<msg timestamp="20250325 21:29:00.612" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20250325 21:28:57.791" endtime="20250325 21:29:00.612"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Volume tenantone is deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:00.613" endtime="20250325 21:29:00.613"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:28:57.790" endtime="20250325 21:29:00.613"/>
</test>
<test id="s1-s2-s5-t28" name="List Tenant Expect Empty Result" line="152">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:00.617" level="INFO">Running command 'ozone tenant list 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:03.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:03.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:00.615" endtime="20250325 21:29:03.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:03.555" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:03.554" endtime="20250325 21:29:03.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:03.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:03.555" endtime="20250325 21:29:03.555"/>
</kw>
<status status="PASS" starttime="20250325 21:29:00.615" endtime="20250325 21:29:03.555"/>
</kw>
<msg timestamp="20250325 21:29:03.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:00.614" endtime="20250325 21:29:03.556"/>
</kw>
<msg timestamp="20250325 21:29:03.556" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:00.614" endtime="20250325 21:29:03.556"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tenantone</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:03.556" endtime="20250325 21:29:03.556"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:29:00.613" endtime="20250325 21:29:03.556"/>
</test>
<doc>Smoke test for ozone secure tenant commands</doc>
<status status="PASS" starttime="20250325 21:28:00.291" endtime="20250325 21:29:03.558"/>
</suite>
<suite id="s1-s2-s6" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s2-s6-t1" name="Token Test" line="85">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:29:03.567" endtime="20250325 21:29:03.567"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Secure Cluster">
<kw name="Get and use Token in Secure Cluster">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:29:03.568" endtime="20250325 21:29:03.568"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:03.571" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:03.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:03.575" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:29:03.569" endtime="20250325 21:29:03.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:03.576" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:29:03.575" endtime="20250325 21:29:03.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:03.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:03.576" endtime="20250325 21:29:03.576"/>
</kw>
<status status="PASS" starttime="20250325 21:29:03.569" endtime="20250325 21:29:03.576"/>
</kw>
<msg timestamp="20250325 21:29:03.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:03.569" endtime="20250325 21:29:03.576"/>
</kw>
<msg timestamp="20250325 21:29:03.576" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:29:03.568" endtime="20250325 21:29:03.577"/>
</kw>
<msg timestamp="20250325 21:29:03.577" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:29:03.568" endtime="20250325 21:29:03.577"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:29:03.577" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:29:03.577" endtime="20250325 21:29:03.577"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:03.580" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:03.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:03.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:03.578" endtime="20250325 21:29:03.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:03.627" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:03.626" endtime="20250325 21:29:03.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:03.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:03.627" endtime="20250325 21:29:03.627"/>
</kw>
<status status="PASS" starttime="20250325 21:29:03.578" endtime="20250325 21:29:03.627"/>
</kw>
<msg timestamp="20250325 21:29:03.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:03.578" endtime="20250325 21:29:03.628"/>
</kw>
<status status="PASS" starttime="20250325 21:29:03.577" endtime="20250325 21:29:03.628"/>
</kw>
<status status="PASS" starttime="20250325 21:29:03.577" endtime="20250325 21:29:03.628"/>
</kw>
<status status="PASS" starttime="20250325 21:29:03.568" endtime="20250325 21:29:03.628"/>
</kw>
<status status="PASS" starttime="20250325 21:29:03.568" endtime="20250325 21:29:03.628"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh token get -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:03.632" level="INFO">Running command 'ozone sh token get -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:06.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:06.535" level="INFO">${output} = Successfully get token for service 172.19.0.7:9862
Kind: OzoneToken, Service: 172.19.0.7:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-03-25T21:2...</msg>
<status status="PASS" starttime="20250325 21:29:03.629" endtime="20250325 21:29:06.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:06.536" level="INFO">Successfully get token for service 172.19.0.7:9862
Kind: OzoneToken, Service: 172.19.0.7:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-03-25T21:29:06.428Z, maxDate=2025-04-01T21:29:06.428Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=10a043a4-5676-4c4b-b58d-7c61ccdf0e57)
Token persisted to /tmp/ozone.token successfully!</msg>
<status status="PASS" starttime="20250325 21:29:06.535" endtime="20250325 21:29:06.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:06.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:06.536" endtime="20250325 21:29:06.536"/>
</kw>
<status status="PASS" starttime="20250325 21:29:03.629" endtime="20250325 21:29:06.536"/>
</kw>
<msg timestamp="20250325 21:29:06.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:03.628" endtime="20250325 21:29:06.537"/>
</kw>
<status status="PASS" starttime="20250325 21:29:03.628" endtime="20250325 21:29:06.537"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${TOKEN_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20250325 21:29:06.537" level="INFO" html="true">File '&lt;a href="file:///tmp/ozone.token"&gt;/tmp/ozone.token&lt;/a&gt;' contains 201 bytes.</msg>
<status status="PASS" starttime="20250325 21:29:06.537" endtime="20250325 21:29:06.537"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:06.540" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:06.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:06.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:06.538" endtime="20250325 21:29:06.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:06.545" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:06.545" endtime="20250325 21:29:06.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:06.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:06.546" endtime="20250325 21:29:06.546"/>
</kw>
<status status="PASS" starttime="20250325 21:29:06.538" endtime="20250325 21:29:06.546"/>
</kw>
<msg timestamp="20250325 21:29:06.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:06.537" endtime="20250325 21:29:06.546"/>
</kw>
<status status="PASS" starttime="20250325 21:29:06.537" endtime="20250325 21:29:06.546"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<arg>${TOKEN_FILE}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250325 21:29:06.547" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' set to value '/tmp/ozone.token'.</msg>
<status status="PASS" starttime="20250325 21:29:06.546" endtime="20250325 21:29:06.547"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:06.550" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:09.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:09.679" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20250325 21:29:06.548" endtime="20250325 21:29:09.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:09.680" level="INFO">[ ]</msg>
<status status="PASS" starttime="20250325 21:29:09.679" endtime="20250325 21:29:09.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:09.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:09.680" endtime="20250325 21:29:09.680"/>
</kw>
<status status="PASS" starttime="20250325 21:29:06.547" endtime="20250325 21:29:09.680"/>
</kw>
<msg timestamp="20250325 21:29:09.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:06.547" endtime="20250325 21:29:09.680"/>
</kw>
<msg timestamp="20250325 21:29:09.680" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20250325 21:29:06.547" endtime="20250325 21:29:09.681"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:09.681" endtime="20250325 21:29:09.681"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20250325 21:29:09.681" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' deleted.</msg>
<status status="PASS" starttime="20250325 21:29:09.681" endtime="20250325 21:29:09.681"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:09.684" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:11.778" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:29:11.778" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20250325 21:29:09.682" endtime="20250325 21:29:11.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:11.779" level="INFO">org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20250325 21:29:11.778" endtime="20250325 21:29:11.779"/>
</kw>
<msg timestamp="20250325 21:29:11.779" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20250325 21:29:09.681" endtime="20250325 21:29:11.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:11.779" endtime="20250325 21:29:11.780"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:29:11.780" endtime="20250325 21:29:11.781"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:11.784" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:11.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:11.788" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:29:11.782" endtime="20250325 21:29:11.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:11.788" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:29:11.788" endtime="20250325 21:29:11.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:11.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:11.788" endtime="20250325 21:29:11.789"/>
</kw>
<status status="PASS" starttime="20250325 21:29:11.781" endtime="20250325 21:29:11.789"/>
</kw>
<msg timestamp="20250325 21:29:11.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:11.781" endtime="20250325 21:29:11.789"/>
</kw>
<msg timestamp="20250325 21:29:11.789" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:29:11.781" endtime="20250325 21:29:11.789"/>
</kw>
<msg timestamp="20250325 21:29:11.789" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:29:11.781" endtime="20250325 21:29:11.789"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:29:11.790" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:29:11.790" endtime="20250325 21:29:11.790"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:11.793" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:11.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:11.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:11.791" endtime="20250325 21:29:11.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:11.814" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:11.814" endtime="20250325 21:29:11.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:11.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:11.814" endtime="20250325 21:29:11.815"/>
</kw>
<status status="PASS" starttime="20250325 21:29:11.791" endtime="20250325 21:29:11.815"/>
</kw>
<msg timestamp="20250325 21:29:11.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:11.791" endtime="20250325 21:29:11.815"/>
</kw>
<status status="PASS" starttime="20250325 21:29:11.790" endtime="20250325 21:29:11.815"/>
</kw>
<status status="PASS" starttime="20250325 21:29:11.790" endtime="20250325 21:29:11.815"/>
</kw>
<status status="PASS" starttime="20250325 21:29:11.780" endtime="20250325 21:29:11.815"/>
</kw>
<status status="PASS" starttime="20250325 21:29:11.780" endtime="20250325 21:29:11.815"/>
</kw>
<status status="PASS" starttime="20250325 21:29:03.567" endtime="20250325 21:29:11.815"/>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:11.819" level="INFO">Running command 'ozone sh token print -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:12.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:12.983" level="INFO">${output} = Kind: OzoneToken, Service: 172.19.0.7:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-03-25T21:29:06.428Z, maxDate=2025-04-01T21:29:06.428Z, sequen...</msg>
<status status="PASS" starttime="20250325 21:29:11.817" endtime="20250325 21:29:12.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:12.984" level="INFO">Kind: OzoneToken, Service: 172.19.0.7:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-03-25T21:29:06.428Z, maxDate=2025-04-01T21:29:06.428Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=10a043a4-5676-4c4b-b58d-7c61ccdf0e57)</msg>
<status status="PASS" starttime="20250325 21:29:12.984" endtime="20250325 21:29:12.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:12.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:12.984" endtime="20250325 21:29:12.985"/>
</kw>
<status status="PASS" starttime="20250325 21:29:11.816" endtime="20250325 21:29:12.985"/>
</kw>
<msg timestamp="20250325 21:29:12.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:11.816" endtime="20250325 21:29:12.986"/>
</kw>
<msg timestamp="20250325 21:29:12.986" level="INFO">${output} = Kind: OzoneToken, Service: 172.19.0.7:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-03-25T21:29:06.428Z, maxDate=2025-04-01T21:29:06.428Z, sequen...</msg>
<status status="PASS" starttime="20250325 21:29:11.816" endtime="20250325 21:29:12.986"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250325 21:29:12.986" level="INFO">Length is 382</msg>
<status status="PASS" starttime="20250325 21:29:12.986" endtime="20250325 21:29:12.986"/>
</kw>
<status status="PASS" starttime="20250325 21:29:11.815" endtime="20250325 21:29:12.986"/>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:12.989" level="INFO">Running command 'ozone sh token renew -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:15.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:15.709" level="INFO">${output} = Token renewed successfully, expiry time: 2025-03-26T21:29:15.619Z.</msg>
<status status="PASS" starttime="20250325 21:29:12.987" endtime="20250325 21:29:15.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:15.710" level="INFO">Token renewed successfully, expiry time: 2025-03-26T21:29:15.619Z.</msg>
<status status="PASS" starttime="20250325 21:29:15.709" endtime="20250325 21:29:15.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:15.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:15.710" endtime="20250325 21:29:15.710"/>
</kw>
<status status="PASS" starttime="20250325 21:29:12.987" endtime="20250325 21:29:15.711"/>
</kw>
<msg timestamp="20250325 21:29:15.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:12.987" endtime="20250325 21:29:15.711"/>
</kw>
<msg timestamp="20250325 21:29:15.711" level="INFO">${output} = Token renewed successfully, expiry time: 2025-03-26T21:29:15.619Z.</msg>
<status status="PASS" starttime="20250325 21:29:12.987" endtime="20250325 21:29:15.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:15.711" endtime="20250325 21:29:15.711"/>
</kw>
<status status="PASS" starttime="20250325 21:29:12.986" endtime="20250325 21:29:15.711"/>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:15.715" level="INFO">Running command 'ozone sh token cancel -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:18.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:18.387" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20250325 21:29:15.713" endtime="20250325 21:29:18.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:18.388" level="INFO">Token canceled successfully.</msg>
<status status="PASS" starttime="20250325 21:29:18.388" endtime="20250325 21:29:18.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:18.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:18.388" endtime="20250325 21:29:18.389"/>
</kw>
<status status="PASS" starttime="20250325 21:29:15.712" endtime="20250325 21:29:18.389"/>
</kw>
<msg timestamp="20250325 21:29:18.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:15.712" endtime="20250325 21:29:18.389"/>
</kw>
<msg timestamp="20250325 21:29:18.389" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20250325 21:29:15.712" endtime="20250325 21:29:18.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:18.389" endtime="20250325 21:29:18.389"/>
</kw>
<status status="PASS" starttime="20250325 21:29:15.711" endtime="20250325 21:29:18.389"/>
</kw>
<status status="PASS" starttime="20250325 21:29:03.567" endtime="20250325 21:29:18.389"/>
</kw>
<status status="PASS" starttime="20250325 21:29:03.567" endtime="20250325 21:29:18.389"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:18.393" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:19.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:19.530" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20250325 21:29:18.391" endtime="20250325 21:29:19.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:19.530" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20250325 21:29:19.530" endtime="20250325 21:29:19.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:19.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:19.531" endtime="20250325 21:29:19.531"/>
</kw>
<status status="PASS" starttime="20250325 21:29:18.390" endtime="20250325 21:29:19.531"/>
</kw>
<msg timestamp="20250325 21:29:19.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:18.390" endtime="20250325 21:29:19.531"/>
</kw>
<msg timestamp="20250325 21:29:19.531" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20250325 21:29:18.390" endtime="20250325 21:29:19.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:19.531" endtime="20250325 21:29:19.532"/>
</kw>
<status status="PASS" starttime="20250325 21:29:18.390" endtime="20250325 21:29:19.532"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:29:03.566" endtime="20250325 21:29:19.532"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20250325 21:29:03.561" endtime="20250325 21:29:19.533"/>
</suite>
<suite id="s1-s2-s7" name="S3-secret" source="/opt/hadoop/smoketest/security/S3-secret.robot">
<test id="s1-s2-s7-t1" name="Get S3 secret twice" line="42">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:29:19.539" endtime="20250325 21:29:19.539"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:19.543" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:19.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:19.546" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:29:19.540" endtime="20250325 21:29:19.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:19.547" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:29:19.547" endtime="20250325 21:29:19.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:19.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:19.547" endtime="20250325 21:29:19.547"/>
</kw>
<status status="PASS" starttime="20250325 21:29:19.540" endtime="20250325 21:29:19.548"/>
</kw>
<msg timestamp="20250325 21:29:19.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:19.540" endtime="20250325 21:29:19.548"/>
</kw>
<msg timestamp="20250325 21:29:19.548" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:29:19.540" endtime="20250325 21:29:19.548"/>
</kw>
<msg timestamp="20250325 21:29:19.548" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:29:19.539" endtime="20250325 21:29:19.548"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:29:19.548" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:29:19.548" endtime="20250325 21:29:19.548"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:19.551" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:19.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:19.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:19.550" endtime="20250325 21:29:19.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:19.569" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:19.568" endtime="20250325 21:29:19.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:19.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:19.569" endtime="20250325 21:29:19.569"/>
</kw>
<status status="PASS" starttime="20250325 21:29:19.549" endtime="20250325 21:29:19.569"/>
</kw>
<msg timestamp="20250325 21:29:19.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:19.549" endtime="20250325 21:29:19.570"/>
</kw>
<status status="PASS" starttime="20250325 21:29:19.549" endtime="20250325 21:29:19.570"/>
</kw>
<status status="PASS" starttime="20250325 21:29:19.549" endtime="20250325 21:29:19.570"/>
</kw>
<status status="PASS" starttime="20250325 21:29:19.539" endtime="20250325 21:29:19.570"/>
</kw>
<status status="PASS" starttime="20250325 21:29:19.539" endtime="20250325 21:29:19.570"/>
</kw>
<kw name="Revoke Secrets">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:19.572" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:22.301" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:29:22.301" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:29:19.570" endtime="20250325 21:29:22.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:22.302" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:29:22.302" endtime="20250325 21:29:22.302"/>
</kw>
<msg timestamp="20250325 21:29:22.302" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:29:19.570" endtime="20250325 21:29:22.303"/>
</kw>
<status status="PASS" starttime="20250325 21:29:19.570" endtime="20250325 21:29:22.303"/>
</kw>
<kw name="GetSecret success">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:22.306" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:24.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:24.885" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=b82b0ad7df2d07fc3673164218db69fce4fa5438f0dcbc210ab9d176dd89f140</msg>
<status status="PASS" starttime="20250325 21:29:22.304" endtime="20250325 21:29:24.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:24.885" level="INFO">awsAccessKey=testuser2
awsSecret=b82b0ad7df2d07fc3673164218db69fce4fa5438f0dcbc210ab9d176dd89f140</msg>
<status status="PASS" starttime="20250325 21:29:24.885" endtime="20250325 21:29:24.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:24.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:24.886" endtime="20250325 21:29:24.886"/>
</kw>
<status status="PASS" starttime="20250325 21:29:22.303" endtime="20250325 21:29:24.886"/>
</kw>
<msg timestamp="20250325 21:29:24.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:22.303" endtime="20250325 21:29:24.886"/>
</kw>
<msg timestamp="20250325 21:29:24.886" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=b82b0ad7df2d07fc3673164218db69fce4fa5438f0dcbc210ab9d176dd89f140</msg>
<status status="PASS" starttime="20250325 21:29:22.303" endtime="20250325 21:29:24.886"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:24.886" endtime="20250325 21:29:24.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:24.887" endtime="20250325 21:29:24.887"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>isDeleted</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:24.887" endtime="20250325 21:29:24.887"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>transactionLogIndex</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:24.887" endtime="20250325 21:29:24.888"/>
</kw>
<status status="PASS" starttime="20250325 21:29:22.303" endtime="20250325 21:29:24.888"/>
</kw>
<kw name="GetSecret failure">
<kw name="Execute And Ignore Error" library="os">
<var>${output2}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:24.891" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:27.383" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:29:27.383" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20250325 21:29:24.889" endtime="20250325 21:29:27.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:27.384" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20250325 21:29:27.384" endtime="20250325 21:29:27.384"/>
</kw>
<msg timestamp="20250325 21:29:27.385" level="INFO">${output2} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20250325 21:29:24.888" endtime="20250325 21:29:27.385"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:27.385" endtime="20250325 21:29:27.385"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:27.385" endtime="20250325 21:29:27.385"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:27.385" endtime="20250325 21:29:27.386"/>
</kw>
<status status="PASS" starttime="20250325 21:29:24.888" endtime="20250325 21:29:27.386"/>
</kw>
<kw name="Revoke Secrets">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:27.389" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:29.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:29.982" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:29:27.386" endtime="20250325 21:29:29.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:29.983" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:29:29.983" endtime="20250325 21:29:29.983"/>
</kw>
<msg timestamp="20250325 21:29:29.984" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:29:27.386" endtime="20250325 21:29:29.984"/>
</kw>
<status status="PASS" starttime="20250325 21:29:27.386" endtime="20250325 21:29:29.984"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250325 21:29:19.538" endtime="20250325 21:29:29.984"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20250325 21:29:19.533" endtime="20250325 21:29:29.985"/>
</suite>
<status status="PASS" starttime="20250325 21:26:34.373" endtime="20250325 21:29:29.987"/>
</suite>
<suite id="s1-s3" name="s3-encrypted" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:29:30.676" endtime="20250325 21:29:30.676"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:29:30.677" level="INFO">${randStr} = 5607152376</msg>
<status status="PASS" starttime="20250325 21:29:30.677" endtime="20250325 21:29:30.677"/>
</kw>
<msg timestamp="20250325 21:29:30.677" level="INFO">${random} = ozone-test-5607152376</msg>
<status status="PASS" starttime="20250325 21:29:30.677" endtime="20250325 21:29:30.677"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:29:30.678" level="INFO">${PREFIX} = ozone-test-5607152376</msg>
<status status="PASS" starttime="20250325 21:29:30.677" endtime="20250325 21:29:30.678"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.676" endtime="20250325 21:29:30.678"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.676" endtime="20250325 21:29:30.678"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:30.681" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:30.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:30.684" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20250325 21:29:30.679" endtime="20250325 21:29:30.684"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:29:30.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:30.684" endtime="20250325 21:29:30.684"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250325 21:29:30.684" endtime="20250325 21:29:30.684"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:30.685" endtime="20250325 21:29:30.685"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250325 21:29:30.685" endtime="20250325 21:29:30.685"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:30.685" endtime="20250325 21:29:30.685"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.678" endtime="20250325 21:29:30.685"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.678" endtime="20250325 21:29:30.685"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:29:30.686" endtime="20250325 21:29:30.686"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:30.689" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:30.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:30.692" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:29:30.687" endtime="20250325 21:29:30.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:30.693" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:29:30.693" endtime="20250325 21:29:30.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:30.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:30.693" endtime="20250325 21:29:30.693"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.687" endtime="20250325 21:29:30.694"/>
</kw>
<msg timestamp="20250325 21:29:30.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:30.687" endtime="20250325 21:29:30.694"/>
</kw>
<msg timestamp="20250325 21:29:30.694" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:29:30.686" endtime="20250325 21:29:30.694"/>
</kw>
<msg timestamp="20250325 21:29:30.694" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:29:30.686" endtime="20250325 21:29:30.694"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:29:30.694" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:29:30.694" endtime="20250325 21:29:30.694"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:30.698" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:30.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:30.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:30.696" endtime="20250325 21:29:30.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:30.719" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:30.719" endtime="20250325 21:29:30.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:30.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:30.719" endtime="20250325 21:29:30.719"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.695" endtime="20250325 21:29:30.719"/>
</kw>
<msg timestamp="20250325 21:29:30.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:30.695" endtime="20250325 21:29:30.719"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.695" endtime="20250325 21:29:30.720"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.694" endtime="20250325 21:29:30.720"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.686" endtime="20250325 21:29:30.720"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.685" endtime="20250325 21:29:30.720"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:30.722" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:33.493" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:29:33.493" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250325 21:29:30.720" endtime="20250325 21:29:33.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:33.494" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250325 21:29:33.493" endtime="20250325 21:29:33.494"/>
</kw>
<msg timestamp="20250325 21:29:33.494" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250325 21:29:30.720" endtime="20250325 21:29:33.494"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:33.494" endtime="20250325 21:29:33.494"/>
</kw>
<msg timestamp="20250325 21:29:33.494" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250325 21:29:33.494" endtime="20250325 21:29:33.494"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:33.498" level="INFO">Running command 'ozone s3 revokesecret -y  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:35.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:35.991" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:29:33.496" endtime="20250325 21:29:35.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:35.992" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:29:35.992" endtime="20250325 21:29:35.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:35.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:35.992" endtime="20250325 21:29:35.993"/>
</kw>
<status status="PASS" starttime="20250325 21:29:33.495" endtime="20250325 21:29:35.993"/>
</kw>
<msg timestamp="20250325 21:29:35.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:33.495" endtime="20250325 21:29:35.993"/>
</kw>
<status status="PASS" starttime="20250325 21:29:33.495" endtime="20250325 21:29:35.993"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:35.996" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:38.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:38.539" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3</msg>
<status status="PASS" starttime="20250325 21:29:35.994" endtime="20250325 21:29:38.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:38.539" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3</msg>
<status status="PASS" starttime="20250325 21:29:38.539" endtime="20250325 21:29:38.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:38.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:38.540" endtime="20250325 21:29:38.540"/>
</kw>
<status status="PASS" starttime="20250325 21:29:35.994" endtime="20250325 21:29:38.540"/>
</kw>
<msg timestamp="20250325 21:29:38.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:35.993" endtime="20250325 21:29:38.540"/>
</kw>
<msg timestamp="20250325 21:29:38.540" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3</msg>
<status status="PASS" starttime="20250325 21:29:35.993" endtime="20250325 21:29:38.540"/>
</kw>
<status status="PASS" starttime="20250325 21:29:33.495" endtime="20250325 21:29:38.540"/>
</branch>
<status status="PASS" starttime="20250325 21:29:33.495" endtime="20250325 21:29:38.540"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250325 21:29:38.541" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250325 21:29:38.541" endtime="20250325 21:29:38.541"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250325 21:29:38.541" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250325 21:29:38.541" endtime="20250325 21:29:38.541"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250325 21:29:38.542" level="INFO">${secret} = ['93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3']</msg>
<status status="PASS" starttime="20250325 21:29:38.541" endtime="20250325 21:29:38.542"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:29:38.543" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:29:38.542" endtime="20250325 21:29:38.543"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:29:38.543" level="INFO">${secret} = 93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3</msg>
<status status="PASS" starttime="20250325 21:29:38.543" endtime="20250325 21:29:38.543"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:38.546" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:38.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:38.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:38.544" endtime="20250325 21:29:38.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:38.894" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:38.894" endtime="20250325 21:29:38.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:38.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:38.895" endtime="20250325 21:29:38.895"/>
</kw>
<status status="PASS" starttime="20250325 21:29:38.544" endtime="20250325 21:29:38.895"/>
</kw>
<msg timestamp="20250325 21:29:38.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:38.544" endtime="20250325 21:29:38.895"/>
</kw>
<status status="PASS" starttime="20250325 21:29:38.543" endtime="20250325 21:29:38.895"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:38.898" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:39.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:39.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:38.896" endtime="20250325 21:29:39.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:39.240" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:39.240" endtime="20250325 21:29:39.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:39.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:39.240" endtime="20250325 21:29:39.240"/>
</kw>
<status status="PASS" starttime="20250325 21:29:38.896" endtime="20250325 21:29:39.241"/>
</kw>
<msg timestamp="20250325 21:29:39.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:38.896" endtime="20250325 21:29:39.241"/>
</kw>
<status status="PASS" starttime="20250325 21:29:38.895" endtime="20250325 21:29:39.241"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:39.244" level="INFO">Running command 'aws configure set aws_secret_access_key 93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:39.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:39.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:39.242" endtime="20250325 21:29:39.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:39.586" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:39.585" endtime="20250325 21:29:39.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:39.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:39.586" endtime="20250325 21:29:39.586"/>
</kw>
<status status="PASS" starttime="20250325 21:29:39.241" endtime="20250325 21:29:39.586"/>
</kw>
<msg timestamp="20250325 21:29:39.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:39.241" endtime="20250325 21:29:39.586"/>
</kw>
<status status="PASS" starttime="20250325 21:29:39.241" endtime="20250325 21:29:39.586"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:39.589" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:39.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:39.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:39.587" endtime="20250325 21:29:39.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:39.941" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:39.941" endtime="20250325 21:29:39.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:39.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:39.941" endtime="20250325 21:29:39.941"/>
</kw>
<status status="PASS" starttime="20250325 21:29:39.587" endtime="20250325 21:29:39.942"/>
</kw>
<msg timestamp="20250325 21:29:39.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:39.587" endtime="20250325 21:29:39.942"/>
</kw>
<status status="PASS" starttime="20250325 21:29:39.586" endtime="20250325 21:29:39.942"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:39.945" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:40.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:40.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:39.943" endtime="20250325 21:29:40.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:40.296" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:40.295" endtime="20250325 21:29:40.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:40.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:40.296" endtime="20250325 21:29:40.296"/>
</kw>
<status status="PASS" starttime="20250325 21:29:39.942" endtime="20250325 21:29:40.296"/>
</kw>
<msg timestamp="20250325 21:29:40.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:39.942" endtime="20250325 21:29:40.296"/>
</kw>
<status status="PASS" starttime="20250325 21:29:39.942" endtime="20250325 21:29:40.296"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.720" endtime="20250325 21:29:40.297"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.720" endtime="20250325 21:29:40.297"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:29:40.297" endtime="20250325 21:29:40.297"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.685" endtime="20250325 21:29:40.297"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.685" endtime="20250325 21:29:40.297"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:29:40.297" endtime="20250325 21:29:40.297"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:29:40.297" endtime="20250325 21:29:40.298"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:29:40.298" endtime="20250325 21:29:40.298"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:40.301" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:43.281" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:29:43.281" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20250325 21:29:40.299" endtime="20250325 21:29:43.281"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:29:43.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:43.282" endtime="20250325 21:29:43.282"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:43.282" endtime="20250325 21:29:43.283"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:43.283" endtime="20250325 21:29:43.283"/>
</kw>
<msg timestamp="20250325 21:29:43.283" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250325 21:29:40.298" endtime="20250325 21:29:43.283"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:29:43.283" endtime="20250325 21:29:43.283"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${ENCRYPTION_KEY} --layout ${BUCKET_LAYOUT} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:43.287" level="INFO">Running command 'ozone sh bucket create -k key1 --layout OBJECT_STORE o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:46.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:46.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:43.284" endtime="20250325 21:29:46.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:46.586" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:46.585" endtime="20250325 21:29:46.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:46.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:46.586" endtime="20250325 21:29:46.586"/>
</kw>
<status status="PASS" starttime="20250325 21:29:43.284" endtime="20250325 21:29:46.586"/>
</kw>
<msg timestamp="20250325 21:29:46.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:43.284" endtime="20250325 21:29:46.587"/>
</kw>
<status status="PASS" starttime="20250325 21:29:43.283" endtime="20250325 21:29:46.587"/>
</kw>
<status status="PASS" starttime="20250325 21:29:40.298" endtime="20250325 21:29:46.587"/>
</kw>
<status status="PASS" starttime="20250325 21:29:40.298" endtime="20250325 21:29:46.587"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:29:46.587" endtime="20250325 21:29:46.587"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:29:46.587" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20250325 21:29:46.587" endtime="20250325 21:29:46.588"/>
</kw>
<status status="PASS" starttime="20250325 21:29:30.676" endtime="20250325 21:29:46.588"/>
</kw>
<suite id="s1-s3-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:29:46.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:46.596" endtime="20250325 21:29:46.596"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:29:46.596" endtime="20250325 21:29:46.596"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:29:46.596" endtime="20250325 21:29:46.597"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:46.597" endtime="20250325 21:29:46.597"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:46.597" endtime="20250325 21:29:46.597"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:46.597" endtime="20250325 21:29:46.597"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:46.597" endtime="20250325 21:29:46.597"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:46.597" endtime="20250325 21:29:46.597"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:29:46.597" endtime="20250325 21:29:46.597"/>
</kw>
<status status="PASS" starttime="20250325 21:29:46.596" endtime="20250325 21:29:46.597"/>
</kw>
<test id="s1-s3-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:46.601" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250325 21:29:46.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:46.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:46.599" endtime="20250325 21:29:46.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:46.606" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:46.605" endtime="20250325 21:29:46.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:46.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:46.606" endtime="20250325 21:29:46.606"/>
</kw>
<status status="PASS" starttime="20250325 21:29:46.598" endtime="20250325 21:29:46.606"/>
</kw>
<msg timestamp="20250325 21:29:46.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:46.598" endtime="20250325 21:29:46.606"/>
</kw>
<status status="PASS" starttime="20250325 21:29:46.598" endtime="20250325 21:29:46.607"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:46.610" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:47.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:47.424" level="INFO">${output} = Completed 29 Bytes/29 Bytes (78 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile            </msg>
<status status="PASS" starttime="20250325 21:29:46.608" endtime="20250325 21:29:47.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:47.425" level="INFO">Completed 29 Bytes/29 Bytes (78 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile            </msg>
<status status="PASS" starttime="20250325 21:29:47.424" endtime="20250325 21:29:47.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:47.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:47.425" endtime="20250325 21:29:47.425"/>
</kw>
<status status="PASS" starttime="20250325 21:29:46.607" endtime="20250325 21:29:47.425"/>
</kw>
<msg timestamp="20250325 21:29:47.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:46.607" endtime="20250325 21:29:47.425"/>
</kw>
<msg timestamp="20250325 21:29:47.426" level="INFO">${output} = Completed 29 Bytes/29 Bytes (78 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile            </msg>
<status status="PASS" starttime="20250325 21:29:46.607" endtime="20250325 21:29:47.426"/>
</kw>
<msg timestamp="20250325 21:29:47.426" level="INFO">${result} = Completed 29 Bytes/29 Bytes (78 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile            </msg>
<status status="PASS" starttime="20250325 21:29:46.607" endtime="20250325 21:29:47.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:47.426" endtime="20250325 21:29:47.426"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:47.430" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:48.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:48.121" level="INFO">${output} = Completed 29 Bytes/29 Bytes (113 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20250325 21:29:47.427" endtime="20250325 21:29:48.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:48.122" level="INFO">Completed 29 Bytes/29 Bytes (113 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20250325 21:29:48.122" endtime="20250325 21:29:48.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:48.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:48.122" endtime="20250325 21:29:48.123"/>
</kw>
<status status="PASS" starttime="20250325 21:29:47.427" endtime="20250325 21:29:48.123"/>
</kw>
<msg timestamp="20250325 21:29:48.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:47.427" endtime="20250325 21:29:48.123"/>
</kw>
<msg timestamp="20250325 21:29:48.123" level="INFO">${output} = Completed 29 Bytes/29 Bytes (113 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20250325 21:29:47.427" endtime="20250325 21:29:48.123"/>
</kw>
<msg timestamp="20250325 21:29:48.123" level="INFO">${result} = Completed 29 Bytes/29 Bytes (113 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20250325 21:29:47.426" endtime="20250325 21:29:48.124"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:48.124" endtime="20250325 21:29:48.124"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:48.128" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:48.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:48.623" level="INFO">${output} =                            PRE dir1/
2025-03-25 21:29:47         29 testfile</msg>
<status status="PASS" starttime="20250325 21:29:48.125" endtime="20250325 21:29:48.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:48.624" level="INFO">                           PRE dir1/
2025-03-25 21:29:47         29 testfile</msg>
<status status="PASS" starttime="20250325 21:29:48.623" endtime="20250325 21:29:48.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:48.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:48.624" endtime="20250325 21:29:48.625"/>
</kw>
<status status="PASS" starttime="20250325 21:29:48.125" endtime="20250325 21:29:48.625"/>
</kw>
<msg timestamp="20250325 21:29:48.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:48.125" endtime="20250325 21:29:48.625"/>
</kw>
<msg timestamp="20250325 21:29:48.625" level="INFO">${output} =                            PRE dir1/
2025-03-25 21:29:47         29 testfile</msg>
<status status="PASS" starttime="20250325 21:29:48.124" endtime="20250325 21:29:48.625"/>
</kw>
<msg timestamp="20250325 21:29:48.626" level="INFO">${result} =                            PRE dir1/
2025-03-25 21:29:47         29 testfile</msg>
<status status="PASS" starttime="20250325 21:29:48.124" endtime="20250325 21:29:48.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:48.626" endtime="20250325 21:29:48.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:48.626" endtime="20250325 21:29:48.627"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:48.627" endtime="20250325 21:29:48.627"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:48.631" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:49.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:49.145" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250325 21:29:48.629" endtime="20250325 21:29:49.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:49.146" level="INFO">                           PRE dir2/</msg>
<status status="PASS" starttime="20250325 21:29:49.145" endtime="20250325 21:29:49.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:49.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:49.146" endtime="20250325 21:29:49.147"/>
</kw>
<status status="PASS" starttime="20250325 21:29:48.628" endtime="20250325 21:29:49.147"/>
</kw>
<msg timestamp="20250325 21:29:49.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:48.628" endtime="20250325 21:29:49.147"/>
</kw>
<msg timestamp="20250325 21:29:49.147" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250325 21:29:48.628" endtime="20250325 21:29:49.147"/>
</kw>
<msg timestamp="20250325 21:29:49.147" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250325 21:29:48.627" endtime="20250325 21:29:49.147"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:49.147" endtime="20250325 21:29:49.148"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:49.148" endtime="20250325 21:29:49.148"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:49.148" endtime="20250325 21:29:49.148"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:49.152" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:49.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:49.644" level="INFO">${output} = 2025-03-25 21:29:48         29 file</msg>
<status status="PASS" starttime="20250325 21:29:49.150" endtime="20250325 21:29:49.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:49.645" level="INFO">2025-03-25 21:29:48         29 file</msg>
<status status="PASS" starttime="20250325 21:29:49.645" endtime="20250325 21:29:49.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:49.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:49.645" endtime="20250325 21:29:49.646"/>
</kw>
<status status="PASS" starttime="20250325 21:29:49.149" endtime="20250325 21:29:49.646"/>
</kw>
<msg timestamp="20250325 21:29:49.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:49.149" endtime="20250325 21:29:49.646"/>
</kw>
<msg timestamp="20250325 21:29:49.646" level="INFO">${output} = 2025-03-25 21:29:48         29 file</msg>
<status status="PASS" starttime="20250325 21:29:49.149" endtime="20250325 21:29:49.646"/>
</kw>
<msg timestamp="20250325 21:29:49.646" level="INFO">${result} = 2025-03-25 21:29:48         29 file</msg>
<status status="PASS" starttime="20250325 21:29:49.148" endtime="20250325 21:29:49.646"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:49.646" endtime="20250325 21:29:49.647"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:49.647" endtime="20250325 21:29:49.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:49.647" endtime="20250325 21:29:49.647"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:29:46.597" endtime="20250325 21:29:49.647"/>
</test>
<test id="s1-s3-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:49.651" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250325 21:29:49.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:49.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:29:49.649" endtime="20250325 21:29:49.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:49.656" level="INFO"/>
<status status="PASS" starttime="20250325 21:29:49.656" endtime="20250325 21:29:49.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:49.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:49.656" endtime="20250325 21:29:49.656"/>
</kw>
<status status="PASS" starttime="20250325 21:29:49.649" endtime="20250325 21:29:49.657"/>
</kw>
<msg timestamp="20250325 21:29:49.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:49.649" endtime="20250325 21:29:49.657"/>
</kw>
<status status="PASS" starttime="20250325 21:29:49.648" endtime="20250325 21:29:49.657"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:49.660" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:50.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:50.306" level="INFO">${output} = Completed 29 Bytes/29 Bytes (146 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20250325 21:29:49.658" endtime="20250325 21:29:50.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:50.307" level="INFO">Completed 29 Bytes/29 Bytes (146 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20250325 21:29:50.307" endtime="20250325 21:29:50.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:50.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:50.307" endtime="20250325 21:29:50.308"/>
</kw>
<status status="PASS" starttime="20250325 21:29:49.658" endtime="20250325 21:29:50.308"/>
</kw>
<msg timestamp="20250325 21:29:50.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:49.658" endtime="20250325 21:29:50.308"/>
</kw>
<msg timestamp="20250325 21:29:50.308" level="INFO">${output} = Completed 29 Bytes/29 Bytes (146 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20250325 21:29:49.657" endtime="20250325 21:29:50.308"/>
</kw>
<msg timestamp="20250325 21:29:50.308" level="INFO">${result} = Completed 29 Bytes/29 Bytes (146 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20250325 21:29:49.657" endtime="20250325 21:29:50.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:50.308" endtime="20250325 21:29:50.309"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:50.312" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:50.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:50.801" level="INFO">${output} = 2025-03-25 21:29:50         29 a+b</msg>
<status status="PASS" starttime="20250325 21:29:50.310" endtime="20250325 21:29:50.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:50.802" level="INFO">2025-03-25 21:29:50         29 a+b</msg>
<status status="PASS" starttime="20250325 21:29:50.801" endtime="20250325 21:29:50.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:50.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:50.802" endtime="20250325 21:29:50.802"/>
</kw>
<status status="PASS" starttime="20250325 21:29:50.310" endtime="20250325 21:29:50.803"/>
</kw>
<msg timestamp="20250325 21:29:50.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:50.309" endtime="20250325 21:29:50.803"/>
</kw>
<msg timestamp="20250325 21:29:50.803" level="INFO">${output} = 2025-03-25 21:29:50         29 a+b</msg>
<status status="PASS" starttime="20250325 21:29:50.309" endtime="20250325 21:29:50.803"/>
</kw>
<msg timestamp="20250325 21:29:50.803" level="INFO">${result} = 2025-03-25 21:29:50         29 a+b</msg>
<status status="PASS" starttime="20250325 21:29:50.309" endtime="20250325 21:29:50.803"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:50.803" endtime="20250325 21:29:50.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:50.804" endtime="20250325 21:29:50.804"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:29:49.648" endtime="20250325 21:29:50.804"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:29:46.588" endtime="20250325 21:29:50.805"/>
</suite>
<suite id="s1-s3-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:29:50.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:50.816" endtime="20250325 21:29:50.816"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:29:50.816" endtime="20250325 21:29:50.816"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:29:50.816" endtime="20250325 21:29:50.816"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:50.816" endtime="20250325 21:29:50.817"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:50.817" endtime="20250325 21:29:50.817"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:50.817" endtime="20250325 21:29:50.817"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:50.817" endtime="20250325 21:29:50.817"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:50.817" endtime="20250325 21:29:50.817"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:29:50.817" endtime="20250325 21:29:50.817"/>
</kw>
<status status="PASS" starttime="20250325 21:29:50.816" endtime="20250325 21:29:50.817"/>
</kw>
<test id="s1-s3-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:50.821" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:58.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:58.904" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20250325 21:29:50.818" endtime="20250325 21:29:58.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:58.904" level="INFO">test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 7.856s

OK
{'ResponseMetadata': {'RequestId': '0808e112-fb36-4cdd-a4b4-4738e5ffe240', 'HostId': 'VLwWTSn778FBdJ', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 25 Mar 2025 21:29:51 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:29:51 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-bztamoabec', 'server': 'Ozone', 'x-amz-id-2': 'VLwWTSn778FBdJ', 'x-amz-request-id': '0808e112-fb36-4cdd-a4b4-4738e5ffe240', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-bztamoabec'}
None
None
None
{'ResponseMetadata': {'RequestId': '053777d8-fdc1-420f-b7d0-2d0525a6cec5', 'HostId': 'HX3EQmlgczpeZ', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 25 Mar 2025 21:29:53 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:29:53 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-ermweyocqb', 'server': 'Ozone', 'x-amz-id-2': 'HX3EQmlgczpeZ', 'x-amz-request-id': '053777d8-fdc1-420f-b7d0-2d0525a6cec5', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-ermweyocqb'}
{'ResponseMetadata': {'RequestId': 'e5148fad-3c3e-41d3-82fe-e034f96addca', 'HostId': 'AMCpJyCW', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 25 Mar 2025 21:29:53 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:29:53 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'AMCpJyCW', 'x-amz-request-id': 'e5148fad-3c3e-41d3-82fe-e034f96addca', 'content-length': '765'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-ermweyocqb', 'CreationDate': datetime.datetime(2025, 3, 25, 21, 29, 53, 116000, tzinfo=tzlocal())}, {'Name': 'bucket-mayhyhrcee', 'CreationDate': datetime.datetime(2025, 3, 25, 21, 27, 51, 591000, tzinfo=tzlocal())}, {'Name': 'bucket-test-owner1', 'CreationDate': datetime.datetime(2025, 3, 25, 21, 27, 38, 662000, tzinfo=tzlocal())}, {'Name': 'bucket-test123', 'CreationDate': datetime.datetime(2025, 3, 25, 21, 27, 53, 175000, tzinfo=tzlocal())}, {'Name': 'encrypted', 'CreationDate': datetime.datetime(2025, 3, 25, 21, 29, 46, 173000, tzinfo=tzlocal())}, {'Name': 'ozone-test-bztamoabec', 'CreationDate': datetime.datetime(2025, 3, 25, 21, 29, 51, 215000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': 'c32d1aa4-7322-4d8c-92f8-8d554e209cc5', 'HostId': 'VROqVpWmqag', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 25 Mar 2025 21:29:53 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:29:53 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'VROqVpWmqag', 'x-amz-request-id': 'c32d1aa4-7322-4d8c-92f8-8d554e209cc5', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'f6b3ca21-dec1-4def-8c58-b1e84db4388e', 'HostId': 'zSgxMbL7Y2T4L5', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Tue, 25 Mar 2025 21:29:53 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:29:53 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'zSgxMbL7Y2T4L5', 'x-amz-request-id': 'f6b3ca21-dec1-4def-8c58-b1e84db4388e'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '0d884627-c7f0-4f3e-ab9f-07b4244f0c3c', 'HostId': 'ZcIFGPZwV1XB8', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 25 Mar 2025 21:29:53 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:29:53 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Tue, 25 Mar 2025 21:29:53 GMT', 'server': 'Ozone', 'x-amz-id-2': 'ZcIFGPZwV1XB8', 'x-amz-request-id': '0d884627-c7f0-4f3e-ab9f-07b4244f0c3c', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2025, 3, 25, 21, 29, 53, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2025, 3, 25, 21, 29, 53, tzinfo=tzutc()), 'Metadata': {}, 'ExpiresString': 'Tue, 25 Mar 2025 21:29:53 GMT'}
{'ResponseMetadata': {'RequestId': '62c0c1cf-5d7f-4909-adcf-c488d5a4be54', 'HostId': 'juFscJHUn', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 25 Mar 2025 21:29:53 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:29:53 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'juFscJHUn', 'x-amz-request-id': '62c0c1cf-5d7f-4909-adcf-c488d5a4be54', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': '44818ff4-ec58-46cb-89e8-e97ffccab280', 'HostId': 'dssHXXgN', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 25 Mar 2025 21:29:53 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:29:53 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Tue, 25 Mar 2025 21:29:51 GMT', 'server': 'Ozone', 'x-amz-id-2': 'dssHXXgN', 'x-amz-request-id': '44818ff4-ec58-46cb-89e8-e97ffccab280', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2025, 3, 25, 21, 29, 51, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2025, 3, 25, 21, 29, 53, tzinfo=tzutc()), 'Metadata': {}, 'ExpiresString': 'Tue, 25 Mar 2025 21:29:53 GMT'}
{'ResponseMetadata': {'RequestId': '437434c1-b1be-4f66-8f41-810f2c2a0577', 'HostId': 'lYtyG8Lz31eME', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 25 Mar 2025 21:29:53 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:29:53 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'lYtyG8Lz31eME', 'x-amz-request-id': '437434c1-b1be-4f66-8f41-810f2c2a0577', 'content-length': '289'}, 'RetryAttempts': 0}, 'Bucket': 'encrypted', 'Key': 'ckpbrhylwe', 'UploadId': '0195cf36-3e9a-77f0-b8e3-a452ca3958cd-114225197453279251'}
{'ResponseMetadata': {'RequestId': 'd4841b9f-c286-46ee-bb9c-c144acea789b', 'HostId': 'C5rWPBFwd', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 25 Mar 2025 21:29:58 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:29:58 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'C5rWPBFwd', 'x-amz-request-id': 'd4841b9f-c286-46ee-bb9c-c144acea789b', 'content-length': '292'}, 'RetryAttempts': 0}, 'Location': 'encrypted', 'Bucket': 'encrypted', 'Key': 'ckpbrhylwe', 'ETag': '"27474247826a4d3ef022a25bece0ad53-2"'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20250325 21:29:58.904" endtime="20250325 21:29:58.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:58.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:58.905" endtime="20250325 21:29:58.905"/>
</kw>
<status status="PASS" starttime="20250325 21:29:50.818" endtime="20250325 21:29:58.905"/>
</kw>
<msg timestamp="20250325 21:29:58.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:50.818" endtime="20250325 21:29:58.905"/>
</kw>
<msg timestamp="20250325 21:29:58.906" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20250325 21:29:50.818" endtime="20250325 21:29:58.906"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20250325 21:29:50.817" endtime="20250325 21:29:58.906"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20250325 21:29:50.806" endtime="20250325 21:29:58.907"/>
</suite>
<suite id="s1-s3-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:29:58.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:58.915" endtime="20250325 21:29:58.915"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:29:58.915" endtime="20250325 21:29:58.915"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:29:58.915" endtime="20250325 21:29:58.915"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:58.915" endtime="20250325 21:29:58.915"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:58.916" endtime="20250325 21:29:58.916"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:58.916" endtime="20250325 21:29:58.916"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:58.916" endtime="20250325 21:29:58.916"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:29:58.916" endtime="20250325 21:29:58.916"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:29:58.916" endtime="20250325 21:29:58.916"/>
</kw>
<status status="PASS" starttime="20250325 21:29:58.915" endtime="20250325 21:29:58.916"/>
</kw>
<test id="s1-s3-s3-t1" name="Create new bucket" line="32">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:29:58.917" level="INFO">${randStr} = 4460916528</msg>
<status status="PASS" starttime="20250325 21:29:58.917" endtime="20250325 21:29:58.917"/>
</kw>
<msg timestamp="20250325 21:29:58.918" level="INFO">${postfix} = ozone-test-4460916528</msg>
<status status="PASS" starttime="20250325 21:29:58.917" endtime="20250325 21:29:58.918"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:29:58.918" level="INFO">${bucket} = bucket-ozone-test-4460916528</msg>
<status status="PASS" starttime="20250325 21:29:58.918" endtime="20250325 21:29:58.918"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:58.922" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-4460916528 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:59.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:59.415" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4460916528"
}</msg>
<status status="PASS" starttime="20250325 21:29:58.919" endtime="20250325 21:29:59.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:59.416" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-4460916528"
}</msg>
<status status="PASS" starttime="20250325 21:29:59.415" endtime="20250325 21:29:59.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:59.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:59.416" endtime="20250325 21:29:59.416"/>
</kw>
<status status="PASS" starttime="20250325 21:29:58.919" endtime="20250325 21:29:59.417"/>
</kw>
<msg timestamp="20250325 21:29:59.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:58.919" endtime="20250325 21:29:59.417"/>
</kw>
<msg timestamp="20250325 21:29:59.417" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4460916528"
}</msg>
<status status="PASS" starttime="20250325 21:29:58.919" endtime="20250325 21:29:59.417"/>
</kw>
<msg timestamp="20250325 21:29:59.417" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4460916528"
}</msg>
<status status="PASS" starttime="20250325 21:29:58.918" endtime="20250325 21:29:59.417"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:59.417" endtime="20250325 21:29:59.417"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:59.418" endtime="20250325 21:29:59.418"/>
</kw>
<status status="PASS" starttime="20250325 21:29:58.918" endtime="20250325 21:29:59.418"/>
</kw>
<status status="PASS" starttime="20250325 21:29:58.917" endtime="20250325 21:29:59.418"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:29:58.916" endtime="20250325 21:29:59.418"/>
</test>
<test id="s1-s3-s3-t2" name="Create bucket which already exists" line="35">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:29:59.420" level="INFO">${randStr} = 4969675339</msg>
<status status="PASS" starttime="20250325 21:29:59.420" endtime="20250325 21:29:59.420"/>
</kw>
<msg timestamp="20250325 21:29:59.420" level="INFO">${postfix} = ozone-test-4969675339</msg>
<status status="PASS" starttime="20250325 21:29:59.419" endtime="20250325 21:29:59.420"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:29:59.421" level="INFO">${bucket} = bucket-ozone-test-4969675339</msg>
<status status="PASS" starttime="20250325 21:29:59.420" endtime="20250325 21:29:59.421"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:59.424" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-4969675339 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:29:59.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:29:59.904" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4969675339"
}</msg>
<status status="PASS" starttime="20250325 21:29:59.422" endtime="20250325 21:29:59.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:29:59.904" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-4969675339"
}</msg>
<status status="PASS" starttime="20250325 21:29:59.904" endtime="20250325 21:29:59.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:29:59.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:29:59.905" endtime="20250325 21:29:59.905"/>
</kw>
<status status="PASS" starttime="20250325 21:29:59.422" endtime="20250325 21:29:59.905"/>
</kw>
<msg timestamp="20250325 21:29:59.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:29:59.422" endtime="20250325 21:29:59.905"/>
</kw>
<msg timestamp="20250325 21:29:59.905" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4969675339"
}</msg>
<status status="PASS" starttime="20250325 21:29:59.421" endtime="20250325 21:29:59.905"/>
</kw>
<msg timestamp="20250325 21:29:59.905" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4969675339"
}</msg>
<status status="PASS" starttime="20250325 21:29:59.421" endtime="20250325 21:29:59.905"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:59.906" endtime="20250325 21:29:59.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:29:59.906" endtime="20250325 21:29:59.906"/>
</kw>
<status status="PASS" starttime="20250325 21:29:59.421" endtime="20250325 21:29:59.906"/>
</kw>
<msg timestamp="20250325 21:29:59.906" level="INFO">${bucket} = bucket-ozone-test-4969675339</msg>
<status status="PASS" starttime="20250325 21:29:59.419" endtime="20250325 21:29:59.906"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:29:59.909" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-4969675339 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:00.414" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:30:00.414" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250325 21:29:59.907" endtime="20250325 21:30:00.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:00.415" level="INFO">
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250325 21:30:00.414" endtime="20250325 21:30:00.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:00.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:00.415" endtime="20250325 21:30:00.415"/>
</kw>
<msg timestamp="20250325 21:30:00.416" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250325 21:29:59.907" endtime="20250325 21:30:00.416"/>
</kw>
<msg timestamp="20250325 21:30:00.416" level="INFO">${result} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250325 21:29:59.906" endtime="20250325 21:30:00.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BucketAlreadyExists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:00.416" endtime="20250325 21:30:00.416"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:29:59.419" endtime="20250325 21:30:00.416"/>
</test>
<test id="s1-s3-s3-t3" name="Create bucket with invalid bucket name" line="40">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:00.418" level="INFO">${randStr} = 7461690213</msg>
<status status="PASS" starttime="20250325 21:30:00.418" endtime="20250325 21:30:00.418"/>
</kw>
<msg timestamp="20250325 21:30:00.418" level="INFO">${randStr} = ozone-test-7461690213</msg>
<status status="PASS" starttime="20250325 21:30:00.417" endtime="20250325 21:30:00.418"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket invalid_bucket_${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:00.421" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket invalid_bucket_ozone-test-7461690213 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:00.955" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:30:00.956" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250325 21:30:00.419" endtime="20250325 21:30:00.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:00.957" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250325 21:30:00.956" endtime="20250325 21:30:00.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:00.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:00.957" endtime="20250325 21:30:00.957"/>
</kw>
<msg timestamp="20250325 21:30:00.957" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250325 21:30:00.418" endtime="20250325 21:30:00.957"/>
</kw>
<msg timestamp="20250325 21:30:00.958" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250325 21:30:00.418" endtime="20250325 21:30:00.958"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:00.958" endtime="20250325 21:30:00.958"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:00.417" endtime="20250325 21:30:00.958"/>
</test>
<test id="s1-s3-s3-t4" name="Create new bucket and check default group ACL" line="45">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:00.960" level="INFO">${randStr} = 0494051927</msg>
<status status="PASS" starttime="20250325 21:30:00.960" endtime="20250325 21:30:00.960"/>
</kw>
<msg timestamp="20250325 21:30:00.960" level="INFO">${postfix} = ozone-test-0494051927</msg>
<status status="PASS" starttime="20250325 21:30:00.960" endtime="20250325 21:30:00.960"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:30:00.961" level="INFO">${bucket} = bucket-ozone-test-0494051927</msg>
<status status="PASS" starttime="20250325 21:30:00.961" endtime="20250325 21:30:00.961"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:00.965" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-0494051927 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:01.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:01.441" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0494051927"
}</msg>
<status status="PASS" starttime="20250325 21:30:00.963" endtime="20250325 21:30:01.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:01.442" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-0494051927"
}</msg>
<status status="PASS" starttime="20250325 21:30:01.442" endtime="20250325 21:30:01.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:01.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:01.442" endtime="20250325 21:30:01.443"/>
</kw>
<status status="PASS" starttime="20250325 21:30:00.962" endtime="20250325 21:30:01.443"/>
</kw>
<msg timestamp="20250325 21:30:01.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:00.962" endtime="20250325 21:30:01.443"/>
</kw>
<msg timestamp="20250325 21:30:01.443" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0494051927"
}</msg>
<status status="PASS" starttime="20250325 21:30:00.961" endtime="20250325 21:30:01.443"/>
</kw>
<msg timestamp="20250325 21:30:01.443" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0494051927"
}</msg>
<status status="PASS" starttime="20250325 21:30:00.961" endtime="20250325 21:30:01.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:01.444" endtime="20250325 21:30:01.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:01.444" endtime="20250325 21:30:01.444"/>
</kw>
<status status="PASS" starttime="20250325 21:30:00.961" endtime="20250325 21:30:01.444"/>
</kw>
<msg timestamp="20250325 21:30:01.444" level="INFO">${bucket} = bucket-ozone-test-0494051927</msg>
<status status="PASS" starttime="20250325 21:30:00.959" endtime="20250325 21:30:01.444"/>
</kw>
<kw name="Execute" library="os">
<var>${acl}</var>
<arg>ozone sh bucket getacl s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:01.448" level="INFO">Running command 'ozone sh bucket getacl s3v/bucket-ozone-test-0494051927 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:04.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:04.456" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ]...</msg>
<status status="PASS" starttime="20250325 21:30:01.445" endtime="20250325 21:30:04.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:04.457" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ]
} ]</msg>
<status status="PASS" starttime="20250325 21:30:04.456" endtime="20250325 21:30:04.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:04.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:04.457" endtime="20250325 21:30:04.457"/>
</kw>
<status status="PASS" starttime="20250325 21:30:01.445" endtime="20250325 21:30:04.457"/>
</kw>
<msg timestamp="20250325 21:30:04.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:01.445" endtime="20250325 21:30:04.458"/>
</kw>
<msg timestamp="20250325 21:30:04.458" level="INFO">${acl} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ]...</msg>
<status status="PASS" starttime="20250325 21:30:01.444" endtime="20250325 21:30:04.458"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${group}</var>
<arg>${acl}</arg>
<arg>"GROUP"</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250325 21:30:04.458" level="INFO">${group} = ['"GROUP"']</msg>
<status status="PASS" starttime="20250325 21:30:04.458" endtime="20250325 21:30:04.458"/>
</kw>
<if>
<branch type="IF" condition="'${group}' != '[]'">
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${acl}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250325 21:30:04.459" level="INFO">${json} = [{'type': 'USER', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['ALL']}, {'type': 'GROUP', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['READ', 'LIST']}]</msg>
<status status="PASS" starttime="20250325 21:30:04.459" endtime="20250325 21:30:04.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][type]</arg>
<arg>GROUP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:04.459" endtime="20250325 21:30:04.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>READ</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:04.459" endtime="20250325 21:30:04.460"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>LIST</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:04.460" endtime="20250325 21:30:04.460"/>
</kw>
<status status="PASS" starttime="20250325 21:30:04.458" endtime="20250325 21:30:04.460"/>
</branch>
<status status="PASS" starttime="20250325 21:30:04.458" endtime="20250325 21:30:04.460"/>
</if>
<tag>aws-skip</tag>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:00.959" endtime="20250325 21:30:04.460"/>
</test>
<test id="s1-s3-s3-t5" name="Test buckets named like web endpoints" line="58">
<kw name="Create Random File KB" library="os">
<var>${path}</var>
<arg>64</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Get Random Filename" library="os">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:04.463" level="INFO">${postfix} = saoujtjgxs</msg>
<status status="PASS" starttime="20250325 21:30:04.463" endtime="20250325 21:30:04.463"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempfile-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:30:04.464" level="INFO">${tmpfile} = /tmp/tempfile-saoujtjgxs</msg>
<status status="PASS" starttime="20250325 21:30:04.463" endtime="20250325 21:30:04.464"/>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${tmpfile}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20250325 21:30:04.464" level="INFO" html="true">File '&lt;a href="file:///tmp/tempfile-saoujtjgxs"&gt;/tmp/tempfile-saoujtjgxs&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250325 21:30:04.464" endtime="20250325 21:30:04.464"/>
</kw>
<status status="PASS" starttime="20250325 21:30:04.463" endtime="20250325 21:30:04.464"/>
</kw>
<msg timestamp="20250325 21:30:04.464" level="INFO">${path} = /tmp/tempfile-saoujtjgxs</msg>
<status status="PASS" starttime="20250325 21:30:04.462" endtime="20250325 21:30:04.464"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:04.468" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/tempfile-saoujtjgxs bs=1024 count=64 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:04.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:04.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:04.465" endtime="20250325 21:30:04.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:04.473" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:04.472" endtime="20250325 21:30:04.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:04.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:04.473" endtime="20250325 21:30:04.473"/>
</kw>
<status status="PASS" starttime="20250325 21:30:04.465" endtime="20250325 21:30:04.473"/>
</kw>
<msg timestamp="20250325 21:30:04.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:04.465" endtime="20250325 21:30:04.473"/>
</kw>
<status status="PASS" starttime="20250325 21:30:04.464" endtime="20250325 21:30:04.473"/>
</kw>
<msg timestamp="20250325 21:30:04.473" level="INFO">${path} = /tmp/tempfile-saoujtjgxs</msg>
<status status="PASS" starttime="20250325 21:30:04.462" endtime="20250325 21:30:04.474"/>
</kw>
<msg timestamp="20250325 21:30:04.474" level="INFO">${path} = /tmp/tempfile-saoujtjgxs</msg>
<status status="PASS" starttime="20250325 21:30:04.461" endtime="20250325 21:30:04.474"/>
</kw>
<for flavor="IN">
<var>${name}</var>
<value>conf</value>
<value>jmx</value>
<value>logs</value>
<value>logstream</value>
<value>prof</value>
<value>prom</value>
<value>secret</value>
<value>stacks</value>
<value>static</value>
<iter>
<var name="${name}">conf</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:04.477" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket conf 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:04.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:04.966" level="INFO">${output} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250325 21:30:04.475" endtime="20250325 21:30:04.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:04.967" level="INFO">{
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250325 21:30:04.967" endtime="20250325 21:30:04.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:04.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:04.968" endtime="20250325 21:30:04.968"/>
</kw>
<status status="PASS" starttime="20250325 21:30:04.475" endtime="20250325 21:30:04.968"/>
</kw>
<msg timestamp="20250325 21:30:04.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:04.475" endtime="20250325 21:30:04.968"/>
</kw>
<msg timestamp="20250325 21:30:04.968" level="INFO">${output} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250325 21:30:04.475" endtime="20250325 21:30:04.968"/>
</kw>
<msg timestamp="20250325 21:30:04.969" level="INFO">${result} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250325 21:30:04.474" endtime="20250325 21:30:04.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:04.969" endtime="20250325 21:30:04.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:04.969" endtime="20250325 21:30:04.969"/>
</kw>
<status status="PASS" starttime="20250325 21:30:04.474" endtime="20250325 21:30:04.969"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:04.973" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket conf --key testkey --body /tmp/tempfile-saoujtjgxs 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:05.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:05.552" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:04.971" endtime="20250325 21:30:05.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:05.553" level="INFO">{
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:05.553" endtime="20250325 21:30:05.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:05.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:05.553" endtime="20250325 21:30:05.554"/>
</kw>
<status status="PASS" starttime="20250325 21:30:04.971" endtime="20250325 21:30:05.554"/>
</kw>
<msg timestamp="20250325 21:30:05.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:04.970" endtime="20250325 21:30:05.554"/>
</kw>
<msg timestamp="20250325 21:30:05.554" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:04.970" endtime="20250325 21:30:05.554"/>
</kw>
<status status="PASS" starttime="20250325 21:30:04.970" endtime="20250325 21:30:05.554"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:05.559" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket conf 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:06.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:06.071" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:05.488Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:05.557" endtime="20250325 21:30:06.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:06.072" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:05.488Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:30:06.071" endtime="20250325 21:30:06.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:06.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:06.072" endtime="20250325 21:30:06.072"/>
</kw>
<status status="PASS" starttime="20250325 21:30:05.556" endtime="20250325 21:30:06.072"/>
</kw>
<msg timestamp="20250325 21:30:06.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:05.555" endtime="20250325 21:30:06.072"/>
</kw>
<msg timestamp="20250325 21:30:06.072" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:05.488Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:05.555" endtime="20250325 21:30:06.072"/>
</kw>
<msg timestamp="20250325 21:30:06.073" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:05.488Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:05.554" endtime="20250325 21:30:06.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:06.073" endtime="20250325 21:30:06.073"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:06.077" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket conf --key testkey /tmp/tempfile-saoujtjgxs.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:06.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:06.592" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:05 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:06.074" endtime="20250325 21:30:06.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:06.592" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:05 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:06 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:30:06 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:06.592" endtime="20250325 21:30:06.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:06.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:06.593" endtime="20250325 21:30:06.593"/>
</kw>
<status status="PASS" starttime="20250325 21:30:06.074" endtime="20250325 21:30:06.593"/>
</kw>
<msg timestamp="20250325 21:30:06.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:06.074" endtime="20250325 21:30:06.593"/>
</kw>
<msg timestamp="20250325 21:30:06.593" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:05 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:06.074" endtime="20250325 21:30:06.593"/>
</kw>
<status status="PASS" starttime="20250325 21:30:06.073" endtime="20250325 21:30:06.594"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:06.597" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:06.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:06.602" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:06.595" endtime="20250325 21:30:06.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:06.602" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:06.602" endtime="20250325 21:30:06.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:06.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:06.603" endtime="20250325 21:30:06.603"/>
</kw>
<status status="PASS" starttime="20250325 21:30:06.594" endtime="20250325 21:30:06.603"/>
</kw>
<msg timestamp="20250325 21:30:06.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:06.594" endtime="20250325 21:30:06.603"/>
</kw>
<msg timestamp="20250325 21:30:06.603" level="INFO">${checksumbefore} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:06.594" endtime="20250325 21:30:06.603"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:06.606" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:06.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:06.611" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:06.604" endtime="20250325 21:30:06.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:06.612" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:06.611" endtime="20250325 21:30:06.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:06.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:06.612" endtime="20250325 21:30:06.612"/>
</kw>
<status status="PASS" starttime="20250325 21:30:06.604" endtime="20250325 21:30:06.612"/>
</kw>
<msg timestamp="20250325 21:30:06.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:06.604" endtime="20250325 21:30:06.612"/>
</kw>
<msg timestamp="20250325 21:30:06.612" level="INFO">${checksumafter} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:06.603" endtime="20250325 21:30:06.612"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:06.613" endtime="20250325 21:30:06.613"/>
</kw>
<status status="PASS" starttime="20250325 21:30:06.594" endtime="20250325 21:30:06.613"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250325 21:30:06.613" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-saoujtjgxs.verify"&gt;/tmp/tempfile-saoujtjgxs.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250325 21:30:06.613" endtime="20250325 21:30:06.613"/>
</kw>
<status status="PASS" starttime="20250325 21:30:04.969" endtime="20250325 21:30:06.613"/>
</kw>
<status status="PASS" starttime="20250325 21:30:04.474" endtime="20250325 21:30:06.613"/>
</iter>
<iter>
<var name="${name}">jmx</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:06.626" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:07.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:07.116" level="INFO">${output} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250325 21:30:06.624" endtime="20250325 21:30:07.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:07.117" level="INFO">{
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250325 21:30:07.117" endtime="20250325 21:30:07.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:07.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:07.117" endtime="20250325 21:30:07.118"/>
</kw>
<status status="PASS" starttime="20250325 21:30:06.624" endtime="20250325 21:30:07.118"/>
</kw>
<msg timestamp="20250325 21:30:07.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:06.624" endtime="20250325 21:30:07.118"/>
</kw>
<msg timestamp="20250325 21:30:07.118" level="INFO">${output} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250325 21:30:06.623" endtime="20250325 21:30:07.118"/>
</kw>
<msg timestamp="20250325 21:30:07.118" level="INFO">${result} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250325 21:30:06.614" endtime="20250325 21:30:07.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:07.118" endtime="20250325 21:30:07.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:07.119" endtime="20250325 21:30:07.119"/>
</kw>
<status status="PASS" starttime="20250325 21:30:06.614" endtime="20250325 21:30:07.119"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:07.123" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket jmx --key testkey --body /tmp/tempfile-saoujtjgxs 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:07.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:07.706" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:07.121" endtime="20250325 21:30:07.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:07.707" level="INFO">{
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:07.707" endtime="20250325 21:30:07.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:07.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:07.708" endtime="20250325 21:30:07.709"/>
</kw>
<status status="PASS" starttime="20250325 21:30:07.120" endtime="20250325 21:30:07.709"/>
</kw>
<msg timestamp="20250325 21:30:07.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:07.120" endtime="20250325 21:30:07.709"/>
</kw>
<msg timestamp="20250325 21:30:07.709" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:07.120" endtime="20250325 21:30:07.709"/>
</kw>
<status status="PASS" starttime="20250325 21:30:07.120" endtime="20250325 21:30:07.709"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:07.716" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:08.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:08.242" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:07.623Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:07.712" endtime="20250325 21:30:08.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:08.243" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:07.623Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:30:08.242" endtime="20250325 21:30:08.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:08.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:08.243" endtime="20250325 21:30:08.243"/>
</kw>
<status status="PASS" starttime="20250325 21:30:07.711" endtime="20250325 21:30:08.243"/>
</kw>
<msg timestamp="20250325 21:30:08.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:07.711" endtime="20250325 21:30:08.243"/>
</kw>
<msg timestamp="20250325 21:30:08.243" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:07.623Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:07.710" endtime="20250325 21:30:08.243"/>
</kw>
<msg timestamp="20250325 21:30:08.244" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:07.623Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:07.710" endtime="20250325 21:30:08.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:08.244" endtime="20250325 21:30:08.244"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:08.248" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket jmx --key testkey /tmp/tempfile-saoujtjgxs.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:08.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:08.785" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:07 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:08.245" endtime="20250325 21:30:08.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:08.786" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:07 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:08 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:30:08 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:08.785" endtime="20250325 21:30:08.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:08.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:08.786" endtime="20250325 21:30:08.786"/>
</kw>
<status status="PASS" starttime="20250325 21:30:08.245" endtime="20250325 21:30:08.787"/>
</kw>
<msg timestamp="20250325 21:30:08.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:08.245" endtime="20250325 21:30:08.787"/>
</kw>
<msg timestamp="20250325 21:30:08.787" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:07 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:08.244" endtime="20250325 21:30:08.787"/>
</kw>
<status status="PASS" starttime="20250325 21:30:08.244" endtime="20250325 21:30:08.787"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:08.791" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:08.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:08.795" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:08.788" endtime="20250325 21:30:08.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:08.796" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:08.796" endtime="20250325 21:30:08.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:08.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:08.796" endtime="20250325 21:30:08.796"/>
</kw>
<status status="PASS" starttime="20250325 21:30:08.788" endtime="20250325 21:30:08.797"/>
</kw>
<msg timestamp="20250325 21:30:08.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:08.788" endtime="20250325 21:30:08.797"/>
</kw>
<msg timestamp="20250325 21:30:08.797" level="INFO">${checksumbefore} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:08.788" endtime="20250325 21:30:08.797"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:08.800" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:08.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:08.805" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:08.798" endtime="20250325 21:30:08.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:08.805" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:08.805" endtime="20250325 21:30:08.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:08.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:08.806" endtime="20250325 21:30:08.806"/>
</kw>
<status status="PASS" starttime="20250325 21:30:08.797" endtime="20250325 21:30:08.806"/>
</kw>
<msg timestamp="20250325 21:30:08.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:08.797" endtime="20250325 21:30:08.806"/>
</kw>
<msg timestamp="20250325 21:30:08.806" level="INFO">${checksumafter} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:08.797" endtime="20250325 21:30:08.806"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:08.806" endtime="20250325 21:30:08.807"/>
</kw>
<status status="PASS" starttime="20250325 21:30:08.787" endtime="20250325 21:30:08.807"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250325 21:30:08.807" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-saoujtjgxs.verify"&gt;/tmp/tempfile-saoujtjgxs.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250325 21:30:08.807" endtime="20250325 21:30:08.807"/>
</kw>
<status status="PASS" starttime="20250325 21:30:07.119" endtime="20250325 21:30:08.807"/>
</kw>
<status status="PASS" starttime="20250325 21:30:06.614" endtime="20250325 21:30:08.807"/>
</iter>
<iter>
<var name="${name}">logs</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:08.811" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket logs 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:09.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:09.306" level="INFO">${output} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250325 21:30:08.809" endtime="20250325 21:30:09.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:09.307" level="INFO">{
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250325 21:30:09.306" endtime="20250325 21:30:09.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:09.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:09.307" endtime="20250325 21:30:09.307"/>
</kw>
<status status="PASS" starttime="20250325 21:30:08.809" endtime="20250325 21:30:09.308"/>
</kw>
<msg timestamp="20250325 21:30:09.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:08.809" endtime="20250325 21:30:09.308"/>
</kw>
<msg timestamp="20250325 21:30:09.308" level="INFO">${output} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250325 21:30:08.808" endtime="20250325 21:30:09.308"/>
</kw>
<msg timestamp="20250325 21:30:09.308" level="INFO">${result} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250325 21:30:08.808" endtime="20250325 21:30:09.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:09.308" endtime="20250325 21:30:09.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:09.309" endtime="20250325 21:30:09.309"/>
</kw>
<status status="PASS" starttime="20250325 21:30:08.808" endtime="20250325 21:30:09.309"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:09.313" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket logs --key testkey --body /tmp/tempfile-saoujtjgxs 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:09.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:09.879" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:09.311" endtime="20250325 21:30:09.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:09.880" level="INFO">{
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:09.879" endtime="20250325 21:30:09.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:09.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:09.880" endtime="20250325 21:30:09.880"/>
</kw>
<status status="PASS" starttime="20250325 21:30:09.310" endtime="20250325 21:30:09.880"/>
</kw>
<msg timestamp="20250325 21:30:09.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:09.310" endtime="20250325 21:30:09.880"/>
</kw>
<msg timestamp="20250325 21:30:09.881" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:09.310" endtime="20250325 21:30:09.881"/>
</kw>
<status status="PASS" starttime="20250325 21:30:09.309" endtime="20250325 21:30:09.881"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:09.885" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket logs 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:10.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:10.372" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:09.802Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:09.882" endtime="20250325 21:30:10.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:10.372" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:09.802Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:30:10.372" endtime="20250325 21:30:10.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:10.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:10.373" endtime="20250325 21:30:10.373"/>
</kw>
<status status="PASS" starttime="20250325 21:30:09.882" endtime="20250325 21:30:10.373"/>
</kw>
<msg timestamp="20250325 21:30:10.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:09.882" endtime="20250325 21:30:10.373"/>
</kw>
<msg timestamp="20250325 21:30:10.373" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:09.802Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:09.881" endtime="20250325 21:30:10.373"/>
</kw>
<msg timestamp="20250325 21:30:10.373" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:09.802Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:09.881" endtime="20250325 21:30:10.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:10.374" endtime="20250325 21:30:10.374"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:10.377" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket logs --key testkey /tmp/tempfile-saoujtjgxs.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:10.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:10.881" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:09 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:10.375" endtime="20250325 21:30:10.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:10.882" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:09 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:10 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:30:10 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:10.882" endtime="20250325 21:30:10.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:10.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:10.882" endtime="20250325 21:30:10.883"/>
</kw>
<status status="PASS" starttime="20250325 21:30:10.375" endtime="20250325 21:30:10.883"/>
</kw>
<msg timestamp="20250325 21:30:10.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:10.375" endtime="20250325 21:30:10.883"/>
</kw>
<msg timestamp="20250325 21:30:10.883" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:09 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:10.374" endtime="20250325 21:30:10.883"/>
</kw>
<status status="PASS" starttime="20250325 21:30:10.374" endtime="20250325 21:30:10.883"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:10.887" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:10.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:10.891" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:10.884" endtime="20250325 21:30:10.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:10.892" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:10.892" endtime="20250325 21:30:10.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:10.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:10.892" endtime="20250325 21:30:10.893"/>
</kw>
<status status="PASS" starttime="20250325 21:30:10.884" endtime="20250325 21:30:10.893"/>
</kw>
<msg timestamp="20250325 21:30:10.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:10.884" endtime="20250325 21:30:10.893"/>
</kw>
<msg timestamp="20250325 21:30:10.893" level="INFO">${checksumbefore} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:10.884" endtime="20250325 21:30:10.893"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:10.896" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:10.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:10.900" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:10.894" endtime="20250325 21:30:10.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:10.901" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:10.901" endtime="20250325 21:30:10.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:10.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:10.901" endtime="20250325 21:30:10.902"/>
</kw>
<status status="PASS" starttime="20250325 21:30:10.894" endtime="20250325 21:30:10.902"/>
</kw>
<msg timestamp="20250325 21:30:10.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:10.893" endtime="20250325 21:30:10.902"/>
</kw>
<msg timestamp="20250325 21:30:10.902" level="INFO">${checksumafter} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:10.893" endtime="20250325 21:30:10.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:10.902" endtime="20250325 21:30:10.903"/>
</kw>
<status status="PASS" starttime="20250325 21:30:10.883" endtime="20250325 21:30:10.903"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250325 21:30:10.903" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-saoujtjgxs.verify"&gt;/tmp/tempfile-saoujtjgxs.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250325 21:30:10.903" endtime="20250325 21:30:10.903"/>
</kw>
<status status="PASS" starttime="20250325 21:30:09.309" endtime="20250325 21:30:10.903"/>
</kw>
<status status="PASS" starttime="20250325 21:30:08.808" endtime="20250325 21:30:10.903"/>
</iter>
<iter>
<var name="${name}">logstream</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:10.908" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket logstream 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:11.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:11.397" level="INFO">${output} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250325 21:30:10.905" endtime="20250325 21:30:11.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:11.398" level="INFO">{
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250325 21:30:11.397" endtime="20250325 21:30:11.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:11.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:11.398" endtime="20250325 21:30:11.398"/>
</kw>
<status status="PASS" starttime="20250325 21:30:10.905" endtime="20250325 21:30:11.398"/>
</kw>
<msg timestamp="20250325 21:30:11.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:10.905" endtime="20250325 21:30:11.399"/>
</kw>
<msg timestamp="20250325 21:30:11.399" level="INFO">${output} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250325 21:30:10.904" endtime="20250325 21:30:11.399"/>
</kw>
<msg timestamp="20250325 21:30:11.399" level="INFO">${result} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250325 21:30:10.904" endtime="20250325 21:30:11.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:11.399" endtime="20250325 21:30:11.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:11.399" endtime="20250325 21:30:11.399"/>
</kw>
<status status="PASS" starttime="20250325 21:30:10.904" endtime="20250325 21:30:11.399"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:11.404" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket logstream --key testkey --body /tmp/tempfile-saoujtjgxs 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:11.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:11.927" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:11.401" endtime="20250325 21:30:11.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:11.928" level="INFO">{
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:11.927" endtime="20250325 21:30:11.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:11.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:11.928" endtime="20250325 21:30:11.928"/>
</kw>
<status status="PASS" starttime="20250325 21:30:11.401" endtime="20250325 21:30:11.928"/>
</kw>
<msg timestamp="20250325 21:30:11.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:11.401" endtime="20250325 21:30:11.929"/>
</kw>
<msg timestamp="20250325 21:30:11.929" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:11.400" endtime="20250325 21:30:11.929"/>
</kw>
<status status="PASS" starttime="20250325 21:30:11.400" endtime="20250325 21:30:11.929"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:11.932" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket logstream 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:12.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:12.409" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:11.868Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:11.930" endtime="20250325 21:30:12.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:12.410" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:11.868Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:30:12.409" endtime="20250325 21:30:12.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:12.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:12.410" endtime="20250325 21:30:12.410"/>
</kw>
<status status="PASS" starttime="20250325 21:30:11.930" endtime="20250325 21:30:12.410"/>
</kw>
<msg timestamp="20250325 21:30:12.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:11.930" endtime="20250325 21:30:12.411"/>
</kw>
<msg timestamp="20250325 21:30:12.411" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:11.868Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:11.929" endtime="20250325 21:30:12.411"/>
</kw>
<msg timestamp="20250325 21:30:12.411" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:11.868Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:11.929" endtime="20250325 21:30:12.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:12.411" endtime="20250325 21:30:12.411"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:12.415" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket logstream --key testkey /tmp/tempfile-saoujtjgxs.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:12.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:12.896" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:11 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:12.413" endtime="20250325 21:30:12.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:12.897" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:11 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:12 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:30:12 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:12.896" endtime="20250325 21:30:12.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:12.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:12.897" endtime="20250325 21:30:12.897"/>
</kw>
<status status="PASS" starttime="20250325 21:30:12.413" endtime="20250325 21:30:12.897"/>
</kw>
<msg timestamp="20250325 21:30:12.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:12.412" endtime="20250325 21:30:12.897"/>
</kw>
<msg timestamp="20250325 21:30:12.898" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:11 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:12.412" endtime="20250325 21:30:12.898"/>
</kw>
<status status="PASS" starttime="20250325 21:30:12.411" endtime="20250325 21:30:12.898"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:12.901" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:12.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:12.906" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:12.899" endtime="20250325 21:30:12.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:12.906" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:12.906" endtime="20250325 21:30:12.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:12.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:12.907" endtime="20250325 21:30:12.907"/>
</kw>
<status status="PASS" starttime="20250325 21:30:12.899" endtime="20250325 21:30:12.907"/>
</kw>
<msg timestamp="20250325 21:30:12.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:12.898" endtime="20250325 21:30:12.907"/>
</kw>
<msg timestamp="20250325 21:30:12.907" level="INFO">${checksumbefore} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:12.898" endtime="20250325 21:30:12.907"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:12.910" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:12.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:12.915" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:12.908" endtime="20250325 21:30:12.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:12.915" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:12.915" endtime="20250325 21:30:12.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:12.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:12.916" endtime="20250325 21:30:12.916"/>
</kw>
<status status="PASS" starttime="20250325 21:30:12.908" endtime="20250325 21:30:12.916"/>
</kw>
<msg timestamp="20250325 21:30:12.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:12.908" endtime="20250325 21:30:12.916"/>
</kw>
<msg timestamp="20250325 21:30:12.916" level="INFO">${checksumafter} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:12.907" endtime="20250325 21:30:12.916"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:12.916" endtime="20250325 21:30:12.917"/>
</kw>
<status status="PASS" starttime="20250325 21:30:12.898" endtime="20250325 21:30:12.917"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250325 21:30:12.917" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-saoujtjgxs.verify"&gt;/tmp/tempfile-saoujtjgxs.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250325 21:30:12.917" endtime="20250325 21:30:12.917"/>
</kw>
<status status="PASS" starttime="20250325 21:30:11.400" endtime="20250325 21:30:12.917"/>
</kw>
<status status="PASS" starttime="20250325 21:30:10.903" endtime="20250325 21:30:12.917"/>
</iter>
<iter>
<var name="${name}">prof</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:12.921" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket prof 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:13.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:13.398" level="INFO">${output} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250325 21:30:12.919" endtime="20250325 21:30:13.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:13.399" level="INFO">{
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250325 21:30:13.399" endtime="20250325 21:30:13.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:13.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:13.400" endtime="20250325 21:30:13.400"/>
</kw>
<status status="PASS" starttime="20250325 21:30:12.919" endtime="20250325 21:30:13.400"/>
</kw>
<msg timestamp="20250325 21:30:13.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:12.919" endtime="20250325 21:30:13.400"/>
</kw>
<msg timestamp="20250325 21:30:13.400" level="INFO">${output} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250325 21:30:12.918" endtime="20250325 21:30:13.400"/>
</kw>
<msg timestamp="20250325 21:30:13.400" level="INFO">${result} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250325 21:30:12.918" endtime="20250325 21:30:13.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:13.401" endtime="20250325 21:30:13.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:13.401" endtime="20250325 21:30:13.401"/>
</kw>
<status status="PASS" starttime="20250325 21:30:12.918" endtime="20250325 21:30:13.401"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:13.405" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket prof --key testkey --body /tmp/tempfile-saoujtjgxs 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:13.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:13.968" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:13.403" endtime="20250325 21:30:13.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:13.969" level="INFO">{
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:13.969" endtime="20250325 21:30:13.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:13.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:13.969" endtime="20250325 21:30:13.970"/>
</kw>
<status status="PASS" starttime="20250325 21:30:13.403" endtime="20250325 21:30:13.970"/>
</kw>
<msg timestamp="20250325 21:30:13.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:13.402" endtime="20250325 21:30:13.970"/>
</kw>
<msg timestamp="20250325 21:30:13.970" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:13.402" endtime="20250325 21:30:13.970"/>
</kw>
<status status="PASS" starttime="20250325 21:30:13.402" endtime="20250325 21:30:13.970"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:13.974" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket prof 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:14.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:14.457" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:13.901Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:13.971" endtime="20250325 21:30:14.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:14.458" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:13.901Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:30:14.457" endtime="20250325 21:30:14.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:14.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:14.458" endtime="20250325 21:30:14.458"/>
</kw>
<status status="PASS" starttime="20250325 21:30:13.971" endtime="20250325 21:30:14.459"/>
</kw>
<msg timestamp="20250325 21:30:14.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:13.971" endtime="20250325 21:30:14.459"/>
</kw>
<msg timestamp="20250325 21:30:14.459" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:13.901Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:13.971" endtime="20250325 21:30:14.459"/>
</kw>
<msg timestamp="20250325 21:30:14.459" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:13.901Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:13.970" endtime="20250325 21:30:14.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:14.459" endtime="20250325 21:30:14.459"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:14.463" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket prof --key testkey /tmp/tempfile-saoujtjgxs.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:14.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:14.953" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:13 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:14.461" endtime="20250325 21:30:14.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:14.954" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:13 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:14 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:30:14 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:14.953" endtime="20250325 21:30:14.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:14.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:14.954" endtime="20250325 21:30:14.954"/>
</kw>
<status status="PASS" starttime="20250325 21:30:14.460" endtime="20250325 21:30:14.954"/>
</kw>
<msg timestamp="20250325 21:30:14.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:14.460" endtime="20250325 21:30:14.954"/>
</kw>
<msg timestamp="20250325 21:30:14.955" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:13 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:14.460" endtime="20250325 21:30:14.955"/>
</kw>
<status status="PASS" starttime="20250325 21:30:14.459" endtime="20250325 21:30:14.955"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:14.958" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:14.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:14.963" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:14.956" endtime="20250325 21:30:14.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:14.963" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:14.963" endtime="20250325 21:30:14.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:14.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:14.964" endtime="20250325 21:30:14.964"/>
</kw>
<status status="PASS" starttime="20250325 21:30:14.956" endtime="20250325 21:30:14.964"/>
</kw>
<msg timestamp="20250325 21:30:14.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:14.956" endtime="20250325 21:30:14.964"/>
</kw>
<msg timestamp="20250325 21:30:14.964" level="INFO">${checksumbefore} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:14.955" endtime="20250325 21:30:14.964"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:14.967" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:14.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:14.971" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:14.965" endtime="20250325 21:30:14.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:14.972" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:14.972" endtime="20250325 21:30:14.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:14.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:14.972" endtime="20250325 21:30:14.973"/>
</kw>
<status status="PASS" starttime="20250325 21:30:14.965" endtime="20250325 21:30:14.973"/>
</kw>
<msg timestamp="20250325 21:30:14.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:14.965" endtime="20250325 21:30:14.973"/>
</kw>
<msg timestamp="20250325 21:30:14.973" level="INFO">${checksumafter} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:14.964" endtime="20250325 21:30:14.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:14.973" endtime="20250325 21:30:14.973"/>
</kw>
<status status="PASS" starttime="20250325 21:30:14.955" endtime="20250325 21:30:14.974"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250325 21:30:14.974" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-saoujtjgxs.verify"&gt;/tmp/tempfile-saoujtjgxs.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250325 21:30:14.974" endtime="20250325 21:30:14.974"/>
</kw>
<status status="PASS" starttime="20250325 21:30:13.401" endtime="20250325 21:30:14.974"/>
</kw>
<status status="PASS" starttime="20250325 21:30:12.918" endtime="20250325 21:30:14.974"/>
</iter>
<iter>
<var name="${name}">prom</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:14.978" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket prom 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:15.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:15.455" level="INFO">${output} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250325 21:30:14.976" endtime="20250325 21:30:15.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:15.456" level="INFO">{
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250325 21:30:15.456" endtime="20250325 21:30:15.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:15.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:15.456" endtime="20250325 21:30:15.457"/>
</kw>
<status status="PASS" starttime="20250325 21:30:14.976" endtime="20250325 21:30:15.457"/>
</kw>
<msg timestamp="20250325 21:30:15.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:14.975" endtime="20250325 21:30:15.457"/>
</kw>
<msg timestamp="20250325 21:30:15.457" level="INFO">${output} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250325 21:30:14.975" endtime="20250325 21:30:15.457"/>
</kw>
<msg timestamp="20250325 21:30:15.457" level="INFO">${result} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250325 21:30:14.975" endtime="20250325 21:30:15.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:15.458" endtime="20250325 21:30:15.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:15.458" endtime="20250325 21:30:15.458"/>
</kw>
<status status="PASS" starttime="20250325 21:30:14.974" endtime="20250325 21:30:15.458"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:15.462" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket prom --key testkey --body /tmp/tempfile-saoujtjgxs 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:16.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:16.005" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:15.460" endtime="20250325 21:30:16.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:16.006" level="INFO">{
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:16.005" endtime="20250325 21:30:16.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:16.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:16.006" endtime="20250325 21:30:16.007"/>
</kw>
<status status="PASS" starttime="20250325 21:30:15.459" endtime="20250325 21:30:16.007"/>
</kw>
<msg timestamp="20250325 21:30:16.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:15.459" endtime="20250325 21:30:16.007"/>
</kw>
<msg timestamp="20250325 21:30:16.007" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:15.459" endtime="20250325 21:30:16.007"/>
</kw>
<status status="PASS" starttime="20250325 21:30:15.459" endtime="20250325 21:30:16.007"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:16.012" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket prom 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:16.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:16.498" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:15.933Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:16.009" endtime="20250325 21:30:16.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:16.499" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:15.933Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:30:16.499" endtime="20250325 21:30:16.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:16.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:16.499" endtime="20250325 21:30:16.500"/>
</kw>
<status status="PASS" starttime="20250325 21:30:16.009" endtime="20250325 21:30:16.500"/>
</kw>
<msg timestamp="20250325 21:30:16.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:16.008" endtime="20250325 21:30:16.500"/>
</kw>
<msg timestamp="20250325 21:30:16.500" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:15.933Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:16.008" endtime="20250325 21:30:16.500"/>
</kw>
<msg timestamp="20250325 21:30:16.500" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:15.933Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:16.008" endtime="20250325 21:30:16.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:16.500" endtime="20250325 21:30:16.501"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:16.505" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket prom --key testkey /tmp/tempfile-saoujtjgxs.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:16.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:16.985" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:15 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:16.502" endtime="20250325 21:30:16.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:16.986" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:15 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:16 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:30:16 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:16.986" endtime="20250325 21:30:16.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:16.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:16.986" endtime="20250325 21:30:16.987"/>
</kw>
<status status="PASS" starttime="20250325 21:30:16.502" endtime="20250325 21:30:16.987"/>
</kw>
<msg timestamp="20250325 21:30:16.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:16.501" endtime="20250325 21:30:16.987"/>
</kw>
<msg timestamp="20250325 21:30:16.987" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:15 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:16.501" endtime="20250325 21:30:16.987"/>
</kw>
<status status="PASS" starttime="20250325 21:30:16.501" endtime="20250325 21:30:16.987"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:16.991" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:16.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:16.995" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:16.989" endtime="20250325 21:30:16.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:16.996" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:16.996" endtime="20250325 21:30:16.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:16.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:16.996" endtime="20250325 21:30:16.996"/>
</kw>
<status status="PASS" starttime="20250325 21:30:16.988" endtime="20250325 21:30:16.997"/>
</kw>
<msg timestamp="20250325 21:30:16.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:16.988" endtime="20250325 21:30:16.997"/>
</kw>
<msg timestamp="20250325 21:30:16.997" level="INFO">${checksumbefore} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:16.988" endtime="20250325 21:30:16.997"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:17.000" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:17.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:17.004" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:16.998" endtime="20250325 21:30:17.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:17.005" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:17.004" endtime="20250325 21:30:17.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:17.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:17.005" endtime="20250325 21:30:17.005"/>
</kw>
<status status="PASS" starttime="20250325 21:30:16.998" endtime="20250325 21:30:17.005"/>
</kw>
<msg timestamp="20250325 21:30:17.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:16.997" endtime="20250325 21:30:17.005"/>
</kw>
<msg timestamp="20250325 21:30:17.006" level="INFO">${checksumafter} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:16.997" endtime="20250325 21:30:17.006"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:17.006" endtime="20250325 21:30:17.006"/>
</kw>
<status status="PASS" starttime="20250325 21:30:16.987" endtime="20250325 21:30:17.006"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250325 21:30:17.007" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-saoujtjgxs.verify"&gt;/tmp/tempfile-saoujtjgxs.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250325 21:30:17.006" endtime="20250325 21:30:17.007"/>
</kw>
<status status="PASS" starttime="20250325 21:30:15.458" endtime="20250325 21:30:17.007"/>
</kw>
<status status="PASS" starttime="20250325 21:30:14.974" endtime="20250325 21:30:17.007"/>
</iter>
<iter>
<var name="${name}">secret</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:17.010" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:17.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:17.482" level="INFO">${output} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250325 21:30:17.008" endtime="20250325 21:30:17.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:17.483" level="INFO">{
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250325 21:30:17.483" endtime="20250325 21:30:17.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:17.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:17.483" endtime="20250325 21:30:17.484"/>
</kw>
<status status="PASS" starttime="20250325 21:30:17.008" endtime="20250325 21:30:17.484"/>
</kw>
<msg timestamp="20250325 21:30:17.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:17.008" endtime="20250325 21:30:17.484"/>
</kw>
<msg timestamp="20250325 21:30:17.485" level="INFO">${output} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250325 21:30:17.008" endtime="20250325 21:30:17.485"/>
</kw>
<msg timestamp="20250325 21:30:17.485" level="INFO">${result} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250325 21:30:17.007" endtime="20250325 21:30:17.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:17.485" endtime="20250325 21:30:17.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:17.485" endtime="20250325 21:30:17.485"/>
</kw>
<status status="PASS" starttime="20250325 21:30:17.007" endtime="20250325 21:30:17.486"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:17.489" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket secret --key testkey --body /tmp/tempfile-saoujtjgxs 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:18.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:18.031" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:17.487" endtime="20250325 21:30:18.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:18.032" level="INFO">{
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:18.032" endtime="20250325 21:30:18.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:18.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:18.033" endtime="20250325 21:30:18.033"/>
</kw>
<status status="PASS" starttime="20250325 21:30:17.487" endtime="20250325 21:30:18.033"/>
</kw>
<msg timestamp="20250325 21:30:18.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:17.487" endtime="20250325 21:30:18.033"/>
</kw>
<msg timestamp="20250325 21:30:18.034" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:17.486" endtime="20250325 21:30:18.034"/>
</kw>
<status status="PASS" starttime="20250325 21:30:17.486" endtime="20250325 21:30:18.034"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:18.038" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:18.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:18.521" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:17.956Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:18.035" endtime="20250325 21:30:18.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:18.522" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:17.956Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:30:18.521" endtime="20250325 21:30:18.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:18.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:18.522" endtime="20250325 21:30:18.522"/>
</kw>
<status status="PASS" starttime="20250325 21:30:18.035" endtime="20250325 21:30:18.522"/>
</kw>
<msg timestamp="20250325 21:30:18.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:18.035" endtime="20250325 21:30:18.522"/>
</kw>
<msg timestamp="20250325 21:30:18.523" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:17.956Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:18.034" endtime="20250325 21:30:18.523"/>
</kw>
<msg timestamp="20250325 21:30:18.523" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:17.956Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:18.034" endtime="20250325 21:30:18.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:18.523" endtime="20250325 21:30:18.523"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:18.527" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket secret --key testkey /tmp/tempfile-saoujtjgxs.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:19.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:19.009" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:17 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:18.524" endtime="20250325 21:30:19.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:19.010" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:17 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:18 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:30:18 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:19.009" endtime="20250325 21:30:19.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:19.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:19.010" endtime="20250325 21:30:19.010"/>
</kw>
<status status="PASS" starttime="20250325 21:30:18.524" endtime="20250325 21:30:19.011"/>
</kw>
<msg timestamp="20250325 21:30:19.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:18.524" endtime="20250325 21:30:19.011"/>
</kw>
<msg timestamp="20250325 21:30:19.011" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:17 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:18.524" endtime="20250325 21:30:19.011"/>
</kw>
<status status="PASS" starttime="20250325 21:30:18.523" endtime="20250325 21:30:19.011"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:19.015" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:19.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:19.019" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:19.012" endtime="20250325 21:30:19.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:19.020" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:19.019" endtime="20250325 21:30:19.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:19.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:19.020" endtime="20250325 21:30:19.020"/>
</kw>
<status status="PASS" starttime="20250325 21:30:19.012" endtime="20250325 21:30:19.020"/>
</kw>
<msg timestamp="20250325 21:30:19.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:19.012" endtime="20250325 21:30:19.021"/>
</kw>
<msg timestamp="20250325 21:30:19.021" level="INFO">${checksumbefore} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:19.011" endtime="20250325 21:30:19.021"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:19.024" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:19.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:19.028" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:19.022" endtime="20250325 21:30:19.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:19.029" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:19.029" endtime="20250325 21:30:19.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:19.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:19.029" endtime="20250325 21:30:19.029"/>
</kw>
<status status="PASS" starttime="20250325 21:30:19.021" endtime="20250325 21:30:19.030"/>
</kw>
<msg timestamp="20250325 21:30:19.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:19.021" endtime="20250325 21:30:19.030"/>
</kw>
<msg timestamp="20250325 21:30:19.030" level="INFO">${checksumafter} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:19.021" endtime="20250325 21:30:19.030"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:19.030" endtime="20250325 21:30:19.030"/>
</kw>
<status status="PASS" starttime="20250325 21:30:19.011" endtime="20250325 21:30:19.030"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250325 21:30:19.031" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-saoujtjgxs.verify"&gt;/tmp/tempfile-saoujtjgxs.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250325 21:30:19.031" endtime="20250325 21:30:19.031"/>
</kw>
<status status="PASS" starttime="20250325 21:30:17.486" endtime="20250325 21:30:19.031"/>
</kw>
<status status="PASS" starttime="20250325 21:30:17.007" endtime="20250325 21:30:19.031"/>
</iter>
<iter>
<var name="${name}">stacks</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:19.035" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket stacks 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:19.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:19.517" level="INFO">${output} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250325 21:30:19.033" endtime="20250325 21:30:19.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:19.517" level="INFO">{
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250325 21:30:19.517" endtime="20250325 21:30:19.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:19.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:19.518" endtime="20250325 21:30:19.519"/>
</kw>
<status status="PASS" starttime="20250325 21:30:19.032" endtime="20250325 21:30:19.519"/>
</kw>
<msg timestamp="20250325 21:30:19.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:19.032" endtime="20250325 21:30:19.519"/>
</kw>
<msg timestamp="20250325 21:30:19.519" level="INFO">${output} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250325 21:30:19.032" endtime="20250325 21:30:19.519"/>
</kw>
<msg timestamp="20250325 21:30:19.519" level="INFO">${result} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250325 21:30:19.032" endtime="20250325 21:30:19.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:19.519" endtime="20250325 21:30:19.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:19.520" endtime="20250325 21:30:19.520"/>
</kw>
<status status="PASS" starttime="20250325 21:30:19.031" endtime="20250325 21:30:19.520"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:19.524" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket stacks --key testkey --body /tmp/tempfile-saoujtjgxs 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:20.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:20.069" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:19.521" endtime="20250325 21:30:20.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:20.071" level="INFO">{
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:20.070" endtime="20250325 21:30:20.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:20.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:20.071" endtime="20250325 21:30:20.071"/>
</kw>
<status status="PASS" starttime="20250325 21:30:19.521" endtime="20250325 21:30:20.071"/>
</kw>
<msg timestamp="20250325 21:30:20.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:19.521" endtime="20250325 21:30:20.072"/>
</kw>
<msg timestamp="20250325 21:30:20.072" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:19.521" endtime="20250325 21:30:20.072"/>
</kw>
<status status="PASS" starttime="20250325 21:30:19.520" endtime="20250325 21:30:20.072"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:20.076" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket stacks 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:20.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:20.552" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:19.994Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:20.074" endtime="20250325 21:30:20.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:20.553" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:19.994Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:30:20.553" endtime="20250325 21:30:20.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:20.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:20.553" endtime="20250325 21:30:20.554"/>
</kw>
<status status="PASS" starttime="20250325 21:30:20.073" endtime="20250325 21:30:20.554"/>
</kw>
<msg timestamp="20250325 21:30:20.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:20.073" endtime="20250325 21:30:20.554"/>
</kw>
<msg timestamp="20250325 21:30:20.554" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:19.994Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:20.073" endtime="20250325 21:30:20.554"/>
</kw>
<msg timestamp="20250325 21:30:20.554" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:19.994Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:20.072" endtime="20250325 21:30:20.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:20.555" endtime="20250325 21:30:20.555"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:20.558" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket stacks --key testkey /tmp/tempfile-saoujtjgxs.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:21.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:21.036" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:19 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:20.556" endtime="20250325 21:30:21.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:21.037" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:19 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:20 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:30:20 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:21.036" endtime="20250325 21:30:21.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:21.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:21.037" endtime="20250325 21:30:21.037"/>
</kw>
<status status="PASS" starttime="20250325 21:30:20.556" endtime="20250325 21:30:21.037"/>
</kw>
<msg timestamp="20250325 21:30:21.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:20.556" endtime="20250325 21:30:21.038"/>
</kw>
<msg timestamp="20250325 21:30:21.038" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:19 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:20.555" endtime="20250325 21:30:21.038"/>
</kw>
<status status="PASS" starttime="20250325 21:30:20.555" endtime="20250325 21:30:21.038"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:21.042" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:21.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:21.046" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:21.039" endtime="20250325 21:30:21.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:21.047" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:21.046" endtime="20250325 21:30:21.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:21.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:21.047" endtime="20250325 21:30:21.047"/>
</kw>
<status status="PASS" starttime="20250325 21:30:21.039" endtime="20250325 21:30:21.047"/>
</kw>
<msg timestamp="20250325 21:30:21.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:21.039" endtime="20250325 21:30:21.048"/>
</kw>
<msg timestamp="20250325 21:30:21.048" level="INFO">${checksumbefore} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:21.038" endtime="20250325 21:30:21.048"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:21.051" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:21.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:21.055" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:21.049" endtime="20250325 21:30:21.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:21.056" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:21.056" endtime="20250325 21:30:21.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:21.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:21.056" endtime="20250325 21:30:21.056"/>
</kw>
<status status="PASS" starttime="20250325 21:30:21.048" endtime="20250325 21:30:21.057"/>
</kw>
<msg timestamp="20250325 21:30:21.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:21.048" endtime="20250325 21:30:21.057"/>
</kw>
<msg timestamp="20250325 21:30:21.057" level="INFO">${checksumafter} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:21.048" endtime="20250325 21:30:21.057"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:21.057" endtime="20250325 21:30:21.057"/>
</kw>
<status status="PASS" starttime="20250325 21:30:21.038" endtime="20250325 21:30:21.057"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250325 21:30:21.058" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-saoujtjgxs.verify"&gt;/tmp/tempfile-saoujtjgxs.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250325 21:30:21.057" endtime="20250325 21:30:21.058"/>
</kw>
<status status="PASS" starttime="20250325 21:30:19.520" endtime="20250325 21:30:21.058"/>
</kw>
<status status="PASS" starttime="20250325 21:30:19.031" endtime="20250325 21:30:21.058"/>
</iter>
<iter>
<var name="${name}">static</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:21.062" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket static 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:21.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:21.534" level="INFO">${output} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250325 21:30:21.059" endtime="20250325 21:30:21.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:21.535" level="INFO">{
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250325 21:30:21.534" endtime="20250325 21:30:21.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:21.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:21.535" endtime="20250325 21:30:21.535"/>
</kw>
<status status="PASS" starttime="20250325 21:30:21.059" endtime="20250325 21:30:21.535"/>
</kw>
<msg timestamp="20250325 21:30:21.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:21.059" endtime="20250325 21:30:21.535"/>
</kw>
<msg timestamp="20250325 21:30:21.536" level="INFO">${output} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250325 21:30:21.059" endtime="20250325 21:30:21.536"/>
</kw>
<msg timestamp="20250325 21:30:21.536" level="INFO">${result} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250325 21:30:21.058" endtime="20250325 21:30:21.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:21.536" endtime="20250325 21:30:21.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:21.536" endtime="20250325 21:30:21.536"/>
</kw>
<status status="PASS" starttime="20250325 21:30:21.058" endtime="20250325 21:30:21.537"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:21.541" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket static --key testkey --body /tmp/tempfile-saoujtjgxs 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:22.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:22.056" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:21.539" endtime="20250325 21:30:22.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:22.057" level="INFO">{
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:22.057" endtime="20250325 21:30:22.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:22.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:22.057" endtime="20250325 21:30:22.058"/>
</kw>
<status status="PASS" starttime="20250325 21:30:21.538" endtime="20250325 21:30:22.058"/>
</kw>
<msg timestamp="20250325 21:30:22.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:21.538" endtime="20250325 21:30:22.058"/>
</kw>
<msg timestamp="20250325 21:30:22.058" level="INFO">${output} = {
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\""
}</msg>
<status status="PASS" starttime="20250325 21:30:21.538" endtime="20250325 21:30:22.058"/>
</kw>
<status status="PASS" starttime="20250325 21:30:21.537" endtime="20250325 21:30:22.058"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:22.062" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket static 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:22.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:22.536" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:22.005Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:22.059" endtime="20250325 21:30:22.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:22.537" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:22.005Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250325 21:30:22.537" endtime="20250325 21:30:22.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:22.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:22.537" endtime="20250325 21:30:22.538"/>
</kw>
<status status="PASS" starttime="20250325 21:30:22.059" endtime="20250325 21:30:22.538"/>
</kw>
<msg timestamp="20250325 21:30:22.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:22.059" endtime="20250325 21:30:22.538"/>
</kw>
<msg timestamp="20250325 21:30:22.538" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:22.005Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:22.059" endtime="20250325 21:30:22.538"/>
</kw>
<msg timestamp="20250325 21:30:22.538" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-03-25T21:30:22.005Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250325 21:30:22.058" endtime="20250325 21:30:22.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:22.538" endtime="20250325 21:30:22.538"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:22.542" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket static --key testkey /tmp/tempfile-saoujtjgxs.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:23.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:23.018" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:22 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:22.540" endtime="20250325 21:30:23.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:23.019" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:22 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:22 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:30:22 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:23.018" endtime="20250325 21:30:23.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:23.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:23.019" endtime="20250325 21:30:23.019"/>
</kw>
<status status="PASS" starttime="20250325 21:30:22.539" endtime="20250325 21:30:23.019"/>
</kw>
<msg timestamp="20250325 21:30:23.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:22.539" endtime="20250325 21:30:23.020"/>
</kw>
<msg timestamp="20250325 21:30:23.020" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:22 GMT",
    "ContentLength": 65536,
    "ETag": "\"2eecb5b0d4f55769e26db07b1a52c998\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250325 21:30:22.539" endtime="20250325 21:30:23.020"/>
</kw>
<status status="PASS" starttime="20250325 21:30:22.539" endtime="20250325 21:30:23.020"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:23.024" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:23.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:23.028" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:23.021" endtime="20250325 21:30:23.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:23.029" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:23.029" endtime="20250325 21:30:23.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:23.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:23.029" endtime="20250325 21:30:23.029"/>
</kw>
<status status="PASS" starttime="20250325 21:30:23.021" endtime="20250325 21:30:23.030"/>
</kw>
<msg timestamp="20250325 21:30:23.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:23.021" endtime="20250325 21:30:23.030"/>
</kw>
<msg timestamp="20250325 21:30:23.030" level="INFO">${checksumbefore} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:23.020" endtime="20250325 21:30:23.030"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:23.033" level="INFO">Running command 'md5sum /tmp/tempfile-saoujtjgxs.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:23.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:23.037" level="INFO">${output} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:23.031" endtime="20250325 21:30:23.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:23.038" level="INFO">2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:23.038" endtime="20250325 21:30:23.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:23.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:23.038" endtime="20250325 21:30:23.039"/>
</kw>
<status status="PASS" starttime="20250325 21:30:23.031" endtime="20250325 21:30:23.039"/>
</kw>
<msg timestamp="20250325 21:30:23.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:23.030" endtime="20250325 21:30:23.039"/>
</kw>
<msg timestamp="20250325 21:30:23.039" level="INFO">${checksumafter} = 2eecb5b0d4f55769e26db07b1a52c998</msg>
<status status="PASS" starttime="20250325 21:30:23.030" endtime="20250325 21:30:23.039"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:23.039" endtime="20250325 21:30:23.039"/>
</kw>
<status status="PASS" starttime="20250325 21:30:23.020" endtime="20250325 21:30:23.039"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250325 21:30:23.040" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-saoujtjgxs.verify"&gt;/tmp/tempfile-saoujtjgxs.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250325 21:30:23.040" endtime="20250325 21:30:23.040"/>
</kw>
<status status="PASS" starttime="20250325 21:30:21.537" endtime="20250325 21:30:23.040"/>
</kw>
<status status="PASS" starttime="20250325 21:30:21.058" endtime="20250325 21:30:23.040"/>
</iter>
<status status="PASS" starttime="20250325 21:30:04.474" endtime="20250325 21:30:23.040"/>
</for>
<tag>aws-skip</tag>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:04.461" endtime="20250325 21:30:23.040"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:29:58.907" endtime="20250325 21:30:23.041"/>
</suite>
<suite id="s1-s3-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:30:23.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:23.056" endtime="20250325 21:30:23.057"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:30:23.057" endtime="20250325 21:30:23.057"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:30:23.057" endtime="20250325 21:30:23.057"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:23.057" endtime="20250325 21:30:23.057"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:23.057" endtime="20250325 21:30:23.057"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:23.057" endtime="20250325 21:30:23.057"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:23.057" endtime="20250325 21:30:23.057"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:23.057" endtime="20250325 21:30:23.057"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:30:23.058" endtime="20250325 21:30:23.058"/>
</kw>
<status status="PASS" starttime="20250325 21:30:23.056" endtime="20250325 21:30:23.058"/>
</kw>
<test id="s1-s3-s4-t1" name="Delete existing bucket" line="38">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:23.059" level="INFO">${randStr} = 2717324564</msg>
<status status="PASS" starttime="20250325 21:30:23.059" endtime="20250325 21:30:23.059"/>
</kw>
<msg timestamp="20250325 21:30:23.060" level="INFO">${postfix} = ozone-test-2717324564</msg>
<status status="PASS" starttime="20250325 21:30:23.059" endtime="20250325 21:30:23.060"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:30:23.060" level="INFO">${bucket} = bucket-ozone-test-2717324564</msg>
<status status="PASS" starttime="20250325 21:30:23.060" endtime="20250325 21:30:23.060"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:23.064" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-2717324564 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:23.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:23.537" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2717324564"
}</msg>
<status status="PASS" starttime="20250325 21:30:23.061" endtime="20250325 21:30:23.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:23.538" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-2717324564"
}</msg>
<status status="PASS" starttime="20250325 21:30:23.537" endtime="20250325 21:30:23.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:23.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:23.538" endtime="20250325 21:30:23.538"/>
</kw>
<status status="PASS" starttime="20250325 21:30:23.061" endtime="20250325 21:30:23.538"/>
</kw>
<msg timestamp="20250325 21:30:23.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:23.061" endtime="20250325 21:30:23.538"/>
</kw>
<msg timestamp="20250325 21:30:23.539" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2717324564"
}</msg>
<status status="PASS" starttime="20250325 21:30:23.060" endtime="20250325 21:30:23.539"/>
</kw>
<msg timestamp="20250325 21:30:23.539" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2717324564"
}</msg>
<status status="PASS" starttime="20250325 21:30:23.060" endtime="20250325 21:30:23.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:23.539" endtime="20250325 21:30:23.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:23.539" endtime="20250325 21:30:23.539"/>
</kw>
<status status="PASS" starttime="20250325 21:30:23.060" endtime="20250325 21:30:23.539"/>
</kw>
<status status="PASS" starttime="20250325 21:30:23.059" endtime="20250325 21:30:23.540"/>
</kw>
<status status="PASS" starttime="20250325 21:30:23.059" endtime="20250325 21:30:23.540"/>
</kw>
<msg timestamp="20250325 21:30:23.540" level="INFO">${bucket} = bucket-ozone-test-2717324564</msg>
<status status="PASS" starttime="20250325 21:30:23.058" endtime="20250325 21:30:23.540"/>
</kw>
<msg timestamp="20250325 21:30:23.540" level="INFO">${bucket} = bucket-ozone-test-2717324564</msg>
<status status="PASS" starttime="20250325 21:30:23.058" endtime="20250325 21:30:23.540"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:23.543" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-2717324564 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:24.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:24.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:23.541" endtime="20250325 21:30:24.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:24.018" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:24.017" endtime="20250325 21:30:24.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:24.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:24.018" endtime="20250325 21:30:24.018"/>
</kw>
<status status="PASS" starttime="20250325 21:30:23.541" endtime="20250325 21:30:24.018"/>
</kw>
<msg timestamp="20250325 21:30:24.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:23.541" endtime="20250325 21:30:24.018"/>
</kw>
<msg timestamp="20250325 21:30:24.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:23.540" endtime="20250325 21:30:24.019"/>
</kw>
<status status="PASS" starttime="20250325 21:30:23.540" endtime="20250325 21:30:24.019"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:23.058" endtime="20250325 21:30:24.019"/>
</test>
<test id="s1-s3-s4-t2" name="Delete non-existent bucket" line="42">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:24.020" level="INFO">${randStr} = 1283268092</msg>
<status status="PASS" starttime="20250325 21:30:24.020" endtime="20250325 21:30:24.020"/>
</kw>
<msg timestamp="20250325 21:30:24.021" level="INFO">${randStr} = ozone-test-1283268092</msg>
<status status="PASS" starttime="20250325 21:30:24.020" endtime="20250325 21:30:24.021"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:24.024" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket-ozone-test-1283268092 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:24.539" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:30:24.539" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:30:24.021" endtime="20250325 21:30:24.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:24.540" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:30:24.540" endtime="20250325 21:30:24.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:24.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:24.540" endtime="20250325 21:30:24.541"/>
</kw>
<msg timestamp="20250325 21:30:24.541" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:30:24.021" endtime="20250325 21:30:24.541"/>
</kw>
<msg timestamp="20250325 21:30:24.541" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:30:24.021" endtime="20250325 21:30:24.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:24.541" endtime="20250325 21:30:24.541"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:24.019" endtime="20250325 21:30:24.542"/>
</test>
<test id="s1-s3-s4-t3" name="Delete bucket with incomplete multipart uploads" line="48">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:24.543" level="INFO">${randStr} = 0576714867</msg>
<status status="PASS" starttime="20250325 21:30:24.543" endtime="20250325 21:30:24.543"/>
</kw>
<msg timestamp="20250325 21:30:24.544" level="INFO">${postfix} = ozone-test-0576714867</msg>
<status status="PASS" starttime="20250325 21:30:24.543" endtime="20250325 21:30:24.544"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:30:24.544" level="INFO">${bucket} = bucket-ozone-test-0576714867</msg>
<status status="PASS" starttime="20250325 21:30:24.544" endtime="20250325 21:30:24.544"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:24.548" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-0576714867 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:25.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:25.017" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0576714867"
}</msg>
<status status="PASS" starttime="20250325 21:30:24.546" endtime="20250325 21:30:25.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:25.018" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-0576714867"
}</msg>
<status status="PASS" starttime="20250325 21:30:25.017" endtime="20250325 21:30:25.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:25.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:25.018" endtime="20250325 21:30:25.018"/>
</kw>
<status status="PASS" starttime="20250325 21:30:24.545" endtime="20250325 21:30:25.018"/>
</kw>
<msg timestamp="20250325 21:30:25.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:24.545" endtime="20250325 21:30:25.018"/>
</kw>
<msg timestamp="20250325 21:30:25.019" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0576714867"
}</msg>
<status status="PASS" starttime="20250325 21:30:24.545" endtime="20250325 21:30:25.019"/>
</kw>
<msg timestamp="20250325 21:30:25.019" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0576714867"
}</msg>
<status status="PASS" starttime="20250325 21:30:24.544" endtime="20250325 21:30:25.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:25.019" endtime="20250325 21:30:25.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:25.019" endtime="20250325 21:30:25.019"/>
</kw>
<status status="PASS" starttime="20250325 21:30:24.544" endtime="20250325 21:30:25.020"/>
</kw>
<msg timestamp="20250325 21:30:25.020" level="INFO">${bucket} = bucket-ozone-test-0576714867</msg>
<status status="PASS" starttime="20250325 21:30:24.543" endtime="20250325 21:30:25.020"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${bucket}</arg>
<arg>incomplete-multipartkey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:25.024" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-ozone-test-0576714867 --key incomplete-multipartkey  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:25.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:25.503" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-0576714867",
    "Key": "incomplete-multipartkey",
    "UploadId": "0195cf36-bb2b-75a2-8131-e68bcd8e0b8b-114225199543156767"
}</msg>
<status status="PASS" starttime="20250325 21:30:25.021" endtime="20250325 21:30:25.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:25.504" level="INFO">{
    "Bucket": "bucket-ozone-test-0576714867",
    "Key": "incomplete-multipartkey",
    "UploadId": "0195cf36-bb2b-75a2-8131-e68bcd8e0b8b-114225199543156767"
}</msg>
<status status="PASS" starttime="20250325 21:30:25.503" endtime="20250325 21:30:25.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:25.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:25.504" endtime="20250325 21:30:25.504"/>
</kw>
<msg timestamp="20250325 21:30:25.504" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-0576714867",
    "Key": "incomplete-multipartkey",
    "UploadId": "0195cf36-bb2b-75a2-8131-e68bcd8e0b8b-114225199543156767"
}</msg>
<status status="PASS" starttime="20250325 21:30:25.021" endtime="20250325 21:30:25.504"/>
</kw>
<msg timestamp="20250325 21:30:25.504" level="INFO">${result} = {
    "Bucket": "bucket-ozone-test-0576714867",
    "Key": "incomplete-multipartkey",
    "UploadId": "0195cf36-bb2b-75a2-8131-e68bcd8e0b8b-114225199543156767"
}</msg>
<status status="PASS" starttime="20250325 21:30:25.021" endtime="20250325 21:30:25.505"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:25.505" endtime="20250325 21:30:25.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:25.505" endtime="20250325 21:30:25.505"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:25.508" level="INFO">Running command 'echo '{
    "Bucket": "bucket-ozone-test-0576714867",
    "Key": "incomplete-multipartkey",
    "UploadId": "0195cf36-bb2b-75a2-8131-e68bcd8e0b8b-114225199543156767"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:25.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:25.514" level="INFO">${output} = 0195cf36-bb2b-75a2-8131-e68bcd8e0b8b-114225199543156767</msg>
<status status="PASS" starttime="20250325 21:30:25.506" endtime="20250325 21:30:25.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:25.515" level="INFO">0195cf36-bb2b-75a2-8131-e68bcd8e0b8b-114225199543156767</msg>
<status status="PASS" starttime="20250325 21:30:25.514" endtime="20250325 21:30:25.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:25.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:25.515" endtime="20250325 21:30:25.515"/>
</kw>
<msg timestamp="20250325 21:30:25.515" level="INFO">${upload_id} = 0195cf36-bb2b-75a2-8131-e68bcd8e0b8b-114225199543156767</msg>
<status status="PASS" starttime="20250325 21:30:25.506" endtime="20250325 21:30:25.515"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:30:25.516" endtime="20250325 21:30:25.516"/>
</return>
<status status="PASS" starttime="20250325 21:30:25.505" endtime="20250325 21:30:25.516"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:25.516" endtime="20250325 21:30:25.516"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:25.516" endtime="20250325 21:30:25.516"/>
</branch>
<status status="PASS" starttime="20250325 21:30:25.505" endtime="20250325 21:30:25.516"/>
</if>
<msg timestamp="20250325 21:30:25.516" level="INFO">${uploadID} = 0195cf36-bb2b-75a2-8131-e68bcd8e0b8b-114225199543156767</msg>
<status status="PASS" starttime="20250325 21:30:25.020" endtime="20250325 21:30:25.516"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_fail_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:25.521" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-0576714867 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:25.994" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:30:25.994" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250325 21:30:25.517" endtime="20250325 21:30:25.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:25.995" level="INFO">
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please ensure that the bucket layout is OBJECT_STORE or that the bucket is completely empty before delete.</msg>
<status status="PASS" starttime="20250325 21:30:25.995" endtime="20250325 21:30:25.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:25.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:25.995" endtime="20250325 21:30:25.996"/>
</kw>
<msg timestamp="20250325 21:30:25.996" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250325 21:30:25.517" endtime="20250325 21:30:25.996"/>
</kw>
<msg timestamp="20250325 21:30:25.996" level="INFO">${delete_fail_result} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250325 21:30:25.516" endtime="20250325 21:30:25.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${delete_fail_result}</arg>
<arg>BucketNotEmpty</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:25.996" endtime="20250325 21:30:25.997"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${abort_result}</var>
<arg>${bucket}</arg>
<arg>incomplete-multipartkey</arg>
<arg>${uploadID}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:26.000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-ozone-test-0576714867 --key incomplete-multipartkey --upload-id 0195cf36-bb2b-75a2-8131-e68bcd8e0b8b-114225199543156767 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:26.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:26.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:25.998" endtime="20250325 21:30:26.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:26.474" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:26.474" endtime="20250325 21:30:26.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:26.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:26.474" endtime="20250325 21:30:26.475"/>
</kw>
<msg timestamp="20250325 21:30:26.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:25.997" endtime="20250325 21:30:26.475"/>
</kw>
<msg timestamp="20250325 21:30:26.475" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:30:25.997" endtime="20250325 21:30:26.475"/>
</kw>
<msg timestamp="20250325 21:30:26.475" level="INFO">${abort_result} = None</msg>
<status status="PASS" starttime="20250325 21:30:25.997" endtime="20250325 21:30:26.475"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:26.478" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-0576714867 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:26.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:26.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:26.476" endtime="20250325 21:30:26.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:26.953" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:26.953" endtime="20250325 21:30:26.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:26.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:26.953" endtime="20250325 21:30:26.954"/>
</kw>
<msg timestamp="20250325 21:30:26.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:26.476" endtime="20250325 21:30:26.954"/>
</kw>
<msg timestamp="20250325 21:30:26.954" level="INFO">${delete_result} = </msg>
<status status="PASS" starttime="20250325 21:30:26.475" endtime="20250325 21:30:26.954"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:24.542" endtime="20250325 21:30:26.954"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:30:23.042" endtime="20250325 21:30:26.955"/>
</suite>
<suite id="s1-s3-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:30:26.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:26.963" endtime="20250325 21:30:26.964"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:30:26.964" endtime="20250325 21:30:26.964"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:30:26.964" endtime="20250325 21:30:26.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:26.964" endtime="20250325 21:30:26.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:26.964" endtime="20250325 21:30:26.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:26.964" endtime="20250325 21:30:26.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:26.964" endtime="20250325 21:30:26.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:26.965" endtime="20250325 21:30:26.965"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:30:26.965" endtime="20250325 21:30:26.965"/>
</kw>
<status status="PASS" starttime="20250325 21:30:26.963" endtime="20250325 21:30:26.965"/>
</kw>
<test id="s1-s3-s5-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:26.969" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:27.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:27.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:26.966" endtime="20250325 21:30:27.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:27.436" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:27.436" endtime="20250325 21:30:27.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:27.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:27.436" endtime="20250325 21:30:27.437"/>
</kw>
<status status="PASS" starttime="20250325 21:30:26.966" endtime="20250325 21:30:27.437"/>
</kw>
<msg timestamp="20250325 21:30:27.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:26.966" endtime="20250325 21:30:27.437"/>
</kw>
<msg timestamp="20250325 21:30:27.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:26.966" endtime="20250325 21:30:27.437"/>
</kw>
<msg timestamp="20250325 21:30:27.437" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:30:26.965" endtime="20250325 21:30:27.437"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:26.965" endtime="20250325 21:30:27.437"/>
</test>
<test id="s1-s3-s5-t2" name="Head Bucket not existent" line="34">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:27.439" level="INFO">${randStr} = 7764506479</msg>
<status status="PASS" starttime="20250325 21:30:27.439" endtime="20250325 21:30:27.439"/>
</kw>
<msg timestamp="20250325 21:30:27.439" level="INFO">${randStr} = ozone-test-7764506479</msg>
<status status="PASS" starttime="20250325 21:30:27.438" endtime="20250325 21:30:27.439"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:27.442" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe-ozone-test-7764506479 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:27.906" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:30:27.906" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:30:27.440" endtime="20250325 21:30:27.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:27.907" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:30:27.906" endtime="20250325 21:30:27.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:27.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:27.907" endtime="20250325 21:30:27.907"/>
</kw>
<msg timestamp="20250325 21:30:27.908" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:30:27.440" endtime="20250325 21:30:27.908"/>
</kw>
<msg timestamp="20250325 21:30:27.908" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:30:27.439" endtime="20250325 21:30:27.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:27.908" endtime="20250325 21:30:27.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:27.908" endtime="20250325 21:30:27.908"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:27.438" endtime="20250325 21:30:27.909"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:30:26.956" endtime="20250325 21:30:27.909"/>
</suite>
<suite id="s1-s3-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:30:27.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:27.917" endtime="20250325 21:30:27.918"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:30:27.918" endtime="20250325 21:30:27.918"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:30:27.918" endtime="20250325 21:30:27.918"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:27.918" endtime="20250325 21:30:27.918"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:27.918" endtime="20250325 21:30:27.918"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:27.918" endtime="20250325 21:30:27.918"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:27.918" endtime="20250325 21:30:27.918"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:27.919" endtime="20250325 21:30:27.919"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:30:27.919" endtime="20250325 21:30:27.919"/>
</kw>
<status status="PASS" starttime="20250325 21:30:27.917" endtime="20250325 21:30:27.919"/>
</kw>
<test id="s1-s3-s6-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:27.922" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:28.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:28.394" level="INFO">${output} = bucket-ermweyocqb
bucket-mayhyhrcee
bucket-ozone-test-0494051927
bucket-ozone-test-4460916528
bucket-ozone-test-4969675339
bucket-test-owner1
bucket-test123
conf
encrypted
jmx
logs
logstream
prof
prom...</msg>
<status status="PASS" starttime="20250325 21:30:27.920" endtime="20250325 21:30:28.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:28.395" level="INFO">bucket-ermweyocqb
bucket-mayhyhrcee
bucket-ozone-test-0494051927
bucket-ozone-test-4460916528
bucket-ozone-test-4969675339
bucket-test-owner1
bucket-test123
conf
encrypted
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250325 21:30:28.394" endtime="20250325 21:30:28.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:28.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:28.395" endtime="20250325 21:30:28.396"/>
</kw>
<status status="PASS" starttime="20250325 21:30:27.920" endtime="20250325 21:30:28.396"/>
</kw>
<msg timestamp="20250325 21:30:28.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:27.920" endtime="20250325 21:30:28.396"/>
</kw>
<msg timestamp="20250325 21:30:28.396" level="INFO">${output} = bucket-ermweyocqb
bucket-mayhyhrcee
bucket-ozone-test-0494051927
bucket-ozone-test-4460916528
bucket-ozone-test-4969675339
bucket-test-owner1
bucket-test123
conf
encrypted
jmx
logs
logstream
prof
prom...</msg>
<status status="PASS" starttime="20250325 21:30:27.919" endtime="20250325 21:30:28.396"/>
</kw>
<msg timestamp="20250325 21:30:28.396" level="INFO">${result} = bucket-ermweyocqb
bucket-mayhyhrcee
bucket-ozone-test-0494051927
bucket-ozone-test-4460916528
bucket-ozone-test-4969675339
bucket-test-owner1
bucket-test123
conf
encrypted
jmx
logs
logstream
prof
prom...</msg>
<status status="PASS" starttime="20250325 21:30:27.919" endtime="20250325 21:30:28.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:28.396" endtime="20250325 21:30:28.396"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:27.919" endtime="20250325 21:30:28.397"/>
</test>
<test id="s1-s3-s6-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:30:28.397" endtime="20250325 21:30:28.398"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:28.402" level="INFO">Running command 'ozone sh bucket info /s3v/encrypted | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:31.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:31.410" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250325 21:30:28.399" endtime="20250325 21:30:31.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:31.411" level="INFO">testuser</msg>
<status status="PASS" starttime="20250325 21:30:31.410" endtime="20250325 21:30:31.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:31.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:31.411" endtime="20250325 21:30:31.411"/>
</kw>
<status status="PASS" starttime="20250325 21:30:28.399" endtime="20250325 21:30:31.412"/>
</kw>
<msg timestamp="20250325 21:30:31.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:28.399" endtime="20250325 21:30:31.412"/>
</kw>
<msg timestamp="20250325 21:30:31.412" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20250325 21:30:28.398" endtime="20250325 21:30:31.412"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:31.412" endtime="20250325 21:30:31.412"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:28.397" endtime="20250325 21:30:31.412"/>
</test>
<test id="s1-s3-s6-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:31.417" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:31.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:31.759" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:30:31.414" endtime="20250325 21:30:31.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:31.760" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:30:31.760" endtime="20250325 21:30:31.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:31.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:31.760" endtime="20250325 21:30:31.761"/>
</kw>
<status status="PASS" starttime="20250325 21:30:31.414" endtime="20250325 21:30:31.761"/>
</kw>
<msg timestamp="20250325 21:30:31.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:31.414" endtime="20250325 21:30:31.761"/>
</kw>
<msg timestamp="20250325 21:30:31.761" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:30:31.414" endtime="20250325 21:30:31.761"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250325 21:30:31.762" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:30:31.761" endtime="20250325 21:30:31.762"/>
</kw>
<status status="PASS" starttime="20250325 21:30:31.413" endtime="20250325 21:30:31.762"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:31.765" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:32.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:32.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:31.763" endtime="20250325 21:30:32.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:32.122" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:32.122" endtime="20250325 21:30:32.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:32.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:32.122" endtime="20250325 21:30:32.123"/>
</kw>
<status status="PASS" starttime="20250325 21:30:31.762" endtime="20250325 21:30:32.123"/>
</kw>
<msg timestamp="20250325 21:30:32.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:31.762" endtime="20250325 21:30:32.123"/>
</kw>
<status status="PASS" starttime="20250325 21:30:31.762" endtime="20250325 21:30:32.123"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:32.126" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:32.590" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:30:32.590" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250325 21:30:32.124" endtime="20250325 21:30:32.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:32.591" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250325 21:30:32.591" endtime="20250325 21:30:32.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:32.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:32.591" endtime="20250325 21:30:32.592"/>
</kw>
<msg timestamp="20250325 21:30:32.592" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250325 21:30:32.123" endtime="20250325 21:30:32.592"/>
</kw>
<msg timestamp="20250325 21:30:32.592" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250325 21:30:32.123" endtime="20250325 21:30:32.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:32.592" endtime="20250325 21:30:32.592"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:32.596" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:32.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:32.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:32.594" endtime="20250325 21:30:32.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:32.935" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:32.935" endtime="20250325 21:30:32.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:32.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:32.935" endtime="20250325 21:30:32.936"/>
</kw>
<status status="PASS" starttime="20250325 21:30:32.594" endtime="20250325 21:30:32.936"/>
</kw>
<msg timestamp="20250325 21:30:32.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:32.594" endtime="20250325 21:30:32.936"/>
</kw>
<status status="PASS" starttime="20250325 21:30:32.593" endtime="20250325 21:30:32.936"/>
</kw>
<status status="PASS" starttime="20250325 21:30:32.593" endtime="20250325 21:30:32.936"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:31.413" endtime="20250325 21:30:32.936"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:30:27.910" endtime="20250325 21:30:32.937"/>
</suite>
<suite id="s1-s3-s7" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:30:32.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:32.946" endtime="20250325 21:30:32.946"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:30:32.946" endtime="20250325 21:30:32.946"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:30:32.946" endtime="20250325 21:30:32.946"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:32.946" endtime="20250325 21:30:32.946"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:32.947" endtime="20250325 21:30:32.947"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:32.947" endtime="20250325 21:30:32.947"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:32.947" endtime="20250325 21:30:32.947"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:32.947" endtime="20250325 21:30:32.947"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:30:32.947" endtime="20250325 21:30:32.947"/>
</kw>
<status status="PASS" starttime="20250325 21:30:32.946" endtime="20250325 21:30:32.947"/>
</kw>
<test id="s1-s3-s7-t1" name="Run Freon S3BG" line="43">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:32.951" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:33.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:33.286" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:30:32.948" endtime="20250325 21:30:33.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:33.287" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:30:33.287" endtime="20250325 21:30:33.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:33.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:33.287" endtime="20250325 21:30:33.288"/>
</kw>
<status status="PASS" starttime="20250325 21:30:32.948" endtime="20250325 21:30:33.288"/>
</kw>
<msg timestamp="20250325 21:30:33.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:32.948" endtime="20250325 21:30:33.288"/>
</kw>
<msg timestamp="20250325 21:30:33.288" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:30:32.948" endtime="20250325 21:30:33.288"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:33.291" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:33.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:33.632" level="INFO">${output} = 93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3</msg>
<status status="PASS" starttime="20250325 21:30:33.289" endtime="20250325 21:30:33.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:33.633" level="INFO">93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3</msg>
<status status="PASS" starttime="20250325 21:30:33.632" endtime="20250325 21:30:33.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:33.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:33.633" endtime="20250325 21:30:33.633"/>
</kw>
<status status="PASS" starttime="20250325 21:30:33.289" endtime="20250325 21:30:33.633"/>
</kw>
<msg timestamp="20250325 21:30:33.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:33.288" endtime="20250325 21:30:33.633"/>
</kw>
<msg timestamp="20250325 21:30:33.633" level="INFO">${secret} = 93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3</msg>
<status status="PASS" starttime="20250325 21:30:33.288" endtime="20250325 21:30:33.634"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250325 21:30:33.634" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value '93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3'.</msg>
<status status="PASS" starttime="20250325 21:30:33.634" endtime="20250325 21:30:33.634"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250325 21:30:33.634" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/scm@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20250325 21:30:33.634" endtime="20250325 21:30:33.634"/>
</kw>
<status status="PASS" starttime="20250325 21:30:32.947" endtime="20250325 21:30:33.634"/>
</kw>
<kw name="Freon S3BG">
<arg>s3bg-${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:33.638" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg-encrypted  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:37.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:37.231" level="INFO">${output} = 2025-03-25 21:30:34,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-25 21:30:34,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250325 21:30:33.636" endtime="20250325 21:30:37.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:37.232" level="INFO">2025-03-25 21:30:34,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-25 21:30:34,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-25 21:30:34,976 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-25 21:30:35,111 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg-encrypted and number-of-tests 100
2025-03-25 21:30:35,174 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-25 21:30:36,177 [Thread-5] INFO freon.ProgressBar: Progress: 36.00 % (36 out of 100)
2025-03-25 21:30:37,177 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-25 21:30:37,187 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=49.015871, max=204.316697, mean=95.64851532050288, stddev=31.08600497604814, median=87.463151, p75=102.508428, p95=168.380553, p98=181.674661, p99=186.861333, p999=204.316697, mean_rate=68.0004891900792, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-25 21:30:37,188 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-25 21:30:37,188 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-25 21:30:37,188 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250325 21:30:37.232" endtime="20250325 21:30:37.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:37.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:37.232" endtime="20250325 21:30:37.233"/>
</kw>
<status status="PASS" starttime="20250325 21:30:33.636" endtime="20250325 21:30:37.233"/>
</kw>
<msg timestamp="20250325 21:30:37.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:33.636" endtime="20250325 21:30:37.233"/>
</kw>
<msg timestamp="20250325 21:30:37.233" level="INFO">${result} = 2025-03-25 21:30:34,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-25 21:30:34,976 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250325 21:30:33.635" endtime="20250325 21:30:37.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:37.233" endtime="20250325 21:30:37.233"/>
</kw>
<status status="PASS" starttime="20250325 21:30:33.634" endtime="20250325 21:30:37.233"/>
</kw>
<tag>no-bucket-type</tag>
<status status="PASS" starttime="20250325 21:30:32.947" endtime="20250325 21:30:37.234"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:30:32.938" endtime="20250325 21:30:37.234"/>
</suite>
<suite id="s1-s3-s8" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:30:37.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:37.245" endtime="20250325 21:30:37.245"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:30:37.245" endtime="20250325 21:30:37.246"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:30:37.246" endtime="20250325 21:30:37.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:37.246" endtime="20250325 21:30:37.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:37.246" endtime="20250325 21:30:37.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:37.246" endtime="20250325 21:30:37.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:37.246" endtime="20250325 21:30:37.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:30:37.246" endtime="20250325 21:30:37.246"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:30:37.246" endtime="20250325 21:30:37.246"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.245" endtime="20250325 21:30:37.246"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>5121</arg>
<arg>/tmp/part1</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250325 21:30:37.248" endtime="20250325 21:30:37.248"/>
</kw>
<msg timestamp="20250325 21:30:37.248" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20250325 21:30:37.247" endtime="20250325 21:30:37.248"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:37.251" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:37.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:37.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:37.249" endtime="20250325 21:30:37.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:37.286" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:37.285" endtime="20250325 21:30:37.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:37.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:37.286" endtime="20250325 21:30:37.287"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.248" endtime="20250325 21:30:37.287"/>
</kw>
<msg timestamp="20250325 21:30:37.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:37.248" endtime="20250325 21:30:37.287"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.248" endtime="20250325 21:30:37.287"/>
</kw>
<msg timestamp="20250325 21:30:37.287" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20250325 21:30:37.247" endtime="20250325 21:30:37.287"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.246" endtime="20250325 21:30:37.287"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>1023</arg>
<arg>/tmp/part2</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250325 21:30:37.289" endtime="20250325 21:30:37.289"/>
</kw>
<msg timestamp="20250325 21:30:37.289" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20250325 21:30:37.288" endtime="20250325 21:30:37.289"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:37.292" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:37.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:37.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:37.290" endtime="20250325 21:30:37.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:37.302" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:37.302" endtime="20250325 21:30:37.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:37.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:37.302" endtime="20250325 21:30:37.302"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.289" endtime="20250325 21:30:37.302"/>
</kw>
<msg timestamp="20250325 21:30:37.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:37.289" endtime="20250325 21:30:37.303"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.289" endtime="20250325 21:30:37.303"/>
</kw>
<msg timestamp="20250325 21:30:37.303" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20250325 21:30:37.288" endtime="20250325 21:30:37.303"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.287" endtime="20250325 21:30:37.303"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>10</arg>
<arg>/tmp/10mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250325 21:30:37.304" endtime="20250325 21:30:37.304"/>
</kw>
<msg timestamp="20250325 21:30:37.304" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20250325 21:30:37.304" endtime="20250325 21:30:37.305"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:37.307" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10mb bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:37.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:37.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:37.305" endtime="20250325 21:30:37.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:37.348" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:37.347" endtime="20250325 21:30:37.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:37.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:37.348" endtime="20250325 21:30:37.348"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.305" endtime="20250325 21:30:37.349"/>
</kw>
<msg timestamp="20250325 21:30:37.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:37.305" endtime="20250325 21:30:37.349"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.305" endtime="20250325 21:30:37.349"/>
</kw>
<msg timestamp="20250325 21:30:37.349" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20250325 21:30:37.303" endtime="20250325 21:30:37.349"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.303" endtime="20250325 21:30:37.349"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>22</arg>
<arg>/tmp/22mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250325 21:30:37.350" endtime="20250325 21:30:37.351"/>
</kw>
<msg timestamp="20250325 21:30:37.351" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20250325 21:30:37.350" endtime="20250325 21:30:37.351"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:37.354" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/22mb bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:37.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:37.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:37.352" endtime="20250325 21:30:37.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:37.437" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:37.437" endtime="20250325 21:30:37.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:37.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:37.437" endtime="20250325 21:30:37.437"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.351" endtime="20250325 21:30:37.438"/>
</kw>
<msg timestamp="20250325 21:30:37.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:37.351" endtime="20250325 21:30:37.438"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.351" endtime="20250325 21:30:37.438"/>
</kw>
<msg timestamp="20250325 21:30:37.438" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20250325 21:30:37.349" endtime="20250325 21:30:37.438"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.349" endtime="20250325 21:30:37.438"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>10</arg>
<arg>/tmp/10kb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250325 21:30:37.440" endtime="20250325 21:30:37.440"/>
</kw>
<msg timestamp="20250325 21:30:37.440" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20250325 21:30:37.439" endtime="20250325 21:30:37.440"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:37.443" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10kb bs=1024 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:37.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:37.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:37.441" endtime="20250325 21:30:37.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:37.447" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:37.447" endtime="20250325 21:30:37.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:37.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:37.447" endtime="20250325 21:30:37.447"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.440" endtime="20250325 21:30:37.447"/>
</kw>
<msg timestamp="20250325 21:30:37.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:37.440" endtime="20250325 21:30:37.448"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.440" endtime="20250325 21:30:37.448"/>
</kw>
<msg timestamp="20250325 21:30:37.448" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20250325 21:30:37.438" endtime="20250325 21:30:37.448"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.438" endtime="20250325 21:30:37.448"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.245" endtime="20250325 21:30:37.448"/>
</kw>
<test id="s1-s3-s8-t1" name="Test Multipart Upload With Adjusted Length" line="60">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:37.449" level="INFO">${randStr} = 4814558196</msg>
<status status="PASS" starttime="20250325 21:30:37.449" endtime="20250325 21:30:37.449"/>
</kw>
<msg timestamp="20250325 21:30:37.450" level="INFO">${random} = ozone-test-4814558196</msg>
<status status="PASS" starttime="20250325 21:30:37.449" endtime="20250325 21:30:37.450"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:30:37.450" level="INFO">${PREFIX} = ozone-test-4814558196</msg>
<status status="PASS" starttime="20250325 21:30:37.450" endtime="20250325 21:30:37.450"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.449" endtime="20250325 21:30:37.450"/>
</kw>
<kw name="Perform Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Initiate MPU" library="mpu_lib">
<var>${upload_id}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:37.454" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key multipart/adjusted_length_ozone-test-4814558196  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:37.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:37.930" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-4814558196",
    "UploadId": "0195cf36-ebb5-70e2-b9a2-a8a330194ce4-114225200357507104"
}</msg>
<status status="PASS" starttime="20250325 21:30:37.452" endtime="20250325 21:30:37.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:37.931" level="INFO">{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-4814558196",
    "UploadId": "0195cf36-ebb5-70e2-b9a2-a8a330194ce4-114225200357507104"
}</msg>
<status status="PASS" starttime="20250325 21:30:37.930" endtime="20250325 21:30:37.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:37.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:37.931" endtime="20250325 21:30:37.931"/>
</kw>
<msg timestamp="20250325 21:30:37.931" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-4814558196",
    "UploadId": "0195cf36-ebb5-70e2-b9a2-a8a330194ce4-114225200357507104"
}</msg>
<status status="PASS" starttime="20250325 21:30:37.452" endtime="20250325 21:30:37.931"/>
</kw>
<msg timestamp="20250325 21:30:37.931" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-4814558196",
    "UploadId": "0195cf36-ebb5-70e2-b9a2-a8a330194ce4-114225200357507104"
}</msg>
<status status="PASS" starttime="20250325 21:30:37.451" endtime="20250325 21:30:37.931"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:37.932" endtime="20250325 21:30:37.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:37.932" endtime="20250325 21:30:37.932"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:37.935" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-4814558196",
    "UploadId": "0195cf36-ebb5-70e2-b9a2-a8a330194ce4-114225200357507104"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:37.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:37.940" level="INFO">${output} = 0195cf36-ebb5-70e2-b9a2-a8a330194ce4-114225200357507104</msg>
<status status="PASS" starttime="20250325 21:30:37.933" endtime="20250325 21:30:37.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:37.941" level="INFO">0195cf36-ebb5-70e2-b9a2-a8a330194ce4-114225200357507104</msg>
<status status="PASS" starttime="20250325 21:30:37.941" endtime="20250325 21:30:37.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:37.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:37.941" endtime="20250325 21:30:37.942"/>
</kw>
<msg timestamp="20250325 21:30:37.942" level="INFO">${upload_id} = 0195cf36-ebb5-70e2-b9a2-a8a330194ce4-114225200357507104</msg>
<status status="PASS" starttime="20250325 21:30:37.932" endtime="20250325 21:30:37.942"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:30:37.942" endtime="20250325 21:30:37.942"/>
</return>
<status status="PASS" starttime="20250325 21:30:37.932" endtime="20250325 21:30:37.942"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:37.942" endtime="20250325 21:30:37.942"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:37.942" endtime="20250325 21:30:37.942"/>
</branch>
<status status="PASS" starttime="20250325 21:30:37.932" endtime="20250325 21:30:37.942"/>
</if>
<msg timestamp="20250325 21:30:37.942" level="INFO">${upload_id} = 0195cf36-ebb5-70e2-b9a2-a8a330194ce4-114225200357507104</msg>
<status status="PASS" starttime="20250325 21:30:37.450" endtime="20250325 21:30:37.942"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>@{files}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250325 21:30:37.943" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250325 21:30:37.943" endtime="20250325 21:30:37.943"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250325 21:30:37.944" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250325 21:30:37.943" endtime="20250325 21:30:37.944"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:37.947" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key multipart/adjusted_length_ozone-test-4814558196 --part-number 1 --body /tmp/part1 --upload-id 0195cf36-ebb5-70e2-b9a2-a8a330194ce4-114225200357507104 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:38.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:38.724" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:37.945" endtime="20250325 21:30:38.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:38.725" level="INFO">{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:38.725" endtime="20250325 21:30:38.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:38.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:38.726" endtime="20250325 21:30:38.726"/>
</kw>
<msg timestamp="20250325 21:30:38.726" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:37.945" endtime="20250325 21:30:38.726"/>
</kw>
<msg timestamp="20250325 21:30:38.727" level="INFO">${result} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:37.944" endtime="20250325 21:30:38.727"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:38.727" endtime="20250325 21:30:38.727"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:38.731" level="INFO">Running command 'echo '{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:38.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:38.736" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:38.728" endtime="20250325 21:30:38.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:38.737" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:38.737" endtime="20250325 21:30:38.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:38.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:38.737" endtime="20250325 21:30:38.738"/>
</kw>
<status status="PASS" starttime="20250325 21:30:38.728" endtime="20250325 21:30:38.738"/>
</kw>
<msg timestamp="20250325 21:30:38.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:38.728" endtime="20250325 21:30:38.738"/>
</kw>
<msg timestamp="20250325 21:30:38.738" level="INFO">${etag} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:38.727" endtime="20250325 21:30:38.738"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:38.741" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:38.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:38.754" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:38.739" endtime="20250325 21:30:38.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:38.755" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:38.754" endtime="20250325 21:30:38.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:38.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:38.755" endtime="20250325 21:30:38.755"/>
</kw>
<status status="PASS" starttime="20250325 21:30:38.739" endtime="20250325 21:30:38.756"/>
</kw>
<msg timestamp="20250325 21:30:38.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:38.739" endtime="20250325 21:30:38.756"/>
</kw>
<msg timestamp="20250325 21:30:38.756" level="INFO">${md5sum} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:38.738" endtime="20250325 21:30:38.756"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:30:38.756" endtime="20250325 21:30:38.756"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:30:38.756" endtime="20250325 21:30:38.756"/>
</return>
<status status="PASS" starttime="20250325 21:30:38.727" endtime="20250325 21:30:38.756"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:38.756" endtime="20250325 21:30:38.756"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:38.756" endtime="20250325 21:30:38.756"/>
</branch>
<status status="PASS" starttime="20250325 21:30:38.727" endtime="20250325 21:30:38.756"/>
</if>
<msg timestamp="20250325 21:30:38.757" level="INFO">${etag} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:37.944" endtime="20250325 21:30:38.757"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:30:38.757" endtime="20250325 21:30:38.757"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.943" endtime="20250325 21:30:38.757"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250325 21:30:38.758" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250325 21:30:38.757" endtime="20250325 21:30:38.758"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:38.761" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key multipart/adjusted_length_ozone-test-4814558196 --part-number 2 --body /tmp/part2 --upload-id 0195cf36-ebb5-70e2-b9a2-a8a330194ce4-114225200357507104 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:39.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:39.330" level="INFO">${output} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:30:38.759" endtime="20250325 21:30:39.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:39.331" level="INFO">{
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:30:39.331" endtime="20250325 21:30:39.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:39.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:39.331" endtime="20250325 21:30:39.332"/>
</kw>
<msg timestamp="20250325 21:30:39.332" level="INFO">${output} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:30:38.759" endtime="20250325 21:30:39.332"/>
</kw>
<msg timestamp="20250325 21:30:39.332" level="INFO">${result} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:30:38.758" endtime="20250325 21:30:39.332"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:39.333" endtime="20250325 21:30:39.333"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:39.337" level="INFO">Running command 'echo '{
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:39.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:39.342" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:39.334" endtime="20250325 21:30:39.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:39.342" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:39.342" endtime="20250325 21:30:39.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:39.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:39.342" endtime="20250325 21:30:39.343"/>
</kw>
<status status="PASS" starttime="20250325 21:30:39.334" endtime="20250325 21:30:39.343"/>
</kw>
<msg timestamp="20250325 21:30:39.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:39.334" endtime="20250325 21:30:39.343"/>
</kw>
<msg timestamp="20250325 21:30:39.343" level="INFO">${etag} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:39.333" endtime="20250325 21:30:39.343"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:39.346" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:39.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:39.352" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:39.344" endtime="20250325 21:30:39.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:39.352" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:39.352" endtime="20250325 21:30:39.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:39.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:39.352" endtime="20250325 21:30:39.353"/>
</kw>
<status status="PASS" starttime="20250325 21:30:39.344" endtime="20250325 21:30:39.353"/>
</kw>
<msg timestamp="20250325 21:30:39.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:39.344" endtime="20250325 21:30:39.353"/>
</kw>
<msg timestamp="20250325 21:30:39.353" level="INFO">${md5sum} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:39.343" endtime="20250325 21:30:39.353"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:30:39.353" endtime="20250325 21:30:39.353"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:30:39.354" endtime="20250325 21:30:39.354"/>
</return>
<status status="PASS" starttime="20250325 21:30:39.332" endtime="20250325 21:30:39.354"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:39.354" endtime="20250325 21:30:39.354"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:39.354" endtime="20250325 21:30:39.354"/>
</branch>
<status status="PASS" starttime="20250325 21:30:39.332" endtime="20250325 21:30:39.354"/>
</if>
<msg timestamp="20250325 21:30:39.354" level="INFO">${etag} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:38.758" endtime="20250325 21:30:39.354"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:30:39.354" endtime="20250325 21:30:39.354"/>
</kw>
<status status="PASS" starttime="20250325 21:30:38.757" endtime="20250325 21:30:39.354"/>
</iter>
<status status="PASS" starttime="20250325 21:30:37.943" endtime="20250325 21:30:39.354"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250325 21:30:39.355" level="INFO">${parts} = {ETag=fb9f1b33e6fa46c9035a38136bcab55d,PartNumber=1},{ETag=6f41c53c1f6ff560d62b1a28154b4e53,PartNumber=2}</msg>
<status status="PASS" starttime="20250325 21:30:39.355" endtime="20250325 21:30:39.355"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250325 21:30:39.355" endtime="20250325 21:30:39.355"/>
</return>
<msg timestamp="20250325 21:30:39.355" level="INFO">${parts} = {ETag=fb9f1b33e6fa46c9035a38136bcab55d,PartNumber=1},{ETag=6f41c53c1f6ff560d62b1a28154b4e53,PartNumber=2}</msg>
<status status="PASS" starttime="20250325 21:30:37.942" endtime="20250325 21:30:39.355"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${parts}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:39.358" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key multipart/adjusted_length_ozone-test-4814558196 --upload-id 0195cf36-ebb5-70e2-b9a2-a8a330194ce4-114225200357507104 --multipart-upload 'Parts=[{ETag=fb9f1b33e6fa46c9035a38136bcab55d,PartNumber=1},{ETag=6f41c53c1f6ff560d62b1a28154b4e53,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:39.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:39.834" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-4814558196",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}</msg>
<status status="PASS" starttime="20250325 21:30:39.357" endtime="20250325 21:30:39.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:39.834" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-4814558196",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}</msg>
<status status="PASS" starttime="20250325 21:30:39.834" endtime="20250325 21:30:39.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:39.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:39.835" endtime="20250325 21:30:39.835"/>
</kw>
<msg timestamp="20250325 21:30:39.835" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-4814558196",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}</msg>
<status status="PASS" starttime="20250325 21:30:39.356" endtime="20250325 21:30:39.835"/>
</kw>
<msg timestamp="20250325 21:30:39.835" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-4814558196",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}</msg>
<status status="PASS" starttime="20250325 21:30:39.355" endtime="20250325 21:30:39.835"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:39.836" endtime="20250325 21:30:39.836"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:39.836" endtime="20250325 21:30:39.836"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:39.836" endtime="20250325 21:30:39.836"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:39.840" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-4814558196",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:39.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:39.845" level="INFO">${output} = "fc35ba8ce370cb6f8d222b2715c824d8-2"</msg>
<status status="PASS" starttime="20250325 21:30:39.837" endtime="20250325 21:30:39.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:39.845" level="INFO">"fc35ba8ce370cb6f8d222b2715c824d8-2"</msg>
<status status="PASS" starttime="20250325 21:30:39.845" endtime="20250325 21:30:39.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:39.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:39.846" endtime="20250325 21:30:39.846"/>
</kw>
<status status="PASS" starttime="20250325 21:30:39.837" endtime="20250325 21:30:39.846"/>
</kw>
<msg timestamp="20250325 21:30:39.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:39.837" endtime="20250325 21:30:39.846"/>
</kw>
<msg timestamp="20250325 21:30:39.846" level="INFO">${etag} = "fc35ba8ce370cb6f8d222b2715c824d8-2"</msg>
<status status="PASS" starttime="20250325 21:30:39.837" endtime="20250325 21:30:39.846"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:30:39.846" endtime="20250325 21:30:39.846"/>
</return>
<status status="PASS" starttime="20250325 21:30:39.835" endtime="20250325 21:30:39.847"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:39.847" endtime="20250325 21:30:39.847"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:39.847" endtime="20250325 21:30:39.847"/>
</branch>
<status status="PASS" starttime="20250325 21:30:39.835" endtime="20250325 21:30:39.847"/>
</if>
<status status="PASS" starttime="20250325 21:30:39.355" endtime="20250325 21:30:39.847"/>
</kw>
<status status="PASS" starttime="20250325 21:30:37.450" endtime="20250325 21:30:39.847"/>
</kw>
<kw name="Verify Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:39.848" level="INFO">${randStr} = 4942866249</msg>
<status status="PASS" starttime="20250325 21:30:39.848" endtime="20250325 21:30:39.848"/>
</kw>
<msg timestamp="20250325 21:30:39.848" level="INFO">${random} = ozone-test-4942866249</msg>
<status status="PASS" starttime="20250325 21:30:39.847" endtime="20250325 21:30:39.848"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:39.851" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key multipart/adjusted_length_ozone-test-4814558196 /tmp/verifyozone-test-4942866249 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:41.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:41.283" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:39 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:30:39.849" endtime="20250325 21:30:41.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:41.283" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:39 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:40 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:30:40 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:41.283" endtime="20250325 21:30:41.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:41.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:41.284" endtime="20250325 21:30:41.284"/>
</kw>
<status status="PASS" starttime="20250325 21:30:39.849" endtime="20250325 21:30:41.284"/>
</kw>
<msg timestamp="20250325 21:30:41.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:39.849" endtime="20250325 21:30:41.284"/>
</kw>
<msg timestamp="20250325 21:30:41.284" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:39 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:30:39.849" endtime="20250325 21:30:41.285"/>
</kw>
<status status="PASS" starttime="20250325 21:30:39.848" endtime="20250325 21:30:41.285"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250325 21:30:41.285" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20250325 21:30:41.285" endtime="20250325 21:30:41.285"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:41.289" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-4942866249'.</msg>
<msg timestamp="20250325 21:30:41.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:41.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:41.286" endtime="20250325 21:30:41.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:41.299" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:41.298" endtime="20250325 21:30:41.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:41.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:41.299" endtime="20250325 21:30:41.299"/>
</kw>
<status status="PASS" starttime="20250325 21:30:41.286" endtime="20250325 21:30:41.300"/>
</kw>
<msg timestamp="20250325 21:30:41.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:41.286" endtime="20250325 21:30:41.300"/>
</kw>
<status status="PASS" starttime="20250325 21:30:41.285" endtime="20250325 21:30:41.300"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:41.303" level="INFO">Running command 'md5sum /tmp/originalozone-test-4942866249 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:41.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:41.318" level="INFO">${output} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:41.301" endtime="20250325 21:30:41.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:41.319" level="INFO">56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:41.319" endtime="20250325 21:30:41.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:41.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:41.320" endtime="20250325 21:30:41.320"/>
</kw>
<status status="PASS" starttime="20250325 21:30:41.301" endtime="20250325 21:30:41.320"/>
</kw>
<msg timestamp="20250325 21:30:41.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:41.301" endtime="20250325 21:30:41.320"/>
</kw>
<msg timestamp="20250325 21:30:41.320" level="INFO">${checksumbefore} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:41.300" endtime="20250325 21:30:41.320"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:41.323" level="INFO">Running command 'md5sum /tmp/verifyozone-test-4942866249 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:41.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:41.338" level="INFO">${output} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:41.321" endtime="20250325 21:30:41.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:41.339" level="INFO">56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:41.338" endtime="20250325 21:30:41.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:41.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:41.339" endtime="20250325 21:30:41.339"/>
</kw>
<status status="PASS" starttime="20250325 21:30:41.321" endtime="20250325 21:30:41.339"/>
</kw>
<msg timestamp="20250325 21:30:41.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:41.321" endtime="20250325 21:30:41.339"/>
</kw>
<msg timestamp="20250325 21:30:41.339" level="INFO">${checksumafter} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:41.320" endtime="20250325 21:30:41.339"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:41.340" endtime="20250325 21:30:41.340"/>
</kw>
<status status="PASS" starttime="20250325 21:30:41.300" endtime="20250325 21:30:41.340"/>
</kw>
<status status="PASS" starttime="20250325 21:30:39.847" endtime="20250325 21:30:41.340"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:37.448" endtime="20250325 21:30:41.340"/>
</test>
<test id="s1-s3-s8-t2" name="Overwrite Empty File" line="64">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:41.342" level="INFO">${randStr} = 6743683440</msg>
<status status="PASS" starttime="20250325 21:30:41.341" endtime="20250325 21:30:41.342"/>
</kw>
<msg timestamp="20250325 21:30:41.342" level="INFO">${random} = ozone-test-6743683440</msg>
<status status="PASS" starttime="20250325 21:30:41.341" endtime="20250325 21:30:41.342"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:30:41.342" level="INFO">${PREFIX} = ozone-test-6743683440</msg>
<status status="PASS" starttime="20250325 21:30:41.342" endtime="20250325 21:30:41.342"/>
</kw>
<status status="PASS" starttime="20250325 21:30:41.341" endtime="20250325 21:30:41.342"/>
</kw>
<kw name="Execute" library="os">
<arg>touch ${TEMP_DIR}/empty</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:41.345" level="INFO">Running command 'touch /tmp/empty 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:41.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:41.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:41.343" endtime="20250325 21:30:41.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:41.349" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:41.349" endtime="20250325 21:30:41.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:41.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:41.349" endtime="20250325 21:30:41.350"/>
</kw>
<status status="PASS" starttime="20250325 21:30:41.343" endtime="20250325 21:30:41.350"/>
</kw>
<msg timestamp="20250325 21:30:41.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:41.343" endtime="20250325 21:30:41.350"/>
</kw>
<status status="PASS" starttime="20250325 21:30:41.342" endtime="20250325 21:30:41.350"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp ${TEMP_DIR}/empty s3://${BUCKET}/empty_file_${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:41.354" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/empty s3://encrypted/empty_file_ozone-test-6743683440 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:41.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:41.822" level="INFO">${output} = upload: ../../tmp/empty to s3://encrypted/empty_file_ozone-test-6743683440</msg>
<status status="PASS" starttime="20250325 21:30:41.352" endtime="20250325 21:30:41.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:41.823" level="INFO">upload: ../../tmp/empty to s3://encrypted/empty_file_ozone-test-6743683440</msg>
<status status="PASS" starttime="20250325 21:30:41.823" endtime="20250325 21:30:41.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:41.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:41.823" endtime="20250325 21:30:41.823"/>
</kw>
<status status="PASS" starttime="20250325 21:30:41.352" endtime="20250325 21:30:41.824"/>
</kw>
<msg timestamp="20250325 21:30:41.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:41.351" endtime="20250325 21:30:41.824"/>
</kw>
<msg timestamp="20250325 21:30:41.824" level="INFO">${output} = upload: ../../tmp/empty to s3://encrypted/empty_file_ozone-test-6743683440</msg>
<status status="PASS" starttime="20250325 21:30:41.350" endtime="20250325 21:30:41.824"/>
</kw>
<status status="PASS" starttime="20250325 21:30:41.350" endtime="20250325 21:30:41.824"/>
</kw>
<kw name="Perform Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>empty_file_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Initiate MPU" library="mpu_lib">
<var>${upload_id}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:41.828" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key empty_file_ozone-test-6743683440  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:42.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:42.306" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "empty_file_ozone-test-6743683440",
    "UploadId": "0195cf36-fccd-7de2-9b42-8c80f294f8cb-114225200644292644"
}</msg>
<status status="PASS" starttime="20250325 21:30:41.826" endtime="20250325 21:30:42.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:42.307" level="INFO">{
    "Bucket": "encrypted",
    "Key": "empty_file_ozone-test-6743683440",
    "UploadId": "0195cf36-fccd-7de2-9b42-8c80f294f8cb-114225200644292644"
}</msg>
<status status="PASS" starttime="20250325 21:30:42.307" endtime="20250325 21:30:42.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:42.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:42.307" endtime="20250325 21:30:42.308"/>
</kw>
<msg timestamp="20250325 21:30:42.308" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "empty_file_ozone-test-6743683440",
    "UploadId": "0195cf36-fccd-7de2-9b42-8c80f294f8cb-114225200644292644"
}</msg>
<status status="PASS" starttime="20250325 21:30:41.826" endtime="20250325 21:30:42.308"/>
</kw>
<msg timestamp="20250325 21:30:42.308" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "empty_file_ozone-test-6743683440",
    "UploadId": "0195cf36-fccd-7de2-9b42-8c80f294f8cb-114225200644292644"
}</msg>
<status status="PASS" starttime="20250325 21:30:41.825" endtime="20250325 21:30:42.308"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:42.308" endtime="20250325 21:30:42.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:42.309" endtime="20250325 21:30:42.309"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:42.312" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "empty_file_ozone-test-6743683440",
    "UploadId": "0195cf36-fccd-7de2-9b42-8c80f294f8cb-114225200644292644"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:42.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:42.317" level="INFO">${output} = 0195cf36-fccd-7de2-9b42-8c80f294f8cb-114225200644292644</msg>
<status status="PASS" starttime="20250325 21:30:42.309" endtime="20250325 21:30:42.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:42.317" level="INFO">0195cf36-fccd-7de2-9b42-8c80f294f8cb-114225200644292644</msg>
<status status="PASS" starttime="20250325 21:30:42.317" endtime="20250325 21:30:42.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:42.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:42.318" endtime="20250325 21:30:42.318"/>
</kw>
<msg timestamp="20250325 21:30:42.318" level="INFO">${upload_id} = 0195cf36-fccd-7de2-9b42-8c80f294f8cb-114225200644292644</msg>
<status status="PASS" starttime="20250325 21:30:42.309" endtime="20250325 21:30:42.318"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:30:42.318" endtime="20250325 21:30:42.318"/>
</return>
<status status="PASS" starttime="20250325 21:30:42.308" endtime="20250325 21:30:42.318"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:42.318" endtime="20250325 21:30:42.318"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:42.318" endtime="20250325 21:30:42.319"/>
</branch>
<status status="PASS" starttime="20250325 21:30:42.308" endtime="20250325 21:30:42.319"/>
</if>
<msg timestamp="20250325 21:30:42.319" level="INFO">${upload_id} = 0195cf36-fccd-7de2-9b42-8c80f294f8cb-114225200644292644</msg>
<status status="PASS" starttime="20250325 21:30:41.825" endtime="20250325 21:30:42.319"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>@{files}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250325 21:30:42.320" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250325 21:30:42.319" endtime="20250325 21:30:42.320"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250325 21:30:42.320" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250325 21:30:42.320" endtime="20250325 21:30:42.320"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:42.324" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key empty_file_ozone-test-6743683440 --part-number 1 --body /tmp/part1 --upload-id 0195cf36-fccd-7de2-9b42-8c80f294f8cb-114225200644292644 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:43.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:43.079" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:42.322" endtime="20250325 21:30:43.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:43.080" level="INFO">{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:43.079" endtime="20250325 21:30:43.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:43.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:43.080" endtime="20250325 21:30:43.081"/>
</kw>
<msg timestamp="20250325 21:30:43.081" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:42.321" endtime="20250325 21:30:43.081"/>
</kw>
<msg timestamp="20250325 21:30:43.081" level="INFO">${result} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:42.321" endtime="20250325 21:30:43.081"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:43.081" endtime="20250325 21:30:43.082"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:43.085" level="INFO">Running command 'echo '{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:43.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:43.091" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:43.083" endtime="20250325 21:30:43.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:43.092" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:43.091" endtime="20250325 21:30:43.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:43.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:43.092" endtime="20250325 21:30:43.092"/>
</kw>
<status status="PASS" starttime="20250325 21:30:43.082" endtime="20250325 21:30:43.093"/>
</kw>
<msg timestamp="20250325 21:30:43.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:43.082" endtime="20250325 21:30:43.093"/>
</kw>
<msg timestamp="20250325 21:30:43.093" level="INFO">${etag} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:43.082" endtime="20250325 21:30:43.093"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:43.096" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:43.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:43.110" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:43.094" endtime="20250325 21:30:43.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:43.111" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:43.110" endtime="20250325 21:30:43.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:43.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:43.111" endtime="20250325 21:30:43.112"/>
</kw>
<status status="PASS" starttime="20250325 21:30:43.094" endtime="20250325 21:30:43.112"/>
</kw>
<msg timestamp="20250325 21:30:43.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:43.093" endtime="20250325 21:30:43.112"/>
</kw>
<msg timestamp="20250325 21:30:43.112" level="INFO">${md5sum} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:43.093" endtime="20250325 21:30:43.112"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:30:43.112" endtime="20250325 21:30:43.113"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:30:43.113" endtime="20250325 21:30:43.113"/>
</return>
<status status="PASS" starttime="20250325 21:30:43.081" endtime="20250325 21:30:43.113"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:43.113" endtime="20250325 21:30:43.113"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:43.113" endtime="20250325 21:30:43.113"/>
</branch>
<status status="PASS" starttime="20250325 21:30:43.081" endtime="20250325 21:30:43.113"/>
</if>
<msg timestamp="20250325 21:30:43.113" level="INFO">${etag} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:42.320" endtime="20250325 21:30:43.113"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:30:43.113" endtime="20250325 21:30:43.114"/>
</kw>
<status status="PASS" starttime="20250325 21:30:42.320" endtime="20250325 21:30:43.114"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250325 21:30:43.114" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250325 21:30:43.114" endtime="20250325 21:30:43.114"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:43.118" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key empty_file_ozone-test-6743683440 --part-number 2 --body /tmp/part2 --upload-id 0195cf36-fccd-7de2-9b42-8c80f294f8cb-114225200644292644 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:43.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:43.757" level="INFO">${output} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:30:43.116" endtime="20250325 21:30:43.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:43.758" level="INFO">{
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:30:43.758" endtime="20250325 21:30:43.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:43.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:43.759" endtime="20250325 21:30:43.759"/>
</kw>
<msg timestamp="20250325 21:30:43.759" level="INFO">${output} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:30:43.115" endtime="20250325 21:30:43.759"/>
</kw>
<msg timestamp="20250325 21:30:43.760" level="INFO">${result} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:30:43.115" endtime="20250325 21:30:43.760"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:43.760" endtime="20250325 21:30:43.760"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:43.766" level="INFO">Running command 'echo '{
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:43.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:43.773" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:43.762" endtime="20250325 21:30:43.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:43.774" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:43.774" endtime="20250325 21:30:43.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:43.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:43.774" endtime="20250325 21:30:43.775"/>
</kw>
<status status="PASS" starttime="20250325 21:30:43.761" endtime="20250325 21:30:43.775"/>
</kw>
<msg timestamp="20250325 21:30:43.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:43.761" endtime="20250325 21:30:43.775"/>
</kw>
<msg timestamp="20250325 21:30:43.775" level="INFO">${etag} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:43.760" endtime="20250325 21:30:43.775"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:43.780" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:43.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:43.789" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:43.777" endtime="20250325 21:30:43.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:43.790" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:43.790" endtime="20250325 21:30:43.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:43.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:43.791" endtime="20250325 21:30:43.791"/>
</kw>
<status status="PASS" starttime="20250325 21:30:43.776" endtime="20250325 21:30:43.791"/>
</kw>
<msg timestamp="20250325 21:30:43.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:43.776" endtime="20250325 21:30:43.792"/>
</kw>
<msg timestamp="20250325 21:30:43.792" level="INFO">${md5sum} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:43.776" endtime="20250325 21:30:43.792"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:30:43.792" endtime="20250325 21:30:43.793"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:30:43.793" endtime="20250325 21:30:43.793"/>
</return>
<status status="PASS" starttime="20250325 21:30:43.760" endtime="20250325 21:30:43.793"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:43.793" endtime="20250325 21:30:43.793"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:43.793" endtime="20250325 21:30:43.793"/>
</branch>
<status status="PASS" starttime="20250325 21:30:43.760" endtime="20250325 21:30:43.793"/>
</if>
<msg timestamp="20250325 21:30:43.793" level="INFO">${etag} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:43.114" endtime="20250325 21:30:43.793"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:30:43.793" endtime="20250325 21:30:43.794"/>
</kw>
<status status="PASS" starttime="20250325 21:30:43.114" endtime="20250325 21:30:43.794"/>
</iter>
<status status="PASS" starttime="20250325 21:30:42.320" endtime="20250325 21:30:43.794"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250325 21:30:43.795" level="INFO">${parts} = {ETag=fb9f1b33e6fa46c9035a38136bcab55d,PartNumber=1},{ETag=6f41c53c1f6ff560d62b1a28154b4e53,PartNumber=2}</msg>
<status status="PASS" starttime="20250325 21:30:43.794" endtime="20250325 21:30:43.795"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250325 21:30:43.795" endtime="20250325 21:30:43.795"/>
</return>
<msg timestamp="20250325 21:30:43.795" level="INFO">${parts} = {ETag=fb9f1b33e6fa46c9035a38136bcab55d,PartNumber=1},{ETag=6f41c53c1f6ff560d62b1a28154b4e53,PartNumber=2}</msg>
<status status="PASS" starttime="20250325 21:30:42.319" endtime="20250325 21:30:43.795"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${parts}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:43.801" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key empty_file_ozone-test-6743683440 --upload-id 0195cf36-fccd-7de2-9b42-8c80f294f8cb-114225200644292644 --multipart-upload 'Parts=[{ETag=fb9f1b33e6fa46c9035a38136bcab55d,PartNumber=1},{ETag=6f41c53c1f6ff560d62b1a28154b4e53,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:44.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:44.314" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "empty_file_ozone-test-6743683440",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}</msg>
<status status="PASS" starttime="20250325 21:30:43.797" endtime="20250325 21:30:44.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:44.315" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "empty_file_ozone-test-6743683440",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}</msg>
<status status="PASS" starttime="20250325 21:30:44.314" endtime="20250325 21:30:44.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:44.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:44.315" endtime="20250325 21:30:44.315"/>
</kw>
<msg timestamp="20250325 21:30:44.316" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "empty_file_ozone-test-6743683440",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}</msg>
<status status="PASS" starttime="20250325 21:30:43.796" endtime="20250325 21:30:44.316"/>
</kw>
<msg timestamp="20250325 21:30:44.316" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "empty_file_ozone-test-6743683440",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}</msg>
<status status="PASS" starttime="20250325 21:30:43.796" endtime="20250325 21:30:44.316"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:44.316" endtime="20250325 21:30:44.316"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:44.316" endtime="20250325 21:30:44.317"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:44.317" endtime="20250325 21:30:44.317"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:44.320" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "empty_file_ozone-test-6743683440",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:44.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:44.325" level="INFO">${output} = "fc35ba8ce370cb6f8d222b2715c824d8-2"</msg>
<status status="PASS" starttime="20250325 21:30:44.318" endtime="20250325 21:30:44.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:44.326" level="INFO">"fc35ba8ce370cb6f8d222b2715c824d8-2"</msg>
<status status="PASS" starttime="20250325 21:30:44.326" endtime="20250325 21:30:44.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:44.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:44.326" endtime="20250325 21:30:44.327"/>
</kw>
<status status="PASS" starttime="20250325 21:30:44.318" endtime="20250325 21:30:44.327"/>
</kw>
<msg timestamp="20250325 21:30:44.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:44.317" endtime="20250325 21:30:44.327"/>
</kw>
<msg timestamp="20250325 21:30:44.327" level="INFO">${etag} = "fc35ba8ce370cb6f8d222b2715c824d8-2"</msg>
<status status="PASS" starttime="20250325 21:30:44.317" endtime="20250325 21:30:44.327"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:30:44.327" endtime="20250325 21:30:44.327"/>
</return>
<status status="PASS" starttime="20250325 21:30:44.316" endtime="20250325 21:30:44.327"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:44.327" endtime="20250325 21:30:44.327"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:44.327" endtime="20250325 21:30:44.327"/>
</branch>
<status status="PASS" starttime="20250325 21:30:44.316" endtime="20250325 21:30:44.327"/>
</if>
<status status="PASS" starttime="20250325 21:30:43.795" endtime="20250325 21:30:44.328"/>
</kw>
<status status="PASS" starttime="20250325 21:30:41.824" endtime="20250325 21:30:44.328"/>
</kw>
<kw name="Verify Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>empty_file_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:44.329" level="INFO">${randStr} = 4438945587</msg>
<status status="PASS" starttime="20250325 21:30:44.328" endtime="20250325 21:30:44.329"/>
</kw>
<msg timestamp="20250325 21:30:44.329" level="INFO">${random} = ozone-test-4438945587</msg>
<status status="PASS" starttime="20250325 21:30:44.328" endtime="20250325 21:30:44.329"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:44.332" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key empty_file_ozone-test-6743683440 /tmp/verifyozone-test-4438945587 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:45.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:45.547" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:44 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:30:44.330" endtime="20250325 21:30:45.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:45.548" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:44 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:44 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:30:44 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:45.547" endtime="20250325 21:30:45.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:45.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:45.548" endtime="20250325 21:30:45.548"/>
</kw>
<status status="PASS" starttime="20250325 21:30:44.330" endtime="20250325 21:30:45.548"/>
</kw>
<msg timestamp="20250325 21:30:45.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:44.330" endtime="20250325 21:30:45.549"/>
</kw>
<msg timestamp="20250325 21:30:45.549" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:44 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:30:44.330" endtime="20250325 21:30:45.549"/>
</kw>
<status status="PASS" starttime="20250325 21:30:44.329" endtime="20250325 21:30:45.549"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250325 21:30:45.549" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20250325 21:30:45.549" endtime="20250325 21:30:45.549"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:45.553" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-4438945587'.</msg>
<msg timestamp="20250325 21:30:45.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:45.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:45.550" endtime="20250325 21:30:45.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:45.564" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:45.563" endtime="20250325 21:30:45.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:45.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:45.564" endtime="20250325 21:30:45.564"/>
</kw>
<status status="PASS" starttime="20250325 21:30:45.550" endtime="20250325 21:30:45.565"/>
</kw>
<msg timestamp="20250325 21:30:45.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:45.550" endtime="20250325 21:30:45.565"/>
</kw>
<status status="PASS" starttime="20250325 21:30:45.549" endtime="20250325 21:30:45.565"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:45.569" level="INFO">Running command 'md5sum /tmp/originalozone-test-4438945587 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:45.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:45.584" level="INFO">${output} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:45.566" endtime="20250325 21:30:45.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:45.585" level="INFO">56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:45.585" endtime="20250325 21:30:45.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:45.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:45.585" endtime="20250325 21:30:45.586"/>
</kw>
<status status="PASS" starttime="20250325 21:30:45.566" endtime="20250325 21:30:45.586"/>
</kw>
<msg timestamp="20250325 21:30:45.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:45.566" endtime="20250325 21:30:45.586"/>
</kw>
<msg timestamp="20250325 21:30:45.586" level="INFO">${checksumbefore} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:45.565" endtime="20250325 21:30:45.586"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:45.590" level="INFO">Running command 'md5sum /tmp/verifyozone-test-4438945587 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:45.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:45.605" level="INFO">${output} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:45.587" endtime="20250325 21:30:45.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:45.606" level="INFO">56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:45.605" endtime="20250325 21:30:45.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:45.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:45.606" endtime="20250325 21:30:45.606"/>
</kw>
<status status="PASS" starttime="20250325 21:30:45.587" endtime="20250325 21:30:45.606"/>
</kw>
<msg timestamp="20250325 21:30:45.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:45.587" endtime="20250325 21:30:45.606"/>
</kw>
<msg timestamp="20250325 21:30:45.606" level="INFO">${checksumafter} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:45.586" endtime="20250325 21:30:45.606"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:45.607" endtime="20250325 21:30:45.607"/>
</kw>
<status status="PASS" starttime="20250325 21:30:45.565" endtime="20250325 21:30:45.607"/>
</kw>
<status status="PASS" starttime="20250325 21:30:44.328" endtime="20250325 21:30:45.607"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:41.340" endtime="20250325 21:30:45.607"/>
</test>
<test id="s1-s3-s8-t3" name="Test Multipart Upload" line="70">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:45.609" level="INFO">${randStr} = 8851726069</msg>
<status status="PASS" starttime="20250325 21:30:45.609" endtime="20250325 21:30:45.609"/>
</kw>
<msg timestamp="20250325 21:30:45.609" level="INFO">${random} = ozone-test-8851726069</msg>
<status status="PASS" starttime="20250325 21:30:45.608" endtime="20250325 21:30:45.609"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:30:45.609" level="INFO">${PREFIX} = ozone-test-8851726069</msg>
<status status="PASS" starttime="20250325 21:30:45.609" endtime="20250325 21:30:45.609"/>
</kw>
<status status="PASS" starttime="20250325 21:30:45.608" endtime="20250325 21:30:45.610"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:45.613" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-8851726069/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:46.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:46.110" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8851726069/multipartKey",
    "UploadId": "0195cf37-0ba3-78d1-aec1-6b160ff6171d-114225200893198375"
}</msg>
<status status="PASS" starttime="20250325 21:30:45.611" endtime="20250325 21:30:46.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:46.110" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-8851726069/multipartKey",
    "UploadId": "0195cf37-0ba3-78d1-aec1-6b160ff6171d-114225200893198375"
}</msg>
<status status="PASS" starttime="20250325 21:30:46.110" endtime="20250325 21:30:46.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:46.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:46.111" endtime="20250325 21:30:46.111"/>
</kw>
<msg timestamp="20250325 21:30:46.111" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8851726069/multipartKey",
    "UploadId": "0195cf37-0ba3-78d1-aec1-6b160ff6171d-114225200893198375"
}</msg>
<status status="PASS" starttime="20250325 21:30:45.611" endtime="20250325 21:30:46.111"/>
</kw>
<msg timestamp="20250325 21:30:46.111" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8851726069/multipartKey",
    "UploadId": "0195cf37-0ba3-78d1-aec1-6b160ff6171d-114225200893198375"
}</msg>
<status status="PASS" starttime="20250325 21:30:45.610" endtime="20250325 21:30:46.111"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:46.112" endtime="20250325 21:30:46.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:46.112" endtime="20250325 21:30:46.112"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:46.115" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-8851726069/multipartKey",
    "UploadId": "0195cf37-0ba3-78d1-aec1-6b160ff6171d-114225200893198375"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:46.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:46.120" level="INFO">${output} = 0195cf37-0ba3-78d1-aec1-6b160ff6171d-114225200893198375</msg>
<status status="PASS" starttime="20250325 21:30:46.113" endtime="20250325 21:30:46.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:46.121" level="INFO">0195cf37-0ba3-78d1-aec1-6b160ff6171d-114225200893198375</msg>
<status status="PASS" starttime="20250325 21:30:46.121" endtime="20250325 21:30:46.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:46.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:46.121" endtime="20250325 21:30:46.121"/>
</kw>
<msg timestamp="20250325 21:30:46.122" level="INFO">${upload_id} = 0195cf37-0ba3-78d1-aec1-6b160ff6171d-114225200893198375</msg>
<status status="PASS" starttime="20250325 21:30:46.112" endtime="20250325 21:30:46.122"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:30:46.122" endtime="20250325 21:30:46.122"/>
</return>
<status status="PASS" starttime="20250325 21:30:46.112" endtime="20250325 21:30:46.122"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:46.122" endtime="20250325 21:30:46.122"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:46.122" endtime="20250325 21:30:46.122"/>
</branch>
<status status="PASS" starttime="20250325 21:30:46.111" endtime="20250325 21:30:46.122"/>
</if>
<msg timestamp="20250325 21:30:46.122" level="INFO">${uploadID} = 0195cf37-0ba3-78d1-aec1-6b160ff6171d-114225200893198375</msg>
<status status="PASS" starttime="20250325 21:30:45.610" endtime="20250325 21:30:46.122"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${nextUploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:46.126" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-8851726069/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:46.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:46.603" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8851726069/multipartKey",
    "UploadId": "0195cf37-0d98-7a90-9d83-f33a6ad78a08-114225200926031912"
}</msg>
<status status="PASS" starttime="20250325 21:30:46.124" endtime="20250325 21:30:46.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:46.604" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-8851726069/multipartKey",
    "UploadId": "0195cf37-0d98-7a90-9d83-f33a6ad78a08-114225200926031912"
}</msg>
<status status="PASS" starttime="20250325 21:30:46.603" endtime="20250325 21:30:46.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:46.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:46.604" endtime="20250325 21:30:46.604"/>
</kw>
<msg timestamp="20250325 21:30:46.604" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8851726069/multipartKey",
    "UploadId": "0195cf37-0d98-7a90-9d83-f33a6ad78a08-114225200926031912"
}</msg>
<status status="PASS" starttime="20250325 21:30:46.123" endtime="20250325 21:30:46.604"/>
</kw>
<msg timestamp="20250325 21:30:46.604" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8851726069/multipartKey",
    "UploadId": "0195cf37-0d98-7a90-9d83-f33a6ad78a08-114225200926031912"
}</msg>
<status status="PASS" starttime="20250325 21:30:46.123" endtime="20250325 21:30:46.604"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:46.605" endtime="20250325 21:30:46.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:46.605" endtime="20250325 21:30:46.605"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:46.608" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-8851726069/multipartKey",
    "UploadId": "0195cf37-0d98-7a90-9d83-f33a6ad78a08-114225200926031912"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:46.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:46.613" level="INFO">${output} = 0195cf37-0d98-7a90-9d83-f33a6ad78a08-114225200926031912</msg>
<status status="PASS" starttime="20250325 21:30:46.606" endtime="20250325 21:30:46.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:46.614" level="INFO">0195cf37-0d98-7a90-9d83-f33a6ad78a08-114225200926031912</msg>
<status status="PASS" starttime="20250325 21:30:46.614" endtime="20250325 21:30:46.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:46.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:46.614" endtime="20250325 21:30:46.615"/>
</kw>
<msg timestamp="20250325 21:30:46.615" level="INFO">${upload_id} = 0195cf37-0d98-7a90-9d83-f33a6ad78a08-114225200926031912</msg>
<status status="PASS" starttime="20250325 21:30:46.605" endtime="20250325 21:30:46.615"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:30:46.615" endtime="20250325 21:30:46.615"/>
</return>
<status status="PASS" starttime="20250325 21:30:46.605" endtime="20250325 21:30:46.615"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:46.615" endtime="20250325 21:30:46.615"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:46.615" endtime="20250325 21:30:46.615"/>
</branch>
<status status="PASS" starttime="20250325 21:30:46.605" endtime="20250325 21:30:46.615"/>
</if>
<msg timestamp="20250325 21:30:46.615" level="INFO">${nextUploadID} = 0195cf37-0d98-7a90-9d83-f33a6ad78a08-114225200926031912</msg>
<status status="PASS" starttime="20250325 21:30:46.122" endtime="20250325 21:30:46.615"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20250325 21:30:46.616" endtime="20250325 21:30:46.616"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>${nextUploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:46.619" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-8851726069/multipartKey --part-number 1 --body /tmp/part1 --upload-id 0195cf37-0d98-7a90-9d83-f33a6ad78a08-114225200926031912 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:47.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:47.458" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:46.617" endtime="20250325 21:30:47.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:47.459" level="INFO">{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:47.459" endtime="20250325 21:30:47.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:47.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:47.460" endtime="20250325 21:30:47.460"/>
</kw>
<msg timestamp="20250325 21:30:47.460" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:46.617" endtime="20250325 21:30:47.460"/>
</kw>
<msg timestamp="20250325 21:30:47.461" level="INFO">${result} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:46.616" endtime="20250325 21:30:47.461"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:47.461" endtime="20250325 21:30:47.462"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:47.466" level="INFO">Running command 'echo '{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:47.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:47.474" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:47.463" endtime="20250325 21:30:47.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:47.475" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:47.474" endtime="20250325 21:30:47.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:47.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:47.475" endtime="20250325 21:30:47.476"/>
</kw>
<status status="PASS" starttime="20250325 21:30:47.462" endtime="20250325 21:30:47.476"/>
</kw>
<msg timestamp="20250325 21:30:47.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:47.462" endtime="20250325 21:30:47.476"/>
</kw>
<msg timestamp="20250325 21:30:47.476" level="INFO">${etag} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:47.462" endtime="20250325 21:30:47.476"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:47.480" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:47.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:47.493" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:47.478" endtime="20250325 21:30:47.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:47.494" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:47.494" endtime="20250325 21:30:47.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:47.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:47.495" endtime="20250325 21:30:47.495"/>
</kw>
<status status="PASS" starttime="20250325 21:30:47.477" endtime="20250325 21:30:47.495"/>
</kw>
<msg timestamp="20250325 21:30:47.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:47.477" endtime="20250325 21:30:47.495"/>
</kw>
<msg timestamp="20250325 21:30:47.496" level="INFO">${md5sum} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:47.476" endtime="20250325 21:30:47.496"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:30:47.496" endtime="20250325 21:30:47.496"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:30:47.496" endtime="20250325 21:30:47.496"/>
</return>
<status status="PASS" starttime="20250325 21:30:47.461" endtime="20250325 21:30:47.496"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:47.496" endtime="20250325 21:30:47.496"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:47.496" endtime="20250325 21:30:47.496"/>
</branch>
<status status="PASS" starttime="20250325 21:30:47.461" endtime="20250325 21:30:47.497"/>
</if>
<status status="PASS" starttime="20250325 21:30:46.616" endtime="20250325 21:30:47.497"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>${nextUploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:47.501" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-8851726069/multipartKey --part-number 1 --body /tmp/part1 --upload-id 0195cf37-0d98-7a90-9d83-f33a6ad78a08-114225200926031912 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:48.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:48.210" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:47.499" endtime="20250325 21:30:48.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:48.211" level="INFO">{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:48.211" endtime="20250325 21:30:48.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:48.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:48.212" endtime="20250325 21:30:48.212"/>
</kw>
<msg timestamp="20250325 21:30:48.212" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:47.498" endtime="20250325 21:30:48.212"/>
</kw>
<msg timestamp="20250325 21:30:48.213" level="INFO">${result} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:47.497" endtime="20250325 21:30:48.213"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:48.213" endtime="20250325 21:30:48.213"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:48.218" level="INFO">Running command 'echo '{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:48.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:48.225" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:48.215" endtime="20250325 21:30:48.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:48.226" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:48.226" endtime="20250325 21:30:48.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:48.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:48.226" endtime="20250325 21:30:48.227"/>
</kw>
<status status="PASS" starttime="20250325 21:30:48.214" endtime="20250325 21:30:48.227"/>
</kw>
<msg timestamp="20250325 21:30:48.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:48.214" endtime="20250325 21:30:48.227"/>
</kw>
<msg timestamp="20250325 21:30:48.227" level="INFO">${etag} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:48.213" endtime="20250325 21:30:48.227"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:48.231" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:48.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:48.244" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:48.228" endtime="20250325 21:30:48.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:48.245" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:48.245" endtime="20250325 21:30:48.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:48.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:48.245" endtime="20250325 21:30:48.246"/>
</kw>
<status status="PASS" starttime="20250325 21:30:48.228" endtime="20250325 21:30:48.246"/>
</kw>
<msg timestamp="20250325 21:30:48.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:48.228" endtime="20250325 21:30:48.246"/>
</kw>
<msg timestamp="20250325 21:30:48.246" level="INFO">${md5sum} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:48.227" endtime="20250325 21:30:48.246"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:30:48.246" endtime="20250325 21:30:48.247"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:30:48.247" endtime="20250325 21:30:48.247"/>
</return>
<status status="PASS" starttime="20250325 21:30:48.213" endtime="20250325 21:30:48.247"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:48.247" endtime="20250325 21:30:48.247"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:48.247" endtime="20250325 21:30:48.247"/>
</branch>
<status status="PASS" starttime="20250325 21:30:48.213" endtime="20250325 21:30:48.247"/>
</if>
<status status="PASS" starttime="20250325 21:30:47.497" endtime="20250325 21:30:48.247"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:45.608" endtime="20250325 21:30:48.247"/>
</test>
<test id="s1-s3-s8-t4" name="Test Multipart Upload Complete" line="84">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:48.249" level="INFO">${randStr} = 3175762936</msg>
<status status="PASS" starttime="20250325 21:30:48.249" endtime="20250325 21:30:48.249"/>
</kw>
<msg timestamp="20250325 21:30:48.249" level="INFO">${random} = ozone-test-3175762936</msg>
<status status="PASS" starttime="20250325 21:30:48.248" endtime="20250325 21:30:48.249"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:30:48.250" level="INFO">${PREFIX} = ozone-test-3175762936</msg>
<status status="PASS" starttime="20250325 21:30:48.249" endtime="20250325 21:30:48.250"/>
</kw>
<status status="PASS" starttime="20250325 21:30:48.248" endtime="20250325 21:30:48.250"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>0</arg>
<arg>--metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:48.253" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-3175762936/multipartKey1 --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:48.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:48.746" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-3175762936/multipartKey1",
    "UploadId": "0195cf37-15f7-7481-8ad5-a26d44b39988-114225201066475563"
}</msg>
<status status="PASS" starttime="20250325 21:30:48.251" endtime="20250325 21:30:48.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:48.746" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-3175762936/multipartKey1",
    "UploadId": "0195cf37-15f7-7481-8ad5-a26d44b39988-114225201066475563"
}</msg>
<status status="PASS" starttime="20250325 21:30:48.746" endtime="20250325 21:30:48.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:48.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:48.747" endtime="20250325 21:30:48.747"/>
</kw>
<msg timestamp="20250325 21:30:48.748" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-3175762936/multipartKey1",
    "UploadId": "0195cf37-15f7-7481-8ad5-a26d44b39988-114225201066475563"
}</msg>
<status status="PASS" starttime="20250325 21:30:48.250" endtime="20250325 21:30:48.748"/>
</kw>
<msg timestamp="20250325 21:30:48.748" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-3175762936/multipartKey1",
    "UploadId": "0195cf37-15f7-7481-8ad5-a26d44b39988-114225201066475563"
}</msg>
<status status="PASS" starttime="20250325 21:30:48.250" endtime="20250325 21:30:48.748"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:48.748" endtime="20250325 21:30:48.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:48.748" endtime="20250325 21:30:48.749"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:48.751" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-3175762936/multipartKey1",
    "UploadId": "0195cf37-15f7-7481-8ad5-a26d44b39988-114225201066475563"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:48.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:48.756" level="INFO">${output} = 0195cf37-15f7-7481-8ad5-a26d44b39988-114225201066475563</msg>
<status status="PASS" starttime="20250325 21:30:48.749" endtime="20250325 21:30:48.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:48.757" level="INFO">0195cf37-15f7-7481-8ad5-a26d44b39988-114225201066475563</msg>
<status status="PASS" starttime="20250325 21:30:48.757" endtime="20250325 21:30:48.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:48.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:48.757" endtime="20250325 21:30:48.758"/>
</kw>
<msg timestamp="20250325 21:30:48.758" level="INFO">${upload_id} = 0195cf37-15f7-7481-8ad5-a26d44b39988-114225201066475563</msg>
<status status="PASS" starttime="20250325 21:30:48.749" endtime="20250325 21:30:48.758"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:30:48.758" endtime="20250325 21:30:48.758"/>
</return>
<status status="PASS" starttime="20250325 21:30:48.748" endtime="20250325 21:30:48.758"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:48.758" endtime="20250325 21:30:48.758"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:48.758" endtime="20250325 21:30:48.758"/>
</branch>
<status status="PASS" starttime="20250325 21:30:48.748" endtime="20250325 21:30:48.758"/>
</if>
<msg timestamp="20250325 21:30:48.758" level="INFO">${uploadID} = 0195cf37-15f7-7481-8ad5-a26d44b39988-114225201066475563</msg>
<status status="PASS" starttime="20250325 21:30:48.250" endtime="20250325 21:30:48.759"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:48.762" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-3175762936/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 0195cf37-15f7-7481-8ad5-a26d44b39988-114225201066475563 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:49.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:49.454" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:48.760" endtime="20250325 21:30:49.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:49.455" level="INFO">{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:49.455" endtime="20250325 21:30:49.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:49.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:49.455" endtime="20250325 21:30:49.456"/>
</kw>
<msg timestamp="20250325 21:30:49.456" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:48.760" endtime="20250325 21:30:49.456"/>
</kw>
<msg timestamp="20250325 21:30:49.456" level="INFO">${result} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:30:48.759" endtime="20250325 21:30:49.456"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:49.456" endtime="20250325 21:30:49.456"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:49.460" level="INFO">Running command 'echo '{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:49.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:49.465" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:49.457" endtime="20250325 21:30:49.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:49.466" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:49.465" endtime="20250325 21:30:49.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:49.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:49.466" endtime="20250325 21:30:49.466"/>
</kw>
<status status="PASS" starttime="20250325 21:30:49.457" endtime="20250325 21:30:49.466"/>
</kw>
<msg timestamp="20250325 21:30:49.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:49.457" endtime="20250325 21:30:49.467"/>
</kw>
<msg timestamp="20250325 21:30:49.467" level="INFO">${etag} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:49.457" endtime="20250325 21:30:49.467"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:49.470" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:49.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:49.482" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:49.468" endtime="20250325 21:30:49.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:49.483" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:49.483" endtime="20250325 21:30:49.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:49.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:49.483" endtime="20250325 21:30:49.484"/>
</kw>
<status status="PASS" starttime="20250325 21:30:49.467" endtime="20250325 21:30:49.484"/>
</kw>
<msg timestamp="20250325 21:30:49.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:49.467" endtime="20250325 21:30:49.484"/>
</kw>
<msg timestamp="20250325 21:30:49.484" level="INFO">${md5sum} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:49.467" endtime="20250325 21:30:49.485"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:30:49.485" endtime="20250325 21:30:49.485"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:30:49.485" endtime="20250325 21:30:49.485"/>
</return>
<status status="PASS" starttime="20250325 21:30:49.456" endtime="20250325 21:30:49.485"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:49.485" endtime="20250325 21:30:49.485"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:49.485" endtime="20250325 21:30:49.485"/>
</branch>
<status status="PASS" starttime="20250325 21:30:49.456" endtime="20250325 21:30:49.485"/>
</if>
<msg timestamp="20250325 21:30:49.485" level="INFO">${eTag1} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:48.759" endtime="20250325 21:30:49.485"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:49.489" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-3175762936/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 0195cf37-15f7-7481-8ad5-a26d44b39988-114225201066475563 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:50.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:50.064" level="INFO">${output} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:30:49.487" endtime="20250325 21:30:50.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:50.065" level="INFO">{
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:30:50.064" endtime="20250325 21:30:50.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:50.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:50.065" endtime="20250325 21:30:50.066"/>
</kw>
<msg timestamp="20250325 21:30:50.066" level="INFO">${output} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:30:49.486" endtime="20250325 21:30:50.066"/>
</kw>
<msg timestamp="20250325 21:30:50.066" level="INFO">${result} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:30:49.486" endtime="20250325 21:30:50.066"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:50.067" endtime="20250325 21:30:50.067"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:50.071" level="INFO">Running command 'echo '{
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:50.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:50.077" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:50.068" endtime="20250325 21:30:50.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:50.078" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:50.077" endtime="20250325 21:30:50.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:50.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:50.078" endtime="20250325 21:30:50.078"/>
</kw>
<status status="PASS" starttime="20250325 21:30:50.068" endtime="20250325 21:30:50.078"/>
</kw>
<msg timestamp="20250325 21:30:50.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:50.068" endtime="20250325 21:30:50.079"/>
</kw>
<msg timestamp="20250325 21:30:50.079" level="INFO">${etag} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:50.067" endtime="20250325 21:30:50.079"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:50.082" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:50.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:50.088" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:50.080" endtime="20250325 21:30:50.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:50.089" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:50.089" endtime="20250325 21:30:50.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:50.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:50.089" endtime="20250325 21:30:50.090"/>
</kw>
<status status="PASS" starttime="20250325 21:30:50.080" endtime="20250325 21:30:50.090"/>
</kw>
<msg timestamp="20250325 21:30:50.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:50.079" endtime="20250325 21:30:50.090"/>
</kw>
<msg timestamp="20250325 21:30:50.090" level="INFO">${md5sum} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:50.079" endtime="20250325 21:30:50.090"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:30:50.090" endtime="20250325 21:30:50.090"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:30:50.091" endtime="20250325 21:30:50.091"/>
</return>
<status status="PASS" starttime="20250325 21:30:50.066" endtime="20250325 21:30:50.091"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:50.091" endtime="20250325 21:30:50.091"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:50.091" endtime="20250325 21:30:50.091"/>
</branch>
<status status="PASS" starttime="20250325 21:30:50.066" endtime="20250325 21:30:50.091"/>
</if>
<msg timestamp="20250325 21:30:50.091" level="INFO">${eTag2} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:49.485" endtime="20250325 21:30:50.091"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:50.094" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 0195cf37-15f7-7481-8ad5-a26d44b39988-114225201066475563 --bucket encrypted --key ozone-test-3175762936/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:50.558" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:30:50.559" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250325 21:30:50.092" endtime="20250325 21:30:50.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:50.559" level="INFO">
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250325 21:30:50.559" endtime="20250325 21:30:50.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:50.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:50.560" endtime="20250325 21:30:50.560"/>
</kw>
<msg timestamp="20250325 21:30:50.561" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250325 21:30:50.092" endtime="20250325 21:30:50.561"/>
</kw>
<msg timestamp="20250325 21:30:50.561" level="INFO">${result} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250325 21:30:50.091" endtime="20250325 21:30:50.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRequest</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:50.561" endtime="20250325 21:30:50.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>must specify at least one part</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:50.561" endtime="20250325 21:30:50.561"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${resultETag}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:50.565" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-3175762936/multipartKey1 --upload-id 0195cf37-15f7-7481-8ad5-a26d44b39988-114225201066475563 --multipart-upload 'Parts=[{ETag=fb9f1b33e6fa46c9035a38136bcab55d,PartNumber=1},{ETag=6f41c53c1f6ff560d62b1a28154b4e53,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:51.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:51.079" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-3175762936/multipartKey1",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}</msg>
<status status="PASS" starttime="20250325 21:30:50.563" endtime="20250325 21:30:51.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:51.080" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-3175762936/multipartKey1",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}</msg>
<status status="PASS" starttime="20250325 21:30:51.079" endtime="20250325 21:30:51.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:51.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:51.080" endtime="20250325 21:30:51.080"/>
</kw>
<msg timestamp="20250325 21:30:51.080" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-3175762936/multipartKey1",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}</msg>
<status status="PASS" starttime="20250325 21:30:50.563" endtime="20250325 21:30:51.080"/>
</kw>
<msg timestamp="20250325 21:30:51.080" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-3175762936/multipartKey1",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}</msg>
<status status="PASS" starttime="20250325 21:30:50.562" endtime="20250325 21:30:51.080"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:51.081" endtime="20250325 21:30:51.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:51.081" endtime="20250325 21:30:51.082"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:51.082" endtime="20250325 21:30:51.082"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:51.085" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-3175762936/multipartKey1",
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:51.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:51.090" level="INFO">${output} = "fc35ba8ce370cb6f8d222b2715c824d8-2"</msg>
<status status="PASS" starttime="20250325 21:30:51.083" endtime="20250325 21:30:51.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:51.091" level="INFO">"fc35ba8ce370cb6f8d222b2715c824d8-2"</msg>
<status status="PASS" starttime="20250325 21:30:51.090" endtime="20250325 21:30:51.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:51.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:51.091" endtime="20250325 21:30:51.091"/>
</kw>
<status status="PASS" starttime="20250325 21:30:51.082" endtime="20250325 21:30:51.091"/>
</kw>
<msg timestamp="20250325 21:30:51.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:51.082" endtime="20250325 21:30:51.092"/>
</kw>
<msg timestamp="20250325 21:30:51.092" level="INFO">${etag} = "fc35ba8ce370cb6f8d222b2715c824d8-2"</msg>
<status status="PASS" starttime="20250325 21:30:51.082" endtime="20250325 21:30:51.092"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:30:51.092" endtime="20250325 21:30:51.092"/>
</return>
<status status="PASS" starttime="20250325 21:30:51.081" endtime="20250325 21:30:51.092"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:51.092" endtime="20250325 21:30:51.092"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:51.092" endtime="20250325 21:30:51.092"/>
</branch>
<status status="PASS" starttime="20250325 21:30:51.081" endtime="20250325 21:30:51.092"/>
</if>
<msg timestamp="20250325 21:30:51.092" level="INFO">${resultETag} = "fc35ba8ce370cb6f8d222b2715c824d8-2"</msg>
<status status="PASS" starttime="20250325 21:30:50.561" endtime="20250325 21:30:51.092"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedResultETag}</var>
<arg>echo -n ${eTag1}${eTag2} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:51.095" level="INFO">Running command 'echo -n fb9f1b33e6fa46c9035a38136bcab55d6f41c53c1f6ff560d62b1a28154b4e53 | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:51.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:51.100" level="INFO">${output} = fc35ba8ce370cb6f8d222b2715c824d8</msg>
<status status="PASS" starttime="20250325 21:30:51.093" endtime="20250325 21:30:51.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:51.100" level="INFO">fc35ba8ce370cb6f8d222b2715c824d8</msg>
<status status="PASS" starttime="20250325 21:30:51.100" endtime="20250325 21:30:51.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:51.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:51.100" endtime="20250325 21:30:51.101"/>
</kw>
<status status="PASS" starttime="20250325 21:30:51.093" endtime="20250325 21:30:51.101"/>
</kw>
<msg timestamp="20250325 21:30:51.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:51.093" endtime="20250325 21:30:51.101"/>
</kw>
<msg timestamp="20250325 21:30:51.101" level="INFO">${expectedResultETag} = fc35ba8ce370cb6f8d222b2715c824d8</msg>
<status status="PASS" starttime="20250325 21:30:51.092" endtime="20250325 21:30:51.101"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resultETag}</arg>
<arg>"${expectedResultETag}-2"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:30:51.101" endtime="20250325 21:30:51.102"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:51.105" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-3175762936/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:51.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:51.573" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250325 21:30:51.103" endtime="20250325 21:30:51.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:51.574" level="INFO">{
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:51 GMT",
    "Metadata": {
        "gdprenabled": "true",
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:30:51 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:51.573" endtime="20250325 21:30:51.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:51.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:51.574" endtime="20250325 21:30:51.574"/>
</kw>
<status status="PASS" starttime="20250325 21:30:51.103" endtime="20250325 21:30:51.575"/>
</kw>
<msg timestamp="20250325 21:30:51.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:51.102" endtime="20250325 21:30:51.575"/>
</kw>
<msg timestamp="20250325 21:30:51.575" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250325 21:30:51.102" endtime="20250325 21:30:51.575"/>
</kw>
<msg timestamp="20250325 21:30:51.575" level="INFO">${result} = {
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250325 21:30:51.102" endtime="20250325 21:30:51.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:51.575" endtime="20250325 21:30:51.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:51.576" endtime="20250325 21:30:51.576"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:51.578" level="INFO">Running command 'echo '{
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:51 GMT",
    "Metadata": {
        "gdprenabled": "true",
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:30:51 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:51.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:51.583" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250325 21:30:51.576" endtime="20250325 21:30:51.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:51.584" level="INFO">2</msg>
<status status="PASS" starttime="20250325 21:30:51.584" endtime="20250325 21:30:51.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:51.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:51.584" endtime="20250325 21:30:51.584"/>
</kw>
<msg timestamp="20250325 21:30:51.585" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250325 21:30:51.576" endtime="20250325 21:30:51.585"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:51.585" endtime="20250325 21:30:51.585"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:51.588" level="INFO">Running command 'ozone sh key info /s3v/encrypted/ozone-test-3175762936/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:54.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:54.708" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-3175762936/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 6291456,
  "creationTime" : "2025-03-25T21:30:51.015Z",...</msg>
<status status="PASS" starttime="20250325 21:30:51.586" endtime="20250325 21:30:54.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:54.709" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-3175762936/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 6291456,
  "creationTime" : "2025-03-25T21:30:51.015Z",
  "modificationTime" : "2025-03-25T21:30:51.015Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "gdprenabled" : "true",
    "ETag" : "fc35ba8ce370cb6f8d222b2715c824d8-2",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 115816896921600036,
    "length" : 5243904,
    "offset" : 0,
    "keyOffset" : 0
  }, {
    "containerID" : 1,
    "localID" : 115816896921600037,
    "length" : 1047552,
    "offset" : 0,
    "keyOffset" : 5243904
  } ],
  "generation" : 533,
  "fileEncryptionInfo" : {
    "cipherSuite" : "AES_CTR_NOPADDING",
    "iv" : "lX3Hd6xFSiHxvmuPryNbCg==",
    "keyName" : "key1",
    "ezKeyVersionName" : "key1@0",
    "cryptoProtocolVersion" : "ENCRYPTION_ZONES",
    "encryptedDataEncryptionKey" : "fIkV73enfKUXvHCKiLd9ag=="
  },
  "file" : true
}</msg>
<status status="PASS" starttime="20250325 21:30:54.709" endtime="20250325 21:30:54.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:54.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:54.710" endtime="20250325 21:30:54.710"/>
</kw>
<status status="PASS" starttime="20250325 21:30:51.586" endtime="20250325 21:30:54.710"/>
</kw>
<msg timestamp="20250325 21:30:54.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:51.585" endtime="20250325 21:30:54.710"/>
</kw>
<msg timestamp="20250325 21:30:54.710" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-3175762936/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 6291456,
  "creationTime" : "2025-03-25T21:30:51.015Z",...</msg>
<status status="PASS" starttime="20250325 21:30:51.585" endtime="20250325 21:30:54.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:54.711" endtime="20250325 21:30:54.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:54.711" endtime="20250325 21:30:54.711"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:54.711" endtime="20250325 21:30:54.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:54.712" endtime="20250325 21:30:54.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:54.712" endtime="20250325 21:30:54.712"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:54.716" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-3175762936/multipartKey1 /tmp/ozone-test-3175762936-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:55.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:55.986" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:30:54.714" endtime="20250325 21:30:55.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:55.987" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:55 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:30:55 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:55.987" endtime="20250325 21:30:55.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:55.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:55.988" endtime="20250325 21:30:55.988"/>
</kw>
<status status="PASS" starttime="20250325 21:30:54.713" endtime="20250325 21:30:55.988"/>
</kw>
<msg timestamp="20250325 21:30:55.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:54.713" endtime="20250325 21:30:55.988"/>
</kw>
<msg timestamp="20250325 21:30:55.988" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:30:54.713" endtime="20250325 21:30:55.988"/>
</kw>
<msg timestamp="20250325 21:30:55.988" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:30:54.712" endtime="20250325 21:30:55.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:55.989" endtime="20250325 21:30:55.989"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:55.992" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:55 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:30:55 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:55.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:55.998" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250325 21:30:55.989" endtime="20250325 21:30:55.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:55.999" level="INFO">2</msg>
<status status="PASS" starttime="20250325 21:30:55.998" endtime="20250325 21:30:55.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:55.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:55.999" endtime="20250325 21:30:55.999"/>
</kw>
<msg timestamp="20250325 21:30:56.000" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250325 21:30:55.989" endtime="20250325 21:30:56.000"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:56.000" endtime="20250325 21:30:56.000"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:56.003" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 6291456,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:55 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:30:55 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:56.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:56.008" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250325 21:30:56.001" endtime="20250325 21:30:56.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:56.009" level="INFO">2</msg>
<status status="PASS" starttime="20250325 21:30:56.008" endtime="20250325 21:30:56.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:56.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:56.009" endtime="20250325 21:30:56.009"/>
</kw>
<msg timestamp="20250325 21:30:56.009" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250325 21:30:56.000" endtime="20250325 21:30:56.009"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:56.010" endtime="20250325 21:30:56.010"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:56.013" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-3175762936-multipartKey1'.</msg>
<msg timestamp="20250325 21:30:56.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:56.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:30:56.011" endtime="20250325 21:30:56.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:56.023" level="INFO"/>
<status status="PASS" starttime="20250325 21:30:56.023" endtime="20250325 21:30:56.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:56.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:56.023" endtime="20250325 21:30:56.024"/>
</kw>
<status status="PASS" starttime="20250325 21:30:56.010" endtime="20250325 21:30:56.024"/>
</kw>
<msg timestamp="20250325 21:30:56.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:56.010" endtime="20250325 21:30:56.024"/>
</kw>
<status status="PASS" starttime="20250325 21:30:56.010" endtime="20250325 21:30:56.024"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:56.028" level="INFO">Running command 'md5sum /tmp/ozone-test-3175762936-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:56.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:56.043" level="INFO">${output} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:56.025" endtime="20250325 21:30:56.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:56.044" level="INFO">56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:56.043" endtime="20250325 21:30:56.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:56.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:56.044" endtime="20250325 21:30:56.044"/>
</kw>
<status status="PASS" starttime="20250325 21:30:56.025" endtime="20250325 21:30:56.044"/>
</kw>
<msg timestamp="20250325 21:30:56.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:56.025" endtime="20250325 21:30:56.044"/>
</kw>
<msg timestamp="20250325 21:30:56.045" level="INFO">${checksumbefore} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:56.024" endtime="20250325 21:30:56.045"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:56.048" level="INFO">Running command 'md5sum /tmp/ozone-test-3175762936-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:56.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:56.063" level="INFO">${output} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:56.046" endtime="20250325 21:30:56.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:56.064" level="INFO">56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:56.063" endtime="20250325 21:30:56.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:56.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:56.064" endtime="20250325 21:30:56.064"/>
</kw>
<status status="PASS" starttime="20250325 21:30:56.045" endtime="20250325 21:30:56.064"/>
</kw>
<msg timestamp="20250325 21:30:56.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:56.045" endtime="20250325 21:30:56.064"/>
</kw>
<msg timestamp="20250325 21:30:56.065" level="INFO">${checksumafter} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:30:56.045" endtime="20250325 21:30:56.065"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:56.065" endtime="20250325 21:30:56.065"/>
</kw>
<status status="PASS" starttime="20250325 21:30:56.024" endtime="20250325 21:30:56.065"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 /tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:56.069" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-3175762936/multipartKey1 --part-number 1 /tmp/ozone-test-3175762936-multipartKey1-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:57.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:57.110" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 5243904,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:30:56.067" endtime="20250325 21:30:57.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:57.111" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 5243904,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:56 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:30:56 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:57.110" endtime="20250325 21:30:57.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:57.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:57.111" endtime="20250325 21:30:57.111"/>
</kw>
<status status="PASS" starttime="20250325 21:30:56.067" endtime="20250325 21:30:57.111"/>
</kw>
<msg timestamp="20250325 21:30:57.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:56.067" endtime="20250325 21:30:57.112"/>
</kw>
<msg timestamp="20250325 21:30:57.112" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 5243904,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:30:56.066" endtime="20250325 21:30:57.112"/>
</kw>
<msg timestamp="20250325 21:30:57.112" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 5243904,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:30:56.065" endtime="20250325 21:30:57.112"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:57.116" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:57.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:57.129" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:57.113" endtime="20250325 21:30:57.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:57.130" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:57.130" endtime="20250325 21:30:57.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:57.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:57.131" endtime="20250325 21:30:57.131"/>
</kw>
<status status="PASS" starttime="20250325 21:30:57.113" endtime="20250325 21:30:57.131"/>
</kw>
<msg timestamp="20250325 21:30:57.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:57.113" endtime="20250325 21:30:57.131"/>
</kw>
<msg timestamp="20250325 21:30:57.131" level="INFO">${checksumbefore} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:57.112" endtime="20250325 21:30:57.131"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:57.135" level="INFO">Running command 'md5sum /tmp/ozone-test-3175762936-multipartKey1-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:57.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:57.148" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:57.132" endtime="20250325 21:30:57.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:57.149" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:57.149" endtime="20250325 21:30:57.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:57.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:57.149" endtime="20250325 21:30:57.150"/>
</kw>
<status status="PASS" starttime="20250325 21:30:57.132" endtime="20250325 21:30:57.150"/>
</kw>
<msg timestamp="20250325 21:30:57.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:57.132" endtime="20250325 21:30:57.150"/>
</kw>
<msg timestamp="20250325 21:30:57.150" level="INFO">${checksumafter} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:30:57.132" endtime="20250325 21:30:57.150"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:57.150" endtime="20250325 21:30:57.151"/>
</kw>
<status status="PASS" starttime="20250325 21:30:57.112" endtime="20250325 21:30:57.151"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:57.153" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 5243904,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:56 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:30:56 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:57.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:57.158" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250325 21:30:57.151" endtime="20250325 21:30:57.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:57.159" level="INFO">2</msg>
<status status="PASS" starttime="20250325 21:30:57.158" endtime="20250325 21:30:57.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:57.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:57.159" endtime="20250325 21:30:57.159"/>
</kw>
<msg timestamp="20250325 21:30:57.159" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250325 21:30:57.151" endtime="20250325 21:30:57.159"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:57.160" endtime="20250325 21:30:57.160"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:57.162" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 5243904,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:56 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:30:56 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:57.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:57.167" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250325 21:30:57.160" endtime="20250325 21:30:57.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:57.168" level="INFO">2</msg>
<status status="PASS" starttime="20250325 21:30:57.167" endtime="20250325 21:30:57.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:57.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:57.168" endtime="20250325 21:30:57.168"/>
</kw>
<msg timestamp="20250325 21:30:57.168" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250325 21:30:57.160" endtime="20250325 21:30:57.168"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:57.168" endtime="20250325 21:30:57.169"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 /tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:57.172" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-3175762936/multipartKey1 --part-number 2 /tmp/ozone-test-3175762936-multipartKey1-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:57.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:57.918" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 1047552,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:30:57.170" endtime="20250325 21:30:57.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:57.919" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 1047552,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:30:57 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:30:57 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:30:57.918" endtime="20250325 21:30:57.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:57.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:57.919" endtime="20250325 21:30:57.919"/>
</kw>
<status status="PASS" starttime="20250325 21:30:57.170" endtime="20250325 21:30:57.919"/>
</kw>
<msg timestamp="20250325 21:30:57.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:57.170" endtime="20250325 21:30:57.919"/>
</kw>
<msg timestamp="20250325 21:30:57.919" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 1047552,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:30:57.170" endtime="20250325 21:30:57.920"/>
</kw>
<msg timestamp="20250325 21:30:57.920" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:30:51 GMT",
    "ContentLength": 1047552,
    "ETag": "\"fc35ba8ce370cb6f8d222b2715c824d8-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:30:57.169" endtime="20250325 21:30:57.920"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:57.923" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:57.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:57.929" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:57.921" endtime="20250325 21:30:57.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:57.930" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:57.929" endtime="20250325 21:30:57.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:57.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:57.930" endtime="20250325 21:30:57.930"/>
</kw>
<status status="PASS" starttime="20250325 21:30:57.921" endtime="20250325 21:30:57.931"/>
</kw>
<msg timestamp="20250325 21:30:57.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:57.921" endtime="20250325 21:30:57.931"/>
</kw>
<msg timestamp="20250325 21:30:57.931" level="INFO">${checksumbefore} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:57.920" endtime="20250325 21:30:57.931"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:57.934" level="INFO">Running command 'md5sum /tmp/ozone-test-3175762936-multipartKey1-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:57.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:57.940" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:57.932" endtime="20250325 21:30:57.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:57.940" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:57.940" endtime="20250325 21:30:57.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:57.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:57.940" endtime="20250325 21:30:57.941"/>
</kw>
<status status="PASS" starttime="20250325 21:30:57.931" endtime="20250325 21:30:57.941"/>
</kw>
<msg timestamp="20250325 21:30:57.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:57.931" endtime="20250325 21:30:57.941"/>
</kw>
<msg timestamp="20250325 21:30:57.941" level="INFO">${checksumafter} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:30:57.931" endtime="20250325 21:30:57.941"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:30:57.941" endtime="20250325 21:30:57.942"/>
</kw>
<status status="PASS" starttime="20250325 21:30:57.920" endtime="20250325 21:30:57.942"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:48.248" endtime="20250325 21:30:57.942"/>
</test>
<test id="s1-s3-s8-t5" name="Test Multipart Upload with user defined metadata size larger than 2 KB" line="140">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:57.944" level="INFO">${randStr} = 4677847576</msg>
<status status="PASS" starttime="20250325 21:30:57.943" endtime="20250325 21:30:57.944"/>
</kw>
<msg timestamp="20250325 21:30:57.944" level="INFO">${random} = ozone-test-4677847576</msg>
<status status="PASS" starttime="20250325 21:30:57.943" endtime="20250325 21:30:57.944"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:30:57.944" level="INFO">${PREFIX} = ozone-test-4677847576</msg>
<status status="PASS" starttime="20250325 21:30:57.944" endtime="20250325 21:30:57.944"/>
</kw>
<status status="PASS" starttime="20250325 21:30:57.943" endtime="20250325 21:30:57.944"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:57.947" level="INFO">${custom_metadata_value} = iC64eIk2FkRerY2sMw5Exv3adTjXJ6fCWqNwW8KNpwzKJWZ2XQ0jphou7fgLh56W9hz4Xk1zoJJVOmf0gj5TkFB7sVC8jylmLCntyhIJWkZLiBuzRjs16NpRBHEZUd6FssmuXzqEJQ4kQCKqRG95ncZ3ECVFRoorCJqiA4ghk4fIzjIngN4llmvwSGFg1vusMz32K1h1...</msg>
<status status="PASS" starttime="20250325 21:30:57.945" endtime="20250325 21:30:57.947"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/mpuWithLargeMetadata</arg>
<arg>255</arg>
<arg>--metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:57.950" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-4677847576/mpuWithLargeMetadata --metadata="custom-key1=iC64eIk2FkRerY2sMw5Exv3adTjXJ6fCWqNwW8KNpwzKJWZ2XQ0jphou7fgLh56W9hz4Xk1zoJJVOmf0gj5TkFB7sVC8jylmLCntyhIJWkZLiBuzRjs16NpRBHEZUd6FssmuXzqEJQ4kQCKqRG95ncZ3ECVFRoorCJqiA4ghk4fIzjIngN4llmvwSGFg1vusMz32K1h1ZAW6H99YNng3BkA5F7bmZtX3oEIdBNfRxBNZDxBSfpKM0DO7zHaIVfkoWdeR8TPVSf3SbgRgLRc65GJDVj9M4ey8J04NduAUm4szhepQrzhxuobJv5yPhQlBar4y2KaTqF7PRftzELi69HqQd5qoQE3x6CL4J2zchHNOUaK9F5sKUm78BIXHzL4PMqIW2K9CzRawAL4TVtfz31XCrYNsqtFiah0z7oSkJTyAwcCKbXhbOZJxiLmYqdwdyvn02DzvCekFOqR7UwYLxCL2iAsp0t2ZHQzcm51QpBWlGLxHpcghWKCIJP44n7de3axIYQwPsmugcopMByXZWDs5IxmW7qtpoLz0CKQtLF9lisJPzn9sMybaICAR9PeIlUhFc4r1JOSA8JeCBeeJXNEcJuzXrcUeOMmavm1iDv1JcSGgBJbZojxAFcLsEsYi5NlefY093bdShnLuXTth85vlKVNVxQQspFiUUDadBG3J5S7AxuvupzXzVQjqhwJ8AvCq0EfNFLx2Isgb3TkmCeFEqwk4lB4OmuPrO9a1zBrpysz0GWmfzvc7LzXD90MTZDidzlsQVMbsuPeIz30zya3XDgeuCJ15RFPJKPdyJNHXRIoRGfL79V5Bm5oW2pL2ArFQChw6Rj9Xx5eOCpnFFXRxvVGgg6JGMY6WKAyw61IGfuFYohFdWy2knUNgrKjHwKJJBzWa7Z7sUwKrX1lA528KP8YfFAA2aVl6je9cg7oz0gTSpXdT7Ksr50XXAunGWU020U5E0bE3tjFKUnwz4fSe1nDXycY6suj4y4UZBhmZeTeH6RL1UShXoQhgdhz3PdsORaFWr7AYL3cacfQTLNQjedmibj7xZpCYGHfqKLlw1kXUOOeXBlmAz8JLhOyQhImAHZzhtjI6fnKcfawafwjMeWuMrcuwrJunnzJzj3gL5lp5gOoo6IQy9P0jkJGKufBh6mrk1LRwneNLoQmqhQ1MAApDHxIGv0y9vU1zzUtEiBbIq0SR7K13QHuFe13sA6CDRfsq5pWwUFiRicMPNy0mPU2TDgpwhDMVBfh1O8vu5QsVIqKYvPEnpMpk1jVSoRnIm3MevConKKghIA7VgvGH29S0nD7rtM8dZFqNv7Lm1l12X9jJHWMn0nCEe5sLZ80nyVnyrMZTqlm9sBKSb4LsdTtmBOtxeSdqb7i8bGLbN59JqMZugABVl6aSrb4jcrZQqxkDnIKBWR9Q1eR8UWgoSLMJr7EU79WQ9Q5IJpaHlsxHGe8OCq1Idk0PDM2UC3RpUUsFJwqk3okXK0CrWKZYz133mwvpr58sEc7AybVgbX8fqEIfOUkae4AtEAl79ioONcyiyTXXv4iFq43B9Og9jLWE2yrCjmblgo1EQz64gZBzAUn0XbAWz3xS6Q30fwWNvlglG3rxPKQRcAfjYmZo94CtfoPKd5tJFwX8K91ElLCJnbdv9R1nSD393ViGXRUkdxX2a6CoLNQCMyliXQvXWpFdBTtvn1wNS5K00oeV2LojSZjigRXU3oSSS52IrmGVZF3Wj8HOl5CCxUGTiF3VBdBqqpSDhqv2aIgp0n0oF2ssAoMuvcnch92FGjPGPFANGWoFezWJ1lYVTACiPu9xTsRc4Ok4aPV85f8NadtOIJxrkHqWekaY36BvH919uHmMiAkZJVqRdM0uwPxf77IoddF6xcWy3jjxqMOLrxLsSx6mSFILTaYX91FexTe5hK5LeSDqWbWclYc9NhK03Mc9OcBAOTKWxEB2vCgw9I5kJ9NZStamF6vkaxgMJ0fePmUJbDUfo8TGVuMxwOCGfTawAprNHZldGJoL4amgNF58vxEhf0r4G4LtEEj0ebFk0fhoGQPJf3KooMLlM5kP65Q6cQD57bHUAZcPP4gSjA7oluXvu6tSTFopuhfocLTuiqR3d65CqdkgzDIcMnkJU3O8uPVewXTOXnI6r4VeVnNIJcIv7zpO8JNu545okjUzKMBGH3sVc8JH1dUcuOQ43ojZFUYYeqr6Wf753mRgsHT7p3662GVsLFQ21AjmPvMRVMzShNJ6aljXGGH5kQCLsgzi2zOxk64ZbNTMgoxeo3fFvnWpqjBeJ6oLHGTXQu7E6VosUbv6WJr0W5DD3ZpgBGbrivgfhmyYPBM2F7ac7J3Tv13L1nXE4ROcDxEvYJDpWfsvt0sgKD2UHZgvQzRuozw7Af7yb4veQUdvLVMsynifCwa9SWuWBMGbRUjzvShPrQKVEfN0ANvFjtxYGRlBJ0gVLXuskq7objkMd00w1qH9OTFkTfwhcCnVkxfhB1DAWbqehFvu7B3uWBvSUq58KZ9wS4nzVVRd4TmxrO2V4d2tR6881zMkAc8vOzhKr4ryAysVKyDgTkTXIuCeZbcIT0qUlBOKgNt4rL6ktPwSexoP8qI0TDrikes87N6fHQvwGPMqvP0nSZlT7yiNvhxXstgjaFmTEWOIBXZVGZwE08muK73xXbkhejM7BanzMPIHsOlKmyKLFqXsabvYJtepo8I8IPmlaAyZcYumU5FG4aHAG7z3aOofY9bCA2blQAbrJCGNQ1ayQoTIyrZpftJvxxKEchuUfMu7HcXm24dxYp06bkQ00Q5irf13C9hwAn1oJYPjKrmoSpkkJwGIboCJOgEuwNacjlp2qJPpJmNelTbuVceEnMOH5a7siOsw4nSADtXEaypDwZNCMP5v26swKGEaFNJEJhu5J5jRqgjnquuFAl8jYiEyn0QUzM8tDMhOD4B276oAbLGxFkatAAFpwGDVX4GQeoJ1ntBgMeHtfMD6qcJVI7dmbzxq" 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:58.441" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:30:58.441" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250325 21:30:57.948" endtime="20250325 21:30:58.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:58.442" level="INFO">
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250325 21:30:58.442" endtime="20250325 21:30:58.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:58.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:58.443" endtime="20250325 21:30:58.443"/>
</kw>
<msg timestamp="20250325 21:30:58.443" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250325 21:30:57.948" endtime="20250325 21:30:58.443"/>
</kw>
<msg timestamp="20250325 21:30:58.443" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250325 21:30:57.947" endtime="20250325 21:30:58.443"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:30:58.444" endtime="20250325 21:30:58.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:30:58.444" endtime="20250325 21:30:58.444"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20250325 21:30:58.444" endtime="20250325 21:30:58.444"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="NOT RUN" starttime="20250325 21:30:58.444" endtime="20250325 21:30:58.444"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:58.443" endtime="20250325 21:30:58.444"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250325 21:30:58.444" endtime="20250325 21:30:58.444"/>
</return>
<status status="PASS" starttime="20250325 21:30:58.444" endtime="20250325 21:30:58.444"/>
</branch>
<status status="PASS" starttime="20250325 21:30:58.443" endtime="20250325 21:30:58.444"/>
</if>
<msg timestamp="20250325 21:30:58.444" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250325 21:30:57.947" endtime="20250325 21:30:58.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:58.445" endtime="20250325 21:30:58.445"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:58.445" endtime="20250325 21:30:58.445"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:57.942" endtime="20250325 21:30:58.445"/>
</test>
<test id="s1-s3-s8-t6" name="Test Multipart Upload Complete Entity too small" line="146">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:30:58.447" level="INFO">${randStr} = 8344965732</msg>
<status status="PASS" starttime="20250325 21:30:58.447" endtime="20250325 21:30:58.447"/>
</kw>
<msg timestamp="20250325 21:30:58.447" level="INFO">${random} = ozone-test-8344965732</msg>
<status status="PASS" starttime="20250325 21:30:58.447" endtime="20250325 21:30:58.447"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:30:58.448" level="INFO">${PREFIX} = ozone-test-8344965732</msg>
<status status="PASS" starttime="20250325 21:30:58.447" endtime="20250325 21:30:58.448"/>
</kw>
<status status="PASS" starttime="20250325 21:30:58.446" endtime="20250325 21:30:58.448"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:58.452" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-8344965732/multipartKey2  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:58.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:58.992" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8344965732/multipartKey2",
    "UploadId": "0195cf37-3de9-7a18-9edf-a3768ae6524b-114225201736646702"
}</msg>
<status status="PASS" starttime="20250325 21:30:58.449" endtime="20250325 21:30:58.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:58.993" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-8344965732/multipartKey2",
    "UploadId": "0195cf37-3de9-7a18-9edf-a3768ae6524b-114225201736646702"
}</msg>
<status status="PASS" starttime="20250325 21:30:58.992" endtime="20250325 21:30:58.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:58.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:58.993" endtime="20250325 21:30:58.993"/>
</kw>
<msg timestamp="20250325 21:30:58.993" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8344965732/multipartKey2",
    "UploadId": "0195cf37-3de9-7a18-9edf-a3768ae6524b-114225201736646702"
}</msg>
<status status="PASS" starttime="20250325 21:30:58.449" endtime="20250325 21:30:58.993"/>
</kw>
<msg timestamp="20250325 21:30:58.994" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8344965732/multipartKey2",
    "UploadId": "0195cf37-3de9-7a18-9edf-a3768ae6524b-114225201736646702"
}</msg>
<status status="PASS" starttime="20250325 21:30:58.449" endtime="20250325 21:30:58.994"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:58.994" endtime="20250325 21:30:58.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:58.994" endtime="20250325 21:30:58.995"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:58.997" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-8344965732/multipartKey2",
    "UploadId": "0195cf37-3de9-7a18-9edf-a3768ae6524b-114225201736646702"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:59.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:59.003" level="INFO">${output} = 0195cf37-3de9-7a18-9edf-a3768ae6524b-114225201736646702</msg>
<status status="PASS" starttime="20250325 21:30:58.995" endtime="20250325 21:30:59.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:59.003" level="INFO">0195cf37-3de9-7a18-9edf-a3768ae6524b-114225201736646702</msg>
<status status="PASS" starttime="20250325 21:30:59.003" endtime="20250325 21:30:59.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:59.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:59.004" endtime="20250325 21:30:59.004"/>
</kw>
<msg timestamp="20250325 21:30:59.004" level="INFO">${upload_id} = 0195cf37-3de9-7a18-9edf-a3768ae6524b-114225201736646702</msg>
<status status="PASS" starttime="20250325 21:30:58.995" endtime="20250325 21:30:59.004"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:30:59.004" endtime="20250325 21:30:59.004"/>
</return>
<status status="PASS" starttime="20250325 21:30:58.994" endtime="20250325 21:30:59.004"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:59.004" endtime="20250325 21:30:59.004"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:59.004" endtime="20250325 21:30:59.005"/>
</branch>
<status status="PASS" starttime="20250325 21:30:58.994" endtime="20250325 21:30:59.005"/>
</if>
<msg timestamp="20250325 21:30:59.005" level="INFO">${uploadID} = 0195cf37-3de9-7a18-9edf-a3768ae6524b-114225201736646702</msg>
<status status="PASS" starttime="20250325 21:30:58.448" endtime="20250325 21:30:59.005"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<arg>${uploadID}</arg>
<arg>/tmp/10kb</arg>
<arg>/tmp/10kb</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250325 21:30:59.006" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250325 21:30:59.005" endtime="20250325 21:30:59.006"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/10kb</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250325 21:30:59.006" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250325 21:30:59.006" endtime="20250325 21:30:59.006"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:59.010" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-8344965732/multipartKey2 --part-number 1 --body /tmp/10kb --upload-id 0195cf37-3de9-7a18-9edf-a3768ae6524b-114225201736646702 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:59.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:59.536" level="INFO">${output} = {
    "ETag": "48a6dfe87d6d0608e6346205c9b58159"
}</msg>
<status status="PASS" starttime="20250325 21:30:59.008" endtime="20250325 21:30:59.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:59.537" level="INFO">{
    "ETag": "48a6dfe87d6d0608e6346205c9b58159"
}</msg>
<status status="PASS" starttime="20250325 21:30:59.536" endtime="20250325 21:30:59.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:59.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:59.537" endtime="20250325 21:30:59.537"/>
</kw>
<msg timestamp="20250325 21:30:59.537" level="INFO">${output} = {
    "ETag": "48a6dfe87d6d0608e6346205c9b58159"
}</msg>
<status status="PASS" starttime="20250325 21:30:59.008" endtime="20250325 21:30:59.537"/>
</kw>
<msg timestamp="20250325 21:30:59.537" level="INFO">${result} = {
    "ETag": "48a6dfe87d6d0608e6346205c9b58159"
}</msg>
<status status="PASS" starttime="20250325 21:30:59.007" endtime="20250325 21:30:59.538"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:30:59.538" endtime="20250325 21:30:59.538"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:59.541" level="INFO">Running command 'echo '{
    "ETag": "48a6dfe87d6d0608e6346205c9b58159"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:59.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:59.546" level="INFO">${output} = 48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:30:59.539" endtime="20250325 21:30:59.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:59.547" level="INFO">48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:30:59.547" endtime="20250325 21:30:59.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:59.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:59.547" endtime="20250325 21:30:59.548"/>
</kw>
<status status="PASS" starttime="20250325 21:30:59.539" endtime="20250325 21:30:59.548"/>
</kw>
<msg timestamp="20250325 21:30:59.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:59.539" endtime="20250325 21:30:59.548"/>
</kw>
<msg timestamp="20250325 21:30:59.548" level="INFO">${etag} = 48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:30:59.538" endtime="20250325 21:30:59.548"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:59.551" level="INFO">Running command 'md5sum /tmp/10kb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:30:59.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:30:59.555" level="INFO">${output} = 48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:30:59.549" endtime="20250325 21:30:59.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:30:59.556" level="INFO">48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:30:59.555" endtime="20250325 21:30:59.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:30:59.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:30:59.556" endtime="20250325 21:30:59.556"/>
</kw>
<status status="PASS" starttime="20250325 21:30:59.549" endtime="20250325 21:30:59.556"/>
</kw>
<msg timestamp="20250325 21:30:59.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:30:59.548" endtime="20250325 21:30:59.557"/>
</kw>
<msg timestamp="20250325 21:30:59.557" level="INFO">${md5sum} = 48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:30:59.548" endtime="20250325 21:30:59.557"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:30:59.557" endtime="20250325 21:30:59.557"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:30:59.557" endtime="20250325 21:30:59.557"/>
</return>
<status status="PASS" starttime="20250325 21:30:59.538" endtime="20250325 21:30:59.557"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:30:59.557" endtime="20250325 21:30:59.557"/>
</return>
<status status="NOT RUN" starttime="20250325 21:30:59.557" endtime="20250325 21:30:59.557"/>
</branch>
<status status="PASS" starttime="20250325 21:30:59.538" endtime="20250325 21:30:59.557"/>
</if>
<msg timestamp="20250325 21:30:59.557" level="INFO">${etag} = 48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:30:59.006" endtime="20250325 21:30:59.558"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:30:59.558" endtime="20250325 21:30:59.558"/>
</kw>
<status status="PASS" starttime="20250325 21:30:59.006" endtime="20250325 21:30:59.558"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/10kb</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250325 21:30:59.559" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250325 21:30:59.558" endtime="20250325 21:30:59.559"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:30:59.562" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-8344965732/multipartKey2 --part-number 2 --body /tmp/10kb --upload-id 0195cf37-3de9-7a18-9edf-a3768ae6524b-114225201736646702 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:00.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:00.124" level="INFO">${output} = {
    "ETag": "48a6dfe87d6d0608e6346205c9b58159"
}</msg>
<status status="PASS" starttime="20250325 21:30:59.560" endtime="20250325 21:31:00.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:00.125" level="INFO">{
    "ETag": "48a6dfe87d6d0608e6346205c9b58159"
}</msg>
<status status="PASS" starttime="20250325 21:31:00.124" endtime="20250325 21:31:00.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:00.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:00.125" endtime="20250325 21:31:00.125"/>
</kw>
<msg timestamp="20250325 21:31:00.126" level="INFO">${output} = {
    "ETag": "48a6dfe87d6d0608e6346205c9b58159"
}</msg>
<status status="PASS" starttime="20250325 21:30:59.560" endtime="20250325 21:31:00.126"/>
</kw>
<msg timestamp="20250325 21:31:00.126" level="INFO">${result} = {
    "ETag": "48a6dfe87d6d0608e6346205c9b58159"
}</msg>
<status status="PASS" starttime="20250325 21:30:59.559" endtime="20250325 21:31:00.126"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:00.126" endtime="20250325 21:31:00.126"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:00.130" level="INFO">Running command 'echo '{
    "ETag": "48a6dfe87d6d0608e6346205c9b58159"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:00.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:00.135" level="INFO">${output} = 48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:31:00.127" endtime="20250325 21:31:00.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:00.136" level="INFO">48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:31:00.135" endtime="20250325 21:31:00.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:00.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:00.136" endtime="20250325 21:31:00.136"/>
</kw>
<status status="PASS" starttime="20250325 21:31:00.127" endtime="20250325 21:31:00.136"/>
</kw>
<msg timestamp="20250325 21:31:00.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:00.127" endtime="20250325 21:31:00.136"/>
</kw>
<msg timestamp="20250325 21:31:00.136" level="INFO">${etag} = 48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:31:00.126" endtime="20250325 21:31:00.136"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:00.140" level="INFO">Running command 'md5sum /tmp/10kb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:00.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:00.144" level="INFO">${output} = 48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:31:00.137" endtime="20250325 21:31:00.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:00.145" level="INFO">48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:31:00.145" endtime="20250325 21:31:00.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:00.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:00.145" endtime="20250325 21:31:00.145"/>
</kw>
<status status="PASS" starttime="20250325 21:31:00.137" endtime="20250325 21:31:00.146"/>
</kw>
<msg timestamp="20250325 21:31:00.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:00.137" endtime="20250325 21:31:00.146"/>
</kw>
<msg timestamp="20250325 21:31:00.146" level="INFO">${md5sum} = 48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:31:00.137" endtime="20250325 21:31:00.146"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:31:00.146" endtime="20250325 21:31:00.146"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:31:00.146" endtime="20250325 21:31:00.146"/>
</return>
<status status="PASS" starttime="20250325 21:31:00.126" endtime="20250325 21:31:00.146"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:00.147" endtime="20250325 21:31:00.147"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:00.147" endtime="20250325 21:31:00.147"/>
</branch>
<status status="PASS" starttime="20250325 21:31:00.126" endtime="20250325 21:31:00.147"/>
</if>
<msg timestamp="20250325 21:31:00.147" level="INFO">${etag} = 48a6dfe87d6d0608e6346205c9b58159</msg>
<status status="PASS" starttime="20250325 21:30:59.559" endtime="20250325 21:31:00.147"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:00.147" endtime="20250325 21:31:00.147"/>
</kw>
<status status="PASS" starttime="20250325 21:30:59.558" endtime="20250325 21:31:00.147"/>
</iter>
<status status="PASS" starttime="20250325 21:30:59.006" endtime="20250325 21:31:00.147"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250325 21:31:00.148" level="INFO">${parts} = {ETag=48a6dfe87d6d0608e6346205c9b58159,PartNumber=1},{ETag=48a6dfe87d6d0608e6346205c9b58159,PartNumber=2}</msg>
<status status="PASS" starttime="20250325 21:31:00.147" endtime="20250325 21:31:00.148"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250325 21:31:00.148" endtime="20250325 21:31:00.148"/>
</return>
<msg timestamp="20250325 21:31:00.148" level="INFO">${parts} = {ETag=48a6dfe87d6d0608e6346205c9b58159,PartNumber=1},{ETag=48a6dfe87d6d0608e6346205c9b58159,PartNumber=2}</msg>
<status status="PASS" starttime="20250325 21:30:59.005" endtime="20250325 21:31:00.148"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<arg>${uploadID}</arg>
<arg>${parts}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:00.152" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-8344965732/multipartKey2 --upload-id 0195cf37-3de9-7a18-9edf-a3768ae6524b-114225201736646702 --multipart-upload 'Parts=[{ETag=48a6dfe87d6d0608e6346205c9b58159,PartNumber=1},{ETag=48a6dfe87d6d0608e6346205c9b58159,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:00.648" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:31:00.648" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250325 21:31:00.149" endtime="20250325 21:31:00.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:00.649" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20250325 21:31:00.649" endtime="20250325 21:31:00.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:00.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:00.650" endtime="20250325 21:31:00.650"/>
</kw>
<msg timestamp="20250325 21:31:00.650" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250325 21:31:00.149" endtime="20250325 21:31:00.650"/>
</kw>
<msg timestamp="20250325 21:31:00.650" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250325 21:31:00.149" endtime="20250325 21:31:00.650"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:00.651" endtime="20250325 21:31:00.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:00.651" endtime="20250325 21:31:00.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:00.651" endtime="20250325 21:31:00.651"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250325 21:31:00.651" endtime="20250325 21:31:00.651"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250325 21:31:00.651" endtime="20250325 21:31:00.651"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:00.650" endtime="20250325 21:31:00.651"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250325 21:31:00.651" endtime="20250325 21:31:00.651"/>
</return>
<status status="PASS" starttime="20250325 21:31:00.651" endtime="20250325 21:31:00.651"/>
</branch>
<status status="PASS" starttime="20250325 21:31:00.650" endtime="20250325 21:31:00.651"/>
</if>
<msg timestamp="20250325 21:31:00.651" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250325 21:31:00.148" endtime="20250325 21:31:00.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:00.652" endtime="20250325 21:31:00.652"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:30:58.446" endtime="20250325 21:31:00.652"/>
</test>
<test id="s1-s3-s8-t7" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="153">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:31:00.654" level="INFO">${randStr} = 9150365207</msg>
<status status="PASS" starttime="20250325 21:31:00.654" endtime="20250325 21:31:00.654"/>
</kw>
<msg timestamp="20250325 21:31:00.654" level="INFO">${random} = ozone-test-9150365207</msg>
<status status="PASS" starttime="20250325 21:31:00.653" endtime="20250325 21:31:00.654"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:31:00.655" level="INFO">${PREFIX} = ozone-test-9150365207</msg>
<status status="PASS" starttime="20250325 21:31:00.654" endtime="20250325 21:31:00.655"/>
</kw>
<status status="PASS" starttime="20250325 21:31:00.653" endtime="20250325 21:31:00.655"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:00.658" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-9150365207/multipartKey3  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:01.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:01.188" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9150365207/multipartKey3",
    "UploadId": "0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481"
}</msg>
<status status="PASS" starttime="20250325 21:31:00.656" endtime="20250325 21:31:01.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:01.189" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-9150365207/multipartKey3",
    "UploadId": "0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481"
}</msg>
<status status="PASS" starttime="20250325 21:31:01.188" endtime="20250325 21:31:01.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:01.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:01.189" endtime="20250325 21:31:01.189"/>
</kw>
<msg timestamp="20250325 21:31:01.189" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9150365207/multipartKey3",
    "UploadId": "0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481"
}</msg>
<status status="PASS" starttime="20250325 21:31:00.656" endtime="20250325 21:31:01.189"/>
</kw>
<msg timestamp="20250325 21:31:01.190" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9150365207/multipartKey3",
    "UploadId": "0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481"
}</msg>
<status status="PASS" starttime="20250325 21:31:00.656" endtime="20250325 21:31:01.190"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:01.190" endtime="20250325 21:31:01.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:01.190" endtime="20250325 21:31:01.191"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:01.194" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-9150365207/multipartKey3",
    "UploadId": "0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:01.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:01.199" level="INFO">${output} = 0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481</msg>
<status status="PASS" starttime="20250325 21:31:01.191" endtime="20250325 21:31:01.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:01.199" level="INFO">0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481</msg>
<status status="PASS" starttime="20250325 21:31:01.199" endtime="20250325 21:31:01.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:01.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:01.200" endtime="20250325 21:31:01.200"/>
</kw>
<msg timestamp="20250325 21:31:01.200" level="INFO">${upload_id} = 0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481</msg>
<status status="PASS" starttime="20250325 21:31:01.191" endtime="20250325 21:31:01.200"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:01.200" endtime="20250325 21:31:01.200"/>
</return>
<status status="PASS" starttime="20250325 21:31:01.190" endtime="20250325 21:31:01.200"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:01.200" endtime="20250325 21:31:01.200"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:01.200" endtime="20250325 21:31:01.200"/>
</branch>
<status status="PASS" starttime="20250325 21:31:01.190" endtime="20250325 21:31:01.200"/>
</if>
<msg timestamp="20250325 21:31:01.201" level="INFO">${uploadID} = 0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481</msg>
<status status="PASS" starttime="20250325 21:31:00.655" endtime="20250325 21:31:01.201"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:01.204" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-9150365207/multipartKey3 --upload-id 0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:01.687" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:31:01.687" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:01.202" endtime="20250325 21:31:01.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:01.688" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250325 21:31:01.687" endtime="20250325 21:31:01.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:01.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:01.688" endtime="20250325 21:31:01.688"/>
</kw>
<msg timestamp="20250325 21:31:01.688" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:01.202" endtime="20250325 21:31:01.688"/>
</kw>
<msg timestamp="20250325 21:31:01.688" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:01.201" endtime="20250325 21:31:01.688"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:01.689" endtime="20250325 21:31:01.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:01.689" endtime="20250325 21:31:01.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:01.689" endtime="20250325 21:31:01.689"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250325 21:31:01.689" endtime="20250325 21:31:01.689"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250325 21:31:01.689" endtime="20250325 21:31:01.689"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:01.689" endtime="20250325 21:31:01.689"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250325 21:31:01.690" endtime="20250325 21:31:01.690"/>
</return>
<status status="PASS" starttime="20250325 21:31:01.689" endtime="20250325 21:31:01.690"/>
</branch>
<status status="PASS" starttime="20250325 21:31:01.689" endtime="20250325 21:31:01.690"/>
</if>
<msg timestamp="20250325 21:31:01.690" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:01.201" endtime="20250325 21:31:01.690"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:01.690" endtime="20250325 21:31:01.690"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:01.694" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-9150365207/multipartKey3 --upload-id 0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:02.181" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:31:02.181" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:01.692" endtime="20250325 21:31:02.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:02.182" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250325 21:31:02.181" endtime="20250325 21:31:02.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:02.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:02.182" endtime="20250325 21:31:02.182"/>
</kw>
<msg timestamp="20250325 21:31:02.183" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:01.691" endtime="20250325 21:31:02.183"/>
</kw>
<msg timestamp="20250325 21:31:02.183" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:01.691" endtime="20250325 21:31:02.183"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:02.183" endtime="20250325 21:31:02.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:02.183" endtime="20250325 21:31:02.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:02.183" endtime="20250325 21:31:02.183"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250325 21:31:02.183" endtime="20250325 21:31:02.184"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250325 21:31:02.184" endtime="20250325 21:31:02.184"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:02.183" endtime="20250325 21:31:02.184"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250325 21:31:02.184" endtime="20250325 21:31:02.184"/>
</return>
<status status="PASS" starttime="20250325 21:31:02.184" endtime="20250325 21:31:02.184"/>
</branch>
<status status="PASS" starttime="20250325 21:31:02.183" endtime="20250325 21:31:02.184"/>
</if>
<msg timestamp="20250325 21:31:02.184" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:01.690" endtime="20250325 21:31:02.184"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:02.184" endtime="20250325 21:31:02.184"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:02.188" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-9150365207/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:02.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:02.898" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:31:02.186" endtime="20250325 21:31:02.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:02.899" level="INFO">{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:31:02.898" endtime="20250325 21:31:02.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:02.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:02.899" endtime="20250325 21:31:02.899"/>
</kw>
<msg timestamp="20250325 21:31:02.899" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:31:02.185" endtime="20250325 21:31:02.899"/>
</kw>
<msg timestamp="20250325 21:31:02.900" level="INFO">${result} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:31:02.185" endtime="20250325 21:31:02.900"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:02.900" endtime="20250325 21:31:02.900"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:02.903" level="INFO">Running command 'echo '{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:02.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:02.908" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:02.901" endtime="20250325 21:31:02.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:02.909" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:02.908" endtime="20250325 21:31:02.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:02.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:02.909" endtime="20250325 21:31:02.909"/>
</kw>
<status status="PASS" starttime="20250325 21:31:02.901" endtime="20250325 21:31:02.910"/>
</kw>
<msg timestamp="20250325 21:31:02.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:02.901" endtime="20250325 21:31:02.910"/>
</kw>
<msg timestamp="20250325 21:31:02.910" level="INFO">${etag} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:02.900" endtime="20250325 21:31:02.910"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:02.913" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:02.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:02.925" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:02.911" endtime="20250325 21:31:02.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:02.926" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:02.926" endtime="20250325 21:31:02.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:02.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:02.926" endtime="20250325 21:31:02.927"/>
</kw>
<status status="PASS" starttime="20250325 21:31:02.910" endtime="20250325 21:31:02.927"/>
</kw>
<msg timestamp="20250325 21:31:02.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:02.910" endtime="20250325 21:31:02.927"/>
</kw>
<msg timestamp="20250325 21:31:02.927" level="INFO">${md5sum} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:02.910" endtime="20250325 21:31:02.927"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:31:02.927" endtime="20250325 21:31:02.928"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:31:02.928" endtime="20250325 21:31:02.928"/>
</return>
<status status="PASS" starttime="20250325 21:31:02.900" endtime="20250325 21:31:02.928"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:02.928" endtime="20250325 21:31:02.928"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:02.928" endtime="20250325 21:31:02.928"/>
</branch>
<status status="PASS" starttime="20250325 21:31:02.900" endtime="20250325 21:31:02.928"/>
</if>
<msg timestamp="20250325 21:31:02.928" level="INFO">${eTag1} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:02.184" endtime="20250325 21:31:02.928"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:02.932" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-9150365207/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:03.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:03.587" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:31:02.930" endtime="20250325 21:31:03.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:03.588" level="INFO">{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:31:03.588" endtime="20250325 21:31:03.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:03.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:03.589" endtime="20250325 21:31:03.589"/>
</kw>
<msg timestamp="20250325 21:31:03.589" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:31:02.929" endtime="20250325 21:31:03.589"/>
</kw>
<msg timestamp="20250325 21:31:03.589" level="INFO">${result} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:31:02.929" endtime="20250325 21:31:03.590"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:03.590" endtime="20250325 21:31:03.590"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:03.598" level="INFO">Running command 'echo '{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:03.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:03.604" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:03.592" endtime="20250325 21:31:03.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:03.605" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:03.604" endtime="20250325 21:31:03.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:03.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:03.605" endtime="20250325 21:31:03.605"/>
</kw>
<status status="PASS" starttime="20250325 21:31:03.591" endtime="20250325 21:31:03.606"/>
</kw>
<msg timestamp="20250325 21:31:03.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:03.591" endtime="20250325 21:31:03.606"/>
</kw>
<msg timestamp="20250325 21:31:03.606" level="INFO">${etag} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:03.590" endtime="20250325 21:31:03.606"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:03.610" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:03.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:03.626" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:03.607" endtime="20250325 21:31:03.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:03.627" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:03.627" endtime="20250325 21:31:03.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:03.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:03.627" endtime="20250325 21:31:03.628"/>
</kw>
<status status="PASS" starttime="20250325 21:31:03.607" endtime="20250325 21:31:03.628"/>
</kw>
<msg timestamp="20250325 21:31:03.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:03.607" endtime="20250325 21:31:03.628"/>
</kw>
<msg timestamp="20250325 21:31:03.629" level="INFO">${md5sum} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:03.606" endtime="20250325 21:31:03.629"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:31:03.629" endtime="20250325 21:31:03.629"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:31:03.629" endtime="20250325 21:31:03.629"/>
</return>
<status status="PASS" starttime="20250325 21:31:03.590" endtime="20250325 21:31:03.629"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:03.630" endtime="20250325 21:31:03.630"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:03.629" endtime="20250325 21:31:03.630"/>
</branch>
<status status="PASS" starttime="20250325 21:31:03.590" endtime="20250325 21:31:03.630"/>
</if>
<msg timestamp="20250325 21:31:03.630" level="INFO">${eTag2} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:02.928" endtime="20250325 21:31:03.630"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag3}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>3</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:03.635" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-9150365207/multipartKey3 --part-number 3 --body /tmp/part2 --upload-id 0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:04.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:04.234" level="INFO">${output} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:31:03.632" endtime="20250325 21:31:04.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:04.236" level="INFO">{
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:31:04.235" endtime="20250325 21:31:04.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:04.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:04.236" endtime="20250325 21:31:04.236"/>
</kw>
<msg timestamp="20250325 21:31:04.237" level="INFO">${output} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:31:03.631" endtime="20250325 21:31:04.237"/>
</kw>
<msg timestamp="20250325 21:31:04.237" level="INFO">${result} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:31:03.631" endtime="20250325 21:31:04.237"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:04.237" endtime="20250325 21:31:04.238"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:04.243" level="INFO">Running command 'echo '{
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:04.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:04.250" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:04.239" endtime="20250325 21:31:04.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:04.252" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:04.251" endtime="20250325 21:31:04.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:04.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:04.252" endtime="20250325 21:31:04.252"/>
</kw>
<status status="PASS" starttime="20250325 21:31:04.238" endtime="20250325 21:31:04.252"/>
</kw>
<msg timestamp="20250325 21:31:04.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:04.238" endtime="20250325 21:31:04.253"/>
</kw>
<msg timestamp="20250325 21:31:04.253" level="INFO">${etag} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:04.238" endtime="20250325 21:31:04.253"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:04.257" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:04.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:04.265" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:04.254" endtime="20250325 21:31:04.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:04.266" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:04.266" endtime="20250325 21:31:04.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:04.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:04.267" endtime="20250325 21:31:04.267"/>
</kw>
<status status="PASS" starttime="20250325 21:31:04.254" endtime="20250325 21:31:04.268"/>
</kw>
<msg timestamp="20250325 21:31:04.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:04.253" endtime="20250325 21:31:04.268"/>
</kw>
<msg timestamp="20250325 21:31:04.268" level="INFO">${md5sum} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:04.253" endtime="20250325 21:31:04.268"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:31:04.268" endtime="20250325 21:31:04.269"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:31:04.269" endtime="20250325 21:31:04.269"/>
</return>
<status status="PASS" starttime="20250325 21:31:04.237" endtime="20250325 21:31:04.269"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:04.269" endtime="20250325 21:31:04.269"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:04.269" endtime="20250325 21:31:04.269"/>
</branch>
<status status="PASS" starttime="20250325 21:31:04.237" endtime="20250325 21:31:04.269"/>
</if>
<msg timestamp="20250325 21:31:04.269" level="INFO">${eTag3} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:03.630" endtime="20250325 21:31:04.270"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:04.275" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-9150365207/multipartKey3 --upload-id 0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:04.756" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:31:04.756" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:04.272" endtime="20250325 21:31:04.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:04.757" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250325 21:31:04.757" endtime="20250325 21:31:04.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:04.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:04.758" endtime="20250325 21:31:04.758"/>
</kw>
<msg timestamp="20250325 21:31:04.758" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:04.271" endtime="20250325 21:31:04.758"/>
</kw>
<msg timestamp="20250325 21:31:04.759" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:04.270" endtime="20250325 21:31:04.759"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:04.759" endtime="20250325 21:31:04.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:04.759" endtime="20250325 21:31:04.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:04.759" endtime="20250325 21:31:04.759"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250325 21:31:04.759" endtime="20250325 21:31:04.760"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250325 21:31:04.760" endtime="20250325 21:31:04.760"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:04.759" endtime="20250325 21:31:04.760"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250325 21:31:04.760" endtime="20250325 21:31:04.760"/>
</return>
<status status="PASS" starttime="20250325 21:31:04.760" endtime="20250325 21:31:04.760"/>
</branch>
<status status="PASS" starttime="20250325 21:31:04.759" endtime="20250325 21:31:04.760"/>
</if>
<msg timestamp="20250325 21:31:04.760" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:04.270" endtime="20250325 21:31:04.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:04.760" endtime="20250325 21:31:04.761"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:04.765" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-9150365207/multipartKey3 --upload-id 0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481 --multipart-upload 'Parts=[{ETag=fb9f1b33e6fa46c9035a38136bcab55d,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:05.246" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:31:05.246" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:04.762" endtime="20250325 21:31:05.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:05.247" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250325 21:31:05.247" endtime="20250325 21:31:05.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:05.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:05.247" endtime="20250325 21:31:05.248"/>
</kw>
<msg timestamp="20250325 21:31:05.248" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:04.762" endtime="20250325 21:31:05.248"/>
</kw>
<msg timestamp="20250325 21:31:05.248" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:04.761" endtime="20250325 21:31:05.248"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:05.248" endtime="20250325 21:31:05.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:05.249" endtime="20250325 21:31:05.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:05.249" endtime="20250325 21:31:05.249"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250325 21:31:05.249" endtime="20250325 21:31:05.249"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250325 21:31:05.249" endtime="20250325 21:31:05.249"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:05.248" endtime="20250325 21:31:05.249"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250325 21:31:05.249" endtime="20250325 21:31:05.249"/>
</return>
<status status="PASS" starttime="20250325 21:31:05.249" endtime="20250325 21:31:05.249"/>
</branch>
<status status="PASS" starttime="20250325 21:31:05.248" endtime="20250325 21:31:05.249"/>
</if>
<msg timestamp="20250325 21:31:05.249" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250325 21:31:04.761" endtime="20250325 21:31:05.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:05.250" endtime="20250325 21:31:05.250"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:05.255" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-9150365207/multipartKey3 --upload-id 0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481 --multipart-upload 'Parts=[{ETag=fb9f1b33e6fa46c9035a38136bcab55d,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:05.738" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:31:05.738" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250325 21:31:05.252" endtime="20250325 21:31:05.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:05.739" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250325 21:31:05.738" endtime="20250325 21:31:05.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:05.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:05.739" endtime="20250325 21:31:05.739"/>
</kw>
<msg timestamp="20250325 21:31:05.740" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250325 21:31:05.251" endtime="20250325 21:31:05.740"/>
</kw>
<msg timestamp="20250325 21:31:05.740" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250325 21:31:05.251" endtime="20250325 21:31:05.740"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:05.740" endtime="20250325 21:31:05.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:05.740" endtime="20250325 21:31:05.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:05.740" endtime="20250325 21:31:05.741"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250325 21:31:05.741" endtime="20250325 21:31:05.741"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250325 21:31:05.741" endtime="20250325 21:31:05.741"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:05.740" endtime="20250325 21:31:05.741"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250325 21:31:05.741" endtime="20250325 21:31:05.741"/>
</return>
<status status="PASS" starttime="20250325 21:31:05.741" endtime="20250325 21:31:05.741"/>
</branch>
<status status="PASS" starttime="20250325 21:31:05.740" endtime="20250325 21:31:05.741"/>
</if>
<msg timestamp="20250325 21:31:05.741" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250325 21:31:05.250" endtime="20250325 21:31:05.741"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:05.741" endtime="20250325 21:31:05.741"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:05.745" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-9150365207/multipartKey3 --upload-id 0195cf37-4691-7fd4-a92a-c72b8dc590dd-114225201881874481 --multipart-upload 'Parts=[{ETag=fb9f1b33e6fa46c9035a38136bcab55d,PartNumber=1},{ETag=6f41c53c1f6ff560d62b1a28154b4e53,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:06.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:06.241" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-9150365207/multipartKey3",
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\""
}</msg>
<status status="PASS" starttime="20250325 21:31:05.743" endtime="20250325 21:31:06.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:06.242" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-9150365207/multipartKey3",
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\""
}</msg>
<status status="PASS" starttime="20250325 21:31:06.242" endtime="20250325 21:31:06.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:06.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:06.243" endtime="20250325 21:31:06.243"/>
</kw>
<msg timestamp="20250325 21:31:06.243" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-9150365207/multipartKey3",
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\""
}</msg>
<status status="PASS" starttime="20250325 21:31:05.743" endtime="20250325 21:31:06.243"/>
</kw>
<msg timestamp="20250325 21:31:06.243" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-9150365207/multipartKey3",
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\""
}</msg>
<status status="PASS" starttime="20250325 21:31:05.742" endtime="20250325 21:31:06.244"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:06.244" endtime="20250325 21:31:06.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:06.244" endtime="20250325 21:31:06.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:06.245" endtime="20250325 21:31:06.245"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:06.249" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-9150365207/multipartKey3",
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:06.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:06.255" level="INFO">${output} = "72c5a1fed2d969d91b3dd9179b7993c2-3"</msg>
<status status="PASS" starttime="20250325 21:31:06.246" endtime="20250325 21:31:06.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:06.256" level="INFO">"72c5a1fed2d969d91b3dd9179b7993c2-3"</msg>
<status status="PASS" starttime="20250325 21:31:06.255" endtime="20250325 21:31:06.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:06.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:06.256" endtime="20250325 21:31:06.257"/>
</kw>
<status status="PASS" starttime="20250325 21:31:06.246" endtime="20250325 21:31:06.257"/>
</kw>
<msg timestamp="20250325 21:31:06.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:06.246" endtime="20250325 21:31:06.257"/>
</kw>
<msg timestamp="20250325 21:31:06.257" level="INFO">${etag} = "72c5a1fed2d969d91b3dd9179b7993c2-3"</msg>
<status status="PASS" starttime="20250325 21:31:06.245" endtime="20250325 21:31:06.257"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:31:06.257" endtime="20250325 21:31:06.257"/>
</return>
<status status="PASS" starttime="20250325 21:31:06.244" endtime="20250325 21:31:06.257"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:06.258" endtime="20250325 21:31:06.258"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:06.258" endtime="20250325 21:31:06.258"/>
</branch>
<status status="PASS" starttime="20250325 21:31:06.244" endtime="20250325 21:31:06.258"/>
</if>
<msg timestamp="20250325 21:31:06.258" level="INFO">${result} = "72c5a1fed2d969d91b3dd9179b7993c2-3"</msg>
<status status="PASS" starttime="20250325 21:31:05.742" endtime="20250325 21:31:06.258"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:06.262" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9150365207/multipartKey3 /tmp/ozone-test-9150365207-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:07.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:07.462" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:06 GMT",
    "ContentLength": 6291456,
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:31:06.260" endtime="20250325 21:31:07.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:07.463" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:06 GMT",
    "ContentLength": 6291456,
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:31:06 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Tue, 25 Mar 2025 21:31:06 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:31:07.462" endtime="20250325 21:31:07.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:07.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:07.463" endtime="20250325 21:31:07.464"/>
</kw>
<status status="PASS" starttime="20250325 21:31:06.259" endtime="20250325 21:31:07.464"/>
</kw>
<msg timestamp="20250325 21:31:07.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:06.259" endtime="20250325 21:31:07.464"/>
</kw>
<msg timestamp="20250325 21:31:07.464" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:06 GMT",
    "ContentLength": 6291456,
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:31:06.259" endtime="20250325 21:31:07.464"/>
</kw>
<msg timestamp="20250325 21:31:07.464" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:06 GMT",
    "ContentLength": 6291456,
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:31:06.258" endtime="20250325 21:31:07.464"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:07.468" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-9150365207-multipartKey3'.</msg>
<msg timestamp="20250325 21:31:07.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:07.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:07.465" endtime="20250325 21:31:07.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:07.478" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:07.478" endtime="20250325 21:31:07.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:07.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:07.479" endtime="20250325 21:31:07.479"/>
</kw>
<status status="PASS" starttime="20250325 21:31:07.465" endtime="20250325 21:31:07.479"/>
</kw>
<msg timestamp="20250325 21:31:07.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:07.465" endtime="20250325 21:31:07.479"/>
</kw>
<status status="PASS" starttime="20250325 21:31:07.464" endtime="20250325 21:31:07.479"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:07.483" level="INFO">Running command 'md5sum /tmp/ozone-test-9150365207-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:07.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:07.498" level="INFO">${output} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:31:07.481" endtime="20250325 21:31:07.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:07.500" level="INFO">56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:31:07.499" endtime="20250325 21:31:07.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:07.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:07.500" endtime="20250325 21:31:07.500"/>
</kw>
<status status="PASS" starttime="20250325 21:31:07.480" endtime="20250325 21:31:07.501"/>
</kw>
<msg timestamp="20250325 21:31:07.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:07.480" endtime="20250325 21:31:07.501"/>
</kw>
<msg timestamp="20250325 21:31:07.501" level="INFO">${checksumbefore} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:31:07.480" endtime="20250325 21:31:07.501"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:07.505" level="INFO">Running command 'md5sum /tmp/ozone-test-9150365207-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:07.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:07.520" level="INFO">${output} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:31:07.502" endtime="20250325 21:31:07.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:07.521" level="INFO">56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:31:07.520" endtime="20250325 21:31:07.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:07.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:07.521" endtime="20250325 21:31:07.521"/>
</kw>
<status status="PASS" starttime="20250325 21:31:07.502" endtime="20250325 21:31:07.522"/>
</kw>
<msg timestamp="20250325 21:31:07.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:07.502" endtime="20250325 21:31:07.522"/>
</kw>
<msg timestamp="20250325 21:31:07.522" level="INFO">${checksumafter} = 56e576866617228b17d469ae86463010</msg>
<status status="PASS" starttime="20250325 21:31:07.501" endtime="20250325 21:31:07.522"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:07.522" endtime="20250325 21:31:07.522"/>
</kw>
<status status="PASS" starttime="20250325 21:31:07.479" endtime="20250325 21:31:07.522"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 /tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:07.526" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9150365207/multipartKey3 --part-number 1 /tmp/ozone-test-9150365207-multipartKey3-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:08.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:08.502" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:06 GMT",
    "ContentLength": 5243904,
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:31:07.524" endtime="20250325 21:31:08.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:08.503" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:06 GMT",
    "ContentLength": 5243904,
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:31:07 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Tue, 25 Mar 2025 21:31:07 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:31:08.502" endtime="20250325 21:31:08.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:08.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:08.503" endtime="20250325 21:31:08.503"/>
</kw>
<status status="PASS" starttime="20250325 21:31:07.523" endtime="20250325 21:31:08.504"/>
</kw>
<msg timestamp="20250325 21:31:08.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:07.523" endtime="20250325 21:31:08.504"/>
</kw>
<msg timestamp="20250325 21:31:08.504" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:06 GMT",
    "ContentLength": 5243904,
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:31:07.523" endtime="20250325 21:31:08.504"/>
</kw>
<msg timestamp="20250325 21:31:08.504" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:06 GMT",
    "ContentLength": 5243904,
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:31:07.522" endtime="20250325 21:31:08.504"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:08.508" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:08.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:08.520" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:08.505" endtime="20250325 21:31:08.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:08.521" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:08.521" endtime="20250325 21:31:08.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:08.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:08.521" endtime="20250325 21:31:08.522"/>
</kw>
<status status="PASS" starttime="20250325 21:31:08.505" endtime="20250325 21:31:08.522"/>
</kw>
<msg timestamp="20250325 21:31:08.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:08.505" endtime="20250325 21:31:08.522"/>
</kw>
<msg timestamp="20250325 21:31:08.522" level="INFO">${checksumbefore} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:08.505" endtime="20250325 21:31:08.522"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:08.525" level="INFO">Running command 'md5sum /tmp/ozone-test-9150365207-multipartKey3-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:08.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:08.537" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:08.523" endtime="20250325 21:31:08.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:08.538" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:08.538" endtime="20250325 21:31:08.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:08.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:08.538" endtime="20250325 21:31:08.539"/>
</kw>
<status status="PASS" starttime="20250325 21:31:08.523" endtime="20250325 21:31:08.539"/>
</kw>
<msg timestamp="20250325 21:31:08.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:08.523" endtime="20250325 21:31:08.539"/>
</kw>
<msg timestamp="20250325 21:31:08.539" level="INFO">${checksumafter} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:08.522" endtime="20250325 21:31:08.539"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:08.539" endtime="20250325 21:31:08.539"/>
</kw>
<status status="PASS" starttime="20250325 21:31:08.504" endtime="20250325 21:31:08.539"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 /tmp/${PREFIX}-multipartKey3-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:08.543" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-9150365207/multipartKey3 --part-number 3 /tmp/ozone-test-9150365207-multipartKey3-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:09.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:09.191" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:06 GMT",
    "ContentLength": 1047552,
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:31:08.541" endtime="20250325 21:31:09.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:09.192" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:06 GMT",
    "ContentLength": 1047552,
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:31:08 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Tue, 25 Mar 2025 21:31:08 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:31:09.191" endtime="20250325 21:31:09.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:09.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:09.192" endtime="20250325 21:31:09.192"/>
</kw>
<status status="PASS" starttime="20250325 21:31:08.540" endtime="20250325 21:31:09.192"/>
</kw>
<msg timestamp="20250325 21:31:09.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:08.540" endtime="20250325 21:31:09.192"/>
</kw>
<msg timestamp="20250325 21:31:09.193" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:06 GMT",
    "ContentLength": 1047552,
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:31:08.540" endtime="20250325 21:31:09.193"/>
</kw>
<msg timestamp="20250325 21:31:09.193" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:06 GMT",
    "ContentLength": 1047552,
    "ETag": "\"72c5a1fed2d969d91b3dd9179b7993c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:31:08.540" endtime="20250325 21:31:09.193"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:09.197" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:09.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:09.203" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:09.195" endtime="20250325 21:31:09.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:09.204" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:09.204" endtime="20250325 21:31:09.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:09.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:09.204" endtime="20250325 21:31:09.205"/>
</kw>
<status status="PASS" starttime="20250325 21:31:09.194" endtime="20250325 21:31:09.205"/>
</kw>
<msg timestamp="20250325 21:31:09.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:09.194" endtime="20250325 21:31:09.205"/>
</kw>
<msg timestamp="20250325 21:31:09.205" level="INFO">${checksumbefore} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:09.193" endtime="20250325 21:31:09.205"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:09.208" level="INFO">Running command 'md5sum /tmp/ozone-test-9150365207-multipartKey3-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:09.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:09.214" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:09.206" endtime="20250325 21:31:09.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:09.214" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:09.214" endtime="20250325 21:31:09.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:09.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:09.215" endtime="20250325 21:31:09.215"/>
</kw>
<status status="PASS" starttime="20250325 21:31:09.206" endtime="20250325 21:31:09.215"/>
</kw>
<msg timestamp="20250325 21:31:09.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:09.205" endtime="20250325 21:31:09.215"/>
</kw>
<msg timestamp="20250325 21:31:09.215" level="INFO">${checksumafter} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:09.205" endtime="20250325 21:31:09.215"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:09.215" endtime="20250325 21:31:09.216"/>
</kw>
<status status="PASS" starttime="20250325 21:31:09.193" endtime="20250325 21:31:09.216"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:31:00.652" endtime="20250325 21:31:09.216"/>
</test>
<test id="s1-s3-s8-t8" name="Test abort Multipart upload" line="186">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:31:09.218" level="INFO">${randStr} = 6755345368</msg>
<status status="PASS" starttime="20250325 21:31:09.217" endtime="20250325 21:31:09.218"/>
</kw>
<msg timestamp="20250325 21:31:09.218" level="INFO">${random} = ozone-test-6755345368</msg>
<status status="PASS" starttime="20250325 21:31:09.217" endtime="20250325 21:31:09.218"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:31:09.218" level="INFO">${PREFIX} = ozone-test-6755345368</msg>
<status status="PASS" starttime="20250325 21:31:09.218" endtime="20250325 21:31:09.218"/>
</kw>
<status status="PASS" starttime="20250325 21:31:09.217" endtime="20250325 21:31:09.218"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey4</arg>
<arg>0</arg>
<arg>--storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:09.222" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-6755345368/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:09.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:09.693" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6755345368/multipartKey4",
    "UploadId": "0195cf37-67ca-75ea-9483-bf16cb796162-114225202439258165"
}</msg>
<status status="PASS" starttime="20250325 21:31:09.220" endtime="20250325 21:31:09.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:09.694" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-6755345368/multipartKey4",
    "UploadId": "0195cf37-67ca-75ea-9483-bf16cb796162-114225202439258165"
}</msg>
<status status="PASS" starttime="20250325 21:31:09.694" endtime="20250325 21:31:09.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:09.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:09.695" endtime="20250325 21:31:09.695"/>
</kw>
<msg timestamp="20250325 21:31:09.695" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6755345368/multipartKey4",
    "UploadId": "0195cf37-67ca-75ea-9483-bf16cb796162-114225202439258165"
}</msg>
<status status="PASS" starttime="20250325 21:31:09.220" endtime="20250325 21:31:09.695"/>
</kw>
<msg timestamp="20250325 21:31:09.695" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6755345368/multipartKey4",
    "UploadId": "0195cf37-67ca-75ea-9483-bf16cb796162-114225202439258165"
}</msg>
<status status="PASS" starttime="20250325 21:31:09.219" endtime="20250325 21:31:09.695"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:09.696" endtime="20250325 21:31:09.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:09.696" endtime="20250325 21:31:09.696"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:09.699" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-6755345368/multipartKey4",
    "UploadId": "0195cf37-67ca-75ea-9483-bf16cb796162-114225202439258165"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:09.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:09.704" level="INFO">${output} = 0195cf37-67ca-75ea-9483-bf16cb796162-114225202439258165</msg>
<status status="PASS" starttime="20250325 21:31:09.697" endtime="20250325 21:31:09.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:09.705" level="INFO">0195cf37-67ca-75ea-9483-bf16cb796162-114225202439258165</msg>
<status status="PASS" starttime="20250325 21:31:09.704" endtime="20250325 21:31:09.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:09.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:09.705" endtime="20250325 21:31:09.705"/>
</kw>
<msg timestamp="20250325 21:31:09.705" level="INFO">${upload_id} = 0195cf37-67ca-75ea-9483-bf16cb796162-114225202439258165</msg>
<status status="PASS" starttime="20250325 21:31:09.696" endtime="20250325 21:31:09.705"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:09.705" endtime="20250325 21:31:09.706"/>
</return>
<status status="PASS" starttime="20250325 21:31:09.696" endtime="20250325 21:31:09.706"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:09.706" endtime="20250325 21:31:09.706"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:09.706" endtime="20250325 21:31:09.706"/>
</branch>
<status status="PASS" starttime="20250325 21:31:09.696" endtime="20250325 21:31:09.706"/>
</if>
<msg timestamp="20250325 21:31:09.706" level="INFO">${uploadID} = 0195cf37-67ca-75ea-9483-bf16cb796162-114225202439258165</msg>
<status status="PASS" starttime="20250325 21:31:09.219" endtime="20250325 21:31:09.706"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey4</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:09.709" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-6755345368/multipartKey4 --upload-id 0195cf37-67ca-75ea-9483-bf16cb796162-114225202439258165 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:10.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:10.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:09.707" endtime="20250325 21:31:10.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:10.188" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:10.188" endtime="20250325 21:31:10.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:10.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:10.188" endtime="20250325 21:31:10.189"/>
</kw>
<msg timestamp="20250325 21:31:10.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:09.707" endtime="20250325 21:31:10.189"/>
</kw>
<msg timestamp="20250325 21:31:10.189" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:09.706" endtime="20250325 21:31:10.189"/>
</kw>
<msg timestamp="20250325 21:31:10.189" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250325 21:31:09.706" endtime="20250325 21:31:10.189"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:31:09.216" endtime="20250325 21:31:10.189"/>
</test>
<test id="s1-s3-s8-t9" name="Test abort Multipart upload with invalid uploadId" line="190">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:31:10.191" level="INFO">${randStr} = 6230970459</msg>
<status status="PASS" starttime="20250325 21:31:10.191" endtime="20250325 21:31:10.191"/>
</kw>
<msg timestamp="20250325 21:31:10.191" level="INFO">${random} = ozone-test-6230970459</msg>
<status status="PASS" starttime="20250325 21:31:10.190" endtime="20250325 21:31:10.191"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:31:10.191" level="INFO">${PREFIX} = ozone-test-6230970459</msg>
<status status="PASS" starttime="20250325 21:31:10.191" endtime="20250325 21:31:10.191"/>
</kw>
<status status="PASS" starttime="20250325 21:31:10.190" endtime="20250325 21:31:10.191"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>"random"</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:10.195" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-6230970459/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:10.665" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:31:10.665" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250325 21:31:10.193" endtime="20250325 21:31:10.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:10.666" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20250325 21:31:10.666" endtime="20250325 21:31:10.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:10.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:10.666" endtime="20250325 21:31:10.667"/>
</kw>
<msg timestamp="20250325 21:31:10.667" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250325 21:31:10.192" endtime="20250325 21:31:10.667"/>
</kw>
<msg timestamp="20250325 21:31:10.667" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250325 21:31:10.192" endtime="20250325 21:31:10.667"/>
</kw>
<msg timestamp="20250325 21:31:10.667" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250325 21:31:10.192" endtime="20250325 21:31:10.667"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:31:10.190" endtime="20250325 21:31:10.667"/>
</test>
<test id="s1-s3-s8-t10" name="Upload part with Incorrect uploadID" line="193">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:31:10.669" level="INFO">${randStr} = 2396464518</msg>
<status status="PASS" starttime="20250325 21:31:10.669" endtime="20250325 21:31:10.669"/>
</kw>
<msg timestamp="20250325 21:31:10.669" level="INFO">${random} = ozone-test-2396464518</msg>
<status status="PASS" starttime="20250325 21:31:10.669" endtime="20250325 21:31:10.669"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:31:10.670" level="INFO">${PREFIX} = ozone-test-2396464518</msg>
<status status="PASS" starttime="20250325 21:31:10.669" endtime="20250325 21:31:10.670"/>
</kw>
<status status="PASS" starttime="20250325 21:31:10.668" endtime="20250325 21:31:10.670"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:10.673" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2396464518/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:11.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:11.160" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2396464518/multipartKey",
    "UploadId": "0195cf37-6d7d-7c1a-997e-94b51b114095-114225202534875190"
}</msg>
<status status="PASS" starttime="20250325 21:31:10.671" endtime="20250325 21:31:11.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:11.161" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2396464518/multipartKey",
    "UploadId": "0195cf37-6d7d-7c1a-997e-94b51b114095-114225202534875190"
}</msg>
<status status="PASS" starttime="20250325 21:31:11.161" endtime="20250325 21:31:11.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:11.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:11.162" endtime="20250325 21:31:11.162"/>
</kw>
<msg timestamp="20250325 21:31:11.162" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2396464518/multipartKey",
    "UploadId": "0195cf37-6d7d-7c1a-997e-94b51b114095-114225202534875190"
}</msg>
<status status="PASS" starttime="20250325 21:31:10.671" endtime="20250325 21:31:11.162"/>
</kw>
<msg timestamp="20250325 21:31:11.162" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2396464518/multipartKey",
    "UploadId": "0195cf37-6d7d-7c1a-997e-94b51b114095-114225202534875190"
}</msg>
<status status="PASS" starttime="20250325 21:31:10.671" endtime="20250325 21:31:11.162"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:11.163" endtime="20250325 21:31:11.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:11.163" endtime="20250325 21:31:11.163"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:11.166" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2396464518/multipartKey",
    "UploadId": "0195cf37-6d7d-7c1a-997e-94b51b114095-114225202534875190"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:11.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:11.171" level="INFO">${output} = 0195cf37-6d7d-7c1a-997e-94b51b114095-114225202534875190</msg>
<status status="PASS" starttime="20250325 21:31:11.164" endtime="20250325 21:31:11.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:11.172" level="INFO">0195cf37-6d7d-7c1a-997e-94b51b114095-114225202534875190</msg>
<status status="PASS" starttime="20250325 21:31:11.171" endtime="20250325 21:31:11.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:11.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:11.172" endtime="20250325 21:31:11.172"/>
</kw>
<msg timestamp="20250325 21:31:11.172" level="INFO">${upload_id} = 0195cf37-6d7d-7c1a-997e-94b51b114095-114225202534875190</msg>
<status status="PASS" starttime="20250325 21:31:11.163" endtime="20250325 21:31:11.172"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:11.172" endtime="20250325 21:31:11.173"/>
</return>
<status status="PASS" starttime="20250325 21:31:11.162" endtime="20250325 21:31:11.173"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:11.173" endtime="20250325 21:31:11.173"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:11.173" endtime="20250325 21:31:11.173"/>
</branch>
<status status="PASS" starttime="20250325 21:31:11.162" endtime="20250325 21:31:11.173"/>
</if>
<msg timestamp="20250325 21:31:11.173" level="INFO">${uploadID} = 0195cf37-6d7d-7c1a-997e-94b51b114095-114225202534875190</msg>
<status status="PASS" starttime="20250325 21:31:10.670" endtime="20250325 21:31:11.173"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>"no-such-upload-id"</arg>
<arg>1</arg>
<arg>/tmp/10kb</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:11.176" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-2396464518/multipartKey --part-number 1 --body /tmp/10kb --upload-id "no-such-upload-id" 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:11.646" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:31:11.646" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250325 21:31:11.175" endtime="20250325 21:31:11.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:11.647" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20250325 21:31:11.646" endtime="20250325 21:31:11.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:11.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:11.647" endtime="20250325 21:31:11.647"/>
</kw>
<msg timestamp="20250325 21:31:11.647" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250325 21:31:11.174" endtime="20250325 21:31:11.647"/>
</kw>
<msg timestamp="20250325 21:31:11.647" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250325 21:31:11.173" endtime="20250325 21:31:11.648"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250325 21:31:11.648" endtime="20250325 21:31:11.648"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250325 21:31:11.648" endtime="20250325 21:31:11.648"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<status status="NOT RUN" starttime="20250325 21:31:11.648" endtime="20250325 21:31:11.648"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20250325 21:31:11.648" endtime="20250325 21:31:11.648"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250325 21:31:11.648" endtime="20250325 21:31:11.648"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:11.648" endtime="20250325 21:31:11.648"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250325 21:31:11.648" endtime="20250325 21:31:11.649"/>
</return>
<status status="PASS" starttime="20250325 21:31:11.648" endtime="20250325 21:31:11.649"/>
</branch>
<status status="PASS" starttime="20250325 21:31:11.648" endtime="20250325 21:31:11.649"/>
</if>
<msg timestamp="20250325 21:31:11.649" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250325 21:31:11.173" endtime="20250325 21:31:11.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:11.649" endtime="20250325 21:31:11.649"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:31:10.668" endtime="20250325 21:31:11.649"/>
</test>
<test id="s1-s3-s8-t11" name="Test list parts" line="198">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:31:11.651" level="INFO">${randStr} = 3430099344</msg>
<status status="PASS" starttime="20250325 21:31:11.651" endtime="20250325 21:31:11.651"/>
</kw>
<msg timestamp="20250325 21:31:11.651" level="INFO">${random} = ozone-test-3430099344</msg>
<status status="PASS" starttime="20250325 21:31:11.651" endtime="20250325 21:31:11.651"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:31:11.652" level="INFO">${PREFIX} = ozone-test-3430099344</msg>
<status status="PASS" starttime="20250325 21:31:11.651" endtime="20250325 21:31:11.652"/>
</kw>
<status status="PASS" starttime="20250325 21:31:11.650" endtime="20250325 21:31:11.652"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:11.656" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-3430099344/multipartKey5  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:12.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:12.129" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-3430099344/multipartKey5",
    "UploadId": "0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864"
}</msg>
<status status="PASS" starttime="20250325 21:31:11.654" endtime="20250325 21:31:12.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:12.130" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-3430099344/multipartKey5",
    "UploadId": "0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864"
}</msg>
<status status="PASS" starttime="20250325 21:31:12.130" endtime="20250325 21:31:12.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:12.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:12.130" endtime="20250325 21:31:12.131"/>
</kw>
<msg timestamp="20250325 21:31:12.131" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-3430099344/multipartKey5",
    "UploadId": "0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864"
}</msg>
<status status="PASS" starttime="20250325 21:31:11.653" endtime="20250325 21:31:12.131"/>
</kw>
<msg timestamp="20250325 21:31:12.131" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-3430099344/multipartKey5",
    "UploadId": "0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864"
}</msg>
<status status="PASS" starttime="20250325 21:31:11.653" endtime="20250325 21:31:12.131"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:12.131" endtime="20250325 21:31:12.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:12.132" endtime="20250325 21:31:12.132"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:12.135" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-3430099344/multipartKey5",
    "UploadId": "0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:12.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:12.140" level="INFO">${output} = 0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864</msg>
<status status="PASS" starttime="20250325 21:31:12.132" endtime="20250325 21:31:12.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:12.140" level="INFO">0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864</msg>
<status status="PASS" starttime="20250325 21:31:12.140" endtime="20250325 21:31:12.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:12.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:12.140" endtime="20250325 21:31:12.141"/>
</kw>
<msg timestamp="20250325 21:31:12.141" level="INFO">${upload_id} = 0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864</msg>
<status status="PASS" starttime="20250325 21:31:12.132" endtime="20250325 21:31:12.141"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:12.141" endtime="20250325 21:31:12.141"/>
</return>
<status status="PASS" starttime="20250325 21:31:12.131" endtime="20250325 21:31:12.141"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:12.141" endtime="20250325 21:31:12.141"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:12.141" endtime="20250325 21:31:12.141"/>
</branch>
<status status="PASS" starttime="20250325 21:31:12.131" endtime="20250325 21:31:12.141"/>
</if>
<msg timestamp="20250325 21:31:12.142" level="INFO">${uploadID} = 0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864</msg>
<status status="PASS" starttime="20250325 21:31:11.652" endtime="20250325 21:31:12.142"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:12.145" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-3430099344/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:12.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:12.808" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:31:12.143" endtime="20250325 21:31:12.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:12.809" level="INFO">{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:31:12.808" endtime="20250325 21:31:12.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:12.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:12.809" endtime="20250325 21:31:12.809"/>
</kw>
<msg timestamp="20250325 21:31:12.810" level="INFO">${output} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:31:12.143" endtime="20250325 21:31:12.810"/>
</kw>
<msg timestamp="20250325 21:31:12.810" level="INFO">${result} = {
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}</msg>
<status status="PASS" starttime="20250325 21:31:12.142" endtime="20250325 21:31:12.810"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:12.810" endtime="20250325 21:31:12.810"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:12.814" level="INFO">Running command 'echo '{
    "ETag": "fb9f1b33e6fa46c9035a38136bcab55d"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:12.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:12.819" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:12.811" endtime="20250325 21:31:12.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:12.819" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:12.819" endtime="20250325 21:31:12.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:12.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:12.820" endtime="20250325 21:31:12.820"/>
</kw>
<status status="PASS" starttime="20250325 21:31:12.811" endtime="20250325 21:31:12.820"/>
</kw>
<msg timestamp="20250325 21:31:12.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:12.811" endtime="20250325 21:31:12.820"/>
</kw>
<msg timestamp="20250325 21:31:12.820" level="INFO">${etag} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:12.810" endtime="20250325 21:31:12.820"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:12.823" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:12.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:12.836" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:12.821" endtime="20250325 21:31:12.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:12.836" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:12.836" endtime="20250325 21:31:12.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:12.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:12.837" endtime="20250325 21:31:12.837"/>
</kw>
<status status="PASS" starttime="20250325 21:31:12.821" endtime="20250325 21:31:12.837"/>
</kw>
<msg timestamp="20250325 21:31:12.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:12.821" endtime="20250325 21:31:12.837"/>
</kw>
<msg timestamp="20250325 21:31:12.837" level="INFO">${md5sum} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:12.820" endtime="20250325 21:31:12.837"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:31:12.837" endtime="20250325 21:31:12.838"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:31:12.838" endtime="20250325 21:31:12.838"/>
</return>
<status status="PASS" starttime="20250325 21:31:12.810" endtime="20250325 21:31:12.838"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:12.838" endtime="20250325 21:31:12.838"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:12.838" endtime="20250325 21:31:12.838"/>
</branch>
<status status="PASS" starttime="20250325 21:31:12.810" endtime="20250325 21:31:12.838"/>
</if>
<msg timestamp="20250325 21:31:12.838" level="INFO">${eTag1} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:12.142" endtime="20250325 21:31:12.838"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:12.841" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-3430099344/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id 0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:13.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:13.369" level="INFO">${output} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:31:12.840" endtime="20250325 21:31:13.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:13.370" level="INFO">{
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:31:13.370" endtime="20250325 21:31:13.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:13.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:13.370" endtime="20250325 21:31:13.371"/>
</kw>
<msg timestamp="20250325 21:31:13.371" level="INFO">${output} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:31:12.839" endtime="20250325 21:31:13.371"/>
</kw>
<msg timestamp="20250325 21:31:13.371" level="INFO">${result} = {
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}</msg>
<status status="PASS" starttime="20250325 21:31:12.839" endtime="20250325 21:31:13.371"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:13.371" endtime="20250325 21:31:13.372"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:13.375" level="INFO">Running command 'echo '{
    "ETag": "6f41c53c1f6ff560d62b1a28154b4e53"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:13.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:13.380" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:13.373" endtime="20250325 21:31:13.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:13.381" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:13.380" endtime="20250325 21:31:13.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:13.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:13.381" endtime="20250325 21:31:13.381"/>
</kw>
<status status="PASS" starttime="20250325 21:31:13.372" endtime="20250325 21:31:13.382"/>
</kw>
<msg timestamp="20250325 21:31:13.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:13.372" endtime="20250325 21:31:13.382"/>
</kw>
<msg timestamp="20250325 21:31:13.382" level="INFO">${etag} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:13.372" endtime="20250325 21:31:13.382"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:13.385" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:13.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:13.390" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:13.383" endtime="20250325 21:31:13.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:13.391" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:13.390" endtime="20250325 21:31:13.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:13.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:13.391" endtime="20250325 21:31:13.391"/>
</kw>
<status status="PASS" starttime="20250325 21:31:13.382" endtime="20250325 21:31:13.391"/>
</kw>
<msg timestamp="20250325 21:31:13.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:13.382" endtime="20250325 21:31:13.392"/>
</kw>
<msg timestamp="20250325 21:31:13.392" level="INFO">${md5sum} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:13.382" endtime="20250325 21:31:13.392"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:31:13.392" endtime="20250325 21:31:13.392"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:31:13.392" endtime="20250325 21:31:13.392"/>
</return>
<status status="PASS" starttime="20250325 21:31:13.371" endtime="20250325 21:31:13.392"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:13.392" endtime="20250325 21:31:13.392"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:13.392" endtime="20250325 21:31:13.392"/>
</branch>
<status status="PASS" starttime="20250325 21:31:13.371" endtime="20250325 21:31:13.392"/>
</if>
<msg timestamp="20250325 21:31:13.393" level="INFO">${eTag2} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:12.838" endtime="20250325 21:31:13.393"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:13.396" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-3430099344/multipartKey5 --upload-id 0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:13.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:13.880" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-03-25T21:31:12.739Z",
            "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250325 21:31:13.394" endtime="20250325 21:31:13.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:13.881" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-03-25T21:31:12.739Z",
            "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-03-25T21:31:13.318Z",
            "ETag": "6f41c53c1f6ff560d62b1a28154b4e53",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20250325 21:31:13.880" endtime="20250325 21:31:13.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:13.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:13.881" endtime="20250325 21:31:13.881"/>
</kw>
<status status="PASS" starttime="20250325 21:31:13.393" endtime="20250325 21:31:13.881"/>
</kw>
<msg timestamp="20250325 21:31:13.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:13.393" endtime="20250325 21:31:13.882"/>
</kw>
<msg timestamp="20250325 21:31:13.882" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-03-25T21:31:12.739Z",
            "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250325 21:31:13.393" endtime="20250325 21:31:13.882"/>
</kw>
<msg timestamp="20250325 21:31:13.882" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-03-25T21:31:12.739Z",
            "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250325 21:31:13.393" endtime="20250325 21:31:13.882"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:13.885" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-03-25T21:31:12.739Z",
            "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-03-25T21:31:13.318Z",
            "ETag": "6f41c53c1f6ff560d62b1a28154b4e53",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:13.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:13.890" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:13.882" endtime="20250325 21:31:13.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:13.891" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:13.890" endtime="20250325 21:31:13.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:13.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:13.891" endtime="20250325 21:31:13.891"/>
</kw>
<msg timestamp="20250325 21:31:13.891" level="INFO">${part1} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:13.882" endtime="20250325 21:31:13.891"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:13.894" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-03-25T21:31:12.739Z",
            "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-03-25T21:31:13.318Z",
            "ETag": "6f41c53c1f6ff560d62b1a28154b4e53",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:13.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:13.899" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:13.892" endtime="20250325 21:31:13.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:13.899" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:13.899" endtime="20250325 21:31:13.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:13.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:13.900" endtime="20250325 21:31:13.900"/>
</kw>
<msg timestamp="20250325 21:31:13.900" level="INFO">${part2} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:13.891" endtime="20250325 21:31:13.900"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:13.900" endtime="20250325 21:31:13.900"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:13.901" endtime="20250325 21:31:13.901"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:13.901" endtime="20250325 21:31:13.901"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:13.905" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-3430099344/multipartKey5 --upload-id 0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:14.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:14.384" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-03-25T21:31:12.739Z",
            "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250325 21:31:13.903" endtime="20250325 21:31:14.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:14.385" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-03-25T21:31:12.739Z",
            "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20250325 21:31:14.384" endtime="20250325 21:31:14.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:14.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:14.385" endtime="20250325 21:31:14.385"/>
</kw>
<status status="PASS" starttime="20250325 21:31:13.902" endtime="20250325 21:31:14.385"/>
</kw>
<msg timestamp="20250325 21:31:14.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:13.902" endtime="20250325 21:31:14.385"/>
</kw>
<msg timestamp="20250325 21:31:14.385" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-03-25T21:31:12.739Z",
            "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250325 21:31:13.902" endtime="20250325 21:31:14.385"/>
</kw>
<msg timestamp="20250325 21:31:14.386" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-03-25T21:31:12.739Z",
            "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250325 21:31:13.901" endtime="20250325 21:31:14.386"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:14.388" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-03-25T21:31:12.739Z",
            "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:14.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:14.393" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:14.386" endtime="20250325 21:31:14.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:14.394" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:14.394" endtime="20250325 21:31:14.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:14.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:14.394" endtime="20250325 21:31:14.395"/>
</kw>
<msg timestamp="20250325 21:31:14.395" level="INFO">${part1} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:14.386" endtime="20250325 21:31:14.395"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:14.397" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-03-25T21:31:12.739Z",
            "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:14.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:14.402" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250325 21:31:14.395" endtime="20250325 21:31:14.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:14.403" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250325 21:31:14.403" endtime="20250325 21:31:14.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:14.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:14.403" endtime="20250325 21:31:14.403"/>
</kw>
<msg timestamp="20250325 21:31:14.404" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250325 21:31:14.395" endtime="20250325 21:31:14.404"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:14.404" endtime="20250325 21:31:14.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:14.404" endtime="20250325 21:31:14.404"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:14.407" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-3430099344/multipartKey5 --upload-id 0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:14.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:14.893" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-03-25T21:31:13.318Z",
            "ETag": "6f41c53c1f6ff560d62b1a28154b4e53",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250325 21:31:14.406" endtime="20250325 21:31:14.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:14.894" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-03-25T21:31:13.318Z",
            "ETag": "6f41c53c1f6ff560d62b1a28154b4e53",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20250325 21:31:14.893" endtime="20250325 21:31:14.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:14.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:14.894" endtime="20250325 21:31:14.894"/>
</kw>
<status status="PASS" starttime="20250325 21:31:14.405" endtime="20250325 21:31:14.894"/>
</kw>
<msg timestamp="20250325 21:31:14.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:14.405" endtime="20250325 21:31:14.895"/>
</kw>
<msg timestamp="20250325 21:31:14.895" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-03-25T21:31:13.318Z",
            "ETag": "6f41c53c1f6ff560d62b1a28154b4e53",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250325 21:31:14.405" endtime="20250325 21:31:14.895"/>
</kw>
<msg timestamp="20250325 21:31:14.895" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-03-25T21:31:13.318Z",
            "ETag": "6f41c53c1f6ff560d62b1a28154b4e53",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250325 21:31:14.404" endtime="20250325 21:31:14.895"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:14.898" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-03-25T21:31:13.318Z",
            "ETag": "6f41c53c1f6ff560d62b1a28154b4e53",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:14.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:14.903" level="INFO">${output} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:14.895" endtime="20250325 21:31:14.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:14.904" level="INFO">6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:14.904" endtime="20250325 21:31:14.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:14.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:14.904" endtime="20250325 21:31:14.905"/>
</kw>
<msg timestamp="20250325 21:31:14.905" level="INFO">${part2} = 6f41c53c1f6ff560d62b1a28154b4e53</msg>
<status status="PASS" starttime="20250325 21:31:14.895" endtime="20250325 21:31:14.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:14.905" endtime="20250325 21:31:14.905"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:14.905" endtime="20250325 21:31:14.906"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:14.909" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-3430099344/multipartKey5 --upload-id 0195cf37-714e-775f-a36a-db6a7ca2ed5c-114225202598903864 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:15.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:15.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:14.907" endtime="20250325 21:31:15.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:15.384" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:15.383" endtime="20250325 21:31:15.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:15.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:15.384" endtime="20250325 21:31:15.384"/>
</kw>
<msg timestamp="20250325 21:31:15.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:14.907" endtime="20250325 21:31:15.385"/>
</kw>
<msg timestamp="20250325 21:31:15.385" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:14.906" endtime="20250325 21:31:15.385"/>
</kw>
<msg timestamp="20250325 21:31:15.385" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250325 21:31:14.906" endtime="20250325 21:31:15.385"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:31:11.650" endtime="20250325 21:31:15.385"/>
</test>
<test id="s1-s3-s8-t12" name="Test Multipart Upload with the simplified aws s3 cp API" line="229">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:31:15.387" level="INFO">${randStr} = 6825331000</msg>
<status status="PASS" starttime="20250325 21:31:15.386" endtime="20250325 21:31:15.387"/>
</kw>
<msg timestamp="20250325 21:31:15.387" level="INFO">${random} = ozone-test-6825331000</msg>
<status status="PASS" starttime="20250325 21:31:15.386" endtime="20250325 21:31:15.387"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:31:15.387" level="INFO">${PREFIX} = ozone-test-6825331000</msg>
<status status="PASS" starttime="20250325 21:31:15.387" endtime="20250325 21:31:15.387"/>
</kw>
<status status="PASS" starttime="20250325 21:31:15.386" endtime="20250325 21:31:15.387"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/22mb s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:15.391" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/22mb s3://encrypted/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:16.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:16.683" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.4 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250325 21:31:15.388" endtime="20250325 21:31:16.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:16.684" level="INFO">Completed 256.0 KiB/22.0 MiB (2.4 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (10.5 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/22.0 MiB (12.3 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (13.8 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (15.3 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (16.9 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (18.1 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (19.7 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (21.0 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (22.2 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (23.5 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (25.1 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (26.2 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (27.7 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (29.2 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (30.3 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (30.0 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (31.4 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (32.7 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (33.8 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (35.2 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (36.4 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (37.4 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (38.6 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (39.3 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (40.2 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (41.3 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (41.5 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (42.6 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (43.0 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (44.1 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (44.9 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (45.8 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (45.7 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (46.8 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (47.7 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (48.7 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (49.6 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (50.6 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (50.9 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (51.9 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (53.0 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (54.0 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (54.2 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (54.9 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (55.8 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (56.7 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (57.0 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (57.6 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (58.2 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (58.8 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (59.7 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (60.2 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (60.4 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (61.1 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (61.4 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (62.3 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (62.6 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (63.3 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (64.1 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (64.8 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (65.6 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (65.6 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (66.2 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (65.4 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (65.7 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (64.3 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (65.2 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (64.2 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (63.7 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (64.0 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (64.8 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (65.5 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (65.9 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (66.1 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (65.8 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (66.1 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (66.3 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (66.4 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (66.5 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (66.9 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (66.8 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (66.7 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (67.2 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (67.2 MiB/s) with 1 file(s) remaining
upload: ../../tmp/22mb to s3://encrypted/mpyawscli               </msg>
<status status="PASS" starttime="20250325 21:31:16.684" endtime="20250325 21:31:16.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:16.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:16.684" endtime="20250325 21:31:16.685"/>
</kw>
<status status="PASS" starttime="20250325 21:31:15.388" endtime="20250325 21:31:16.685"/>
</kw>
<msg timestamp="20250325 21:31:16.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:15.388" endtime="20250325 21:31:16.685"/>
</kw>
<msg timestamp="20250325 21:31:16.685" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.4 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250325 21:31:15.388" endtime="20250325 21:31:16.685"/>
</kw>
<status status="PASS" starttime="20250325 21:31:15.387" endtime="20250325 21:31:16.685"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/22mb.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:16.689" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://encrypted/mpyawscli /tmp/22mb.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:19.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:19.635" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (198.4 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (396.3 KiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (593.5 KiB/s) with 1 file(s) remain...</msg>
<status status="PASS" starttime="20250325 21:31:16.687" endtime="20250325 21:31:19.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:19.636" level="INFO">Completed 256.0 KiB/22.0 MiB (198.4 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (396.3 KiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (593.5 KiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (790.6 KiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (986.2 KiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (1.2 MiB/s) with 1 file(s) remaining    
Completed 1.8 MiB/22.0 MiB (1.3 MiB/s) with 1 file(s) remaining    
Completed 2.0 MiB/22.0 MiB (1.5 MiB/s) with 1 file(s) remaining    
Completed 2.2 MiB/22.0 MiB (1.7 MiB/s) with 1 file(s) remaining    
Completed 2.5 MiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remaining    
Completed 2.8 MiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remaining    
Completed 3.0 MiB/22.0 MiB (2.3 MiB/s) with 1 file(s) remaining    
Completed 3.2 MiB/22.0 MiB (2.5 MiB/s) with 1 file(s) remaining    
Completed 3.5 MiB/22.0 MiB (2.7 MiB/s) with 1 file(s) remaining    
Completed 3.8 MiB/22.0 MiB (2.8 MiB/s) with 1 file(s) remaining    
Completed 4.0 MiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining    
Completed 4.2 MiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining    
Completed 4.5 MiB/22.0 MiB (3.3 MiB/s) with 1 file(s) remaining    
Completed 4.8 MiB/22.0 MiB (3.4 MiB/s) with 1 file(s) remaining    
Completed 5.0 MiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining    
Completed 5.2 MiB/22.0 MiB (3.8 MiB/s) with 1 file(s) remaining    
Completed 5.5 MiB/22.0 MiB (4.0 MiB/s) with 1 file(s) remaining    
Completed 5.8 MiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining    
Completed 6.0 MiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining    
Completed 6.2 MiB/22.0 MiB (4.5 MiB/s) with 1 file(s) remaining    
Completed 6.5 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining    
Completed 6.8 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining    
Completed 7.0 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining    
Completed 7.2 MiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining    
Completed 7.5 MiB/22.0 MiB (5.4 MiB/s) with 1 file(s) remaining    
Completed 7.8 MiB/22.0 MiB (5.6 MiB/s) with 1 file(s) remaining    
Completed 8.0 MiB/22.0 MiB (5.7 MiB/s) with 1 file(s) remaining    
Completed 8.2 MiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining    
Completed 8.5 MiB/22.0 MiB (5.4 MiB/s) with 1 file(s) remaining    
Completed 8.8 MiB/22.0 MiB (5.6 MiB/s) with 1 file(s) remaining    
Completed 9.0 MiB/22.0 MiB (5.7 MiB/s) with 1 file(s) remaining    
Completed 9.2 MiB/22.0 MiB (5.9 MiB/s) with 1 file(s) remaining    
Completed 9.5 MiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining    
Completed 9.8 MiB/22.0 MiB (6.1 MiB/s) with 1 file(s) remaining    
Completed 10.0 MiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining   
Completed 10.2 MiB/22.0 MiB (6.5 MiB/s) with 1 file(s) remaining   
Completed 10.5 MiB/22.0 MiB (6.6 MiB/s) with 1 file(s) remaining   
Completed 10.8 MiB/22.0 MiB (6.8 MiB/s) with 1 file(s) remaining   
Completed 11.0 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining   
Completed 11.2 MiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining   
Completed 11.5 MiB/22.0 MiB (7.2 MiB/s) with 1 file(s) remaining   
Completed 11.8 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining   
Completed 12.0 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining   
Completed 12.2 MiB/22.0 MiB (6.8 MiB/s) with 1 file(s) remaining   
Completed 12.5 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining   
Completed 12.8 MiB/22.0 MiB (7.0 MiB/s) with 1 file(s) remaining   
Completed 13.0 MiB/22.0 MiB (7.2 MiB/s) with 1 file(s) remaining   
Completed 13.2 MiB/22.0 MiB (7.3 MiB/s) with 1 file(s) remaining   
Completed 13.5 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining   
Completed 13.8 MiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining   
Completed 14.0 MiB/22.0 MiB (7.7 MiB/s) with 1 file(s) remaining   
Completed 14.2 MiB/22.0 MiB (6.4 MiB/s) with 1 file(s) remaining   
Completed 14.5 MiB/22.0 MiB (6.5 MiB/s) with 1 file(s) remaining   
Completed 14.8 MiB/22.0 MiB (6.6 MiB/s) with 1 file(s) remaining   
Completed 15.0 MiB/22.0 MiB (6.7 MiB/s) with 1 file(s) remaining   
Completed 15.2 MiB/22.0 MiB (6.8 MiB/s) with 1 file(s) remaining   
Completed 15.5 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining   
Completed 15.8 MiB/22.0 MiB (7.0 MiB/s) with 1 file(s) remaining   
Completed 16.0 MiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining   
Completed 16.2 MiB/22.0 MiB (7.2 MiB/s) with 1 file(s) remaining   
Completed 16.5 MiB/22.0 MiB (7.3 MiB/s) with 1 file(s) remaining   
Completed 16.8 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining   
Completed 17.0 MiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining   
Completed 17.2 MiB/22.0 MiB (7.7 MiB/s) with 1 file(s) remaining   
Completed 17.5 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining   
Completed 17.8 MiB/22.0 MiB (7.9 MiB/s) with 1 file(s) remaining   
Completed 18.0 MiB/22.0 MiB (8.0 MiB/s) with 1 file(s) remaining   
Completed 18.2 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining   
Completed 18.5 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining   
Completed 18.8 MiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining   
Completed 19.0 MiB/22.0 MiB (7.7 MiB/s) with 1 file(s) remaining   
Completed 19.2 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining   
Completed 19.5 MiB/22.0 MiB (7.9 MiB/s) with 1 file(s) remaining   
Completed 19.8 MiB/22.0 MiB (8.0 MiB/s) with 1 file(s) remaining   
Completed 20.0 MiB/22.0 MiB (8.1 MiB/s) with 1 file(s) remaining   
Completed 20.2 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining   
Completed 20.5 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining   
Completed 20.8 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining   
Completed 21.0 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining   
Completed 21.2 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining   
Completed 21.5 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining   
Completed 21.8 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining   
Completed 22.0 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining   
download: s3://encrypted/mpyawscli to ../../tmp/22mb.result        </msg>
<status status="PASS" starttime="20250325 21:31:19.636" endtime="20250325 21:31:19.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:19.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:19.637" endtime="20250325 21:31:19.637"/>
</kw>
<status status="PASS" starttime="20250325 21:31:16.686" endtime="20250325 21:31:19.637"/>
</kw>
<msg timestamp="20250325 21:31:19.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:16.686" endtime="20250325 21:31:19.637"/>
</kw>
<msg timestamp="20250325 21:31:19.637" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (198.4 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (396.3 KiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (593.5 KiB/s) with 1 file(s) remain...</msg>
<status status="PASS" starttime="20250325 21:31:16.686" endtime="20250325 21:31:19.637"/>
</kw>
<status status="PASS" starttime="20250325 21:31:16.686" endtime="20250325 21:31:19.637"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:19.641" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:20.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:20.101" level="INFO">${output} = delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20250325 21:31:19.639" endtime="20250325 21:31:20.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:20.102" level="INFO">delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20250325 21:31:20.102" endtime="20250325 21:31:20.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:20.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:20.103" endtime="20250325 21:31:20.103"/>
</kw>
<status status="PASS" starttime="20250325 21:31:19.638" endtime="20250325 21:31:20.103"/>
</kw>
<msg timestamp="20250325 21:31:20.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:19.638" endtime="20250325 21:31:20.103"/>
</kw>
<msg timestamp="20250325 21:31:20.103" level="INFO">${output} = delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20250325 21:31:19.638" endtime="20250325 21:31:20.103"/>
</kw>
<status status="PASS" starttime="20250325 21:31:19.638" endtime="20250325 21:31:20.103"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/22mb</arg>
<arg>/tmp/22mb.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:20.107" level="INFO">Running command 'md5sum /tmp/22mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:20.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:20.152" level="INFO">${output} = f1d2bb9d015d91f15d84705f4197140b</msg>
<status status="PASS" starttime="20250325 21:31:20.105" endtime="20250325 21:31:20.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:20.152" level="INFO">f1d2bb9d015d91f15d84705f4197140b</msg>
<status status="PASS" starttime="20250325 21:31:20.152" endtime="20250325 21:31:20.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:20.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:20.153" endtime="20250325 21:31:20.153"/>
</kw>
<status status="PASS" starttime="20250325 21:31:20.104" endtime="20250325 21:31:20.153"/>
</kw>
<msg timestamp="20250325 21:31:20.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:20.104" endtime="20250325 21:31:20.153"/>
</kw>
<msg timestamp="20250325 21:31:20.153" level="INFO">${checksumbefore} = f1d2bb9d015d91f15d84705f4197140b</msg>
<status status="PASS" starttime="20250325 21:31:20.104" endtime="20250325 21:31:20.153"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:20.157" level="INFO">Running command 'md5sum /tmp/22mb.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:20.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:20.200" level="INFO">${output} = f1d2bb9d015d91f15d84705f4197140b</msg>
<status status="PASS" starttime="20250325 21:31:20.154" endtime="20250325 21:31:20.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:20.201" level="INFO">f1d2bb9d015d91f15d84705f4197140b</msg>
<status status="PASS" starttime="20250325 21:31:20.200" endtime="20250325 21:31:20.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:20.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:20.201" endtime="20250325 21:31:20.201"/>
</kw>
<status status="PASS" starttime="20250325 21:31:20.154" endtime="20250325 21:31:20.201"/>
</kw>
<msg timestamp="20250325 21:31:20.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:20.154" endtime="20250325 21:31:20.202"/>
</kw>
<msg timestamp="20250325 21:31:20.202" level="INFO">${checksumafter} = f1d2bb9d015d91f15d84705f4197140b</msg>
<status status="PASS" starttime="20250325 21:31:20.153" endtime="20250325 21:31:20.202"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:20.202" endtime="20250325 21:31:20.202"/>
</kw>
<status status="PASS" starttime="20250325 21:31:20.104" endtime="20250325 21:31:20.202"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:31:15.385" endtime="20250325 21:31:20.202"/>
</test>
<test id="s1-s3-s8-t13" name="Test Multipart Upload Put With Copy" line="235">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:31:20.204" level="INFO">${randStr} = 7072293165</msg>
<status status="PASS" starttime="20250325 21:31:20.204" endtime="20250325 21:31:20.204"/>
</kw>
<msg timestamp="20250325 21:31:20.204" level="INFO">${random} = ozone-test-7072293165</msg>
<status status="PASS" starttime="20250325 21:31:20.204" endtime="20250325 21:31:20.204"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:31:20.205" level="INFO">${PREFIX} = ozone-test-7072293165</msg>
<status status="PASS" starttime="20250325 21:31:20.204" endtime="20250325 21:31:20.205"/>
</kw>
<status status="PASS" starttime="20250325 21:31:20.203" endtime="20250325 21:31:20.205"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:20.208" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7072293165/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:20.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:20.956" level="INFO">${output} = {
    "ETag": "\"fb9f1b33e6fa46c9035a38136bcab55d\""
}</msg>
<status status="PASS" starttime="20250325 21:31:20.206" endtime="20250325 21:31:20.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:20.957" level="INFO">{
    "ETag": "\"fb9f1b33e6fa46c9035a38136bcab55d\""
}</msg>
<status status="PASS" starttime="20250325 21:31:20.956" endtime="20250325 21:31:20.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:20.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:20.957" endtime="20250325 21:31:20.957"/>
</kw>
<status status="PASS" starttime="20250325 21:31:20.206" endtime="20250325 21:31:20.957"/>
</kw>
<msg timestamp="20250325 21:31:20.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:20.205" endtime="20250325 21:31:20.958"/>
</kw>
<msg timestamp="20250325 21:31:20.958" level="INFO">${output} = {
    "ETag": "\"fb9f1b33e6fa46c9035a38136bcab55d\""
}</msg>
<status status="PASS" starttime="20250325 21:31:20.205" endtime="20250325 21:31:20.958"/>
</kw>
<msg timestamp="20250325 21:31:20.958" level="INFO">${result} = {
    "ETag": "\"fb9f1b33e6fa46c9035a38136bcab55d\""
}</msg>
<status status="PASS" starttime="20250325 21:31:20.205" endtime="20250325 21:31:20.958"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copytest/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:20.962" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-7072293165/copytest/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:21.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:21.448" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7072293165/copytest/destination",
    "UploadId": "0195cf37-95ad-7121-b859-c8b0bf6796f3-114225203209109568"
}</msg>
<status status="PASS" starttime="20250325 21:31:20.960" endtime="20250325 21:31:21.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:21.449" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-7072293165/copytest/destination",
    "UploadId": "0195cf37-95ad-7121-b859-c8b0bf6796f3-114225203209109568"
}</msg>
<status status="PASS" starttime="20250325 21:31:21.448" endtime="20250325 21:31:21.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:21.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:21.449" endtime="20250325 21:31:21.449"/>
</kw>
<msg timestamp="20250325 21:31:21.449" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7072293165/copytest/destination",
    "UploadId": "0195cf37-95ad-7121-b859-c8b0bf6796f3-114225203209109568"
}</msg>
<status status="PASS" starttime="20250325 21:31:20.959" endtime="20250325 21:31:21.449"/>
</kw>
<msg timestamp="20250325 21:31:21.449" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7072293165/copytest/destination",
    "UploadId": "0195cf37-95ad-7121-b859-c8b0bf6796f3-114225203209109568"
}</msg>
<status status="PASS" starttime="20250325 21:31:20.959" endtime="20250325 21:31:21.449"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:21.450" endtime="20250325 21:31:21.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:21.450" endtime="20250325 21:31:21.450"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:21.453" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-7072293165/copytest/destination",
    "UploadId": "0195cf37-95ad-7121-b859-c8b0bf6796f3-114225203209109568"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:21.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:21.458" level="INFO">${output} = 0195cf37-95ad-7121-b859-c8b0bf6796f3-114225203209109568</msg>
<status status="PASS" starttime="20250325 21:31:21.451" endtime="20250325 21:31:21.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:21.459" level="INFO">0195cf37-95ad-7121-b859-c8b0bf6796f3-114225203209109568</msg>
<status status="PASS" starttime="20250325 21:31:21.458" endtime="20250325 21:31:21.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:21.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:21.459" endtime="20250325 21:31:21.459"/>
</kw>
<msg timestamp="20250325 21:31:21.460" level="INFO">${upload_id} = 0195cf37-95ad-7121-b859-c8b0bf6796f3-114225203209109568</msg>
<status status="PASS" starttime="20250325 21:31:21.450" endtime="20250325 21:31:21.460"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:21.460" endtime="20250325 21:31:21.460"/>
</return>
<status status="PASS" starttime="20250325 21:31:21.450" endtime="20250325 21:31:21.460"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:21.460" endtime="20250325 21:31:21.460"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:21.460" endtime="20250325 21:31:21.460"/>
</branch>
<status status="PASS" starttime="20250325 21:31:21.449" endtime="20250325 21:31:21.460"/>
</if>
<msg timestamp="20250325 21:31:21.460" level="INFO">${uploadID} = 0195cf37-95ad-7121-b859-c8b0bf6796f3-114225203209109568</msg>
<status status="PASS" starttime="20250325 21:31:20.958" endtime="20250325 21:31:21.460"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:21.464" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-7072293165/copytest/destination --upload-id 0195cf37-95ad-7121-b859-c8b0bf6796f3-114225203209109568 --part-number 1 --copy-source encrypted/ozone-test-7072293165/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:22.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:22.499" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
        "LastModified": "2025-03-25T21:31:22.443Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:21.462" endtime="20250325 21:31:22.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:22.500" level="INFO">{
    "CopyPartResult": {
        "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
        "LastModified": "2025-03-25T21:31:22.443Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:22.499" endtime="20250325 21:31:22.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:22.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:22.500" endtime="20250325 21:31:22.500"/>
</kw>
<status status="PASS" starttime="20250325 21:31:21.461" endtime="20250325 21:31:22.501"/>
</kw>
<msg timestamp="20250325 21:31:22.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:21.461" endtime="20250325 21:31:22.501"/>
</kw>
<msg timestamp="20250325 21:31:22.501" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
        "LastModified": "2025-03-25T21:31:22.443Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:21.461" endtime="20250325 21:31:22.501"/>
</kw>
<msg timestamp="20250325 21:31:22.501" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
        "LastModified": "2025-03-25T21:31:22.443Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:21.460" endtime="20250325 21:31:22.501"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:22.501" endtime="20250325 21:31:22.501"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:22.502" endtime="20250325 21:31:22.502"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:22.505" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "fb9f1b33e6fa46c9035a38136bcab55d",
        "LastModified": "2025-03-25T21:31:22.443Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:22.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:22.510" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:22.502" endtime="20250325 21:31:22.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:22.510" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:22.510" endtime="20250325 21:31:22.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:22.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:22.510" endtime="20250325 21:31:22.511"/>
</kw>
<msg timestamp="20250325 21:31:22.511" level="INFO">${eTag1} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:22.502" endtime="20250325 21:31:22.511"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copytest/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:22.515" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-7072293165/copytest/destination --upload-id 0195cf37-95ad-7121-b859-c8b0bf6796f3-114225203209109568 --multipart-upload 'Parts=[{ETag=fb9f1b33e6fa46c9035a38136bcab55d,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:23.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:23.011" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-7072293165/copytest/destination",
    "ETag": "\"c1bfd0a28d3a3ca73ad03ed4033edb27-1\""
}</msg>
<status status="PASS" starttime="20250325 21:31:22.513" endtime="20250325 21:31:23.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:23.011" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-7072293165/copytest/destination",
    "ETag": "\"c1bfd0a28d3a3ca73ad03ed4033edb27-1\""
}</msg>
<status status="PASS" starttime="20250325 21:31:23.011" endtime="20250325 21:31:23.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:23.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:23.012" endtime="20250325 21:31:23.012"/>
</kw>
<msg timestamp="20250325 21:31:23.012" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-7072293165/copytest/destination",
    "ETag": "\"c1bfd0a28d3a3ca73ad03ed4033edb27-1\""
}</msg>
<status status="PASS" starttime="20250325 21:31:22.512" endtime="20250325 21:31:23.012"/>
</kw>
<msg timestamp="20250325 21:31:23.012" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-7072293165/copytest/destination",
    "ETag": "\"c1bfd0a28d3a3ca73ad03ed4033edb27-1\""
}</msg>
<status status="PASS" starttime="20250325 21:31:22.512" endtime="20250325 21:31:23.012"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:23.013" endtime="20250325 21:31:23.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:23.013" endtime="20250325 21:31:23.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:23.013" endtime="20250325 21:31:23.014"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:23.017" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-7072293165/copytest/destination",
    "ETag": "\"c1bfd0a28d3a3ca73ad03ed4033edb27-1\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:23.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:23.022" level="INFO">${output} = "c1bfd0a28d3a3ca73ad03ed4033edb27-1"</msg>
<status status="PASS" starttime="20250325 21:31:23.015" endtime="20250325 21:31:23.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:23.023" level="INFO">"c1bfd0a28d3a3ca73ad03ed4033edb27-1"</msg>
<status status="PASS" starttime="20250325 21:31:23.022" endtime="20250325 21:31:23.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:23.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:23.023" endtime="20250325 21:31:23.023"/>
</kw>
<status status="PASS" starttime="20250325 21:31:23.014" endtime="20250325 21:31:23.023"/>
</kw>
<msg timestamp="20250325 21:31:23.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:23.014" endtime="20250325 21:31:23.023"/>
</kw>
<msg timestamp="20250325 21:31:23.024" level="INFO">${etag} = "c1bfd0a28d3a3ca73ad03ed4033edb27-1"</msg>
<status status="PASS" starttime="20250325 21:31:23.014" endtime="20250325 21:31:23.024"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:31:23.024" endtime="20250325 21:31:23.024"/>
</return>
<status status="PASS" starttime="20250325 21:31:23.013" endtime="20250325 21:31:23.024"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:23.024" endtime="20250325 21:31:23.024"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:23.024" endtime="20250325 21:31:23.024"/>
</branch>
<status status="PASS" starttime="20250325 21:31:23.013" endtime="20250325 21:31:23.024"/>
</if>
<status status="PASS" starttime="20250325 21:31:22.511" endtime="20250325 21:31:23.024"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:23.027" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7072293165/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:23.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:23.928" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:22 GMT",
    "ContentLength": 5243904,
    "ETag": "\"c1bfd0a28d3a3ca73ad03ed4033edb27-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:31:23.025" endtime="20250325 21:31:23.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:23.929" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:22 GMT",
    "ContentLength": 5243904,
    "ETag": "\"c1bfd0a28d3a3ca73ad03ed4033edb27-1\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:31:23 GMT",
    "Metadata": {},
    "PartsCount": 1,
    "ExpiresString": "Tue, 25 Mar 2025 21:31:23 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:31:23.928" endtime="20250325 21:31:23.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:23.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:23.929" endtime="20250325 21:31:23.929"/>
</kw>
<status status="PASS" starttime="20250325 21:31:23.025" endtime="20250325 21:31:23.929"/>
</kw>
<msg timestamp="20250325 21:31:23.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:23.025" endtime="20250325 21:31:23.930"/>
</kw>
<msg timestamp="20250325 21:31:23.930" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:22 GMT",
    "ContentLength": 5243904,
    "ETag": "\"c1bfd0a28d3a3ca73ad03ed4033edb27-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:31:23.025" endtime="20250325 21:31:23.930"/>
</kw>
<status status="PASS" starttime="20250325 21:31:23.024" endtime="20250325 21:31:23.930"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:23.934" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:23.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:23.949" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:23.931" endtime="20250325 21:31:23.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:23.950" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:23.949" endtime="20250325 21:31:23.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:23.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:23.950" endtime="20250325 21:31:23.951"/>
</kw>
<status status="PASS" starttime="20250325 21:31:23.931" endtime="20250325 21:31:23.951"/>
</kw>
<msg timestamp="20250325 21:31:23.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:23.931" endtime="20250325 21:31:23.951"/>
</kw>
<msg timestamp="20250325 21:31:23.951" level="INFO">${checksumbefore} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:23.930" endtime="20250325 21:31:23.951"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:23.954" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:23.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:23.967" level="INFO">${output} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:23.952" endtime="20250325 21:31:23.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:23.968" level="INFO">fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:23.967" endtime="20250325 21:31:23.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:23.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:23.968" endtime="20250325 21:31:23.968"/>
</kw>
<status status="PASS" starttime="20250325 21:31:23.952" endtime="20250325 21:31:23.968"/>
</kw>
<msg timestamp="20250325 21:31:23.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:23.951" endtime="20250325 21:31:23.969"/>
</kw>
<msg timestamp="20250325 21:31:23.969" level="INFO">${checksumafter} = fb9f1b33e6fa46c9035a38136bcab55d</msg>
<status status="PASS" starttime="20250325 21:31:23.951" endtime="20250325 21:31:23.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:23.969" endtime="20250325 21:31:23.969"/>
</kw>
<status status="PASS" starttime="20250325 21:31:23.930" endtime="20250325 21:31:23.969"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:31:20.203" endtime="20250325 21:31:23.969"/>
</test>
<test id="s1-s3-s8-t14" name="Test Multipart Upload Put With Copy and range" line="251">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:31:23.971" level="INFO">${randStr} = 6264187718</msg>
<status status="PASS" starttime="20250325 21:31:23.971" endtime="20250325 21:31:23.971"/>
</kw>
<msg timestamp="20250325 21:31:23.971" level="INFO">${random} = ozone-test-6264187718</msg>
<status status="PASS" starttime="20250325 21:31:23.970" endtime="20250325 21:31:23.971"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:31:23.971" level="INFO">${PREFIX} = ozone-test-6264187718</msg>
<status status="PASS" starttime="20250325 21:31:23.971" endtime="20250325 21:31:23.972"/>
</kw>
<status status="PASS" starttime="20250325 21:31:23.970" endtime="20250325 21:31:23.972"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:23.975" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-6264187718/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:24.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:24.644" level="INFO">${output} = {
    "ETag": "\"819dd7d0e65622529339a71e1023b4ca\""
}</msg>
<status status="PASS" starttime="20250325 21:31:23.973" endtime="20250325 21:31:24.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:24.645" level="INFO">{
    "ETag": "\"819dd7d0e65622529339a71e1023b4ca\""
}</msg>
<status status="PASS" starttime="20250325 21:31:24.645" endtime="20250325 21:31:24.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:24.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:24.645" endtime="20250325 21:31:24.646"/>
</kw>
<status status="PASS" starttime="20250325 21:31:23.972" endtime="20250325 21:31:24.646"/>
</kw>
<msg timestamp="20250325 21:31:24.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:23.972" endtime="20250325 21:31:24.646"/>
</kw>
<msg timestamp="20250325 21:31:24.646" level="INFO">${output} = {
    "ETag": "\"819dd7d0e65622529339a71e1023b4ca\""
}</msg>
<status status="PASS" starttime="20250325 21:31:23.972" endtime="20250325 21:31:24.646"/>
</kw>
<msg timestamp="20250325 21:31:24.646" level="INFO">${result} = {
    "ETag": "\"819dd7d0e65622529339a71e1023b4ca\""
}</msg>
<status status="PASS" starttime="20250325 21:31:23.972" endtime="20250325 21:31:24.646"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:24.650" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-6264187718/copyrange/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:25.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:25.132" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6264187718/copyrange/destination",
    "UploadId": "0195cf37-a410-77d8-a2f3-20af5f902156-114225203450478659"
}</msg>
<status status="PASS" starttime="20250325 21:31:24.648" endtime="20250325 21:31:25.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:25.133" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-6264187718/copyrange/destination",
    "UploadId": "0195cf37-a410-77d8-a2f3-20af5f902156-114225203450478659"
}</msg>
<status status="PASS" starttime="20250325 21:31:25.132" endtime="20250325 21:31:25.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:25.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:25.133" endtime="20250325 21:31:25.133"/>
</kw>
<msg timestamp="20250325 21:31:25.133" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6264187718/copyrange/destination",
    "UploadId": "0195cf37-a410-77d8-a2f3-20af5f902156-114225203450478659"
}</msg>
<status status="PASS" starttime="20250325 21:31:24.648" endtime="20250325 21:31:25.134"/>
</kw>
<msg timestamp="20250325 21:31:25.134" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6264187718/copyrange/destination",
    "UploadId": "0195cf37-a410-77d8-a2f3-20af5f902156-114225203450478659"
}</msg>
<status status="PASS" starttime="20250325 21:31:24.647" endtime="20250325 21:31:25.134"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:25.134" endtime="20250325 21:31:25.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:25.134" endtime="20250325 21:31:25.135"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:25.138" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-6264187718/copyrange/destination",
    "UploadId": "0195cf37-a410-77d8-a2f3-20af5f902156-114225203450478659"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:25.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:25.143" level="INFO">${output} = 0195cf37-a410-77d8-a2f3-20af5f902156-114225203450478659</msg>
<status status="PASS" starttime="20250325 21:31:25.135" endtime="20250325 21:31:25.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:25.144" level="INFO">0195cf37-a410-77d8-a2f3-20af5f902156-114225203450478659</msg>
<status status="PASS" starttime="20250325 21:31:25.143" endtime="20250325 21:31:25.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:25.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:25.144" endtime="20250325 21:31:25.144"/>
</kw>
<msg timestamp="20250325 21:31:25.144" level="INFO">${upload_id} = 0195cf37-a410-77d8-a2f3-20af5f902156-114225203450478659</msg>
<status status="PASS" starttime="20250325 21:31:25.135" endtime="20250325 21:31:25.144"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:25.144" endtime="20250325 21:31:25.144"/>
</return>
<status status="PASS" starttime="20250325 21:31:25.134" endtime="20250325 21:31:25.145"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:25.145" endtime="20250325 21:31:25.145"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:25.145" endtime="20250325 21:31:25.145"/>
</branch>
<status status="PASS" starttime="20250325 21:31:25.134" endtime="20250325 21:31:25.145"/>
</if>
<msg timestamp="20250325 21:31:25.145" level="INFO">${uploadID} = 0195cf37-a410-77d8-a2f3-20af5f902156-114225203450478659</msg>
<status status="PASS" starttime="20250325 21:31:24.647" endtime="20250325 21:31:25.145"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:25.148" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6264187718/copyrange/destination --upload-id 0195cf37-a410-77d8-a2f3-20af5f902156-114225203450478659 --part-number 1 --copy-source encrypted/ozone-test-6264187718/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:26.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:26.574" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:26.508Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:25.146" endtime="20250325 21:31:26.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:26.575" level="INFO">{
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:26.508Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:26.574" endtime="20250325 21:31:26.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:26.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:26.575" endtime="20250325 21:31:26.575"/>
</kw>
<status status="PASS" starttime="20250325 21:31:25.146" endtime="20250325 21:31:26.576"/>
</kw>
<msg timestamp="20250325 21:31:26.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:25.146" endtime="20250325 21:31:26.576"/>
</kw>
<msg timestamp="20250325 21:31:26.576" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:26.508Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:25.146" endtime="20250325 21:31:26.576"/>
</kw>
<msg timestamp="20250325 21:31:26.576" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:26.508Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:25.145" endtime="20250325 21:31:26.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:26.576" endtime="20250325 21:31:26.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:26.577" endtime="20250325 21:31:26.577"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:26.580" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:26.508Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:26.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:26.586" level="INFO">${output} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:26.578" endtime="20250325 21:31:26.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:26.587" level="INFO">819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:26.586" endtime="20250325 21:31:26.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:26.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:26.587" endtime="20250325 21:31:26.588"/>
</kw>
<msg timestamp="20250325 21:31:26.588" level="INFO">${eTag1} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:26.577" endtime="20250325 21:31:26.588"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:26.592" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6264187718/copyrange/destination --upload-id 0195cf37-a410-77d8-a2f3-20af5f902156-114225203450478659 --part-number 2 --copy-source encrypted/ozone-test-6264187718/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:27.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:27.132" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:27.082Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:26.590" endtime="20250325 21:31:27.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:27.133" level="INFO">{
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:27.082Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:27.132" endtime="20250325 21:31:27.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:27.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:27.133" endtime="20250325 21:31:27.133"/>
</kw>
<status status="PASS" starttime="20250325 21:31:26.589" endtime="20250325 21:31:27.134"/>
</kw>
<msg timestamp="20250325 21:31:27.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:26.589" endtime="20250325 21:31:27.134"/>
</kw>
<msg timestamp="20250325 21:31:27.134" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:27.082Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:26.589" endtime="20250325 21:31:27.134"/>
</kw>
<msg timestamp="20250325 21:31:27.134" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:27.082Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:26.588" endtime="20250325 21:31:27.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:27.134" endtime="20250325 21:31:27.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:27.134" endtime="20250325 21:31:27.135"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:27.138" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:27.082Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:27.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:27.143" level="INFO">${output} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:27.135" endtime="20250325 21:31:27.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:27.143" level="INFO">819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:27.143" endtime="20250325 21:31:27.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:27.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:27.143" endtime="20250325 21:31:27.144"/>
</kw>
<msg timestamp="20250325 21:31:27.144" level="INFO">${eTag2} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:27.135" endtime="20250325 21:31:27.144"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:27.147" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-6264187718/copyrange/destination --upload-id 0195cf37-a410-77d8-a2f3-20af5f902156-114225203450478659 --multipart-upload 'Parts=[{ETag=819dd7d0e65622529339a71e1023b4ca,PartNumber=1},{ETag=819dd7d0e65622529339a71e1023b4ca,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:27.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:27.610" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6264187718/copyrange/destination",
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\""
}</msg>
<status status="PASS" starttime="20250325 21:31:27.145" endtime="20250325 21:31:27.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:27.611" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6264187718/copyrange/destination",
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\""
}</msg>
<status status="PASS" starttime="20250325 21:31:27.611" endtime="20250325 21:31:27.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:27.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:27.611" endtime="20250325 21:31:27.612"/>
</kw>
<msg timestamp="20250325 21:31:27.612" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6264187718/copyrange/destination",
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\""
}</msg>
<status status="PASS" starttime="20250325 21:31:27.145" endtime="20250325 21:31:27.612"/>
</kw>
<msg timestamp="20250325 21:31:27.612" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6264187718/copyrange/destination",
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\""
}</msg>
<status status="PASS" starttime="20250325 21:31:27.144" endtime="20250325 21:31:27.612"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:27.612" endtime="20250325 21:31:27.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:27.613" endtime="20250325 21:31:27.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:27.613" endtime="20250325 21:31:27.613"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:27.616" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6264187718/copyrange/destination",
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:27.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:27.622" level="INFO">${output} = "fa76e019483b851aeaf1585285a28e48-2"</msg>
<status status="PASS" starttime="20250325 21:31:27.614" endtime="20250325 21:31:27.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:27.622" level="INFO">"fa76e019483b851aeaf1585285a28e48-2"</msg>
<status status="PASS" starttime="20250325 21:31:27.622" endtime="20250325 21:31:27.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:27.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:27.622" endtime="20250325 21:31:27.623"/>
</kw>
<status status="PASS" starttime="20250325 21:31:27.614" endtime="20250325 21:31:27.623"/>
</kw>
<msg timestamp="20250325 21:31:27.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:27.614" endtime="20250325 21:31:27.623"/>
</kw>
<msg timestamp="20250325 21:31:27.623" level="INFO">${etag} = "fa76e019483b851aeaf1585285a28e48-2"</msg>
<status status="PASS" starttime="20250325 21:31:27.613" endtime="20250325 21:31:27.623"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:31:27.623" endtime="20250325 21:31:27.623"/>
</return>
<status status="PASS" starttime="20250325 21:31:27.612" endtime="20250325 21:31:27.623"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:27.623" endtime="20250325 21:31:27.623"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:27.623" endtime="20250325 21:31:27.623"/>
</branch>
<status status="PASS" starttime="20250325 21:31:27.612" endtime="20250325 21:31:27.623"/>
</if>
<status status="PASS" starttime="20250325 21:31:27.144" endtime="20250325 21:31:27.624"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:27.627" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-6264187718/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:28.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:28.852" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:27 GMT",
    "ContentLength": 10485760,
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250325 21:31:27.625" endtime="20250325 21:31:28.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:28.853" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:27 GMT",
    "ContentLength": 10485760,
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:31:28 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:31:28 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:31:28.853" endtime="20250325 21:31:28.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:28.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:28.854" endtime="20250325 21:31:28.854"/>
</kw>
<status status="PASS" starttime="20250325 21:31:27.625" endtime="20250325 21:31:28.854"/>
</kw>
<msg timestamp="20250325 21:31:28.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:27.624" endtime="20250325 21:31:28.854"/>
</kw>
<msg timestamp="20250325 21:31:28.854" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:27 GMT",
    "ContentLength": 10485760,
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250325 21:31:27.624" endtime="20250325 21:31:28.854"/>
</kw>
<status status="PASS" starttime="20250325 21:31:27.624" endtime="20250325 21:31:28.855"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:28.858" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:28.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:28.881" level="INFO">${output} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:28.856" endtime="20250325 21:31:28.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:28.881" level="INFO">819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:28.881" endtime="20250325 21:31:28.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:28.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:28.881" endtime="20250325 21:31:28.882"/>
</kw>
<status status="PASS" starttime="20250325 21:31:28.856" endtime="20250325 21:31:28.882"/>
</kw>
<msg timestamp="20250325 21:31:28.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:28.855" endtime="20250325 21:31:28.882"/>
</kw>
<msg timestamp="20250325 21:31:28.882" level="INFO">${checksumbefore} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:28.855" endtime="20250325 21:31:28.882"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:28.885" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:28.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:28.907" level="INFO">${output} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:28.883" endtime="20250325 21:31:28.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:28.908" level="INFO">819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:28.907" endtime="20250325 21:31:28.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:28.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:28.908" endtime="20250325 21:31:28.908"/>
</kw>
<status status="PASS" starttime="20250325 21:31:28.883" endtime="20250325 21:31:28.908"/>
</kw>
<msg timestamp="20250325 21:31:28.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:28.883" endtime="20250325 21:31:28.909"/>
</kw>
<msg timestamp="20250325 21:31:28.909" level="INFO">${checksumafter} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:28.882" endtime="20250325 21:31:28.909"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:28.909" endtime="20250325 21:31:28.909"/>
</kw>
<status status="PASS" starttime="20250325 21:31:28.855" endtime="20250325 21:31:28.909"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:31:23.970" endtime="20250325 21:31:28.909"/>
</test>
<test id="s1-s3-s8-t15" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="273">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:31:28.911" level="INFO">${randStr} = 0489586773</msg>
<status status="PASS" starttime="20250325 21:31:28.911" endtime="20250325 21:31:28.911"/>
</kw>
<msg timestamp="20250325 21:31:28.911" level="INFO">${random} = ozone-test-0489586773</msg>
<status status="PASS" starttime="20250325 21:31:28.911" endtime="20250325 21:31:28.911"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:31:28.912" level="INFO">${PREFIX} = ozone-test-0489586773</msg>
<status status="PASS" starttime="20250325 21:31:28.911" endtime="20250325 21:31:28.912"/>
</kw>
<status status="PASS" starttime="20250325 21:31:28.910" endtime="20250325 21:31:28.912"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250325 21:31:28.912" level="INFO">${curDate} = 2025-03-25 21:31:28.912</msg>
<status status="PASS" starttime="20250325 21:31:28.912" endtime="20250325 21:31:28.912"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20250325 21:31:28.915" level="INFO">${beforeCreate} = 2025-03-24 21:31:28.912</msg>
<status status="PASS" starttime="20250325 21:31:28.912" endtime="20250325 21:31:28.915"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250325 21:31:28.916" level="INFO">${tomorrow} = 2025-03-26 21:31:28.912</msg>
<status status="PASS" starttime="20250325 21:31:28.915" endtime="20250325 21:31:28.916"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:28.919" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-0489586773/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:29.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:29.629" level="INFO">${output} = {
    "ETag": "\"819dd7d0e65622529339a71e1023b4ca\""
}</msg>
<status status="PASS" starttime="20250325 21:31:28.917" endtime="20250325 21:31:29.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:29.630" level="INFO">{
    "ETag": "\"819dd7d0e65622529339a71e1023b4ca\""
}</msg>
<status status="PASS" starttime="20250325 21:31:29.629" endtime="20250325 21:31:29.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:29.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:29.630" endtime="20250325 21:31:29.630"/>
</kw>
<status status="PASS" starttime="20250325 21:31:28.917" endtime="20250325 21:31:29.631"/>
</kw>
<msg timestamp="20250325 21:31:29.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:28.916" endtime="20250325 21:31:29.631"/>
</kw>
<msg timestamp="20250325 21:31:29.631" level="INFO">${output} = {
    "ETag": "\"819dd7d0e65622529339a71e1023b4ca\""
}</msg>
<status status="PASS" starttime="20250325 21:31:28.916" endtime="20250325 21:31:29.631"/>
</kw>
<msg timestamp="20250325 21:31:29.631" level="INFO">${result} = {
    "ETag": "\"819dd7d0e65622529339a71e1023b4ca\""
}</msg>
<status status="PASS" starttime="20250325 21:31:28.916" endtime="20250325 21:31:29.631"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:29.635" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-0489586773/copyrange/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:30.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:30.117" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0489586773/copyrange/destination",
    "UploadId": "0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911"
}</msg>
<status status="PASS" starttime="20250325 21:31:29.633" endtime="20250325 21:31:30.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:30.118" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-0489586773/copyrange/destination",
    "UploadId": "0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911"
}</msg>
<status status="PASS" starttime="20250325 21:31:30.117" endtime="20250325 21:31:30.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:30.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:30.118" endtime="20250325 21:31:30.118"/>
</kw>
<msg timestamp="20250325 21:31:30.118" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0489586773/copyrange/destination",
    "UploadId": "0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911"
}</msg>
<status status="PASS" starttime="20250325 21:31:29.632" endtime="20250325 21:31:30.118"/>
</kw>
<msg timestamp="20250325 21:31:30.119" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0489586773/copyrange/destination",
    "UploadId": "0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911"
}</msg>
<status status="PASS" starttime="20250325 21:31:29.632" endtime="20250325 21:31:30.119"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:30.119" endtime="20250325 21:31:30.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:30.119" endtime="20250325 21:31:30.120"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:30.122" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-0489586773/copyrange/destination",
    "UploadId": "0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:30.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:30.128" level="INFO">${output} = 0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911</msg>
<status status="PASS" starttime="20250325 21:31:30.120" endtime="20250325 21:31:30.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:30.128" level="INFO">0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911</msg>
<status status="PASS" starttime="20250325 21:31:30.128" endtime="20250325 21:31:30.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:30.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:30.128" endtime="20250325 21:31:30.129"/>
</kw>
<msg timestamp="20250325 21:31:30.129" level="INFO">${upload_id} = 0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911</msg>
<status status="PASS" starttime="20250325 21:31:30.120" endtime="20250325 21:31:30.129"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:30.129" endtime="20250325 21:31:30.129"/>
</return>
<status status="PASS" starttime="20250325 21:31:30.119" endtime="20250325 21:31:30.129"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:30.129" endtime="20250325 21:31:30.129"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:30.129" endtime="20250325 21:31:30.129"/>
</branch>
<status status="PASS" starttime="20250325 21:31:30.119" endtime="20250325 21:31:30.129"/>
</if>
<msg timestamp="20250325 21:31:30.129" level="INFO">${uploadID} = 0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911</msg>
<status status="PASS" starttime="20250325 21:31:29.631" endtime="20250325 21:31:30.130"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:30.133" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-0489586773/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:30.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:30.604" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:31:29 GMT",
    "ContentLength": 10485760,
    "ETag": "\"819dd7d0e65622529339a71e1023b4ca\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250325 21:31:30.131" endtime="20250325 21:31:30.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:30.605" level="INFO">{
    "LastModified": "Tue, 25 Mar 2025 21:31:29 GMT",
    "ContentLength": 10485760,
    "ETag": "\"819dd7d0e65622529339a71e1023b4ca\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:31:30 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:31:30 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:31:30.604" endtime="20250325 21:31:30.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:30.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:30.605" endtime="20250325 21:31:30.605"/>
</kw>
<status status="PASS" starttime="20250325 21:31:30.131" endtime="20250325 21:31:30.605"/>
</kw>
<msg timestamp="20250325 21:31:30.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:30.130" endtime="20250325 21:31:30.606"/>
</kw>
<msg timestamp="20250325 21:31:30.606" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:31:29 GMT",
    "ContentLength": 10485760,
    "ETag": "\"819dd7d0e65622529339a71e1023b4ca\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250325 21:31:30.130" endtime="20250325 21:31:30.606"/>
</kw>
<msg timestamp="20250325 21:31:30.606" level="INFO">${result} = {
    "LastModified": "Tue, 25 Mar 2025 21:31:29 GMT",
    "ContentLength": 10485760,
    "ETag": "\"819dd7d0e65622529339a71e1023b4ca\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250325 21:31:30.130" endtime="20250325 21:31:30.606"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:30.609" level="INFO">Running command 'echo '{
    "LastModified": "Tue, 25 Mar 2025 21:31:29 GMT",
    "ContentLength": 10485760,
    "ETag": "\"819dd7d0e65622529339a71e1023b4ca\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:31:30 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:31:30 GMT"
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:30.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:30.614" level="INFO">${output} = Tue, 25 Mar 2025 21:31:29 GMT</msg>
<status status="PASS" starttime="20250325 21:31:30.606" endtime="20250325 21:31:30.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:30.614" level="INFO">Tue, 25 Mar 2025 21:31:29 GMT</msg>
<status status="PASS" starttime="20250325 21:31:30.614" endtime="20250325 21:31:30.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:30.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:30.614" endtime="20250325 21:31:30.615"/>
</kw>
<msg timestamp="20250325 21:31:30.615" level="INFO">${lastModified} = Tue, 25 Mar 2025 21:31:29 GMT</msg>
<status status="PASS" starttime="20250325 21:31:30.606" endtime="20250325 21:31:30.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:30.615" endtime="20250325 21:31:30.615"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20250325 21:31:30.617" level="INFO">${lmDate} = 2025-03-25 21:31:29.000</msg>
<status status="PASS" starttime="20250325 21:31:30.616" endtime="20250325 21:31:30.617"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250325 21:31:30.618" level="INFO">${afterCreate} = 2025-03-25 21:31:32.000</msg>
<status status="PASS" starttime="20250325 21:31:30.617" endtime="20250325 21:31:30.618"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250325 21:31:30.618" level="INFO">${latestDate} = 2025-03-25 21:31:30.618</msg>
<status status="PASS" starttime="20250325 21:31:30.618" endtime="20250325 21:31:30.618"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20250325 21:31:30.619" level="INFO">${sleepSeconds} = 1.382</msg>
<status status="PASS" starttime="20250325 21:31:30.619" endtime="20250325 21:31:30.619"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Sleep" library="BuiltIn">
<arg>${sleepSeconds}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250325 21:31:32.002" level="INFO">Slept 1 second 382 milliseconds</msg>
<status status="PASS" starttime="20250325 21:31:30.619" endtime="20250325 21:31:32.002"/>
</kw>
<status status="PASS" starttime="20250325 21:31:30.619" endtime="20250325 21:31:32.002"/>
</kw>
<status status="PASS" starttime="20250325 21:31:30.618" endtime="20250325 21:31:32.002"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:32.006" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-0489586773/copyrange/destination --upload-id 0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911 --part-number 1 --copy-source encrypted/ozone-test-0489586773/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-03-25 21:31:32.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:32.489" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:31:32.489" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250325 21:31:32.003" endtime="20250325 21:31:32.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:32.490" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250325 21:31:32.489" endtime="20250325 21:31:32.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:32.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:32.490" endtime="20250325 21:31:32.490"/>
</kw>
<msg timestamp="20250325 21:31:32.491" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250325 21:31:32.003" endtime="20250325 21:31:32.491"/>
</kw>
<msg timestamp="20250325 21:31:32.491" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250325 21:31:32.002" endtime="20250325 21:31:32.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:32.491" endtime="20250325 21:31:32.491"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:32.495" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-0489586773/copyrange/destination --upload-id 0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911 --part-number 2 --copy-source encrypted/ozone-test-0489586773/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2025-03-24 21:31:28.912' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:32.969" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:31:32.969" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250325 21:31:32.492" endtime="20250325 21:31:32.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:32.970" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250325 21:31:32.969" endtime="20250325 21:31:32.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:32.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:32.970" endtime="20250325 21:31:32.970"/>
</kw>
<msg timestamp="20250325 21:31:32.971" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250325 21:31:32.492" endtime="20250325 21:31:32.971"/>
</kw>
<msg timestamp="20250325 21:31:32.971" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250325 21:31:32.491" endtime="20250325 21:31:32.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:32.971" endtime="20250325 21:31:32.971"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:32.975" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-0489586773/copyrange/destination --upload-id 0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911 --part-number 1 --copy-source encrypted/ozone-test-0489586773/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-03-24 21:31:28.912' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:34.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:34.399" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:34.346Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:32.972" endtime="20250325 21:31:34.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:34.400" level="INFO">{
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:34.346Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:34.400" endtime="20250325 21:31:34.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:34.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:34.401" endtime="20250325 21:31:34.401"/>
</kw>
<msg timestamp="20250325 21:31:34.401" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:34.346Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:32.972" endtime="20250325 21:31:34.401"/>
</kw>
<msg timestamp="20250325 21:31:34.401" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:34.346Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:32.971" endtime="20250325 21:31:34.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:34.401" endtime="20250325 21:31:34.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:34.402" endtime="20250325 21:31:34.402"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:34.405" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:34.346Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:34.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:34.410" level="INFO">${output} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:34.402" endtime="20250325 21:31:34.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:34.411" level="INFO">819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:34.410" endtime="20250325 21:31:34.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:34.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:34.411" endtime="20250325 21:31:34.412"/>
</kw>
<msg timestamp="20250325 21:31:34.412" level="INFO">${eTag1} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:34.402" endtime="20250325 21:31:34.412"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:34.415" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-0489586773/copyrange/destination --upload-id 0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911 --part-number 2 --copy-source encrypted/ozone-test-0489586773/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2025-03-25 21:31:32.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:34.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:34.968" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:34.908Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:34.413" endtime="20250325 21:31:34.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:34.969" level="INFO">{
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:34.908Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:34.969" endtime="20250325 21:31:34.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:34.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:34.969" endtime="20250325 21:31:34.970"/>
</kw>
<msg timestamp="20250325 21:31:34.970" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:34.908Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:34.413" endtime="20250325 21:31:34.970"/>
</kw>
<msg timestamp="20250325 21:31:34.970" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:34.908Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:34.412" endtime="20250325 21:31:34.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:34.970" endtime="20250325 21:31:34.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:34.970" endtime="20250325 21:31:34.971"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:34.974" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:34.908Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:34.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:34.979" level="INFO">${output} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:34.971" endtime="20250325 21:31:34.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:34.980" level="INFO">819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:34.979" endtime="20250325 21:31:34.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:34.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:34.980" endtime="20250325 21:31:34.980"/>
</kw>
<msg timestamp="20250325 21:31:34.981" level="INFO">${eTag2} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:34.971" endtime="20250325 21:31:34.981"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:34.984" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-0489586773/copyrange/destination --upload-id 0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911 --part-number 1 --copy-source encrypted/ozone-test-0489586773/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-03-26 21:31:28.912' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:36.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:36.388" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:36.318Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:34.982" endtime="20250325 21:31:36.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:36.389" level="INFO">{
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:36.318Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:36.388" endtime="20250325 21:31:36.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:36.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:36.389" endtime="20250325 21:31:36.389"/>
</kw>
<msg timestamp="20250325 21:31:36.390" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:36.318Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:34.981" endtime="20250325 21:31:36.390"/>
</kw>
<msg timestamp="20250325 21:31:36.390" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:36.318Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:31:34.981" endtime="20250325 21:31:36.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:36.390" endtime="20250325 21:31:36.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:36.390" endtime="20250325 21:31:36.390"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:36.393" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "819dd7d0e65622529339a71e1023b4ca",
        "LastModified": "2025-03-25T21:31:36.318Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:36.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:36.398" level="INFO">${output} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:36.391" endtime="20250325 21:31:36.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:36.399" level="INFO">819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:36.399" endtime="20250325 21:31:36.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:36.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:36.399" endtime="20250325 21:31:36.400"/>
</kw>
<msg timestamp="20250325 21:31:36.400" level="INFO">${eTag1} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:36.390" endtime="20250325 21:31:36.400"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:36.403" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-0489586773/copyrange/destination --upload-id 0195cf37-b791-71e7-b80f-e782b5ecd4f1-114225203777699911 --multipart-upload 'Parts=[{ETag=819dd7d0e65622529339a71e1023b4ca,PartNumber=1},{ETag=819dd7d0e65622529339a71e1023b4ca,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:36.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:36.884" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-0489586773/copyrange/destination",
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\""
}</msg>
<status status="PASS" starttime="20250325 21:31:36.401" endtime="20250325 21:31:36.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:36.885" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-0489586773/copyrange/destination",
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\""
}</msg>
<status status="PASS" starttime="20250325 21:31:36.884" endtime="20250325 21:31:36.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:36.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:36.885" endtime="20250325 21:31:36.885"/>
</kw>
<msg timestamp="20250325 21:31:36.886" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-0489586773/copyrange/destination",
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\""
}</msg>
<status status="PASS" starttime="20250325 21:31:36.401" endtime="20250325 21:31:36.886"/>
</kw>
<msg timestamp="20250325 21:31:36.886" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-0489586773/copyrange/destination",
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\""
}</msg>
<status status="PASS" starttime="20250325 21:31:36.400" endtime="20250325 21:31:36.886"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:36.886" endtime="20250325 21:31:36.886"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:36.886" endtime="20250325 21:31:36.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:36.887" endtime="20250325 21:31:36.887"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:36.890" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-0489586773/copyrange/destination",
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:36.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:36.896" level="INFO">${output} = "fa76e019483b851aeaf1585285a28e48-2"</msg>
<status status="PASS" starttime="20250325 21:31:36.888" endtime="20250325 21:31:36.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:36.896" level="INFO">"fa76e019483b851aeaf1585285a28e48-2"</msg>
<status status="PASS" starttime="20250325 21:31:36.896" endtime="20250325 21:31:36.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:36.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:36.897" endtime="20250325 21:31:36.897"/>
</kw>
<status status="PASS" starttime="20250325 21:31:36.888" endtime="20250325 21:31:36.897"/>
</kw>
<msg timestamp="20250325 21:31:36.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:36.887" endtime="20250325 21:31:36.897"/>
</kw>
<msg timestamp="20250325 21:31:36.897" level="INFO">${etag} = "fa76e019483b851aeaf1585285a28e48-2"</msg>
<status status="PASS" starttime="20250325 21:31:36.887" endtime="20250325 21:31:36.897"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250325 21:31:36.897" endtime="20250325 21:31:36.897"/>
</return>
<status status="PASS" starttime="20250325 21:31:36.886" endtime="20250325 21:31:36.898"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:36.898" endtime="20250325 21:31:36.898"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:36.898" endtime="20250325 21:31:36.898"/>
</branch>
<status status="PASS" starttime="20250325 21:31:36.886" endtime="20250325 21:31:36.898"/>
</if>
<status status="PASS" starttime="20250325 21:31:36.400" endtime="20250325 21:31:36.898"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:36.901" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-0489586773/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:38.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:38.082" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:36 GMT",
    "ContentLength": 10485760,
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250325 21:31:36.899" endtime="20250325 21:31:38.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:38.083" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:36 GMT",
    "ContentLength": 10485760,
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:31:37 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:31:37 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:31:38.082" endtime="20250325 21:31:38.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:38.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:38.083" endtime="20250325 21:31:38.083"/>
</kw>
<status status="PASS" starttime="20250325 21:31:36.899" endtime="20250325 21:31:38.083"/>
</kw>
<msg timestamp="20250325 21:31:38.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:36.899" endtime="20250325 21:31:38.083"/>
</kw>
<msg timestamp="20250325 21:31:38.084" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:31:36 GMT",
    "ContentLength": 10485760,
    "ETag": "\"fa76e019483b851aeaf1585285a28e48-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250325 21:31:36.898" endtime="20250325 21:31:38.084"/>
</kw>
<status status="PASS" starttime="20250325 21:31:36.898" endtime="20250325 21:31:38.084"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:38.087" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:38.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:38.110" level="INFO">${output} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:38.085" endtime="20250325 21:31:38.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:38.111" level="INFO">819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:38.110" endtime="20250325 21:31:38.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:38.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:38.111" endtime="20250325 21:31:38.111"/>
</kw>
<status status="PASS" starttime="20250325 21:31:38.085" endtime="20250325 21:31:38.111"/>
</kw>
<msg timestamp="20250325 21:31:38.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:38.084" endtime="20250325 21:31:38.111"/>
</kw>
<msg timestamp="20250325 21:31:38.111" level="INFO">${checksumbefore} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:38.084" endtime="20250325 21:31:38.111"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:38.115" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:38.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:38.137" level="INFO">${output} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:38.113" endtime="20250325 21:31:38.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:38.138" level="INFO">819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:38.138" endtime="20250325 21:31:38.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:38.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:38.139" endtime="20250325 21:31:38.139"/>
</kw>
<status status="PASS" starttime="20250325 21:31:38.112" endtime="20250325 21:31:38.139"/>
</kw>
<msg timestamp="20250325 21:31:38.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:38.112" endtime="20250325 21:31:38.139"/>
</kw>
<msg timestamp="20250325 21:31:38.139" level="INFO">${checksumafter} = 819dd7d0e65622529339a71e1023b4ca</msg>
<status status="PASS" starttime="20250325 21:31:38.111" endtime="20250325 21:31:38.139"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:38.139" endtime="20250325 21:31:38.140"/>
</kw>
<status status="PASS" starttime="20250325 21:31:38.084" endtime="20250325 21:31:38.140"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:31:28.910" endtime="20250325 21:31:38.140"/>
</test>
<test id="s1-s3-s8-t16" name="Test Multipart Upload list" line="320">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:31:38.142" level="INFO">${randStr} = 2648976766</msg>
<status status="PASS" starttime="20250325 21:31:38.142" endtime="20250325 21:31:38.142"/>
</kw>
<msg timestamp="20250325 21:31:38.142" level="INFO">${random} = ozone-test-2648976766</msg>
<status status="PASS" starttime="20250325 21:31:38.141" endtime="20250325 21:31:38.142"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250325 21:31:38.142" level="INFO">${PREFIX} = ozone-test-2648976766</msg>
<status status="PASS" starttime="20250325 21:31:38.142" endtime="20250325 21:31:38.142"/>
</kw>
<status status="PASS" starttime="20250325 21:31:38.141" endtime="20250325 21:31:38.143"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${uploadIDs}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250325 21:31:38.143" level="INFO">${uploadIDs} = []</msg>
<status status="PASS" starttime="20250325 21:31:38.143" endtime="20250325 21:31:38.143"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>25</value>
<iter>
<var name="${index}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:38.143" level="INFO">${key} = ozone-test-2648976766/listtest/key-0</msg>
<status status="PASS" starttime="20250325 21:31:38.143" endtime="20250325 21:31:38.143"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:38.147" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-0  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:38.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:38.634" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-0",
    "UploadId": "0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275"
}</msg>
<status status="PASS" starttime="20250325 21:31:38.145" endtime="20250325 21:31:38.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:38.635" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-0",
    "UploadId": "0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275"
}</msg>
<status status="PASS" starttime="20250325 21:31:38.634" endtime="20250325 21:31:38.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:38.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:38.635" endtime="20250325 21:31:38.635"/>
</kw>
<msg timestamp="20250325 21:31:38.635" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-0",
    "UploadId": "0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275"
}</msg>
<status status="PASS" starttime="20250325 21:31:38.145" endtime="20250325 21:31:38.636"/>
</kw>
<msg timestamp="20250325 21:31:38.636" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-0",
    "UploadId": "0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275"
}</msg>
<status status="PASS" starttime="20250325 21:31:38.144" endtime="20250325 21:31:38.636"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:38.636" endtime="20250325 21:31:38.636"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:38.636" endtime="20250325 21:31:38.637"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:38.640" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-0",
    "UploadId": "0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:38.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:38.647" level="INFO">${output} = 0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275</msg>
<status status="PASS" starttime="20250325 21:31:38.637" endtime="20250325 21:31:38.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:38.647" level="INFO">0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275</msg>
<status status="PASS" starttime="20250325 21:31:38.647" endtime="20250325 21:31:38.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:38.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:38.648" endtime="20250325 21:31:38.648"/>
</kw>
<msg timestamp="20250325 21:31:38.648" level="INFO">${upload_id} = 0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275</msg>
<status status="PASS" starttime="20250325 21:31:38.637" endtime="20250325 21:31:38.648"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:38.648" endtime="20250325 21:31:38.648"/>
</return>
<status status="PASS" starttime="20250325 21:31:38.636" endtime="20250325 21:31:38.648"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:38.649" endtime="20250325 21:31:38.649"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:38.649" endtime="20250325 21:31:38.649"/>
</branch>
<status status="PASS" starttime="20250325 21:31:38.636" endtime="20250325 21:31:38.649"/>
</if>
<msg timestamp="20250325 21:31:38.649" level="INFO">${uploadID} = 0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275</msg>
<status status="PASS" starttime="20250325 21:31:38.143" endtime="20250325 21:31:38.649"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:38.649" endtime="20250325 21:31:38.649"/>
</kw>
<status status="PASS" starttime="20250325 21:31:38.143" endtime="20250325 21:31:38.649"/>
</iter>
<iter>
<var name="${index}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:38.650" level="INFO">${key} = ozone-test-2648976766/listtest/key-1</msg>
<status status="PASS" starttime="20250325 21:31:38.650" endtime="20250325 21:31:38.650"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:38.654" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-1  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:39.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:39.144" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-1",
    "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708"
}</msg>
<status status="PASS" starttime="20250325 21:31:38.652" endtime="20250325 21:31:39.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:39.145" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-1",
    "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708"
}</msg>
<status status="PASS" starttime="20250325 21:31:39.144" endtime="20250325 21:31:39.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:39.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:39.145" endtime="20250325 21:31:39.145"/>
</kw>
<msg timestamp="20250325 21:31:39.145" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-1",
    "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708"
}</msg>
<status status="PASS" starttime="20250325 21:31:38.651" endtime="20250325 21:31:39.145"/>
</kw>
<msg timestamp="20250325 21:31:39.145" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-1",
    "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708"
}</msg>
<status status="PASS" starttime="20250325 21:31:38.651" endtime="20250325 21:31:39.145"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:39.146" endtime="20250325 21:31:39.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:39.146" endtime="20250325 21:31:39.146"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:39.150" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-1",
    "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:39.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:39.155" level="INFO">${output} = 0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708</msg>
<status status="PASS" starttime="20250325 21:31:39.147" endtime="20250325 21:31:39.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:39.155" level="INFO">0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708</msg>
<status status="PASS" starttime="20250325 21:31:39.155" endtime="20250325 21:31:39.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:39.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:39.156" endtime="20250325 21:31:39.156"/>
</kw>
<msg timestamp="20250325 21:31:39.156" level="INFO">${upload_id} = 0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708</msg>
<status status="PASS" starttime="20250325 21:31:39.147" endtime="20250325 21:31:39.156"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:39.156" endtime="20250325 21:31:39.156"/>
</return>
<status status="PASS" starttime="20250325 21:31:39.146" endtime="20250325 21:31:39.156"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:39.156" endtime="20250325 21:31:39.156"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:39.156" endtime="20250325 21:31:39.157"/>
</branch>
<status status="PASS" starttime="20250325 21:31:39.146" endtime="20250325 21:31:39.157"/>
</if>
<msg timestamp="20250325 21:31:39.157" level="INFO">${uploadID} = 0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708</msg>
<status status="PASS" starttime="20250325 21:31:38.650" endtime="20250325 21:31:39.157"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:39.157" endtime="20250325 21:31:39.157"/>
</kw>
<status status="PASS" starttime="20250325 21:31:38.649" endtime="20250325 21:31:39.157"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:39.158" level="INFO">${key} = ozone-test-2648976766/listtest/key-2</msg>
<status status="PASS" starttime="20250325 21:31:39.157" endtime="20250325 21:31:39.158"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:39.161" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-2  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:39.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:39.645" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-2",
    "UploadId": "0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317"
}</msg>
<status status="PASS" starttime="20250325 21:31:39.159" endtime="20250325 21:31:39.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:39.646" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-2",
    "UploadId": "0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317"
}</msg>
<status status="PASS" starttime="20250325 21:31:39.646" endtime="20250325 21:31:39.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:39.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:39.646" endtime="20250325 21:31:39.647"/>
</kw>
<msg timestamp="20250325 21:31:39.647" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-2",
    "UploadId": "0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317"
}</msg>
<status status="PASS" starttime="20250325 21:31:39.159" endtime="20250325 21:31:39.647"/>
</kw>
<msg timestamp="20250325 21:31:39.647" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-2",
    "UploadId": "0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317"
}</msg>
<status status="PASS" starttime="20250325 21:31:39.159" endtime="20250325 21:31:39.647"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:39.647" endtime="20250325 21:31:39.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:39.648" endtime="20250325 21:31:39.648"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:39.650" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-2",
    "UploadId": "0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:39.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:39.655" level="INFO">${output} = 0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317</msg>
<status status="PASS" starttime="20250325 21:31:39.648" endtime="20250325 21:31:39.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:39.656" level="INFO">0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317</msg>
<status status="PASS" starttime="20250325 21:31:39.656" endtime="20250325 21:31:39.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:39.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:39.656" endtime="20250325 21:31:39.657"/>
</kw>
<msg timestamp="20250325 21:31:39.657" level="INFO">${upload_id} = 0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317</msg>
<status status="PASS" starttime="20250325 21:31:39.648" endtime="20250325 21:31:39.657"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:39.657" endtime="20250325 21:31:39.657"/>
</return>
<status status="PASS" starttime="20250325 21:31:39.647" endtime="20250325 21:31:39.657"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:39.657" endtime="20250325 21:31:39.657"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:39.657" endtime="20250325 21:31:39.657"/>
</branch>
<status status="PASS" starttime="20250325 21:31:39.647" endtime="20250325 21:31:39.657"/>
</if>
<msg timestamp="20250325 21:31:39.657" level="INFO">${uploadID} = 0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317</msg>
<status status="PASS" starttime="20250325 21:31:39.158" endtime="20250325 21:31:39.657"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:39.658" endtime="20250325 21:31:39.658"/>
</kw>
<status status="PASS" starttime="20250325 21:31:39.157" endtime="20250325 21:31:39.658"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:39.658" level="INFO">${key} = ozone-test-2648976766/listtest/key-3</msg>
<status status="PASS" starttime="20250325 21:31:39.658" endtime="20250325 21:31:39.658"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:39.662" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-3  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:40.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:40.139" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-3",
    "UploadId": "0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318"
}</msg>
<status status="PASS" starttime="20250325 21:31:39.660" endtime="20250325 21:31:40.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:40.140" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-3",
    "UploadId": "0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318"
}</msg>
<status status="PASS" starttime="20250325 21:31:40.139" endtime="20250325 21:31:40.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:40.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:40.140" endtime="20250325 21:31:40.140"/>
</kw>
<msg timestamp="20250325 21:31:40.140" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-3",
    "UploadId": "0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318"
}</msg>
<status status="PASS" starttime="20250325 21:31:39.660" endtime="20250325 21:31:40.140"/>
</kw>
<msg timestamp="20250325 21:31:40.141" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-3",
    "UploadId": "0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318"
}</msg>
<status status="PASS" starttime="20250325 21:31:39.659" endtime="20250325 21:31:40.141"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:40.141" endtime="20250325 21:31:40.141"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:40.141" endtime="20250325 21:31:40.142"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:40.144" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-3",
    "UploadId": "0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:40.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:40.149" level="INFO">${output} = 0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318</msg>
<status status="PASS" starttime="20250325 21:31:40.142" endtime="20250325 21:31:40.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:40.150" level="INFO">0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318</msg>
<status status="PASS" starttime="20250325 21:31:40.150" endtime="20250325 21:31:40.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:40.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:40.150" endtime="20250325 21:31:40.151"/>
</kw>
<msg timestamp="20250325 21:31:40.151" level="INFO">${upload_id} = 0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318</msg>
<status status="PASS" starttime="20250325 21:31:40.142" endtime="20250325 21:31:40.151"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:40.151" endtime="20250325 21:31:40.151"/>
</return>
<status status="PASS" starttime="20250325 21:31:40.141" endtime="20250325 21:31:40.151"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:40.151" endtime="20250325 21:31:40.151"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:40.151" endtime="20250325 21:31:40.151"/>
</branch>
<status status="PASS" starttime="20250325 21:31:40.141" endtime="20250325 21:31:40.151"/>
</if>
<msg timestamp="20250325 21:31:40.151" level="INFO">${uploadID} = 0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318</msg>
<status status="PASS" starttime="20250325 21:31:39.658" endtime="20250325 21:31:40.151"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:40.151" endtime="20250325 21:31:40.152"/>
</kw>
<status status="PASS" starttime="20250325 21:31:39.658" endtime="20250325 21:31:40.152"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:40.152" level="INFO">${key} = ozone-test-2648976766/listtest/key-4</msg>
<status status="PASS" starttime="20250325 21:31:40.152" endtime="20250325 21:31:40.152"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:40.156" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-4  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:40.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:40.624" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-4",
    "UploadId": "0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279"
}</msg>
<status status="PASS" starttime="20250325 21:31:40.154" endtime="20250325 21:31:40.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:40.625" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-4",
    "UploadId": "0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279"
}</msg>
<status status="PASS" starttime="20250325 21:31:40.624" endtime="20250325 21:31:40.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:40.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:40.625" endtime="20250325 21:31:40.625"/>
</kw>
<msg timestamp="20250325 21:31:40.626" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-4",
    "UploadId": "0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279"
}</msg>
<status status="PASS" starttime="20250325 21:31:40.153" endtime="20250325 21:31:40.626"/>
</kw>
<msg timestamp="20250325 21:31:40.626" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-4",
    "UploadId": "0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279"
}</msg>
<status status="PASS" starttime="20250325 21:31:40.153" endtime="20250325 21:31:40.626"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:40.626" endtime="20250325 21:31:40.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:40.626" endtime="20250325 21:31:40.627"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:40.629" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-4",
    "UploadId": "0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:40.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:40.635" level="INFO">${output} = 0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279</msg>
<status status="PASS" starttime="20250325 21:31:40.627" endtime="20250325 21:31:40.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:40.636" level="INFO">0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279</msg>
<status status="PASS" starttime="20250325 21:31:40.635" endtime="20250325 21:31:40.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:40.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:40.636" endtime="20250325 21:31:40.637"/>
</kw>
<msg timestamp="20250325 21:31:40.637" level="INFO">${upload_id} = 0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279</msg>
<status status="PASS" starttime="20250325 21:31:40.627" endtime="20250325 21:31:40.637"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:40.637" endtime="20250325 21:31:40.637"/>
</return>
<status status="PASS" starttime="20250325 21:31:40.626" endtime="20250325 21:31:40.637"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:40.637" endtime="20250325 21:31:40.637"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:40.637" endtime="20250325 21:31:40.637"/>
</branch>
<status status="PASS" starttime="20250325 21:31:40.626" endtime="20250325 21:31:40.637"/>
</if>
<msg timestamp="20250325 21:31:40.638" level="INFO">${uploadID} = 0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279</msg>
<status status="PASS" starttime="20250325 21:31:40.152" endtime="20250325 21:31:40.638"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:40.638" endtime="20250325 21:31:40.638"/>
</kw>
<status status="PASS" starttime="20250325 21:31:40.152" endtime="20250325 21:31:40.638"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:40.639" level="INFO">${key} = ozone-test-2648976766/listtest/key-5</msg>
<status status="PASS" starttime="20250325 21:31:40.638" endtime="20250325 21:31:40.639"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:40.643" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-5  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:41.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:41.124" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-5",
    "UploadId": "0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136"
}</msg>
<status status="PASS" starttime="20250325 21:31:40.641" endtime="20250325 21:31:41.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:41.125" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-5",
    "UploadId": "0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136"
}</msg>
<status status="PASS" starttime="20250325 21:31:41.125" endtime="20250325 21:31:41.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:41.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:41.126" endtime="20250325 21:31:41.126"/>
</kw>
<msg timestamp="20250325 21:31:41.126" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-5",
    "UploadId": "0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136"
}</msg>
<status status="PASS" starttime="20250325 21:31:40.641" endtime="20250325 21:31:41.126"/>
</kw>
<msg timestamp="20250325 21:31:41.126" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-5",
    "UploadId": "0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136"
}</msg>
<status status="PASS" starttime="20250325 21:31:40.640" endtime="20250325 21:31:41.126"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:41.127" endtime="20250325 21:31:41.127"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:41.127" endtime="20250325 21:31:41.127"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:41.130" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-5",
    "UploadId": "0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:41.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:41.135" level="INFO">${output} = 0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136</msg>
<status status="PASS" starttime="20250325 21:31:41.128" endtime="20250325 21:31:41.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:41.136" level="INFO">0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136</msg>
<status status="PASS" starttime="20250325 21:31:41.135" endtime="20250325 21:31:41.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:41.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:41.136" endtime="20250325 21:31:41.136"/>
</kw>
<msg timestamp="20250325 21:31:41.136" level="INFO">${upload_id} = 0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136</msg>
<status status="PASS" starttime="20250325 21:31:41.127" endtime="20250325 21:31:41.137"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:41.137" endtime="20250325 21:31:41.137"/>
</return>
<status status="PASS" starttime="20250325 21:31:41.126" endtime="20250325 21:31:41.137"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:41.137" endtime="20250325 21:31:41.137"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:41.137" endtime="20250325 21:31:41.137"/>
</branch>
<status status="PASS" starttime="20250325 21:31:41.126" endtime="20250325 21:31:41.137"/>
</if>
<msg timestamp="20250325 21:31:41.137" level="INFO">${uploadID} = 0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136</msg>
<status status="PASS" starttime="20250325 21:31:40.639" endtime="20250325 21:31:41.137"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:41.137" endtime="20250325 21:31:41.137"/>
</kw>
<status status="PASS" starttime="20250325 21:31:40.638" endtime="20250325 21:31:41.137"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:41.138" level="INFO">${key} = ozone-test-2648976766/listtest/key-6</msg>
<status status="PASS" starttime="20250325 21:31:41.138" endtime="20250325 21:31:41.138"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:41.141" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-6  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:41.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:41.615" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-6",
    "UploadId": "0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921"
}</msg>
<status status="PASS" starttime="20250325 21:31:41.140" endtime="20250325 21:31:41.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:41.616" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-6",
    "UploadId": "0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921"
}</msg>
<status status="PASS" starttime="20250325 21:31:41.615" endtime="20250325 21:31:41.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:41.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:41.616" endtime="20250325 21:31:41.616"/>
</kw>
<msg timestamp="20250325 21:31:41.616" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-6",
    "UploadId": "0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921"
}</msg>
<status status="PASS" starttime="20250325 21:31:41.139" endtime="20250325 21:31:41.616"/>
</kw>
<msg timestamp="20250325 21:31:41.617" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-6",
    "UploadId": "0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921"
}</msg>
<status status="PASS" starttime="20250325 21:31:41.139" endtime="20250325 21:31:41.617"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:41.617" endtime="20250325 21:31:41.617"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:41.617" endtime="20250325 21:31:41.618"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:41.620" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-6",
    "UploadId": "0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:41.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:41.625" level="INFO">${output} = 0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921</msg>
<status status="PASS" starttime="20250325 21:31:41.618" endtime="20250325 21:31:41.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:41.626" level="INFO">0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921</msg>
<status status="PASS" starttime="20250325 21:31:41.626" endtime="20250325 21:31:41.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:41.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:41.626" endtime="20250325 21:31:41.627"/>
</kw>
<msg timestamp="20250325 21:31:41.627" level="INFO">${upload_id} = 0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921</msg>
<status status="PASS" starttime="20250325 21:31:41.618" endtime="20250325 21:31:41.627"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:41.627" endtime="20250325 21:31:41.627"/>
</return>
<status status="PASS" starttime="20250325 21:31:41.617" endtime="20250325 21:31:41.627"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:41.627" endtime="20250325 21:31:41.627"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:41.627" endtime="20250325 21:31:41.627"/>
</branch>
<status status="PASS" starttime="20250325 21:31:41.617" endtime="20250325 21:31:41.627"/>
</if>
<msg timestamp="20250325 21:31:41.627" level="INFO">${uploadID} = 0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921</msg>
<status status="PASS" starttime="20250325 21:31:41.138" endtime="20250325 21:31:41.627"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:41.627" endtime="20250325 21:31:41.628"/>
</kw>
<status status="PASS" starttime="20250325 21:31:41.138" endtime="20250325 21:31:41.628"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:41.628" level="INFO">${key} = ozone-test-2648976766/listtest/key-7</msg>
<status status="PASS" starttime="20250325 21:31:41.628" endtime="20250325 21:31:41.628"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:41.632" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-7  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:42.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:42.106" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-7",
    "UploadId": "0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562"
}</msg>
<status status="PASS" starttime="20250325 21:31:41.630" endtime="20250325 21:31:42.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:42.107" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-7",
    "UploadId": "0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562"
}</msg>
<status status="PASS" starttime="20250325 21:31:42.106" endtime="20250325 21:31:42.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:42.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:42.107" endtime="20250325 21:31:42.107"/>
</kw>
<msg timestamp="20250325 21:31:42.107" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-7",
    "UploadId": "0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562"
}</msg>
<status status="PASS" starttime="20250325 21:31:41.630" endtime="20250325 21:31:42.107"/>
</kw>
<msg timestamp="20250325 21:31:42.107" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-7",
    "UploadId": "0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562"
}</msg>
<status status="PASS" starttime="20250325 21:31:41.629" endtime="20250325 21:31:42.107"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:42.108" endtime="20250325 21:31:42.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:42.108" endtime="20250325 21:31:42.108"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:42.111" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-7",
    "UploadId": "0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:42.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:42.116" level="INFO">${output} = 0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562</msg>
<status status="PASS" starttime="20250325 21:31:42.109" endtime="20250325 21:31:42.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:42.117" level="INFO">0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562</msg>
<status status="PASS" starttime="20250325 21:31:42.117" endtime="20250325 21:31:42.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:42.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:42.117" endtime="20250325 21:31:42.118"/>
</kw>
<msg timestamp="20250325 21:31:42.118" level="INFO">${upload_id} = 0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562</msg>
<status status="PASS" starttime="20250325 21:31:42.108" endtime="20250325 21:31:42.118"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:42.118" endtime="20250325 21:31:42.118"/>
</return>
<status status="PASS" starttime="20250325 21:31:42.108" endtime="20250325 21:31:42.118"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:42.118" endtime="20250325 21:31:42.118"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:42.118" endtime="20250325 21:31:42.118"/>
</branch>
<status status="PASS" starttime="20250325 21:31:42.108" endtime="20250325 21:31:42.118"/>
</if>
<msg timestamp="20250325 21:31:42.118" level="INFO">${uploadID} = 0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562</msg>
<status status="PASS" starttime="20250325 21:31:41.628" endtime="20250325 21:31:42.118"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:42.118" endtime="20250325 21:31:42.119"/>
</kw>
<status status="PASS" starttime="20250325 21:31:41.628" endtime="20250325 21:31:42.119"/>
</iter>
<iter>
<var name="${index}">8</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:42.119" level="INFO">${key} = ozone-test-2648976766/listtest/key-8</msg>
<status status="PASS" starttime="20250325 21:31:42.119" endtime="20250325 21:31:42.119"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:42.123" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-8  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:42.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:42.584" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-8",
    "UploadId": "0195cf37-e848-7277-8a86-e7c081115853-114225204594999379"
}</msg>
<status status="PASS" starttime="20250325 21:31:42.121" endtime="20250325 21:31:42.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:42.585" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-8",
    "UploadId": "0195cf37-e848-7277-8a86-e7c081115853-114225204594999379"
}</msg>
<status status="PASS" starttime="20250325 21:31:42.585" endtime="20250325 21:31:42.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:42.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:42.585" endtime="20250325 21:31:42.586"/>
</kw>
<msg timestamp="20250325 21:31:42.586" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-8",
    "UploadId": "0195cf37-e848-7277-8a86-e7c081115853-114225204594999379"
}</msg>
<status status="PASS" starttime="20250325 21:31:42.120" endtime="20250325 21:31:42.586"/>
</kw>
<msg timestamp="20250325 21:31:42.586" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-8",
    "UploadId": "0195cf37-e848-7277-8a86-e7c081115853-114225204594999379"
}</msg>
<status status="PASS" starttime="20250325 21:31:42.120" endtime="20250325 21:31:42.586"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:42.586" endtime="20250325 21:31:42.587"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:42.587" endtime="20250325 21:31:42.587"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:42.590" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-8",
    "UploadId": "0195cf37-e848-7277-8a86-e7c081115853-114225204594999379"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:42.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:42.595" level="INFO">${output} = 0195cf37-e848-7277-8a86-e7c081115853-114225204594999379</msg>
<status status="PASS" starttime="20250325 21:31:42.587" endtime="20250325 21:31:42.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:42.595" level="INFO">0195cf37-e848-7277-8a86-e7c081115853-114225204594999379</msg>
<status status="PASS" starttime="20250325 21:31:42.595" endtime="20250325 21:31:42.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:42.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:42.596" endtime="20250325 21:31:42.596"/>
</kw>
<msg timestamp="20250325 21:31:42.596" level="INFO">${upload_id} = 0195cf37-e848-7277-8a86-e7c081115853-114225204594999379</msg>
<status status="PASS" starttime="20250325 21:31:42.587" endtime="20250325 21:31:42.596"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:42.596" endtime="20250325 21:31:42.596"/>
</return>
<status status="PASS" starttime="20250325 21:31:42.586" endtime="20250325 21:31:42.596"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:42.596" endtime="20250325 21:31:42.596"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:42.596" endtime="20250325 21:31:42.596"/>
</branch>
<status status="PASS" starttime="20250325 21:31:42.586" endtime="20250325 21:31:42.596"/>
</if>
<msg timestamp="20250325 21:31:42.597" level="INFO">${uploadID} = 0195cf37-e848-7277-8a86-e7c081115853-114225204594999379</msg>
<status status="PASS" starttime="20250325 21:31:42.119" endtime="20250325 21:31:42.597"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:42.597" endtime="20250325 21:31:42.597"/>
</kw>
<status status="PASS" starttime="20250325 21:31:42.119" endtime="20250325 21:31:42.597"/>
</iter>
<iter>
<var name="${index}">9</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:42.597" level="INFO">${key} = ozone-test-2648976766/listtest/key-9</msg>
<status status="PASS" starttime="20250325 21:31:42.597" endtime="20250325 21:31:42.597"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:42.601" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-9  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:43.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:43.069" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-9",
    "UploadId": "0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804"
}</msg>
<status status="PASS" starttime="20250325 21:31:42.599" endtime="20250325 21:31:43.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:43.070" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-9",
    "UploadId": "0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804"
}</msg>
<status status="PASS" starttime="20250325 21:31:43.070" endtime="20250325 21:31:43.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:43.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:43.070" endtime="20250325 21:31:43.071"/>
</kw>
<msg timestamp="20250325 21:31:43.071" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-9",
    "UploadId": "0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804"
}</msg>
<status status="PASS" starttime="20250325 21:31:42.599" endtime="20250325 21:31:43.071"/>
</kw>
<msg timestamp="20250325 21:31:43.071" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-9",
    "UploadId": "0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804"
}</msg>
<status status="PASS" starttime="20250325 21:31:42.598" endtime="20250325 21:31:43.071"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:43.072" endtime="20250325 21:31:43.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:43.072" endtime="20250325 21:31:43.072"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:43.075" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-9",
    "UploadId": "0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:43.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:43.080" level="INFO">${output} = 0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804</msg>
<status status="PASS" starttime="20250325 21:31:43.073" endtime="20250325 21:31:43.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:43.081" level="INFO">0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804</msg>
<status status="PASS" starttime="20250325 21:31:43.081" endtime="20250325 21:31:43.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:43.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:43.081" endtime="20250325 21:31:43.081"/>
</kw>
<msg timestamp="20250325 21:31:43.082" level="INFO">${upload_id} = 0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804</msg>
<status status="PASS" starttime="20250325 21:31:43.072" endtime="20250325 21:31:43.082"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:43.082" endtime="20250325 21:31:43.082"/>
</return>
<status status="PASS" starttime="20250325 21:31:43.071" endtime="20250325 21:31:43.082"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:43.082" endtime="20250325 21:31:43.082"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:43.082" endtime="20250325 21:31:43.082"/>
</branch>
<status status="PASS" starttime="20250325 21:31:43.071" endtime="20250325 21:31:43.082"/>
</if>
<msg timestamp="20250325 21:31:43.082" level="INFO">${uploadID} = 0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804</msg>
<status status="PASS" starttime="20250325 21:31:42.598" endtime="20250325 21:31:43.082"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:43.082" endtime="20250325 21:31:43.082"/>
</kw>
<status status="PASS" starttime="20250325 21:31:42.597" endtime="20250325 21:31:43.083"/>
</iter>
<iter>
<var name="${index}">10</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:43.083" level="INFO">${key} = ozone-test-2648976766/listtest/key-10</msg>
<status status="PASS" starttime="20250325 21:31:43.083" endtime="20250325 21:31:43.083"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:43.087" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-10  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:43.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:43.561" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-10",
    "UploadId": "0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517"
}</msg>
<status status="PASS" starttime="20250325 21:31:43.085" endtime="20250325 21:31:43.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:43.562" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-10",
    "UploadId": "0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517"
}</msg>
<status status="PASS" starttime="20250325 21:31:43.562" endtime="20250325 21:31:43.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:43.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:43.562" endtime="20250325 21:31:43.563"/>
</kw>
<msg timestamp="20250325 21:31:43.563" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-10",
    "UploadId": "0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517"
}</msg>
<status status="PASS" starttime="20250325 21:31:43.084" endtime="20250325 21:31:43.563"/>
</kw>
<msg timestamp="20250325 21:31:43.563" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-10",
    "UploadId": "0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517"
}</msg>
<status status="PASS" starttime="20250325 21:31:43.084" endtime="20250325 21:31:43.563"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:43.564" endtime="20250325 21:31:43.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:43.564" endtime="20250325 21:31:43.564"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:43.567" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-10",
    "UploadId": "0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:43.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:43.572" level="INFO">${output} = 0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517</msg>
<status status="PASS" starttime="20250325 21:31:43.565" endtime="20250325 21:31:43.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:43.573" level="INFO">0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517</msg>
<status status="PASS" starttime="20250325 21:31:43.572" endtime="20250325 21:31:43.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:43.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:43.573" endtime="20250325 21:31:43.573"/>
</kw>
<msg timestamp="20250325 21:31:43.573" level="INFO">${upload_id} = 0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517</msg>
<status status="PASS" starttime="20250325 21:31:43.564" endtime="20250325 21:31:43.573"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:43.574" endtime="20250325 21:31:43.574"/>
</return>
<status status="PASS" starttime="20250325 21:31:43.563" endtime="20250325 21:31:43.574"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:43.574" endtime="20250325 21:31:43.574"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:43.574" endtime="20250325 21:31:43.574"/>
</branch>
<status status="PASS" starttime="20250325 21:31:43.563" endtime="20250325 21:31:43.574"/>
</if>
<msg timestamp="20250325 21:31:43.574" level="INFO">${uploadID} = 0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517</msg>
<status status="PASS" starttime="20250325 21:31:43.083" endtime="20250325 21:31:43.574"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:43.574" endtime="20250325 21:31:43.574"/>
</kw>
<status status="PASS" starttime="20250325 21:31:43.083" endtime="20250325 21:31:43.574"/>
</iter>
<iter>
<var name="${index}">11</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:43.575" level="INFO">${key} = ozone-test-2648976766/listtest/key-11</msg>
<status status="PASS" starttime="20250325 21:31:43.575" endtime="20250325 21:31:43.575"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:43.578" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-11  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:44.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:44.105" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-11",
    "UploadId": "0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350"
}</msg>
<status status="PASS" starttime="20250325 21:31:43.577" endtime="20250325 21:31:44.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:44.106" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-11",
    "UploadId": "0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350"
}</msg>
<status status="PASS" starttime="20250325 21:31:44.106" endtime="20250325 21:31:44.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:44.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:44.106" endtime="20250325 21:31:44.107"/>
</kw>
<msg timestamp="20250325 21:31:44.107" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-11",
    "UploadId": "0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350"
}</msg>
<status status="PASS" starttime="20250325 21:31:43.576" endtime="20250325 21:31:44.107"/>
</kw>
<msg timestamp="20250325 21:31:44.107" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-11",
    "UploadId": "0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350"
}</msg>
<status status="PASS" starttime="20250325 21:31:43.576" endtime="20250325 21:31:44.107"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:44.108" endtime="20250325 21:31:44.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:44.108" endtime="20250325 21:31:44.108"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:44.111" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-11",
    "UploadId": "0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:44.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:44.116" level="INFO">${output} = 0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350</msg>
<status status="PASS" starttime="20250325 21:31:44.109" endtime="20250325 21:31:44.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:44.117" level="INFO">0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350</msg>
<status status="PASS" starttime="20250325 21:31:44.117" endtime="20250325 21:31:44.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:44.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:44.117" endtime="20250325 21:31:44.118"/>
</kw>
<msg timestamp="20250325 21:31:44.118" level="INFO">${upload_id} = 0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350</msg>
<status status="PASS" starttime="20250325 21:31:44.108" endtime="20250325 21:31:44.118"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:44.118" endtime="20250325 21:31:44.118"/>
</return>
<status status="PASS" starttime="20250325 21:31:44.107" endtime="20250325 21:31:44.118"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:44.118" endtime="20250325 21:31:44.118"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:44.118" endtime="20250325 21:31:44.118"/>
</branch>
<status status="PASS" starttime="20250325 21:31:44.107" endtime="20250325 21:31:44.118"/>
</if>
<msg timestamp="20250325 21:31:44.118" level="INFO">${uploadID} = 0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350</msg>
<status status="PASS" starttime="20250325 21:31:43.575" endtime="20250325 21:31:44.118"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:44.118" endtime="20250325 21:31:44.119"/>
</kw>
<status status="PASS" starttime="20250325 21:31:43.574" endtime="20250325 21:31:44.119"/>
</iter>
<iter>
<var name="${index}">12</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:44.119" level="INFO">${key} = ozone-test-2648976766/listtest/key-12</msg>
<status status="PASS" starttime="20250325 21:31:44.119" endtime="20250325 21:31:44.119"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:44.123" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-12  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:44.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:44.595" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-12",
    "UploadId": "0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671"
}</msg>
<status status="PASS" starttime="20250325 21:31:44.121" endtime="20250325 21:31:44.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:44.596" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-12",
    "UploadId": "0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671"
}</msg>
<status status="PASS" starttime="20250325 21:31:44.595" endtime="20250325 21:31:44.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:44.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:44.596" endtime="20250325 21:31:44.596"/>
</kw>
<msg timestamp="20250325 21:31:44.596" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-12",
    "UploadId": "0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671"
}</msg>
<status status="PASS" starttime="20250325 21:31:44.120" endtime="20250325 21:31:44.596"/>
</kw>
<msg timestamp="20250325 21:31:44.596" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-12",
    "UploadId": "0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671"
}</msg>
<status status="PASS" starttime="20250325 21:31:44.120" endtime="20250325 21:31:44.597"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:44.597" endtime="20250325 21:31:44.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:44.597" endtime="20250325 21:31:44.597"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:44.600" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-12",
    "UploadId": "0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:44.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:44.605" level="INFO">${output} = 0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671</msg>
<status status="PASS" starttime="20250325 21:31:44.598" endtime="20250325 21:31:44.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:44.606" level="INFO">0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671</msg>
<status status="PASS" starttime="20250325 21:31:44.605" endtime="20250325 21:31:44.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:44.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:44.606" endtime="20250325 21:31:44.606"/>
</kw>
<msg timestamp="20250325 21:31:44.606" level="INFO">${upload_id} = 0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671</msg>
<status status="PASS" starttime="20250325 21:31:44.597" endtime="20250325 21:31:44.606"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:44.606" endtime="20250325 21:31:44.607"/>
</return>
<status status="PASS" starttime="20250325 21:31:44.597" endtime="20250325 21:31:44.607"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:44.607" endtime="20250325 21:31:44.607"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:44.607" endtime="20250325 21:31:44.607"/>
</branch>
<status status="PASS" starttime="20250325 21:31:44.597" endtime="20250325 21:31:44.607"/>
</if>
<msg timestamp="20250325 21:31:44.607" level="INFO">${uploadID} = 0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671</msg>
<status status="PASS" starttime="20250325 21:31:44.119" endtime="20250325 21:31:44.607"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:44.607" endtime="20250325 21:31:44.607"/>
</kw>
<status status="PASS" starttime="20250325 21:31:44.119" endtime="20250325 21:31:44.607"/>
</iter>
<iter>
<var name="${index}">13</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:44.608" level="INFO">${key} = ozone-test-2648976766/listtest/key-13</msg>
<status status="PASS" starttime="20250325 21:31:44.608" endtime="20250325 21:31:44.608"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:44.612" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-13  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:45.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:45.082" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-13",
    "UploadId": "0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632"
}</msg>
<status status="PASS" starttime="20250325 21:31:44.609" endtime="20250325 21:31:45.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:45.083" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-13",
    "UploadId": "0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632"
}</msg>
<status status="PASS" starttime="20250325 21:31:45.083" endtime="20250325 21:31:45.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:45.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:45.083" endtime="20250325 21:31:45.084"/>
</kw>
<msg timestamp="20250325 21:31:45.084" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-13",
    "UploadId": "0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632"
}</msg>
<status status="PASS" starttime="20250325 21:31:44.609" endtime="20250325 21:31:45.084"/>
</kw>
<msg timestamp="20250325 21:31:45.084" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-13",
    "UploadId": "0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632"
}</msg>
<status status="PASS" starttime="20250325 21:31:44.609" endtime="20250325 21:31:45.084"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:45.084" endtime="20250325 21:31:45.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:45.085" endtime="20250325 21:31:45.085"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:45.087" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-13",
    "UploadId": "0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:45.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:45.092" level="INFO">${output} = 0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632</msg>
<status status="PASS" starttime="20250325 21:31:45.085" endtime="20250325 21:31:45.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:45.093" level="INFO">0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632</msg>
<status status="PASS" starttime="20250325 21:31:45.093" endtime="20250325 21:31:45.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:45.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:45.093" endtime="20250325 21:31:45.094"/>
</kw>
<msg timestamp="20250325 21:31:45.094" level="INFO">${upload_id} = 0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632</msg>
<status status="PASS" starttime="20250325 21:31:45.085" endtime="20250325 21:31:45.094"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:45.094" endtime="20250325 21:31:45.094"/>
</return>
<status status="PASS" starttime="20250325 21:31:45.084" endtime="20250325 21:31:45.094"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:45.094" endtime="20250325 21:31:45.094"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:45.094" endtime="20250325 21:31:45.094"/>
</branch>
<status status="PASS" starttime="20250325 21:31:45.084" endtime="20250325 21:31:45.094"/>
</if>
<msg timestamp="20250325 21:31:45.094" level="INFO">${uploadID} = 0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632</msg>
<status status="PASS" starttime="20250325 21:31:44.608" endtime="20250325 21:31:45.094"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:45.094" endtime="20250325 21:31:45.095"/>
</kw>
<status status="PASS" starttime="20250325 21:31:44.607" endtime="20250325 21:31:45.095"/>
</iter>
<iter>
<var name="${index}">14</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:45.095" level="INFO">${key} = ozone-test-2648976766/listtest/key-14</msg>
<status status="PASS" starttime="20250325 21:31:45.095" endtime="20250325 21:31:45.095"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:45.099" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-14  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:45.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:45.571" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-14",
    "UploadId": "0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881"
}</msg>
<status status="PASS" starttime="20250325 21:31:45.097" endtime="20250325 21:31:45.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:45.572" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-14",
    "UploadId": "0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881"
}</msg>
<status status="PASS" starttime="20250325 21:31:45.571" endtime="20250325 21:31:45.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:45.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:45.572" endtime="20250325 21:31:45.572"/>
</kw>
<msg timestamp="20250325 21:31:45.573" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-14",
    "UploadId": "0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881"
}</msg>
<status status="PASS" starttime="20250325 21:31:45.096" endtime="20250325 21:31:45.573"/>
</kw>
<msg timestamp="20250325 21:31:45.573" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-14",
    "UploadId": "0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881"
}</msg>
<status status="PASS" starttime="20250325 21:31:45.096" endtime="20250325 21:31:45.573"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:45.573" endtime="20250325 21:31:45.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:45.574" endtime="20250325 21:31:45.574"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:45.577" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-14",
    "UploadId": "0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:45.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:45.582" level="INFO">${output} = 0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881</msg>
<status status="PASS" starttime="20250325 21:31:45.574" endtime="20250325 21:31:45.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:45.582" level="INFO">0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881</msg>
<status status="PASS" starttime="20250325 21:31:45.582" endtime="20250325 21:31:45.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:45.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:45.582" endtime="20250325 21:31:45.583"/>
</kw>
<msg timestamp="20250325 21:31:45.583" level="INFO">${upload_id} = 0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881</msg>
<status status="PASS" starttime="20250325 21:31:45.574" endtime="20250325 21:31:45.583"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:45.583" endtime="20250325 21:31:45.583"/>
</return>
<status status="PASS" starttime="20250325 21:31:45.573" endtime="20250325 21:31:45.583"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:45.583" endtime="20250325 21:31:45.583"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:45.583" endtime="20250325 21:31:45.583"/>
</branch>
<status status="PASS" starttime="20250325 21:31:45.573" endtime="20250325 21:31:45.583"/>
</if>
<msg timestamp="20250325 21:31:45.583" level="INFO">${uploadID} = 0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881</msg>
<status status="PASS" starttime="20250325 21:31:45.095" endtime="20250325 21:31:45.583"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:45.583" endtime="20250325 21:31:45.584"/>
</kw>
<status status="PASS" starttime="20250325 21:31:45.095" endtime="20250325 21:31:45.584"/>
</iter>
<iter>
<var name="${index}">15</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:45.584" level="INFO">${key} = ozone-test-2648976766/listtest/key-15</msg>
<status status="PASS" starttime="20250325 21:31:45.584" endtime="20250325 21:31:45.584"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:45.588" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-15  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:46.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:46.066" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-15",
    "UploadId": "0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450"
}</msg>
<status status="PASS" starttime="20250325 21:31:45.586" endtime="20250325 21:31:46.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:46.067" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-15",
    "UploadId": "0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450"
}</msg>
<status status="PASS" starttime="20250325 21:31:46.067" endtime="20250325 21:31:46.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:46.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:46.068" endtime="20250325 21:31:46.068"/>
</kw>
<msg timestamp="20250325 21:31:46.068" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-15",
    "UploadId": "0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450"
}</msg>
<status status="PASS" starttime="20250325 21:31:45.586" endtime="20250325 21:31:46.068"/>
</kw>
<msg timestamp="20250325 21:31:46.068" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-15",
    "UploadId": "0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450"
}</msg>
<status status="PASS" starttime="20250325 21:31:45.585" endtime="20250325 21:31:46.068"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:46.069" endtime="20250325 21:31:46.069"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:46.069" endtime="20250325 21:31:46.069"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:46.072" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-15",
    "UploadId": "0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:46.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:46.077" level="INFO">${output} = 0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450</msg>
<status status="PASS" starttime="20250325 21:31:46.070" endtime="20250325 21:31:46.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:46.078" level="INFO">0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450</msg>
<status status="PASS" starttime="20250325 21:31:46.078" endtime="20250325 21:31:46.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:46.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:46.078" endtime="20250325 21:31:46.079"/>
</kw>
<msg timestamp="20250325 21:31:46.079" level="INFO">${upload_id} = 0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450</msg>
<status status="PASS" starttime="20250325 21:31:46.069" endtime="20250325 21:31:46.079"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:46.079" endtime="20250325 21:31:46.079"/>
</return>
<status status="PASS" starttime="20250325 21:31:46.068" endtime="20250325 21:31:46.079"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:46.079" endtime="20250325 21:31:46.079"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:46.079" endtime="20250325 21:31:46.079"/>
</branch>
<status status="PASS" starttime="20250325 21:31:46.068" endtime="20250325 21:31:46.079"/>
</if>
<msg timestamp="20250325 21:31:46.079" level="INFO">${uploadID} = 0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450</msg>
<status status="PASS" starttime="20250325 21:31:45.584" endtime="20250325 21:31:46.079"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:46.079" endtime="20250325 21:31:46.080"/>
</kw>
<status status="PASS" starttime="20250325 21:31:45.584" endtime="20250325 21:31:46.080"/>
</iter>
<iter>
<var name="${index}">16</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:46.080" level="INFO">${key} = ozone-test-2648976766/listtest/key-16</msg>
<status status="PASS" starttime="20250325 21:31:46.080" endtime="20250325 21:31:46.080"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:46.084" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-16  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:46.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:46.562" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-16",
    "UploadId": "0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451"
}</msg>
<status status="PASS" starttime="20250325 21:31:46.082" endtime="20250325 21:31:46.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:46.563" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-16",
    "UploadId": "0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451"
}</msg>
<status status="PASS" starttime="20250325 21:31:46.562" endtime="20250325 21:31:46.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:46.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:46.563" endtime="20250325 21:31:46.563"/>
</kw>
<msg timestamp="20250325 21:31:46.564" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-16",
    "UploadId": "0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451"
}</msg>
<status status="PASS" starttime="20250325 21:31:46.081" endtime="20250325 21:31:46.564"/>
</kw>
<msg timestamp="20250325 21:31:46.564" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-16",
    "UploadId": "0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451"
}</msg>
<status status="PASS" starttime="20250325 21:31:46.081" endtime="20250325 21:31:46.564"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:46.564" endtime="20250325 21:31:46.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:46.564" endtime="20250325 21:31:46.565"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:46.567" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-16",
    "UploadId": "0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:46.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:46.573" level="INFO">${output} = 0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451</msg>
<status status="PASS" starttime="20250325 21:31:46.565" endtime="20250325 21:31:46.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:46.573" level="INFO">0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451</msg>
<status status="PASS" starttime="20250325 21:31:46.573" endtime="20250325 21:31:46.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:46.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:46.573" endtime="20250325 21:31:46.574"/>
</kw>
<msg timestamp="20250325 21:31:46.574" level="INFO">${upload_id} = 0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451</msg>
<status status="PASS" starttime="20250325 21:31:46.565" endtime="20250325 21:31:46.574"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:46.574" endtime="20250325 21:31:46.574"/>
</return>
<status status="PASS" starttime="20250325 21:31:46.564" endtime="20250325 21:31:46.574"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:46.574" endtime="20250325 21:31:46.574"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:46.574" endtime="20250325 21:31:46.574"/>
</branch>
<status status="PASS" starttime="20250325 21:31:46.564" endtime="20250325 21:31:46.574"/>
</if>
<msg timestamp="20250325 21:31:46.575" level="INFO">${uploadID} = 0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451</msg>
<status status="PASS" starttime="20250325 21:31:46.080" endtime="20250325 21:31:46.575"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:46.575" endtime="20250325 21:31:46.575"/>
</kw>
<status status="PASS" starttime="20250325 21:31:46.080" endtime="20250325 21:31:46.575"/>
</iter>
<iter>
<var name="${index}">17</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:46.576" level="INFO">${key} = ozone-test-2648976766/listtest/key-17</msg>
<status status="PASS" starttime="20250325 21:31:46.575" endtime="20250325 21:31:46.576"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:46.579" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-17  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:47.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:47.054" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-17",
    "UploadId": "0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164"
}</msg>
<status status="PASS" starttime="20250325 21:31:46.577" endtime="20250325 21:31:47.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:47.055" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-17",
    "UploadId": "0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164"
}</msg>
<status status="PASS" starttime="20250325 21:31:47.054" endtime="20250325 21:31:47.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:47.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:47.055" endtime="20250325 21:31:47.055"/>
</kw>
<msg timestamp="20250325 21:31:47.055" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-17",
    "UploadId": "0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164"
}</msg>
<status status="PASS" starttime="20250325 21:31:46.577" endtime="20250325 21:31:47.055"/>
</kw>
<msg timestamp="20250325 21:31:47.055" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-17",
    "UploadId": "0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164"
}</msg>
<status status="PASS" starttime="20250325 21:31:46.576" endtime="20250325 21:31:47.055"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:47.056" endtime="20250325 21:31:47.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:47.056" endtime="20250325 21:31:47.056"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:47.059" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-17",
    "UploadId": "0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:47.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:47.064" level="INFO">${output} = 0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164</msg>
<status status="PASS" starttime="20250325 21:31:47.057" endtime="20250325 21:31:47.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:47.065" level="INFO">0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164</msg>
<status status="PASS" starttime="20250325 21:31:47.065" endtime="20250325 21:31:47.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:47.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:47.065" endtime="20250325 21:31:47.065"/>
</kw>
<msg timestamp="20250325 21:31:47.066" level="INFO">${upload_id} = 0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164</msg>
<status status="PASS" starttime="20250325 21:31:47.056" endtime="20250325 21:31:47.066"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:47.066" endtime="20250325 21:31:47.066"/>
</return>
<status status="PASS" starttime="20250325 21:31:47.056" endtime="20250325 21:31:47.066"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:47.066" endtime="20250325 21:31:47.066"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:47.066" endtime="20250325 21:31:47.066"/>
</branch>
<status status="PASS" starttime="20250325 21:31:47.056" endtime="20250325 21:31:47.066"/>
</if>
<msg timestamp="20250325 21:31:47.066" level="INFO">${uploadID} = 0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164</msg>
<status status="PASS" starttime="20250325 21:31:46.576" endtime="20250325 21:31:47.066"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:47.066" endtime="20250325 21:31:47.066"/>
</kw>
<status status="PASS" starttime="20250325 21:31:46.575" endtime="20250325 21:31:47.066"/>
</iter>
<iter>
<var name="${index}">18</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:47.067" level="INFO">${key} = ozone-test-2648976766/listtest/key-18</msg>
<status status="PASS" starttime="20250325 21:31:47.067" endtime="20250325 21:31:47.067"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:47.070" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-18  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:47.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:47.539" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-18",
    "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733"
}</msg>
<status status="PASS" starttime="20250325 21:31:47.069" endtime="20250325 21:31:47.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:47.540" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-18",
    "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733"
}</msg>
<status status="PASS" starttime="20250325 21:31:47.539" endtime="20250325 21:31:47.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:47.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:47.540" endtime="20250325 21:31:47.540"/>
</kw>
<msg timestamp="20250325 21:31:47.541" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-18",
    "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733"
}</msg>
<status status="PASS" starttime="20250325 21:31:47.068" endtime="20250325 21:31:47.541"/>
</kw>
<msg timestamp="20250325 21:31:47.541" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-18",
    "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733"
}</msg>
<status status="PASS" starttime="20250325 21:31:47.068" endtime="20250325 21:31:47.541"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:47.541" endtime="20250325 21:31:47.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:47.542" endtime="20250325 21:31:47.542"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:47.544" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-18",
    "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:47.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:47.549" level="INFO">${output} = 0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733</msg>
<status status="PASS" starttime="20250325 21:31:47.542" endtime="20250325 21:31:47.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:47.550" level="INFO">0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733</msg>
<status status="PASS" starttime="20250325 21:31:47.550" endtime="20250325 21:31:47.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:47.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:47.550" endtime="20250325 21:31:47.551"/>
</kw>
<msg timestamp="20250325 21:31:47.551" level="INFO">${upload_id} = 0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733</msg>
<status status="PASS" starttime="20250325 21:31:47.542" endtime="20250325 21:31:47.551"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:47.551" endtime="20250325 21:31:47.551"/>
</return>
<status status="PASS" starttime="20250325 21:31:47.541" endtime="20250325 21:31:47.551"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:47.551" endtime="20250325 21:31:47.551"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:47.551" endtime="20250325 21:31:47.551"/>
</branch>
<status status="PASS" starttime="20250325 21:31:47.541" endtime="20250325 21:31:47.551"/>
</if>
<msg timestamp="20250325 21:31:47.551" level="INFO">${uploadID} = 0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733</msg>
<status status="PASS" starttime="20250325 21:31:47.067" endtime="20250325 21:31:47.551"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:47.552" endtime="20250325 21:31:47.552"/>
</kw>
<status status="PASS" starttime="20250325 21:31:47.067" endtime="20250325 21:31:47.552"/>
</iter>
<iter>
<var name="${index}">19</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:47.552" level="INFO">${key} = ozone-test-2648976766/listtest/key-19</msg>
<status status="PASS" starttime="20250325 21:31:47.552" endtime="20250325 21:31:47.552"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:47.556" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-19  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:48.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:48.044" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-19",
    "UploadId": "0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694"
}</msg>
<status status="PASS" starttime="20250325 21:31:47.554" endtime="20250325 21:31:48.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:48.045" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-19",
    "UploadId": "0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694"
}</msg>
<status status="PASS" starttime="20250325 21:31:48.044" endtime="20250325 21:31:48.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:48.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:48.045" endtime="20250325 21:31:48.045"/>
</kw>
<msg timestamp="20250325 21:31:48.046" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-19",
    "UploadId": "0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694"
}</msg>
<status status="PASS" starttime="20250325 21:31:47.554" endtime="20250325 21:31:48.046"/>
</kw>
<msg timestamp="20250325 21:31:48.046" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-19",
    "UploadId": "0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694"
}</msg>
<status status="PASS" starttime="20250325 21:31:47.553" endtime="20250325 21:31:48.046"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:48.046" endtime="20250325 21:31:48.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:48.046" endtime="20250325 21:31:48.047"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:48.050" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-19",
    "UploadId": "0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:48.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:48.055" level="INFO">${output} = 0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694</msg>
<status status="PASS" starttime="20250325 21:31:48.047" endtime="20250325 21:31:48.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:48.056" level="INFO">0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694</msg>
<status status="PASS" starttime="20250325 21:31:48.056" endtime="20250325 21:31:48.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:48.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:48.056" endtime="20250325 21:31:48.056"/>
</kw>
<msg timestamp="20250325 21:31:48.057" level="INFO">${upload_id} = 0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694</msg>
<status status="PASS" starttime="20250325 21:31:48.047" endtime="20250325 21:31:48.057"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:48.057" endtime="20250325 21:31:48.057"/>
</return>
<status status="PASS" starttime="20250325 21:31:48.046" endtime="20250325 21:31:48.057"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:48.057" endtime="20250325 21:31:48.057"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:48.057" endtime="20250325 21:31:48.057"/>
</branch>
<status status="PASS" starttime="20250325 21:31:48.046" endtime="20250325 21:31:48.057"/>
</if>
<msg timestamp="20250325 21:31:48.057" level="INFO">${uploadID} = 0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694</msg>
<status status="PASS" starttime="20250325 21:31:47.552" endtime="20250325 21:31:48.057"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:48.057" endtime="20250325 21:31:48.057"/>
</kw>
<status status="PASS" starttime="20250325 21:31:47.552" endtime="20250325 21:31:48.057"/>
</iter>
<iter>
<var name="${index}">20</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:48.058" level="INFO">${key} = ozone-test-2648976766/listtest/key-20</msg>
<status status="PASS" starttime="20250325 21:31:48.058" endtime="20250325 21:31:48.058"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:48.062" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-20  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:48.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:48.532" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-20",
    "UploadId": "0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911"
}</msg>
<status status="PASS" starttime="20250325 21:31:48.060" endtime="20250325 21:31:48.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:48.533" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-20",
    "UploadId": "0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911"
}</msg>
<status status="PASS" starttime="20250325 21:31:48.532" endtime="20250325 21:31:48.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:48.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:48.533" endtime="20250325 21:31:48.533"/>
</kw>
<msg timestamp="20250325 21:31:48.533" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-20",
    "UploadId": "0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911"
}</msg>
<status status="PASS" starttime="20250325 21:31:48.059" endtime="20250325 21:31:48.533"/>
</kw>
<msg timestamp="20250325 21:31:48.533" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-20",
    "UploadId": "0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911"
}</msg>
<status status="PASS" starttime="20250325 21:31:48.059" endtime="20250325 21:31:48.534"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:48.534" endtime="20250325 21:31:48.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:48.534" endtime="20250325 21:31:48.534"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:48.537" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-20",
    "UploadId": "0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:48.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:48.542" level="INFO">${output} = 0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911</msg>
<status status="PASS" starttime="20250325 21:31:48.535" endtime="20250325 21:31:48.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:48.543" level="INFO">0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911</msg>
<status status="PASS" starttime="20250325 21:31:48.542" endtime="20250325 21:31:48.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:48.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:48.543" endtime="20250325 21:31:48.543"/>
</kw>
<msg timestamp="20250325 21:31:48.543" level="INFO">${upload_id} = 0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911</msg>
<status status="PASS" starttime="20250325 21:31:48.535" endtime="20250325 21:31:48.543"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:48.544" endtime="20250325 21:31:48.544"/>
</return>
<status status="PASS" starttime="20250325 21:31:48.534" endtime="20250325 21:31:48.544"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:48.544" endtime="20250325 21:31:48.544"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:48.544" endtime="20250325 21:31:48.544"/>
</branch>
<status status="PASS" starttime="20250325 21:31:48.534" endtime="20250325 21:31:48.544"/>
</if>
<msg timestamp="20250325 21:31:48.544" level="INFO">${uploadID} = 0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911</msg>
<status status="PASS" starttime="20250325 21:31:48.058" endtime="20250325 21:31:48.544"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:48.544" endtime="20250325 21:31:48.544"/>
</kw>
<status status="PASS" starttime="20250325 21:31:48.058" endtime="20250325 21:31:48.544"/>
</iter>
<iter>
<var name="${index}">21</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:48.545" level="INFO">${key} = ozone-test-2648976766/listtest/key-21</msg>
<status status="PASS" starttime="20250325 21:31:48.545" endtime="20250325 21:31:48.545"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:48.548" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-21  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:49.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:49.028" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-21",
    "UploadId": "0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160"
}</msg>
<status status="PASS" starttime="20250325 21:31:48.546" endtime="20250325 21:31:49.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:49.029" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-21",
    "UploadId": "0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160"
}</msg>
<status status="PASS" starttime="20250325 21:31:49.028" endtime="20250325 21:31:49.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:49.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:49.029" endtime="20250325 21:31:49.029"/>
</kw>
<msg timestamp="20250325 21:31:49.030" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-21",
    "UploadId": "0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160"
}</msg>
<status status="PASS" starttime="20250325 21:31:48.546" endtime="20250325 21:31:49.030"/>
</kw>
<msg timestamp="20250325 21:31:49.030" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-21",
    "UploadId": "0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160"
}</msg>
<status status="PASS" starttime="20250325 21:31:48.546" endtime="20250325 21:31:49.030"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:49.030" endtime="20250325 21:31:49.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:49.030" endtime="20250325 21:31:49.031"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:49.033" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-21",
    "UploadId": "0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:49.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:49.039" level="INFO">${output} = 0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160</msg>
<status status="PASS" starttime="20250325 21:31:49.031" endtime="20250325 21:31:49.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:49.040" level="INFO">0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160</msg>
<status status="PASS" starttime="20250325 21:31:49.039" endtime="20250325 21:31:49.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:49.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:49.040" endtime="20250325 21:31:49.040"/>
</kw>
<msg timestamp="20250325 21:31:49.040" level="INFO">${upload_id} = 0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160</msg>
<status status="PASS" starttime="20250325 21:31:49.031" endtime="20250325 21:31:49.040"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:49.040" endtime="20250325 21:31:49.040"/>
</return>
<status status="PASS" starttime="20250325 21:31:49.030" endtime="20250325 21:31:49.040"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:49.041" endtime="20250325 21:31:49.041"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:49.040" endtime="20250325 21:31:49.041"/>
</branch>
<status status="PASS" starttime="20250325 21:31:49.030" endtime="20250325 21:31:49.041"/>
</if>
<msg timestamp="20250325 21:31:49.041" level="INFO">${uploadID} = 0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160</msg>
<status status="PASS" starttime="20250325 21:31:48.545" endtime="20250325 21:31:49.041"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:49.041" endtime="20250325 21:31:49.041"/>
</kw>
<status status="PASS" starttime="20250325 21:31:48.544" endtime="20250325 21:31:49.041"/>
</iter>
<iter>
<var name="${index}">22</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:49.042" level="INFO">${key} = ozone-test-2648976766/listtest/key-22</msg>
<status status="PASS" starttime="20250325 21:31:49.041" endtime="20250325 21:31:49.042"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:49.045" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-22  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:49.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:49.516" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-22",
    "UploadId": "0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945"
}</msg>
<status status="PASS" starttime="20250325 21:31:49.043" endtime="20250325 21:31:49.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:49.517" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-22",
    "UploadId": "0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945"
}</msg>
<status status="PASS" starttime="20250325 21:31:49.517" endtime="20250325 21:31:49.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:49.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:49.517" endtime="20250325 21:31:49.518"/>
</kw>
<msg timestamp="20250325 21:31:49.518" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-22",
    "UploadId": "0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945"
}</msg>
<status status="PASS" starttime="20250325 21:31:49.043" endtime="20250325 21:31:49.518"/>
</kw>
<msg timestamp="20250325 21:31:49.518" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-22",
    "UploadId": "0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945"
}</msg>
<status status="PASS" starttime="20250325 21:31:49.043" endtime="20250325 21:31:49.518"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:49.518" endtime="20250325 21:31:49.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:49.519" endtime="20250325 21:31:49.519"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:49.522" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-22",
    "UploadId": "0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:49.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:49.527" level="INFO">${output} = 0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945</msg>
<status status="PASS" starttime="20250325 21:31:49.520" endtime="20250325 21:31:49.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:49.528" level="INFO">0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945</msg>
<status status="PASS" starttime="20250325 21:31:49.527" endtime="20250325 21:31:49.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:49.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:49.528" endtime="20250325 21:31:49.528"/>
</kw>
<msg timestamp="20250325 21:31:49.528" level="INFO">${upload_id} = 0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945</msg>
<status status="PASS" starttime="20250325 21:31:49.519" endtime="20250325 21:31:49.528"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:49.528" endtime="20250325 21:31:49.528"/>
</return>
<status status="PASS" starttime="20250325 21:31:49.518" endtime="20250325 21:31:49.528"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:49.529" endtime="20250325 21:31:49.529"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:49.529" endtime="20250325 21:31:49.529"/>
</branch>
<status status="PASS" starttime="20250325 21:31:49.518" endtime="20250325 21:31:49.529"/>
</if>
<msg timestamp="20250325 21:31:49.529" level="INFO">${uploadID} = 0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945</msg>
<status status="PASS" starttime="20250325 21:31:49.042" endtime="20250325 21:31:49.529"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:49.529" endtime="20250325 21:31:49.529"/>
</kw>
<status status="PASS" starttime="20250325 21:31:49.041" endtime="20250325 21:31:49.529"/>
</iter>
<iter>
<var name="${index}">23</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:49.530" level="INFO">${key} = ozone-test-2648976766/listtest/key-23</msg>
<status status="PASS" starttime="20250325 21:31:49.529" endtime="20250325 21:31:49.530"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:49.533" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-23  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:50.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:50.001" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-23",
    "UploadId": "0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906"
}</msg>
<status status="PASS" starttime="20250325 21:31:49.531" endtime="20250325 21:31:50.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:50.002" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-23",
    "UploadId": "0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906"
}</msg>
<status status="PASS" starttime="20250325 21:31:50.001" endtime="20250325 21:31:50.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:50.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:50.002" endtime="20250325 21:31:50.002"/>
</kw>
<msg timestamp="20250325 21:31:50.002" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-23",
    "UploadId": "0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906"
}</msg>
<status status="PASS" starttime="20250325 21:31:49.531" endtime="20250325 21:31:50.002"/>
</kw>
<msg timestamp="20250325 21:31:50.003" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-23",
    "UploadId": "0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906"
}</msg>
<status status="PASS" starttime="20250325 21:31:49.531" endtime="20250325 21:31:50.003"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:50.003" endtime="20250325 21:31:50.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:50.003" endtime="20250325 21:31:50.003"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:50.006" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-23",
    "UploadId": "0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:50.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:50.011" level="INFO">${output} = 0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906</msg>
<status status="PASS" starttime="20250325 21:31:50.004" endtime="20250325 21:31:50.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:50.012" level="INFO">0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906</msg>
<status status="PASS" starttime="20250325 21:31:50.012" endtime="20250325 21:31:50.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:50.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:50.012" endtime="20250325 21:31:50.012"/>
</kw>
<msg timestamp="20250325 21:31:50.013" level="INFO">${upload_id} = 0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906</msg>
<status status="PASS" starttime="20250325 21:31:50.004" endtime="20250325 21:31:50.013"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:50.013" endtime="20250325 21:31:50.013"/>
</return>
<status status="PASS" starttime="20250325 21:31:50.003" endtime="20250325 21:31:50.013"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:50.013" endtime="20250325 21:31:50.013"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:50.013" endtime="20250325 21:31:50.013"/>
</branch>
<status status="PASS" starttime="20250325 21:31:50.003" endtime="20250325 21:31:50.013"/>
</if>
<msg timestamp="20250325 21:31:50.013" level="INFO">${uploadID} = 0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906</msg>
<status status="PASS" starttime="20250325 21:31:49.530" endtime="20250325 21:31:50.013"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:50.013" endtime="20250325 21:31:50.013"/>
</kw>
<status status="PASS" starttime="20250325 21:31:49.529" endtime="20250325 21:31:50.013"/>
</iter>
<iter>
<var name="${index}">24</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:50.014" level="INFO">${key} = ozone-test-2648976766/listtest/key-24</msg>
<status status="PASS" starttime="20250325 21:31:50.014" endtime="20250325 21:31:50.014"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:50.017" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-24  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:50.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:50.499" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-24",
    "UploadId": "0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299"
}</msg>
<status status="PASS" starttime="20250325 21:31:50.016" endtime="20250325 21:31:50.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:50.500" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-24",
    "UploadId": "0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299"
}</msg>
<status status="PASS" starttime="20250325 21:31:50.499" endtime="20250325 21:31:50.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:50.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:50.500" endtime="20250325 21:31:50.500"/>
</kw>
<msg timestamp="20250325 21:31:50.500" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-24",
    "UploadId": "0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299"
}</msg>
<status status="PASS" starttime="20250325 21:31:50.015" endtime="20250325 21:31:50.501"/>
</kw>
<msg timestamp="20250325 21:31:50.501" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-24",
    "UploadId": "0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299"
}</msg>
<status status="PASS" starttime="20250325 21:31:50.015" endtime="20250325 21:31:50.501"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:50.501" endtime="20250325 21:31:50.501"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:31:50.501" endtime="20250325 21:31:50.502"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:50.504" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2648976766/listtest/key-24",
    "UploadId": "0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:50.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:50.509" level="INFO">${output} = 0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299</msg>
<status status="PASS" starttime="20250325 21:31:50.502" endtime="20250325 21:31:50.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:50.510" level="INFO">0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299</msg>
<status status="PASS" starttime="20250325 21:31:50.510" endtime="20250325 21:31:50.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:50.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:50.510" endtime="20250325 21:31:50.511"/>
</kw>
<msg timestamp="20250325 21:31:50.511" level="INFO">${upload_id} = 0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299</msg>
<status status="PASS" starttime="20250325 21:31:50.502" endtime="20250325 21:31:50.511"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250325 21:31:50.511" endtime="20250325 21:31:50.511"/>
</return>
<status status="PASS" starttime="20250325 21:31:50.501" endtime="20250325 21:31:50.511"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250325 21:31:50.511" endtime="20250325 21:31:50.511"/>
</return>
<status status="NOT RUN" starttime="20250325 21:31:50.511" endtime="20250325 21:31:50.511"/>
</branch>
<status status="PASS" starttime="20250325 21:31:50.501" endtime="20250325 21:31:50.511"/>
</if>
<msg timestamp="20250325 21:31:50.511" level="INFO">${uploadID} = 0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299</msg>
<status status="PASS" starttime="20250325 21:31:50.014" endtime="20250325 21:31:50.511"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${uploadIDs}</arg>
<arg>${uploadID}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:31:50.511" endtime="20250325 21:31:50.512"/>
</kw>
<status status="PASS" starttime="20250325 21:31:50.014" endtime="20250325 21:31:50.512"/>
</iter>
<status status="PASS" starttime="20250325 21:31:38.143" endtime="20250325 21:31:50.512"/>
</for>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest --max-items 10</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:50.515" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket encrypted --prefix ozone-test-2648976766/listtest --max-items 10 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:50.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:50.998" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275",
            "Key": "ozone-test-2648976766/listtest/key-0",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250325 21:31:50.513" endtime="20250325 21:31:50.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:50.998" level="INFO">{
    "Uploads": [
        {
            "UploadId": "0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275",
            "Key": "ozone-test-2648976766/listtest/key-0",
            "Initiated": "2025-03-25T21:31:38.575Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708",
            "Key": "ozone-test-2648976766/listtest/key-1",
            "Initiated": "2025-03-25T21:31:39.087Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517",
            "Key": "ozone-test-2648976766/listtest/key-10",
            "Initiated": "2025-03-25T21:31:43.512Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350",
            "Key": "ozone-test-2648976766/listtest/key-11",
            "Initiated": "2025-03-25T21:31:44.049Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671",
            "Key": "ozone-test-2648976766/listtest/key-12",
            "Initiated": "2025-03-25T21:31:44.544Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632",
            "Key": "ozone-test-2648976766/listtest/key-13",
            "Initiated": "2025-03-25T21:31:45.029Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881",
            "Key": "ozone-test-2648976766/listtest/key-14",
            "Initiated": "2025-03-25T21:31:45.522Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450",
            "Key": "ozone-test-2648976766/listtest/key-15",
            "Initiated": "2025-03-25T21:31:46.010Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451",
            "Key": "ozone-test-2648976766/listtest/key-16",
            "Initiated": "2025-03-25T21:31:46.510Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164",
            "Key": "ozone-test-2648976766/listtest/key-17",
            "Initiated": "2025-03-25T21:31:47.002Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0="
}</msg>
<status status="PASS" starttime="20250325 21:31:50.998" endtime="20250325 21:31:50.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:50.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:50.999" endtime="20250325 21:31:50.999"/>
</kw>
<status status="PASS" starttime="20250325 21:31:50.513" endtime="20250325 21:31:50.999"/>
</kw>
<msg timestamp="20250325 21:31:50.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:50.513" endtime="20250325 21:31:50.999"/>
</kw>
<msg timestamp="20250325 21:31:51.000" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275",
            "Key": "ozone-test-2648976766/listtest/key-0",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250325 21:31:50.512" endtime="20250325 21:31:51.000"/>
</kw>
<msg timestamp="20250325 21:31:51.000" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275",
            "Key": "ozone-test-2648976766/listtest/key-0",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250325 21:31:50.512" endtime="20250325 21:31:51.000"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:51.003" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275",
            "Key": "ozone-test-2648976766/listtest/key-0",
            "Initiated": "2025-03-25T21:31:38.575Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708",
            "Key": "ozone-test-2648976766/listtest/key-1",
            "Initiated": "2025-03-25T21:31:39.087Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517",
            "Key": "ozone-test-2648976766/listtest/key-10",
            "Initiated": "2025-03-25T21:31:43.512Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350",
            "Key": "ozone-test-2648976766/listtest/key-11",
            "Initiated": "2025-03-25T21:31:44.049Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671",
            "Key": "ozone-test-2648976766/listtest/key-12",
            "Initiated": "2025-03-25T21:31:44.544Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632",
            "Key": "ozone-test-2648976766/listtest/key-13",
            "Initiated": "2025-03-25T21:31:45.029Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881",
            "Key": "ozone-test-2648976766/listtest/key-14",
            "Initiated": "2025-03-25T21:31:45.522Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450",
            "Key": "ozone-test-2648976766/listtest/key-15",
            "Initiated": "2025-03-25T21:31:46.010Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451",
            "Key": "ozone-test-2648976766/listtest/key-16",
            "Initiated": "2025-03-25T21:31:46.510Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164",
            "Key": "ozone-test-2648976766/listtest/key-17",
            "Initiated": "2025-03-25T21:31:47.002Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0="
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:51.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:51.008" level="INFO">${output} = 10</msg>
<status status="PASS" starttime="20250325 21:31:51.000" endtime="20250325 21:31:51.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:51.009" level="INFO">10</msg>
<status status="PASS" starttime="20250325 21:31:51.008" endtime="20250325 21:31:51.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:51.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:51.009" endtime="20250325 21:31:51.009"/>
</kw>
<msg timestamp="20250325 21:31:51.009" level="INFO">${count} = 10</msg>
<status status="PASS" starttime="20250325 21:31:51.000" endtime="20250325 21:31:51.009"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>10</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:51.009" endtime="20250325 21:31:51.010"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${hasNext}</var>
<arg>echo '${result}' | jq -r 'has("NextToken")'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:51.012" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275",
            "Key": "ozone-test-2648976766/listtest/key-0",
            "Initiated": "2025-03-25T21:31:38.575Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708",
            "Key": "ozone-test-2648976766/listtest/key-1",
            "Initiated": "2025-03-25T21:31:39.087Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517",
            "Key": "ozone-test-2648976766/listtest/key-10",
            "Initiated": "2025-03-25T21:31:43.512Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350",
            "Key": "ozone-test-2648976766/listtest/key-11",
            "Initiated": "2025-03-25T21:31:44.049Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671",
            "Key": "ozone-test-2648976766/listtest/key-12",
            "Initiated": "2025-03-25T21:31:44.544Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632",
            "Key": "ozone-test-2648976766/listtest/key-13",
            "Initiated": "2025-03-25T21:31:45.029Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881",
            "Key": "ozone-test-2648976766/listtest/key-14",
            "Initiated": "2025-03-25T21:31:45.522Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450",
            "Key": "ozone-test-2648976766/listtest/key-15",
            "Initiated": "2025-03-25T21:31:46.010Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451",
            "Key": "ozone-test-2648976766/listtest/key-16",
            "Initiated": "2025-03-25T21:31:46.510Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164",
            "Key": "ozone-test-2648976766/listtest/key-17",
            "Initiated": "2025-03-25T21:31:47.002Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0="
}' | jq -r 'has("NextToken")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:51.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:51.017" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250325 21:31:51.010" endtime="20250325 21:31:51.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:51.018" level="INFO">true</msg>
<status status="PASS" starttime="20250325 21:31:51.018" endtime="20250325 21:31:51.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:51.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:51.018" endtime="20250325 21:31:51.019"/>
</kw>
<msg timestamp="20250325 21:31:51.019" level="INFO">${hasNext} = true</msg>
<status status="PASS" starttime="20250325 21:31:51.010" endtime="20250325 21:31:51.019"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${hasNext}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:51.019" endtime="20250325 21:31:51.019"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextToken}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:51.022" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275",
            "Key": "ozone-test-2648976766/listtest/key-0",
            "Initiated": "2025-03-25T21:31:38.575Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708",
            "Key": "ozone-test-2648976766/listtest/key-1",
            "Initiated": "2025-03-25T21:31:39.087Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517",
            "Key": "ozone-test-2648976766/listtest/key-10",
            "Initiated": "2025-03-25T21:31:43.512Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350",
            "Key": "ozone-test-2648976766/listtest/key-11",
            "Initiated": "2025-03-25T21:31:44.049Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671",
            "Key": "ozone-test-2648976766/listtest/key-12",
            "Initiated": "2025-03-25T21:31:44.544Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632",
            "Key": "ozone-test-2648976766/listtest/key-13",
            "Initiated": "2025-03-25T21:31:45.029Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881",
            "Key": "ozone-test-2648976766/listtest/key-14",
            "Initiated": "2025-03-25T21:31:45.522Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450",
            "Key": "ozone-test-2648976766/listtest/key-15",
            "Initiated": "2025-03-25T21:31:46.010Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451",
            "Key": "ozone-test-2648976766/listtest/key-16",
            "Initiated": "2025-03-25T21:31:46.510Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164",
            "Key": "ozone-test-2648976766/listtest/key-17",
            "Initiated": "2025-03-25T21:31:47.002Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:51.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:51.027" level="INFO">${output} = eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0=</msg>
<status status="PASS" starttime="20250325 21:31:51.020" endtime="20250325 21:31:51.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:51.027" level="INFO">eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0=</msg>
<status status="PASS" starttime="20250325 21:31:51.027" endtime="20250325 21:31:51.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:51.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:51.027" endtime="20250325 21:31:51.028"/>
</kw>
<msg timestamp="20250325 21:31:51.028" level="INFO">${nextToken} = eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0=</msg>
<status status="PASS" starttime="20250325 21:31:51.019" endtime="20250325 21:31:51.028"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${nextToken}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250325 21:31:51.028" level="INFO">Length is 96</msg>
<status status="PASS" starttime="20250325 21:31:51.028" endtime="20250325 21:31:51.028"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest --max-items 10 --starting-token ${nextToken}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:51.032" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket encrypted --prefix ozone-test-2648976766/listtest --max-items 10 --starting-token eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0= 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:51.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:51.510" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733",
            "Key": "ozone-test-2648976766/listtest/key-18",
            "Initiated": "20...</msg>
<status status="PASS" starttime="20250325 21:31:51.030" endtime="20250325 21:31:51.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:51.511" level="INFO">{
    "Uploads": [
        {
            "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733",
            "Key": "ozone-test-2648976766/listtest/key-18",
            "Initiated": "2025-03-25T21:31:47.490Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694",
            "Key": "ozone-test-2648976766/listtest/key-19",
            "Initiated": "2025-03-25T21:31:47.975Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317",
            "Key": "ozone-test-2648976766/listtest/key-2",
            "Initiated": "2025-03-25T21:31:39.590Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911",
            "Key": "ozone-test-2648976766/listtest/key-20",
            "Initiated": "2025-03-25T21:31:48.481Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160",
            "Key": "ozone-test-2648976766/listtest/key-21",
            "Initiated": "2025-03-25T21:31:48.974Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945",
            "Key": "ozone-test-2648976766/listtest/key-22",
            "Initiated": "2025-03-25T21:31:49.468Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906",
            "Key": "ozone-test-2648976766/listtest/key-23",
            "Initiated": "2025-03-25T21:31:49.953Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299",
            "Key": "ozone-test-2648976766/listtest/key-24",
            "Initiated": "2025-03-25T21:31:50.450Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318",
            "Key": "ozone-test-2648976766/listtest/key-3",
            "Initiated": "2025-03-25T21:31:40.090Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279",
            "Key": "ozone-test-2648976766/listtest/key-4",
            "Initiated": "2025-03-25T21:31:40.575Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0="
}</msg>
<status status="PASS" starttime="20250325 21:31:51.510" endtime="20250325 21:31:51.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:51.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:51.511" endtime="20250325 21:31:51.511"/>
</kw>
<status status="PASS" starttime="20250325 21:31:51.029" endtime="20250325 21:31:51.511"/>
</kw>
<msg timestamp="20250325 21:31:51.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:51.029" endtime="20250325 21:31:51.511"/>
</kw>
<msg timestamp="20250325 21:31:51.512" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733",
            "Key": "ozone-test-2648976766/listtest/key-18",
            "Initiated": "20...</msg>
<status status="PASS" starttime="20250325 21:31:51.029" endtime="20250325 21:31:51.512"/>
</kw>
<msg timestamp="20250325 21:31:51.512" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733",
            "Key": "ozone-test-2648976766/listtest/key-18",
            "Initiated": "20...</msg>
<status status="PASS" starttime="20250325 21:31:51.028" endtime="20250325 21:31:51.512"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:51.515" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733",
            "Key": "ozone-test-2648976766/listtest/key-18",
            "Initiated": "2025-03-25T21:31:47.490Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694",
            "Key": "ozone-test-2648976766/listtest/key-19",
            "Initiated": "2025-03-25T21:31:47.975Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317",
            "Key": "ozone-test-2648976766/listtest/key-2",
            "Initiated": "2025-03-25T21:31:39.590Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911",
            "Key": "ozone-test-2648976766/listtest/key-20",
            "Initiated": "2025-03-25T21:31:48.481Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160",
            "Key": "ozone-test-2648976766/listtest/key-21",
            "Initiated": "2025-03-25T21:31:48.974Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945",
            "Key": "ozone-test-2648976766/listtest/key-22",
            "Initiated": "2025-03-25T21:31:49.468Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906",
            "Key": "ozone-test-2648976766/listtest/key-23",
            "Initiated": "2025-03-25T21:31:49.953Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299",
            "Key": "ozone-test-2648976766/listtest/key-24",
            "Initiated": "2025-03-25T21:31:50.450Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318",
            "Key": "ozone-test-2648976766/listtest/key-3",
            "Initiated": "2025-03-25T21:31:40.090Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279",
            "Key": "ozone-test-2648976766/listtest/key-4",
            "Initiated": "2025-03-25T21:31:40.575Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0="
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:51.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:51.520" level="INFO">${output} = 10</msg>
<status status="PASS" starttime="20250325 21:31:51.512" endtime="20250325 21:31:51.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:51.521" level="INFO">10</msg>
<status status="PASS" starttime="20250325 21:31:51.521" endtime="20250325 21:31:51.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:51.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:51.521" endtime="20250325 21:31:51.521"/>
</kw>
<msg timestamp="20250325 21:31:51.522" level="INFO">${count} = 10</msg>
<status status="PASS" starttime="20250325 21:31:51.512" endtime="20250325 21:31:51.522"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>10</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:51.522" endtime="20250325 21:31:51.522"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${hasNext}</var>
<arg>echo '${result}' | jq -r 'has("NextToken")'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:51.525" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733",
            "Key": "ozone-test-2648976766/listtest/key-18",
            "Initiated": "2025-03-25T21:31:47.490Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694",
            "Key": "ozone-test-2648976766/listtest/key-19",
            "Initiated": "2025-03-25T21:31:47.975Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317",
            "Key": "ozone-test-2648976766/listtest/key-2",
            "Initiated": "2025-03-25T21:31:39.590Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911",
            "Key": "ozone-test-2648976766/listtest/key-20",
            "Initiated": "2025-03-25T21:31:48.481Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160",
            "Key": "ozone-test-2648976766/listtest/key-21",
            "Initiated": "2025-03-25T21:31:48.974Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945",
            "Key": "ozone-test-2648976766/listtest/key-22",
            "Initiated": "2025-03-25T21:31:49.468Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906",
            "Key": "ozone-test-2648976766/listtest/key-23",
            "Initiated": "2025-03-25T21:31:49.953Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299",
            "Key": "ozone-test-2648976766/listtest/key-24",
            "Initiated": "2025-03-25T21:31:50.450Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318",
            "Key": "ozone-test-2648976766/listtest/key-3",
            "Initiated": "2025-03-25T21:31:40.090Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279",
            "Key": "ozone-test-2648976766/listtest/key-4",
            "Initiated": "2025-03-25T21:31:40.575Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0="
}' | jq -r 'has("NextToken")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:51.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:51.530" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250325 21:31:51.523" endtime="20250325 21:31:51.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:51.531" level="INFO">true</msg>
<status status="PASS" starttime="20250325 21:31:51.530" endtime="20250325 21:31:51.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:51.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:51.531" endtime="20250325 21:31:51.531"/>
</kw>
<msg timestamp="20250325 21:31:51.531" level="INFO">${hasNext} = true</msg>
<status status="PASS" starttime="20250325 21:31:51.522" endtime="20250325 21:31:51.531"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${hasNext}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:51.531" endtime="20250325 21:31:51.532"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextToken}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:51.534" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733",
            "Key": "ozone-test-2648976766/listtest/key-18",
            "Initiated": "2025-03-25T21:31:47.490Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694",
            "Key": "ozone-test-2648976766/listtest/key-19",
            "Initiated": "2025-03-25T21:31:47.975Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317",
            "Key": "ozone-test-2648976766/listtest/key-2",
            "Initiated": "2025-03-25T21:31:39.590Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911",
            "Key": "ozone-test-2648976766/listtest/key-20",
            "Initiated": "2025-03-25T21:31:48.481Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160",
            "Key": "ozone-test-2648976766/listtest/key-21",
            "Initiated": "2025-03-25T21:31:48.974Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945",
            "Key": "ozone-test-2648976766/listtest/key-22",
            "Initiated": "2025-03-25T21:31:49.468Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906",
            "Key": "ozone-test-2648976766/listtest/key-23",
            "Initiated": "2025-03-25T21:31:49.953Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299",
            "Key": "ozone-test-2648976766/listtest/key-24",
            "Initiated": "2025-03-25T21:31:50.450Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318",
            "Key": "ozone-test-2648976766/listtest/key-3",
            "Initiated": "2025-03-25T21:31:40.090Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279",
            "Key": "ozone-test-2648976766/listtest/key-4",
            "Initiated": "2025-03-25T21:31:40.575Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/listtest",
    "NextToken": "eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:51.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:51.539" level="INFO">${output} = eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0=</msg>
<status status="PASS" starttime="20250325 21:31:51.532" endtime="20250325 21:31:51.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:51.540" level="INFO">eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0=</msg>
<status status="PASS" starttime="20250325 21:31:51.539" endtime="20250325 21:31:51.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:51.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:51.540" endtime="20250325 21:31:51.540"/>
</kw>
<msg timestamp="20250325 21:31:51.540" level="INFO">${nextToken} = eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0=</msg>
<status status="PASS" starttime="20250325 21:31:51.532" endtime="20250325 21:31:51.540"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${nextToken}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250325 21:31:51.541" level="INFO">Length is 96</msg>
<status status="PASS" starttime="20250325 21:31:51.541" endtime="20250325 21:31:51.541"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest --max-items 10 --starting-token ${nextToken}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:51.545" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket encrypted --prefix ozone-test-2648976766/listtest --max-items 10 --starting-token eyJLZXlNYXJrZXIiOiBudWxsLCAiVXBsb2FkSWRNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyMH0= 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:52.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:52.035" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136",
            "Key": "ozone-test-2648976766/listtest/key-5",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250325 21:31:51.543" endtime="20250325 21:31:52.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:52.036" level="INFO">{
    "Uploads": [
        {
            "UploadId": "0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136",
            "Key": "ozone-test-2648976766/listtest/key-5",
            "Initiated": "2025-03-25T21:31:41.071Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921",
            "Key": "ozone-test-2648976766/listtest/key-6",
            "Initiated": "2025-03-25T21:31:41.565Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562",
            "Key": "ozone-test-2648976766/listtest/key-7",
            "Initiated": "2025-03-25T21:31:42.055Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-e848-7277-8a86-e7c081115853-114225204594999379",
            "Key": "ozone-test-2648976766/listtest/key-8",
            "Initiated": "2025-03-25T21:31:42.536Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804",
            "Key": "ozone-test-2648976766/listtest/key-9",
            "Initiated": "2025-03-25T21:31:43.020Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/listtest"
}</msg>
<status status="PASS" starttime="20250325 21:31:52.036" endtime="20250325 21:31:52.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:52.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:52.037" endtime="20250325 21:31:52.037"/>
</kw>
<status status="PASS" starttime="20250325 21:31:51.542" endtime="20250325 21:31:52.037"/>
</kw>
<msg timestamp="20250325 21:31:52.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:51.542" endtime="20250325 21:31:52.037"/>
</kw>
<msg timestamp="20250325 21:31:52.037" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136",
            "Key": "ozone-test-2648976766/listtest/key-5",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250325 21:31:51.541" endtime="20250325 21:31:52.037"/>
</kw>
<msg timestamp="20250325 21:31:52.038" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136",
            "Key": "ozone-test-2648976766/listtest/key-5",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250325 21:31:51.541" endtime="20250325 21:31:52.038"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:52.040" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136",
            "Key": "ozone-test-2648976766/listtest/key-5",
            "Initiated": "2025-03-25T21:31:41.071Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921",
            "Key": "ozone-test-2648976766/listtest/key-6",
            "Initiated": "2025-03-25T21:31:41.565Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562",
            "Key": "ozone-test-2648976766/listtest/key-7",
            "Initiated": "2025-03-25T21:31:42.055Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-e848-7277-8a86-e7c081115853-114225204594999379",
            "Key": "ozone-test-2648976766/listtest/key-8",
            "Initiated": "2025-03-25T21:31:42.536Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804",
            "Key": "ozone-test-2648976766/listtest/key-9",
            "Initiated": "2025-03-25T21:31:43.020Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/listtest"
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:52.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:52.046" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20250325 21:31:52.038" endtime="20250325 21:31:52.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:52.046" level="INFO">5</msg>
<status status="PASS" starttime="20250325 21:31:52.046" endtime="20250325 21:31:52.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:52.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:52.047" endtime="20250325 21:31:52.047"/>
</kw>
<msg timestamp="20250325 21:31:52.047" level="INFO">${count} = 5</msg>
<status status="PASS" starttime="20250325 21:31:52.038" endtime="20250325 21:31:52.047"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:52.047" endtime="20250325 21:31:52.048"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${hasNext}</var>
<arg>echo '${result}' | jq -r 'has("NextToken")'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:52.050" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136",
            "Key": "ozone-test-2648976766/listtest/key-5",
            "Initiated": "2025-03-25T21:31:41.071Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921",
            "Key": "ozone-test-2648976766/listtest/key-6",
            "Initiated": "2025-03-25T21:31:41.565Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562",
            "Key": "ozone-test-2648976766/listtest/key-7",
            "Initiated": "2025-03-25T21:31:42.055Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-e848-7277-8a86-e7c081115853-114225204594999379",
            "Key": "ozone-test-2648976766/listtest/key-8",
            "Initiated": "2025-03-25T21:31:42.536Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804",
            "Key": "ozone-test-2648976766/listtest/key-9",
            "Initiated": "2025-03-25T21:31:43.020Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/listtest"
}' | jq -r 'has("NextToken")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:52.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:52.055" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20250325 21:31:52.048" endtime="20250325 21:31:52.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:52.056" level="INFO">false</msg>
<status status="PASS" starttime="20250325 21:31:52.055" endtime="20250325 21:31:52.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:52.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:52.056" endtime="20250325 21:31:52.056"/>
</kw>
<msg timestamp="20250325 21:31:52.056" level="INFO">${hasNext} = false</msg>
<status status="PASS" starttime="20250325 21:31:52.048" endtime="20250325 21:31:52.057"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${hasNext}</arg>
<arg>false</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:52.057" endtime="20250325 21:31:52.057"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest/key-1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:52.060" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket encrypted --prefix ozone-test-2648976766/listtest/key-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:52.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:52.533" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708",
            "Key": "ozone-test-2648976766/listtest/key-1",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250325 21:31:52.058" endtime="20250325 21:31:52.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:52.534" level="INFO">{
    "Uploads": [
        {
            "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708",
            "Key": "ozone-test-2648976766/listtest/key-1",
            "Initiated": "2025-03-25T21:31:39.087Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517",
            "Key": "ozone-test-2648976766/listtest/key-10",
            "Initiated": "2025-03-25T21:31:43.512Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350",
            "Key": "ozone-test-2648976766/listtest/key-11",
            "Initiated": "2025-03-25T21:31:44.049Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671",
            "Key": "ozone-test-2648976766/listtest/key-12",
            "Initiated": "2025-03-25T21:31:44.544Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632",
            "Key": "ozone-test-2648976766/listtest/key-13",
            "Initiated": "2025-03-25T21:31:45.029Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881",
            "Key": "ozone-test-2648976766/listtest/key-14",
            "Initiated": "2025-03-25T21:31:45.522Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450",
            "Key": "ozone-test-2648976766/listtest/key-15",
            "Initiated": "2025-03-25T21:31:46.010Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451",
            "Key": "ozone-test-2648976766/listtest/key-16",
            "Initiated": "2025-03-25T21:31:46.510Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164",
            "Key": "ozone-test-2648976766/listtest/key-17",
            "Initiated": "2025-03-25T21:31:47.002Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733",
            "Key": "ozone-test-2648976766/listtest/key-18",
            "Initiated": "2025-03-25T21:31:47.490Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694",
            "Key": "ozone-test-2648976766/listtest/key-19",
            "Initiated": "2025-03-25T21:31:47.975Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/listtest/key-1"
}</msg>
<status status="PASS" starttime="20250325 21:31:52.534" endtime="20250325 21:31:52.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:52.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:52.535" endtime="20250325 21:31:52.535"/>
</kw>
<status status="PASS" starttime="20250325 21:31:52.058" endtime="20250325 21:31:52.535"/>
</kw>
<msg timestamp="20250325 21:31:52.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:31:52.058" endtime="20250325 21:31:52.535"/>
</kw>
<msg timestamp="20250325 21:31:52.535" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708",
            "Key": "ozone-test-2648976766/listtest/key-1",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250325 21:31:52.057" endtime="20250325 21:31:52.535"/>
</kw>
<msg timestamp="20250325 21:31:52.536" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708",
            "Key": "ozone-test-2648976766/listtest/key-1",
            "Initiated": "202...</msg>
<status status="PASS" starttime="20250325 21:31:52.057" endtime="20250325 21:31:52.536"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:52.538" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708",
            "Key": "ozone-test-2648976766/listtest/key-1",
            "Initiated": "2025-03-25T21:31:39.087Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517",
            "Key": "ozone-test-2648976766/listtest/key-10",
            "Initiated": "2025-03-25T21:31:43.512Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350",
            "Key": "ozone-test-2648976766/listtest/key-11",
            "Initiated": "2025-03-25T21:31:44.049Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671",
            "Key": "ozone-test-2648976766/listtest/key-12",
            "Initiated": "2025-03-25T21:31:44.544Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632",
            "Key": "ozone-test-2648976766/listtest/key-13",
            "Initiated": "2025-03-25T21:31:45.029Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881",
            "Key": "ozone-test-2648976766/listtest/key-14",
            "Initiated": "2025-03-25T21:31:45.522Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450",
            "Key": "ozone-test-2648976766/listtest/key-15",
            "Initiated": "2025-03-25T21:31:46.010Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451",
            "Key": "ozone-test-2648976766/listtest/key-16",
            "Initiated": "2025-03-25T21:31:46.510Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164",
            "Key": "ozone-test-2648976766/listtest/key-17",
            "Initiated": "2025-03-25T21:31:47.002Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733",
            "Key": "ozone-test-2648976766/listtest/key-18",
            "Initiated": "2025-03-25T21:31:47.490Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694",
            "Key": "ozone-test-2648976766/listtest/key-19",
            "Initiated": "2025-03-25T21:31:47.975Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/listtest/key-1"
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:52.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:52.544" level="INFO">${output} = 11</msg>
<status status="PASS" starttime="20250325 21:31:52.536" endtime="20250325 21:31:52.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:52.545" level="INFO">11</msg>
<status status="PASS" starttime="20250325 21:31:52.544" endtime="20250325 21:31:52.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:52.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:52.545" endtime="20250325 21:31:52.545"/>
</kw>
<msg timestamp="20250325 21:31:52.545" level="INFO">${count} = 11</msg>
<status status="PASS" starttime="20250325 21:31:52.536" endtime="20250325 21:31:52.545"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>11</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:31:52.545" endtime="20250325 21:31:52.546"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>25</value>
<iter>
<var name="${index}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:52.546" level="INFO">${key} = ozone-test-2648976766/listtest/key-0</msg>
<status status="PASS" starttime="20250325 21:31:52.546" endtime="20250325 21:31:52.546"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:52.547" level="INFO">${uploadID} = 0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275</msg>
<status status="PASS" starttime="20250325 21:31:52.546" endtime="20250325 21:31:52.547"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:52.550" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-0 --upload-id 0195cf37-d8cf-72da-b440-b32e67db0736-114225204335411275 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:53.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:53.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:52.548" endtime="20250325 21:31:53.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:53.018" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:53.018" endtime="20250325 21:31:53.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:53.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:53.018" endtime="20250325 21:31:53.019"/>
</kw>
<msg timestamp="20250325 21:31:53.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:52.548" endtime="20250325 21:31:53.019"/>
</kw>
<msg timestamp="20250325 21:31:53.019" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:52.547" endtime="20250325 21:31:53.019"/>
</kw>
<status status="PASS" starttime="20250325 21:31:52.547" endtime="20250325 21:31:53.019"/>
</kw>
<status status="PASS" starttime="20250325 21:31:52.546" endtime="20250325 21:31:53.019"/>
</iter>
<iter>
<var name="${index}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:53.020" level="INFO">${key} = ozone-test-2648976766/listtest/key-1</msg>
<status status="PASS" starttime="20250325 21:31:53.019" endtime="20250325 21:31:53.020"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:53.020" level="INFO">${uploadID} = 0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708</msg>
<status status="PASS" starttime="20250325 21:31:53.020" endtime="20250325 21:31:53.020"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:53.024" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-1 --upload-id 0195cf37-dacf-7c52-9760-c1af7fa73ed9-114225204368965708 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:53.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:53.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:53.021" endtime="20250325 21:31:53.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:53.492" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:53.492" endtime="20250325 21:31:53.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:53.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:53.493" endtime="20250325 21:31:53.493"/>
</kw>
<msg timestamp="20250325 21:31:53.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:53.021" endtime="20250325 21:31:53.493"/>
</kw>
<msg timestamp="20250325 21:31:53.493" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:53.021" endtime="20250325 21:31:53.493"/>
</kw>
<status status="PASS" starttime="20250325 21:31:53.020" endtime="20250325 21:31:53.493"/>
</kw>
<status status="PASS" starttime="20250325 21:31:53.019" endtime="20250325 21:31:53.493"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:53.494" level="INFO">${key} = ozone-test-2648976766/listtest/key-2</msg>
<status status="PASS" starttime="20250325 21:31:53.493" endtime="20250325 21:31:53.494"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:53.494" level="INFO">${uploadID} = 0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317</msg>
<status status="PASS" starttime="20250325 21:31:53.494" endtime="20250325 21:31:53.494"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:53.498" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-2 --upload-id 0195cf37-dcc6-70c0-bd92-1660dc5205c9-114225204401930317 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:53.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:53.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:53.495" endtime="20250325 21:31:53.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:53.974" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:53.974" endtime="20250325 21:31:53.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:53.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:53.975" endtime="20250325 21:31:53.975"/>
</kw>
<msg timestamp="20250325 21:31:53.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:53.495" endtime="20250325 21:31:53.975"/>
</kw>
<msg timestamp="20250325 21:31:53.975" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:53.495" endtime="20250325 21:31:53.975"/>
</kw>
<status status="PASS" starttime="20250325 21:31:53.494" endtime="20250325 21:31:53.975"/>
</kw>
<status status="PASS" starttime="20250325 21:31:53.493" endtime="20250325 21:31:53.975"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:53.976" level="INFO">${key} = ozone-test-2648976766/listtest/key-3</msg>
<status status="PASS" starttime="20250325 21:31:53.976" endtime="20250325 21:31:53.976"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:53.976" level="INFO">${uploadID} = 0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318</msg>
<status status="PASS" starttime="20250325 21:31:53.976" endtime="20250325 21:31:53.976"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:53.980" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-3 --upload-id 0195cf37-deba-7778-83c8-6bfdac925156-114225204434698318 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:54.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:54.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:53.978" endtime="20250325 21:31:54.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:54.450" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:54.449" endtime="20250325 21:31:54.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:54.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:54.450" endtime="20250325 21:31:54.450"/>
</kw>
<msg timestamp="20250325 21:31:54.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:53.977" endtime="20250325 21:31:54.450"/>
</kw>
<msg timestamp="20250325 21:31:54.450" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:53.977" endtime="20250325 21:31:54.451"/>
</kw>
<status status="PASS" starttime="20250325 21:31:53.976" endtime="20250325 21:31:54.451"/>
</kw>
<status status="PASS" starttime="20250325 21:31:53.976" endtime="20250325 21:31:54.451"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:54.451" level="INFO">${key} = ozone-test-2648976766/listtest/key-4</msg>
<status status="PASS" starttime="20250325 21:31:54.451" endtime="20250325 21:31:54.451"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:54.451" level="INFO">${uploadID} = 0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279</msg>
<status status="PASS" starttime="20250325 21:31:54.451" endtime="20250325 21:31:54.452"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:54.455" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-4 --upload-id 0195cf37-e09f-7536-8f83-31007885ead7-114225204466483279 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:54.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:54.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:54.453" endtime="20250325 21:31:54.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:54.920" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:54.920" endtime="20250325 21:31:54.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:54.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:54.920" endtime="20250325 21:31:54.921"/>
</kw>
<msg timestamp="20250325 21:31:54.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:54.452" endtime="20250325 21:31:54.921"/>
</kw>
<msg timestamp="20250325 21:31:54.921" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:54.452" endtime="20250325 21:31:54.921"/>
</kw>
<status status="PASS" starttime="20250325 21:31:54.452" endtime="20250325 21:31:54.921"/>
</kw>
<status status="PASS" starttime="20250325 21:31:54.451" endtime="20250325 21:31:54.921"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:54.922" level="INFO">${key} = ozone-test-2648976766/listtest/key-5</msg>
<status status="PASS" starttime="20250325 21:31:54.921" endtime="20250325 21:31:54.922"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:54.922" level="INFO">${uploadID} = 0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136</msg>
<status status="PASS" starttime="20250325 21:31:54.922" endtime="20250325 21:31:54.922"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:54.926" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-5 --upload-id 0195cf37-e28f-7f28-b2a4-53ae122505c1-114225204498989136 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:55.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:55.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:54.924" endtime="20250325 21:31:55.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:55.397" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:55.397" endtime="20250325 21:31:55.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:55.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:55.397" endtime="20250325 21:31:55.398"/>
</kw>
<msg timestamp="20250325 21:31:55.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:54.923" endtime="20250325 21:31:55.398"/>
</kw>
<msg timestamp="20250325 21:31:55.398" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:54.923" endtime="20250325 21:31:55.398"/>
</kw>
<status status="PASS" starttime="20250325 21:31:54.922" endtime="20250325 21:31:55.398"/>
</kw>
<status status="PASS" starttime="20250325 21:31:54.921" endtime="20250325 21:31:55.398"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:55.399" level="INFO">${key} = ozone-test-2648976766/listtest/key-6</msg>
<status status="PASS" starttime="20250325 21:31:55.398" endtime="20250325 21:31:55.399"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:55.399" level="INFO">${uploadID} = 0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921</msg>
<status status="PASS" starttime="20250325 21:31:55.399" endtime="20250325 21:31:55.399"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:55.403" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-6 --upload-id 0195cf37-e47d-7c61-addb-90f518cb7994-114225204531363921 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:55.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:55.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:55.400" endtime="20250325 21:31:55.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:55.878" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:55.878" endtime="20250325 21:31:55.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:55.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:55.878" endtime="20250325 21:31:55.878"/>
</kw>
<msg timestamp="20250325 21:31:55.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:55.400" endtime="20250325 21:31:55.879"/>
</kw>
<msg timestamp="20250325 21:31:55.879" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:55.400" endtime="20250325 21:31:55.879"/>
</kw>
<status status="PASS" starttime="20250325 21:31:55.399" endtime="20250325 21:31:55.879"/>
</kw>
<status status="PASS" starttime="20250325 21:31:55.398" endtime="20250325 21:31:55.879"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:55.879" level="INFO">${key} = ozone-test-2648976766/listtest/key-7</msg>
<status status="PASS" starttime="20250325 21:31:55.879" endtime="20250325 21:31:55.879"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:55.880" level="INFO">${uploadID} = 0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562</msg>
<status status="PASS" starttime="20250325 21:31:55.880" endtime="20250325 21:31:55.880"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:55.883" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-7 --upload-id 0195cf37-e667-7da5-8a64-cb58210b9ee3-114225204563476562 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:56.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:56.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:55.881" endtime="20250325 21:31:56.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:56.354" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:56.354" endtime="20250325 21:31:56.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:56.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:56.354" endtime="20250325 21:31:56.355"/>
</kw>
<msg timestamp="20250325 21:31:56.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:55.881" endtime="20250325 21:31:56.355"/>
</kw>
<msg timestamp="20250325 21:31:56.355" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:55.880" endtime="20250325 21:31:56.355"/>
</kw>
<status status="PASS" starttime="20250325 21:31:55.880" endtime="20250325 21:31:56.355"/>
</kw>
<status status="PASS" starttime="20250325 21:31:55.879" endtime="20250325 21:31:56.355"/>
</iter>
<iter>
<var name="${index}">8</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:56.356" level="INFO">${key} = ozone-test-2648976766/listtest/key-8</msg>
<status status="PASS" starttime="20250325 21:31:56.356" endtime="20250325 21:31:56.356"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:56.356" level="INFO">${uploadID} = 0195cf37-e848-7277-8a86-e7c081115853-114225204594999379</msg>
<status status="PASS" starttime="20250325 21:31:56.356" endtime="20250325 21:31:56.356"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:56.360" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-8 --upload-id 0195cf37-e848-7277-8a86-e7c081115853-114225204594999379 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:56.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:56.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:56.358" endtime="20250325 21:31:56.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:56.824" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:56.824" endtime="20250325 21:31:56.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:56.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:56.824" endtime="20250325 21:31:56.825"/>
</kw>
<msg timestamp="20250325 21:31:56.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:56.357" endtime="20250325 21:31:56.825"/>
</kw>
<msg timestamp="20250325 21:31:56.825" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:56.357" endtime="20250325 21:31:56.825"/>
</kw>
<status status="PASS" starttime="20250325 21:31:56.356" endtime="20250325 21:31:56.825"/>
</kw>
<status status="PASS" starttime="20250325 21:31:56.355" endtime="20250325 21:31:56.825"/>
</iter>
<iter>
<var name="${index}">9</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:56.826" level="INFO">${key} = ozone-test-2648976766/listtest/key-9</msg>
<status status="PASS" starttime="20250325 21:31:56.825" endtime="20250325 21:31:56.826"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:56.826" level="INFO">${uploadID} = 0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804</msg>
<status status="PASS" starttime="20250325 21:31:56.826" endtime="20250325 21:31:56.826"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:56.829" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-9 --upload-id 0195cf37-ea2c-70e0-909c-2b979f6a2242-114225204626718804 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:57.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:57.297" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:56.827" endtime="20250325 21:31:57.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:57.297" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:57.297" endtime="20250325 21:31:57.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:57.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:57.298" endtime="20250325 21:31:57.298"/>
</kw>
<msg timestamp="20250325 21:31:57.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:56.827" endtime="20250325 21:31:57.298"/>
</kw>
<msg timestamp="20250325 21:31:57.298" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:56.826" endtime="20250325 21:31:57.298"/>
</kw>
<status status="PASS" starttime="20250325 21:31:56.826" endtime="20250325 21:31:57.298"/>
</kw>
<status status="PASS" starttime="20250325 21:31:56.825" endtime="20250325 21:31:57.298"/>
</iter>
<iter>
<var name="${index}">10</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:57.299" level="INFO">${key} = ozone-test-2648976766/listtest/key-10</msg>
<status status="PASS" starttime="20250325 21:31:57.299" endtime="20250325 21:31:57.299"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:57.299" level="INFO">${uploadID} = 0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517</msg>
<status status="PASS" starttime="20250325 21:31:57.299" endtime="20250325 21:31:57.299"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:57.303" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-10 --upload-id 0195cf37-ec18-7280-ada1-bee2e96020f5-114225204658962517 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:57.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:57.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:57.301" endtime="20250325 21:31:57.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:57.770" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:57.770" endtime="20250325 21:31:57.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:57.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:57.771" endtime="20250325 21:31:57.771"/>
</kw>
<msg timestamp="20250325 21:31:57.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:57.300" endtime="20250325 21:31:57.771"/>
</kw>
<msg timestamp="20250325 21:31:57.771" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:57.300" endtime="20250325 21:31:57.771"/>
</kw>
<status status="PASS" starttime="20250325 21:31:57.299" endtime="20250325 21:31:57.771"/>
</kw>
<status status="PASS" starttime="20250325 21:31:57.299" endtime="20250325 21:31:57.771"/>
</iter>
<iter>
<var name="${index}">11</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:57.772" level="INFO">${key} = ozone-test-2648976766/listtest/key-11</msg>
<status status="PASS" starttime="20250325 21:31:57.772" endtime="20250325 21:31:57.772"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:57.772" level="INFO">${uploadID} = 0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350</msg>
<status status="PASS" starttime="20250325 21:31:57.772" endtime="20250325 21:31:57.772"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:57.776" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-11 --upload-id 0195cf37-ee31-7eff-9cb5-f20b14f4d67a-114225204694155350 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:58.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:58.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:57.774" endtime="20250325 21:31:58.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:58.247" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:58.247" endtime="20250325 21:31:58.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:58.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:58.247" endtime="20250325 21:31:58.248"/>
</kw>
<msg timestamp="20250325 21:31:58.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:57.773" endtime="20250325 21:31:58.248"/>
</kw>
<msg timestamp="20250325 21:31:58.248" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:57.773" endtime="20250325 21:31:58.248"/>
</kw>
<status status="PASS" starttime="20250325 21:31:57.772" endtime="20250325 21:31:58.248"/>
</kw>
<status status="PASS" starttime="20250325 21:31:57.772" endtime="20250325 21:31:58.248"/>
</iter>
<iter>
<var name="${index}">12</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:58.249" level="INFO">${key} = ozone-test-2648976766/listtest/key-12</msg>
<status status="PASS" starttime="20250325 21:31:58.248" endtime="20250325 21:31:58.249"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:58.249" level="INFO">${uploadID} = 0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671</msg>
<status status="PASS" starttime="20250325 21:31:58.249" endtime="20250325 21:31:58.249"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:58.253" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-12 --upload-id 0195cf37-f020-763c-bfb0-603adb1ac274-114225204726595671 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:58.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:58.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:58.251" endtime="20250325 21:31:58.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:58.723" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:58.722" endtime="20250325 21:31:58.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:58.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:58.723" endtime="20250325 21:31:58.723"/>
</kw>
<msg timestamp="20250325 21:31:58.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:58.250" endtime="20250325 21:31:58.723"/>
</kw>
<msg timestamp="20250325 21:31:58.723" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:58.250" endtime="20250325 21:31:58.724"/>
</kw>
<status status="PASS" starttime="20250325 21:31:58.249" endtime="20250325 21:31:58.724"/>
</kw>
<status status="PASS" starttime="20250325 21:31:58.248" endtime="20250325 21:31:58.724"/>
</iter>
<iter>
<var name="${index}">13</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:58.724" level="INFO">${key} = ozone-test-2648976766/listtest/key-13</msg>
<status status="PASS" starttime="20250325 21:31:58.724" endtime="20250325 21:31:58.724"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:58.725" level="INFO">${uploadID} = 0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632</msg>
<status status="PASS" starttime="20250325 21:31:58.724" endtime="20250325 21:31:58.725"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:58.728" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-13 --upload-id 0195cf37-f205-77b0-bad9-5774648aa5eb-114225204758380632 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:59.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:59.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:58.726" endtime="20250325 21:31:59.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:59.215" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:59.215" endtime="20250325 21:31:59.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:59.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:59.215" endtime="20250325 21:31:59.216"/>
</kw>
<msg timestamp="20250325 21:31:59.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:58.726" endtime="20250325 21:31:59.216"/>
</kw>
<msg timestamp="20250325 21:31:59.216" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:58.725" endtime="20250325 21:31:59.216"/>
</kw>
<status status="PASS" starttime="20250325 21:31:58.725" endtime="20250325 21:31:59.216"/>
</kw>
<status status="PASS" starttime="20250325 21:31:58.724" endtime="20250325 21:31:59.216"/>
</iter>
<iter>
<var name="${index}">14</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:59.217" level="INFO">${key} = ozone-test-2648976766/listtest/key-14</msg>
<status status="PASS" starttime="20250325 21:31:59.216" endtime="20250325 21:31:59.217"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:59.217" level="INFO">${uploadID} = 0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881</msg>
<status status="PASS" starttime="20250325 21:31:59.217" endtime="20250325 21:31:59.217"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:59.221" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-14 --upload-id 0195cf37-f3f2-7e4b-8067-e969c1e02a3a-114225204790689881 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:31:59.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:31:59.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:59.218" endtime="20250325 21:31:59.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:31:59.698" level="INFO"/>
<status status="PASS" starttime="20250325 21:31:59.698" endtime="20250325 21:31:59.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:31:59.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:31:59.698" endtime="20250325 21:31:59.699"/>
</kw>
<msg timestamp="20250325 21:31:59.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:59.218" endtime="20250325 21:31:59.699"/>
</kw>
<msg timestamp="20250325 21:31:59.699" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:59.218" endtime="20250325 21:31:59.699"/>
</kw>
<status status="PASS" starttime="20250325 21:31:59.217" endtime="20250325 21:31:59.699"/>
</kw>
<status status="PASS" starttime="20250325 21:31:59.216" endtime="20250325 21:31:59.699"/>
</iter>
<iter>
<var name="${index}">15</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:31:59.699" level="INFO">${key} = ozone-test-2648976766/listtest/key-15</msg>
<status status="PASS" starttime="20250325 21:31:59.699" endtime="20250325 21:31:59.699"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:31:59.700" level="INFO">${uploadID} = 0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450</msg>
<status status="PASS" starttime="20250325 21:31:59.700" endtime="20250325 21:31:59.700"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:31:59.703" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-15 --upload-id 0195cf37-f5da-7524-8241-92ec1a0c4fe0-114225204822671450 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:00.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:00.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:59.701" endtime="20250325 21:32:00.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:00.186" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:00.185" endtime="20250325 21:32:00.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:00.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:00.186" endtime="20250325 21:32:00.186"/>
</kw>
<msg timestamp="20250325 21:32:00.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:31:59.701" endtime="20250325 21:32:00.186"/>
</kw>
<msg timestamp="20250325 21:32:00.187" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:31:59.700" endtime="20250325 21:32:00.187"/>
</kw>
<status status="PASS" starttime="20250325 21:31:59.700" endtime="20250325 21:32:00.187"/>
</kw>
<status status="PASS" starttime="20250325 21:31:59.699" endtime="20250325 21:32:00.187"/>
</iter>
<iter>
<var name="${index}">16</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:32:00.187" level="INFO">${key} = ozone-test-2648976766/listtest/key-16</msg>
<status status="PASS" starttime="20250325 21:32:00.187" endtime="20250325 21:32:00.187"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:32:00.188" level="INFO">${uploadID} = 0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451</msg>
<status status="PASS" starttime="20250325 21:32:00.187" endtime="20250325 21:32:00.188"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:00.191" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-16 --upload-id 0195cf37-f7ce-7eba-a21b-28140677b43d-114225204855439451 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:00.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:00.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:00.189" endtime="20250325 21:32:00.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:00.656" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:00.656" endtime="20250325 21:32:00.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:00.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:00.656" endtime="20250325 21:32:00.657"/>
</kw>
<msg timestamp="20250325 21:32:00.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:00.188" endtime="20250325 21:32:00.657"/>
</kw>
<msg timestamp="20250325 21:32:00.657" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:00.188" endtime="20250325 21:32:00.657"/>
</kw>
<status status="PASS" starttime="20250325 21:32:00.188" endtime="20250325 21:32:00.657"/>
</kw>
<status status="PASS" starttime="20250325 21:32:00.187" endtime="20250325 21:32:00.657"/>
</iter>
<iter>
<var name="${index}">17</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:32:00.658" level="INFO">${key} = ozone-test-2648976766/listtest/key-17</msg>
<status status="PASS" starttime="20250325 21:32:00.657" endtime="20250325 21:32:00.658"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:32:00.658" level="INFO">${uploadID} = 0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164</msg>
<status status="PASS" starttime="20250325 21:32:00.658" endtime="20250325 21:32:00.658"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:00.661" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-17 --upload-id 0195cf37-f9ba-7a04-8319-cbf79954a85b-114225204887683164 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:01.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:01.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:00.659" endtime="20250325 21:32:01.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:01.163" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:01.162" endtime="20250325 21:32:01.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:01.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:01.163" endtime="20250325 21:32:01.163"/>
</kw>
<msg timestamp="20250325 21:32:01.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:00.659" endtime="20250325 21:32:01.163"/>
</kw>
<msg timestamp="20250325 21:32:01.163" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:00.659" endtime="20250325 21:32:01.163"/>
</kw>
<status status="PASS" starttime="20250325 21:32:00.658" endtime="20250325 21:32:01.164"/>
</kw>
<status status="PASS" starttime="20250325 21:32:00.657" endtime="20250325 21:32:01.164"/>
</iter>
<iter>
<var name="${index}">18</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:32:01.164" level="INFO">${key} = ozone-test-2648976766/listtest/key-18</msg>
<status status="PASS" starttime="20250325 21:32:01.164" endtime="20250325 21:32:01.164"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:32:01.164" level="INFO">${uploadID} = 0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733</msg>
<status status="PASS" starttime="20250325 21:32:01.164" endtime="20250325 21:32:01.165"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:01.168" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-18 --upload-id 0195cf37-fba2-73ff-8112-3546141126c8-114225204919664733 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:01.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:01.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:01.166" endtime="20250325 21:32:01.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:01.631" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:01.631" endtime="20250325 21:32:01.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:01.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:01.632" endtime="20250325 21:32:01.632"/>
</kw>
<msg timestamp="20250325 21:32:01.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:01.165" endtime="20250325 21:32:01.632"/>
</kw>
<msg timestamp="20250325 21:32:01.632" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:01.165" endtime="20250325 21:32:01.632"/>
</kw>
<status status="PASS" starttime="20250325 21:32:01.165" endtime="20250325 21:32:01.632"/>
</kw>
<status status="PASS" starttime="20250325 21:32:01.164" endtime="20250325 21:32:01.632"/>
</iter>
<iter>
<var name="${index}">19</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:32:01.633" level="INFO">${key} = ozone-test-2648976766/listtest/key-19</msg>
<status status="PASS" starttime="20250325 21:32:01.632" endtime="20250325 21:32:01.633"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:32:01.633" level="INFO">${uploadID} = 0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694</msg>
<status status="PASS" starttime="20250325 21:32:01.633" endtime="20250325 21:32:01.633"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:01.637" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-19 --upload-id 0195cf37-fd87-75b5-ab33-11675c3f1f10-114225204951449694 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:02.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:02.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:01.634" endtime="20250325 21:32:02.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:02.102" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:02.102" endtime="20250325 21:32:02.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:02.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:02.102" endtime="20250325 21:32:02.103"/>
</kw>
<msg timestamp="20250325 21:32:02.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:01.634" endtime="20250325 21:32:02.103"/>
</kw>
<msg timestamp="20250325 21:32:02.103" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:01.634" endtime="20250325 21:32:02.103"/>
</kw>
<status status="PASS" starttime="20250325 21:32:01.633" endtime="20250325 21:32:02.103"/>
</kw>
<status status="PASS" starttime="20250325 21:32:01.632" endtime="20250325 21:32:02.103"/>
</iter>
<iter>
<var name="${index}">20</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:32:02.104" level="INFO">${key} = ozone-test-2648976766/listtest/key-20</msg>
<status status="PASS" starttime="20250325 21:32:02.103" endtime="20250325 21:32:02.104"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:32:02.104" level="INFO">${uploadID} = 0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911</msg>
<status status="PASS" starttime="20250325 21:32:02.104" endtime="20250325 21:32:02.104"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:02.108" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-20 --upload-id 0195cf37-ff81-7705-935a-e2143f7092bc-114225204984610911 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:02.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:02.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:02.106" endtime="20250325 21:32:02.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:02.574" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:02.573" endtime="20250325 21:32:02.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:02.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:02.574" endtime="20250325 21:32:02.575"/>
</kw>
<msg timestamp="20250325 21:32:02.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:02.105" endtime="20250325 21:32:02.575"/>
</kw>
<msg timestamp="20250325 21:32:02.575" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:02.105" endtime="20250325 21:32:02.575"/>
</kw>
<status status="PASS" starttime="20250325 21:32:02.104" endtime="20250325 21:32:02.575"/>
</kw>
<status status="PASS" starttime="20250325 21:32:02.103" endtime="20250325 21:32:02.575"/>
</iter>
<iter>
<var name="${index}">21</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:32:02.575" level="INFO">${key} = ozone-test-2648976766/listtest/key-21</msg>
<status status="PASS" starttime="20250325 21:32:02.575" endtime="20250325 21:32:02.576"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:32:02.576" level="INFO">${uploadID} = 0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160</msg>
<status status="PASS" starttime="20250325 21:32:02.576" endtime="20250325 21:32:02.576"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:02.579" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-21 --upload-id 0195cf38-016e-74a2-abef-7eae669bf882-114225205016920160 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:03.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:03.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:02.577" endtime="20250325 21:32:03.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:03.044" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:03.043" endtime="20250325 21:32:03.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:03.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:03.044" endtime="20250325 21:32:03.044"/>
</kw>
<msg timestamp="20250325 21:32:03.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:02.577" endtime="20250325 21:32:03.044"/>
</kw>
<msg timestamp="20250325 21:32:03.045" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:02.576" endtime="20250325 21:32:03.045"/>
</kw>
<status status="PASS" starttime="20250325 21:32:02.576" endtime="20250325 21:32:03.045"/>
</kw>
<status status="PASS" starttime="20250325 21:32:02.575" endtime="20250325 21:32:03.045"/>
</iter>
<iter>
<var name="${index}">22</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:32:03.045" level="INFO">${key} = ozone-test-2648976766/listtest/key-22</msg>
<status status="PASS" starttime="20250325 21:32:03.045" endtime="20250325 21:32:03.045"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:32:03.046" level="INFO">${uploadID} = 0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945</msg>
<status status="PASS" starttime="20250325 21:32:03.045" endtime="20250325 21:32:03.046"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:03.049" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-22 --upload-id 0195cf38-035c-78e4-9050-8247b2f785c3-114225205049294945 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:03.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:03.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:03.047" endtime="20250325 21:32:03.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:03.522" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:03.522" endtime="20250325 21:32:03.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:03.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:03.523" endtime="20250325 21:32:03.523"/>
</kw>
<msg timestamp="20250325 21:32:03.523" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:03.047" endtime="20250325 21:32:03.523"/>
</kw>
<msg timestamp="20250325 21:32:03.523" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:03.046" endtime="20250325 21:32:03.523"/>
</kw>
<status status="PASS" starttime="20250325 21:32:03.046" endtime="20250325 21:32:03.523"/>
</kw>
<status status="PASS" starttime="20250325 21:32:03.045" endtime="20250325 21:32:03.523"/>
</iter>
<iter>
<var name="${index}">23</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:32:03.524" level="INFO">${key} = ozone-test-2648976766/listtest/key-23</msg>
<status status="PASS" starttime="20250325 21:32:03.524" endtime="20250325 21:32:03.524"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:32:03.524" level="INFO">${uploadID} = 0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906</msg>
<status status="PASS" starttime="20250325 21:32:03.524" endtime="20250325 21:32:03.524"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:03.528" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-23 --upload-id 0195cf38-0541-7bd2-b8b4-ec52fea5c996-114225205081079906 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:03.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:03.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:03.526" endtime="20250325 21:32:03.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:03.995" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:03.994" endtime="20250325 21:32:03.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:03.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:03.995" endtime="20250325 21:32:03.995"/>
</kw>
<msg timestamp="20250325 21:32:03.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:03.525" endtime="20250325 21:32:03.995"/>
</kw>
<msg timestamp="20250325 21:32:03.995" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:03.525" endtime="20250325 21:32:03.995"/>
</kw>
<status status="PASS" starttime="20250325 21:32:03.524" endtime="20250325 21:32:03.996"/>
</kw>
<status status="PASS" starttime="20250325 21:32:03.523" endtime="20250325 21:32:03.996"/>
</iter>
<iter>
<var name="${index}">24</var>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${PREFIX}/listtest/key-${index}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:32:03.996" level="INFO">${key} = ozone-test-2648976766/listtest/key-24</msg>
<status status="PASS" starttime="20250325 21:32:03.996" endtime="20250325 21:32:03.996"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${uploadID}</var>
<arg>${uploadIDs}</arg>
<arg>${index}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250325 21:32:03.996" level="INFO">${uploadID} = 0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299</msg>
<status status="PASS" starttime="20250325 21:32:03.996" endtime="20250325 21:32:03.996"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${key}</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:04.000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2648976766/listtest/key-24 --upload-id 0195cf38-0732-7ee5-b6ff-81a9eb0a36cf-114225205113651299 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:04.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:04.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:03.998" endtime="20250325 21:32:04.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:04.464" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:04.463" endtime="20250325 21:32:04.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:04.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:04.464" endtime="20250325 21:32:04.464"/>
</kw>
<msg timestamp="20250325 21:32:04.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:03.997" endtime="20250325 21:32:04.464"/>
</kw>
<msg timestamp="20250325 21:32:04.465" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:03.997" endtime="20250325 21:32:04.465"/>
</kw>
<status status="PASS" starttime="20250325 21:32:03.997" endtime="20250325 21:32:04.465"/>
</kw>
<status status="PASS" starttime="20250325 21:32:03.996" endtime="20250325 21:32:04.465"/>
</iter>
<status status="PASS" starttime="20250325 21:31:52.546" endtime="20250325 21:32:04.465"/>
</for>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:31:38.140" endtime="20250325 21:32:04.465"/>
</test>
<kw name="Teardown Multipart Tests" type="TEARDOWN">
<kw name="Remove Files" library="OperatingSystem">
<arg>/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb</arg>
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<msg timestamp="20250325 21:32:04.467" level="INFO" html="true">File '&lt;a href="file:///tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb"&gt;/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250325 21:32:04.466" endtime="20250325 21:32:04.467"/>
</kw>
<status status="PASS" starttime="20250325 21:32:04.466" endtime="20250325 21:32:04.467"/>
</kw>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:30:37.235" endtime="20250325 21:32:04.467"/>
</suite>
<suite id="s1-s3-s9" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:32:04.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:04.477" endtime="20250325 21:32:04.477"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:32:04.477" endtime="20250325 21:32:04.477"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:32:04.477" endtime="20250325 21:32:04.477"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:04.477" endtime="20250325 21:32:04.477"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:04.477" endtime="20250325 21:32:04.477"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:04.477" endtime="20250325 21:32:04.477"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:04.478" endtime="20250325 21:32:04.478"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:04.478" endtime="20250325 21:32:04.478"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:32:04.478" endtime="20250325 21:32:04.478"/>
</kw>
<status status="PASS" starttime="20250325 21:32:04.476" endtime="20250325 21:32:04.478"/>
</kw>
<test id="s1-s3-s9-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:32:04.479" level="INFO">${postfix} = 51705</msg>
<status status="PASS" starttime="20250325 21:32:04.479" endtime="20250325 21:32:04.479"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:32:04.479" level="INFO">${DESTBUCKET} = destbucket-51705</msg>
<status status="PASS" starttime="20250325 21:32:04.479" endtime="20250325 21:32:04.480"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:04.483" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-51705 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:04.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:04.942" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-51705"
}</msg>
<status status="PASS" starttime="20250325 21:32:04.481" endtime="20250325 21:32:04.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:04.943" level="INFO">{
    "Location": "http://s3g:9878/destbucket-51705"
}</msg>
<status status="PASS" starttime="20250325 21:32:04.943" endtime="20250325 21:32:04.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:04.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:04.943" endtime="20250325 21:32:04.944"/>
</kw>
<status status="PASS" starttime="20250325 21:32:04.480" endtime="20250325 21:32:04.944"/>
</kw>
<msg timestamp="20250325 21:32:04.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:04.480" endtime="20250325 21:32:04.944"/>
</kw>
<msg timestamp="20250325 21:32:04.944" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-51705"
}</msg>
<status status="PASS" starttime="20250325 21:32:04.480" endtime="20250325 21:32:04.944"/>
</kw>
<status status="PASS" starttime="20250325 21:32:04.480" endtime="20250325 21:32:04.944"/>
</kw>
<status status="PASS" starttime="20250325 21:32:04.479" endtime="20250325 21:32:04.944"/>
</kw>
<status status="PASS" starttime="20250325 21:32:04.478" endtime="20250325 21:32:04.944"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:04.947" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20250325 21:32:04.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:04.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:04.945" endtime="20250325 21:32:04.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:04.952" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:04.951" endtime="20250325 21:32:04.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:04.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:04.952" endtime="20250325 21:32:04.952"/>
</kw>
<status status="PASS" starttime="20250325 21:32:04.945" endtime="20250325 21:32:04.952"/>
</kw>
<msg timestamp="20250325 21:32:04.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:04.945" endtime="20250325 21:32:04.953"/>
</kw>
<status status="PASS" starttime="20250325 21:32:04.944" endtime="20250325 21:32:04.953"/>
</kw>
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:04.955" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:04.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:04.960" level="INFO">${output} = be4c1df520fd3d46c737c62cbac5c80a</msg>
<status status="PASS" starttime="20250325 21:32:04.954" endtime="20250325 21:32:04.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:04.960" level="INFO">be4c1df520fd3d46c737c62cbac5c80a</msg>
<status status="PASS" starttime="20250325 21:32:04.960" endtime="20250325 21:32:04.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:04.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:04.961" endtime="20250325 21:32:04.961"/>
</kw>
<status status="PASS" starttime="20250325 21:32:04.953" endtime="20250325 21:32:04.961"/>
</kw>
<msg timestamp="20250325 21:32:04.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:04.953" endtime="20250325 21:32:04.961"/>
</kw>
<msg timestamp="20250325 21:32:04.961" level="INFO">${file_checksum} = be4c1df520fd3d46c737c62cbac5c80a</msg>
<status status="PASS" starttime="20250325 21:32:04.953" endtime="20250325 21:32:04.961"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:04.965" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:05.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:05.493" level="INFO">${output} = {
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\""
}</msg>
<status status="PASS" starttime="20250325 21:32:04.963" endtime="20250325 21:32:05.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:05.494" level="INFO">{
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\""
}</msg>
<status status="PASS" starttime="20250325 21:32:05.493" endtime="20250325 21:32:05.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:05.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:05.494" endtime="20250325 21:32:05.494"/>
</kw>
<status status="PASS" starttime="20250325 21:32:04.962" endtime="20250325 21:32:05.494"/>
</kw>
<msg timestamp="20250325 21:32:05.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:04.962" endtime="20250325 21:32:05.494"/>
</kw>
<msg timestamp="20250325 21:32:05.494" level="INFO">${output} = {
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\""
}</msg>
<status status="PASS" starttime="20250325 21:32:04.962" endtime="20250325 21:32:05.494"/>
</kw>
<msg timestamp="20250325 21:32:05.495" level="INFO">${result} = {
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\""
}</msg>
<status status="PASS" starttime="20250325 21:32:04.962" endtime="20250325 21:32:05.495"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:05.497" level="INFO">Running command 'echo '{
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:05.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:05.503" level="INFO">${output} = "be4c1df520fd3d46c737c62cbac5c80a"</msg>
<status status="PASS" starttime="20250325 21:32:05.495" endtime="20250325 21:32:05.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:05.504" level="INFO">"be4c1df520fd3d46c737c62cbac5c80a"</msg>
<status status="PASS" starttime="20250325 21:32:05.503" endtime="20250325 21:32:05.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:05.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:05.504" endtime="20250325 21:32:05.504"/>
</kw>
<msg timestamp="20250325 21:32:05.504" level="INFO">${eTag} = "be4c1df520fd3d46c737c62cbac5c80a"</msg>
<status status="PASS" starttime="20250325 21:32:05.495" endtime="20250325 21:32:05.505"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:05.505" endtime="20250325 21:32:05.505"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:05.510" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-2648976766/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:05.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:05.986" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/copyobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:05.442Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250325 21:32:05.508" endtime="20250325 21:32:05.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:05.987" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-2648976766/copyobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:05.442Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250325 21:32:05.987" endtime="20250325 21:32:05.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:05.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:05.988" endtime="20250325 21:32:05.988"/>
</kw>
<status status="PASS" starttime="20250325 21:32:05.507" endtime="20250325 21:32:05.988"/>
</kw>
<msg timestamp="20250325 21:32:05.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:05.507" endtime="20250325 21:32:05.988"/>
</kw>
<msg timestamp="20250325 21:32:05.988" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/copyobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:05.442Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250325 21:32:05.506" endtime="20250325 21:32:05.988"/>
</kw>
<msg timestamp="20250325 21:32:05.988" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/copyobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:05.442Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250325 21:32:05.505" endtime="20250325 21:32:05.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:05.989" endtime="20250325 21:32:05.989"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:05.992" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-51705 --key ozone-test-2648976766/copyobject/key=value/f1 --copy-source encrypted/ozone-test-2648976766/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3" 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:06.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:06.552" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:06.480Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:05.990" endtime="20250325 21:32:06.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:06.553" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:06.480Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:06.552" endtime="20250325 21:32:06.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:06.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:06.553" endtime="20250325 21:32:06.554"/>
</kw>
<status status="PASS" starttime="20250325 21:32:05.990" endtime="20250325 21:32:06.554"/>
</kw>
<msg timestamp="20250325 21:32:06.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:05.990" endtime="20250325 21:32:06.554"/>
</kw>
<msg timestamp="20250325 21:32:06.554" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:06.480Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:05.989" endtime="20250325 21:32:06.554"/>
</kw>
<msg timestamp="20250325 21:32:06.554" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:06.480Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:05.989" endtime="20250325 21:32:06.555"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:06.558" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:06.480Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:06.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:06.563" level="INFO">${output} = "be4c1df520fd3d46c737c62cbac5c80a"</msg>
<status status="PASS" starttime="20250325 21:32:06.555" endtime="20250325 21:32:06.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:06.564" level="INFO">"be4c1df520fd3d46c737c62cbac5c80a"</msg>
<status status="PASS" starttime="20250325 21:32:06.564" endtime="20250325 21:32:06.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:06.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:06.564" endtime="20250325 21:32:06.564"/>
</kw>
<msg timestamp="20250325 21:32:06.565" level="INFO">${eTag} = "be4c1df520fd3d46c737c62cbac5c80a"</msg>
<status status="PASS" starttime="20250325 21:32:06.555" endtime="20250325 21:32:06.565"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:06.565" endtime="20250325 21:32:06.565"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:06.569" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-51705 --prefix ozone-test-2648976766/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:07.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:07.039" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/copyobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:06.480Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250325 21:32:06.567" endtime="20250325 21:32:07.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:07.040" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-2648976766/copyobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:06.480Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250325 21:32:07.039" endtime="20250325 21:32:07.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:07.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:07.040" endtime="20250325 21:32:07.040"/>
</kw>
<status status="PASS" starttime="20250325 21:32:06.566" endtime="20250325 21:32:07.041"/>
</kw>
<msg timestamp="20250325 21:32:07.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:06.566" endtime="20250325 21:32:07.041"/>
</kw>
<msg timestamp="20250325 21:32:07.041" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/copyobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:06.480Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250325 21:32:06.566" endtime="20250325 21:32:07.041"/>
</kw>
<msg timestamp="20250325 21:32:07.041" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/copyobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:06.480Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250325 21:32:06.565" endtime="20250325 21:32:07.041"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:07.041" endtime="20250325 21:32:07.041"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:07.046" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-51705 --key ozone-test-2648976766/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:07.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:07.516" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:06 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:07.043" endtime="20250325 21:32:07.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:07.517" level="INFO">{
    "LastModified": "Tue, 25 Mar 2025 21:32:06 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:07 GMT",
    "Metadata": {
        "gdprenabled": "true",
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Tue, 25 Mar 2025 21:32:07 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:07.517" endtime="20250325 21:32:07.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:07.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:07.518" endtime="20250325 21:32:07.518"/>
</kw>
<status status="PASS" starttime="20250325 21:32:07.043" endtime="20250325 21:32:07.518"/>
</kw>
<msg timestamp="20250325 21:32:07.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:07.043" endtime="20250325 21:32:07.518"/>
</kw>
<msg timestamp="20250325 21:32:07.518" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:06 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:07.042" endtime="20250325 21:32:07.518"/>
</kw>
<msg timestamp="20250325 21:32:07.519" level="INFO">${result} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:06 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:07.042" endtime="20250325 21:32:07.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:07.519" endtime="20250325 21:32:07.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:07.519" endtime="20250325 21:32:07.519"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:07.519" endtime="20250325 21:32:07.520"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:07.520" endtime="20250325 21:32:07.520"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:07.524" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-51705 --key ozone-test-2648976766/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:08.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:08.014" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:06 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:07.521" endtime="20250325 21:32:08.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:08.015" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:06 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:07 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:32:07 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:08.014" endtime="20250325 21:32:08.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:08.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:08.015" endtime="20250325 21:32:08.015"/>
</kw>
<status status="PASS" starttime="20250325 21:32:07.521" endtime="20250325 21:32:08.016"/>
</kw>
<msg timestamp="20250325 21:32:08.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:07.521" endtime="20250325 21:32:08.016"/>
</kw>
<msg timestamp="20250325 21:32:08.016" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:06 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:07.521" endtime="20250325 21:32:08.016"/>
</kw>
<msg timestamp="20250325 21:32:08.016" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:06 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:07.520" endtime="20250325 21:32:08.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:08.016" endtime="20250325 21:32:08.016"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:08.019" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:06 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:07 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:32:07 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:08.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:08.025" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250325 21:32:08.017" endtime="20250325 21:32:08.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:08.026" level="INFO">2</msg>
<status status="PASS" starttime="20250325 21:32:08.025" endtime="20250325 21:32:08.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:08.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:08.026" endtime="20250325 21:32:08.027"/>
</kw>
<msg timestamp="20250325 21:32:08.027" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250325 21:32:08.016" endtime="20250325 21:32:08.027"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:08.027" endtime="20250325 21:32:08.027"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:08.032" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-51705 --key ozone-test-2648976766/copyobject/key=value/f1 --copy-source encrypted/ozone-test-2648976766/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:08.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:08.594" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:08.529Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:08.029" endtime="20250325 21:32:08.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:08.595" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:08.529Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:08.594" endtime="20250325 21:32:08.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:08.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:08.596" endtime="20250325 21:32:08.596"/>
</kw>
<status status="PASS" starttime="20250325 21:32:08.029" endtime="20250325 21:32:08.596"/>
</kw>
<msg timestamp="20250325 21:32:08.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:08.029" endtime="20250325 21:32:08.596"/>
</kw>
<msg timestamp="20250325 21:32:08.596" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:08.529Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:08.028" endtime="20250325 21:32:08.596"/>
</kw>
<msg timestamp="20250325 21:32:08.596" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:08.529Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:08.027" endtime="20250325 21:32:08.596"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:08.599" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:08.529Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:08.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:08.604" level="INFO">${output} = "be4c1df520fd3d46c737c62cbac5c80a"</msg>
<status status="PASS" starttime="20250325 21:32:08.597" endtime="20250325 21:32:08.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:08.605" level="INFO">"be4c1df520fd3d46c737c62cbac5c80a"</msg>
<status status="PASS" starttime="20250325 21:32:08.605" endtime="20250325 21:32:08.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:08.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:08.605" endtime="20250325 21:32:08.605"/>
</kw>
<msg timestamp="20250325 21:32:08.606" level="INFO">${eTag} = "be4c1df520fd3d46c737c62cbac5c80a"</msg>
<status status="PASS" starttime="20250325 21:32:08.597" endtime="20250325 21:32:08.606"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:08.606" endtime="20250325 21:32:08.606"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:08.610" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-51705 --prefix ozone-test-2648976766/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:09.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:09.092" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/copyobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:08.529Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250325 21:32:08.608" endtime="20250325 21:32:09.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:09.093" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-2648976766/copyobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:08.529Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250325 21:32:09.092" endtime="20250325 21:32:09.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:09.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:09.093" endtime="20250325 21:32:09.093"/>
</kw>
<status status="PASS" starttime="20250325 21:32:08.607" endtime="20250325 21:32:09.093"/>
</kw>
<msg timestamp="20250325 21:32:09.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:08.607" endtime="20250325 21:32:09.093"/>
</kw>
<msg timestamp="20250325 21:32:09.094" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/copyobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:08.529Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250325 21:32:08.607" endtime="20250325 21:32:09.094"/>
</kw>
<msg timestamp="20250325 21:32:09.094" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/copyobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:08.529Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250325 21:32:08.606" endtime="20250325 21:32:09.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:09.094" endtime="20250325 21:32:09.094"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:09.098" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-51705 --key ozone-test-2648976766/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:09.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:09.567" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:08 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:09.095" endtime="20250325 21:32:09.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:09.568" level="INFO">{
    "LastModified": "Tue, 25 Mar 2025 21:32:08 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:09 GMT",
    "Metadata": {
        "custom-key3": "custom-value3",
        "custom-key4": "custom-value4"
    },
    "ExpiresString": "Tue, 25 Mar 2025 21:32:09 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:09.567" endtime="20250325 21:32:09.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:09.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:09.568" endtime="20250325 21:32:09.568"/>
</kw>
<status status="PASS" starttime="20250325 21:32:09.095" endtime="20250325 21:32:09.568"/>
</kw>
<msg timestamp="20250325 21:32:09.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:09.095" endtime="20250325 21:32:09.569"/>
</kw>
<msg timestamp="20250325 21:32:09.569" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:08 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:09.095" endtime="20250325 21:32:09.569"/>
</kw>
<msg timestamp="20250325 21:32:09.569" level="INFO">${result} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:08 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:09.094" endtime="20250325 21:32:09.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:09.569" endtime="20250325 21:32:09.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:09.569" endtime="20250325 21:32:09.570"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:09.570" endtime="20250325 21:32:09.570"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:09.570" endtime="20250325 21:32:09.570"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:09.574" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-51705 --key ozone-test-2648976766/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:10.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:10.064" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:08 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:09.572" endtime="20250325 21:32:10.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:10.065" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:08 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:09 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Tue, 25 Mar 2025 21:32:09 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:10.065" endtime="20250325 21:32:10.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:10.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:10.065" endtime="20250325 21:32:10.066"/>
</kw>
<status status="PASS" starttime="20250325 21:32:09.571" endtime="20250325 21:32:10.066"/>
</kw>
<msg timestamp="20250325 21:32:10.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:09.571" endtime="20250325 21:32:10.066"/>
</kw>
<msg timestamp="20250325 21:32:10.066" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:08 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:09.571" endtime="20250325 21:32:10.066"/>
</kw>
<msg timestamp="20250325 21:32:10.066" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:08 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:09.570" endtime="20250325 21:32:10.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:10.067" endtime="20250325 21:32:10.067"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:10.070" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:08 GMT",
    "ContentLength": 29,
    "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:09 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Tue, 25 Mar 2025 21:32:09 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:10.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:10.075" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250325 21:32:10.067" endtime="20250325 21:32:10.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:10.076" level="INFO">1</msg>
<status status="PASS" starttime="20250325 21:32:10.075" endtime="20250325 21:32:10.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:10.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:10.076" endtime="20250325 21:32:10.076"/>
</kw>
<msg timestamp="20250325 21:32:10.076" level="INFO">${tagCount} = 1</msg>
<status status="PASS" starttime="20250325 21:32:10.067" endtime="20250325 21:32:10.076"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:10.076" endtime="20250325 21:32:10.077"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:04.478" endtime="20250325 21:32:10.077"/>
</test>
<test id="s1-s3-s9-t2" name="Copy Object Where Bucket is not available" line="90">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:10.080" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-2648976766/copyobject/key=value/f1 --copy-source encrypted/ozone-test-2648976766/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:10.579" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:10.579" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:32:10.078" endtime="20250325 21:32:10.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:10.580" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:32:10.580" endtime="20250325 21:32:10.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:10.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:10.580" endtime="20250325 21:32:10.581"/>
</kw>
<msg timestamp="20250325 21:32:10.581" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:32:10.078" endtime="20250325 21:32:10.581"/>
</kw>
<msg timestamp="20250325 21:32:10.581" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:32:10.078" endtime="20250325 21:32:10.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:10.581" endtime="20250325 21:32:10.581"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:10.585" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-51705 --key ozone-test-2648976766/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-2648976766/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:11.075" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:11.075" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:32:10.582" endtime="20250325 21:32:11.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:11.076" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:32:11.076" endtime="20250325 21:32:11.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:11.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:11.076" endtime="20250325 21:32:11.077"/>
</kw>
<msg timestamp="20250325 21:32:11.077" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:32:10.582" endtime="20250325 21:32:11.077"/>
</kw>
<msg timestamp="20250325 21:32:11.077" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:32:10.581" endtime="20250325 21:32:11.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:11.077" endtime="20250325 21:32:11.077"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:10.077" endtime="20250325 21:32:11.078"/>
</test>
<test id="s1-s3-s9-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="96">
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:11.082" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:11.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:11.087" level="INFO">${output} = be4c1df520fd3d46c737c62cbac5c80a</msg>
<status status="PASS" starttime="20250325 21:32:11.079" endtime="20250325 21:32:11.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:11.087" level="INFO">be4c1df520fd3d46c737c62cbac5c80a</msg>
<status status="PASS" starttime="20250325 21:32:11.087" endtime="20250325 21:32:11.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:11.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:11.088" endtime="20250325 21:32:11.088"/>
</kw>
<status status="PASS" starttime="20250325 21:32:11.079" endtime="20250325 21:32:11.088"/>
</kw>
<msg timestamp="20250325 21:32:11.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:11.079" endtime="20250325 21:32:11.088"/>
</kw>
<msg timestamp="20250325 21:32:11.088" level="INFO">${file_checksum} = be4c1df520fd3d46c737c62cbac5c80a</msg>
<status status="PASS" starttime="20250325 21:32:11.079" endtime="20250325 21:32:11.088"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:11.092" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-51705 --key ozone-test-2648976766/copyobject/key=value/f1 --copy-source destbucket-51705/ozone-test-2648976766/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:11.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:11.574" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:11.521Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:11.090" endtime="20250325 21:32:11.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:11.574" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:11.521Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:11.574" endtime="20250325 21:32:11.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:11.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:11.575" endtime="20250325 21:32:11.575"/>
</kw>
<status status="PASS" starttime="20250325 21:32:11.090" endtime="20250325 21:32:11.575"/>
</kw>
<msg timestamp="20250325 21:32:11.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:11.090" endtime="20250325 21:32:11.575"/>
</kw>
<msg timestamp="20250325 21:32:11.575" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:11.521Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:11.089" endtime="20250325 21:32:11.575"/>
</kw>
<msg timestamp="20250325 21:32:11.576" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:11.521Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:11.088" endtime="20250325 21:32:11.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:11.576" endtime="20250325 21:32:11.576"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:11.579" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"be4c1df520fd3d46c737c62cbac5c80a\"",
        "LastModified": "2025-03-25T21:32:11.521Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:11.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:11.584" level="INFO">${output} = "be4c1df520fd3d46c737c62cbac5c80a"</msg>
<status status="PASS" starttime="20250325 21:32:11.576" endtime="20250325 21:32:11.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:11.584" level="INFO">"be4c1df520fd3d46c737c62cbac5c80a"</msg>
<status status="PASS" starttime="20250325 21:32:11.584" endtime="20250325 21:32:11.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:11.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:11.585" endtime="20250325 21:32:11.585"/>
</kw>
<msg timestamp="20250325 21:32:11.585" level="INFO">${eTag} = "be4c1df520fd3d46c737c62cbac5c80a"</msg>
<status status="PASS" starttime="20250325 21:32:11.576" endtime="20250325 21:32:11.585"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:11.585" endtime="20250325 21:32:11.586"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:11.078" endtime="20250325 21:32:11.586"/>
</test>
<test id="s1-s3-s9-t4" name="Copy Object Where Key not available" line="103">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:11.590" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-51705 --key ozone-test-2648976766/copyobject/key=value/f1 --copy-source encrypted/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:12.072" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:12.072" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250325 21:32:11.588" endtime="20250325 21:32:12.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:12.073" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250325 21:32:12.072" endtime="20250325 21:32:12.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:12.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:12.073" endtime="20250325 21:32:12.073"/>
</kw>
<msg timestamp="20250325 21:32:12.073" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250325 21:32:11.587" endtime="20250325 21:32:12.073"/>
</kw>
<msg timestamp="20250325 21:32:12.073" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250325 21:32:11.587" endtime="20250325 21:32:12.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:12.074" endtime="20250325 21:32:12.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:11.586" endtime="20250325 21:32:12.074"/>
</test>
<test id="s1-s3-s9-t5" name="Copy Object using an invalid copy directive" line="107">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:12.078" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-51705 --key ozone-test-2648976766/copyobject/key=value/f1 --copy-source encrypted/ozone-test-2648976766/copyobject/key=value/f1 --metadata-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:12.571" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:12.571" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250325 21:32:12.076" endtime="20250325 21:32:12.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:12.572" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20250325 21:32:12.572" endtime="20250325 21:32:12.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:12.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:12.572" endtime="20250325 21:32:12.573"/>
</kw>
<msg timestamp="20250325 21:32:12.573" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250325 21:32:12.075" endtime="20250325 21:32:12.573"/>
</kw>
<msg timestamp="20250325 21:32:12.573" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250325 21:32:12.075" endtime="20250325 21:32:12.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:12.573" endtime="20250325 21:32:12.573"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --tagging-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:12.577" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-51705 --key ozone-test-2648976766/copyobject/key=value/f1 --copy-source encrypted/ozone-test-2648976766/copyobject/key=value/f1 --tagging-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:13.065" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:13.065" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250325 21:32:12.574" endtime="20250325 21:32:13.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:13.066" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20250325 21:32:13.065" endtime="20250325 21:32:13.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:13.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:13.066" endtime="20250325 21:32:13.066"/>
</kw>
<msg timestamp="20250325 21:32:13.066" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250325 21:32:12.574" endtime="20250325 21:32:13.066"/>
</kw>
<msg timestamp="20250325 21:32:13.066" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250325 21:32:12.574" endtime="20250325 21:32:13.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:13.067" endtime="20250325 21:32:13.067"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:12.074" endtime="20250325 21:32:13.067"/>
</test>
<test id="s1-s3-s9-t6" name="Copy Object with user defined metadata size larger than 2 KB" line="113">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:13.072" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250325 21:32:13.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:13.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:13.069" endtime="20250325 21:32:13.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:13.074" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:13.074" endtime="20250325 21:32:13.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:13.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:13.074" endtime="20250325 21:32:13.075"/>
</kw>
<status status="PASS" starttime="20250325 21:32:13.069" endtime="20250325 21:32:13.075"/>
</kw>
<msg timestamp="20250325 21:32:13.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:13.068" endtime="20250325 21:32:13.075"/>
</kw>
<status status="PASS" starttime="20250325 21:32:13.068" endtime="20250325 21:32:13.075"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:32:13.077" level="INFO">${custom_metadata_value} = 7LY8Hcrwpzm08JgN2qkYk8Q6mlzPpJpZobfKfuQ8fIh32USUPeJwwp8i5oN40kwSi07iHp3w6rfM9QzZ8QiBDuvjn3eV56yjSZjWksE7StZDBzJz43JJmU5tLzKM33fKXTPmRODtz1Z0V09OFoMpLFVTESFn1acBKkW63vyqM336oBtXZs58EAjIe6eg4dCpYOyulTYs...</msg>
<status status="PASS" starttime="20250325 21:32:13.075" endtime="20250325 21:32:13.077"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key1=${custom_metadata_value}" --metadata-directive REPLACE</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:13.081" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-51705 --key ozone-test-2648976766/copyobject/key=value/f1 --copy-source encrypted/ozone-test-2648976766/copyobject/key=value/f1 --metadata="custom-key1=7LY8Hcrwpzm08JgN2qkYk8Q6mlzPpJpZobfKfuQ8fIh32USUPeJwwp8i5oN40kwSi07iHp3w6rfM9QzZ8QiBDuvjn3eV56yjSZjWksE7StZDBzJz43JJmU5tLzKM33fKXTPmRODtz1Z0V09OFoMpLFVTESFn1acBKkW63vyqM336oBtXZs58EAjIe6eg4dCpYOyulTYsG9iZhT1YGH98uBPvTWiy8MutpKfhbyXvKqhRmuvGKPZhprYIgiytfs48SSPrvx8HWEWNBKUUDoZiwGmmFVBFi0tmCWlhorYQ2gBJisRYNJpEBNIaEAXbd9eRaAHNy658OKO1Ln2ipoiyd2o5UEVdBgdWef4z0XNCHHd3B88dmy62aGAS5OwakzX3HHVXqGZ4L6MaVP6UbrtTDT6n0wsNM59ssvraBayAatYYAxhCzm3vSCczP0boZLEuwnnDfjxOeRm1j6tD8xbZHkyEQwYOgCoQn3iHMYbfNpGB6bYy7ZctNJ0fCVERWeOd4p6yF6PotanVoYUTyfATVsKCyoSMxRBiBbumbqxmnCEAg36rxrEnTTOECuTJ3bNseFSLJGhmwGth9xrRnEOXM9U4eIJGCK2ylbVXEPRm0GLDTSVOB28ahKFWPOEgXdybbkjtYlRBKYtRxqyF5jHtXNSjjvKSvsv1atHcCfbjOcY0tpRJKc9rAty6di4LdJv1QFsDaYmOuH9isYUuGZteLgBQPWfP52POIA1szSfzmsf4RESoxHGy64NSADF1U0m1RcQ3Noz33YH22YhFWlZ2oITKQ89qizx0eahV2K0y8bMs54qa216Ly7eO86pa2Hpou8t9X9X1UgoB6Rl92BDyd370KGTMHxpto9SWw9uWAUcR8sbCd6bKyoRhqcbASBamIIUp9Gp3oVxdTNFSSB5tt2B3N5Z6oRuNPwzoecDs5n8KN55Uue6g6hwopjYifYL49jVsCnuem3R4iTg0MYxbSV6Ih6qK5snJNgr6ZfBD9Br8LES64wNKOx6bNMDLRGpxagedKyZXt8ZJ1mAHgYnOb2YU755K5ydrvdd0imGVq8cGDv67QtmfmQs9u3eXV2f2QlOOt5YgxMByCVxV3EfzL5IB4hEzFjKeHXc2kWmeJxx0jhvCw4B5jIcmcONpfTvFlrTlf5lW3hQPpVAn59bn30Vnp51HO1QtpRoO73DtI1mYw2KwuWZNFRl5NH4vvV8hG1r4Kh3aJDIfRklRrIBpZ3calrUGwmovFkZv1Oymn2e37tqEdZtJc5wt6cfpB5nuUyRnUUZSkHrl9wTi33PqbJWZZAktUDa0pYkg5O4RPd9ifFDVUaOrUI73qo2whv4rnetRdRH09jyqbLM7Oa8nVyqthgvXrDlWjJ9dOXg1e61eMqRIcX4oFMGIj3qm2N1ePh477I3f5HJ1JcfBSiJCzTTXoQfUM3DOSkUPd0o77BcB6MlmaJmJ2e3RWOWSsVKbj33zYkkPAUyM8PlUBz4B5RLpEzo6qnkA3wQdf9CqzykmA2rA29n9agN6wtuVIxXiGfM2E2ZxCaHD7DmIqVMjV01vxHuAu9R7Rw7pM7GiMK092JzOmSOuBGpVL2deMIs6gB8xwAPWVFx8mr9BYVvDLG00hIi1npHLlcqQE04qabvhB3m1VE4RXx9W4ftWodfuuLMjVrw5poTyPJbFQFhpyjeTLoUgxwQc7ocI5N5qH3DmsqjiDQEbThjBPTZ8iMDtC8Di3HV6HUTR2suljPNLp1PNbAhS82rUqG2BvlE3SLipb7aVi5aJBb4WgL38GZfhzc2S7z7axTz4IjcuBQnWnThUCNMqxx4nCgGSL5nb3p9KPWB8t4KbzXqJCdJeEldSUOBcvOwLGH2XEoE8dy4Z8zod0AjbRQkFqGr41JjI2A8aj1tIIrgz3TIhTQk9iBwD7jTeaLoahB1EIS9cxeNHncJdbYvHgL5xAfggrwvEQYSUNksyF72ONGeH2pLazApLywk2oFyVwXsQE9rTJvt65zRIRZg5EEjVqSBCaKDdkHZj8AaXBehb0oFgZwBcx0h3T1zbk8vRL3e68NSvtoJcqxYf6rCpW58FjzZv6aq70HSG4sqpRJeyTbS3bYCiems6Op5GKiQYAsBxDinsHPkjvzNDEzO2TGRxQQqNLFDpWx13v2zpaEq2imV7JB3W8vmxrAWmrzCKwQNkEXM4G3ldL5fVykvKylcuLkfkzlUUV9XgeKzrlDCcuL7ONqji7mvg8wlxDUKwos29f5bdeY8IOfq5JVrQ5asTb8xDzTVYszAQxXeVrzjed4SourYlC4WAr8BFFK8Qud5Hao4YaXIrXLqWEs2C4qzdJ6zNJGqphpDqFLiWiQkXvBq2jkAf2d61PvzeKfBSuU2YWVp8YWxFxoqmoWoPC71nIsOwvVb5VnbPqjqpKbLFaUkifCst1Vzrjql5D6EEBRztYtH2Ua8Egt9RuiiXfpkG8135VZcwyKrnaM0QYIL6Q6sEoSM1FER57t9e3VpTnJsL0WfpNRjLNBOX4pFrlHu88eMaaLS6Xb52BN6kn0d21rIiBhZ4TM7VcIuksb7ck86vKYknit419lPovCSFOliDKZNRk3BWzArpvoZ2aBKkktBN8BRCCb8UeOiWCTpUCHlHtqAd7PW78PSO5e1NRpqZj5vV4jm2mmkg4KrCQtNyVBfZyBT8UaMnLYxkFz27zGrzz3v3aY1rvUastGUAaRo0IQh2Sl8UBhb1VyldBaHplTD3acOJecajcjpiVS4HLRR8wYQxL5rQZzizOUolpVh1DUVRvdbeh789vTni9Si7VCBqv5wF9pNNfA9bXlGqvIPjcChEWiyrBbYLWbFi2bKhG0lipQs9a6CGRJB1O3QEiZoUuJZ5LfM4YueikekuusxOLc9z2GWPdhgEOIERprYUKRCDS5L7cwkCDnIY2VFudkGqcs583GoSgNsmvRr0Tq1paV6rkxdG3QRQbIyKVuLQeJwtodweV2vj1pC1Gt0omtdC" --metadata-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:13.578" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:13.578" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250325 21:32:13.079" endtime="20250325 21:32:13.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:13.579" level="INFO">
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250325 21:32:13.579" endtime="20250325 21:32:13.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:13.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:13.579" endtime="20250325 21:32:13.580"/>
</kw>
<msg timestamp="20250325 21:32:13.580" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250325 21:32:13.078" endtime="20250325 21:32:13.580"/>
</kw>
<msg timestamp="20250325 21:32:13.580" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250325 21:32:13.077" endtime="20250325 21:32:13.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:13.580" endtime="20250325 21:32:13.580"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:13.067" endtime="20250325 21:32:13.581"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:32:04.470" endtime="20250325 21:32:13.581"/>
</suite>
<suite id="s1-s3-s10" name="Objectcopys3A" source="/opt/hadoop/smoketest/s3/objectcopys3a.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:32:13.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:13.592" endtime="20250325 21:32:13.592"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:32:13.592" endtime="20250325 21:32:13.592"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:32:13.592" endtime="20250325 21:32:13.592"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:13.593" endtime="20250325 21:32:13.593"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:13.593" endtime="20250325 21:32:13.593"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:13.593" endtime="20250325 21:32:13.593"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:13.593" endtime="20250325 21:32:13.593"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:13.593" endtime="20250325 21:32:13.593"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:32:13.593" endtime="20250325 21:32:13.593"/>
</kw>
<status status="PASS" starttime="20250325 21:32:13.592" endtime="20250325 21:32:13.593"/>
</kw>
<test id="s1-s3-s10-t1" name="Put object s3a simulation" line="30">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:13.597" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250325 21:32:13.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:13.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:13.595" endtime="20250325 21:32:13.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:13.601" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:13.600" endtime="20250325 21:32:13.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:13.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:13.601" endtime="20250325 21:32:13.601"/>
</kw>
<status status="PASS" starttime="20250325 21:32:13.594" endtime="20250325 21:32:13.601"/>
</kw>
<msg timestamp="20250325 21:32:13.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:13.594" endtime="20250325 21:32:13.601"/>
</kw>
<status status="PASS" starttime="20250325 21:32:13.594" endtime="20250325 21:32:13.601"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:13.604" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2648976766/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:14.099" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:14.099" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:13.602" endtime="20250325 21:32:14.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:14.100" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:14.100" endtime="20250325 21:32:14.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:14.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:14.101" endtime="20250325 21:32:14.101"/>
</kw>
<msg timestamp="20250325 21:32:14.101" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:13.602" endtime="20250325 21:32:14.101"/>
</kw>
<msg timestamp="20250325 21:32:14.101" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:13.602" endtime="20250325 21:32:14.101"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:14.105" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-2648976766/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:14.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:14.580" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/word.txt/"
}</msg>
<status status="PASS" starttime="20250325 21:32:14.103" endtime="20250325 21:32:14.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:14.581" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/word.txt/"
}</msg>
<status status="PASS" starttime="20250325 21:32:14.581" endtime="20250325 21:32:14.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:14.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:14.581" endtime="20250325 21:32:14.582"/>
</kw>
<status status="PASS" starttime="20250325 21:32:14.102" endtime="20250325 21:32:14.582"/>
</kw>
<msg timestamp="20250325 21:32:14.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:14.102" endtime="20250325 21:32:14.582"/>
</kw>
<msg timestamp="20250325 21:32:14.582" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/word.txt/"
}</msg>
<status status="PASS" starttime="20250325 21:32:14.102" endtime="20250325 21:32:14.582"/>
</kw>
<msg timestamp="20250325 21:32:14.582" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/word.txt/"
}</msg>
<status status="PASS" starttime="20250325 21:32:14.101" endtime="20250325 21:32:14.582"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250325 21:32:14.582" endtime="20250325 21:32:14.583"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:14.586" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2648976766/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:15.054" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:15.054" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:14.584" endtime="20250325 21:32:15.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:15.055" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:15.054" endtime="20250325 21:32:15.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:15.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:15.055" endtime="20250325 21:32:15.055"/>
</kw>
<msg timestamp="20250325 21:32:15.055" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:14.583" endtime="20250325 21:32:15.055"/>
</kw>
<msg timestamp="20250325 21:32:15.056" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:14.583" endtime="20250325 21:32:15.056"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt._COPYING_/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:15.059" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-2648976766/word.txt._COPYING_/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:15.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:15.538" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250325 21:32:15.057" endtime="20250325 21:32:15.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:15.539" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250325 21:32:15.538" endtime="20250325 21:32:15.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:15.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:15.539" endtime="20250325 21:32:15.539"/>
</kw>
<status status="PASS" starttime="20250325 21:32:15.057" endtime="20250325 21:32:15.540"/>
</kw>
<msg timestamp="20250325 21:32:15.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:15.056" endtime="20250325 21:32:15.540"/>
</kw>
<msg timestamp="20250325 21:32:15.540" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250325 21:32:15.056" endtime="20250325 21:32:15.540"/>
</kw>
<msg timestamp="20250325 21:32:15.540" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250325 21:32:15.056" endtime="20250325 21:32:15.540"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt._COPYING_</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250325 21:32:15.540" endtime="20250325 21:32:15.540"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_ --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:15.544" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/word.txt._COPYING_ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:16.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:16.076" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:15.542" endtime="20250325 21:32:16.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:16.077" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:16.077" endtime="20250325 21:32:16.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:16.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:16.078" endtime="20250325 21:32:16.078"/>
</kw>
<status status="PASS" starttime="20250325 21:32:15.542" endtime="20250325 21:32:16.078"/>
</kw>
<msg timestamp="20250325 21:32:16.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:15.542" endtime="20250325 21:32:16.078"/>
</kw>
<msg timestamp="20250325 21:32:16.078" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:15.541" endtime="20250325 21:32:16.078"/>
</kw>
<msg timestamp="20250325 21:32:16.078" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:15.541" endtime="20250325 21:32:16.078"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:16.082" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2648976766/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:16.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:16.548" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:16 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:16.079" endtime="20250325 21:32:16.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:16.549" level="INFO">{
    "LastModified": "Tue, 25 Mar 2025 21:32:16 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:16 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:16 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:16.549" endtime="20250325 21:32:16.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:16.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:16.549" endtime="20250325 21:32:16.550"/>
</kw>
<msg timestamp="20250325 21:32:16.550" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:16 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:16.079" endtime="20250325 21:32:16.550"/>
</kw>
<status status="PASS" starttime="20250325 21:32:16.079" endtime="20250325 21:32:16.550"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:16.553" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2648976766/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:17.012" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:17.012" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:16.551" endtime="20250325 21:32:17.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:17.013" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:17.013" endtime="20250325 21:32:17.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:17.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:17.013" endtime="20250325 21:32:17.014"/>
</kw>
<msg timestamp="20250325 21:32:17.014" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:16.550" endtime="20250325 21:32:17.014"/>
</kw>
<status status="PASS" starttime="20250325 21:32:16.550" endtime="20250325 21:32:17.014"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:17.018" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-2648976766/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:17.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:17.484" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/word.txt/"
}</msg>
<status status="PASS" starttime="20250325 21:32:17.015" endtime="20250325 21:32:17.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:17.485" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/word.txt/"
}</msg>
<status status="PASS" starttime="20250325 21:32:17.484" endtime="20250325 21:32:17.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:17.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:17.485" endtime="20250325 21:32:17.485"/>
</kw>
<status status="PASS" starttime="20250325 21:32:17.015" endtime="20250325 21:32:17.485"/>
</kw>
<msg timestamp="20250325 21:32:17.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:17.015" endtime="20250325 21:32:17.486"/>
</kw>
<msg timestamp="20250325 21:32:17.486" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/word.txt/"
}</msg>
<status status="PASS" starttime="20250325 21:32:17.014" endtime="20250325 21:32:17.486"/>
</kw>
<msg timestamp="20250325 21:32:17.486" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/word.txt/"
}</msg>
<status status="PASS" starttime="20250325 21:32:17.014" endtime="20250325 21:32:17.486"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt._COPYING_</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250325 21:32:17.486" endtime="20250325 21:32:17.486"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${BUCKET} --key ${PREFIX}/word.txt --copy-source ${BUCKET}/${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:17.490" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket encrypted --key ozone-test-2648976766/word.txt --copy-source encrypted/ozone-test-2648976766/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:18.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:18.038" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-03-25T21:32:17.982Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:17.488" endtime="20250325 21:32:18.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:18.039" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-03-25T21:32:17.982Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:18.039" endtime="20250325 21:32:18.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:18.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:18.039" endtime="20250325 21:32:18.040"/>
</kw>
<status status="PASS" starttime="20250325 21:32:17.487" endtime="20250325 21:32:18.040"/>
</kw>
<msg timestamp="20250325 21:32:18.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:17.487" endtime="20250325 21:32:18.040"/>
</kw>
<msg timestamp="20250325 21:32:18.040" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-03-25T21:32:17.982Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:17.487" endtime="20250325 21:32:18.040"/>
</kw>
<msg timestamp="20250325 21:32:18.040" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-03-25T21:32:17.982Z"
    }
}</msg>
<status status="PASS" starttime="20250325 21:32:17.486" endtime="20250325 21:32:18.040"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:18.043" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2648976766/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:18.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:18.505" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:17 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:18.041" endtime="20250325 21:32:18.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:18.505" level="INFO">{
    "LastModified": "Tue, 25 Mar 2025 21:32:17 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:18 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:18 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:18.505" endtime="20250325 21:32:18.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:18.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:18.506" endtime="20250325 21:32:18.506"/>
</kw>
<msg timestamp="20250325 21:32:18.506" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:17 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:18.041" endtime="20250325 21:32:18.506"/>
</kw>
<status status="PASS" starttime="20250325 21:32:18.040" endtime="20250325 21:32:18.506"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:18.510" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-2648976766/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:18.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:18.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:18.508" endtime="20250325 21:32:18.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:18.976" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:18.975" endtime="20250325 21:32:18.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:18.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:18.976" endtime="20250325 21:32:18.976"/>
</kw>
<status status="PASS" starttime="20250325 21:32:18.507" endtime="20250325 21:32:18.976"/>
</kw>
<msg timestamp="20250325 21:32:18.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:18.507" endtime="20250325 21:32:18.976"/>
</kw>
<msg timestamp="20250325 21:32:18.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:18.507" endtime="20250325 21:32:18.977"/>
</kw>
<status status="PASS" starttime="20250325 21:32:18.507" endtime="20250325 21:32:18.977"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:18.980" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2648976766/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:19.444" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:19.444" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:18.978" endtime="20250325 21:32:19.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:19.445" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:19.445" endtime="20250325 21:32:19.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:19.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:19.445" endtime="20250325 21:32:19.446"/>
</kw>
<msg timestamp="20250325 21:32:19.446" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:18.977" endtime="20250325 21:32:19.446"/>
</kw>
<status status="PASS" starttime="20250325 21:32:18.977" endtime="20250325 21:32:19.446"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:13.593" endtime="20250325 21:32:19.446"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:32:13.583" endtime="20250325 21:32:19.447"/>
</suite>
<suite id="s1-s3-s11" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:32:19.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:19.455" endtime="20250325 21:32:19.455"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:32:19.455" endtime="20250325 21:32:19.456"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:32:19.456" endtime="20250325 21:32:19.456"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:19.456" endtime="20250325 21:32:19.456"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:19.456" endtime="20250325 21:32:19.456"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:19.456" endtime="20250325 21:32:19.456"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:19.456" endtime="20250325 21:32:19.456"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:19.456" endtime="20250325 21:32:19.456"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:32:19.456" endtime="20250325 21:32:19.456"/>
</kw>
<status status="PASS" starttime="20250325 21:32:19.455" endtime="20250325 21:32:19.456"/>
</kw>
<test id="s1-s3-s11-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:19.460" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250325 21:32:19.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:19.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:19.458" endtime="20250325 21:32:19.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:19.464" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:19.464" endtime="20250325 21:32:19.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:19.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:19.464" endtime="20250325 21:32:19.465"/>
</kw>
<status status="PASS" starttime="20250325 21:32:19.457" endtime="20250325 21:32:19.465"/>
</kw>
<msg timestamp="20250325 21:32:19.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:19.457" endtime="20250325 21:32:19.465"/>
</kw>
<status status="PASS" starttime="20250325 21:32:19.457" endtime="20250325 21:32:19.465"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:19.469" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:19.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:19.995" level="INFO">${output} = {
    "ETag": "\"83866d5e1cd9b4d8e1fb9e7ec5ab618b\""
}</msg>
<status status="PASS" starttime="20250325 21:32:19.467" endtime="20250325 21:32:19.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:19.996" level="INFO">{
    "ETag": "\"83866d5e1cd9b4d8e1fb9e7ec5ab618b\""
}</msg>
<status status="PASS" starttime="20250325 21:32:19.996" endtime="20250325 21:32:19.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:19.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:19.996" endtime="20250325 21:32:19.997"/>
</kw>
<status status="PASS" starttime="20250325 21:32:19.466" endtime="20250325 21:32:19.997"/>
</kw>
<msg timestamp="20250325 21:32:19.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:19.466" endtime="20250325 21:32:19.997"/>
</kw>
<msg timestamp="20250325 21:32:19.997" level="INFO">${output} = {
    "ETag": "\"83866d5e1cd9b4d8e1fb9e7ec5ab618b\""
}</msg>
<status status="PASS" starttime="20250325 21:32:19.466" endtime="20250325 21:32:19.997"/>
</kw>
<msg timestamp="20250325 21:32:19.997" level="INFO">${result} = {
    "ETag": "\"83866d5e1cd9b4d8e1fb9e7ec5ab618b\""
}</msg>
<status status="PASS" starttime="20250325 21:32:19.465" endtime="20250325 21:32:19.997"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:20.002" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-2648976766/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:20.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:20.487" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/deletetestapi/key=value/f1",
            "LastModified": "2025-03-25T21:32:19.932Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250325 21:32:19.999" endtime="20250325 21:32:20.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:20.488" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-2648976766/deletetestapi/key=value/f1",
            "LastModified": "2025-03-25T21:32:19.932Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250325 21:32:20.487" endtime="20250325 21:32:20.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:20.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:20.488" endtime="20250325 21:32:20.488"/>
</kw>
<status status="PASS" starttime="20250325 21:32:19.999" endtime="20250325 21:32:20.488"/>
</kw>
<msg timestamp="20250325 21:32:20.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:19.998" endtime="20250325 21:32:20.489"/>
</kw>
<msg timestamp="20250325 21:32:20.489" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/deletetestapi/key=value/f1",
            "LastModified": "2025-03-25T21:32:19.932Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250325 21:32:19.998" endtime="20250325 21:32:20.489"/>
</kw>
<msg timestamp="20250325 21:32:20.489" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/deletetestapi/key=value/f1",
            "LastModified": "2025-03-25T21:32:19.932Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250325 21:32:19.998" endtime="20250325 21:32:20.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:20.489" endtime="20250325 21:32:20.489"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:20.493" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-2648976766/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:20.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:20.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:20.491" endtime="20250325 21:32:20.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:20.960" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:20.959" endtime="20250325 21:32:20.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:20.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:20.960" endtime="20250325 21:32:20.960"/>
</kw>
<status status="PASS" starttime="20250325 21:32:20.491" endtime="20250325 21:32:20.960"/>
</kw>
<msg timestamp="20250325 21:32:20.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:20.491" endtime="20250325 21:32:20.960"/>
</kw>
<msg timestamp="20250325 21:32:20.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:20.490" endtime="20250325 21:32:20.961"/>
</kw>
<msg timestamp="20250325 21:32:20.961" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:20.489" endtime="20250325 21:32:20.961"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:20.964" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-2648976766/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:21.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:21.438" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250325 21:32:20.962" endtime="20250325 21:32:21.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:21.439" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250325 21:32:21.438" endtime="20250325 21:32:21.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:21.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:21.439" endtime="20250325 21:32:21.439"/>
</kw>
<status status="PASS" starttime="20250325 21:32:20.962" endtime="20250325 21:32:21.439"/>
</kw>
<msg timestamp="20250325 21:32:21.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:20.962" endtime="20250325 21:32:21.440"/>
</kw>
<msg timestamp="20250325 21:32:21.440" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250325 21:32:20.961" endtime="20250325 21:32:21.440"/>
</kw>
<msg timestamp="20250325 21:32:21.440" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250325 21:32:20.961" endtime="20250325 21:32:21.440"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:21.440" endtime="20250325 21:32:21.440"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:19.457" endtime="20250325 21:32:21.441"/>
</test>
<test id="s1-s3-s11-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:21.445" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:21.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:21.935" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0489586773/
                           PRE ozone-test-2648976766/
             ...</msg>
<status status="PASS" starttime="20250325 21:32:21.443" endtime="20250325 21:32:21.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:21.936" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0489586773/
                           PRE ozone-test-2648976766/
                           PRE ozone-test-3175762936/
                           PRE ozone-test-6264187718/
                           PRE ozone-test-7072293165/
                           PRE ozone-test-9150365207/
                           PRE specialchars/
2025-03-25 21:29:53       4068 README1.md
2025-03-25 21:29:51       4068 README10.md
2025-03-25 21:29:58   20971522 ckpbrhylwe
2025-03-25 21:30:44    6291456 empty_file_ozone-test-6743683440
2025-03-25 21:29:52   10485761 multiUpload.1.gz
2025-03-25 21:29:53   10485761 multiUpload.2.gz
2025-03-25 21:29:47         29 testfile</msg>
<status status="PASS" starttime="20250325 21:32:21.936" endtime="20250325 21:32:21.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:21.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:21.937" endtime="20250325 21:32:21.937"/>
</kw>
<status status="PASS" starttime="20250325 21:32:21.442" endtime="20250325 21:32:21.937"/>
</kw>
<msg timestamp="20250325 21:32:21.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:21.442" endtime="20250325 21:32:21.937"/>
</kw>
<msg timestamp="20250325 21:32:21.937" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0489586773/
                           PRE ozone-test-2648976766/
             ...</msg>
<status status="PASS" starttime="20250325 21:32:21.442" endtime="20250325 21:32:21.937"/>
</kw>
<msg timestamp="20250325 21:32:21.938" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0489586773/
                           PRE ozone-test-2648976766/
             ...</msg>
<status status="PASS" starttime="20250325 21:32:21.441" endtime="20250325 21:32:21.938"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:21.938" endtime="20250325 21:32:21.938"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:21.942" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:22.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:22.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:21.939" endtime="20250325 21:32:22.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:22.411" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:22.411" endtime="20250325 21:32:22.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:22.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:22.412" endtime="20250325 21:32:22.412"/>
</kw>
<status status="PASS" starttime="20250325 21:32:21.939" endtime="20250325 21:32:22.412"/>
</kw>
<msg timestamp="20250325 21:32:22.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:21.939" endtime="20250325 21:32:22.412"/>
</kw>
<msg timestamp="20250325 21:32:22.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:21.938" endtime="20250325 21:32:22.412"/>
</kw>
<msg timestamp="20250325 21:32:22.413" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:21.938" endtime="20250325 21:32:22.413"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:22.416" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:22.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:22.947" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0489586773/
                           PRE ozone-test-2648976766/
             ...</msg>
<status status="PASS" starttime="20250325 21:32:22.414" endtime="20250325 21:32:22.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:22.949" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0489586773/
                           PRE ozone-test-2648976766/
                           PRE ozone-test-3175762936/
                           PRE ozone-test-6264187718/
                           PRE ozone-test-7072293165/
                           PRE ozone-test-9150365207/
                           PRE specialchars/
2025-03-25 21:29:53       4068 README1.md
2025-03-25 21:29:51       4068 README10.md
2025-03-25 21:29:58   20971522 ckpbrhylwe
2025-03-25 21:30:44    6291456 empty_file_ozone-test-6743683440
2025-03-25 21:29:52   10485761 multiUpload.1.gz
2025-03-25 21:29:53   10485761 multiUpload.2.gz
2025-03-25 21:29:47         29 testfile</msg>
<status status="PASS" starttime="20250325 21:32:22.948" endtime="20250325 21:32:22.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:22.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:22.949" endtime="20250325 21:32:22.949"/>
</kw>
<status status="PASS" starttime="20250325 21:32:22.414" endtime="20250325 21:32:22.950"/>
</kw>
<msg timestamp="20250325 21:32:22.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:22.413" endtime="20250325 21:32:22.950"/>
</kw>
<msg timestamp="20250325 21:32:22.950" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0489586773/
                           PRE ozone-test-2648976766/
             ...</msg>
<status status="PASS" starttime="20250325 21:32:22.413" endtime="20250325 21:32:22.950"/>
</kw>
<msg timestamp="20250325 21:32:22.950" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0489586773/
                           PRE ozone-test-2648976766/
             ...</msg>
<status status="PASS" starttime="20250325 21:32:22.413" endtime="20250325 21:32:22.950"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:22.950" endtime="20250325 21:32:22.951"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:21.441" endtime="20250325 21:32:22.951"/>
</test>
<test id="s1-s3-s11-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:22.955" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250325 21:32:22.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:22.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:22.952" endtime="20250325 21:32:22.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:22.959" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:22.959" endtime="20250325 21:32:22.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:22.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:22.959" endtime="20250325 21:32:22.960"/>
</kw>
<status status="PASS" starttime="20250325 21:32:22.952" endtime="20250325 21:32:22.960"/>
</kw>
<msg timestamp="20250325 21:32:22.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:22.952" endtime="20250325 21:32:22.960"/>
</kw>
<status status="PASS" starttime="20250325 21:32:22.952" endtime="20250325 21:32:22.960"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:22.963" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-2648976766/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:23.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:23.448" level="INFO">${output} = Completed 29 Bytes/29 Bytes (545 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-2648976766/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250325 21:32:22.961" endtime="20250325 21:32:23.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:23.449" level="INFO">Completed 29 Bytes/29 Bytes (545 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-2648976766/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250325 21:32:23.449" endtime="20250325 21:32:23.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:23.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:23.450" endtime="20250325 21:32:23.450"/>
</kw>
<status status="PASS" starttime="20250325 21:32:22.961" endtime="20250325 21:32:23.450"/>
</kw>
<msg timestamp="20250325 21:32:23.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:22.961" endtime="20250325 21:32:23.450"/>
</kw>
<msg timestamp="20250325 21:32:23.450" level="INFO">${output} = Completed 29 Bytes/29 Bytes (545 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-2648976766/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250325 21:32:22.961" endtime="20250325 21:32:23.450"/>
</kw>
<msg timestamp="20250325 21:32:23.450" level="INFO">${result} = Completed 29 Bytes/29 Bytes (545 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-2648976766/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250325 21:32:22.960" endtime="20250325 21:32:23.450"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:23.454" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-2648976766/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:23.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:23.915" level="INFO">${output} = 2025-03-25 21:32:23         29 f1</msg>
<status status="PASS" starttime="20250325 21:32:23.452" endtime="20250325 21:32:23.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:23.916" level="INFO">2025-03-25 21:32:23         29 f1</msg>
<status status="PASS" starttime="20250325 21:32:23.915" endtime="20250325 21:32:23.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:23.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:23.916" endtime="20250325 21:32:23.916"/>
</kw>
<status status="PASS" starttime="20250325 21:32:23.452" endtime="20250325 21:32:23.916"/>
</kw>
<msg timestamp="20250325 21:32:23.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:23.452" endtime="20250325 21:32:23.916"/>
</kw>
<msg timestamp="20250325 21:32:23.916" level="INFO">${output} = 2025-03-25 21:32:23         29 f1</msg>
<status status="PASS" starttime="20250325 21:32:23.451" endtime="20250325 21:32:23.917"/>
</kw>
<msg timestamp="20250325 21:32:23.917" level="INFO">${result} = 2025-03-25 21:32:23         29 f1</msg>
<status status="PASS" starttime="20250325 21:32:23.451" endtime="20250325 21:32:23.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:23.917" endtime="20250325 21:32:23.917"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:23.921" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-2648976766/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:24.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:24.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:23.918" endtime="20250325 21:32:24.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:24.393" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:24.393" endtime="20250325 21:32:24.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:24.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:24.393" endtime="20250325 21:32:24.394"/>
</kw>
<status status="PASS" starttime="20250325 21:32:23.918" endtime="20250325 21:32:24.394"/>
</kw>
<msg timestamp="20250325 21:32:24.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:23.918" endtime="20250325 21:32:24.394"/>
</kw>
<msg timestamp="20250325 21:32:24.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:23.918" endtime="20250325 21:32:24.394"/>
</kw>
<msg timestamp="20250325 21:32:24.394" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:23.917" endtime="20250325 21:32:24.394"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:24.398" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-2648976766/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:24.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:24.846" level="INFO">${output} = 2025-03-25 21:32:23         29 f1</msg>
<status status="PASS" starttime="20250325 21:32:24.396" endtime="20250325 21:32:24.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:24.846" level="INFO">2025-03-25 21:32:23         29 f1</msg>
<status status="PASS" starttime="20250325 21:32:24.846" endtime="20250325 21:32:24.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:24.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:24.847" endtime="20250325 21:32:24.847"/>
</kw>
<status status="PASS" starttime="20250325 21:32:24.395" endtime="20250325 21:32:24.847"/>
</kw>
<msg timestamp="20250325 21:32:24.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:24.395" endtime="20250325 21:32:24.847"/>
</kw>
<msg timestamp="20250325 21:32:24.847" level="INFO">${output} = 2025-03-25 21:32:23         29 f1</msg>
<status status="PASS" starttime="20250325 21:32:24.395" endtime="20250325 21:32:24.847"/>
</kw>
<msg timestamp="20250325 21:32:24.848" level="INFO">${result} = 2025-03-25 21:32:23         29 f1</msg>
<status status="PASS" starttime="20250325 21:32:24.394" endtime="20250325 21:32:24.848"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:24.848" endtime="20250325 21:32:24.848"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:24.852" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-2648976766/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:25.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:25.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:24.849" endtime="20250325 21:32:25.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:25.325" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:25.324" endtime="20250325 21:32:25.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:25.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:25.325" endtime="20250325 21:32:25.326"/>
</kw>
<status status="PASS" starttime="20250325 21:32:24.849" endtime="20250325 21:32:25.326"/>
</kw>
<msg timestamp="20250325 21:32:25.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:24.849" endtime="20250325 21:32:25.326"/>
</kw>
<msg timestamp="20250325 21:32:25.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:24.848" endtime="20250325 21:32:25.326"/>
</kw>
<msg timestamp="20250325 21:32:25.326" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:24.848" endtime="20250325 21:32:25.326"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:22.951" endtime="20250325 21:32:25.326"/>
</test>
<test id="s1-s3-s11-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:25.330" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250325 21:32:25.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:25.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:25.328" endtime="20250325 21:32:25.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:25.335" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:25.334" endtime="20250325 21:32:25.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:25.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:25.335" endtime="20250325 21:32:25.335"/>
</kw>
<status status="PASS" starttime="20250325 21:32:25.328" endtime="20250325 21:32:25.335"/>
</kw>
<msg timestamp="20250325 21:32:25.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:25.328" endtime="20250325 21:32:25.335"/>
</kw>
<status status="PASS" starttime="20250325 21:32:25.327" endtime="20250325 21:32:25.336"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:25.339" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-2648976766/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:25.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:25.821" level="INFO">${output} = Completed 29 Bytes/29 Bytes (603 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-2648976766/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250325 21:32:25.337" endtime="20250325 21:32:25.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:25.822" level="INFO">Completed 29 Bytes/29 Bytes (603 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-2648976766/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250325 21:32:25.822" endtime="20250325 21:32:25.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:25.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:25.822" endtime="20250325 21:32:25.823"/>
</kw>
<status status="PASS" starttime="20250325 21:32:25.337" endtime="20250325 21:32:25.823"/>
</kw>
<msg timestamp="20250325 21:32:25.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:25.336" endtime="20250325 21:32:25.823"/>
</kw>
<msg timestamp="20250325 21:32:25.823" level="INFO">${output} = Completed 29 Bytes/29 Bytes (603 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-2648976766/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250325 21:32:25.336" endtime="20250325 21:32:25.823"/>
</kw>
<msg timestamp="20250325 21:32:25.824" level="INFO">${result} = Completed 29 Bytes/29 Bytes (603 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-2648976766/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250325 21:32:25.336" endtime="20250325 21:32:25.824"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:25.827" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-2648976766/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:26.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:26.281" level="INFO">${output} = 2025-03-25 21:32:25         29 filefile</msg>
<status status="PASS" starttime="20250325 21:32:25.825" endtime="20250325 21:32:26.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:26.282" level="INFO">2025-03-25 21:32:25         29 filefile</msg>
<status status="PASS" starttime="20250325 21:32:26.282" endtime="20250325 21:32:26.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:26.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:26.282" endtime="20250325 21:32:26.283"/>
</kw>
<status status="PASS" starttime="20250325 21:32:25.825" endtime="20250325 21:32:26.283"/>
</kw>
<msg timestamp="20250325 21:32:26.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:25.825" endtime="20250325 21:32:26.283"/>
</kw>
<msg timestamp="20250325 21:32:26.283" level="INFO">${output} = 2025-03-25 21:32:25         29 filefile</msg>
<status status="PASS" starttime="20250325 21:32:25.824" endtime="20250325 21:32:26.283"/>
</kw>
<msg timestamp="20250325 21:32:26.283" level="INFO">${result} = 2025-03-25 21:32:25         29 filefile</msg>
<status status="PASS" starttime="20250325 21:32:25.824" endtime="20250325 21:32:26.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:26.284" endtime="20250325 21:32:26.284"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:26.288" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-2648976766/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:26.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:26.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:26.285" endtime="20250325 21:32:26.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:26.750" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:26.750" endtime="20250325 21:32:26.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:26.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:26.751" endtime="20250325 21:32:26.751"/>
</kw>
<status status="PASS" starttime="20250325 21:32:26.285" endtime="20250325 21:32:26.751"/>
</kw>
<msg timestamp="20250325 21:32:26.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:26.285" endtime="20250325 21:32:26.751"/>
</kw>
<msg timestamp="20250325 21:32:26.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:26.284" endtime="20250325 21:32:26.751"/>
</kw>
<msg timestamp="20250325 21:32:26.751" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:26.284" endtime="20250325 21:32:26.751"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:26.755" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-2648976766/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:27.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:27.207" level="INFO">${output} = 2025-03-25 21:32:25         29 filefile</msg>
<status status="PASS" starttime="20250325 21:32:26.753" endtime="20250325 21:32:27.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:27.208" level="INFO">2025-03-25 21:32:25         29 filefile</msg>
<status status="PASS" starttime="20250325 21:32:27.207" endtime="20250325 21:32:27.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:27.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:27.208" endtime="20250325 21:32:27.208"/>
</kw>
<status status="PASS" starttime="20250325 21:32:26.753" endtime="20250325 21:32:27.208"/>
</kw>
<msg timestamp="20250325 21:32:27.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:26.752" endtime="20250325 21:32:27.208"/>
</kw>
<msg timestamp="20250325 21:32:27.208" level="INFO">${output} = 2025-03-25 21:32:25         29 filefile</msg>
<status status="PASS" starttime="20250325 21:32:26.752" endtime="20250325 21:32:27.209"/>
</kw>
<msg timestamp="20250325 21:32:27.209" level="INFO">${result} = 2025-03-25 21:32:25         29 filefile</msg>
<status status="PASS" starttime="20250325 21:32:26.752" endtime="20250325 21:32:27.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:27.209" endtime="20250325 21:32:27.209"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:27.213" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-2648976766/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:27.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:27.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:27.210" endtime="20250325 21:32:27.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:27.678" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:27.678" endtime="20250325 21:32:27.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:27.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:27.678" endtime="20250325 21:32:27.679"/>
</kw>
<status status="PASS" starttime="20250325 21:32:27.210" endtime="20250325 21:32:27.679"/>
</kw>
<msg timestamp="20250325 21:32:27.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:27.210" endtime="20250325 21:32:27.679"/>
</kw>
<msg timestamp="20250325 21:32:27.679" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:27.210" endtime="20250325 21:32:27.679"/>
</kw>
<msg timestamp="20250325 21:32:27.679" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:27.209" endtime="20250325 21:32:27.679"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:25.327" endtime="20250325 21:32:27.679"/>
</test>
<test id="s1-s3-s11-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:27.683" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:28.143" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:28.143" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:32:27.681" endtime="20250325 21:32:28.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:28.144" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:32:28.143" endtime="20250325 21:32:28.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:28.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:28.144" endtime="20250325 21:32:28.144"/>
</kw>
<msg timestamp="20250325 21:32:28.144" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:32:27.681" endtime="20250325 21:32:28.144"/>
</kw>
<msg timestamp="20250325 21:32:28.144" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250325 21:32:27.680" endtime="20250325 21:32:28.144"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:28.145" endtime="20250325 21:32:28.145"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:27.680" endtime="20250325 21:32:28.145"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:32:19.448" endtime="20250325 21:32:28.146"/>
</suite>
<suite id="s1-s3-s12" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:32:28.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:28.155" endtime="20250325 21:32:28.155"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:32:28.155" endtime="20250325 21:32:28.155"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:32:28.155" endtime="20250325 21:32:28.155"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:28.155" endtime="20250325 21:32:28.155"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:28.155" endtime="20250325 21:32:28.155"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:28.155" endtime="20250325 21:32:28.155"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:28.156" endtime="20250325 21:32:28.156"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:28.156" endtime="20250325 21:32:28.156"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:32:28.156" endtime="20250325 21:32:28.156"/>
</kw>
<status status="PASS" starttime="20250325 21:32:28.154" endtime="20250325 21:32:28.156"/>
</kw>
<test id="s1-s3-s12-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:28.159" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250325 21:32:28.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:28.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:28.157" endtime="20250325 21:32:28.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:28.162" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:28.161" endtime="20250325 21:32:28.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:28.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:28.162" endtime="20250325 21:32:28.162"/>
</kw>
<status status="PASS" starttime="20250325 21:32:28.157" endtime="20250325 21:32:28.162"/>
</kw>
<msg timestamp="20250325 21:32:28.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:28.157" endtime="20250325 21:32:28.163"/>
</kw>
<status status="PASS" starttime="20250325 21:32:28.156" endtime="20250325 21:32:28.163"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:28.165" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:28.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:28.680" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:28.163" endtime="20250325 21:32:28.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:28.681" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:28.681" endtime="20250325 21:32:28.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:28.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:28.681" endtime="20250325 21:32:28.682"/>
</kw>
<msg timestamp="20250325 21:32:28.682" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:28.163" endtime="20250325 21:32:28.682"/>
</kw>
<msg timestamp="20250325 21:32:28.682" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:28.163" endtime="20250325 21:32:28.682"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:28.685" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2648976766/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:29.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:29.163" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:28.683" endtime="20250325 21:32:29.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:29.164" level="INFO">{
    "LastModified": "Tue, 25 Mar 2025 21:32:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:29 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:29 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:29.163" endtime="20250325 21:32:29.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:29.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:29.164" endtime="20250325 21:32:29.165"/>
</kw>
<msg timestamp="20250325 21:32:29.165" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:28.683" endtime="20250325 21:32:29.165"/>
</kw>
<msg timestamp="20250325 21:32:29.165" level="INFO">${result} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:28.682" endtime="20250325 21:32:29.165"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:29.168" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-2648976766/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:29.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:29.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:29.166" endtime="20250325 21:32:29.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:29.629" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:29.629" endtime="20250325 21:32:29.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:29.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:29.630" endtime="20250325 21:32:29.630"/>
</kw>
<msg timestamp="20250325 21:32:29.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:29.165" endtime="20250325 21:32:29.630"/>
</kw>
<msg timestamp="20250325 21:32:29.630" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:32:29.165" endtime="20250325 21:32:29.630"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:28.156" endtime="20250325 21:32:29.630"/>
</test>
<test id="s1-s3-s12-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:29.635" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted-non-existent --key ozone-test-2648976766/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:30.101" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:30.101" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:29.632" endtime="20250325 21:32:30.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:30.102" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:30.101" endtime="20250325 21:32:30.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:30.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:30.102" endtime="20250325 21:32:30.102"/>
</kw>
<msg timestamp="20250325 21:32:30.102" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:29.632" endtime="20250325 21:32:30.102"/>
</kw>
<msg timestamp="20250325 21:32:30.103" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:29.631" endtime="20250325 21:32:30.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:30.103" endtime="20250325 21:32:30.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:30.103" endtime="20250325 21:32:30.103"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:29.631" endtime="20250325 21:32:30.103"/>
</test>
<test id="s1-s3-s12-t3" name="Head object where path is a directory" line="44">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:32:30.104" endtime="20250325 21:32:30.105"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:30.108" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:30.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:30.623" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:30.105" endtime="20250325 21:32:30.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:30.624" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:30.623" endtime="20250325 21:32:30.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:30.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:30.624" endtime="20250325 21:32:30.624"/>
</kw>
<msg timestamp="20250325 21:32:30.624" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:30.105" endtime="20250325 21:32:30.624"/>
</kw>
<msg timestamp="20250325 21:32:30.625" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:30.105" endtime="20250325 21:32:30.625"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:30.628" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2648976766/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:31.119" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:31.119" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:30.626" endtime="20250325 21:32:31.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:31.120" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:31.120" endtime="20250325 21:32:31.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:31.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:31.120" endtime="20250325 21:32:31.121"/>
</kw>
<msg timestamp="20250325 21:32:31.121" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:30.625" endtime="20250325 21:32:31.121"/>
</kw>
<msg timestamp="20250325 21:32:31.121" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:30.625" endtime="20250325 21:32:31.121"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:31.121" endtime="20250325 21:32:31.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:31.122" endtime="20250325 21:32:31.122"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:30.104" endtime="20250325 21:32:31.122"/>
</test>
<test id="s1-s3-s12-t4" name="Head directory objects" line="51">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:32:31.123" endtime="20250325 21:32:31.123"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:31.127" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:31.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:31.618" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:31.124" endtime="20250325 21:32:31.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:31.619" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:31.618" endtime="20250325 21:32:31.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:31.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:31.619" endtime="20250325 21:32:31.619"/>
</kw>
<msg timestamp="20250325 21:32:31.619" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:31.124" endtime="20250325 21:32:31.620"/>
</kw>
<msg timestamp="20250325 21:32:31.620" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:31.123" endtime="20250325 21:32:31.620"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:31.623" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2648976766/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:32.102" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:32.102" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:31.621" endtime="20250325 21:32:32.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:32.103" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:32.103" endtime="20250325 21:32:32.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:32.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:32.103" endtime="20250325 21:32:32.104"/>
</kw>
<msg timestamp="20250325 21:32:32.104" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:31.620" endtime="20250325 21:32:32.104"/>
</kw>
<msg timestamp="20250325 21:32:32.104" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:31.620" endtime="20250325 21:32:32.104"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:32.104" endtime="20250325 21:32:32.104"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:32.105" endtime="20250325 21:32:32.105"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:32.108" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2648976766/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:32.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:32.567" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:32.106" endtime="20250325 21:32:32.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:32.568" level="INFO">{
    "LastModified": "Tue, 25 Mar 2025 21:32:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:32 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:32 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:32.568" endtime="20250325 21:32:32.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:32.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:32.568" endtime="20250325 21:32:32.569"/>
</kw>
<msg timestamp="20250325 21:32:32.569" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:32.105" endtime="20250325 21:32:32.569"/>
</kw>
<msg timestamp="20250325 21:32:32.569" level="INFO">${result} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:31 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:32.105" endtime="20250325 21:32:32.569"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:31.123" endtime="20250325 21:32:32.569"/>
</test>
<test id="s1-s3-s12-t5" name="Head non existing key" line="59">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:32.573" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2648976766/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:33.040" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:33.040" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:32.571" endtime="20250325 21:32:33.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:33.041" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:33.040" endtime="20250325 21:32:33.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:33.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:33.041" endtime="20250325 21:32:33.042"/>
</kw>
<msg timestamp="20250325 21:32:33.042" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:32.571" endtime="20250325 21:32:33.042"/>
</kw>
<msg timestamp="20250325 21:32:33.042" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250325 21:32:32.570" endtime="20250325 21:32:33.042"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:33.042" endtime="20250325 21:32:33.042"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:33.042" endtime="20250325 21:32:33.043"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:32.570" endtime="20250325 21:32:33.043"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:32:28.147" endtime="20250325 21:32:33.044"/>
</suite>
<suite id="s1-s3-s13" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:32:33.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:33.053" endtime="20250325 21:32:33.053"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:32:33.053" endtime="20250325 21:32:33.053"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:32:33.053" endtime="20250325 21:32:33.053"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:33.053" endtime="20250325 21:32:33.053"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:33.054" endtime="20250325 21:32:33.054"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:33.054" endtime="20250325 21:32:33.054"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:33.054" endtime="20250325 21:32:33.054"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:33.054" endtime="20250325 21:32:33.054"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:32:33.054" endtime="20250325 21:32:33.054"/>
</kw>
<status status="PASS" starttime="20250325 21:32:33.053" endtime="20250325 21:32:33.054"/>
</kw>
<test id="s1-s3-s13-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:33.057" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250325 21:32:33.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:33.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:33.055" endtime="20250325 21:32:33.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:33.062" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:33.062" endtime="20250325 21:32:33.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:33.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:33.062" endtime="20250325 21:32:33.062"/>
</kw>
<status status="PASS" starttime="20250325 21:32:33.055" endtime="20250325 21:32:33.063"/>
</kw>
<msg timestamp="20250325 21:32:33.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:33.055" endtime="20250325 21:32:33.063"/>
</kw>
<status status="PASS" starttime="20250325 21:32:33.055" endtime="20250325 21:32:33.063"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:33.066" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:33.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:33.576" level="INFO">${output} = {
    "ETag": "\"7cb03ff7c769b595741c14c45ba74648\""
}</msg>
<status status="PASS" starttime="20250325 21:32:33.064" endtime="20250325 21:32:33.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:33.577" level="INFO">{
    "ETag": "\"7cb03ff7c769b595741c14c45ba74648\""
}</msg>
<status status="PASS" starttime="20250325 21:32:33.576" endtime="20250325 21:32:33.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:33.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:33.577" endtime="20250325 21:32:33.577"/>
</kw>
<status status="PASS" starttime="20250325 21:32:33.064" endtime="20250325 21:32:33.577"/>
</kw>
<msg timestamp="20250325 21:32:33.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:33.064" endtime="20250325 21:32:33.577"/>
</kw>
<msg timestamp="20250325 21:32:33.578" level="INFO">${output} = {
    "ETag": "\"7cb03ff7c769b595741c14c45ba74648\""
}</msg>
<status status="PASS" starttime="20250325 21:32:33.063" endtime="20250325 21:32:33.578"/>
</kw>
<msg timestamp="20250325 21:32:33.578" level="INFO">${result} = {
    "ETag": "\"7cb03ff7c769b595741c14c45ba74648\""
}</msg>
<status status="PASS" starttime="20250325 21:32:33.063" endtime="20250325 21:32:33.578"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:33.581" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:34.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:34.105" level="INFO">${output} = {
    "ETag": "\"7cb03ff7c769b595741c14c45ba74648\""
}</msg>
<status status="PASS" starttime="20250325 21:32:33.579" endtime="20250325 21:32:34.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:34.105" level="INFO">{
    "ETag": "\"7cb03ff7c769b595741c14c45ba74648\""
}</msg>
<status status="PASS" starttime="20250325 21:32:34.105" endtime="20250325 21:32:34.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:34.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:34.106" endtime="20250325 21:32:34.106"/>
</kw>
<status status="PASS" starttime="20250325 21:32:33.579" endtime="20250325 21:32:34.106"/>
</kw>
<msg timestamp="20250325 21:32:34.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:33.579" endtime="20250325 21:32:34.106"/>
</kw>
<msg timestamp="20250325 21:32:34.106" level="INFO">${output} = {
    "ETag": "\"7cb03ff7c769b595741c14c45ba74648\""
}</msg>
<status status="PASS" starttime="20250325 21:32:33.578" endtime="20250325 21:32:34.106"/>
</kw>
<msg timestamp="20250325 21:32:34.106" level="INFO">${result} = {
    "ETag": "\"7cb03ff7c769b595741c14c45ba74648\""
}</msg>
<status status="PASS" starttime="20250325 21:32:33.578" endtime="20250325 21:32:34.107"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:34.110" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:34.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:34.623" level="INFO">${output} = {
    "ETag": "\"7cb03ff7c769b595741c14c45ba74648\""
}</msg>
<status status="PASS" starttime="20250325 21:32:34.108" endtime="20250325 21:32:34.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:34.624" level="INFO">{
    "ETag": "\"7cb03ff7c769b595741c14c45ba74648\""
}</msg>
<status status="PASS" starttime="20250325 21:32:34.624" endtime="20250325 21:32:34.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:34.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:34.624" endtime="20250325 21:32:34.625"/>
</kw>
<status status="PASS" starttime="20250325 21:32:34.108" endtime="20250325 21:32:34.625"/>
</kw>
<msg timestamp="20250325 21:32:34.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:34.107" endtime="20250325 21:32:34.625"/>
</kw>
<msg timestamp="20250325 21:32:34.625" level="INFO">${output} = {
    "ETag": "\"7cb03ff7c769b595741c14c45ba74648\""
}</msg>
<status status="PASS" starttime="20250325 21:32:34.107" endtime="20250325 21:32:34.625"/>
</kw>
<msg timestamp="20250325 21:32:34.625" level="INFO">${result} = {
    "ETag": "\"7cb03ff7c769b595741c14c45ba74648\""
}</msg>
<status status="PASS" starttime="20250325 21:32:34.107" endtime="20250325 21:32:34.625"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:34.629" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-2648976766/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:35.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:35.106" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f1",
            "LastModified": "2025-03-25T21:32:33.524Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250325 21:32:34.627" endtime="20250325 21:32:35.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:35.107" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f1",
            "LastModified": "2025-03-25T21:32:33.524Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f2",
            "LastModified": "2025-03-25T21:32:34.047Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f3",
            "LastModified": "2025-03-25T21:32:34.557Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/multidelete/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250325 21:32:35.106" endtime="20250325 21:32:35.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:35.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:35.107" endtime="20250325 21:32:35.108"/>
</kw>
<status status="PASS" starttime="20250325 21:32:34.626" endtime="20250325 21:32:35.108"/>
</kw>
<msg timestamp="20250325 21:32:35.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:34.626" endtime="20250325 21:32:35.108"/>
</kw>
<msg timestamp="20250325 21:32:35.108" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f1",
            "LastModified": "2025-03-25T21:32:33.524Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250325 21:32:34.626" endtime="20250325 21:32:35.108"/>
</kw>
<msg timestamp="20250325 21:32:35.108" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f1",
            "LastModified": "2025-03-25T21:32:33.524Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250325 21:32:34.625" endtime="20250325 21:32:35.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:35.108" endtime="20250325 21:32:35.109"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:35.109" endtime="20250325 21:32:35.109"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:35.109" endtime="20250325 21:32:35.109"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:35.110" endtime="20250325 21:32:35.110"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:35.110" endtime="20250325 21:32:35.110"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:35.114" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket encrypted --delete 'Objects=[{Key=ozone-test-2648976766/multidelete/key=value/f1},{Key=ozone-test-2648976766/multidelete/key=value/f2},{Key=ozone-test-2648976766/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:35.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:35.590" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250325 21:32:35.112" endtime="20250325 21:32:35.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:35.591" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20250325 21:32:35.590" endtime="20250325 21:32:35.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:35.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:35.591" endtime="20250325 21:32:35.591"/>
</kw>
<status status="PASS" starttime="20250325 21:32:35.111" endtime="20250325 21:32:35.591"/>
</kw>
<msg timestamp="20250325 21:32:35.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:35.111" endtime="20250325 21:32:35.592"/>
</kw>
<msg timestamp="20250325 21:32:35.592" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250325 21:32:35.111" endtime="20250325 21:32:35.592"/>
</kw>
<msg timestamp="20250325 21:32:35.592" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250325 21:32:35.110" endtime="20250325 21:32:35.592"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:35.592" endtime="20250325 21:32:35.592"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:35.596" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-2648976766/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:36.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:36.070" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f3",
            "LastModified": "2025-03-25T21:32:34.557Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250325 21:32:35.594" endtime="20250325 21:32:36.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:36.071" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f3",
            "LastModified": "2025-03-25T21:32:34.557Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/multidelete/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250325 21:32:36.071" endtime="20250325 21:32:36.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:36.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:36.071" endtime="20250325 21:32:36.072"/>
</kw>
<status status="PASS" starttime="20250325 21:32:35.593" endtime="20250325 21:32:36.072"/>
</kw>
<msg timestamp="20250325 21:32:36.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:35.593" endtime="20250325 21:32:36.072"/>
</kw>
<msg timestamp="20250325 21:32:36.072" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f3",
            "LastModified": "2025-03-25T21:32:34.557Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250325 21:32:35.593" endtime="20250325 21:32:36.072"/>
</kw>
<msg timestamp="20250325 21:32:36.072" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/multidelete/key=value/f3",
            "LastModified": "2025-03-25T21:32:34.557Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250325 21:32:35.592" endtime="20250325 21:32:36.072"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:36.073" endtime="20250325 21:32:36.073"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:36.073" endtime="20250325 21:32:36.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:36.073" endtime="20250325 21:32:36.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:36.074" endtime="20250325 21:32:36.074"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:36.074" endtime="20250325 21:32:36.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:33.054" endtime="20250325 21:32:36.074"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:32:33.045" endtime="20250325 21:32:36.075"/>
</suite>
<suite id="s1-s3-s14" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:32:36.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:36.083" endtime="20250325 21:32:36.084"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:32:36.084" endtime="20250325 21:32:36.084"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:32:36.084" endtime="20250325 21:32:36.084"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:36.084" endtime="20250325 21:32:36.084"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:36.084" endtime="20250325 21:32:36.084"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:36.084" endtime="20250325 21:32:36.084"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:36.084" endtime="20250325 21:32:36.084"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:32:36.084" endtime="20250325 21:32:36.084"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:32:36.085" endtime="20250325 21:32:36.085"/>
</kw>
<status status="PASS" starttime="20250325 21:32:36.083" endtime="20250325 21:32:36.085"/>
</kw>
<test id="s1-s3-s14-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:36.088" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250325 21:32:36.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:36.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:36.086" endtime="20250325 21:32:36.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:36.091" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:36.090" endtime="20250325 21:32:36.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:36.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:36.091" endtime="20250325 21:32:36.091"/>
</kw>
<status status="PASS" starttime="20250325 21:32:36.085" endtime="20250325 21:32:36.091"/>
</kw>
<msg timestamp="20250325 21:32:36.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:36.085" endtime="20250325 21:32:36.091"/>
</kw>
<status status="PASS" starttime="20250325 21:32:36.085" endtime="20250325 21:32:36.092"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:36.095" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:36.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:36.615" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:36.093" endtime="20250325 21:32:36.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:36.616" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:36.615" endtime="20250325 21:32:36.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:36.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:36.616" endtime="20250325 21:32:36.616"/>
</kw>
<status status="PASS" starttime="20250325 21:32:36.093" endtime="20250325 21:32:36.616"/>
</kw>
<msg timestamp="20250325 21:32:36.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:36.092" endtime="20250325 21:32:36.616"/>
</kw>
<msg timestamp="20250325 21:32:36.616" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:36.092" endtime="20250325 21:32:36.616"/>
</kw>
<msg timestamp="20250325 21:32:36.617" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:36.092" endtime="20250325 21:32:36.617"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:36.620" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-2648976766/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:37.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:37.084" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/putobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:36.561Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250325 21:32:36.618" endtime="20250325 21:32:37.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:37.085" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-2648976766/putobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:36.561Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250325 21:32:37.084" endtime="20250325 21:32:37.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:37.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:37.085" endtime="20250325 21:32:37.085"/>
</kw>
<status status="PASS" starttime="20250325 21:32:36.618" endtime="20250325 21:32:37.085"/>
</kw>
<msg timestamp="20250325 21:32:37.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:36.617" endtime="20250325 21:32:37.086"/>
</kw>
<msg timestamp="20250325 21:32:37.086" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/putobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:36.561Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250325 21:32:36.617" endtime="20250325 21:32:37.086"/>
</kw>
<msg timestamp="20250325 21:32:37.086" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/putobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:36.561Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250325 21:32:36.617" endtime="20250325 21:32:37.086"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:37.086" endtime="20250325 21:32:37.086"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:37.089" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:37.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:37.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:37.087" endtime="20250325 21:32:37.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:37.094" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:37.093" endtime="20250325 21:32:37.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:37.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:37.094" endtime="20250325 21:32:37.094"/>
</kw>
<status status="PASS" starttime="20250325 21:32:37.087" endtime="20250325 21:32:37.094"/>
</kw>
<msg timestamp="20250325 21:32:37.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:37.087" endtime="20250325 21:32:37.094"/>
</kw>
<status status="PASS" starttime="20250325 21:32:37.086" endtime="20250325 21:32:37.094"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:37.098" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:37.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:37.606" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250325 21:32:37.096" endtime="20250325 21:32:37.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:37.607" level="INFO">{
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250325 21:32:37.606" endtime="20250325 21:32:37.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:37.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:37.607" endtime="20250325 21:32:37.607"/>
</kw>
<status status="PASS" starttime="20250325 21:32:37.095" endtime="20250325 21:32:37.607"/>
</kw>
<msg timestamp="20250325 21:32:37.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:37.095" endtime="20250325 21:32:37.607"/>
</kw>
<msg timestamp="20250325 21:32:37.607" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250325 21:32:37.095" endtime="20250325 21:32:37.607"/>
</kw>
<msg timestamp="20250325 21:32:37.608" level="INFO">${result} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250325 21:32:37.095" endtime="20250325 21:32:37.608"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:37.611" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-2648976766/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:38.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:38.076" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/putobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:36.561Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250325 21:32:37.609" endtime="20250325 21:32:38.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:38.077" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-2648976766/putobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:36.561Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-2648976766/putobject/key=value/zerobyte",
            "LastModified": "2025-03-25T21:32:37.538Z",
            "Size": 0,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250325 21:32:38.076" endtime="20250325 21:32:38.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:38.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:38.077" endtime="20250325 21:32:38.077"/>
</kw>
<status status="PASS" starttime="20250325 21:32:37.609" endtime="20250325 21:32:38.077"/>
</kw>
<msg timestamp="20250325 21:32:38.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:37.609" endtime="20250325 21:32:38.078"/>
</kw>
<msg timestamp="20250325 21:32:38.078" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/putobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:36.561Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250325 21:32:37.608" endtime="20250325 21:32:38.078"/>
</kw>
<msg timestamp="20250325 21:32:38.078" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/putobject/key=value/f1",
            "LastModified": "2025-03-25T21:32:36.561Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250325 21:32:37.608" endtime="20250325 21:32:38.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:38.078" endtime="20250325 21:32:38.078"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:36.085" endtime="20250325 21:32:38.078"/>
</test>
<test id="s1-s3-s14-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:38.083" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:38.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:38.563" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:38.081" endtime="20250325 21:32:38.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:38.564" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:38 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:38 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:38.564" endtime="20250325 21:32:38.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:38.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:38.564" endtime="20250325 21:32:38.565"/>
</kw>
<status status="PASS" starttime="20250325 21:32:38.081" endtime="20250325 21:32:38.565"/>
</kw>
<msg timestamp="20250325 21:32:38.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:38.080" endtime="20250325 21:32:38.565"/>
</kw>
<msg timestamp="20250325 21:32:38.565" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:38.080" endtime="20250325 21:32:38.565"/>
</kw>
<msg timestamp="20250325 21:32:38.565" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:38.079" endtime="20250325 21:32:38.565"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:38.569" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:38.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:38.574" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250325 21:32:38.567" endtime="20250325 21:32:38.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:38.574" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250325 21:32:38.574" endtime="20250325 21:32:38.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:38.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:38.575" endtime="20250325 21:32:38.575"/>
</kw>
<status status="PASS" starttime="20250325 21:32:38.566" endtime="20250325 21:32:38.575"/>
</kw>
<msg timestamp="20250325 21:32:38.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:38.566" endtime="20250325 21:32:38.575"/>
</kw>
<msg timestamp="20250325 21:32:38.575" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250325 21:32:38.566" endtime="20250325 21:32:38.575"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:38.578" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:38.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:38.582" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250325 21:32:38.576" endtime="20250325 21:32:38.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:38.583" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250325 21:32:38.583" endtime="20250325 21:32:38.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:38.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:38.583" endtime="20250325 21:32:38.584"/>
</kw>
<status status="PASS" starttime="20250325 21:32:38.576" endtime="20250325 21:32:38.584"/>
</kw>
<msg timestamp="20250325 21:32:38.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:38.576" endtime="20250325 21:32:38.584"/>
</kw>
<msg timestamp="20250325 21:32:38.584" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250325 21:32:38.575" endtime="20250325 21:32:38.584"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:38.584" endtime="20250325 21:32:38.584"/>
</kw>
<status status="PASS" starttime="20250325 21:32:38.566" endtime="20250325 21:32:38.584"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:38.585" endtime="20250325 21:32:38.585"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte /tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:38.588" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/zerobyte /tmp/zerobyte.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:39.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:39.088" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:37 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:38.586" endtime="20250325 21:32:39.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:39.089" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:37 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:39 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:39 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:39.089" endtime="20250325 21:32:39.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:39.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:39.089" endtime="20250325 21:32:39.090"/>
</kw>
<status status="PASS" starttime="20250325 21:32:38.586" endtime="20250325 21:32:39.090"/>
</kw>
<msg timestamp="20250325 21:32:39.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:38.586" endtime="20250325 21:32:39.090"/>
</kw>
<msg timestamp="20250325 21:32:39.090" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:37 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:38.585" endtime="20250325 21:32:39.090"/>
</kw>
<msg timestamp="20250325 21:32:39.090" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:37 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:38.585" endtime="20250325 21:32:39.090"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/zerobyte</arg>
<arg>/tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:39.094" level="INFO">Running command 'md5sum /tmp/zerobyte | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:39.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:39.098" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250325 21:32:39.091" endtime="20250325 21:32:39.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:39.099" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250325 21:32:39.098" endtime="20250325 21:32:39.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:39.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:39.099" endtime="20250325 21:32:39.099"/>
</kw>
<status status="PASS" starttime="20250325 21:32:39.091" endtime="20250325 21:32:39.099"/>
</kw>
<msg timestamp="20250325 21:32:39.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:39.091" endtime="20250325 21:32:39.099"/>
</kw>
<msg timestamp="20250325 21:32:39.100" level="INFO">${checksumbefore} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250325 21:32:39.091" endtime="20250325 21:32:39.100"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:39.102" level="INFO">Running command 'md5sum /tmp/zerobyte.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:39.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:39.107" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250325 21:32:39.101" endtime="20250325 21:32:39.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:39.107" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250325 21:32:39.107" endtime="20250325 21:32:39.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:39.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:39.108" endtime="20250325 21:32:39.108"/>
</kw>
<status status="PASS" starttime="20250325 21:32:39.100" endtime="20250325 21:32:39.108"/>
</kw>
<msg timestamp="20250325 21:32:39.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:39.100" endtime="20250325 21:32:39.108"/>
</kw>
<msg timestamp="20250325 21:32:39.108" level="INFO">${checksumafter} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250325 21:32:39.100" endtime="20250325 21:32:39.108"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:39.108" endtime="20250325 21:32:39.109"/>
</kw>
<status status="PASS" starttime="20250325 21:32:39.090" endtime="20250325 21:32:39.109"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:38.079" endtime="20250325 21:32:39.109"/>
</test>
<test id="s1-s3-s14-t3" name="Get object with wrong signature" line="52">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:32:39.110" endtime="20250325 21:32:39.110"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:39.112" level="INFO">Running command 'curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' http://s3g:9878/encrypted/ozone-test-2648976766/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:39.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:39.128" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20250325 21:32:39.111" endtime="20250325 21:32:39.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:39.129" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   247  100   247    0     0  49400      0 --:--:-- --:--:-- --:--:-- 49400
HTTP/1.1 403 Forbidden
date: Tue, 25 Mar 2025 21:32:39 GMT
cache-control: no-cache
expires: Tue, 25 Mar 2025 21:32:39 GMT
pragma: no-cache
content-type: text/plain;charset=utf-8
x-content-type-options: nosniff
x-xss-protection: 1; mode=block
x-frame-options: SAMEORIGIN
server: Ozone
x-amz-id-2: JcU1dpWO
x-amz-request-id: 0d6ba106-df29-463f-abd6-7458c92d4972
content-length: 247

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Error&gt;
  &lt;Code&gt;InvalidRequest&lt;/Code&gt;
  &lt;Message&gt;Error creating s3 auth info. The request may not be signed using AWS V4 signing algorithm, or might be invalid&lt;/Message&gt;
  &lt;Resource/&gt;
  &lt;RequestId/&gt;
&lt;/Error&gt;</msg>
<status status="PASS" starttime="20250325 21:32:39.128" endtime="20250325 21:32:39.129"/>
</kw>
<msg timestamp="20250325 21:32:39.129" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20250325 21:32:39.110" endtime="20250325 21:32:39.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:39.129" endtime="20250325 21:32:39.129"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:39.109" endtime="20250325 21:32:39.130"/>
</test>
<test id="s1-s3-s14-t4" name="Get Partial object from s3 with both start and endoffset" line="57">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:39.134" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:39.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:39.623" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:39.132" endtime="20250325 21:32:39.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:39.624" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:39 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:39 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:39.624" endtime="20250325 21:32:39.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:39.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:39.625" endtime="20250325 21:32:39.625"/>
</kw>
<status status="PASS" starttime="20250325 21:32:39.132" endtime="20250325 21:32:39.625"/>
</kw>
<msg timestamp="20250325 21:32:39.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:39.131" endtime="20250325 21:32:39.625"/>
</kw>
<msg timestamp="20250325 21:32:39.625" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:39.131" endtime="20250325 21:32:39.625"/>
</kw>
<msg timestamp="20250325 21:32:39.625" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:39.131" endtime="20250325 21:32:39.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:39.626" endtime="20250325 21:32:39.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:39.626" endtime="20250325 21:32:39.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:39.626" endtime="20250325 21:32:39.626"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:39.630" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20250325 21:32:39.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:39.633" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20250325 21:32:39.627" endtime="20250325 21:32:39.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:39.634" level="INFO">Rando</msg>
<status status="PASS" starttime="20250325 21:32:39.634" endtime="20250325 21:32:39.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:39.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:39.634" endtime="20250325 21:32:39.635"/>
</kw>
<status status="PASS" starttime="20250325 21:32:39.627" endtime="20250325 21:32:39.635"/>
</kw>
<msg timestamp="20250325 21:32:39.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:39.627" endtime="20250325 21:32:39.635"/>
</kw>
<msg timestamp="20250325 21:32:39.635" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20250325 21:32:39.626" endtime="20250325 21:32:39.635"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:39.638" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:39.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:39.641" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20250325 21:32:39.636" endtime="20250325 21:32:39.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:39.642" level="INFO">Rando</msg>
<status status="PASS" starttime="20250325 21:32:39.641" endtime="20250325 21:32:39.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:39.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:39.642" endtime="20250325 21:32:39.642"/>
</kw>
<status status="PASS" starttime="20250325 21:32:39.636" endtime="20250325 21:32:39.642"/>
</kw>
<msg timestamp="20250325 21:32:39.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:39.635" endtime="20250325 21:32:39.642"/>
</kw>
<msg timestamp="20250325 21:32:39.643" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20250325 21:32:39.635" endtime="20250325 21:32:39.643"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:39.643" endtime="20250325 21:32:39.643"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:39.646" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:40.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:40.133" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:39.644" endtime="20250325 21:32:40.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:40.134" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:40 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:40 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:40.133" endtime="20250325 21:32:40.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:40.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:40.134" endtime="20250325 21:32:40.134"/>
</kw>
<status status="PASS" starttime="20250325 21:32:39.644" endtime="20250325 21:32:40.134"/>
</kw>
<msg timestamp="20250325 21:32:40.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:39.644" endtime="20250325 21:32:40.134"/>
</kw>
<msg timestamp="20250325 21:32:40.134" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:39.644" endtime="20250325 21:32:40.134"/>
</kw>
<msg timestamp="20250325 21:32:40.135" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:39.643" endtime="20250325 21:32:40.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:40.135" endtime="20250325 21:32:40.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:40.135" endtime="20250325 21:32:40.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:40.135" endtime="20250325 21:32:40.136"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:40.139" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20250325 21:32:40.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:40.143" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20250325 21:32:40.137" endtime="20250325 21:32:40.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:40.144" level="INFO">ndo</msg>
<status status="PASS" starttime="20250325 21:32:40.143" endtime="20250325 21:32:40.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:40.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:40.144" endtime="20250325 21:32:40.144"/>
</kw>
<status status="PASS" starttime="20250325 21:32:40.136" endtime="20250325 21:32:40.144"/>
</kw>
<msg timestamp="20250325 21:32:40.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:40.136" endtime="20250325 21:32:40.145"/>
</kw>
<msg timestamp="20250325 21:32:40.145" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20250325 21:32:40.136" endtime="20250325 21:32:40.145"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:40.148" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:40.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:40.151" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20250325 21:32:40.146" endtime="20250325 21:32:40.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:40.151" level="INFO">ndo</msg>
<status status="PASS" starttime="20250325 21:32:40.151" endtime="20250325 21:32:40.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:40.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:40.152" endtime="20250325 21:32:40.152"/>
</kw>
<status status="PASS" starttime="20250325 21:32:40.145" endtime="20250325 21:32:40.152"/>
</kw>
<msg timestamp="20250325 21:32:40.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:40.145" endtime="20250325 21:32:40.152"/>
</kw>
<msg timestamp="20250325 21:32:40.152" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20250325 21:32:40.145" endtime="20250325 21:32:40.152"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:40.153" endtime="20250325 21:32:40.153"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:40.156" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:40.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:40.669" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:40.154" endtime="20250325 21:32:40.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:40.670" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:40 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:40 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:40.670" endtime="20250325 21:32:40.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:40.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:40.670" endtime="20250325 21:32:40.671"/>
</kw>
<status status="PASS" starttime="20250325 21:32:40.154" endtime="20250325 21:32:40.671"/>
</kw>
<msg timestamp="20250325 21:32:40.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:40.154" endtime="20250325 21:32:40.671"/>
</kw>
<msg timestamp="20250325 21:32:40.671" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:40.153" endtime="20250325 21:32:40.671"/>
</kw>
<msg timestamp="20250325 21:32:40.671" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:40.153" endtime="20250325 21:32:40.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:40.672" endtime="20250325 21:32:40.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:40.672" endtime="20250325 21:32:40.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:40.672" endtime="20250325 21:32:40.672"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:40.676" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20250325 21:32:40.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:40.679" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20250325 21:32:40.673" endtime="20250325 21:32:40.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:40.680" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20250325 21:32:40.680" endtime="20250325 21:32:40.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:40.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:40.680" endtime="20250325 21:32:40.681"/>
</kw>
<status status="PASS" starttime="20250325 21:32:40.673" endtime="20250325 21:32:40.681"/>
</kw>
<msg timestamp="20250325 21:32:40.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:40.673" endtime="20250325 21:32:40.681"/>
</kw>
<msg timestamp="20250325 21:32:40.681" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20250325 21:32:40.673" endtime="20250325 21:32:40.681"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:40.684" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:40.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:40.688" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20250325 21:32:40.682" endtime="20250325 21:32:40.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:40.688" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20250325 21:32:40.688" endtime="20250325 21:32:40.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:40.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:40.688" endtime="20250325 21:32:40.689"/>
</kw>
<status status="PASS" starttime="20250325 21:32:40.682" endtime="20250325 21:32:40.689"/>
</kw>
<msg timestamp="20250325 21:32:40.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:40.682" endtime="20250325 21:32:40.689"/>
</kw>
<msg timestamp="20250325 21:32:40.689" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20250325 21:32:40.681" endtime="20250325 21:32:40.689"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:40.689" endtime="20250325 21:32:40.690"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:39.130" endtime="20250325 21:32:40.690"/>
</test>
<test id="s1-s3-s14-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="83">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:40.693" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:41.197" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:41.197" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:40.691" endtime="20250325 21:32:41.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:41.198" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:41.197" endtime="20250325 21:32:41.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:41.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:41.198" endtime="20250325 21:32:41.198"/>
</kw>
<msg timestamp="20250325 21:32:41.199" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:40.691" endtime="20250325 21:32:41.199"/>
</kw>
<msg timestamp="20250325 21:32:41.199" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:40.691" endtime="20250325 21:32:41.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:41.199" endtime="20250325 21:32:41.199"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:40.690" endtime="20250325 21:32:41.199"/>
</test>
<test id="s1-s3-s14-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="88">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:41.204" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:41.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:41.701" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:41.202" endtime="20250325 21:32:41.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:41.702" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:41 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:41 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:41.702" endtime="20250325 21:32:41.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:41.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:41.702" endtime="20250325 21:32:41.703"/>
</kw>
<status status="PASS" starttime="20250325 21:32:41.201" endtime="20250325 21:32:41.703"/>
</kw>
<msg timestamp="20250325 21:32:41.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:41.201" endtime="20250325 21:32:41.703"/>
</kw>
<msg timestamp="20250325 21:32:41.703" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:41.201" endtime="20250325 21:32:41.703"/>
</kw>
<msg timestamp="20250325 21:32:41.703" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:41.200" endtime="20250325 21:32:41.703"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:41.704" endtime="20250325 21:32:41.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:41.704" endtime="20250325 21:32:41.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:41.704" endtime="20250325 21:32:41.704"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:41.708" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:41.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:41.711" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:41.705" endtime="20250325 21:32:41.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:41.712" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:41.712" endtime="20250325 21:32:41.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:41.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:41.712" endtime="20250325 21:32:41.713"/>
</kw>
<status status="PASS" starttime="20250325 21:32:41.705" endtime="20250325 21:32:41.713"/>
</kw>
<msg timestamp="20250325 21:32:41.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:41.705" endtime="20250325 21:32:41.713"/>
</kw>
<msg timestamp="20250325 21:32:41.713" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:41.705" endtime="20250325 21:32:41.713"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:41.716" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:41.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:41.720" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:41.714" endtime="20250325 21:32:41.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:41.721" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:41.720" endtime="20250325 21:32:41.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:41.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:41.721" endtime="20250325 21:32:41.721"/>
</kw>
<status status="PASS" starttime="20250325 21:32:41.714" endtime="20250325 21:32:41.721"/>
</kw>
<msg timestamp="20250325 21:32:41.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:41.714" endtime="20250325 21:32:41.721"/>
</kw>
<msg timestamp="20250325 21:32:41.721" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:41.713" endtime="20250325 21:32:41.721"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:41.721" endtime="20250325 21:32:41.722"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:41.200" endtime="20250325 21:32:41.722"/>
</test>
<test id="s1-s3-s14-t7" name="Get Partial object from s3 with only start offset" line="97">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:41.726" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:42.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:42.211" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:41.724" endtime="20250325 21:32:42.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:42.211" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:42 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:42 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:42.211" endtime="20250325 21:32:42.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:42.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:42.212" endtime="20250325 21:32:42.212"/>
</kw>
<status status="PASS" starttime="20250325 21:32:41.724" endtime="20250325 21:32:42.212"/>
</kw>
<msg timestamp="20250325 21:32:42.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:41.724" endtime="20250325 21:32:42.212"/>
</kw>
<msg timestamp="20250325 21:32:42.213" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:41.723" endtime="20250325 21:32:42.213"/>
</kw>
<msg timestamp="20250325 21:32:42.213" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:41.723" endtime="20250325 21:32:42.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:42.213" endtime="20250325 21:32:42.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:42.213" endtime="20250325 21:32:42.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:42.213" endtime="20250325 21:32:42.214"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:42.217" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:42.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:42.220" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:42.214" endtime="20250325 21:32:42.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:42.221" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:42.221" endtime="20250325 21:32:42.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:42.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:42.221" endtime="20250325 21:32:42.222"/>
</kw>
<status status="PASS" starttime="20250325 21:32:42.214" endtime="20250325 21:32:42.222"/>
</kw>
<msg timestamp="20250325 21:32:42.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:42.214" endtime="20250325 21:32:42.222"/>
</kw>
<msg timestamp="20250325 21:32:42.222" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:42.214" endtime="20250325 21:32:42.222"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:42.225" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:42.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:42.229" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:42.223" endtime="20250325 21:32:42.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:42.229" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:42.229" endtime="20250325 21:32:42.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:42.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:42.230" endtime="20250325 21:32:42.230"/>
</kw>
<status status="PASS" starttime="20250325 21:32:42.223" endtime="20250325 21:32:42.230"/>
</kw>
<msg timestamp="20250325 21:32:42.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:42.222" endtime="20250325 21:32:42.230"/>
</kw>
<msg timestamp="20250325 21:32:42.230" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:42.222" endtime="20250325 21:32:42.230"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:42.230" endtime="20250325 21:32:42.231"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:41.722" endtime="20250325 21:32:42.231"/>
</test>
<test id="s1-s3-s14-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="106">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:42.235" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:42.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:42.707" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:42.233" endtime="20250325 21:32:42.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:42.708" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:42 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:42 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:42.707" endtime="20250325 21:32:42.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:42.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:42.708" endtime="20250325 21:32:42.708"/>
</kw>
<status status="PASS" starttime="20250325 21:32:42.233" endtime="20250325 21:32:42.709"/>
</kw>
<msg timestamp="20250325 21:32:42.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:42.232" endtime="20250325 21:32:42.709"/>
</kw>
<msg timestamp="20250325 21:32:42.709" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:42.232" endtime="20250325 21:32:42.709"/>
</kw>
<msg timestamp="20250325 21:32:42.709" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:42.232" endtime="20250325 21:32:42.709"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:42.709" endtime="20250325 21:32:42.709"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:42.710" endtime="20250325 21:32:42.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:42.710" endtime="20250325 21:32:42.710"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:42.713" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20250325 21:32:42.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:42.717" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20250325 21:32:42.711" endtime="20250325 21:32:42.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:42.718" level="INFO">R</msg>
<status status="PASS" starttime="20250325 21:32:42.717" endtime="20250325 21:32:42.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:42.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:42.718" endtime="20250325 21:32:42.718"/>
</kw>
<status status="PASS" starttime="20250325 21:32:42.711" endtime="20250325 21:32:42.718"/>
</kw>
<msg timestamp="20250325 21:32:42.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:42.711" endtime="20250325 21:32:42.718"/>
</kw>
<msg timestamp="20250325 21:32:42.719" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20250325 21:32:42.710" endtime="20250325 21:32:42.719"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:42.721" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:42.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:42.725" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20250325 21:32:42.719" endtime="20250325 21:32:42.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:42.725" level="INFO">R</msg>
<status status="PASS" starttime="20250325 21:32:42.725" endtime="20250325 21:32:42.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:42.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:42.726" endtime="20250325 21:32:42.726"/>
</kw>
<status status="PASS" starttime="20250325 21:32:42.719" endtime="20250325 21:32:42.726"/>
</kw>
<msg timestamp="20250325 21:32:42.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:42.719" endtime="20250325 21:32:42.726"/>
</kw>
<msg timestamp="20250325 21:32:42.727" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20250325 21:32:42.719" endtime="20250325 21:32:42.727"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:42.727" endtime="20250325 21:32:42.727"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:42.730" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:43.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:43.197" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:42.728" endtime="20250325 21:32:43.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:43.198" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:43 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:43 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:43.197" endtime="20250325 21:32:43.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:43.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:43.198" endtime="20250325 21:32:43.198"/>
</kw>
<status status="PASS" starttime="20250325 21:32:42.728" endtime="20250325 21:32:43.198"/>
</kw>
<msg timestamp="20250325 21:32:43.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:42.728" endtime="20250325 21:32:43.198"/>
</kw>
<msg timestamp="20250325 21:32:43.199" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:42.727" endtime="20250325 21:32:43.199"/>
</kw>
<msg timestamp="20250325 21:32:43.199" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:42.727" endtime="20250325 21:32:43.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:43.199" endtime="20250325 21:32:43.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:43.199" endtime="20250325 21:32:43.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:43.199" endtime="20250325 21:32:43.200"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:43.203" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20250325 21:32:43.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:43.206" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20250325 21:32:43.200" endtime="20250325 21:32:43.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:43.207" level="INFO">o</msg>
<status status="PASS" starttime="20250325 21:32:43.207" endtime="20250325 21:32:43.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:43.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:43.207" endtime="20250325 21:32:43.207"/>
</kw>
<status status="PASS" starttime="20250325 21:32:43.200" endtime="20250325 21:32:43.208"/>
</kw>
<msg timestamp="20250325 21:32:43.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:43.200" endtime="20250325 21:32:43.208"/>
</kw>
<msg timestamp="20250325 21:32:43.208" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20250325 21:32:43.200" endtime="20250325 21:32:43.208"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:43.211" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:43.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:43.214" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20250325 21:32:43.209" endtime="20250325 21:32:43.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:43.215" level="INFO">o</msg>
<status status="PASS" starttime="20250325 21:32:43.214" endtime="20250325 21:32:43.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:43.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:43.215" endtime="20250325 21:32:43.215"/>
</kw>
<status status="PASS" starttime="20250325 21:32:43.208" endtime="20250325 21:32:43.215"/>
</kw>
<msg timestamp="20250325 21:32:43.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:43.208" endtime="20250325 21:32:43.215"/>
</kw>
<msg timestamp="20250325 21:32:43.216" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20250325 21:32:43.208" endtime="20250325 21:32:43.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:43.216" endtime="20250325 21:32:43.216"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:42.231" endtime="20250325 21:32:43.216"/>
</test>
<test id="s1-s3-s14-t9" name="Get Partial object from s3 to get last n bytes" line="123">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:43.220" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:43.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:43.697" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:43.218" endtime="20250325 21:32:43.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:43.698" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:43 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:43 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:43.697" endtime="20250325 21:32:43.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:43.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:43.698" endtime="20250325 21:32:43.698"/>
</kw>
<status status="PASS" starttime="20250325 21:32:43.218" endtime="20250325 21:32:43.698"/>
</kw>
<msg timestamp="20250325 21:32:43.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:43.218" endtime="20250325 21:32:43.699"/>
</kw>
<msg timestamp="20250325 21:32:43.699" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:43.217" endtime="20250325 21:32:43.699"/>
</kw>
<msg timestamp="20250325 21:32:43.699" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250325 21:32:43.217" endtime="20250325 21:32:43.699"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:43.699" endtime="20250325 21:32:43.699"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:43.699" endtime="20250325 21:32:43.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:43.700" endtime="20250325 21:32:43.700"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:43.703" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20250325 21:32:43.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:43.707" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20250325 21:32:43.701" endtime="20250325 21:32:43.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:43.707" level="INFO">ext</msg>
<status status="PASS" starttime="20250325 21:32:43.707" endtime="20250325 21:32:43.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:43.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:43.708" endtime="20250325 21:32:43.708"/>
</kw>
<status status="PASS" starttime="20250325 21:32:43.700" endtime="20250325 21:32:43.708"/>
</kw>
<msg timestamp="20250325 21:32:43.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:43.700" endtime="20250325 21:32:43.708"/>
</kw>
<msg timestamp="20250325 21:32:43.708" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20250325 21:32:43.700" endtime="20250325 21:32:43.708"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:43.711" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:43.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:43.715" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20250325 21:32:43.709" endtime="20250325 21:32:43.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:43.715" level="INFO">ext</msg>
<status status="PASS" starttime="20250325 21:32:43.715" endtime="20250325 21:32:43.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:43.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:43.715" endtime="20250325 21:32:43.716"/>
</kw>
<status status="PASS" starttime="20250325 21:32:43.709" endtime="20250325 21:32:43.716"/>
</kw>
<msg timestamp="20250325 21:32:43.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:43.709" endtime="20250325 21:32:43.716"/>
</kw>
<msg timestamp="20250325 21:32:43.716" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20250325 21:32:43.708" endtime="20250325 21:32:43.716"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:43.716" endtime="20250325 21:32:43.717"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:43.720" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:44.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:44.242" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:43.718" endtime="20250325 21:32:44.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:44.243" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:44 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:44 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:44.242" endtime="20250325 21:32:44.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:44.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:44.243" endtime="20250325 21:32:44.243"/>
</kw>
<status status="PASS" starttime="20250325 21:32:43.718" endtime="20250325 21:32:44.243"/>
</kw>
<msg timestamp="20250325 21:32:44.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:43.718" endtime="20250325 21:32:44.244"/>
</kw>
<msg timestamp="20250325 21:32:44.244" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:43.717" endtime="20250325 21:32:44.244"/>
</kw>
<msg timestamp="20250325 21:32:44.244" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:43.717" endtime="20250325 21:32:44.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:44.244" endtime="20250325 21:32:44.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:44.244" endtime="20250325 21:32:44.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:44.245" endtime="20250325 21:32:44.245"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:44.248" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:44.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:44.252" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:44.246" endtime="20250325 21:32:44.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:44.252" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:44.252" endtime="20250325 21:32:44.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:44.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:44.253" endtime="20250325 21:32:44.253"/>
</kw>
<status status="PASS" starttime="20250325 21:32:44.245" endtime="20250325 21:32:44.253"/>
</kw>
<msg timestamp="20250325 21:32:44.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:44.245" endtime="20250325 21:32:44.253"/>
</kw>
<msg timestamp="20250325 21:32:44.253" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:44.245" endtime="20250325 21:32:44.253"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:44.256" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:44.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:44.259" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:44.254" endtime="20250325 21:32:44.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:44.260" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:44.260" endtime="20250325 21:32:44.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:44.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:44.260" endtime="20250325 21:32:44.261"/>
</kw>
<status status="PASS" starttime="20250325 21:32:44.254" endtime="20250325 21:32:44.261"/>
</kw>
<msg timestamp="20250325 21:32:44.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:44.254" endtime="20250325 21:32:44.261"/>
</kw>
<msg timestamp="20250325 21:32:44.261" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:44.253" endtime="20250325 21:32:44.261"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:44.261" endtime="20250325 21:32:44.261"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:43.217" endtime="20250325 21:32:44.261"/>
</test>
<test id="s1-s3-s14-t10" name="Incorrect values for end and start offset" line="141">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:44.265" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:44.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:44.730" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:44.264" endtime="20250325 21:32:44.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:44.731" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:44 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:44 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:44.730" endtime="20250325 21:32:44.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:44.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:44.731" endtime="20250325 21:32:44.731"/>
</kw>
<status status="PASS" starttime="20250325 21:32:44.263" endtime="20250325 21:32:44.731"/>
</kw>
<msg timestamp="20250325 21:32:44.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:44.263" endtime="20250325 21:32:44.731"/>
</kw>
<msg timestamp="20250325 21:32:44.732" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:44.263" endtime="20250325 21:32:44.732"/>
</kw>
<msg timestamp="20250325 21:32:44.732" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:44.262" endtime="20250325 21:32:44.732"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:44.732" endtime="20250325 21:32:44.732"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:44.732" endtime="20250325 21:32:44.733"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:44.736" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:44.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:44.740" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:44.734" endtime="20250325 21:32:44.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:44.740" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:44.740" endtime="20250325 21:32:44.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:44.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:44.741" endtime="20250325 21:32:44.741"/>
</kw>
<status status="PASS" starttime="20250325 21:32:44.733" endtime="20250325 21:32:44.741"/>
</kw>
<msg timestamp="20250325 21:32:44.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:44.733" endtime="20250325 21:32:44.741"/>
</kw>
<msg timestamp="20250325 21:32:44.741" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:44.733" endtime="20250325 21:32:44.741"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:44.744" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:44.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:44.748" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:44.742" endtime="20250325 21:32:44.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:44.748" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:44.748" endtime="20250325 21:32:44.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:44.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:44.748" endtime="20250325 21:32:44.749"/>
</kw>
<status status="PASS" starttime="20250325 21:32:44.742" endtime="20250325 21:32:44.749"/>
</kw>
<msg timestamp="20250325 21:32:44.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:44.742" endtime="20250325 21:32:44.749"/>
</kw>
<msg timestamp="20250325 21:32:44.749" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:44.741" endtime="20250325 21:32:44.749"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:44.749" endtime="20250325 21:32:44.750"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:44.753" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:45.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:45.232" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:44.751" endtime="20250325 21:32:45.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:45.233" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:45 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 25 Mar 2025 21:32:45 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:45.232" endtime="20250325 21:32:45.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:45.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:45.233" endtime="20250325 21:32:45.234"/>
</kw>
<status status="PASS" starttime="20250325 21:32:44.751" endtime="20250325 21:32:45.234"/>
</kw>
<msg timestamp="20250325 21:32:45.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:44.750" endtime="20250325 21:32:45.234"/>
</kw>
<msg timestamp="20250325 21:32:45.234" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:44.750" endtime="20250325 21:32:45.234"/>
</kw>
<msg timestamp="20250325 21:32:45.234" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:44.750" endtime="20250325 21:32:45.234"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:45.234" endtime="20250325 21:32:45.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:45.235" endtime="20250325 21:32:45.235"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:45.238" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:45.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:45.242" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:45.236" endtime="20250325 21:32:45.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:45.243" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:45.242" endtime="20250325 21:32:45.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:45.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:45.243" endtime="20250325 21:32:45.243"/>
</kw>
<status status="PASS" starttime="20250325 21:32:45.236" endtime="20250325 21:32:45.243"/>
</kw>
<msg timestamp="20250325 21:32:45.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:45.235" endtime="20250325 21:32:45.244"/>
</kw>
<msg timestamp="20250325 21:32:45.244" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:45.235" endtime="20250325 21:32:45.244"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:45.247" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:45.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:45.251" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:45.245" endtime="20250325 21:32:45.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:45.252" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:45.252" endtime="20250325 21:32:45.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:45.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:45.253" endtime="20250325 21:32:45.253"/>
</kw>
<status status="PASS" starttime="20250325 21:32:45.245" endtime="20250325 21:32:45.253"/>
</kw>
<msg timestamp="20250325 21:32:45.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:45.244" endtime="20250325 21:32:45.253"/>
</kw>
<msg timestamp="20250325 21:32:45.253" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250325 21:32:45.244" endtime="20250325 21:32:45.253"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:45.254" endtime="20250325 21:32:45.254"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:44.262" endtime="20250325 21:32:45.254"/>
</test>
<test id="s1-s3-s14-t11" name="Zero byte file" line="156">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:45.259" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:45.725" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:45.726" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:45.256" endtime="20250325 21:32:45.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:45.726" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:45.726" endtime="20250325 21:32:45.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:45.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:45.727" endtime="20250325 21:32:45.727"/>
</kw>
<msg timestamp="20250325 21:32:45.727" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:45.256" endtime="20250325 21:32:45.727"/>
</kw>
<msg timestamp="20250325 21:32:45.727" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:45.255" endtime="20250325 21:32:45.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:45.727" endtime="20250325 21:32:45.728"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:45.731" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:46.208" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:46.208" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:45.729" endtime="20250325 21:32:46.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:46.209" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:46.209" endtime="20250325 21:32:46.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:46.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:46.209" endtime="20250325 21:32:46.210"/>
</kw>
<msg timestamp="20250325 21:32:46.210" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:45.728" endtime="20250325 21:32:46.210"/>
</kw>
<msg timestamp="20250325 21:32:46.210" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:45.728" endtime="20250325 21:32:46.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:46.210" endtime="20250325 21:32:46.211"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:46.214" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:46.677" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:46.677" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:46.212" endtime="20250325 21:32:46.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:46.678" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:46.677" endtime="20250325 21:32:46.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:46.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:46.678" endtime="20250325 21:32:46.678"/>
</kw>
<msg timestamp="20250325 21:32:46.678" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:46.211" endtime="20250325 21:32:46.678"/>
</kw>
<msg timestamp="20250325 21:32:46.679" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250325 21:32:46.211" endtime="20250325 21:32:46.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:46.679" endtime="20250325 21:32:46.679"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:45.255" endtime="20250325 21:32:46.679"/>
</test>
<test id="s1-s3-s14-t12" name="Create file with user defined metadata and tags" line="166">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:46.683" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250325 21:32:46.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:46.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:46.681" endtime="20250325 21:32:46.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:46.686" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:46.685" endtime="20250325 21:32:46.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:46.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:46.686" endtime="20250325 21:32:46.687"/>
</kw>
<status status="PASS" starttime="20250325 21:32:46.681" endtime="20250325 21:32:46.687"/>
</kw>
<msg timestamp="20250325 21:32:46.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:46.680" endtime="20250325 21:32:46.687"/>
</kw>
<status status="PASS" starttime="20250325 21:32:46.680" endtime="20250325 21:32:46.687"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:46.690" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:47.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:47.200" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:46.688" endtime="20250325 21:32:47.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:47.201" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:47.201" endtime="20250325 21:32:47.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:47.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:47.201" endtime="20250325 21:32:47.202"/>
</kw>
<status status="PASS" starttime="20250325 21:32:46.688" endtime="20250325 21:32:47.202"/>
</kw>
<msg timestamp="20250325 21:32:47.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:46.688" endtime="20250325 21:32:47.202"/>
</kw>
<msg timestamp="20250325 21:32:47.202" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:46.687" endtime="20250325 21:32:47.202"/>
</kw>
<status status="PASS" starttime="20250325 21:32:46.687" endtime="20250325 21:32:47.202"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:47.206" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2648976766/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:47.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:47.667" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:47.204" endtime="20250325 21:32:47.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:47.668" level="INFO">{
    "LastModified": "Tue, 25 Mar 2025 21:32:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:47 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Tue, 25 Mar 2025 21:32:47 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:47.668" endtime="20250325 21:32:47.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:47.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:47.669" endtime="20250325 21:32:47.669"/>
</kw>
<status status="PASS" starttime="20250325 21:32:47.203" endtime="20250325 21:32:47.669"/>
</kw>
<msg timestamp="20250325 21:32:47.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:47.203" endtime="20250325 21:32:47.669"/>
</kw>
<msg timestamp="20250325 21:32:47.669" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:47.203" endtime="20250325 21:32:47.669"/>
</kw>
<msg timestamp="20250325 21:32:47.670" level="INFO">${result} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:47.202" endtime="20250325 21:32:47.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:47.670" endtime="20250325 21:32:47.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:47.670" endtime="20250325 21:32:47.670"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:47.673" level="INFO">Running command 'ozone sh key info /s3v/encrypted/ozone-test-2648976766/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:50.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:50.791" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-2648976766/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2025-03-25T21:...</msg>
<status status="PASS" starttime="20250325 21:32:47.671" endtime="20250325 21:32:50.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:50.792" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-2648976766/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2025-03-25T21:32:47.112Z",
  "modificationTime" : "2025-03-25T21:32:47.148Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "ETag" : "09ad6a6e23191dd19110d0251c4c3186",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 115816896921600073,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 883,
  "fileEncryptionInfo" : {
    "cipherSuite" : "AES_CTR_NOPADDING",
    "iv" : "K3dLcBeIIgWMDNeH9MdO2Q==",
    "keyName" : "key1",
    "ezKeyVersionName" : "key1@0",
    "cryptoProtocolVersion" : "ENCRYPTION_ZONES",
    "encryptedDataEncryptionKey" : "H/VIM+rZN/7tcuYAk/Jxfg=="
  },
  "file" : true
}</msg>
<status status="PASS" starttime="20250325 21:32:50.791" endtime="20250325 21:32:50.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:50.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:50.792" endtime="20250325 21:32:50.792"/>
</kw>
<status status="PASS" starttime="20250325 21:32:47.671" endtime="20250325 21:32:50.792"/>
</kw>
<msg timestamp="20250325 21:32:50.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:47.671" endtime="20250325 21:32:50.792"/>
</kw>
<msg timestamp="20250325 21:32:50.793" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-2648976766/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2025-03-25T21:...</msg>
<status status="PASS" starttime="20250325 21:32:47.670" endtime="20250325 21:32:50.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:50.793" endtime="20250325 21:32:50.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:50.793" endtime="20250325 21:32:50.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:50.793" endtime="20250325 21:32:50.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:50.794" endtime="20250325 21:32:50.794"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:50.798" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/custom-metadata/key1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:51.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:51.279" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:50.796" endtime="20250325 21:32:51.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:51.280" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:51 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:32:51 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:51.279" endtime="20250325 21:32:51.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:51.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:51.280" endtime="20250325 21:32:51.280"/>
</kw>
<status status="PASS" starttime="20250325 21:32:50.795" endtime="20250325 21:32:51.280"/>
</kw>
<msg timestamp="20250325 21:32:51.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:50.795" endtime="20250325 21:32:51.280"/>
</kw>
<msg timestamp="20250325 21:32:51.280" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:50.794" endtime="20250325 21:32:51.281"/>
</kw>
<msg timestamp="20250325 21:32:51.281" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:32:50.794" endtime="20250325 21:32:51.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:51.281" endtime="20250325 21:32:51.281"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:51.284" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:32:47 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:51 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:32:51 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:51.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:51.289" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250325 21:32:51.282" endtime="20250325 21:32:51.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:51.289" level="INFO">2</msg>
<status status="PASS" starttime="20250325 21:32:51.289" endtime="20250325 21:32:51.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:51.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:51.289" endtime="20250325 21:32:51.290"/>
</kw>
<msg timestamp="20250325 21:32:51.290" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250325 21:32:51.281" endtime="20250325 21:32:51.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:32:51.290" endtime="20250325 21:32:51.290"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:46.680" endtime="20250325 21:32:51.291"/>
</test>
<test id="s1-s3-s14-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="185">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:51.294" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250325 21:32:51.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:51.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:51.292" endtime="20250325 21:32:51.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:51.297" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:51.296" endtime="20250325 21:32:51.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:51.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:51.297" endtime="20250325 21:32:51.297"/>
</kw>
<status status="PASS" starttime="20250325 21:32:51.292" endtime="20250325 21:32:51.297"/>
</kw>
<msg timestamp="20250325 21:32:51.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:51.292" endtime="20250325 21:32:51.297"/>
</kw>
<status status="PASS" starttime="20250325 21:32:51.291" endtime="20250325 21:32:51.297"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:51.301" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:51.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:51.827" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:51.299" endtime="20250325 21:32:51.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:51.828" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:51.828" endtime="20250325 21:32:51.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:51.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:51.828" endtime="20250325 21:32:51.829"/>
</kw>
<status status="PASS" starttime="20250325 21:32:51.298" endtime="20250325 21:32:51.829"/>
</kw>
<msg timestamp="20250325 21:32:51.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:51.298" endtime="20250325 21:32:51.829"/>
</kw>
<msg timestamp="20250325 21:32:51.829" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:32:51.298" endtime="20250325 21:32:51.829"/>
</kw>
<status status="PASS" starttime="20250325 21:32:51.298" endtime="20250325 21:32:51.829"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:51.833" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-2648976766/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:52.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:52.311" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:51.831" endtime="20250325 21:32:52.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:52.312" level="INFO">{
    "LastModified": "Tue, 25 Mar 2025 21:32:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:32:52 GMT",
    "Metadata": {
        "gdprenabled": "true",
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Tue, 25 Mar 2025 21:32:52 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:32:52.312" endtime="20250325 21:32:52.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:52.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:52.312" endtime="20250325 21:32:52.313"/>
</kw>
<status status="PASS" starttime="20250325 21:32:51.831" endtime="20250325 21:32:52.313"/>
</kw>
<msg timestamp="20250325 21:32:52.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:51.830" endtime="20250325 21:32:52.313"/>
</kw>
<msg timestamp="20250325 21:32:52.313" level="INFO">${output} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:51.830" endtime="20250325 21:32:52.313"/>
</kw>
<msg timestamp="20250325 21:32:52.313" level="INFO">${result} = {
    "LastModified": "Tue, 25 Mar 2025 21:32:51 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250325 21:32:51.829" endtime="20250325 21:32:52.313"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:52.313" endtime="20250325 21:32:52.314"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:52.314" endtime="20250325 21:32:52.314"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:51.291" endtime="20250325 21:32:52.314"/>
</test>
<test id="s1-s3-s14-t14" name="Create file with user defined metadata size larger than 2 KB" line="193">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:52.318" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250325 21:32:52.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:52.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:52.316" endtime="20250325 21:32:52.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:52.321" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:52.321" endtime="20250325 21:32:52.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:52.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:52.321" endtime="20250325 21:32:52.322"/>
</kw>
<status status="PASS" starttime="20250325 21:32:52.316" endtime="20250325 21:32:52.322"/>
</kw>
<msg timestamp="20250325 21:32:52.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:52.315" endtime="20250325 21:32:52.322"/>
</kw>
<status status="PASS" starttime="20250325 21:32:52.315" endtime="20250325 21:32:52.322"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:32:52.324" level="INFO">${custom_metadata_value} = EHHYOR7hnqL4wKvlI2rsHZyV7iYttlMXB9n0hkj4sMuZRSN2I42JnYGcDXv4C8WxINYfTnk3iae1dPp5jz4xR2avDo4ijyRNWuE4sbwnbWk1E29oURkv1DiZQnanjJTP2WunGNGnPx055RKsUQwanydzJv5bvai7sjJqnsxkgGSzI4wLG2siP5J9QIJpJB2L4MUXUlIy...</msg>
<status status="PASS" starttime="20250325 21:32:52.322" endtime="20250325 21:32:52.324"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:52.328" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=EHHYOR7hnqL4wKvlI2rsHZyV7iYttlMXB9n0hkj4sMuZRSN2I42JnYGcDXv4C8WxINYfTnk3iae1dPp5jz4xR2avDo4ijyRNWuE4sbwnbWk1E29oURkv1DiZQnanjJTP2WunGNGnPx055RKsUQwanydzJv5bvai7sjJqnsxkgGSzI4wLG2siP5J9QIJpJB2L4MUXUlIytoT273mIhEuSlnC6YSXGNGhGEanv8bAIy4nDAd0ewQGA8ZauenfNqmCKHmJvkUriASseLPmLRZhJC0Hf2E4ByuCCuBTjKdIh6OcrbJ8dBwuDXzTKMtWqZVFGdyx621Z5YyXgmSps5B5BRE8TJRQbanqFJHylsGMP5hSkEoZlD5cnlFKC18lbEvElK64r333S0sp66Bxtn4g8hCqihdkpfVf7KeZtba8JZjxL5BqhVhdgbvI65tvA1jlPf9smh6mSVkddaz02FM42LpTcQflmvdiM1qn1FN9HA3gbtVsnsnos7jlgVa2drDFSnB8dDpTsTTBcOcNTlPRtSMi56E7AQPqUbWfkmdKCGSQxBNKT6QDnNFZ0vsUD2atVM6xfL7HcxZ9MnxdAdkt0mciJ7Pgg0iofGCmzVnDPI51rLQtdrPCTrByFivsQm0JvmCHNFfMojqohwr5KqPKegMoYZqu2eg4hOdAh4bSRkdVaixiHCKadm0XONQWCf344D7XweQrfDI9SdpuulV60EoaMwwYCkcDrwAn8Nq4OlEbV17hf4TeEw9qxVkmyQOGkiU9g8pQ6CbKnDDnerwdaUP2kFsxBMequgNaUA130huL5z2ap3jTrbRIfNFhWeW0FSJT925BT4j6G2qTKF6EiNrX0wKgrUPKZPXQP52VTiCWMxwo4C0NThyXWoWc5VVzk4ywpPQ7GMgMKdqXlNJwT3SZgYr7LPvbZoK76PvBjjcqpfR11rTPAR0RCLDCpDIRLxlPEFUOCWgdIELawYeD5DjcztyWe7EM9uwhSRYtOhoM41XII0AwMvfP00YOkQMWADS2CK1mJWm20WjCVzXdtCFn3CdfZ0repk9dDFVwkFEDDVx4ysfL6FNIwAGWWXwqpYI0JAMOtOEVvEgDoCdPDW6yx2T9EdTPjgidpk6ECug484enaNs7B30dUt9IzdT9E1Jl53p1ieJBkI8iZ2zDwOUS85tFXsvew1yO2lSGs6MYIokhC7dXdTxi7nvoQS3c3uZYqJxZfaXgRFzJIKZ2nbhtiZRxUbda5NBttw2kuTeQk0UXmNS2zKRRIEu5wkUZMQX5m6czpP0rYZGmPHX7Zgm9qfv8UBtdckdpHda4Pg9FJRRDTokzvlxIQpsZ1z9rHrYimiJuDDe9sknVebCELs1znvR1aElDNQK7cwQPtkuY3FmHP4SRjcPzcrFq1m0oS5sBp9Ewi9ZOYJ20QDDKZKB3pI0OMApM4mF646lfmnfFhSMESRdYpzQQYfJJYq5NVPrut7gdAauv2Eyfi11VvZEp3rhXqaMIJelJu5OGUtBD61HxSTuS6QWS3DXSE5f9EHkwDhdmnRYZ3zZV3LxW100cPgFzAIRPEjILEwWr89KJ6BpSGIo1WY7LHFOcsnvhMpjji4VxeI2k38XbPSGTUCoXuAgzmP4oz4nBvg6ISTNNeJM95MBwd0n5Tzo6WCOFsJGO2vRkOc3CVjNNi7sf5MdZ3zSnlLQPPHKdugh2D8hr87D6c0eDWlFVxwjctkXtMPYzPh4WqMsfYKLN68ty2uGQwDA672eWL1BO4pThumFQ8HDXMSaLJA1Y7J4t12UHqOYqZSofv532vaLTjRdDZAcQa1KRTbMFpcf7IkbBpOp3amMK84EyfX6JIAsf9XjLG3UGdkzv3HFEsf18EdSC34ZXmtJfW24xVCJD92BlAobeApFPLQ8AhLtg9IiyUEQuyhJeBEuUbAiwgsWNksqhuiv9mI6uZyEgMyBziaRVyABq8X2CalMYp78lzMWF7tjvQlnMjvh9jrOl2QEFhVAn8xQK8XULRGyPadDIm9C6veJiCCTql7a1fQXyfRAtSvkWVm7emrn4fWEirgvCI6YIt2LfoegfYoivJkJUEcgWpso0KwkSxNwaFnLFIc2Z2bC1MfxmxVyGRT68IFgNincIQW2YhheVsFwZjxcDvlQEF2Q6JXrBSKSOju7ha5Tn3zCchDG4fKDX6qlvCpGSJ8E1lSyivsOvXxoTQsPFyoE1293Q4aFvwPXPGGv372XUESdHxGfIvCxB170WlhrllU61K3oBSywAm6NnUrj71ZxTGCuufUSTsddp8xobzlikWz6Mc2R73dSfZYWj77c8ChyegGLj9yba36emPodMvTuTfQkDq7NtEwHKtdQTd4pl4dLXlZrAicXmNRtxhMvIIcYYocenzNLNdyMhiRPyDptrsrOWqmzFOZFo9RCmQ3LIFvLuIFJ6iaul060M4jx0nyRDbhSEYOpFyfHTYiC6pwKuRlZyD19gL2KyXQ2MDScixFZ9XtEkxszroj9glPtCRtD8N7mYG2J8rIAZY4ySY0LUklxvuffYawi6cveX7lvcQTZaFWV6RPzDwN98LxXhiE7m9rUFLKjRpXetdedqdC8MBqF0tJFCy8cjkItiC4PCFuJQy3YnUpFYeFpIDmL2UmRb48y24qkcmJLecksEgM7eRQ48ruuLmnDHPqsZQrzKk4j6M9zPDMxM1FA9PM1PhhjYvoWDlXwUXaPqxneW6OhfeXVyr4A0fPfHw4ZDOWf6EVWv9B9tPWZ3NaeygFK4pz3xDUYf6kTp3uMxLG0CZIs0x4SUW1qpa8kwOq0xXM9GPVWfUWtyKGzhMxTuif7XZeyHmCHfwJcXqKl7BIhiwEZl1hWQeQfossZqQ7en9m00v4IHUetBCsnh7DEQvH3QfqsP6pYYKBCL4A2Hp99730LFZDDrowBTb2RZpUb0UPXP9CnM3sHxBi5Z9o1basnTovREAhDZw6TKZRMeL5f33v3kORzZ21W4tPF5oPisw" 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:52.803" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:52.803" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250325 21:32:52.325" endtime="20250325 21:32:52.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:52.804" level="INFO">
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250325 21:32:52.804" endtime="20250325 21:32:52.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:52.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:52.804" endtime="20250325 21:32:52.805"/>
</kw>
<msg timestamp="20250325 21:32:52.805" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250325 21:32:52.325" endtime="20250325 21:32:52.805"/>
</kw>
<msg timestamp="20250325 21:32:52.805" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250325 21:32:52.324" endtime="20250325 21:32:52.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:52.805" endtime="20250325 21:32:52.806"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:52.806" endtime="20250325 21:32:52.806"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:52.315" endtime="20250325 21:32:52.806"/>
</test>
<test id="s1-s3-s14-t15" name="Create files invalid tags" line="200">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:52.810" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:53.294" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:53.294" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250325 21:32:52.808" endtime="20250325 21:32:53.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:53.295" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250325 21:32:53.294" endtime="20250325 21:32:53.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:53.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:53.295" endtime="20250325 21:32:53.295"/>
</kw>
<msg timestamp="20250325 21:32:53.295" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250325 21:32:52.808" endtime="20250325 21:32:53.295"/>
</kw>
<msg timestamp="20250325 21:32:53.295" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250325 21:32:52.807" endtime="20250325 21:32:53.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:53.296" endtime="20250325 21:32:53.296"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_key}</var>
<arg>129</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:32:53.296" level="INFO">${long_tag_key} = VGe5SbEtjDl6m0iR2wvbu8yimZUpbtiXWQAlNxkwbkBivHAAEEwoMhWuhtJcCHOnzpf6rm3Gxh5uc8bKvfzVCbXmc6wuUqCS9056ip6rMq0FVqAukkDGMrrW1MSXS2FWj</msg>
<status status="PASS" starttime="20250325 21:32:53.296" endtime="20250325 21:32:53.296"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${long_tag_key}=tag-value1"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:53.300" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="VGe5SbEtjDl6m0iR2wvbu8yimZUpbtiXWQAlNxkwbkBivHAAEEwoMhWuhtJcCHOnzpf6rm3Gxh5uc8bKvfzVCbXmc6wuUqCS9056ip6rMq0FVqAukkDGMrrW1MSXS2FWj=tag-value1" 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:53.784" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:53.784" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250325 21:32:53.298" endtime="20250325 21:32:53.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:53.785" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250325 21:32:53.785" endtime="20250325 21:32:53.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:53.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:53.785" endtime="20250325 21:32:53.786"/>
</kw>
<msg timestamp="20250325 21:32:53.786" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250325 21:32:53.297" endtime="20250325 21:32:53.786"/>
</kw>
<msg timestamp="20250325 21:32:53.786" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250325 21:32:53.296" endtime="20250325 21:32:53.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:53.786" endtime="20250325 21:32:53.786"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_value}</var>
<arg>257</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250325 21:32:53.787" level="INFO">${long_tag_value} = BZ9dp3tvh4KVtTN9uGFqc1UXKjMkdXCeVdCJ9ZjGJsgInkgnlbNDvZXgUjTm7wbNe27oEjvSBImsYjl52altkhMy5aku1DE7B389akOH3SpEQMNjb1ZBrmLj2N7AdgxubgHvQRiR2oIox1L11VVkkJnwCq473uqdHGR0YtUH12EXA53tFS1HWir7WQkVlmI7LPbMjL5S...</msg>
<status status="PASS" starttime="20250325 21:32:53.786" endtime="20250325 21:32:53.787"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=${long_tag_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:53.790" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=BZ9dp3tvh4KVtTN9uGFqc1UXKjMkdXCeVdCJ9ZjGJsgInkgnlbNDvZXgUjTm7wbNe27oEjvSBImsYjl52altkhMy5aku1DE7B389akOH3SpEQMNjb1ZBrmLj2N7AdgxubgHvQRiR2oIox1L11VVkkJnwCq473uqdHGR0YtUH12EXA53tFS1HWir7WQkVlmI7LPbMjL5S42sGkXbhiNX6O0iBDSPKrLV2NcQ3dcxOjEtam4SVafjvKI95qKcfhaACc" 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:54.264" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:54.264" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250325 21:32:53.788" endtime="20250325 21:32:54.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:54.265" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250325 21:32:54.265" endtime="20250325 21:32:54.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:54.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:54.266" endtime="20250325 21:32:54.266"/>
</kw>
<msg timestamp="20250325 21:32:54.266" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250325 21:32:53.787" endtime="20250325 21:32:54.266"/>
</kw>
<msg timestamp="20250325 21:32:54.266" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250325 21:32:53.787" endtime="20250325 21:32:54.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:54.266" endtime="20250325 21:32:54.267"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:52.807" endtime="20250325 21:32:54.267"/>
</test>
<test id="s1-s3-s14-t16" name="Create files with too many tags" line="210">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:54.271" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250325 21:32:54.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:54.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:54.269" endtime="20250325 21:32:54.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:54.273" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:54.273" endtime="20250325 21:32:54.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:54.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:54.274" endtime="20250325 21:32:54.274"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.268" endtime="20250325 21:32:54.274"/>
</kw>
<msg timestamp="20250325 21:32:54.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:54.268" endtime="20250325 21:32:54.274"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.268" endtime="20250325 21:32:54.274"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{tags_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250325 21:32:54.275" level="INFO">@{tags_list} = [ ]</msg>
<status status="PASS" starttime="20250325 21:32:54.274" endtime="20250325 21:32:54.275"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>11</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:32:54.275" endtime="20250325 21:32:54.275"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.275" endtime="20250325 21:32:54.275"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:32:54.276" endtime="20250325 21:32:54.276"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.275" endtime="20250325 21:32:54.276"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:32:54.276" endtime="20250325 21:32:54.276"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.276" endtime="20250325 21:32:54.276"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:32:54.277" endtime="20250325 21:32:54.277"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.277" endtime="20250325 21:32:54.277"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:32:54.277" endtime="20250325 21:32:54.277"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.277" endtime="20250325 21:32:54.277"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:32:54.278" endtime="20250325 21:32:54.278"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.278" endtime="20250325 21:32:54.278"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:32:54.278" endtime="20250325 21:32:54.278"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.278" endtime="20250325 21:32:54.278"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:32:54.279" endtime="20250325 21:32:54.279"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.278" endtime="20250325 21:32:54.279"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:32:54.279" endtime="20250325 21:32:54.279"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.279" endtime="20250325 21:32:54.279"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:32:54.280" endtime="20250325 21:32:54.280"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.279" endtime="20250325 21:32:54.280"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250325 21:32:54.280" endtime="20250325 21:32:54.280"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.280" endtime="20250325 21:32:54.280"/>
</iter>
<status status="PASS" starttime="20250325 21:32:54.275" endtime="20250325 21:32:54.280"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${tags_over_limit}</var>
<arg>SEPARATOR=&amp;</arg>
<arg>@{tags_list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250325 21:32:54.281" level="INFO">${tags_over_limit} = tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;ta...</msg>
<status status="PASS" starttime="20250325 21:32:54.281" endtime="20250325 21:32:54.281"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${tags_over_limit}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:54.284" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;tag-key-9=tag-value-9&amp;tag-key-10=tag-value-10" 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:54.770" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:32:54.770" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250325 21:32:54.282" endtime="20250325 21:32:54.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:54.771" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250325 21:32:54.770" endtime="20250325 21:32:54.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:54.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:54.771" endtime="20250325 21:32:54.771"/>
</kw>
<msg timestamp="20250325 21:32:54.771" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250325 21:32:54.281" endtime="20250325 21:32:54.771"/>
</kw>
<msg timestamp="20250325 21:32:54.772" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250325 21:32:54.281" endtime="20250325 21:32:54.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:32:54.772" endtime="20250325 21:32:54.772"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:54.267" endtime="20250325 21:32:54.772"/>
</test>
<test id="s1-s3-s14-t17" name="Create small file and expect ETag (MD5) in a reponse header" line="221">
<kw name="Execute" library="os">
<arg>head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:54.776" level="INFO">Running command 'head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file'.</msg>
<msg timestamp="20250325 21:32:54.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:54.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:54.774" endtime="20250325 21:32:54.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:54.785" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:54.784" endtime="20250325 21:32:54.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:54.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:54.785" endtime="20250325 21:32:54.785"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.774" endtime="20250325 21:32:54.785"/>
</kw>
<msg timestamp="20250325 21:32:54.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:54.773" endtime="20250325 21:32:54.785"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.773" endtime="20250325 21:32:54.785"/>
</kw>
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:54.788" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:54.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:54.794" level="INFO">${output} = 679eb910228fa8a168ba265c0e045a4d</msg>
<status status="PASS" starttime="20250325 21:32:54.786" endtime="20250325 21:32:54.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:54.795" level="INFO">679eb910228fa8a168ba265c0e045a4d</msg>
<status status="PASS" starttime="20250325 21:32:54.794" endtime="20250325 21:32:54.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:54.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:54.795" endtime="20250325 21:32:54.795"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.786" endtime="20250325 21:32:54.795"/>
</kw>
<msg timestamp="20250325 21:32:54.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:54.786" endtime="20250325 21:32:54.796"/>
</kw>
<msg timestamp="20250325 21:32:54.796" level="INFO">${file_md5_checksum} = 679eb910228fa8a168ba265c0e045a4d</msg>
<status status="PASS" starttime="20250325 21:32:54.785" endtime="20250325 21:32:54.796"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/small_file s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:54.799" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/small_file s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:55.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:55.346" level="INFO">${output} = 2025-03-25 21:32:55,107 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:55,107 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:54.797" endtime="20250325 21:32:55.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:55.347" level="INFO">2025-03-25 21:32:55,107 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:55,107 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/small_file', 's3://encrypted']
2025-03-25 21:32:55,107 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f97ded59820&gt;
2025-03-25 21:32:55,107 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f97df644c10&gt;
2025-03-25 21:32:55,107 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f97df336e50&gt;
2025-03-25 21:32:55,109 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-03-25 21:32:55,110 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f97dedc74c0&gt;
2025-03-25 21:32:55,111 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f97ded0b820&gt;
2025-03-25 21:32:55,111 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f97dede0310&gt;
2025-03-25 21:32:55,111 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,111 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f97ded0b820&gt;
2025-03-25 21:32:55,112 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f97dede0310&gt;
2025-03-25 21:32:55,113 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,113 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,113 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f97df305c70&gt;
2025-03-25 21:32:55,113 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,113 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f97df305c70&gt;
2025-03-25 21:32:55,113 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,113 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,113 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,114 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f97df305c70&gt;
2025-03-25 21:32:55,114 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,114 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,114 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,114 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,114 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,114 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,114 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,114 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,114 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,114 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,114 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,115 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,115 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,115 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,115 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,115 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,115 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,115 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,115 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f97df305c70&gt;
2025-03-25 21:32:55,115 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,115 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,115 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,115 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f97df305c70&gt;
2025-03-25 21:32:55,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,116 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f97df305c70&gt;
2025-03-25 21:32:55,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,116 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f97dec644c0&gt;
2025-03-25 21:32:55,116 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-03-25 21:32:55,116 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-03-25 21:32:55,118 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-03-25 21:32:55,140 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-03-25 21:32:55,141 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f97e087a9d0&gt;
2025-03-25 21:32:55,147 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-03-25 21:32:55,155 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-03-25 21:32:55,174 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-03-25 21:32:55,177 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-03-25 21:32:55,179 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f97df97da60&gt;
2025-03-25 21:32:55,179 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f97df97d820&gt;
2025-03-25 21:32:55,179 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:55,182 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:55,184 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-03-25 21:32:55,184 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:55,184 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:55,185 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:55,185 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:55,185 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f97e087a9d0&gt;
2025-03-25 21:32:55,186 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f97df97da60&gt;
2025-03-25 21:32:55,186 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f97df97d820&gt;
2025-03-25 21:32:55,186 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:55,188 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:55,189 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:55,189 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:55,190 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:55,190 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:55,190 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f97e087a9d0&gt;
2025-03-25 21:32:55,191 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f97df97da60&gt;
2025-03-25 21:32:55,191 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f97df97d820&gt;
2025-03-25 21:32:55,191 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:55,193 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:55,194 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:55,194 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:55,195 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:55,195 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:55,195 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-03-25 21:32:55,196 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:55,196 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f97de0b0820&gt;}) about to wait for the following futures []
2025-03-25 21:32:55,196 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f97de0b0820&gt;}) done waiting for dependent futures
2025-03-25 21:32:55,196 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f97de0b0820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f97de2a88e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f97de0a7dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f97de0a7e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f97de0ad0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f97de0b0820&gt;}
2025-03-25 21:32:55,197 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f97de0ad0d0&gt; for transfer request: 0.
2025-03-25 21:32:55,197 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:55,197 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2025-03-25 21:32:55,197 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:55,197 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:32:55,198 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f97de2a88e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f97de0480d0&gt;, 'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}
2025-03-25 21:32:55,198 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f97df8c84c0&gt;
2025-03-25 21:32:55,198 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f97df8c58b0&gt;
2025-03-25 21:32:55,198 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f97df8c8dc0&gt;
2025-03-25 21:32:55,198 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f97df8c5820&gt;
2025-03-25 21:32:55,198 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f97df8cb700&gt;
2025-03-25 21:32:55,198 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f97de282820&gt;&gt;
2025-03-25 21:32:55,198 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f97de3086d0&gt;&gt;
2025-03-25 21:32:55,198 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f97df8c5670&gt;
2025-03-25 21:32:55,198 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f97df8cb8b0&gt;
2025-03-25 21:32:55,198 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f97de282820&gt;&gt;
2025-03-25 21:32:55,199 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:32:55,199 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:32:55,199 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:32:55,199 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:32:55,200 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f97dfa39790&gt;
2025-03-25 21:32:55,202 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f97df8c5b80&gt;
2025-03-25 21:32:55,202 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-03-25 21:32:55,202 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f97de2827f0&gt;&gt;
2025-03-25 21:32:55,202 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f97df8c5280&gt;
2025-03-25 21:32:55,202 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f97df8cbd30&gt;
2025-03-25 21:32:55,202 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f97df8c8ee0&gt;
2025-03-25 21:32:55,202 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'Z565ECKPqKFouiZcDgRaTQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f97de0480d0&gt;, 'auth_path': '/encrypted/small_file', 'url': 'http://s3g:9878/encrypted/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f97de2a8a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'small_file', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f97de0480d0&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:32:55,203 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f97df000790&gt;
2025-03-25 21:32:55,203 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f97de2a89d0&gt;&gt;
2025-03-25 21:32:55,203 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f97df8c54c0&gt;
2025-03-25 21:32:55,203 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f97df8cb820&gt;
2025-03-25 21:32:55,203 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f97de2827f0&gt;&gt;
2025-03-25 21:32:55,204 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:32:55,204 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/small_file

content-md5:Z565ECKPqKFouiZcDgRaTQ==
host:s3g:9878
x-amz-content-sha256:01d3adb7b50e8a04ffd78b23e89fb97b76478cb16d18ae6ab09ae852f4ceaff9
x-amz-date:20250325T213255Z

content-md5;host;x-amz-content-sha256;x-amz-date
01d3adb7b50e8a04ffd78b23e89fb97b76478cb16d18ae6ab09ae852f4ceaff9
2025-03-25 21:32:55,204 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213255Z
20250325/us-west-1/s3/aws4_request
64d709e7b03edf1bdc056e0ee48fd99331da87406e4e5514cfe76cc11ba853ed
2025-03-25 21:32:55,204 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
6e99a78e70e4a22d8d63bb2d1daae52edcada284716f581ed775f0578e12cc05
2025-03-25 21:32:55,204 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f97df000820&gt;
2025-03-25 21:32:55,204 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f97df8cb670&gt;
2025-03-25 21:32:55,204 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'Z565ECKPqKFouiZcDgRaTQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250325T213255Z', 'X-Amz-Content-SHA256': b'01d3adb7b50e8a04ffd78b23e89fb97b76478cb16d18ae6ab09ae852f4ceaff9', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=6e99a78e70e4a22d8d63bb2d1daae52edcada284716f581ed775f0578e12cc05', 'amz-sdk-invocation-id': b'4a37d05a-e2bd-4403-a8d6-1e167109d401', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2025-03-25 21:32:55,205 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-03-25 21:32:55,206 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-03-25 21:32:55,225 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (8.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (15.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (22.6 MiB/s) with 1 file(s) remaining
2025-03-25 21:32:55,291 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/small_file HTTP/1.1" 200 0
2025-03-25 21:32:55,291 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f97df8cbb80&gt;
2025-03-25 21:32:55,292 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f97df8cb9d0&gt;
2025-03-25 21:32:55,292 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:32:55 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:32:55 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"679eb910228fa8a168ba265c0e045a4d"', 'server': 'Ozone', 'x-amz-id-2': 'MTAmd502e', 'x-amz-request-id': '22df50aa-fc2a-4349-9ebd-20d5487e0c90', 'content-length': '0'}
2025-03-25 21:32:55,292 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-03-25 21:32:55,292 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f97df8cbca0&gt;
2025-03-25 21:32:55,292 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f97de282760&gt;
2025-03-25 21:32:55,292 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:32:55,292 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f97de282820&gt;&gt;
2025-03-25 21:32:55,292 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f97ded56d30&gt;
Completed 976.6 KiB/976.6 KiB (10.0 MiB/s) with 1 file(s) remaining
2025-03-25 21:32:55,293 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://encrypted/small_file          
2025-03-25 21:32:55,293 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250325 21:32:55.347" endtime="20250325 21:32:55.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:55.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:55.348" endtime="20250325 21:32:55.348"/>
</kw>
<status status="PASS" starttime="20250325 21:32:54.797" endtime="20250325 21:32:55.348"/>
</kw>
<msg timestamp="20250325 21:32:55.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:54.797" endtime="20250325 21:32:55.349"/>
</kw>
<msg timestamp="20250325 21:32:55.349" level="INFO">${output} = 2025-03-25 21:32:55,107 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:55,107 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:54.796" endtime="20250325 21:32:55.349"/>
</kw>
<msg timestamp="20250325 21:32:55.349" level="INFO">${result} = 2025-03-25 21:32:55,107 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:55,107 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:54.796" endtime="20250325 21:32:55.349"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?i)Response header.*ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250325 21:32:55.349" endtime="20250325 21:32:55.350"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:54.772" endtime="20250325 21:32:55.350"/>
</test>
<test id="s1-s3-s14-t18" name="Download small file end expect ETag (MD5) in a response header" line="228">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:55.355" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:55.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:55.360" level="INFO">${output} = 679eb910228fa8a168ba265c0e045a4d</msg>
<status status="PASS" starttime="20250325 21:32:55.352" endtime="20250325 21:32:55.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:55.361" level="INFO">679eb910228fa8a168ba265c0e045a4d</msg>
<status status="PASS" starttime="20250325 21:32:55.361" endtime="20250325 21:32:55.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:55.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:55.361" endtime="20250325 21:32:55.362"/>
</kw>
<status status="PASS" starttime="20250325 21:32:55.352" endtime="20250325 21:32:55.362"/>
</kw>
<msg timestamp="20250325 21:32:55.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:55.352" endtime="20250325 21:32:55.362"/>
</kw>
<msg timestamp="20250325 21:32:55.362" level="INFO">${file_md5_checksum} = 679eb910228fa8a168ba265c0e045a4d</msg>
<status status="PASS" starttime="20250325 21:32:55.351" endtime="20250325 21:32:55.362"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/small_file /tmp/small_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:55.365" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://encrypted/small_file /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:55.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:55.934" level="INFO">${output} = 2025-03-25 21:32:55,677 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:55,677 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:55.363" endtime="20250325 21:32:55.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:55.935" level="INFO">2025-03-25 21:32:55,677 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:55,677 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://encrypted/small_file', '/tmp/small_file_downloaded']
2025-03-25 21:32:55,677 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f2423d25820&gt;
2025-03-25 21:32:55,677 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f2424610c10&gt;
2025-03-25 21:32:55,677 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f2424301e50&gt;
2025-03-25 21:32:55,679 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-03-25 21:32:55,681 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f2423d934c0&gt;
2025-03-25 21:32:55,681 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f2423cd7820&gt;
2025-03-25 21:32:55,681 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f2423daa310&gt;
2025-03-25 21:32:55,681 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,681 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f2423cd7820&gt;
2025-03-25 21:32:55,682 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f2423daa310&gt;
2025-03-25 21:32:55,683 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,683 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,683 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f24242cfc70&gt;
2025-03-25 21:32:55,683 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,684 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f24242cfc70&gt;
2025-03-25 21:32:55,684 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,684 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,684 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,684 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f24242cfc70&gt;
2025-03-25 21:32:55,684 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,684 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,684 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,684 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,684 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,685 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,685 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,685 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,685 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,685 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,685 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,685 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,685 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,685 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,685 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,686 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,686 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,686 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,686 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f24242cfc70&gt;
2025-03-25 21:32:55,686 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,686 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,686 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,686 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f24242cfc70&gt;
2025-03-25 21:32:55,686 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,686 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f24242cfc70&gt;
2025-03-25 21:32:55,686 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,686 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,686 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,687 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,687 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,687 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,687 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2423c304c0&gt;
2025-03-25 21:32:55,687 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-03-25 21:32:55,687 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-03-25 21:32:55,688 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-03-25 21:32:55,710 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-03-25 21:32:55,710 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f24258469d0&gt;
2025-03-25 21:32:55,716 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-03-25 21:32:55,724 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-03-25 21:32:55,743 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-03-25 21:32:55,746 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-03-25 21:32:55,747 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f2424949a60&gt;
2025-03-25 21:32:55,747 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f2424949820&gt;
2025-03-25 21:32:55,748 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:55,751 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:55,752 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-03-25 21:32:55,753 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:55,753 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:55,753 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:55,753 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:55,754 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f24258469d0&gt;
2025-03-25 21:32:55,754 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f2424949a60&gt;
2025-03-25 21:32:55,754 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f2424949820&gt;
2025-03-25 21:32:55,754 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:55,756 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:55,758 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:55,758 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:55,758 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:55,758 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:55,759 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f24258469d0&gt;
2025-03-25 21:32:55,759 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f2424949a60&gt;
2025-03-25 21:32:55,759 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f2424949820&gt;
2025-03-25 21:32:55,760 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:55,762 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:55,763 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:55,763 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:55,764 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:55,764 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:55,764 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-03-25 21:32:55,765 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f24248918b0&gt;
2025-03-25 21:32:55,765 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f2424891820&gt;
2025-03-25 21:32:55,765 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f2424897700&gt;
2025-03-25 21:32:55,765 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f242307da30&gt;&gt;
2025-03-25 21:32:55,765 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f242310e940&gt;&gt;
2025-03-25 21:32:55,765 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f2424891670&gt;
2025-03-25 21:32:55,765 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f24248978b0&gt;
2025-03-25 21:32:55,765 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f242307da30&gt;&gt;
2025-03-25 21:32:55,765 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:32:55,766 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:32:55,766 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:32:55,766 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:32:55,767 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f2424891b80&gt;
2025-03-25 21:32:55,767 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f242307da00&gt;&gt;
2025-03-25 21:32:55,767 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f2424891280&gt;
2025-03-25 21:32:55,767 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7f2424897d30&gt;
2025-03-25 21:32:55,767 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f2424894ee0&gt;
2025-03-25 21:32:55,767 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/small_file', 'url': 'http://s3g:9878/encrypted/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f24230abca0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'small_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:32:55,767 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f24230abc10&gt;&gt;
2025-03-25 21:32:55,767 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f24248914c0&gt;
2025-03-25 21:32:55,767 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f2424897820&gt;
2025-03-25 21:32:55,767 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f242307da00&gt;&gt;
2025-03-25 21:32:55,768 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:32:55,768 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/encrypted/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250325T213255Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-03-25 21:32:55,768 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213255Z
20250325/us-west-1/s3/aws4_request
3035e53a5a6019d66c5839d40bb51c5b8df6ed3a91a35e09c3ddce402ffad04e
2025-03-25 21:32:55,768 - MainThread - botocore.auth - DEBUG - Signature:
59446ce4948e4cf0d66bf8a12a37ee22027d8a2e24a8ae827858358c5d9ee177
2025-03-25 21:32:55,768 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f2424897670&gt;
2025-03-25 21:32:55,768 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/encrypted/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250325T213255Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=59446ce4948e4cf0d66bf8a12a37ee22027d8a2e24a8ae827858358c5d9ee177', 'amz-sdk-invocation-id': b'2aa8053e-6056-4e70-82a3-ace4b4d467bc', 'amz-sdk-request': b'attempt=1'}&gt;
2025-03-25 21:32:55,768 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-03-25 21:32:55,777 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /encrypted/small_file HTTP/1.1" 200 0
2025-03-25 21:32:55,778 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7f2424897b80&gt;
2025-03-25 21:32:55,778 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7f24248979d0&gt;
2025-03-25 21:32:55,779 - MainThread - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:32:55 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:32:55 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"679eb910228fa8a168ba265c0e045a4d"', 'last-modified': 'Tue, 25 Mar 2025 21:32:55 GMT', 'server': 'Ozone', 'x-amz-id-2': 'uljUWB5Z7jeJAu', 'x-amz-request-id': '12ea8041-c2d9-4e2a-918f-4fcbde0d90fc', 'content-length': '1000000'}
2025-03-25 21:32:55,779 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-03-25 21:32:55,779 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7f2424897ca0&gt;
2025-03-25 21:32:55,779 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f242307d970&gt;
2025-03-25 21:32:55,779 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:32:55,779 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f242307da30&gt;&gt;
2025-03-25 21:32:55,780 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f2423d22d30&gt;
2025-03-25 21:32:55,780 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:55,781 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f24230318b0&gt;}) about to wait for the following futures []
2025-03-25 21:32:55,781 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f24230318b0&gt;}) done waiting for dependent futures
2025-03-25 21:32:55,781 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f24230318b0&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f24231338e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f242307ddc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f242307de50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f24230820d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f24230318b0&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f2423082190&gt;}
2025-03-25 21:32:55,781 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f24230820d0&gt; for transfer request: 0.
2025-03-25 21:32:55,782 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:55,782 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2025-03-25 21:32:55,782 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:55,782 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:32:55,782 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f24231338e0&gt;, 'bucket': 'encrypted', 'key': 'small_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f2423031e50&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f2423085e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f24230318b0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f2423085eb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f24230318b0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f2423031370&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f24230318b0&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f2423031310&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f24230318b0&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f2423031d30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-03-25 21:32:55,783 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f24248918b0&gt;
2025-03-25 21:32:55,783 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f2424891820&gt;
2025-03-25 21:32:55,783 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f2424897700&gt;
2025-03-25 21:32:55,783 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f242310e820&gt;&gt;
2025-03-25 21:32:55,783 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f2423193730&gt;&gt;
2025-03-25 21:32:55,783 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f2424891670&gt;
2025-03-25 21:32:55,783 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f24248978b0&gt;
2025-03-25 21:32:55,783 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f242310e820&gt;&gt;
2025-03-25 21:32:55,783 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:32:55,784 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:32:55,784 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:32:55,784 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:32:55,784 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f2424891b80&gt;
2025-03-25 21:32:55,784 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f242310e7f0&gt;&gt;
2025-03-25 21:32:55,784 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f2424891280&gt;
2025-03-25 21:32:55,784 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f2424897d30&gt;
2025-03-25 21:32:55,784 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f2424894ee0&gt;
2025-03-25 21:32:55,784 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/small_file', 'url': 'http://s3g:9878/encrypted/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f2423133a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'small_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:32:55,785 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f2423fcb790&gt;
2025-03-25 21:32:55,785 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f24231339d0&gt;&gt;
2025-03-25 21:32:55,785 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f24248914c0&gt;
2025-03-25 21:32:55,785 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f2424897820&gt;
2025-03-25 21:32:55,785 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f242310e7f0&gt;&gt;
2025-03-25 21:32:55,785 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:32:55,785 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250325T213255Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-03-25 21:32:55,785 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213255Z
20250325/us-west-1/s3/aws4_request
d9b10e937ebf73ba3a3139338de1e59c52856b68405bb39cccee33030d47ca68
2025-03-25 21:32:55,785 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
9ed4a4ab999c7182e3357af58a0190729c54299c95dcb1bda6d5953b2edd175d
2025-03-25 21:32:55,786 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f2423fcb820&gt;
2025-03-25 21:32:55,786 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f2424897670&gt;
2025-03-25 21:32:55,786 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250325T213255Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=9ed4a4ab999c7182e3357af58a0190729c54299c95dcb1bda6d5953b2edd175d', 'amz-sdk-invocation-id': b'b2e3ae76-cf64-4283-8384-bc28f891939f', 'amz-sdk-request': b'attempt=1'}&gt;
2025-03-25 21:32:55,786 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-03-25 21:32:55,818 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/small_file HTTP/1.1" 200 1000000
2025-03-25 21:32:55,819 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f2424897b80&gt;
2025-03-25 21:32:55,819 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f24248979d0&gt;
2025-03-25 21:32:55,819 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:32:55 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:32:55 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'accept-ranges': 'bytes', 'etag': '"679eb910228fa8a168ba265c0e045a4d"', 'last-modified': 'Tue, 25 Mar 2025 21:32:55 GMT', 'server': 'Ozone', 'x-amz-id-2': 'aA9pkpexAzu9', 'x-amz-request-id': '20520cf6-6e76-45ac-9b78-7bc713b7cf78', 'content-length': '1000000'}
2025-03-25 21:32:55,819 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f2421feac10&gt;
2025-03-25 21:32:55,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f2424897ca0&gt;
2025-03-25 21:32:55,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f242310e760&gt;
2025-03-25 21:32:55,820 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:32:55,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f242310e820&gt;&gt;
2025-03-25 21:32:55,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f2423d22d30&gt;
2025-03-25 21:32:55,831 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2025-03-25 21:32:55,832 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-03-25 21:32:55,832 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f2423031e50&gt;, 'offset': 0}
Completed 256.0 KiB/976.6 KiB (5.0 MiB/s) with 1 file(s) remaining
2025-03-25 21:32:55,845 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
Completed 512.0 KiB/976.6 KiB (7.8 MiB/s) with 1 file(s) remaining
2025-03-25 21:32:55,846 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-03-25 21:32:55,846 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f2423031e50&gt;, 'offset': 262144}
2025-03-25 21:32:55,857 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
Completed 768.0 KiB/976.6 KiB (9.9 MiB/s) with 1 file(s) remaining
2025-03-25 21:32:55,858 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-03-25 21:32:55,858 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f2423031e50&gt;, 'offset': 524288}
2025-03-25 21:32:55,871 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
Completed 976.6 KiB/976.6 KiB (10.6 MiB/s) with 1 file(s) remaining
2025-03-25 21:32:55,871 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2025-03-25 21:32:55,872 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f2423031e50&gt;, 'offset': 786432}
2025-03-25 21:32:55,872 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) about to wait for the following futures []
2025-03-25 21:32:55,872 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) done waiting for dependent futures
2025-03-25 21:32:55,872 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f2423031e50&gt;, 'final_filename': '/tmp/small_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f242307de50&gt;}
2025-03-25 21:32:55,873 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://encrypted/small_file to ../../tmp/small_file_downloaded
2025-03-25 21:32:55,873 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250325 21:32:55.934" endtime="20250325 21:32:55.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:55.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:55.936" endtime="20250325 21:32:55.936"/>
</kw>
<status status="PASS" starttime="20250325 21:32:55.363" endtime="20250325 21:32:55.936"/>
</kw>
<msg timestamp="20250325 21:32:55.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:55.363" endtime="20250325 21:32:55.936"/>
</kw>
<msg timestamp="20250325 21:32:55.937" level="INFO">${output} = 2025-03-25 21:32:55,677 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:55,677 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:55.363" endtime="20250325 21:32:55.937"/>
</kw>
<msg timestamp="20250325 21:32:55.937" level="INFO">${result} = 2025-03-25 21:32:55,677 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:55,677 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:55.362" endtime="20250325 21:32:55.937"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)HEAD /${BUCKET}/small_file.*?Response headers.*?ETag': '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250325 21:32:55.938" endtime="20250325 21:32:55.938"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)GET /${BUCKET}/small_file.*?Response headers.*?ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250325 21:32:55.939" endtime="20250325 21:32:55.939"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/small_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:55.943" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:56.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:56.401" level="INFO">${output} = delete: s3://encrypted/small_file</msg>
<status status="PASS" starttime="20250325 21:32:55.941" endtime="20250325 21:32:56.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:56.402" level="INFO">delete: s3://encrypted/small_file</msg>
<status status="PASS" starttime="20250325 21:32:56.402" endtime="20250325 21:32:56.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:56.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:56.402" endtime="20250325 21:32:56.403"/>
</kw>
<status status="PASS" starttime="20250325 21:32:55.940" endtime="20250325 21:32:56.403"/>
</kw>
<msg timestamp="20250325 21:32:56.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:55.940" endtime="20250325 21:32:56.403"/>
</kw>
<msg timestamp="20250325 21:32:56.403" level="INFO">${output} = delete: s3://encrypted/small_file</msg>
<status status="PASS" starttime="20250325 21:32:55.940" endtime="20250325 21:32:56.403"/>
</kw>
<status status="PASS" starttime="20250325 21:32:55.939" endtime="20250325 21:32:56.403"/>
</kw>
<kw name="Execute" library="os">
<arg>rm /tmp/small_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:56.406" level="INFO">Running command 'rm /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:56.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:56.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:56.404" endtime="20250325 21:32:56.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:56.411" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:56.411" endtime="20250325 21:32:56.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:56.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:56.411" endtime="20250325 21:32:56.412"/>
</kw>
<status status="PASS" starttime="20250325 21:32:56.404" endtime="20250325 21:32:56.412"/>
</kw>
<msg timestamp="20250325 21:32:56.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:56.404" endtime="20250325 21:32:56.412"/>
</kw>
<status status="PASS" starttime="20250325 21:32:56.403" endtime="20250325 21:32:56.412"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:55.351" endtime="20250325 21:32:56.412"/>
</test>
<test id="s1-s3-s14-t19" name="Create key with custom etag metadata and expect it won't conflict with ETag response header of HEAD request" line="237">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:56.416" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:56.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:56.422" level="INFO">${output} = 679eb910228fa8a168ba265c0e045a4d</msg>
<status status="PASS" starttime="20250325 21:32:56.414" endtime="20250325 21:32:56.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:56.423" level="INFO">679eb910228fa8a168ba265c0e045a4d</msg>
<status status="PASS" starttime="20250325 21:32:56.422" endtime="20250325 21:32:56.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:56.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:56.423" endtime="20250325 21:32:56.423"/>
</kw>
<status status="PASS" starttime="20250325 21:32:56.414" endtime="20250325 21:32:56.423"/>
</kw>
<msg timestamp="20250325 21:32:56.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:56.414" endtime="20250325 21:32:56.423"/>
</kw>
<msg timestamp="20250325 21:32:56.423" level="INFO">${file_md5_checksum} = 679eb910228fa8a168ba265c0e045a4d</msg>
<status status="PASS" starttime="20250325 21:32:56.413" endtime="20250325 21:32:56.423"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<arg>cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:56.427" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://encrypted/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:56.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:56.952" level="INFO">${output} = 2025-03-25 21:32:56,727 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:56,727 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:56.425" endtime="20250325 21:32:56.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:56.953" level="INFO">2025-03-25 21:32:56,727 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:56,727 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '--metadata', 'ETag=custom-etag-value', '/tmp/small_file', 's3://encrypted/test_file']
2025-03-25 21:32:56,727 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fcd87e83820&gt;
2025-03-25 21:32:56,727 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fcd8876ec10&gt;
2025-03-25 21:32:56,728 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fcd88460e50&gt;
2025-03-25 21:32:56,729 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-03-25 21:32:56,731 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fcd87ef14c0&gt;
2025-03-25 21:32:56,731 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fcd87e35820&gt;
2025-03-25 21:32:56,731 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7fcd87f08310&gt;
2025-03-25 21:32:56,731 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,732 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fcd87e35820&gt;
2025-03-25 21:32:56,732 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7fcd87f08310&gt;
2025-03-25 21:32:56,733 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,733 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,733 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fcd8842fc70&gt;
2025-03-25 21:32:56,734 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,734 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fcd8842fc70&gt;
2025-03-25 21:32:56,734 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,734 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,734 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,734 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fcd8842fc70&gt;
2025-03-25 21:32:56,734 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,734 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,734 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,734 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,734 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,735 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,735 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,735 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,735 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,735 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,735 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,735 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,735 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,735 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,735 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,735 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fcd8842fc70&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fcd8842fc70&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fcd8842fc70&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,736 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fcd8842fc70&gt;
2025-03-25 21:32:56,737 - MainThread - awscli.argprocess - DEBUG - Parsing param --metadata as shorthand
2025-03-25 21:32:56,737 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,737 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,737 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fcd87d8e4c0&gt;
2025-03-25 21:32:56,737 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-03-25 21:32:56,737 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-03-25 21:32:56,738 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-03-25 21:32:56,760 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-03-25 21:32:56,760 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fcd899a49d0&gt;
2025-03-25 21:32:56,766 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-03-25 21:32:56,774 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-03-25 21:32:56,793 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-03-25 21:32:56,795 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-03-25 21:32:56,797 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fcd88aa7a60&gt;
2025-03-25 21:32:56,797 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fcd88aa7820&gt;
2025-03-25 21:32:56,797 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:56,800 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:56,802 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-03-25 21:32:56,802 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:56,802 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:56,803 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:56,803 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:56,803 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fcd899a49d0&gt;
2025-03-25 21:32:56,804 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fcd88aa7a60&gt;
2025-03-25 21:32:56,804 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fcd88aa7820&gt;
2025-03-25 21:32:56,804 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:56,806 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:56,807 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:56,807 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:56,807 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:56,808 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:56,808 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fcd899a49d0&gt;
2025-03-25 21:32:56,808 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fcd88aa7a60&gt;
2025-03-25 21:32:56,808 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fcd88aa7820&gt;
2025-03-25 21:32:56,809 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:56,811 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:56,812 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:56,812 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:56,812 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:56,813 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:56,813 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-03-25 21:32:56,814 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:56,814 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fcd871e8880&gt;}) about to wait for the following futures []
2025-03-25 21:32:56,814 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fcd871e8880&gt;}) done waiting for dependent futures
2025-03-25 21:32:56,814 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fcd871e8880&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fcd87295940&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fcd871dee20&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fcd871deeb0&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fcd871e5130&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fcd871e8880&gt;}
2025-03-25 21:32:56,815 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fcd871e5130&gt; for transfer request: 0.
2025-03-25 21:32:56,815 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:56,815 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) about to wait for the following futures []
2025-03-25 21:32:56,815 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) done waiting for dependent futures
2025-03-25 21:32:56,815 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fcd87295940&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fcd8717e130&gt;, 'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}
2025-03-25 21:32:56,816 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7fcd889f24c0&gt;
2025-03-25 21:32:56,816 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:56,816 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7fcd889ee8b0&gt;
2025-03-25 21:32:56,816 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7fcd889f2dc0&gt;
2025-03-25 21:32:56,816 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7fcd889ee820&gt;
2025-03-25 21:32:56,816 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fcd889f5700&gt;
2025-03-25 21:32:56,816 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fcd8726e880&gt;&gt;
2025-03-25 21:32:56,816 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fcd87275730&gt;&gt;
2025-03-25 21:32:56,816 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7fcd889ee670&gt;
2025-03-25 21:32:56,816 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fcd889f58b0&gt;
2025-03-25 21:32:56,816 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fcd8726e880&gt;&gt;
2025-03-25 21:32:56,817 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:32:56,817 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:32:56,817 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:32:56,817 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:32:56,818 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7fcd88b63790&gt;
2025-03-25 21:32:56,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7fcd889eeb80&gt;
2025-03-25 21:32:56,820 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-03-25 21:32:56,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fcd8726e850&gt;&gt;
2025-03-25 21:32:56,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7fcd889ee280&gt;
2025-03-25 21:32:56,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7fcd889f5d30&gt;
2025-03-25 21:32:56,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fcd889f2ee0&gt;
2025-03-25 21:32:56,820 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'PUT', 'headers': {'x-amz-meta-ETag': 'custom-etag-value', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'Z565ECKPqKFouiZcDgRaTQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fcd8717e130&gt;, 'auth_path': '/encrypted/test_file', 'url': 'http://s3g:9878/encrypted/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fcd87295ac0&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'test_file', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fcd8717e130&gt;, 'Metadata': {'ETag': 'custom-etag-value'}}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:32:56,821 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7fcd8812a790&gt;
2025-03-25 21:32:56,821 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fcd87295a30&gt;&gt;
2025-03-25 21:32:56,821 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7fcd889ee4c0&gt;
2025-03-25 21:32:56,821 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7fcd889f5820&gt;
2025-03-25 21:32:56,821 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fcd8726e850&gt;&gt;
2025-03-25 21:32:56,822 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:32:56,822 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/test_file

content-md5:Z565ECKPqKFouiZcDgRaTQ==
host:s3g:9878
x-amz-content-sha256:01d3adb7b50e8a04ffd78b23e89fb97b76478cb16d18ae6ab09ae852f4ceaff9
x-amz-date:20250325T213256Z
x-amz-meta-etag:custom-etag-value

content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag
01d3adb7b50e8a04ffd78b23e89fb97b76478cb16d18ae6ab09ae852f4ceaff9
2025-03-25 21:32:56,822 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213256Z
20250325/us-west-1/s3/aws4_request
2084b2ec358616de587586f1cb26db5ecaf378cb144fa730010a99bd17ad0d9a
2025-03-25 21:32:56,822 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
b3e32a7c254b614979a9d02c5c708f47ec59450f374a97ea4d037b54dce92590
2025-03-25 21:32:56,822 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7fcd8812a820&gt;
2025-03-25 21:32:56,822 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7fcd889f5670&gt;
2025-03-25 21:32:56,822 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/test_file, headers={'x-amz-meta-ETag': b'custom-etag-value', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'Z565ECKPqKFouiZcDgRaTQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250325T213256Z', 'X-Amz-Content-SHA256': b'01d3adb7b50e8a04ffd78b23e89fb97b76478cb16d18ae6ab09ae852f4ceaff9', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag, Signature=b3e32a7c254b614979a9d02c5c708f47ec59450f374a97ea4d037b54dce92590', 'amz-sdk-invocation-id': b'f4f4d3ec-7c11-43a6-b7b6-fa2633b3dd46', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2025-03-25 21:32:56,823 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-03-25 21:32:56,824 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-03-25 21:32:56,846 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (7.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (14.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (20.9 MiB/s) with 1 file(s) remaining
2025-03-25 21:32:56,901 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/test_file HTTP/1.1" 200 0
2025-03-25 21:32:56,902 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7fcd889f5b80&gt;
2025-03-25 21:32:56,902 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7fcd889f59d0&gt;
2025-03-25 21:32:56,902 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:32:56 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:32:56 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"679eb910228fa8a168ba265c0e045a4d"', 'server': 'Ozone', 'x-amz-id-2': 'saJiKPt7', 'x-amz-request-id': '328d81fd-0436-4685-a32f-6319ffa9055d', 'content-length': '0'}
2025-03-25 21:32:56,902 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-03-25 21:32:56,902 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7fcd889f5ca0&gt;
2025-03-25 21:32:56,902 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fcd8726e7c0&gt;
2025-03-25 21:32:56,902 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:32:56,902 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fcd8726e880&gt;&gt;
2025-03-25 21:32:56,902 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7fcd87e80d30&gt;
Completed 976.6 KiB/976.6 KiB (10.9 MiB/s) with 1 file(s) remaining
2025-03-25 21:32:56,903 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://encrypted/test_file           
2025-03-25 21:32:56,903 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250325 21:32:56.952" endtime="20250325 21:32:56.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:56.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:56.953" endtime="20250325 21:32:56.954"/>
</kw>
<status status="PASS" starttime="20250325 21:32:56.424" endtime="20250325 21:32:56.954"/>
</kw>
<msg timestamp="20250325 21:32:56.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:56.424" endtime="20250325 21:32:56.954"/>
</kw>
<msg timestamp="20250325 21:32:56.955" level="INFO">${output} = 2025-03-25 21:32:56,727 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:56,727 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:56.424" endtime="20250325 21:32:56.955"/>
</kw>
<status status="PASS" starttime="20250325 21:32:56.424" endtime="20250325 21:32:56.955"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/test_file /tmp/test_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:56.958" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://encrypted/test_file /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:57.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:57.546" level="INFO">${output} = 2025-03-25 21:32:57,263 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:57,263 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:56.956" endtime="20250325 21:32:57.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:57.547" level="INFO">2025-03-25 21:32:57,263 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:57,263 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://encrypted/test_file', '/tmp/test_file_downloaded']
2025-03-25 21:32:57,263 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f47f9d14820&gt;
2025-03-25 21:32:57,263 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f47fa5ffc10&gt;
2025-03-25 21:32:57,263 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f47fa2f1e50&gt;
2025-03-25 21:32:57,265 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-03-25 21:32:57,267 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f47f9d824c0&gt;
2025-03-25 21:32:57,267 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f47f9cc6820&gt;
2025-03-25 21:32:57,267 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f47f9d9b310&gt;
2025-03-25 21:32:57,267 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,267 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f47f9cc6820&gt;
2025-03-25 21:32:57,268 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f47f9d9b310&gt;
2025-03-25 21:32:57,269 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,269 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,269 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f47fa2c0c70&gt;
2025-03-25 21:32:57,269 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,269 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f47fa2c0c70&gt;
2025-03-25 21:32:57,269 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,270 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,270 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,270 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f47fa2c0c70&gt;
2025-03-25 21:32:57,270 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,270 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,270 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,270 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,270 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,270 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,270 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,270 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,270 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,271 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,271 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,271 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,271 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,271 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,271 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,271 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,271 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,271 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,271 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f47fa2c0c70&gt;
2025-03-25 21:32:57,271 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,271 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,272 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,272 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f47fa2c0c70&gt;
2025-03-25 21:32:57,272 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,272 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f47fa2c0c70&gt;
2025-03-25 21:32:57,272 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,272 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,272 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,272 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,272 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,272 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,272 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f47f9c1f4c0&gt;
2025-03-25 21:32:57,273 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-03-25 21:32:57,273 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-03-25 21:32:57,274 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-03-25 21:32:57,296 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-03-25 21:32:57,296 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f47fb8359d0&gt;
2025-03-25 21:32:57,303 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-03-25 21:32:57,310 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-03-25 21:32:57,330 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-03-25 21:32:57,333 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-03-25 21:32:57,334 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f47fa938a60&gt;
2025-03-25 21:32:57,334 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f47fa938820&gt;
2025-03-25 21:32:57,335 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:57,338 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:57,339 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-03-25 21:32:57,340 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:57,340 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:57,340 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:57,340 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:57,341 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f47fb8359d0&gt;
2025-03-25 21:32:57,341 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f47fa938a60&gt;
2025-03-25 21:32:57,341 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f47fa938820&gt;
2025-03-25 21:32:57,342 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:57,343 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:57,345 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:57,345 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:57,345 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:57,345 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:57,346 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f47fb8359d0&gt;
2025-03-25 21:32:57,346 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f47fa938a60&gt;
2025-03-25 21:32:57,346 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f47fa938820&gt;
2025-03-25 21:32:57,347 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:57,349 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:57,350 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:57,350 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:57,351 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:57,351 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:57,351 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-03-25 21:32:57,352 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f47fa87f8b0&gt;
2025-03-25 21:32:57,352 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f47fa87f820&gt;
2025-03-25 21:32:57,352 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f47fa886700&gt;
2025-03-25 21:32:57,352 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f47f906ca30&gt;&gt;
2025-03-25 21:32:57,352 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f47f90fd940&gt;&gt;
2025-03-25 21:32:57,352 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f47fa87f670&gt;
2025-03-25 21:32:57,352 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f47fa8868b0&gt;
2025-03-25 21:32:57,352 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f47f906ca30&gt;&gt;
2025-03-25 21:32:57,352 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:32:57,353 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:32:57,353 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:32:57,353 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:32:57,353 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f47fa87fb80&gt;
2025-03-25 21:32:57,353 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f47f906ca00&gt;&gt;
2025-03-25 21:32:57,353 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f47fa87f280&gt;
2025-03-25 21:32:57,353 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7f47fa886d30&gt;
2025-03-25 21:32:57,353 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f47fa883ee0&gt;
2025-03-25 21:32:57,353 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/test_file', 'url': 'http://s3g:9878/encrypted/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f47f909aca0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'test_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:32:57,354 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f47f909ac10&gt;&gt;
2025-03-25 21:32:57,354 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f47fa87f4c0&gt;
2025-03-25 21:32:57,354 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f47fa886820&gt;
2025-03-25 21:32:57,354 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f47f906ca00&gt;&gt;
2025-03-25 21:32:57,354 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:32:57,354 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/encrypted/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250325T213257Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-03-25 21:32:57,354 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213257Z
20250325/us-west-1/s3/aws4_request
291d6532637b1da90a8bf0df56a04ef9d1d009d259e001e3e5a688e60c8e8cc6
2025-03-25 21:32:57,355 - MainThread - botocore.auth - DEBUG - Signature:
bb3b0080088fe5e0c73659543639f6302aa8fd330c14e45248baef0f08e519b6
2025-03-25 21:32:57,355 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f47fa886670&gt;
2025-03-25 21:32:57,355 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/encrypted/test_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250325T213257Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=bb3b0080088fe5e0c73659543639f6302aa8fd330c14e45248baef0f08e519b6', 'amz-sdk-invocation-id': b'6a505467-fb8a-4ed9-b1c1-a80e6996bc24', 'amz-sdk-request': b'attempt=1'}&gt;
2025-03-25 21:32:57,355 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-03-25 21:32:57,364 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /encrypted/test_file HTTP/1.1" 200 0
2025-03-25 21:32:57,364 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7f47fa886b80&gt;
2025-03-25 21:32:57,364 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7f47fa8869d0&gt;
2025-03-25 21:32:57,364 - MainThread - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:32:57 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:32:57 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"679eb910228fa8a168ba265c0e045a4d"', 'last-modified': 'Tue, 25 Mar 2025 21:32:56 GMT', 'x-amz-meta-etag': 'custom-etag-value', 'server': 'Ozone', 'x-amz-id-2': 'jDCNoBw0LmjK', 'x-amz-request-id': '114f2722-4523-4593-8899-fcaf70d9e7b4', 'content-length': '1000000'}
2025-03-25 21:32:57,364 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-03-25 21:32:57,365 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7f47fa886ca0&gt;
2025-03-25 21:32:57,365 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f47f906c970&gt;
2025-03-25 21:32:57,365 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:32:57,365 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f47f906ca30&gt;&gt;
2025-03-25 21:32:57,365 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f47f9d11d30&gt;
2025-03-25 21:32:57,366 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:57,366 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f47f9020820&gt;}) about to wait for the following futures []
2025-03-25 21:32:57,366 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f47f9020820&gt;}) done waiting for dependent futures
2025-03-25 21:32:57,366 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f47f9020820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f47f91228e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f47f906cdc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f47f906ce50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f47f90710d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f47f9020820&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f47f9071190&gt;}
2025-03-25 21:32:57,367 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f47f90710d0&gt; for transfer request: 0.
2025-03-25 21:32:57,367 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:57,367 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) about to wait for the following futures []
2025-03-25 21:32:57,367 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:32:57,367 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f47f91228e0&gt;, 'bucket': 'encrypted', 'key': 'test_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f47f9020e20&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f47f9074e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f47f9020820&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f47f9074eb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f47f9020820&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f47f9020340&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f47f9020820&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f47f90202e0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f47f9020820&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f47f9020d00&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-03-25 21:32:57,367 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f47fa87f8b0&gt;
2025-03-25 21:32:57,367 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f47fa87f820&gt;
2025-03-25 21:32:57,367 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f47fa886700&gt;
2025-03-25 21:32:57,367 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f47f90fd820&gt;&gt;
2025-03-25 21:32:57,367 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f47f9182730&gt;&gt;
2025-03-25 21:32:57,368 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f47fa87f670&gt;
2025-03-25 21:32:57,368 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f47fa8868b0&gt;
2025-03-25 21:32:57,368 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f47f90fd820&gt;&gt;
2025-03-25 21:32:57,368 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:32:57,368 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:32:57,369 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:32:57,369 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:32:57,369 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:57,369 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f47fa87fb80&gt;
2025-03-25 21:32:57,369 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f47f90fd7f0&gt;&gt;
2025-03-25 21:32:57,369 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f47fa87f280&gt;
2025-03-25 21:32:57,369 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f47fa886d30&gt;
2025-03-25 21:32:57,369 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f47fa883ee0&gt;
2025-03-25 21:32:57,369 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/test_file', 'url': 'http://s3g:9878/encrypted/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f47f9122a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'test_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:32:57,370 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f47f9fbb790&gt;
2025-03-25 21:32:57,370 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f47f91229d0&gt;&gt;
2025-03-25 21:32:57,370 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f47fa87f4c0&gt;
2025-03-25 21:32:57,370 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f47fa886820&gt;
2025-03-25 21:32:57,370 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f47f90fd7f0&gt;&gt;
2025-03-25 21:32:57,370 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:32:57,370 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250325T213257Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-03-25 21:32:57,370 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213257Z
20250325/us-west-1/s3/aws4_request
93ca62b8b2d16b5c8ea3212b6daa54cb0ae66545b99890b8fd673c6d5ed66c69
2025-03-25 21:32:57,370 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
213242d8fdc228bd87ab08c7c01142571d325902ef38f17ffc0cca97d1a3e3ad
2025-03-25 21:32:57,370 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f47f9fbb820&gt;
2025-03-25 21:32:57,370 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f47fa886670&gt;
2025-03-25 21:32:57,370 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/test_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250325T213257Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=213242d8fdc228bd87ab08c7c01142571d325902ef38f17ffc0cca97d1a3e3ad', 'amz-sdk-invocation-id': b'7fca1721-a6d4-43d4-a177-9a9323b2fe02', 'amz-sdk-request': b'attempt=1'}&gt;
2025-03-25 21:32:57,371 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-03-25 21:32:57,413 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/test_file HTTP/1.1" 200 1000000
2025-03-25 21:32:57,413 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f47fa886b80&gt;
2025-03-25 21:32:57,413 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f47fa8869d0&gt;
2025-03-25 21:32:57,414 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:32:57 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:32:57 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'accept-ranges': 'bytes', 'etag': '"679eb910228fa8a168ba265c0e045a4d"', 'last-modified': 'Tue, 25 Mar 2025 21:32:56 GMT', 'server': 'Ozone', 'x-amz-id-2': 'UvLtA7mR', 'x-amz-request-id': 'a3f13bad-b7c8-44f1-8d3d-3f3fb6449261', 'content-length': '1000000'}
2025-03-25 21:32:57,414 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f47f7fe9be0&gt;
2025-03-25 21:32:57,417 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f47fa886ca0&gt;
2025-03-25 21:32:57,417 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f47f90fd760&gt;
2025-03-25 21:32:57,417 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:32:57,417 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f47f90fd820&gt;&gt;
2025-03-25 21:32:57,417 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f47f9d11d30&gt;
2025-03-25 21:32:57,432 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2025-03-25 21:32:57,433 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-03-25 21:32:57,433 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f47f9020e20&gt;, 'offset': 0}
Completed 256.0 KiB/976.6 KiB (3.8 MiB/s) with 1 file(s) remaining
2025-03-25 21:32:57,454 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
Completed 512.0 KiB/976.6 KiB (5.8 MiB/s) with 1 file(s) remaining
2025-03-25 21:32:57,454 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-03-25 21:32:57,454 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f47f9020e20&gt;, 'offset': 262144}
2025-03-25 21:32:57,474 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2025-03-25 21:32:57,474 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-03-25 21:32:57,474 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f47f9020e20&gt;, 'offset': 524288}
Completed 768.0 KiB/976.6 KiB (7.0 MiB/s) with 1 file(s) remaining
2025-03-25 21:32:57,487 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2025-03-25 21:32:57,488 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
Completed 976.6 KiB/976.6 KiB (7.9 MiB/s) with 1 file(s) remaining
2025-03-25 21:32:57,488 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f47f9020e20&gt;, 'offset': 786432}
2025-03-25 21:32:57,488 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) about to wait for the following futures []
2025-03-25 21:32:57,488 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) done waiting for dependent futures
2025-03-25 21:32:57,488 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f47f9020e20&gt;, 'final_filename': '/tmp/test_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f47f906ce50&gt;}
2025-03-25 21:32:57,489 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://encrypted/test_file to ../../tmp/test_file_downloaded
2025-03-25 21:32:57,489 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250325 21:32:57.546" endtime="20250325 21:32:57.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:57.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:57.548" endtime="20250325 21:32:57.548"/>
</kw>
<status status="PASS" starttime="20250325 21:32:56.956" endtime="20250325 21:32:57.548"/>
</kw>
<msg timestamp="20250325 21:32:57.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:56.956" endtime="20250325 21:32:57.548"/>
</kw>
<msg timestamp="20250325 21:32:57.549" level="INFO">${output} = 2025-03-25 21:32:57,263 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:57,263 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:56.955" endtime="20250325 21:32:57.549"/>
</kw>
<msg timestamp="20250325 21:32:57.549" level="INFO">${result} = 2025-03-25 21:32:57,263 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:57,263 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:56.955" endtime="20250325 21:32:57.549"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${ETag}</var>
<var>${etagCustom}</var>
<arg>${result}</arg>
<arg>HEAD /${BUCKET}/test_file\ .*?Response headers.*?ETag':\ '"(.*?)"'.*?x-amz-meta-etag':\ '(.*?)'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250325 21:32:57.551" level="INFO">${match} = HEAD /encrypted/test_file HTTP/1.1" 200 0
2025-03-25 21:32:57,364 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7f47fa886b8...</msg>
<msg timestamp="20250325 21:32:57.551" level="INFO">${ETag} = 679eb910228fa8a168ba265c0e045a4d</msg>
<msg timestamp="20250325 21:32:57.551" level="INFO">${etagCustom} = custom-etag-value</msg>
<status status="PASS" starttime="20250325 21:32:57.550" endtime="20250325 21:32:57.551"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${file_md5_checksum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:32:57.551" endtime="20250325 21:32:57.551"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etagCustom}</arg>
<arg>custom-etag-value</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:32:57.551" endtime="20250325 21:32:57.551"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${etagCustom}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:32:57.552" endtime="20250325 21:32:57.552"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:57.556" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:57.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:57.999" level="INFO">${output} = delete: s3://encrypted/test_file</msg>
<status status="PASS" starttime="20250325 21:32:57.553" endtime="20250325 21:32:57.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:58.000" level="INFO">delete: s3://encrypted/test_file</msg>
<status status="PASS" starttime="20250325 21:32:57.999" endtime="20250325 21:32:58.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:58.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:58.000" endtime="20250325 21:32:58.000"/>
</kw>
<status status="PASS" starttime="20250325 21:32:57.553" endtime="20250325 21:32:58.000"/>
</kw>
<msg timestamp="20250325 21:32:58.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:57.553" endtime="20250325 21:32:58.000"/>
</kw>
<msg timestamp="20250325 21:32:58.001" level="INFO">${output} = delete: s3://encrypted/test_file</msg>
<status status="PASS" starttime="20250325 21:32:57.552" endtime="20250325 21:32:58.001"/>
</kw>
<status status="PASS" starttime="20250325 21:32:57.552" endtime="20250325 21:32:58.001"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:58.004" level="INFO">Running command 'rm -rf /tmp/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:58.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:58.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:58.002" endtime="20250325 21:32:58.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:58.008" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:58.008" endtime="20250325 21:32:58.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:58.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:58.008" endtime="20250325 21:32:58.009"/>
</kw>
<status status="PASS" starttime="20250325 21:32:58.001" endtime="20250325 21:32:58.009"/>
</kw>
<msg timestamp="20250325 21:32:58.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:58.001" endtime="20250325 21:32:58.009"/>
</kw>
<status status="PASS" starttime="20250325 21:32:58.001" endtime="20250325 21:32:58.009"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/test_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:58.012" level="INFO">Running command 'rm -rf /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:58.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:58.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:58.010" endtime="20250325 21:32:58.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:58.016" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:58.016" endtime="20250325 21:32:58.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:58.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:58.016" endtime="20250325 21:32:58.017"/>
</kw>
<status status="PASS" starttime="20250325 21:32:58.010" endtime="20250325 21:32:58.017"/>
</kw>
<msg timestamp="20250325 21:32:58.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:58.010" endtime="20250325 21:32:58.017"/>
</kw>
<status status="PASS" starttime="20250325 21:32:58.009" endtime="20250325 21:32:58.017"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:56.413" endtime="20250325 21:32:58.017"/>
</test>
<test id="s1-s3-s14-t20" name="Create&amp;Download big file by multipart upload and expect ETag in a file download response" line="250">
<kw name="Execute" library="os">
<arg>head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:58.021" level="INFO">Running command 'head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20250325 21:32:58.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:58.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:32:58.019" endtime="20250325 21:32:58.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:58.064" level="INFO"/>
<status status="PASS" starttime="20250325 21:32:58.064" endtime="20250325 21:32:58.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:58.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:58.065" endtime="20250325 21:32:58.065"/>
</kw>
<status status="PASS" starttime="20250325 21:32:58.019" endtime="20250325 21:32:58.065"/>
</kw>
<msg timestamp="20250325 21:32:58.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:58.018" endtime="20250325 21:32:58.065"/>
</kw>
<status status="PASS" starttime="20250325 21:32:58.018" endtime="20250325 21:32:58.065"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:58.069" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:32:58.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:32:58.990" level="INFO">${output} = 2025-03-25 21:32:58,368 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:58,368 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:58.067" endtime="20250325 21:32:58.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:32:58.992" level="INFO">2025-03-25 21:32:58,368 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:58,368 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://encrypted/']
2025-03-25 21:32:58,368 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f10086d3820&gt;
2025-03-25 21:32:58,368 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f1008fbec10&gt;
2025-03-25 21:32:58,368 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f1008cb0e50&gt;
2025-03-25 21:32:58,370 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-03-25 21:32:58,372 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f10087414c0&gt;
2025-03-25 21:32:58,372 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f1008685820&gt;
2025-03-25 21:32:58,372 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f1008758310&gt;
2025-03-25 21:32:58,372 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,373 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f1008685820&gt;
2025-03-25 21:32:58,373 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f1008758310&gt;
2025-03-25 21:32:58,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,374 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1008c7fc70&gt;
2025-03-25 21:32:58,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,375 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1008c7fc70&gt;
2025-03-25 21:32:58,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,375 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1008c7fc70&gt;
2025-03-25 21:32:58,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,377 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1008c7fc70&gt;
2025-03-25 21:32:58,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,377 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1008c7fc70&gt;
2025-03-25 21:32:58,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,377 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1008c7fc70&gt;
2025-03-25 21:32:58,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,378 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,378 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,378 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,378 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,378 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10085de4c0&gt;
2025-03-25 21:32:58,378 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-03-25 21:32:58,378 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-03-25 21:32:58,379 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-03-25 21:32:58,402 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-03-25 21:32:58,402 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f100a1f59d0&gt;
2025-03-25 21:32:58,408 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-03-25 21:32:58,416 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-03-25 21:32:58,435 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-03-25 21:32:58,438 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-03-25 21:32:58,439 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f10092f7a60&gt;
2025-03-25 21:32:58,439 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f10092f7820&gt;
2025-03-25 21:32:58,440 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:58,443 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:58,444 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-03-25 21:32:58,445 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:58,445 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:58,445 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:58,445 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:58,446 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f100a1f59d0&gt;
2025-03-25 21:32:58,446 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f10092f7a60&gt;
2025-03-25 21:32:58,446 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f10092f7820&gt;
2025-03-25 21:32:58,446 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:58,448 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:58,450 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:58,450 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:58,450 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:58,450 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:58,450 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f100a1f59d0&gt;
2025-03-25 21:32:58,451 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f10092f7a60&gt;
2025-03-25 21:32:58,451 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f10092f7820&gt;
2025-03-25 21:32:58,451 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:58,453 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:58,455 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:58,455 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:58,455 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:58,455 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:58,456 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-03-25 21:32:58,457 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:58,457 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1007a34820&gt;}) about to wait for the following futures []
2025-03-25 21:32:58,457 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1007a34820&gt;}) done waiting for dependent futures
2025-03-25 21:32:58,457 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1007a34820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f1007ae28e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f1007a2bdc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f1007a2be50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f1007a310d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1007a34820&gt;}
2025-03-25 21:32:58,458 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1007a310d0&gt; for transfer request: 0.
2025-03-25 21:32:58,458 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:58,458 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2025-03-25 21:32:58,458 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:32:58,458 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f1007ae28e0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}
2025-03-25 21:32:58,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7f10092424c0&gt;
2025-03-25 21:32:58,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7f100923f8b0&gt;
2025-03-25 21:32:58,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f100923f820&gt;
2025-03-25 21:32:58,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f1009245700&gt;
2025-03-25 21:32:58,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f1007abc820&gt;&gt;
2025-03-25 21:32:58,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f1007b416d0&gt;&gt;
2025-03-25 21:32:58,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f100923f670&gt;
2025-03-25 21:32:58,459 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f10092458b0&gt;
2025-03-25 21:32:58,459 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f1007abc820&gt;&gt;
2025-03-25 21:32:58,459 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:32:58,460 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:32:58,460 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:32:58,460 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:32:58,460 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7f100923fb80&gt;
2025-03-25 21:32:58,460 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f1007abc7f0&gt;&gt;
2025-03-25 21:32:58,460 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f100923f280&gt;
2025-03-25 21:32:58,460 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f1009245d30&gt;
2025-03-25 21:32:58,460 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1009242ee0&gt;
2025-03-25 21:32:58,460 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1007ae2a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:32:58,461 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f100897a790&gt;
2025-03-25 21:32:58,461 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f1007ae29d0&gt;&gt;
2025-03-25 21:32:58,461 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f100923f4c0&gt;
2025-03-25 21:32:58,461 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f1009245820&gt;
2025-03-25 21:32:58,461 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f1007abc7f0&gt;&gt;
2025-03-25 21:32:58,461 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:32:58,461 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1007a310d0&gt; for transfer request: 0.
2025-03-25 21:32:58,461 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/encrypted/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250325T213258Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-03-25 21:32:58,461 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:58,462 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213258Z
20250325/us-west-1/s3/aws4_request
daed1a5cbd317e5cd0274bd128cf8614ae094b34dae1a4dc21a6d21deca70241
2025-03-25 21:32:58,462 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
b2a42121fcdb563d2f2f503b10a2be027683f68eca3d0877ccaab2a47a2ae403
2025-03-25 21:32:58,462 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7f100897a820&gt;
2025-03-25 21:32:58,462 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f1009245670&gt;
2025-03-25 21:32:58,462 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/encrypted/big_file?uploads, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250325T213258Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=b2a42121fcdb563d2f2f503b10a2be027683f68eca3d0877ccaab2a47a2ae403', 'amz-sdk-invocation-id': b'73b2f33d-a80e-488c-a48f-55ca3893578d', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2025-03-25 21:32:58,463 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-03-25 21:32:58,463 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f10069c7370&gt;]
2025-03-25 21:32:58,463 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f10069c7370&gt;
2025-03-25 21:32:58,463 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1007a310d0&gt; for transfer request: 0.
2025-03-25 21:32:58,463 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:58,463 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f10069c7370&gt;]
2025-03-25 21:32:58,463 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f10069c7370&gt;
2025-03-25 21:32:58,464 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1007a310d0&gt; for transfer request: 0.
2025-03-25 21:32:58,464 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:58,464 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f10069c7370&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f10069f8610&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f100698a940&gt;]
2025-03-25 21:32:58,464 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f10069c7370&gt;
2025-03-25 21:32:58,464 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:58,476 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /encrypted/big_file?uploads HTTP/1.1" 200 287
2025-03-25 21:32:58,477 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f1009245b80&gt;
2025-03-25 21:32:58,477 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f10092459d0&gt;
2025-03-25 21:32:58,477 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:32:58 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:32:58 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'kZMPNNoYHTWHY', 'x-amz-request-id': 'dc4ddeb4-48dc-47fc-8050-40a3016cd23c', 'content-length': '287'}
2025-03-25 21:32:58,477 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;encrypted&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2025-03-25 21:32:58,477 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;function _update_status_code at 0x7f1009245ca0&gt;
2025-03-25 21:32:58,477 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f1007abc760&gt;
2025-03-25 21:32:58,477 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:32:58,477 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f1007abc820&gt;&gt;
2025-03-25 21:32:58,477 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f10086d0d30&gt;
2025-03-25 21:32:58,478 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:58,478 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:32:58,478 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f1007ae28e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f100698a4f0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112'}
2025-03-25 21:32:58,478 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f100923f8b0&gt;
2025-03-25 21:32:58,478 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f1009242dc0&gt;
2025-03-25 21:32:58,478 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f100923f820&gt;
2025-03-25 21:32:58,478 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f1009245700&gt;
2025-03-25 21:32:58,478 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f1007abc820&gt;&gt;
2025-03-25 21:32:58,478 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f1007b416d0&gt;&gt;
2025-03-25 21:32:58,478 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f100923f670&gt;
2025-03-25 21:32:58,478 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f10092458b0&gt;
2025-03-25 21:32:58,478 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f1007abc820&gt;&gt;
2025-03-25 21:32:58,478 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:32:58,479 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:32:58,479 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:32:58,479 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:32:58,479 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f10093b38b0&gt;
2025-03-25 21:32:58,479 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f10069f8610&gt;
2025-03-25 21:32:58,479 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:32:58,479 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f1007ae28e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f10069f8190&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112'}
2025-03-25 21:32:58,479 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f100923f8b0&gt;
2025-03-25 21:32:58,479 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f1009242dc0&gt;
2025-03-25 21:32:58,479 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f100923f820&gt;
2025-03-25 21:32:58,480 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f1009245700&gt;
2025-03-25 21:32:58,480 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f1007abc820&gt;&gt;
2025-03-25 21:32:58,480 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f1007b416d0&gt;&gt;
2025-03-25 21:32:58,480 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f100923f670&gt;
2025-03-25 21:32:58,480 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f10092458b0&gt;
2025-03-25 21:32:58,480 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f1007abc820&gt;&gt;
2025-03-25 21:32:58,480 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:32:58,480 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:32:58,480 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:32:58,480 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:32:58,480 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f10093b38b0&gt;
2025-03-25 21:32:58,483 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f100923fb80&gt;
2025-03-25 21:32:58,483 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-03-25 21:32:58,483 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f1007abc7f0&gt;&gt;
2025-03-25 21:32:58,483 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f100923f280&gt;
2025-03-25 21:32:58,483 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f1009245d30&gt;
2025-03-25 21:32:58,483 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1009242ee0&gt;
2025-03-25 21:32:58,483 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'w+A048oRaM6dB0wF9tJ4KA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f100698a4f0&gt;, 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1007ae2a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'UploadId': '0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112', 'PartNumber': 2, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f100698a4f0&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:32:58,484 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f100897a790&gt;
2025-03-25 21:32:58,484 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f1007ae29d0&gt;&gt;
2025-03-25 21:32:58,484 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f100923f4c0&gt;
2025-03-25 21:32:58,484 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f1009245820&gt;
2025-03-25 21:32:58,484 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f1007abc7f0&gt;&gt;
2025-03-25 21:32:58,486 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:32:58,486 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/big_file
partNumber=2&amp;uploadId=0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112
content-md5:w+A048oRaM6dB0wF9tJ4KA==
host:s3g:9878
x-amz-content-sha256:1dd9925f91c7049cc9c308a130511a058b9b859d33d6a7ea0813756ca75cc35c
x-amz-date:20250325T213258Z

content-md5;host;x-amz-content-sha256;x-amz-date
1dd9925f91c7049cc9c308a130511a058b9b859d33d6a7ea0813756ca75cc35c
2025-03-25 21:32:58,486 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213258Z
20250325/us-west-1/s3/aws4_request
2406db726f3f8878b4f4b359d1216155bb4fbd0bacad2a69356d83d72cc93f5e
2025-03-25 21:32:58,486 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
6726166c78a40b076c08569bf676eb4265a35e78901b86d4b04d257eda302b46
2025-03-25 21:32:58,486 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f100897a820&gt;
2025-03-25 21:32:58,486 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f1009245670&gt;
2025-03-25 21:32:58,486 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/big_file?uploadId=0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'w+A048oRaM6dB0wF9tJ4KA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250325T213258Z', 'X-Amz-Content-SHA256': b'1dd9925f91c7049cc9c308a130511a058b9b859d33d6a7ea0813756ca75cc35c', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=6726166c78a40b076c08569bf676eb4265a35e78901b86d4b04d257eda302b46', 'amz-sdk-invocation-id': b'722cd1cf-7f06-4989-bc57-4b102ccc9d47', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2025-03-25 21:32:58,487 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-03-25 21:32:58,497 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f100923fb80&gt;
2025-03-25 21:32:58,497 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-03-25 21:32:58,497 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f1007abc7f0&gt;&gt;
2025-03-25 21:32:58,497 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f100923f280&gt;
2025-03-25 21:32:58,497 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f1009245d30&gt;
2025-03-25 21:32:58,497 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1009242ee0&gt;
2025-03-25 21:32:58,497 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'kzPwQjx5Fv5zIanfH1/oYA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f10069f8190&gt;, 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1007ae2a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'UploadId': '0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112', 'PartNumber': 1, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f10069f8190&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:32:58,498 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f100897a790&gt;
2025-03-25 21:32:58,498 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f1007ae29d0&gt;&gt;
2025-03-25 21:32:58,498 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f100923f4c0&gt;
2025-03-25 21:32:58,498 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f1009245820&gt;
2025-03-25 21:32:58,498 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f1007abc7f0&gt;&gt;
2025-03-25 21:32:58,505 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:32:58,505 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/big_file
partNumber=1&amp;uploadId=0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112
content-md5:kzPwQjx5Fv5zIanfH1/oYA==
host:s3g:9878
x-amz-content-sha256:a98982cd6cb05f7cde269f82d63241dd137726a0b5dac9e70e11c51c1b05f308
x-amz-date:20250325T213258Z

content-md5;host;x-amz-content-sha256;x-amz-date
a98982cd6cb05f7cde269f82d63241dd137726a0b5dac9e70e11c51c1b05f308
2025-03-25 21:32:58,506 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213258Z
20250325/us-west-1/s3/aws4_request
c41574723e604d272644ad502fad44ab51dd8f24ffa2edb194161c368832370b
2025-03-25 21:32:58,506 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
dfa3f59e60315bd4c3ca30d700bf637e0d992c39eb78ad1cfffc2b4abbaa4218
2025-03-25 21:32:58,506 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f100897a820&gt;
2025-03-25 21:32:58,506 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f1009245670&gt;
2025-03-25 21:32:58,506 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/big_file?uploadId=0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'kzPwQjx5Fv5zIanfH1/oYA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250325T213258Z', 'X-Amz-Content-SHA256': b'a98982cd6cb05f7cde269f82d63241dd137726a0b5dac9e70e11c51c1b05f308', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=dfa3f59e60315bd4c3ca30d700bf637e0d992c39eb78ad1cfffc2b4abbaa4218', 'amz-sdk-invocation-id': b'f4a3b4c4-4505-46e2-b40d-a95bb61e6e06', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2025-03-25 21:32:58,506 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-03-25 21:32:58,507 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-03-25 21:32:58,510 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/9.5 MiB (4.4 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (5.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (8.2 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (10.4 MiB/s) with 1 file(s) remaining 
Completed 1.2 MiB/9.5 MiB (12.8 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/9.5 MiB (15.1 MiB/s) with 1 file(s) remaining 
2025-03-25 21:32:58,574 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (14.9 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/9.5 MiB (16.6 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/9.5 MiB (18.5 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/9.5 MiB (19.9 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/9.5 MiB (21.4 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/9.5 MiB (22.4 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/9.5 MiB (23.6 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/9.5 MiB (24.8 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/9.5 MiB (24.8 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/9.5 MiB (25.7 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/9.5 MiB (26.9 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/9.5 MiB (27.9 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/9.5 MiB (28.8 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/9.5 MiB (29.6 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/9.5 MiB (30.5 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/9.5 MiB (31.6 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/9.5 MiB (32.6 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/9.5 MiB (33.9 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/9.5 MiB (34.8 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/9.5 MiB (35.3 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/9.5 MiB (35.9 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/9.5 MiB (36.9 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/9.5 MiB (37.7 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/9.5 MiB (38.8 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/9.5 MiB (40.0 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/9.5 MiB (41.2 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/9.5 MiB (42.4 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/9.5 MiB (43.1 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/9.5 MiB (43.8 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/9.5 MiB (44.6 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/9.5 MiB (45.6 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/9.5 MiB (46.7 MiB/s) with 1 file(s) remaining 
2025-03-25 21:32:58,690 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/big_file?uploadId=0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112&amp;partNumber=2 HTTP/1.1" 200 0
2025-03-25 21:32:58,690 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f1009245b80&gt;
2025-03-25 21:32:58,690 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f10092459d0&gt;
2025-03-25 21:32:58,690 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:32:58 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:32:58 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': 'c3e034e3ca1168ce9d074c05f6d27828', 'server': 'Ozone', 'x-amz-id-2': 'uth78mX41Dn4', 'x-amz-request-id': 'b58dcfa3-dcef-4691-95a8-6280af3c8a3c', 'content-length': '0'}
2025-03-25 21:32:58,690 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2025-03-25 21:32:58,691 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f1009245ca0&gt;
2025-03-25 21:32:58,691 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f1007abc760&gt;
2025-03-25 21:32:58,691 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:32:58,691 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f1007abc820&gt;&gt;
2025-03-25 21:32:58,691 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f10086d0d30&gt;
2025-03-25 21:32:58,691 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 9.5 MiB/9.5 MiB (40.8 MiB/s) with 1 file(s) remaining 
2025-03-25 21:32:58,878 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/big_file?uploadId=0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112&amp;partNumber=1 HTTP/1.1" 200 0
2025-03-25 21:32:58,878 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f1009245b80&gt;
2025-03-25 21:32:58,879 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f10092459d0&gt;
2025-03-25 21:32:58,879 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:32:58 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:32:58 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '9333f0423c7916fe7321a9df1f5fe860', 'server': 'Ozone', 'x-amz-id-2': 'n0fCEXE5T3e', 'x-amz-request-id': '36582839-8379-4cc0-aa19-1fa95b9c3d47', 'content-length': '0'}
2025-03-25 21:32:58,879 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2025-03-25 21:32:58,879 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f1009245ca0&gt;
2025-03-25 21:32:58,879 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f1007abc760&gt;
2025-03-25 21:32:58,879 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:32:58,879 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f1007abc820&gt;&gt;
2025-03-25 21:32:58,879 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f10086d0d30&gt;
2025-03-25 21:32:58,879 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:58,880 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f100698a940&gt;
2025-03-25 21:32:58,880 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:32:58,880 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f1007ae28e0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}, 'upload_id': '0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112', 'parts': [{'ETag': '9333f0423c7916fe7321a9df1f5fe860', 'PartNumber': 1}, {'ETag': 'c3e034e3ca1168ce9d074c05f6d27828', 'PartNumber': 2}]}
2025-03-25 21:32:58,880 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function sse_md5 at 0x7f100923f8b0&gt;
2025-03-25 21:32:58,880 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f100923f820&gt;
2025-03-25 21:32:58,880 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f1009245700&gt;
2025-03-25 21:32:58,880 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f1007abc820&gt;&gt;
2025-03-25 21:32:58,880 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f1007b416d0&gt;&gt;
2025-03-25 21:32:58,880 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f100923f670&gt;
2025-03-25 21:32:58,881 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f10092458b0&gt;
2025-03-25 21:32:58,881 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f1007abc820&gt;&gt;
2025-03-25 21:32:58,881 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:32:58,881 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:32:58,881 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:32:58,881 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:32:58,882 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7f100923fb80&gt;
2025-03-25 21:32:58,882 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f1007abc7f0&gt;&gt;
2025-03-25 21:32:58,882 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f100923f280&gt;
2025-03-25 21:32:58,882 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f1009245d30&gt;
2025-03-25 21:32:58,882 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1009242ee0&gt;
2025-03-25 21:32:58,882 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;9333f0423c7916fe7321a9df1f5fe860&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;c3e034e3ca1168ce9d074c05f6d27828&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1007ae2a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'UploadId': '0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112', 'MultipartUpload': {'Parts': [{'ETag': '9333f0423c7916fe7321a9df1f5fe860', 'PartNumber': 1}, {'ETag': 'c3e034e3ca1168ce9d074c05f6d27828', 'PartNumber': 2}]}}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:32:58,882 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f100897a790&gt;
2025-03-25 21:32:58,883 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f1007ae29d0&gt;&gt;
2025-03-25 21:32:58,883 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f100923f4c0&gt;
2025-03-25 21:32:58,883 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f1009245820&gt;
2025-03-25 21:32:58,883 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f1007abc7f0&gt;&gt;
2025-03-25 21:32:58,883 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:32:58,883 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/encrypted/big_file
uploadId=0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112
host:s3g:9878
x-amz-content-sha256:608cb0a2982157f350f3b2992da3181371eb9e4a69a75bee8c8c4f6edb964d9a
x-amz-date:20250325T213258Z

host;x-amz-content-sha256;x-amz-date
608cb0a2982157f350f3b2992da3181371eb9e4a69a75bee8c8c4f6edb964d9a
2025-03-25 21:32:58,883 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213258Z
20250325/us-west-1/s3/aws4_request
4d42331cf21fd1a9fa0f0fb8c177feff7c06271d5b4180fdf8d77e1123a7aa50
2025-03-25 21:32:58,883 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
662f0124655a56a428cafe1111b664d2c15f090f952d271d79e50ff87604a1ff
2025-03-25 21:32:58,884 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7f100897a820&gt;
2025-03-25 21:32:58,884 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f1009245670&gt;
2025-03-25 21:32:58,884 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/encrypted/big_file?uploadId=0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250325T213258Z', 'X-Amz-Content-SHA256': b'608cb0a2982157f350f3b2992da3181371eb9e4a69a75bee8c8c4f6edb964d9a', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=662f0124655a56a428cafe1111b664d2c15f090f952d271d79e50ff87604a1ff', 'amz-sdk-invocation-id': b'ae856b84-8c74-411a-a2f6-70383d605550', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2025-03-25 21:32:58,904 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /encrypted/big_file?uploadId=0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112 HTTP/1.1" 200 290
2025-03-25 21:32:58,905 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f1009245b80&gt;
2025-03-25 21:32:58,905 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f10092459d0&gt;
2025-03-25 21:32:58,905 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:32:58 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:32:58 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '6ET1lJBfsp5', 'x-amz-request-id': '2ee20ac4-6545-4418-9ec9-0cb3c2f7a220', 'content-length': '290'}
2025-03-25 21:32:58,905 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;encrypted&lt;/Location&gt;&lt;Bucket&gt;encrypted&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"2e87253020255e98fc0a7735352f7411-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2025-03-25 21:32:58,906 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function _update_status_code at 0x7f1009245ca0&gt;
2025-03-25 21:32:58,906 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f1007abc760&gt;
2025-03-25 21:32:58,906 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:32:58,906 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f1007abc820&gt;&gt;
2025-03-25 21:32:58,906 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f10086d0d30&gt;
2025-03-25 21:32:58,906 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://encrypted/big_file           
2025-03-25 21:32:58,907 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250325 21:32:58.991" endtime="20250325 21:32:58.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:32:58.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:32:58.993" endtime="20250325 21:32:58.993"/>
</kw>
<status status="PASS" starttime="20250325 21:32:58.066" endtime="20250325 21:32:58.994"/>
</kw>
<msg timestamp="20250325 21:32:58.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:58.066" endtime="20250325 21:32:58.994"/>
</kw>
<msg timestamp="20250325 21:32:58.996" level="INFO">${output} = 2025-03-25 21:32:58,368 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:58,368 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:58.066" endtime="20250325 21:32:58.996"/>
</kw>
<msg timestamp="20250325 21:32:58.997" level="INFO">${result} = 2025-03-25 21:32:58,368 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:58,368 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:58.065" endtime="20250325 21:32:58.997"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${result}</arg>
<arg>(?is)POST /${BUCKET}/big_file\\?uploadId=.*?Response body.*?ETag&gt;"(.*?-2)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250325 21:32:58.999" level="INFO">${match} = POST /encrypted/big_file?uploadId=0195cf39-10e8-7737-9856-8935f30c44dd-114225209571541112 HTTP/1.1" 200 290
2025-03-25 21:32:58,905 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-par...</msg>
<msg timestamp="20250325 21:32:58.999" level="INFO">${etag1} = 2e87253020255e98fc0a7735352f7411-2</msg>
<status status="PASS" starttime="20250325 21:32:58.997" endtime="20250325 21:32:58.999"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file_download_result}</var>
<arg>cp s3://${BUCKET}/big_file /tmp/big_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:32:59.004" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://encrypted/big_file /tmp/big_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:00.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:00.327" level="INFO">${output} = 2025-03-25 21:32:59,310 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:59,310 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:59.001" endtime="20250325 21:33:00.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:00.328" level="INFO">2025-03-25 21:32:59,310 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:59,310 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://encrypted/big_file', '/tmp/big_file_downloaded']
2025-03-25 21:32:59,311 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fbe8e202820&gt;
2025-03-25 21:32:59,311 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fbe8eaedc10&gt;
2025-03-25 21:32:59,311 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fbe8e7dfe50&gt;
2025-03-25 21:32:59,312 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-03-25 21:32:59,314 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fbe8e26f4c0&gt;
2025-03-25 21:32:59,314 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fbe8e1b4820&gt;
2025-03-25 21:32:59,314 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7fbe8e289310&gt;
2025-03-25 21:32:59,315 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,315 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fbe8e1b4820&gt;
2025-03-25 21:32:59,315 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7fbe8e289310&gt;
2025-03-25 21:32:59,317 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,317 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,317 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fbe8e7acc70&gt;
2025-03-25 21:32:59,317 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,317 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fbe8e7acc70&gt;
2025-03-25 21:32:59,317 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,317 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,317 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,317 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fbe8e7acc70&gt;
2025-03-25 21:32:59,317 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,317 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,317 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,318 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,318 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,318 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,318 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,318 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,318 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,318 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,318 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,318 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,318 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,319 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,319 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,319 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,319 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,319 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,319 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fbe8e7acc70&gt;
2025-03-25 21:32:59,319 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,319 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,319 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,319 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fbe8e7acc70&gt;
2025-03-25 21:32:59,319 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,319 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fbe8e7acc70&gt;
2025-03-25 21:32:59,320 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,320 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,320 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,320 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,320 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,320 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,320 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbe8e10d4c0&gt;
2025-03-25 21:32:59,320 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-03-25 21:32:59,320 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-03-25 21:32:59,322 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-03-25 21:32:59,343 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-03-25 21:32:59,344 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fbe8fd239d0&gt;
2025-03-25 21:32:59,350 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-03-25 21:32:59,357 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-03-25 21:32:59,377 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-03-25 21:32:59,379 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-03-25 21:32:59,381 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fbe8ee26a60&gt;
2025-03-25 21:32:59,381 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fbe8ee26820&gt;
2025-03-25 21:32:59,381 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:59,384 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:59,386 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-03-25 21:32:59,386 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:59,387 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:59,387 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:59,387 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:59,387 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fbe8fd239d0&gt;
2025-03-25 21:32:59,388 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fbe8ee26a60&gt;
2025-03-25 21:32:59,388 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fbe8ee26820&gt;
2025-03-25 21:32:59,388 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:59,390 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:59,391 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:59,391 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:59,392 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:59,392 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:59,392 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fbe8fd239d0&gt;
2025-03-25 21:32:59,393 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fbe8ee26a60&gt;
2025-03-25 21:32:59,393 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fbe8ee26820&gt;
2025-03-25 21:32:59,393 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:59,395 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:32:59,396 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:32:59,397 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:32:59,397 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:32:59,397 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:32:59,397 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-03-25 21:32:59,398 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7fbe8ed6e8b0&gt;
2025-03-25 21:32:59,398 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7fbe8ed6e820&gt;
2025-03-25 21:32:59,398 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fbe8ed74700&gt;
2025-03-25 21:32:59,398 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fbe8d527a30&gt;&gt;
2025-03-25 21:32:59,398 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fbe8d66b940&gt;&gt;
2025-03-25 21:32:59,398 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7fbe8ed6e670&gt;
2025-03-25 21:32:59,398 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fbe8ed748b0&gt;
2025-03-25 21:32:59,398 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fbe8d527a30&gt;&gt;
2025-03-25 21:32:59,399 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:32:59,399 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:32:59,399 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:32:59,399 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:32:59,400 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7fbe8ed6eb80&gt;
2025-03-25 21:32:59,400 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fbe8d527a00&gt;&gt;
2025-03-25 21:32:59,400 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7fbe8ed6e280&gt;
2025-03-25 21:32:59,400 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7fbe8ed74d30&gt;
2025-03-25 21:32:59,400 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fbe8ed71ee0&gt;
2025-03-25 21:32:59,400 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fbe8d555ca0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:32:59,400 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fbe8d555c10&gt;&gt;
2025-03-25 21:32:59,401 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7fbe8ed6e4c0&gt;
2025-03-25 21:32:59,401 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7fbe8ed74820&gt;
2025-03-25 21:32:59,401 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fbe8d527a00&gt;&gt;
2025-03-25 21:32:59,401 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:32:59,401 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/encrypted/big_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250325T213259Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-03-25 21:32:59,401 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213259Z
20250325/us-west-1/s3/aws4_request
47be7c3ba4a52f092b26b5ca1846e2d9027c4fd6807923989e8b79d9177ec337
2025-03-25 21:32:59,401 - MainThread - botocore.auth - DEBUG - Signature:
4fb9d371236a7e756b9fe595af6bc9f1dbc1ed9f1cf730f4668d1eb3c1ddd276
2025-03-25 21:32:59,401 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7fbe8ed74670&gt;
2025-03-25 21:32:59,401 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/encrypted/big_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250325T213259Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=4fb9d371236a7e756b9fe595af6bc9f1dbc1ed9f1cf730f4668d1eb3c1ddd276', 'amz-sdk-invocation-id': b'6e55a540-2250-4a5d-8c6f-4ca92bc69130', 'amz-sdk-request': b'attempt=1'}&gt;
2025-03-25 21:32:59,402 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-03-25 21:32:59,412 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /encrypted/big_file HTTP/1.1" 200 0
2025-03-25 21:32:59,412 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7fbe8ed74b80&gt;
2025-03-25 21:32:59,412 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7fbe8ed749d0&gt;
2025-03-25 21:32:59,413 - MainThread - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:32:59 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:32:59 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"2e87253020255e98fc0a7735352f7411-2"', 'x-amz-mp-parts-count': '2', 'last-modified': 'Tue, 25 Mar 2025 21:32:58 GMT', 'server': 'Ozone', 'x-amz-id-2': 'fkN7fNQm', 'x-amz-request-id': 'be252787-a801-444b-a2d6-0f20adde1e00', 'content-length': '10000000'}
2025-03-25 21:32:59,413 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-03-25 21:32:59,413 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7fbe8ed74ca0&gt;
2025-03-25 21:32:59,413 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fbe8d527970&gt;
2025-03-25 21:32:59,413 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:32:59,413 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fbe8d527a30&gt;&gt;
2025-03-25 21:32:59,413 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7fbe8e1ffd30&gt;
2025-03-25 21:32:59,414 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,415 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fbe8d4db850&gt;}) about to wait for the following futures []
2025-03-25 21:32:59,415 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fbe8d4db850&gt;}) done waiting for dependent futures
2025-03-25 21:32:59,415 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fbe8d4db850&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fbe8d6908e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fbe8d527dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fbe8d527e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fbe8d4db850&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt;}
2025-03-25 21:32:59,415 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c0d0&gt; for transfer request: 0.
2025-03-25 21:32:59,415 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,415 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) about to wait for the following futures []
2025-03-25 21:32:59,415 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) done waiting for dependent futures
2025-03-25 21:32:59,416 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fbe8d6908e0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'extra_args': {'Range': 'bytes=0-8388607'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fbe8d52fe80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fbe8d4db850&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fbe8d52feb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fbe8d4db850&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fbe8d4db370&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fbe8d4db850&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fbe8d4db310&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fbe8d4db850&gt;)], 'max_attempts': 5, 'start_index': 0, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fbe8d4dbd30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-03-25 21:32:59,416 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fbe8ed6e8b0&gt;
2025-03-25 21:32:59,416 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fbe8ed6e820&gt;
2025-03-25 21:32:59,416 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fbe8ed74700&gt;
2025-03-25 21:32:59,416 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fbe8d66b820&gt;&gt;
2025-03-25 21:32:59,416 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fbe8d6f0730&gt;&gt;
2025-03-25 21:32:59,416 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c0d0&gt; for transfer request: 0.
2025-03-25 21:32:59,416 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fbe8ed6e670&gt;
2025-03-25 21:32:59,416 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fbe8ed748b0&gt;
2025-03-25 21:32:59,416 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,417 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fbe8d66b820&gt;&gt;
2025-03-25 21:32:59,417 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:32:59,417 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:32:59,418 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:32:59,418 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:32:59,418 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fbe8ed6eb80&gt;
2025-03-25 21:32:59,418 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fbe8d66b7f0&gt;&gt;
2025-03-25 21:32:59,418 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fbe8ed6e280&gt;
2025-03-25 21:32:59,418 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7fbe8ed74d30&gt;
2025-03-25 21:32:59,418 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fbe8ed71ee0&gt;
2025-03-25 21:32:59,418 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=0-8388607', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fbe8d690a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'Range': 'bytes=0-8388607'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:32:59,419 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fbe8e4a9790&gt;
2025-03-25 21:32:59,419 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fbe8d6909d0&gt;&gt;
2025-03-25 21:32:59,419 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fbe8ed6e4c0&gt;
2025-03-25 21:32:59,419 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7fbe8ed74820&gt;
2025-03-25 21:32:59,419 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fbe8d66b7f0&gt;&gt;
2025-03-25 21:32:59,419 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:32:59,419 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) about to wait for the following futures []
2025-03-25 21:32:59,419 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/big_file

host:s3g:9878
range:bytes=0-8388607
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250325T213259Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-03-25 21:32:59,419 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213259Z
20250325/us-west-1/s3/aws4_request
a3132d20af055a72967f3a50dbf5c1b771b17f81ddf9b114ca24f30bb9676165
2025-03-25 21:32:59,420 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
3ca5772676e05c94a6d1cc522683d8a122d7b22e0e1de74016c0a5648569c2f1
2025-03-25 21:32:59,420 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fbe8e4a9820&gt;
2025-03-25 21:32:59,420 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fbe8ed74670&gt;
2025-03-25 21:32:59,420 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/big_file, headers={'Range': b'bytes=0-8388607', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250325T213259Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=3ca5772676e05c94a6d1cc522683d8a122d7b22e0e1de74016c0a5648569c2f1', 'amz-sdk-invocation-id': b'63e344df-336d-481c-bf32-c4f807a78f60', 'amz-sdk-request': b'attempt=1'}&gt;
2025-03-25 21:32:59,420 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-03-25 21:32:59,419 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,420 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) done waiting for dependent futures
2025-03-25 21:32:59,421 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fbe8d6908e0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'extra_args': {'Range': 'bytes=8388608-'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fbe8d52fe80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fbe8d4db850&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fbe8d52feb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fbe8d4db850&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fbe8d4db370&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fbe8d4db850&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fbe8d4db310&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fbe8d4db850&gt;)], 'max_attempts': 5, 'start_index': 8388608, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fbe8d4dbd30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-03-25 21:32:59,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fbe8ed6e8b0&gt;
2025-03-25 21:32:59,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fbe8ed6e820&gt;
2025-03-25 21:32:59,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fbe8ed74700&gt;
2025-03-25 21:32:59,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fbe8d66b820&gt;&gt;
2025-03-25 21:32:59,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fbe8d6f0730&gt;&gt;
2025-03-25 21:32:59,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fbe8ed6e670&gt;
2025-03-25 21:32:59,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fbe8ed748b0&gt;
2025-03-25 21:32:59,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fbe8d66b820&gt;&gt;
2025-03-25 21:32:59,421 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:32:59,421 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:32:59,421 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:32:59,421 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fbe8ed6eb80&gt;
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fbe8d66b7f0&gt;&gt;
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fbe8ed6e280&gt;
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7fbe8ed74d30&gt;
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fbe8ed71ee0&gt;
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=8388608-', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fbe8d690a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'Range': 'bytes=8388608-'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fbe8e4a9790&gt;
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fbe8d6909d0&gt;&gt;
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fbe8ed6e4c0&gt;
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7fbe8ed74820&gt;
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fbe8d66b7f0&gt;&gt;
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/big_file

host:s3g:9878
range:bytes=8388608-
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250325T213259Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213259Z
20250325/us-west-1/s3/aws4_request
d5134b6042e16a7e8ea958722919d0731d1ae6b138438e3684c6b5cb46ff6463
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
f4a9288ae2731604bd2a8e05efb9d34ff6a552b283ebc191d28801d65ce3cb44
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fbe8e4a9820&gt;
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fbe8ed74670&gt;
2025-03-25 21:32:59,422 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/big_file, headers={'Range': b'bytes=8388608-', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250325T213259Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=f4a9288ae2731604bd2a8e05efb9d34ff6a552b283ebc191d28801d65ce3cb44', 'amz-sdk-invocation-id': b'1249780e-a51f-4cf4-ab16-c52e51d80b50', 'amz-sdk-request': b'attempt=1'}&gt;
2025-03-25 21:32:59,423 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-03-25 21:32:59,745 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/big_file HTTP/1.1" 206 1611392
2025-03-25 21:32:59,746 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7fbe8ed74b80&gt;
2025-03-25 21:32:59,746 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7fbe8ed749d0&gt;
2025-03-25 21:32:59,747 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:32:59 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:32:59 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'content-range': 'bytes 8388608-9999999/10000000', 'accept-ranges': 'bytes', 'etag': '"2e87253020255e98fc0a7735352f7411-2"', 'x-amz-mp-parts-count': '2', 'last-modified': 'Tue, 25 Mar 2025 21:32:58 GMT', 'server': 'Ozone', 'x-amz-id-2': 'kWD62K8d9KbEw', 'x-amz-request-id': '9809cd83-dedf-4f68-8144-610b937e4e52', 'content-length': '1611392'}
2025-03-25 21:32:59,747 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fbe8d4b34c0&gt;
2025-03-25 21:32:59,748 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7fbe8ed74ca0&gt;
2025-03-25 21:32:59,748 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fbe8d66b760&gt;
2025-03-25 21:32:59,748 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:32:59,748 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fbe8d66b820&gt;&gt;
2025-03-25 21:32:59,748 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fbe8e1ffd30&gt;
2025-03-25 21:32:59,749 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8388608}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,749 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,750 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) about to wait for the following futures []
2025-03-25 21:32:59,750 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) done waiting for dependent futures
2025-03-25 21:32:59,750 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8388608}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 8388608}
Completed 256.0 KiB/9.5 MiB (766.8 KiB/s) with 1 file(s) remaining
2025-03-25 21:32:59,750 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 512.0 KiB/9.5 MiB (1.5 MiB/s) with 1 file(s) remaining  
2025-03-25 21:32:59,752 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8650752}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,752 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,752 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) about to wait for the following futures []
2025-03-25 21:32:59,753 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) done waiting for dependent futures
2025-03-25 21:32:59,753 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8912896}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,753 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,754 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9175040}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,754 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,753 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8650752}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 8650752}
2025-03-25 21:32:59,755 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 768.0 KiB/9.5 MiB (2.2 MiB/s) with 1 file(s) remaining  
Completed 1.0 MiB/9.5 MiB (3.0 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,755 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) about to wait for the following futures []
2025-03-25 21:32:59,756 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) done waiting for dependent futures
2025-03-25 21:32:59,756 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8912896}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 8912896}
2025-03-25 21:32:59,756 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,756 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) about to wait for the following futures []
2025-03-25 21:32:59,756 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) done waiting for dependent futures
2025-03-25 21:32:59,756 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9175040}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 9175040}
Completed 1.2 MiB/9.5 MiB (3.7 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,757 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,757 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9437184}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,757 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.5 MiB/9.5 MiB (4.4 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,757 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9699328}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,757 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.5 MiB/9.5 MiB (4.5 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,757 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) about to wait for the following futures []
2025-03-25 21:32:59,758 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) done waiting for dependent futures
2025-03-25 21:32:59,758 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9437184}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 9437184}
2025-03-25 21:32:59,758 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,757 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9961472}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,758 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,758 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) about to wait for the following futures []
2025-03-25 21:32:59,758 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,758 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) done waiting for dependent futures
2025-03-25 21:32:59,759 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9699328}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 9699328}
2025-03-25 21:32:59,759 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,759 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) about to wait for the following futures []
2025-03-25 21:32:59,759 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) done waiting for dependent futures
2025-03-25 21:32:59,759 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9961472}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 9961472}
2025-03-25 21:32:59,759 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,947 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/big_file HTTP/1.1" 206 8388608
2025-03-25 21:32:59,948 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7fbe8ed74b80&gt;
2025-03-25 21:32:59,948 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7fbe8ed749d0&gt;
2025-03-25 21:32:59,948 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:32:59 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:32:59 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'content-range': 'bytes 0-8388607/10000000', 'accept-ranges': 'bytes', 'etag': '"2e87253020255e98fc0a7735352f7411-2"', 'x-amz-mp-parts-count': '2', 'last-modified': 'Tue, 25 Mar 2025 21:32:58 GMT', 'server': 'Ozone', 'x-amz-id-2': 'U2NWawFt0I', 'x-amz-request-id': 'd71b8a76-aaa2-4597-8bb2-9539b3a505b2', 'content-length': '8388608'}
2025-03-25 21:32:59,948 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fbe8d4bd580&gt;
2025-03-25 21:32:59,949 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7fbe8ed74ca0&gt;
2025-03-25 21:32:59,949 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fbe8d66b760&gt;
2025-03-25 21:32:59,949 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:32:59,949 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fbe8d66b820&gt;&gt;
2025-03-25 21:32:59,949 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fbe8e1ffd30&gt;
Completed 1.8 MiB/9.5 MiB (3.3 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,951 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 0}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,952 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.0 MiB/9.5 MiB (3.8 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,952 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 262144}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,952 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2025-03-25 21:32:59,953 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-03-25 21:32:59,953 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 0}
2025-03-25 21:32:59,954 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,953 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.3 MiB/9.5 MiB (4.2 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,954 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 524288}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,954 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2025-03-25 21:32:59,955 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-03-25 21:32:59,954 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,955 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 262144}
2025-03-25 21:32:59,955 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 2.5 MiB/9.5 MiB (4.7 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,955 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 786432}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,956 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,956 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2025-03-25 21:32:59,956 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-03-25 21:32:59,956 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 524288}
2025-03-25 21:32:59,956 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,956 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
Completed 2.8 MiB/9.5 MiB (5.1 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,956 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2025-03-25 21:32:59,957 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1048576}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,957 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.0 MiB/9.5 MiB (5.6 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,957 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 786432}
2025-03-25 21:32:59,957 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1310720}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,958 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,958 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,958 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) about to wait for the following futures []
2025-03-25 21:32:59,958 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) done waiting for dependent futures
2025-03-25 21:32:59,958 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1048576}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 1048576}
Completed 3.3 MiB/9.5 MiB (6.1 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,958 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1572864}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,959 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,958 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,959 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) about to wait for the following futures []
2025-03-25 21:32:59,959 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) done waiting for dependent futures
2025-03-25 21:32:59,959 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1310720}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 1310720}
2025-03-25 21:32:59,959 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1835008}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
Completed 3.5 MiB/9.5 MiB (6.5 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,960 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,960 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,960 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) about to wait for the following futures []
2025-03-25 21:32:59,960 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) done waiting for dependent futures
2025-03-25 21:32:59,960 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2097152}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,961 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.8 MiB/9.5 MiB (6.9 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,961 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1572864}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 1572864}
Completed 4.0 MiB/9.5 MiB (7.4 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,961 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2359296}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,961 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,962 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,962 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) about to wait for the following futures []
2025-03-25 21:32:59,962 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) done waiting for dependent futures
2025-03-25 21:32:59,962 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1835008}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 1835008}
2025-03-25 21:32:59,962 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2621440}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,962 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,963 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2883584}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
Completed 4.3 MiB/9.5 MiB (7.8 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,963 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.5 MiB/9.5 MiB (8.3 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,963 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,963 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) about to wait for the following futures []
2025-03-25 21:32:59,963 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) done waiting for dependent futures
2025-03-25 21:32:59,963 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2097152}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 2097152}
2025-03-25 21:32:59,964 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3145728}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,964 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.8 MiB/9.5 MiB (8.7 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,964 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,965 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) about to wait for the following futures []
2025-03-25 21:32:59,965 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) done waiting for dependent futures
Completed 5.0 MiB/9.5 MiB (9.2 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,965 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2359296}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 2359296}
2025-03-25 21:32:59,965 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3407872}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,965 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,966 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3670016}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
Completed 5.3 MiB/9.5 MiB (9.6 MiB/s) with 1 file(s) remaining    
2025-03-25 21:32:59,966 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,966 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,967 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) about to wait for the following futures []
Completed 5.5 MiB/9.5 MiB (10.0 MiB/s) with 1 file(s) remaining   
2025-03-25 21:32:59,967 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3932160}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:32:59,967 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:32:59,967 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) done waiting for dependent futures
2025-03-25 21:32:59,967 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2621440}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 2621440}
2025-03-25 21:32:59,968 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,968 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) about to wait for the following futures []
2025-03-25 21:32:59,968 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) done waiting for dependent futures
2025-03-25 21:32:59,968 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2883584}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 2883584}
2025-03-25 21:32:59,969 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,969 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) about to wait for the following futures []
2025-03-25 21:32:59,969 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) done waiting for dependent futures
2025-03-25 21:32:59,969 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3145728}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 3145728}
2025-03-25 21:32:59,969 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,970 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) about to wait for the following futures []
2025-03-25 21:32:59,970 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) done waiting for dependent futures
2025-03-25 21:32:59,970 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3407872}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 3407872}
2025-03-25 21:32:59,970 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,970 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) about to wait for the following futures []
2025-03-25 21:32:59,970 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) done waiting for dependent futures
2025-03-25 21:32:59,970 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3670016}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 3670016}
2025-03-25 21:32:59,971 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:32:59,971 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) about to wait for the following futures []
2025-03-25 21:32:59,971 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) done waiting for dependent futures
2025-03-25 21:32:59,971 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3932160}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 3932160}
2025-03-25 21:32:59,971 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,257 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4194304}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
Completed 5.8 MiB/9.5 MiB (6.9 MiB/s) with 1 file(s) remaining    
2025-03-25 21:33:00,257 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,258 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) about to wait for the following futures []
2025-03-25 21:33:00,258 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) done waiting for dependent futures
2025-03-25 21:33:00,258 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4194304}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 4194304}
2025-03-25 21:33:00,258 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4456448}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,258 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,259 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 6.0 MiB/9.5 MiB (7.2 MiB/s) with 1 file(s) remaining    
Completed 6.3 MiB/9.5 MiB (7.5 MiB/s) with 1 file(s) remaining    
2025-03-25 21:33:00,259 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) about to wait for the following futures []
2025-03-25 21:33:00,259 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) done waiting for dependent futures
2025-03-25 21:33:00,259 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4456448}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 4456448}
2025-03-25 21:33:00,259 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4718592}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,259 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,259 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 6.5 MiB/9.5 MiB (7.7 MiB/s) with 1 file(s) remaining    
2025-03-25 21:33:00,260 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4980736}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,260 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) about to wait for the following futures []
2025-03-25 21:33:00,260 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,260 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5242880}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,260 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) done waiting for dependent futures
Completed 6.8 MiB/9.5 MiB (8.0 MiB/s) with 1 file(s) remaining    
2025-03-25 21:33:00,260 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,260 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4718592}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 4718592}
2025-03-25 21:33:00,261 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5505024}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,261 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,261 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 7.0 MiB/9.5 MiB (8.3 MiB/s) with 1 file(s) remaining    
Completed 7.3 MiB/9.5 MiB (8.6 MiB/s) with 1 file(s) remaining    
2025-03-25 21:33:00,261 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) about to wait for the following futures []
2025-03-25 21:33:00,261 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) done waiting for dependent futures
2025-03-25 21:33:00,261 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4980736}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 4980736}
2025-03-25 21:33:00,261 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5767168}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,262 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,262 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) about to wait for the following futures []
2025-03-25 21:33:00,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) done waiting for dependent futures
2025-03-25 21:33:00,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5242880}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 5242880}
2025-03-25 21:33:00,262 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6029312}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
Completed 7.5 MiB/9.5 MiB (8.9 MiB/s) with 1 file(s) remaining    
2025-03-25 21:33:00,262 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,262 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) about to wait for the following futures []
2025-03-25 21:33:00,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) done waiting for dependent futures
2025-03-25 21:33:00,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5505024}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 5505024}
2025-03-25 21:33:00,263 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6291456}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,263 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.8 MiB/9.5 MiB (9.2 MiB/s) with 1 file(s) remaining    
2025-03-25 21:33:00,263 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6553600}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,263 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,263 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) about to wait for the following futures []
2025-03-25 21:33:00,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) done waiting for dependent futures
2025-03-25 21:33:00,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5767168}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 5767168}
Completed 8.0 MiB/9.5 MiB (9.5 MiB/s) with 1 file(s) remaining    
2025-03-25 21:33:00,264 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6815744}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,264 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,264 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) about to wait for the following futures []
2025-03-25 21:33:00,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) done waiting for dependent futures
2025-03-25 21:33:00,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6029312}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 6029312}
2025-03-25 21:33:00,264 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7077888}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,265 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,265 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,265 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) about to wait for the following futures []
2025-03-25 21:33:00,265 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) done waiting for dependent futures
2025-03-25 21:33:00,265 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6291456}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 6291456}
Completed 8.3 MiB/9.5 MiB (9.8 MiB/s) with 1 file(s) remaining    
Completed 8.5 MiB/9.5 MiB (10.1 MiB/s) with 1 file(s) remaining   
2025-03-25 21:33:00,265 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7340032}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,265 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.8 MiB/9.5 MiB (10.3 MiB/s) with 1 file(s) remaining   
2025-03-25 21:33:00,266 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7602176}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,266 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,266 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,266 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) about to wait for the following futures []
Completed 9.0 MiB/9.5 MiB (10.6 MiB/s) with 1 file(s) remaining   
Completed 9.3 MiB/9.5 MiB (10.9 MiB/s) with 1 file(s) remaining   
2025-03-25 21:33:00,266 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7864320}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,267 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,266 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) done waiting for dependent futures
2025-03-25 21:33:00,267 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6553600}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 6553600}
2025-03-25 21:33:00,267 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8126464}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,267 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,267 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbe8d52c190&gt; for transfer request: 0.
2025-03-25 21:33:00,267 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:00,267 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 9.5 MiB/9.5 MiB (11.2 MiB/s) with 1 file(s) remaining   
2025-03-25 21:33:00,268 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,268 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) about to wait for the following futures []
2025-03-25 21:33:00,268 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) done waiting for dependent futures
2025-03-25 21:33:00,268 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6815744}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 6815744}
2025-03-25 21:33:00,268 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,268 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) about to wait for the following futures []
2025-03-25 21:33:00,268 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) done waiting for dependent futures
2025-03-25 21:33:00,269 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7077888}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 7077888}
2025-03-25 21:33:00,269 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,269 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) about to wait for the following futures []
2025-03-25 21:33:00,269 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) done waiting for dependent futures
2025-03-25 21:33:00,269 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7340032}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 7340032}
2025-03-25 21:33:00,269 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,269 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) about to wait for the following futures []
2025-03-25 21:33:00,269 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) done waiting for dependent futures
2025-03-25 21:33:00,270 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7602176}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 7602176}
2025-03-25 21:33:00,270 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,270 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) about to wait for the following futures []
2025-03-25 21:33:00,270 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) done waiting for dependent futures
2025-03-25 21:33:00,270 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7864320}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 7864320}
2025-03-25 21:33:00,270 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,270 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) about to wait for the following futures []
2025-03-25 21:33:00,271 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) done waiting for dependent futures
2025-03-25 21:33:00,271 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8126464}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'offset': 8126464}
2025-03-25 21:33:00,271 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:00,271 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) about to wait for the following futures []
2025-03-25 21:33:00,271 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) done waiting for dependent futures
2025-03-25 21:33:00,271 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbe8d4dbe50&gt;, 'final_filename': '/tmp/big_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fbe8d527e50&gt;}
2025-03-25 21:33:00,271 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://encrypted/big_file to ../../tmp/big_file_downloaded
2025-03-25 21:33:00,272 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250325 21:33:00.327" endtime="20250325 21:33:00.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:00.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:00.329" endtime="20250325 21:33:00.330"/>
</kw>
<status status="PASS" starttime="20250325 21:32:59.000" endtime="20250325 21:33:00.330"/>
</kw>
<msg timestamp="20250325 21:33:00.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:32:59.000" endtime="20250325 21:33:00.330"/>
</kw>
<msg timestamp="20250325 21:33:00.332" level="INFO">${output} = 2025-03-25 21:32:59,310 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:59,310 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:59.000" endtime="20250325 21:33:00.332"/>
</kw>
<msg timestamp="20250325 21:33:00.332" level="INFO">${file_download_result} = 2025-03-25 21:32:59,310 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:32:59,310 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:32:58.999" endtime="20250325 21:33:00.332"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file_download_result}</arg>
<arg>(?is)GET /${BUCKET}/big_file.*?Response headers.*?ETag':\ '"(.*?-2)"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250325 21:33:00.334" level="INFO">${match} = GET /encrypted/big_file HTTP/1.1" 206 1611392
2025-03-25 21:32:59,746 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error a...</msg>
<msg timestamp="20250325 21:33:00.334" level="INFO">${etag2} = 2e87253020255e98fc0a7735352f7411-2</msg>
<status status="PASS" starttime="20250325 21:33:00.333" endtime="20250325 21:33:00.334"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:33:00.334" endtime="20250325 21:33:00.334"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:00.338" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:00.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:00.801" level="INFO">${output} = delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20250325 21:33:00.335" endtime="20250325 21:33:00.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:00.802" level="INFO">delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20250325 21:33:00.801" endtime="20250325 21:33:00.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:00.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:00.802" endtime="20250325 21:33:00.802"/>
</kw>
<status status="PASS" starttime="20250325 21:33:00.335" endtime="20250325 21:33:00.803"/>
</kw>
<msg timestamp="20250325 21:33:00.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:00.335" endtime="20250325 21:33:00.803"/>
</kw>
<msg timestamp="20250325 21:33:00.803" level="INFO">${output} = delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20250325 21:33:00.335" endtime="20250325 21:33:00.803"/>
</kw>
<status status="PASS" starttime="20250325 21:33:00.334" endtime="20250325 21:33:00.803"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:00.806" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:00.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:00.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:00.804" endtime="20250325 21:33:00.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:00.813" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:00.812" endtime="20250325 21:33:00.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:00.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:00.813" endtime="20250325 21:33:00.813"/>
</kw>
<status status="PASS" starttime="20250325 21:33:00.804" endtime="20250325 21:33:00.813"/>
</kw>
<msg timestamp="20250325 21:33:00.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:00.803" endtime="20250325 21:33:00.814"/>
</kw>
<status status="PASS" starttime="20250325 21:33:00.803" endtime="20250325 21:33:00.814"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:32:58.018" endtime="20250325 21:33:00.814"/>
</test>
<test id="s1-s3-s14-t21" name="Create key twice with different content and expect different ETags" line="261">
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:00.818" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1'.</msg>
<msg timestamp="20250325 21:33:00.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:00.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:00.816" endtime="20250325 21:33:00.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:00.826" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:00.826" endtime="20250325 21:33:00.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:00.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:00.826" endtime="20250325 21:33:00.827"/>
</kw>
<status status="PASS" starttime="20250325 21:33:00.815" endtime="20250325 21:33:00.827"/>
</kw>
<msg timestamp="20250325 21:33:00.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:00.815" endtime="20250325 21:33:00.827"/>
</kw>
<status status="PASS" starttime="20250325 21:33:00.815" endtime="20250325 21:33:00.827"/>
</kw>
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:00.830" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2'.</msg>
<msg timestamp="20250325 21:33:00.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:00.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:00.828" endtime="20250325 21:33:00.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:00.838" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:00.837" endtime="20250325 21:33:00.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:00.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:00.838" endtime="20250325 21:33:00.838"/>
</kw>
<status status="PASS" starttime="20250325 21:33:00.827" endtime="20250325 21:33:00.839"/>
</kw>
<msg timestamp="20250325 21:33:00.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:00.827" endtime="20250325 21:33:00.839"/>
</kw>
<status status="PASS" starttime="20250325 21:33:00.827" endtime="20250325 21:33:00.839"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file1UploadResult}</var>
<arg>cp /tmp/file1 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:00.842" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file1 s3://encrypted/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:01.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:01.396" level="INFO">${output} = 2025-03-25 21:33:01,155 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:01,155 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:33:00.840" endtime="20250325 21:33:01.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:01.397" level="INFO">2025-03-25 21:33:01,155 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:01,155 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file1', 's3://encrypted/test_key_to_check_etag_differences']
2025-03-25 21:33:01,155 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fa5ab656820&gt;
2025-03-25 21:33:01,156 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fa5abf40c10&gt;
2025-03-25 21:33:01,156 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fa5abc32e50&gt;
2025-03-25 21:33:01,157 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-03-25 21:33:01,159 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fa5ab6c34c0&gt;
2025-03-25 21:33:01,160 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fa5ab607820&gt;
2025-03-25 21:33:01,160 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7fa5ab6dc310&gt;
2025-03-25 21:33:01,160 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,160 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fa5ab607820&gt;
2025-03-25 21:33:01,161 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7fa5ab6dc310&gt;
2025-03-25 21:33:01,162 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,162 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,162 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa5abc01c70&gt;
2025-03-25 21:33:01,162 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,162 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa5abc01c70&gt;
2025-03-25 21:33:01,162 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,162 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,163 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,163 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa5abc01c70&gt;
2025-03-25 21:33:01,163 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,163 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,163 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,163 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,163 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,163 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,163 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,163 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,163 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,163 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,163 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,164 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,164 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,164 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,164 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,164 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,164 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,164 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,164 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa5abc01c70&gt;
2025-03-25 21:33:01,164 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,164 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,164 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,164 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa5abc01c70&gt;
2025-03-25 21:33:01,164 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,165 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa5abc01c70&gt;
2025-03-25 21:33:01,165 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,165 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,165 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,165 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,165 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,165 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,165 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa5ab5604c0&gt;
2025-03-25 21:33:01,165 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-03-25 21:33:01,165 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-03-25 21:33:01,167 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-03-25 21:33:01,189 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-03-25 21:33:01,189 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa5ad1769d0&gt;
2025-03-25 21:33:01,195 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-03-25 21:33:01,203 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-03-25 21:33:01,223 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-03-25 21:33:01,225 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-03-25 21:33:01,227 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa5ac279a60&gt;
2025-03-25 21:33:01,227 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa5ac279820&gt;
2025-03-25 21:33:01,228 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:01,231 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:33:01,232 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-03-25 21:33:01,233 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:33:01,233 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:33:01,233 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:01,233 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:33:01,234 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa5ad1769d0&gt;
2025-03-25 21:33:01,234 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa5ac279a60&gt;
2025-03-25 21:33:01,234 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa5ac279820&gt;
2025-03-25 21:33:01,235 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:01,236 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:33:01,238 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:33:01,238 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:33:01,238 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:01,238 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:33:01,238 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa5ad1769d0&gt;
2025-03-25 21:33:01,239 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa5ac279a60&gt;
2025-03-25 21:33:01,239 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa5ac279820&gt;
2025-03-25 21:33:01,239 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:01,241 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:33:01,243 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:33:01,243 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:33:01,243 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:01,243 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:33:01,244 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-03-25 21:33:01,245 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:01,245 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa5aa9b0820&gt;}) about to wait for the following futures []
2025-03-25 21:33:01,245 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa5aa9b0820&gt;}) done waiting for dependent futures
2025-03-25 21:33:01,245 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa5aa9b0820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa5aaaa48e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fa5aa9a7dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa5aa9a7e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa5aa9ad0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa5aa9b0820&gt;}
2025-03-25 21:33:01,246 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa5aa9ad0d0&gt; for transfer request: 0.
2025-03-25 21:33:01,246 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:01,246 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2025-03-25 21:33:01,246 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:33:01,246 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa5aaaa48e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa5aa9480d0&gt;, 'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2025-03-25 21:33:01,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7fa5ac1c44c0&gt;
2025-03-25 21:33:01,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7fa5ac1c08b0&gt;
2025-03-25 21:33:01,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7fa5ac1c4dc0&gt;
2025-03-25 21:33:01,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7fa5ac1c0820&gt;
2025-03-25 21:33:01,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fa5ac1c7700&gt;
2025-03-25 21:33:01,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa5aaa7e820&gt;&gt;
2025-03-25 21:33:01,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fa5aab046d0&gt;&gt;
2025-03-25 21:33:01,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa5ac1c0670&gt;
2025-03-25 21:33:01,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fa5ac1c78b0&gt;
2025-03-25 21:33:01,247 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa5aaa7e820&gt;&gt;
2025-03-25 21:33:01,247 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_key_to_check_etag_differences', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:33:01,248 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:33:01,248 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:33:01,248 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:33:01,249 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7fa5ac335790&gt;
2025-03-25 21:33:01,246 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:01,251 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7fa5ac1c0b80&gt;
2025-03-25 21:33:01,251 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-03-25 21:33:01,251 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa5aaa7e7f0&gt;&gt;
2025-03-25 21:33:01,251 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7fa5ac1c0280&gt;
2025-03-25 21:33:01,251 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7fa5ac1c7d30&gt;
2025-03-25 21:33:01,251 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa5ac1c4ee0&gt;
2025-03-25 21:33:01,251 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'rug4TnSlwhI/qE6BsAW5hQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa5aa9480d0&gt;, 'auth_path': '/encrypted/test_key_to_check_etag_differences', 'url': 'http://s3g:9878/encrypted/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa5aaaa4a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'test_key_to_check_etag_differences', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa5aa9480d0&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'test_key_to_check_etag_differences'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:33:01,252 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7fa5ab8fc790&gt;
2025-03-25 21:33:01,252 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa5aaaa49d0&gt;&gt;
2025-03-25 21:33:01,252 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7fa5ac1c04c0&gt;
2025-03-25 21:33:01,252 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7fa5ac1c7820&gt;
2025-03-25 21:33:01,252 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fa5aaa7e7f0&gt;&gt;
2025-03-25 21:33:01,253 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:33:01,253 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/test_key_to_check_etag_differences

content-md5:rug4TnSlwhI/qE6BsAW5hQ==
host:s3g:9878
x-amz-content-sha256:11d4ad79ef575a9ebdce18a9e337ac44e2b826b8cea37d16aebd123469451b9c
x-amz-date:20250325T213301Z

content-md5;host;x-amz-content-sha256;x-amz-date
11d4ad79ef575a9ebdce18a9e337ac44e2b826b8cea37d16aebd123469451b9c
2025-03-25 21:33:01,253 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213301Z
20250325/us-west-1/s3/aws4_request
2d286bc8190e12294bff85283b6f021fc13dd9ff11407d007bd5f404543b7dbd
2025-03-25 21:33:01,253 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
3a962965839fe5ec2a03df253f90fac95e608154ff81f824cecedeb2b2548c2a
2025-03-25 21:33:01,253 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7fa5ab8fc820&gt;
2025-03-25 21:33:01,253 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7fa5ac1c7670&gt;
2025-03-25 21:33:01,254 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'rug4TnSlwhI/qE6BsAW5hQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250325T213301Z', 'X-Amz-Content-SHA256': b'11d4ad79ef575a9ebdce18a9e337ac44e2b826b8cea37d16aebd123469451b9c', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=3a962965839fe5ec2a03df253f90fac95e608154ff81f824cecedeb2b2548c2a', 'amz-sdk-invocation-id': b'a586ce27-cb08-440a-8baf-7a61a56ef4ed', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2025-03-25 21:33:01,254 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-03-25 21:33:01,255 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-03-25 21:33:01,286 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (6.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (11.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (16.2 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (21.0 MiB/s) with 1 file(s) remaining  
2025-03-25 21:33:01,347 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-03-25 21:33:01,348 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7fa5ac1c7b80&gt;
2025-03-25 21:33:01,348 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7fa5ac1c79d0&gt;
2025-03-25 21:33:01,349 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:33:01 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:33:01 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"aee8384e74a5c2123fa84e81b005b985"', 'server': 'Ozone', 'x-amz-id-2': 'ApuqTjxFV', 'x-amz-request-id': '30da8b6d-ea5a-48fd-8d0b-af47f6b869b3', 'content-length': '0'}
2025-03-25 21:33:01,349 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-03-25 21:33:01,349 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7fa5ac1c7ca0&gt;
2025-03-25 21:33:01,349 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa5aaa7e760&gt;
2025-03-25 21:33:01,349 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:33:01,349 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fa5aaa7e820&gt;&gt;
2025-03-25 21:33:01,349 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7fa5ab652d30&gt;
2025-03-25 21:33:01,349 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file1 to s3://encrypted/test_key_to_check_etag_differences
2025-03-25 21:33:01,350 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250325 21:33:01.396" endtime="20250325 21:33:01.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:01.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:01.398" endtime="20250325 21:33:01.398"/>
</kw>
<status status="PASS" starttime="20250325 21:33:00.840" endtime="20250325 21:33:01.398"/>
</kw>
<msg timestamp="20250325 21:33:01.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:00.840" endtime="20250325 21:33:01.398"/>
</kw>
<msg timestamp="20250325 21:33:01.399" level="INFO">${output} = 2025-03-25 21:33:01,155 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:01,155 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:33:00.839" endtime="20250325 21:33:01.399"/>
</kw>
<msg timestamp="20250325 21:33:01.399" level="INFO">${file1UploadResult} = 2025-03-25 21:33:01,155 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:01,155 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:33:00.839" endtime="20250325 21:33:01.399"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${file1UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250325 21:33:01.400" level="INFO">${match} = PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-03-25 21:33:01,348 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function...</msg>
<msg timestamp="20250325 21:33:01.400" level="INFO">${etag1} = aee8384e74a5c2123fa84e81b005b985</msg>
<status status="PASS" starttime="20250325 21:33:01.399" endtime="20250325 21:33:01.400"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file2UploadResult}</var>
<arg>cp /tmp/file2 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:01.404" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file2 s3://encrypted/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:01.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:01.967" level="INFO">${output} = 2025-03-25 21:33:01,701 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:01,701 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:33:01.402" endtime="20250325 21:33:01.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:01.968" level="INFO">2025-03-25 21:33:01,701 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:01,701 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file2', 's3://encrypted/test_key_to_check_etag_differences']
2025-03-25 21:33:01,702 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fe72edd8820&gt;
2025-03-25 21:33:01,702 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fe72f6c2c10&gt;
2025-03-25 21:33:01,702 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fe72f3b3e50&gt;
2025-03-25 21:33:01,703 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-03-25 21:33:01,705 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fe72ee444c0&gt;
2025-03-25 21:33:01,705 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fe72ed89820&gt;
2025-03-25 21:33:01,705 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7fe72ee5e310&gt;
2025-03-25 21:33:01,706 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,706 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fe72ed89820&gt;
2025-03-25 21:33:01,706 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7fe72ee5e310&gt;
2025-03-25 21:33:01,707 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,708 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe72f381c70&gt;
2025-03-25 21:33:01,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,708 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe72f381c70&gt;
2025-03-25 21:33:01,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,708 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe72f381c70&gt;
2025-03-25 21:33:01,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,708 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,709 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,710 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe72f381c70&gt;
2025-03-25 21:33:01,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,710 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe72f381c70&gt;
2025-03-25 21:33:01,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,710 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe72f381c70&gt;
2025-03-25 21:33:01,710 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,711 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,711 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,711 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,711 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,711 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,711 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe72ece24c0&gt;
2025-03-25 21:33:01,711 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-03-25 21:33:01,711 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-03-25 21:33:01,712 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-03-25 21:33:01,734 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-03-25 21:33:01,734 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fe7308f89d0&gt;
2025-03-25 21:33:01,740 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-03-25 21:33:01,748 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-03-25 21:33:01,767 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-03-25 21:33:01,770 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-03-25 21:33:01,772 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fe72f9fba60&gt;
2025-03-25 21:33:01,772 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fe72f9fb820&gt;
2025-03-25 21:33:01,772 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:01,775 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:33:01,777 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-03-25 21:33:01,777 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:33:01,777 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:33:01,778 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:01,778 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:33:01,778 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fe7308f89d0&gt;
2025-03-25 21:33:01,779 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fe72f9fba60&gt;
2025-03-25 21:33:01,779 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fe72f9fb820&gt;
2025-03-25 21:33:01,779 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:01,781 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:33:01,782 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:33:01,782 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:33:01,782 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:01,782 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:33:01,783 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fe7308f89d0&gt;
2025-03-25 21:33:01,783 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fe72f9fba60&gt;
2025-03-25 21:33:01,783 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fe72f9fb820&gt;
2025-03-25 21:33:01,784 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:01,786 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:33:01,787 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:33:01,787 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:33:01,787 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:01,788 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:33:01,788 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-03-25 21:33:01,789 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:01,789 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fe72e12f820&gt;}) about to wait for the following futures []
2025-03-25 21:33:01,789 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fe72e12f820&gt;}) done waiting for dependent futures
2025-03-25 21:33:01,789 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fe72e12f820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fe72e2a68e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fe72e127dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fe72e127e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fe72e12c0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fe72e12f820&gt;}
2025-03-25 21:33:01,790 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fe72e12c0d0&gt; for transfer request: 0.
2025-03-25 21:33:01,790 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:01,790 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2025-03-25 21:33:01,790 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:33:01,790 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fe72e2a68e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fe72e0c80d0&gt;, 'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2025-03-25 21:33:01,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7fe72f9464c0&gt;
2025-03-25 21:33:01,791 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:01,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7fe72f9428b0&gt;
2025-03-25 21:33:01,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7fe72f946dc0&gt;
2025-03-25 21:33:01,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7fe72f942820&gt;
2025-03-25 21:33:01,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7fe72f949700&gt;
2025-03-25 21:33:01,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe72e280820&gt;&gt;
2025-03-25 21:33:01,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7fe72e3056d0&gt;&gt;
2025-03-25 21:33:01,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7fe72f942670&gt;
2025-03-25 21:33:01,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7fe72f9498b0&gt;
2025-03-25 21:33:01,791 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe72e280820&gt;&gt;
2025-03-25 21:33:01,792 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_key_to_check_etag_differences', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:33:01,792 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:33:01,792 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:33:01,792 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:33:01,793 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7fe72fab7790&gt;
2025-03-25 21:33:01,795 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7fe72f942b80&gt;
2025-03-25 21:33:01,795 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-03-25 21:33:01,795 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fe72e2807f0&gt;&gt;
2025-03-25 21:33:01,795 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7fe72f942280&gt;
2025-03-25 21:33:01,795 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7fe72f949d30&gt;
2025-03-25 21:33:01,795 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fe72f946ee0&gt;
2025-03-25 21:33:01,795 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'gEVG0BjxEyNPPZ9gTbBcPA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fe72e0c80d0&gt;, 'auth_path': '/encrypted/test_key_to_check_etag_differences', 'url': 'http://s3g:9878/encrypted/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fe72e2a6a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'test_key_to_check_etag_differences', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fe72e0c80d0&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'test_key_to_check_etag_differences'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:33:01,796 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7fe72f07d790&gt;
2025-03-25 21:33:01,796 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fe72e2a69d0&gt;&gt;
2025-03-25 21:33:01,796 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7fe72f9424c0&gt;
2025-03-25 21:33:01,796 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7fe72f949820&gt;
2025-03-25 21:33:01,796 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7fe72e2807f0&gt;&gt;
2025-03-25 21:33:01,797 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:33:01,797 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/test_key_to_check_etag_differences

content-md5:gEVG0BjxEyNPPZ9gTbBcPA==
host:s3g:9878
x-amz-content-sha256:196ef746a2e03c87d5e34ad34af707c666ffb251bd7658bc7218768454aa3c51
x-amz-date:20250325T213301Z

content-md5;host;x-amz-content-sha256;x-amz-date
196ef746a2e03c87d5e34ad34af707c666ffb251bd7658bc7218768454aa3c51
2025-03-25 21:33:01,797 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213301Z
20250325/us-west-1/s3/aws4_request
9e005b63abf4e6fd0fb00bd415e685a0dc63cbe2b48b58a049fc75ea75b90d9a
2025-03-25 21:33:01,797 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
1503b1cfefc01cf7e266ac002e4c03374c410b17776971695d31f1d6a92ba41d
2025-03-25 21:33:01,797 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7fe72f07d820&gt;
2025-03-25 21:33:01,797 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7fe72f949670&gt;
2025-03-25 21:33:01,797 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'gEVG0BjxEyNPPZ9gTbBcPA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250325T213301Z', 'X-Amz-Content-SHA256': b'196ef746a2e03c87d5e34ad34af707c666ffb251bd7658bc7218768454aa3c51', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=1503b1cfefc01cf7e266ac002e4c03374c410b17776971695d31f1d6a92ba41d', 'amz-sdk-invocation-id': b'a94afec8-be92-4512-9a5f-875b263b1d43', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2025-03-25 21:33:01,798 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-03-25 21:33:01,799 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-03-25 21:33:01,830 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (6.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (10.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (14.6 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (18.9 MiB/s) with 1 file(s) remaining  
2025-03-25 21:33:01,919 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-03-25 21:33:01,919 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7fe72f949b80&gt;
2025-03-25 21:33:01,919 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7fe72f9499d0&gt;
2025-03-25 21:33:01,919 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:33:01 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:33:01 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"804546d018f113234f3d9f604db05c3c"', 'server': 'Ozone', 'x-amz-id-2': 'X1u1X5fTt', 'x-amz-request-id': '0088245d-e96a-4014-b72a-592f5e25b98b', 'content-length': '0'}
2025-03-25 21:33:01,919 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-03-25 21:33:01,920 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7fe72f949ca0&gt;
2025-03-25 21:33:01,920 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fe72e280760&gt;
2025-03-25 21:33:01,920 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:33:01,920 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7fe72e280820&gt;&gt;
2025-03-25 21:33:01,920 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7fe72edd4d30&gt;
2025-03-25 21:33:01,920 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file2 to s3://encrypted/test_key_to_check_etag_differences
2025-03-25 21:33:01,920 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250325 21:33:01.967" endtime="20250325 21:33:01.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:01.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:01.968" endtime="20250325 21:33:01.968"/>
</kw>
<status status="PASS" starttime="20250325 21:33:01.401" endtime="20250325 21:33:01.969"/>
</kw>
<msg timestamp="20250325 21:33:01.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:01.401" endtime="20250325 21:33:01.969"/>
</kw>
<msg timestamp="20250325 21:33:01.969" level="INFO">${output} = 2025-03-25 21:33:01,701 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:01,701 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:33:01.401" endtime="20250325 21:33:01.969"/>
</kw>
<msg timestamp="20250325 21:33:01.970" level="INFO">${file2UploadResult} = 2025-03-25 21:33:01,701 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:01,701 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:33:01.400" endtime="20250325 21:33:01.970"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file2UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250325 21:33:01.971" level="INFO">${match} = PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-03-25 21:33:01,919 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function...</msg>
<msg timestamp="20250325 21:33:01.971" level="INFO">${etag2} = 804546d018f113234f3d9f604db05c3c</msg>
<status status="PASS" starttime="20250325 21:33:01.970" endtime="20250325 21:33:01.971"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20250325 21:33:01.971" endtime="20250325 21:33:01.971"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:01.975" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:02.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:02.422" level="INFO">${output} = delete: s3://encrypted/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250325 21:33:01.973" endtime="20250325 21:33:02.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:02.423" level="INFO">delete: s3://encrypted/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250325 21:33:02.423" endtime="20250325 21:33:02.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:02.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:02.423" endtime="20250325 21:33:02.424"/>
</kw>
<status status="PASS" starttime="20250325 21:33:01.972" endtime="20250325 21:33:02.424"/>
</kw>
<msg timestamp="20250325 21:33:02.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:01.972" endtime="20250325 21:33:02.424"/>
</kw>
<msg timestamp="20250325 21:33:02.424" level="INFO">${output} = delete: s3://encrypted/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250325 21:33:01.971" endtime="20250325 21:33:02.424"/>
</kw>
<status status="PASS" starttime="20250325 21:33:01.971" endtime="20250325 21:33:02.424"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:02.427" level="INFO">Running command 'rm -rf /tmp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:02.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:02.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:02.425" endtime="20250325 21:33:02.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:02.432" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:02.432" endtime="20250325 21:33:02.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:02.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:02.432" endtime="20250325 21:33:02.432"/>
</kw>
<status status="PASS" starttime="20250325 21:33:02.425" endtime="20250325 21:33:02.433"/>
</kw>
<msg timestamp="20250325 21:33:02.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:02.425" endtime="20250325 21:33:02.433"/>
</kw>
<status status="PASS" starttime="20250325 21:33:02.424" endtime="20250325 21:33:02.433"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:02.436" level="INFO">Running command 'rm -rf /tmp/file2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:02.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:02.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:02.434" endtime="20250325 21:33:02.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:02.440" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:02.440" endtime="20250325 21:33:02.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:02.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:02.440" endtime="20250325 21:33:02.440"/>
</kw>
<status status="PASS" starttime="20250325 21:33:02.433" endtime="20250325 21:33:02.441"/>
</kw>
<msg timestamp="20250325 21:33:02.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:02.433" endtime="20250325 21:33:02.441"/>
</kw>
<status status="PASS" starttime="20250325 21:33:02.433" endtime="20250325 21:33:02.441"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:33:00.814" endtime="20250325 21:33:02.441"/>
</test>
<test id="s1-s3-s14-t22" name="Create&amp;Download big file by multipart upload and get file via part numbers" line="274">
<kw name="Execute" library="os">
<arg>head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:02.444" level="INFO">Running command 'head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20250325 21:33:02.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:02.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:02.443" endtime="20250325 21:33:02.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:02.487" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:02.487" endtime="20250325 21:33:02.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:02.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:02.487" endtime="20250325 21:33:02.488"/>
</kw>
<status status="PASS" starttime="20250325 21:33:02.442" endtime="20250325 21:33:02.488"/>
</kw>
<msg timestamp="20250325 21:33:02.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:02.442" endtime="20250325 21:33:02.488"/>
</kw>
<status status="PASS" starttime="20250325 21:33:02.442" endtime="20250325 21:33:02.488"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:02.492" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:03.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:03.314" level="INFO">${output} = 2025-03-25 21:33:02,794 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:02,795 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:33:02.490" endtime="20250325 21:33:03.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:03.315" level="INFO">2025-03-25 21:33:02,794 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:02,795 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://encrypted/']
2025-03-25 21:33:02,795 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f30e25c0820&gt;
2025-03-25 21:33:02,795 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f30e2eaac10&gt;
2025-03-25 21:33:02,795 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f30e2b9ce50&gt;
2025-03-25 21:33:02,796 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-03-25 21:33:02,798 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f30e262d4c0&gt;
2025-03-25 21:33:02,798 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f30e2572820&gt;
2025-03-25 21:33:02,799 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f30e2647310&gt;
2025-03-25 21:33:02,799 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,799 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f30e2572820&gt;
2025-03-25 21:33:02,799 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f30e2647310&gt;
2025-03-25 21:33:02,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,801 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f30e2b6ac70&gt;
2025-03-25 21:33:02,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,801 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f30e2b6ac70&gt;
2025-03-25 21:33:02,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,801 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,801 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f30e2b6ac70&gt;
2025-03-25 21:33:02,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,802 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,803 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,803 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,803 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,803 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,803 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,803 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,803 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,803 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f30e2b6ac70&gt;
2025-03-25 21:33:02,803 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,803 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,803 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,804 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f30e2b6ac70&gt;
2025-03-25 21:33:02,804 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,804 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f30e2b6ac70&gt;
2025-03-25 21:33:02,804 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,804 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,804 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,804 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,804 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,804 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,804 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f30e24cb4c0&gt;
2025-03-25 21:33:02,804 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-03-25 21:33:02,804 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-03-25 21:33:02,806 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-03-25 21:33:02,827 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-03-25 21:33:02,827 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f30e40e19d0&gt;
2025-03-25 21:33:02,833 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-03-25 21:33:02,841 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-03-25 21:33:02,860 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-03-25 21:33:02,862 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-03-25 21:33:02,864 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f30e31e4a60&gt;
2025-03-25 21:33:02,864 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f30e31e4820&gt;
2025-03-25 21:33:02,864 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:02,867 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:33:02,869 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-03-25 21:33:02,869 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:33:02,869 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:33:02,870 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:02,870 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:33:02,870 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f30e40e19d0&gt;
2025-03-25 21:33:02,871 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f30e31e4a60&gt;
2025-03-25 21:33:02,871 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f30e31e4820&gt;
2025-03-25 21:33:02,871 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:02,873 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:33:02,874 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:33:02,874 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:33:02,874 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:02,875 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:33:02,875 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f30e40e19d0&gt;
2025-03-25 21:33:02,875 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f30e31e4a60&gt;
2025-03-25 21:33:02,876 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f30e31e4820&gt;
2025-03-25 21:33:02,876 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:02,878 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:33:02,879 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:33:02,879 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:33:02,880 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:02,880 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:33:02,880 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-03-25 21:33:02,881 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:02,881 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f30e18f0820&gt;}) about to wait for the following futures []
2025-03-25 21:33:02,881 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f30e18f0820&gt;}) done waiting for dependent futures
2025-03-25 21:33:02,881 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f30e18f0820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f30e1a8e8e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f30e18e7dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f30e18e7e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f30e18ec0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f30e18f0820&gt;}
2025-03-25 21:33:02,882 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f30e18ec0d0&gt; for transfer request: 0.
2025-03-25 21:33:02,882 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:02,882 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2025-03-25 21:33:02,882 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:33:02,882 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f30e1a8e8e0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}
2025-03-25 21:33:02,883 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7f30e312f4c0&gt;
2025-03-25 21:33:02,883 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7f30e312b8b0&gt;
2025-03-25 21:33:02,883 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f30e312b820&gt;
2025-03-25 21:33:02,883 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f30e3132700&gt;
2025-03-25 21:33:02,883 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f30e1a69820&gt;&gt;
2025-03-25 21:33:02,883 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f30e1aee6d0&gt;&gt;
2025-03-25 21:33:02,883 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f30e312b670&gt;
2025-03-25 21:33:02,883 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f30e31328b0&gt;
2025-03-25 21:33:02,883 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f30e1a69820&gt;&gt;
2025-03-25 21:33:02,883 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:33:02,884 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:33:02,884 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:33:02,884 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:33:02,884 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f30e18ec0d0&gt; for transfer request: 0.
2025-03-25 21:33:02,885 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7f30e312bb80&gt;
2025-03-25 21:33:02,885 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:02,885 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f30e1a697f0&gt;&gt;
2025-03-25 21:33:02,885 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f30e312b280&gt;
2025-03-25 21:33:02,885 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f30e3132d30&gt;
2025-03-25 21:33:02,885 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f30e312fee0&gt;
2025-03-25 21:33:02,885 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f30e1a8ea60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:33:02,886 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f30e2866790&gt;
2025-03-25 21:33:02,886 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f30e1a8e9d0&gt;&gt;
2025-03-25 21:33:02,886 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f30e312b4c0&gt;
2025-03-25 21:33:02,886 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f30e3132820&gt;
2025-03-25 21:33:02,886 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f30e1a697f0&gt;&gt;
2025-03-25 21:33:02,886 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:33:02,886 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/encrypted/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250325T213302Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-03-25 21:33:02,886 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213302Z
20250325/us-west-1/s3/aws4_request
c0d38a7cf55502c4782982bfe19931d6558cd87c0189cbb8b3676413dbfc4e6e
2025-03-25 21:33:02,886 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
66debafbfbf95bc9c2dc18387856f1250c75ea7bf10002054a92e98194436c49
2025-03-25 21:33:02,886 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7f30e2866820&gt;
2025-03-25 21:33:02,886 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f30e3132670&gt;
2025-03-25 21:33:02,887 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f30e1887370&gt;]
2025-03-25 21:33:02,887 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/encrypted/big_file?uploads, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250325T213302Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=66debafbfbf95bc9c2dc18387856f1250c75ea7bf10002054a92e98194436c49', 'amz-sdk-invocation-id': b'bef6a863-e11e-4ca2-8185-8e1fcacae157', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2025-03-25 21:33:02,887 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-03-25 21:33:02,887 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f30e18ec0d0&gt; for transfer request: 0.
2025-03-25 21:33:02,887 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f30e1887370&gt;
2025-03-25 21:33:02,888 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:02,888 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f30e1887370&gt;]
2025-03-25 21:33:02,888 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f30e1887370&gt;
2025-03-25 21:33:02,888 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f30e18ec0d0&gt; for transfer request: 0.
2025-03-25 21:33:02,888 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:02,888 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f30e1887370&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f30e18b0250&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f30e184a940&gt;]
2025-03-25 21:33:02,889 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f30e1887370&gt;
2025-03-25 21:33:02,889 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:02,908 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /encrypted/big_file?uploads HTTP/1.1" 200 287
2025-03-25 21:33:02,908 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f30e3132b80&gt;
2025-03-25 21:33:02,908 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f30e31329d0&gt;
2025-03-25 21:33:02,908 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:33:02 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:33:02 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'GsIsn73j5sQ', 'x-amz-request-id': '4e2243b0-27ec-4122-b8cf-3e56359b0478', 'content-length': '287'}
2025-03-25 21:33:02,909 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;encrypted&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;0195cf39-2235-7076-9198-182e877ad066-114225209861800061&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2025-03-25 21:33:02,909 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;function _update_status_code at 0x7f30e3132ca0&gt;
2025-03-25 21:33:02,909 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f30e1a69760&gt;
2025-03-25 21:33:02,909 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:33:02,909 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f30e1a69820&gt;&gt;
2025-03-25 21:33:02,909 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f30e25bdd30&gt;
2025-03-25 21:33:02,909 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:02,910 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:33:02,910 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f30e1a8e8e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f30e18b0b80&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '0195cf39-2235-7076-9198-182e877ad066-114225209861800061'}
2025-03-25 21:33:02,910 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f30e312b8b0&gt;
2025-03-25 21:33:02,910 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f30e312fdc0&gt;
2025-03-25 21:33:02,910 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f30e312b820&gt;
2025-03-25 21:33:02,910 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f30e3132700&gt;
2025-03-25 21:33:02,910 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:33:02,911 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f30e1a69820&gt;&gt;
2025-03-25 21:33:02,911 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f30e1aee6d0&gt;&gt;
2025-03-25 21:33:02,911 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f30e312b670&gt;
2025-03-25 21:33:02,911 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f30e31328b0&gt;
2025-03-25 21:33:02,911 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f30e1a69820&gt;&gt;
2025-03-25 21:33:02,911 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:33:02,911 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:33:02,911 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:33:02,911 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:33:02,912 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f30e32a08b0&gt;
2025-03-25 21:33:02,911 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f30e18b0250&gt;
2025-03-25 21:33:02,911 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f30e1a8e8e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f30e1887e20&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '0195cf39-2235-7076-9198-182e877ad066-114225209861800061'}
2025-03-25 21:33:02,912 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f30e312b8b0&gt;
2025-03-25 21:33:02,913 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f30e312fdc0&gt;
2025-03-25 21:33:02,913 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f30e312b820&gt;
2025-03-25 21:33:02,913 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f30e3132700&gt;
2025-03-25 21:33:02,913 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f30e1a69820&gt;&gt;
2025-03-25 21:33:02,913 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f30e1aee6d0&gt;&gt;
2025-03-25 21:33:02,913 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f30e312b670&gt;
2025-03-25 21:33:02,913 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f30e31328b0&gt;
2025-03-25 21:33:02,913 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f30e1a69820&gt;&gt;
2025-03-25 21:33:02,913 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:33:02,913 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:33:02,913 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:33:02,913 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:33:02,914 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f30e32a08b0&gt;
2025-03-25 21:33:02,916 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f30e312bb80&gt;
2025-03-25 21:33:02,917 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-03-25 21:33:02,917 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f30e1a697f0&gt;&gt;
2025-03-25 21:33:02,917 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f30e312b280&gt;
2025-03-25 21:33:02,917 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f30e3132d30&gt;
2025-03-25 21:33:02,917 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f30e312fee0&gt;
2025-03-25 21:33:02,917 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '0195cf39-2235-7076-9198-182e877ad066-114225209861800061', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'XSJLX3ihCVmI7IrqsZdzgg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f30e18b0b80&gt;, 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=0195cf39-2235-7076-9198-182e877ad066-114225209861800061&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f30e1a8ea60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'UploadId': '0195cf39-2235-7076-9198-182e877ad066-114225209861800061', 'PartNumber': 2, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f30e18b0b80&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:33:02,917 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f30e2866790&gt;
2025-03-25 21:33:02,917 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f30e1a8e9d0&gt;&gt;
2025-03-25 21:33:02,917 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f30e312b4c0&gt;
2025-03-25 21:33:02,917 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f30e3132820&gt;
2025-03-25 21:33:02,917 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f30e1a697f0&gt;&gt;
2025-03-25 21:33:02,919 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:33:02,919 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/big_file
partNumber=2&amp;uploadId=0195cf39-2235-7076-9198-182e877ad066-114225209861800061
content-md5:XSJLX3ihCVmI7IrqsZdzgg==
host:s3g:9878
x-amz-content-sha256:6c3f0f4823a9f6e6d3eafb5c24f8895eee57328bf5d2a7bf480135dcd15c6762
x-amz-date:20250325T213302Z

content-md5;host;x-amz-content-sha256;x-amz-date
6c3f0f4823a9f6e6d3eafb5c24f8895eee57328bf5d2a7bf480135dcd15c6762
2025-03-25 21:33:02,919 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213302Z
20250325/us-west-1/s3/aws4_request
a3ec6fb52005a19e62de14d8d52b42a5d11e655d6a4584b0d56fa7521689729e
2025-03-25 21:33:02,919 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
f80664b3e3fd1533d2ed0b7c4b839d67da78c76296d9b3b97cc974c6054e44ff
2025-03-25 21:33:02,919 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f30e2866820&gt;
2025-03-25 21:33:02,920 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f30e3132670&gt;
2025-03-25 21:33:02,920 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/big_file?uploadId=0195cf39-2235-7076-9198-182e877ad066-114225209861800061&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'XSJLX3ihCVmI7IrqsZdzgg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250325T213302Z', 'X-Amz-Content-SHA256': b'6c3f0f4823a9f6e6d3eafb5c24f8895eee57328bf5d2a7bf480135dcd15c6762', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=f80664b3e3fd1533d2ed0b7c4b839d67da78c76296d9b3b97cc974c6054e44ff', 'amz-sdk-invocation-id': b'f7bb7b91-c65e-4cdc-bb77-ef70ff93ce32', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2025-03-25 21:33:02,920 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-03-25 21:33:02,931 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f30e312bb80&gt;
2025-03-25 21:33:02,931 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-03-25 21:33:02,931 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f30e1a697f0&gt;&gt;
2025-03-25 21:33:02,931 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f30e312b280&gt;
2025-03-25 21:33:02,932 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f30e3132d30&gt;
2025-03-25 21:33:02,932 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f30e312fee0&gt;
2025-03-25 21:33:02,932 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '0195cf39-2235-7076-9198-182e877ad066-114225209861800061', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'zkTQoRsBSp0N17k3SVMTRQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f30e1887e20&gt;, 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=0195cf39-2235-7076-9198-182e877ad066-114225209861800061&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f30e1a8ea60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'UploadId': '0195cf39-2235-7076-9198-182e877ad066-114225209861800061', 'PartNumber': 1, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f30e1887e20&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:33:02,932 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f30e2866790&gt;
2025-03-25 21:33:02,932 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f30e1a8e9d0&gt;&gt;
2025-03-25 21:33:02,932 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f30e312b4c0&gt;
2025-03-25 21:33:02,932 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f30e3132820&gt;
2025-03-25 21:33:02,932 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f30e1a697f0&gt;&gt;
2025-03-25 21:33:02,940 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:33:02,940 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/big_file
partNumber=1&amp;uploadId=0195cf39-2235-7076-9198-182e877ad066-114225209861800061
content-md5:zkTQoRsBSp0N17k3SVMTRQ==
host:s3g:9878
x-amz-content-sha256:746cfd1b3cf01735477f2cb1d4ce08573f30b33c01496c2455fcbb3ceb09f7f6
x-amz-date:20250325T213302Z

content-md5;host;x-amz-content-sha256;x-amz-date
746cfd1b3cf01735477f2cb1d4ce08573f30b33c01496c2455fcbb3ceb09f7f6
2025-03-25 21:33:02,940 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213302Z
20250325/us-west-1/s3/aws4_request
7bf30044d94c7f9df30de2d4b4cfdca2831e9c6b71e51b5f6a08382b3bbf8d6c
2025-03-25 21:33:02,940 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
d6133b0d93ed9fa9fc2200b5ee4722f43c643cb0e94010d526471c3147ab2ff6
2025-03-25 21:33:02,940 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f30e2866820&gt;
2025-03-25 21:33:02,940 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f30e3132670&gt;
2025-03-25 21:33:02,940 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/big_file?uploadId=0195cf39-2235-7076-9198-182e877ad066-114225209861800061&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'zkTQoRsBSp0N17k3SVMTRQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250325T213302Z', 'X-Amz-Content-SHA256': b'746cfd1b3cf01735477f2cb1d4ce08573f30b33c01496c2455fcbb3ceb09f7f6', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=d6133b0d93ed9fa9fc2200b5ee4722f43c643cb0e94010d526471c3147ab2ff6', 'amz-sdk-invocation-id': b'ac571b9e-d99b-41d5-a90c-8fb9d5f2218b', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2025-03-25 21:33:02,941 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-03-25 21:33:02,942 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-03-25 21:33:02,955 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/9.5 MiB (3.4 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (6.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (9.6 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (12.5 MiB/s) with 1 file(s) remaining 
Completed 1.2 MiB/9.5 MiB (15.2 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/9.5 MiB (17.7 MiB/s) with 1 file(s) remaining 
2025-03-25 21:33:02,979 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (17.8 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/9.5 MiB (19.5 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/9.5 MiB (21.2 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/9.5 MiB (22.6 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/9.5 MiB (24.0 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/9.5 MiB (25.3 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/9.5 MiB (27.0 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/9.5 MiB (28.6 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/9.5 MiB (30.1 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/9.5 MiB (31.4 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/9.5 MiB (32.8 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/9.5 MiB (34.1 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/9.5 MiB (35.1 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/9.5 MiB (36.4 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/9.5 MiB (37.5 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/9.5 MiB (38.6 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/9.5 MiB (39.8 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/9.5 MiB (40.9 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/9.5 MiB (42.2 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/9.5 MiB (43.1 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/9.5 MiB (44.2 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/9.5 MiB (45.5 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/9.5 MiB (46.5 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/9.5 MiB (47.8 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/9.5 MiB (48.6 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/9.5 MiB (49.5 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/9.5 MiB (50.3 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/9.5 MiB (51.4 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/9.5 MiB (52.2 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/9.5 MiB (53.2 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/9.5 MiB (54.1 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/9.5 MiB (54.6 MiB/s) with 1 file(s) remaining 
2025-03-25 21:33:03,140 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/big_file?uploadId=0195cf39-2235-7076-9198-182e877ad066-114225209861800061&amp;partNumber=2 HTTP/1.1" 200 0
2025-03-25 21:33:03,140 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f30e3132b80&gt;
2025-03-25 21:33:03,140 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f30e31329d0&gt;
2025-03-25 21:33:03,140 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:33:02 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:33:02 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '5d224b5f78a1095988ec8aeab1977382', 'server': 'Ozone', 'x-amz-id-2': 'HSGMZapC', 'x-amz-request-id': 'fa80cb67-ebfc-4826-a49c-eb38d2e6b05d', 'content-length': '0'}
2025-03-25 21:33:03,141 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2025-03-25 21:33:03,141 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f30e3132ca0&gt;
2025-03-25 21:33:03,141 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f30e1a69760&gt;
2025-03-25 21:33:03,141 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:33:03,141 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f30e1a69820&gt;&gt;
2025-03-25 21:33:03,141 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f30e25bdd30&gt;
2025-03-25 21:33:03,141 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 9.5 MiB/9.5 MiB (36.8 MiB/s) with 1 file(s) remaining 
2025-03-25 21:33:03,226 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/big_file?uploadId=0195cf39-2235-7076-9198-182e877ad066-114225209861800061&amp;partNumber=1 HTTP/1.1" 200 0
2025-03-25 21:33:03,226 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f30e3132b80&gt;
2025-03-25 21:33:03,226 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f30e31329d0&gt;
2025-03-25 21:33:03,226 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:33:02 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:33:02 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': 'ce44d0a11b014a9d0dd7b93749531345', 'server': 'Ozone', 'x-amz-id-2': '2sfOaIsaPHuH', 'x-amz-request-id': 'c909e574-120c-4061-8c05-de467c01de7a', 'content-length': '0'}
2025-03-25 21:33:03,226 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2025-03-25 21:33:03,227 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f30e3132ca0&gt;
2025-03-25 21:33:03,227 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f30e1a69760&gt;
2025-03-25 21:33:03,227 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:33:03,227 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f30e1a69820&gt;&gt;
2025-03-25 21:33:03,227 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f30e25bdd30&gt;
2025-03-25 21:33:03,227 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:03,228 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f30e184a940&gt;
2025-03-25 21:33:03,228 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:33:03,228 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f30e1a8e8e0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}, 'upload_id': '0195cf39-2235-7076-9198-182e877ad066-114225209861800061', 'parts': [{'ETag': 'ce44d0a11b014a9d0dd7b93749531345', 'PartNumber': 1}, {'ETag': '5d224b5f78a1095988ec8aeab1977382', 'PartNumber': 2}]}
2025-03-25 21:33:03,229 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function sse_md5 at 0x7f30e312b8b0&gt;
2025-03-25 21:33:03,229 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f30e312b820&gt;
2025-03-25 21:33:03,229 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f30e3132700&gt;
2025-03-25 21:33:03,229 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f30e1a69820&gt;&gt;
2025-03-25 21:33:03,229 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f30e1aee6d0&gt;&gt;
2025-03-25 21:33:03,229 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f30e312b670&gt;
2025-03-25 21:33:03,229 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f30e31328b0&gt;
2025-03-25 21:33:03,229 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f30e1a69820&gt;&gt;
2025-03-25 21:33:03,230 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:33:03,230 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:33:03,230 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:33:03,230 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:33:03,231 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7f30e312bb80&gt;
2025-03-25 21:33:03,231 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f30e1a697f0&gt;&gt;
2025-03-25 21:33:03,231 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f30e312b280&gt;
2025-03-25 21:33:03,231 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f30e3132d30&gt;
2025-03-25 21:33:03,231 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f30e312fee0&gt;
2025-03-25 21:33:03,231 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '0195cf39-2235-7076-9198-182e877ad066-114225209861800061'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;ce44d0a11b014a9d0dd7b93749531345&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;5d224b5f78a1095988ec8aeab1977382&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=0195cf39-2235-7076-9198-182e877ad066-114225209861800061', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f30e1a8ea60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'UploadId': '0195cf39-2235-7076-9198-182e877ad066-114225209861800061', 'MultipartUpload': {'Parts': [{'ETag': 'ce44d0a11b014a9d0dd7b93749531345', 'PartNumber': 1}, {'ETag': '5d224b5f78a1095988ec8aeab1977382', 'PartNumber': 2}]}}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:33:03,231 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f30e2866790&gt;
2025-03-25 21:33:03,232 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f30e1a8e9d0&gt;&gt;
2025-03-25 21:33:03,232 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f30e312b4c0&gt;
2025-03-25 21:33:03,232 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f30e3132820&gt;
2025-03-25 21:33:03,232 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f30e1a697f0&gt;&gt;
2025-03-25 21:33:03,232 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:33:03,232 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/encrypted/big_file
uploadId=0195cf39-2235-7076-9198-182e877ad066-114225209861800061
host:s3g:9878
x-amz-content-sha256:023f353e3d2baeb4a27e61f6d61aaf5a8f293d0341d764ee9e3730b7dcc13e93
x-amz-date:20250325T213303Z

host;x-amz-content-sha256;x-amz-date
023f353e3d2baeb4a27e61f6d61aaf5a8f293d0341d764ee9e3730b7dcc13e93
2025-03-25 21:33:03,232 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213303Z
20250325/us-west-1/s3/aws4_request
1d8348216b52af80955d464533e82c2a8dc144613b0b12abf98816240682ce5a
2025-03-25 21:33:03,233 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
93baa6f2c6913e20720a52e868a29dbc5040878219711e88f8f19a7be8e7e0c2
2025-03-25 21:33:03,233 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7f30e2866820&gt;
2025-03-25 21:33:03,233 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f30e3132670&gt;
2025-03-25 21:33:03,233 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/encrypted/big_file?uploadId=0195cf39-2235-7076-9198-182e877ad066-114225209861800061, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250325T213303Z', 'X-Amz-Content-SHA256': b'023f353e3d2baeb4a27e61f6d61aaf5a8f293d0341d764ee9e3730b7dcc13e93', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=93baa6f2c6913e20720a52e868a29dbc5040878219711e88f8f19a7be8e7e0c2', 'amz-sdk-invocation-id': b'912baaf1-60f9-498b-a874-27de094fedb3', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2025-03-25 21:33:03,258 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /encrypted/big_file?uploadId=0195cf39-2235-7076-9198-182e877ad066-114225209861800061 HTTP/1.1" 200 290
2025-03-25 21:33:03,258 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f30e3132b80&gt;
2025-03-25 21:33:03,258 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f30e31329d0&gt;
2025-03-25 21:33:03,259 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:33:03 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:33:03 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'RpuagNVw54', 'x-amz-request-id': 'd0e4d1d1-0b28-4211-97fd-130314d89583', 'content-length': '290'}
2025-03-25 21:33:03,259 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;encrypted&lt;/Location&gt;&lt;Bucket&gt;encrypted&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"3081ef0bb5e0dd4a7f06743a83cd748a-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2025-03-25 21:33:03,259 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function _update_status_code at 0x7f30e3132ca0&gt;
2025-03-25 21:33:03,259 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f30e1a69760&gt;
2025-03-25 21:33:03,259 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:33:03,259 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f30e1a69820&gt;&gt;
2025-03-25 21:33:03,259 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f30e25bdd30&gt;
2025-03-25 21:33:03,260 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://encrypted/big_file           
2025-03-25 21:33:03,260 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250325 21:33:03.314" endtime="20250325 21:33:03.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:03.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:03.317" endtime="20250325 21:33:03.317"/>
</kw>
<status status="PASS" starttime="20250325 21:33:02.489" endtime="20250325 21:33:03.317"/>
</kw>
<msg timestamp="20250325 21:33:03.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:02.489" endtime="20250325 21:33:03.318"/>
</kw>
<msg timestamp="20250325 21:33:03.320" level="INFO">${output} = 2025-03-25 21:33:02,794 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:02,795 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:33:02.489" endtime="20250325 21:33:03.320"/>
</kw>
<msg timestamp="20250325 21:33:03.321" level="INFO">${result} = 2025-03-25 21:33:02,794 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:02,795 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:33:02.488" endtime="20250325 21:33:03.321"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_1_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_1 --part-number 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:03.325" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key big_file /tmp/big_file_1 --part-number 1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:04.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:04.358" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 8388608,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:33:03.322" endtime="20250325 21:33:04.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:04.359" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 8388608,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:33:03 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:33:03 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:33:04.358" endtime="20250325 21:33:04.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:04.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:04.359" endtime="20250325 21:33:04.359"/>
</kw>
<status status="PASS" starttime="20250325 21:33:03.322" endtime="20250325 21:33:04.360"/>
</kw>
<msg timestamp="20250325 21:33:04.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:03.322" endtime="20250325 21:33:04.360"/>
</kw>
<msg timestamp="20250325 21:33:04.360" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 8388608,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:33:03.321" endtime="20250325 21:33:04.360"/>
</kw>
<msg timestamp="20250325 21:33:04.360" level="INFO">${get_part_1_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 8388608,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:33:03.321" endtime="20250325 21:33:04.360"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part_1_size}</var>
<arg>echo '${get_part_1_response}' | jq -r '.ContentLength'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:04.364" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 8388608,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:33:03 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:33:03 GMT"
}' | jq -r '.ContentLength' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:04.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:04.369" level="INFO">${output} = 8388608</msg>
<status status="PASS" starttime="20250325 21:33:04.361" endtime="20250325 21:33:04.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:04.369" level="INFO">8388608</msg>
<status status="PASS" starttime="20250325 21:33:04.369" endtime="20250325 21:33:04.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:04.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:04.369" endtime="20250325 21:33:04.370"/>
</kw>
<msg timestamp="20250325 21:33:04.370" level="INFO">${part_1_size} = 8388608</msg>
<status status="PASS" starttime="20250325 21:33:04.360" endtime="20250325 21:33:04.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_1_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:04.370" endtime="20250325 21:33:04.370"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_2_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_2 --part-number 2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:04.374" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key big_file /tmp/big_file_2 --part-number 2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:04.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:04.999" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 1611392,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:33:04.372" endtime="20250325 21:33:04.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:05.000" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 1611392,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:33:04 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:33:04 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:33:04.999" endtime="20250325 21:33:05.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:05.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:05.000" endtime="20250325 21:33:05.000"/>
</kw>
<status status="PASS" starttime="20250325 21:33:04.371" endtime="20250325 21:33:05.000"/>
</kw>
<msg timestamp="20250325 21:33:05.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:04.371" endtime="20250325 21:33:05.000"/>
</kw>
<msg timestamp="20250325 21:33:05.001" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 1611392,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:33:04.371" endtime="20250325 21:33:05.001"/>
</kw>
<msg timestamp="20250325 21:33:05.001" level="INFO">${get_part_2_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 1611392,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250325 21:33:04.370" endtime="20250325 21:33:05.001"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part_2_size}</var>
<arg>echo '${get_part_2_response}' | jq -r '.ContentLength'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:05.004" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 1611392,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:33:04 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:33:04 GMT"
}' | jq -r '.ContentLength' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:05.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:05.009" level="INFO">${output} = 1611392</msg>
<status status="PASS" starttime="20250325 21:33:05.001" endtime="20250325 21:33:05.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:05.009" level="INFO">1611392</msg>
<status status="PASS" starttime="20250325 21:33:05.009" endtime="20250325 21:33:05.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:05.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:05.009" endtime="20250325 21:33:05.010"/>
</kw>
<msg timestamp="20250325 21:33:05.010" level="INFO">${part_2_size} = 1611392</msg>
<status status="PASS" starttime="20250325 21:33:05.001" endtime="20250325 21:33:05.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_2_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:05.010" endtime="20250325 21:33:05.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>10000000</arg>
<arg>${${part_1_size} + ${part_2_size}}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:05.011" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:05.010" endtime="20250325 21:33:05.011"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_3_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_3 --part-number 3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:05.015" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key big_file /tmp/big_file_3 --part-number 3 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:05.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:05.507" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 0,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250325 21:33:05.013" endtime="20250325 21:33:05.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:05.508" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 0,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:33:05 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:33:05 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:33:05.507" endtime="20250325 21:33:05.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:05.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:05.508" endtime="20250325 21:33:05.509"/>
</kw>
<status status="PASS" starttime="20250325 21:33:05.013" endtime="20250325 21:33:05.509"/>
</kw>
<msg timestamp="20250325 21:33:05.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:05.012" endtime="20250325 21:33:05.509"/>
</kw>
<msg timestamp="20250325 21:33:05.509" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 0,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250325 21:33:05.012" endtime="20250325 21:33:05.509"/>
</kw>
<msg timestamp="20250325 21:33:05.510" level="INFO">${get_part_3_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:03 GMT",
    "ContentLength": 0,
    "ETag": "\"3081ef0bb5e0dd4a7f06743a83cd748a-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250325 21:33:05.012" endtime="20250325 21:33:05.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_3_response}</arg>
<arg>\"ContentLength\": 0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:05.510" endtime="20250325 21:33:05.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_3_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:05.510" endtime="20250325 21:33:05.511"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:05.516" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:05.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:05.978" level="INFO">${output} = delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20250325 21:33:05.512" endtime="20250325 21:33:05.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:05.979" level="INFO">delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20250325 21:33:05.979" endtime="20250325 21:33:05.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:05.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:05.979" endtime="20250325 21:33:05.980"/>
</kw>
<status status="PASS" starttime="20250325 21:33:05.512" endtime="20250325 21:33:05.980"/>
</kw>
<msg timestamp="20250325 21:33:05.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:05.512" endtime="20250325 21:33:05.980"/>
</kw>
<msg timestamp="20250325 21:33:05.980" level="INFO">${output} = delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20250325 21:33:05.511" endtime="20250325 21:33:05.980"/>
</kw>
<status status="PASS" starttime="20250325 21:33:05.511" endtime="20250325 21:33:05.980"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:05.984" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:05.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:05.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:05.981" endtime="20250325 21:33:05.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:05.990" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:05.990" endtime="20250325 21:33:05.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:05.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:05.990" endtime="20250325 21:33:05.991"/>
</kw>
<status status="PASS" starttime="20250325 21:33:05.981" endtime="20250325 21:33:05.991"/>
</kw>
<msg timestamp="20250325 21:33:05.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:05.981" endtime="20250325 21:33:05.991"/>
</kw>
<status status="PASS" starttime="20250325 21:33:05.980" endtime="20250325 21:33:05.991"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:05.994" level="INFO">Running command 'rm -rf /tmp/big_file_1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:05.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:05.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:05.992" endtime="20250325 21:33:06.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:06.000" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:06.000" endtime="20250325 21:33:06.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:06.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:06.000" endtime="20250325 21:33:06.001"/>
</kw>
<status status="PASS" starttime="20250325 21:33:05.992" endtime="20250325 21:33:06.001"/>
</kw>
<msg timestamp="20250325 21:33:06.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:05.991" endtime="20250325 21:33:06.001"/>
</kw>
<status status="PASS" starttime="20250325 21:33:05.991" endtime="20250325 21:33:06.001"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:06.004" level="INFO">Running command 'rm -rf /tmp/big_file_2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:06.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:06.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:06.002" endtime="20250325 21:33:06.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:06.008" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:06.008" endtime="20250325 21:33:06.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:06.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:06.009" endtime="20250325 21:33:06.009"/>
</kw>
<status status="PASS" starttime="20250325 21:33:06.002" endtime="20250325 21:33:06.009"/>
</kw>
<msg timestamp="20250325 21:33:06.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:06.001" endtime="20250325 21:33:06.009"/>
</kw>
<status status="PASS" starttime="20250325 21:33:06.001" endtime="20250325 21:33:06.009"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:06.012" level="INFO">Running command 'rm -rf /tmp/big_file_3 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:06.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:06.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:06.010" endtime="20250325 21:33:06.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:06.016" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:06.016" endtime="20250325 21:33:06.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:06.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:06.016" endtime="20250325 21:33:06.017"/>
</kw>
<status status="PASS" starttime="20250325 21:33:06.010" endtime="20250325 21:33:06.017"/>
</kw>
<msg timestamp="20250325 21:33:06.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:06.010" endtime="20250325 21:33:06.017"/>
</kw>
<status status="PASS" starttime="20250325 21:33:06.009" endtime="20250325 21:33:06.017"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:33:02.441" endtime="20250325 21:33:06.017"/>
</test>
<test id="s1-s3-s14-t23" name="Create&amp;Download big file by multipart upload and get file not existed part number" line="296">
<kw name="Execute" library="os">
<arg>head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:06.021" level="INFO">Running command 'head -c 10000000 &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20250325 21:33:06.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:06.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:06.019" endtime="20250325 21:33:06.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:06.064" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:06.064" endtime="20250325 21:33:06.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:06.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:06.064" endtime="20250325 21:33:06.065"/>
</kw>
<status status="PASS" starttime="20250325 21:33:06.019" endtime="20250325 21:33:06.065"/>
</kw>
<msg timestamp="20250325 21:33:06.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:06.018" endtime="20250325 21:33:06.065"/>
</kw>
<status status="PASS" starttime="20250325 21:33:06.018" endtime="20250325 21:33:06.065"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:06.069" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:06.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:06.923" level="INFO">${output} = 2025-03-25 21:33:06,368 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:06,368 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:33:06.066" endtime="20250325 21:33:06.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:06.924" level="INFO">2025-03-25 21:33:06,368 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:06,368 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://encrypted/']
2025-03-25 21:33:06,368 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f5e3f94e820&gt;
2025-03-25 21:33:06,368 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f5e40239c10&gt;
2025-03-25 21:33:06,369 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f5e3ff2be50&gt;
2025-03-25 21:33:06,370 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-03-25 21:33:06,372 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f5e3f9bb4c0&gt;
2025-03-25 21:33:06,372 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f5e3f900820&gt;
2025-03-25 21:33:06,372 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f5e3f9d5310&gt;
2025-03-25 21:33:06,373 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,373 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f5e3f900820&gt;
2025-03-25 21:33:06,373 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f5e3f9d5310&gt;
2025-03-25 21:33:06,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,374 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,375 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5e3fefac70&gt;
2025-03-25 21:33:06,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,375 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5e3fefac70&gt;
2025-03-25 21:33:06,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,375 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5e3fefac70&gt;
2025-03-25 21:33:06,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,375 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,376 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,377 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5e3fefac70&gt;
2025-03-25 21:33:06,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,377 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5e3fefac70&gt;
2025-03-25 21:33:06,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,377 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5e3fefac70&gt;
2025-03-25 21:33:06,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,377 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,378 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,378 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,378 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,378 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5e3f8594c0&gt;
2025-03-25 21:33:06,378 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-03-25 21:33:06,378 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-03-25 21:33:06,379 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-03-25 21:33:06,401 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-03-25 21:33:06,401 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f5e4146f9d0&gt;
2025-03-25 21:33:06,407 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-03-25 21:33:06,415 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-03-25 21:33:06,434 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-03-25 21:33:06,437 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-03-25 21:33:06,439 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f5e40572a60&gt;
2025-03-25 21:33:06,439 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f5e40572820&gt;
2025-03-25 21:33:06,439 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:06,442 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:33:06,444 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-03-25 21:33:06,444 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:33:06,444 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:33:06,444 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:06,444 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:33:06,445 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f5e4146f9d0&gt;
2025-03-25 21:33:06,445 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f5e40572a60&gt;
2025-03-25 21:33:06,445 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f5e40572820&gt;
2025-03-25 21:33:06,446 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:06,447 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:33:06,449 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:33:06,449 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:33:06,449 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:06,449 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:33:06,450 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f5e4146f9d0&gt;
2025-03-25 21:33:06,450 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f5e40572a60&gt;
2025-03-25 21:33:06,450 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f5e40572820&gt;
2025-03-25 21:33:06,451 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:06,453 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-03-25 21:33:06,454 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-03-25 21:33:06,454 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-03-25 21:33:06,454 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-03-25 21:33:06,455 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-03-25 21:33:06,455 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-03-25 21:33:06,456 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:06,456 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5e3ec70820&gt;}) about to wait for the following futures []
2025-03-25 21:33:06,456 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5e3ec70820&gt;}) done waiting for dependent futures
2025-03-25 21:33:06,456 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5e3ec70820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f5e3ee9d8e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f5e3ec67dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f5e3ec67e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f5e3ec6c0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5e3ec70820&gt;}
2025-03-25 21:33:06,457 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f5e3ec6c0d0&gt; for transfer request: 0.
2025-03-25 21:33:06,457 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:06,457 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2025-03-25 21:33:06,457 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:33:06,457 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f5e3ee9d8e0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}
2025-03-25 21:33:06,457 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7f5e404bd4c0&gt;
2025-03-25 21:33:06,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7f5e404ba8b0&gt;
2025-03-25 21:33:06,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f5e404ba820&gt;
2025-03-25 21:33:06,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f5e404c0700&gt;
2025-03-25 21:33:06,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5e3ee77820&gt;&gt;
2025-03-25 21:33:06,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f5e3eefc6d0&gt;&gt;
2025-03-25 21:33:06,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f5e404ba670&gt;
2025-03-25 21:33:06,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f5e404c08b0&gt;
2025-03-25 21:33:06,458 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5e3ee77820&gt;&gt;
2025-03-25 21:33:06,458 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:33:06,459 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:33:06,459 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:33:06,459 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:33:06,459 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7f5e404bab80&gt;
2025-03-25 21:33:06,460 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f5e3ec6c0d0&gt; for transfer request: 0.
2025-03-25 21:33:06,460 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5e3ee777f0&gt;&gt;
2025-03-25 21:33:06,460 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f5e404ba280&gt;
2025-03-25 21:33:06,460 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:06,460 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f5e404c0d30&gt;
2025-03-25 21:33:06,460 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f5e404bdee0&gt;
2025-03-25 21:33:06,460 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f5e3ee9da60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:33:06,460 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f5e3fbf5790&gt;
2025-03-25 21:33:06,461 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f5e3ee9d9d0&gt;&gt;
2025-03-25 21:33:06,461 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f5e404ba4c0&gt;
2025-03-25 21:33:06,461 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f5e404c0820&gt;
2025-03-25 21:33:06,461 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5e3ee777f0&gt;&gt;
2025-03-25 21:33:06,461 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:33:06,461 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/encrypted/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250325T213306Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-03-25 21:33:06,461 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213306Z
20250325/us-west-1/s3/aws4_request
cf87cbf73da4c0e1deb6c7ba8fe377b102c92375365b727864ccc2c0c5df3e6d
2025-03-25 21:33:06,461 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
c90a1ad5c13ac2075b0f3dbc9aca3a30b06c8460387dabdef0e8c73e456ad71a
2025-03-25 21:33:06,461 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7f5e3fbf5820&gt;
2025-03-25 21:33:06,461 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f5e404c0670&gt;
2025-03-25 21:33:06,462 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/encrypted/big_file?uploads, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250325T213306Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=c90a1ad5c13ac2075b0f3dbc9aca3a30b06c8460387dabdef0e8c73e456ad71a', 'amz-sdk-invocation-id': b'd931d5cd-9d6b-4d16-805d-e672d9de7f1b', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2025-03-25 21:33:06,462 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-03-25 21:33:06,462 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f5e3dbc7370&gt;]
2025-03-25 21:33:06,463 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f5e3ec6c0d0&gt; for transfer request: 0.
2025-03-25 21:33:06,463 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f5e3dbc7370&gt;
2025-03-25 21:33:06,463 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:06,463 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f5e3dbc7370&gt;]
2025-03-25 21:33:06,463 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f5e3dbc7370&gt;
2025-03-25 21:33:06,463 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f5e3ec6c0d0&gt; for transfer request: 0.
2025-03-25 21:33:06,463 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-03-25 21:33:06,463 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f5e3dbc7370&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f5e3dbee250&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f5e3db89940&gt;]
2025-03-25 21:33:06,464 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f5e3dbc7370&gt;
2025-03-25 21:33:06,464 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:06,484 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /encrypted/big_file?uploads HTTP/1.1" 200 287
2025-03-25 21:33:06,484 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f5e404c0b80&gt;
2025-03-25 21:33:06,484 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f5e404c09d0&gt;
2025-03-25 21:33:06,484 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:33:06 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:33:06 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '7qieI7C2N9hvlIi', 'x-amz-request-id': 'a9f291d6-d863-4d47-839b-97f4209f0d09', 'content-length': '287'}
2025-03-25 21:33:06,485 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;encrypted&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2025-03-25 21:33:06,485 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;function _update_status_code at 0x7f5e404c0ca0&gt;
2025-03-25 21:33:06,485 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f5e3ee77760&gt;
2025-03-25 21:33:06,485 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:33:06,485 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5e3ee77820&gt;&gt;
2025-03-25 21:33:06,485 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f5e3f94bd30&gt;
2025-03-25 21:33:06,485 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:06,486 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:33:06,486 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f5e3ee9d8e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5e3db894f0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264'}
2025-03-25 21:33:06,486 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f5e404ba8b0&gt;
2025-03-25 21:33:06,486 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f5e404bddc0&gt;
2025-03-25 21:33:06,486 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f5e404ba820&gt;
2025-03-25 21:33:06,486 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f5e3dbee250&gt;
2025-03-25 21:33:06,486 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f5e404c0700&gt;
2025-03-25 21:33:06,486 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:33:06,487 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5e3ee77820&gt;&gt;
2025-03-25 21:33:06,487 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f5e3ee9d8e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5e3dbc7e20&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264'}
2025-03-25 21:33:06,487 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f5e3eefc6d0&gt;&gt;
2025-03-25 21:33:06,487 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f5e404ba8b0&gt;
2025-03-25 21:33:06,487 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f5e404ba670&gt;
2025-03-25 21:33:06,487 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f5e404bddc0&gt;
2025-03-25 21:33:06,487 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f5e404c08b0&gt;
2025-03-25 21:33:06,487 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f5e404ba820&gt;
2025-03-25 21:33:06,487 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5e3ee77820&gt;&gt;
2025-03-25 21:33:06,487 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f5e404c0700&gt;
2025-03-25 21:33:06,488 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5e3ee77820&gt;&gt;
2025-03-25 21:33:06,488 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:33:06,488 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f5e3eefc6d0&gt;&gt;
2025-03-25 21:33:06,488 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:33:06,488 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f5e404ba670&gt;
2025-03-25 21:33:06,488 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:33:06,488 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f5e404c08b0&gt;
2025-03-25 21:33:06,488 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:33:06,488 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5e3ee77820&gt;&gt;
2025-03-25 21:33:06,489 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f5e4062e8b0&gt;
2025-03-25 21:33:06,489 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:33:06,489 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:33:06,489 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:33:06,489 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:33:06,490 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f5e4062e8b0&gt;
2025-03-25 21:33:06,493 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f5e404bab80&gt;
2025-03-25 21:33:06,493 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-03-25 21:33:06,493 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5e3ee777f0&gt;&gt;
2025-03-25 21:33:06,493 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f5e404ba280&gt;
2025-03-25 21:33:06,493 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f5e404c0d30&gt;
2025-03-25 21:33:06,493 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f5e404bdee0&gt;
2025-03-25 21:33:06,493 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'mN5Q1yDUSHf2ZfcAKWTguQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5e3db894f0&gt;, 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f5e3ee9da60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'UploadId': '0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264', 'PartNumber': 2, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5e3db894f0&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:33:06,494 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f5e3fbf5790&gt;
2025-03-25 21:33:06,494 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f5e3ee9d9d0&gt;&gt;
2025-03-25 21:33:06,494 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f5e404ba4c0&gt;
2025-03-25 21:33:06,494 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f5e404c0820&gt;
2025-03-25 21:33:06,494 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5e3ee777f0&gt;&gt;
2025-03-25 21:33:06,496 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:33:06,496 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/big_file
partNumber=2&amp;uploadId=0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264
content-md5:mN5Q1yDUSHf2ZfcAKWTguQ==
host:s3g:9878
x-amz-content-sha256:b9353b594bea47ac6503993e1a424cb4fc1ed7cb90b5061d25e9777a46f78b70
x-amz-date:20250325T213306Z

content-md5;host;x-amz-content-sha256;x-amz-date
b9353b594bea47ac6503993e1a424cb4fc1ed7cb90b5061d25e9777a46f78b70
2025-03-25 21:33:06,496 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213306Z
20250325/us-west-1/s3/aws4_request
67d00fd8fb78b2f0630559d5f18a9ae7781e47446e2423bbe43cf6f4a4b04fa9
2025-03-25 21:33:06,496 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
dffeba791b265c286f2e80925f0c63439168f00b4e5bbef1baaf1a7d185e7526
2025-03-25 21:33:06,496 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f5e3fbf5820&gt;
2025-03-25 21:33:06,496 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f5e404c0670&gt;
2025-03-25 21:33:06,496 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/big_file?uploadId=0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'mN5Q1yDUSHf2ZfcAKWTguQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250325T213306Z', 'X-Amz-Content-SHA256': b'b9353b594bea47ac6503993e1a424cb4fc1ed7cb90b5061d25e9777a46f78b70', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=dffeba791b265c286f2e80925f0c63439168f00b4e5bbef1baaf1a7d185e7526', 'amz-sdk-invocation-id': b'e1931c9d-0e0e-4e4e-975b-d56a51ec39c2', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2025-03-25 21:33:06,497 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-03-25 21:33:06,506 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f5e404bab80&gt;
2025-03-25 21:33:06,506 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-03-25 21:33:06,506 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5e3ee777f0&gt;&gt;
2025-03-25 21:33:06,506 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f5e404ba280&gt;
2025-03-25 21:33:06,506 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f5e404c0d30&gt;
2025-03-25 21:33:06,506 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f5e404bdee0&gt;
2025-03-25 21:33:06,506 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'RGYbCYleVb2Ck9OZnfM4aA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5e3dbc7e20&gt;, 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f5e3ee9da60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'UploadId': '0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264', 'PartNumber': 1, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5e3dbc7e20&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:33:06,506 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f5e3fbf5790&gt;
2025-03-25 21:33:06,506 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f5e3ee9d9d0&gt;&gt;
2025-03-25 21:33:06,506 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f5e404ba4c0&gt;
2025-03-25 21:33:06,506 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f5e404c0820&gt;
2025-03-25 21:33:06,506 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5e3ee777f0&gt;&gt;
2025-03-25 21:33:06,514 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:33:06,514 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/big_file
partNumber=1&amp;uploadId=0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264
content-md5:RGYbCYleVb2Ck9OZnfM4aA==
host:s3g:9878
x-amz-content-sha256:dd5fffdab04f2c4912cb78c7f6847f5711ab468fd004e8a5ab663528c8051fa7
x-amz-date:20250325T213306Z

content-md5;host;x-amz-content-sha256;x-amz-date
dd5fffdab04f2c4912cb78c7f6847f5711ab468fd004e8a5ab663528c8051fa7
2025-03-25 21:33:06,514 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213306Z
20250325/us-west-1/s3/aws4_request
c6025794bc3aa4b9e07fb2f1741c78ad8335faa089315f2c6ea5955173a6aafe
2025-03-25 21:33:06,514 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
e5e1b5d33cb8002d8efc573893a9616ea5213000c9887b9f07b5e5d7179eede1
2025-03-25 21:33:06,514 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f5e3fbf5820&gt;
2025-03-25 21:33:06,514 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f5e404c0670&gt;
2025-03-25 21:33:06,514 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/big_file?uploadId=0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'RGYbCYleVb2Ck9OZnfM4aA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250325T213306Z', 'X-Amz-Content-SHA256': b'dd5fffdab04f2c4912cb78c7f6847f5711ab468fd004e8a5ab663528c8051fa7', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=e5e1b5d33cb8002d8efc573893a9616ea5213000c9887b9f07b5e5d7179eede1', 'amz-sdk-invocation-id': b'07598e8a-576d-4271-90a4-9b9af207f452', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2025-03-25 21:33:06,515 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-03-25 21:33:06,515 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-03-25 21:33:06,531 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/9.5 MiB (3.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (5.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (7.4 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (9.5 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (11.7 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/9.5 MiB (13.7 MiB/s) with 1 file(s) remaining 
2025-03-25 21:33:06,568 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (15.2 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/9.5 MiB (16.7 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/9.5 MiB (18.6 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/9.5 MiB (20.2 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/9.5 MiB (21.6 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/9.5 MiB (23.3 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/9.5 MiB (24.6 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/9.5 MiB (26.2 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/9.5 MiB (25.8 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/9.5 MiB (27.3 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/9.5 MiB (28.8 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/9.5 MiB (29.8 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/9.5 MiB (30.8 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/9.5 MiB (31.7 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/9.5 MiB (32.8 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/9.5 MiB (34.0 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/9.5 MiB (34.9 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/9.5 MiB (36.1 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/9.5 MiB (37.1 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/9.5 MiB (38.1 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/9.5 MiB (39.3 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/9.5 MiB (40.2 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/9.5 MiB (41.3 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/9.5 MiB (41.7 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/9.5 MiB (42.7 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/9.5 MiB (43.5 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/9.5 MiB (44.5 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/9.5 MiB (45.5 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/9.5 MiB (46.3 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/9.5 MiB (47.5 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/9.5 MiB (48.3 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/9.5 MiB (49.3 MiB/s) with 1 file(s) remaining 
2025-03-25 21:33:06,702 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/big_file?uploadId=0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264&amp;partNumber=2 HTTP/1.1" 200 0
2025-03-25 21:33:06,702 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f5e404c0b80&gt;
2025-03-25 21:33:06,702 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f5e404c09d0&gt;
2025-03-25 21:33:06,702 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:33:06 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:33:06 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '98de50d720d44877f665f7002964e0b9', 'server': 'Ozone', 'x-amz-id-2': '4NLnHJ1WrQ', 'x-amz-request-id': '36efc16d-3b3a-4edb-99fd-5ac91ed7c7f2', 'content-length': '0'}
2025-03-25 21:33:06,702 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2025-03-25 21:33:06,703 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f5e404c0ca0&gt;
2025-03-25 21:33:06,703 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f5e3ee77760&gt;
2025-03-25 21:33:06,703 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:33:06,703 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5e3ee77820&gt;&gt;
2025-03-25 21:33:06,703 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f5e3f94bd30&gt;
Completed 9.5 MiB/9.5 MiB (38.7 MiB/s) with 1 file(s) remaining 
2025-03-25 21:33:06,704 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:06,848 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/big_file?uploadId=0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264&amp;partNumber=1 HTTP/1.1" 200 0
2025-03-25 21:33:06,848 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f5e404c0b80&gt;
2025-03-25 21:33:06,849 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f5e404c09d0&gt;
2025-03-25 21:33:06,849 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:33:06 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:33:06 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '44661b09895e55bd8293d3999df33868', 'server': 'Ozone', 'x-amz-id-2': 'RstRbhcymvmGT', 'x-amz-request-id': 'ae69d3b0-fad0-46b1-ac44-d9ef5b19263d', 'content-length': '0'}
2025-03-25 21:33:06,849 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2025-03-25 21:33:06,849 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f5e404c0ca0&gt;
2025-03-25 21:33:06,849 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f5e3ee77760&gt;
2025-03-25 21:33:06,849 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:33:06,849 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5e3ee77820&gt;&gt;
2025-03-25 21:33:06,849 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f5e3f94bd30&gt;
2025-03-25 21:33:06,849 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-03-25 21:33:06,849 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f5e3db89940&gt;
2025-03-25 21:33:06,849 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-03-25 21:33:06,849 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f5e3ee9d8e0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}, 'upload_id': '0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264', 'parts': [{'ETag': '44661b09895e55bd8293d3999df33868', 'PartNumber': 1}, {'ETag': '98de50d720d44877f665f7002964e0b9', 'PartNumber': 2}]}
2025-03-25 21:33:06,850 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function sse_md5 at 0x7f5e404ba8b0&gt;
2025-03-25 21:33:06,850 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f5e404ba820&gt;
2025-03-25 21:33:06,850 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f5e404c0700&gt;
2025-03-25 21:33:06,850 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5e3ee77820&gt;&gt;
2025-03-25 21:33:06,850 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f5e3eefc6d0&gt;&gt;
2025-03-25 21:33:06,850 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f5e404ba670&gt;
2025-03-25 21:33:06,850 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f5e404c08b0&gt;
2025-03-25 21:33:06,850 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5e3ee77820&gt;&gt;
2025-03-25 21:33:06,850 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-03-25 21:33:06,850 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-03-25 21:33:06,850 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-03-25 21:33:06,850 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-03-25 21:33:06,851 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7f5e404bab80&gt;
2025-03-25 21:33:06,851 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5e3ee777f0&gt;&gt;
2025-03-25 21:33:06,851 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f5e404ba280&gt;
2025-03-25 21:33:06,851 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f5e404c0d30&gt;
2025-03-25 21:33:06,851 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f5e404bdee0&gt;
2025-03-25 21:33:06,851 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;44661b09895e55bd8293d3999df33868&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;98de50d720d44877f665f7002964e0b9&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f5e3ee9da60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'UploadId': '0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264', 'MultipartUpload': {'Parts': [{'ETag': '44661b09895e55bd8293d3999df33868', 'PartNumber': 1}, {'ETag': '98de50d720d44877f665f7002964e0b9', 'PartNumber': 2}]}}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-03-25 21:33:06,851 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f5e3fbf5790&gt;
2025-03-25 21:33:06,852 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f5e3ee9d9d0&gt;&gt;
2025-03-25 21:33:06,852 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f5e404ba4c0&gt;
2025-03-25 21:33:06,852 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f5e404c0820&gt;
2025-03-25 21:33:06,852 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5e3ee777f0&gt;&gt;
2025-03-25 21:33:06,852 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-03-25 21:33:06,852 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/encrypted/big_file
uploadId=0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264
host:s3g:9878
x-amz-content-sha256:ebd9d0f7a7e019a5217da8acd97f433bead03a88f1adb50ae2b4b4ef1ff531cf
x-amz-date:20250325T213306Z

host;x-amz-content-sha256;x-amz-date
ebd9d0f7a7e019a5217da8acd97f433bead03a88f1adb50ae2b4b4ef1ff531cf
2025-03-25 21:33:06,852 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250325T213306Z
20250325/us-west-1/s3/aws4_request
e96ca031f0339ff8d95c095d0a9aff45918a9cca52b372ead0818c8ae606fb33
2025-03-25 21:33:06,852 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
c7f1637379041a9fc06fe820d8520a0ad261fef181f7370f181fbb559f31f277
2025-03-25 21:33:06,852 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7f5e3fbf5820&gt;
2025-03-25 21:33:06,852 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f5e404c0670&gt;
2025-03-25 21:33:06,853 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/encrypted/big_file?uploadId=0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#6.8.0-1021-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250325T213306Z', 'X-Amz-Content-SHA256': b'ebd9d0f7a7e019a5217da8acd97f433bead03a88f1adb50ae2b4b4ef1ff531cf', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250325/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=c7f1637379041a9fc06fe820d8520a0ad261fef181f7370f181fbb559f31f277', 'amz-sdk-invocation-id': b'76eee75a-ecc3-487c-81da-33c0b42728a4', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2025-03-25 21:33:06,869 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /encrypted/big_file?uploadId=0195cf39-302c-7b25-bd6a-54ae056de3a2-114225210096091264 HTTP/1.1" 200 290
2025-03-25 21:33:06,869 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f5e404c0b80&gt;
2025-03-25 21:33:06,869 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f5e404c09d0&gt;
2025-03-25 21:33:06,869 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'date': 'Tue, 25 Mar 2025 21:33:06 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 25 Mar 2025 21:33:06 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'c9CIOncp48', 'x-amz-request-id': '6a1474d0-08e1-4167-ae8d-c3468e7a060c', 'content-length': '290'}
2025-03-25 21:33:06,869 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;encrypted&lt;/Location&gt;&lt;Bucket&gt;encrypted&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"6b533af3572a00fbf32ad9076c253338-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2025-03-25 21:33:06,870 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function _update_status_code at 0x7f5e404c0ca0&gt;
2025-03-25 21:33:06,870 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f5e3ee77760&gt;
2025-03-25 21:33:06,870 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2025-03-25 21:33:06,870 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5e3ee77820&gt;&gt;
2025-03-25 21:33:06,870 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f5e3f94bd30&gt;
2025-03-25 21:33:06,870 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://encrypted/big_file           
2025-03-25 21:33:06,871 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250325 21:33:06.923" endtime="20250325 21:33:06.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:06.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:06.925" endtime="20250325 21:33:06.925"/>
</kw>
<status status="PASS" starttime="20250325 21:33:06.066" endtime="20250325 21:33:06.925"/>
</kw>
<msg timestamp="20250325 21:33:06.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:06.066" endtime="20250325 21:33:06.926"/>
</kw>
<msg timestamp="20250325 21:33:06.927" level="INFO">${output} = 2025-03-25 21:33:06,368 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:06,368 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:33:06.066" endtime="20250325 21:33:06.927"/>
</kw>
<msg timestamp="20250325 21:33:06.927" level="INFO">${result} = 2025-03-25 21:33:06,368 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/6.8.0-1021-azure botocore/1.35.81
2025-03-25 21:33:06,368 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20250325 21:33:06.065" endtime="20250325 21:33:06.927"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${get_part_99_response}</var>
<arg>get-object --bucket ${BUCKET} --key big_file /tmp/big_file_1 --part-number 99</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:06.931" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key big_file /tmp/big_file_1 --part-number 99 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:07.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:07.421" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:06 GMT",
    "ContentLength": 0,
    "ETag": "\"6b533af3572a00fbf32ad9076c253338-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250325 21:33:06.929" endtime="20250325 21:33:07.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:07.422" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:06 GMT",
    "ContentLength": 0,
    "ETag": "\"6b533af3572a00fbf32ad9076c253338-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:33:07 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:33:07 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:33:07.421" endtime="20250325 21:33:07.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:07.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:07.422" endtime="20250325 21:33:07.422"/>
</kw>
<status status="PASS" starttime="20250325 21:33:06.928" endtime="20250325 21:33:07.422"/>
</kw>
<msg timestamp="20250325 21:33:07.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:06.928" endtime="20250325 21:33:07.423"/>
</kw>
<msg timestamp="20250325 21:33:07.423" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:06 GMT",
    "ContentLength": 0,
    "ETag": "\"6b533af3572a00fbf32ad9076c253338-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250325 21:33:06.928" endtime="20250325 21:33:07.423"/>
</kw>
<msg timestamp="20250325 21:33:07.423" level="INFO">${get_part_99_response} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:06 GMT",
    "ContentLength": 0,
    "ETag": "\"6b533af3572a00fbf32ad9076c253338-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20250325 21:33:06.927" endtime="20250325 21:33:07.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_99_response}</arg>
<arg>\"ContentLength\": 0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:07.423" endtime="20250325 21:33:07.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${get_part_99_response}</arg>
<arg>\"PartsCount\": 2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:07.423" endtime="20250325 21:33:07.424"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:07.427" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:07.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:07.872" level="INFO">${output} = delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20250325 21:33:07.425" endtime="20250325 21:33:07.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:07.873" level="INFO">delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20250325 21:33:07.872" endtime="20250325 21:33:07.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:07.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:07.873" endtime="20250325 21:33:07.873"/>
</kw>
<status status="PASS" starttime="20250325 21:33:07.425" endtime="20250325 21:33:07.873"/>
</kw>
<msg timestamp="20250325 21:33:07.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:07.424" endtime="20250325 21:33:07.873"/>
</kw>
<msg timestamp="20250325 21:33:07.874" level="INFO">${output} = delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20250325 21:33:07.424" endtime="20250325 21:33:07.874"/>
</kw>
<status status="PASS" starttime="20250325 21:33:07.424" endtime="20250325 21:33:07.874"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:07.877" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:07.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:07.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:07.875" endtime="20250325 21:33:07.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:07.884" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:07.883" endtime="20250325 21:33:07.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:07.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:07.884" endtime="20250325 21:33:07.884"/>
</kw>
<status status="PASS" starttime="20250325 21:33:07.874" endtime="20250325 21:33:07.884"/>
</kw>
<msg timestamp="20250325 21:33:07.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:07.874" endtime="20250325 21:33:07.885"/>
</kw>
<status status="PASS" starttime="20250325 21:33:07.874" endtime="20250325 21:33:07.885"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file_1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:07.888" level="INFO">Running command 'rm -rf /tmp/big_file_1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:07.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:07.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:07.886" endtime="20250325 21:33:07.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:07.892" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:07.892" endtime="20250325 21:33:07.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:07.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:07.892" endtime="20250325 21:33:07.893"/>
</kw>
<status status="PASS" starttime="20250325 21:33:07.885" endtime="20250325 21:33:07.893"/>
</kw>
<msg timestamp="20250325 21:33:07.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:07.885" endtime="20250325 21:33:07.893"/>
</kw>
<status status="PASS" starttime="20250325 21:33:07.885" endtime="20250325 21:33:07.893"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:33:06.018" endtime="20250325 21:33:07.893"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:32:36.076" endtime="20250325 21:33:07.894"/>
</suite>
<suite id="s1-s3-s15" name="Objecttagging" source="/opt/hadoop/smoketest/s3/objecttagging.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:33:07.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:07.905" endtime="20250325 21:33:07.905"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:33:07.905" endtime="20250325 21:33:07.905"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:33:07.905" endtime="20250325 21:33:07.905"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:33:07.905" endtime="20250325 21:33:07.905"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:33:07.905" endtime="20250325 21:33:07.905"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:33:07.906" endtime="20250325 21:33:07.906"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:33:07.906" endtime="20250325 21:33:07.906"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:33:07.906" endtime="20250325 21:33:07.906"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:33:07.906" endtime="20250325 21:33:07.906"/>
</kw>
<status status="PASS" starttime="20250325 21:33:07.905" endtime="20250325 21:33:07.906"/>
</kw>
<test id="s1-s3-s15-t1" name="Put object tagging" line="33">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:07.909" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250325 21:33:07.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:07.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:07.907" endtime="20250325 21:33:07.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:07.911" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:07.911" endtime="20250325 21:33:07.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:07.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:07.912" endtime="20250325 21:33:07.912"/>
</kw>
<status status="PASS" starttime="20250325 21:33:07.907" endtime="20250325 21:33:07.912"/>
</kw>
<msg timestamp="20250325 21:33:07.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:07.907" endtime="20250325 21:33:07.912"/>
</kw>
<status status="PASS" starttime="20250325 21:33:07.906" endtime="20250325 21:33:07.912"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:07.916" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:08.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:08.415" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:33:07.914" endtime="20250325 21:33:08.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:08.416" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:33:08.415" endtime="20250325 21:33:08.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:08.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:08.416" endtime="20250325 21:33:08.416"/>
</kw>
<status status="PASS" starttime="20250325 21:33:07.913" endtime="20250325 21:33:08.417"/>
</kw>
<msg timestamp="20250325 21:33:08.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:07.913" endtime="20250325 21:33:08.417"/>
</kw>
<msg timestamp="20250325 21:33:08.417" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:33:07.913" endtime="20250325 21:33:08.417"/>
</kw>
<msg timestamp="20250325 21:33:08.417" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250325 21:33:07.912" endtime="20250325 21:33:08.417"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:08.421" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-2648976766/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:08.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:08.904" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/putobject/key=value/f1",
            "LastModified": "2025-03-25T21:33:08.363Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250325 21:33:08.418" endtime="20250325 21:33:08.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:08.905" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-2648976766/putobject/key=value/f1",
            "LastModified": "2025-03-25T21:33:08.363Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-2648976766/putobject/key=value/zerobyte",
            "LastModified": "2025-03-25T21:32:37.538Z",
            "Size": 0,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-2648976766/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250325 21:33:08.904" endtime="20250325 21:33:08.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:08.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:08.905" endtime="20250325 21:33:08.905"/>
</kw>
<status status="PASS" starttime="20250325 21:33:08.418" endtime="20250325 21:33:08.905"/>
</kw>
<msg timestamp="20250325 21:33:08.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:08.418" endtime="20250325 21:33:08.905"/>
</kw>
<msg timestamp="20250325 21:33:08.906" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/putobject/key=value/f1",
            "LastModified": "2025-03-25T21:33:08.363Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250325 21:33:08.418" endtime="20250325 21:33:08.906"/>
</kw>
<msg timestamp="20250325 21:33:08.906" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-2648976766/putobject/key=value/f1",
            "LastModified": "2025-03-25T21:33:08.363Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250325 21:33:08.417" endtime="20250325 21:33:08.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:08.906" endtime="20250325 21:33:08.906"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:08.910" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:09.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:09.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:08.907" endtime="20250325 21:33:09.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:09.390" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:09.389" endtime="20250325 21:33:09.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:09.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:09.390" endtime="20250325 21:33:09.390"/>
</kw>
<status status="PASS" starttime="20250325 21:33:08.907" endtime="20250325 21:33:09.390"/>
</kw>
<msg timestamp="20250325 21:33:09.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:08.907" endtime="20250325 21:33:09.391"/>
</kw>
<msg timestamp="20250325 21:33:09.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:08.907" endtime="20250325 21:33:09.391"/>
</kw>
<msg timestamp="20250325 21:33:09.391" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:33:08.906" endtime="20250325 21:33:09.391"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:09.394" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:09.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:09.871" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:08 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:33:09.392" endtime="20250325 21:33:09.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:09.872" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:08 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:33:09 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Tue, 25 Mar 2025 21:33:09 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:33:09.871" endtime="20250325 21:33:09.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:09.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:09.872" endtime="20250325 21:33:09.872"/>
</kw>
<status status="PASS" starttime="20250325 21:33:09.392" endtime="20250325 21:33:09.872"/>
</kw>
<msg timestamp="20250325 21:33:09.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:09.392" endtime="20250325 21:33:09.872"/>
</kw>
<msg timestamp="20250325 21:33:09.872" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:08 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:33:09.391" endtime="20250325 21:33:09.872"/>
</kw>
<msg timestamp="20250325 21:33:09.873" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:08 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:33:09.391" endtime="20250325 21:33:09.873"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:09.873" endtime="20250325 21:33:09.873"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:09.876" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:08 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:33:09 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Tue, 25 Mar 2025 21:33:09 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:09.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:09.881" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250325 21:33:09.873" endtime="20250325 21:33:09.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:09.882" level="INFO">1</msg>
<status status="PASS" starttime="20250325 21:33:09.881" endtime="20250325 21:33:09.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:09.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:09.882" endtime="20250325 21:33:09.882"/>
</kw>
<msg timestamp="20250325 21:33:09.882" level="INFO">${tagCount} = 1</msg>
<status status="PASS" starttime="20250325 21:33:09.873" endtime="20250325 21:33:09.882"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:33:09.883" endtime="20250325 21:33:09.883"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key2", "Value": "tag-value2" },{ "Key": "tag-key3", "Value": "tag-value3" }]}'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:09.886" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key2", "Value": "tag-value2" },{ "Key": "tag-key3", "Value": "tag-value3" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:10.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:10.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:09.884" endtime="20250325 21:33:10.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:10.357" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:10.356" endtime="20250325 21:33:10.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:10.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:10.357" endtime="20250325 21:33:10.357"/>
</kw>
<status status="PASS" starttime="20250325 21:33:09.884" endtime="20250325 21:33:10.357"/>
</kw>
<msg timestamp="20250325 21:33:10.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:09.884" endtime="20250325 21:33:10.358"/>
</kw>
<msg timestamp="20250325 21:33:10.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:09.883" endtime="20250325 21:33:10.358"/>
</kw>
<msg timestamp="20250325 21:33:10.358" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:33:09.883" endtime="20250325 21:33:10.358"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:10.362" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:10.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:10.839" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:08 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:33:10.359" endtime="20250325 21:33:10.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:10.840" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:08 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:33:10 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:33:10 GMT"
}</msg>
<status status="PASS" starttime="20250325 21:33:10.839" endtime="20250325 21:33:10.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:10.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:10.840" endtime="20250325 21:33:10.840"/>
</kw>
<status status="PASS" starttime="20250325 21:33:10.359" endtime="20250325 21:33:10.841"/>
</kw>
<msg timestamp="20250325 21:33:10.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:10.359" endtime="20250325 21:33:10.841"/>
</kw>
<msg timestamp="20250325 21:33:10.841" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:08 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:33:10.358" endtime="20250325 21:33:10.841"/>
</kw>
<msg timestamp="20250325 21:33:10.841" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:08 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250325 21:33:10.358" endtime="20250325 21:33:10.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:10.841" endtime="20250325 21:33:10.841"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:10.844" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 25 Mar 2025 21:33:08 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 25 Mar 2025 21:33:10 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Tue, 25 Mar 2025 21:33:10 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:10.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:10.849" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250325 21:33:10.842" endtime="20250325 21:33:10.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:10.850" level="INFO">2</msg>
<status status="PASS" starttime="20250325 21:33:10.849" endtime="20250325 21:33:10.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:10.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:10.850" endtime="20250325 21:33:10.850"/>
</kw>
<msg timestamp="20250325 21:33:10.850" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250325 21:33:10.841" endtime="20250325 21:33:10.851"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:33:10.851" endtime="20250325 21:33:10.851"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/nonexistent --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:10.854" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket encrypted --key ozone-test-2648976766/nonexistent --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:11.332" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:33:11.332" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250325 21:33:10.852" endtime="20250325 21:33:11.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:11.333" level="INFO">
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250325 21:33:11.332" endtime="20250325 21:33:11.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:11.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:11.333" endtime="20250325 21:33:11.333"/>
</kw>
<msg timestamp="20250325 21:33:11.333" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250325 21:33:10.851" endtime="20250325 21:33:11.333"/>
</kw>
<msg timestamp="20250325 21:33:11.334" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250325 21:33:10.851" endtime="20250325 21:33:11.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:11.334" endtime="20250325 21:33:11.334"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:33:07.906" endtime="20250325 21:33:11.334"/>
</test>
<test id="s1-s3-s15-t2" name="Get object tagging" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:11.339" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object-tagging --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:11.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:11.807" level="INFO">${output} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250325 21:33:11.337" endtime="20250325 21:33:11.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:11.808" level="INFO">{
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250325 21:33:11.808" endtime="20250325 21:33:11.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:11.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:11.809" endtime="20250325 21:33:11.809"/>
</kw>
<status status="PASS" starttime="20250325 21:33:11.336" endtime="20250325 21:33:11.809"/>
</kw>
<msg timestamp="20250325 21:33:11.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:11.336" endtime="20250325 21:33:11.809"/>
</kw>
<msg timestamp="20250325 21:33:11.809" level="INFO">${output} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250325 21:33:11.336" endtime="20250325 21:33:11.809"/>
</kw>
<msg timestamp="20250325 21:33:11.809" level="INFO">${result} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250325 21:33:11.335" endtime="20250325 21:33:11.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagSet</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:11.810" endtime="20250325 21:33:11.810"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq '.TagSet | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:11.813" level="INFO">Running command 'echo '{
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}' | jq '.TagSet | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:11.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:11.818" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250325 21:33:11.810" endtime="20250325 21:33:11.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:11.818" level="INFO">2</msg>
<status status="PASS" starttime="20250325 21:33:11.818" endtime="20250325 21:33:11.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:11.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:11.818" endtime="20250325 21:33:11.819"/>
</kw>
<msg timestamp="20250325 21:33:11.819" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250325 21:33:11.810" endtime="20250325 21:33:11.819"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:33:11.819" endtime="20250325 21:33:11.819"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:33:11.334" endtime="20250325 21:33:11.819"/>
</test>
<test id="s1-s3-s15-t3" name="Delete object tagging" line="67">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:11.823" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object-tagging --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:12.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:12.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:11.822" endtime="20250325 21:33:12.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:12.301" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:12.301" endtime="20250325 21:33:12.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:12.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:12.302" endtime="20250325 21:33:12.302"/>
</kw>
<status status="PASS" starttime="20250325 21:33:11.821" endtime="20250325 21:33:12.302"/>
</kw>
<msg timestamp="20250325 21:33:12.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:11.821" endtime="20250325 21:33:12.302"/>
</kw>
<msg timestamp="20250325 21:33:12.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:11.821" endtime="20250325 21:33:12.302"/>
</kw>
<msg timestamp="20250325 21:33:12.302" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250325 21:33:11.820" endtime="20250325 21:33:12.302"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:12.306" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object-tagging --bucket encrypted --key ozone-test-2648976766/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:12.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:12.771" level="INFO">${output} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250325 21:33:12.304" endtime="20250325 21:33:12.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:12.772" level="INFO">{
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250325 21:33:12.771" endtime="20250325 21:33:12.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:12.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:12.772" endtime="20250325 21:33:12.772"/>
</kw>
<status status="PASS" starttime="20250325 21:33:12.304" endtime="20250325 21:33:12.772"/>
</kw>
<msg timestamp="20250325 21:33:12.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:12.303" endtime="20250325 21:33:12.772"/>
</kw>
<msg timestamp="20250325 21:33:12.772" level="INFO">${output} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250325 21:33:12.303" endtime="20250325 21:33:12.772"/>
</kw>
<msg timestamp="20250325 21:33:12.773" level="INFO">${result} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250325 21:33:12.303" endtime="20250325 21:33:12.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagSet</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:12.773" endtime="20250325 21:33:12.773"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq '.TagSet | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:12.776" level="INFO">Running command 'echo '{
    "TagSet": []
}' | jq '.TagSet | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:12.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:12.781" level="INFO">${output} = 0</msg>
<status status="PASS" starttime="20250325 21:33:12.773" endtime="20250325 21:33:12.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:12.781" level="INFO">0</msg>
<status status="PASS" starttime="20250325 21:33:12.781" endtime="20250325 21:33:12.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:12.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:12.782" endtime="20250325 21:33:12.782"/>
</kw>
<msg timestamp="20250325 21:33:12.782" level="INFO">${tagCount} = 0</msg>
<status status="PASS" starttime="20250325 21:33:12.773" endtime="20250325 21:33:12.782"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>0</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250325 21:33:12.782" endtime="20250325 21:33:12.782"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:33:11.820" endtime="20250325 21:33:12.783"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250325 21:33:07.898" endtime="20250325 21:33:12.783"/>
</suite>
<suite id="s1-s3-s16" name="Rclone" source="/opt/hadoop/smoketest/s3/rclone.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:33:12.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:12.792" endtime="20250325 21:33:12.792"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:33:12.792" endtime="20250325 21:33:12.792"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:33:12.792" endtime="20250325 21:33:12.792"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:33:12.792" endtime="20250325 21:33:12.792"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:33:12.792" endtime="20250325 21:33:12.792"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:33:12.793" endtime="20250325 21:33:12.793"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:33:12.793" endtime="20250325 21:33:12.793"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:33:12.793" endtime="20250325 21:33:12.793"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:33:12.793" endtime="20250325 21:33:12.793"/>
</kw>
<status status="PASS" starttime="20250325 21:33:12.792" endtime="20250325 21:33:12.793"/>
</kw>
<test id="s1-s3-s16-t1" name="Rclone Client Test" line="41">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:12.796" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:13.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:13.131" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:33:12.794" endtime="20250325 21:33:13.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:13.132" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:33:13.131" endtime="20250325 21:33:13.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:13.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:13.132" endtime="20250325 21:33:13.132"/>
</kw>
<status status="PASS" starttime="20250325 21:33:12.794" endtime="20250325 21:33:13.132"/>
</kw>
<msg timestamp="20250325 21:33:13.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:12.794" endtime="20250325 21:33:13.132"/>
</kw>
<msg timestamp="20250325 21:33:13.133" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:33:12.794" endtime="20250325 21:33:13.133"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:13.136" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:13.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:13.475" level="INFO">${output} = 93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3</msg>
<status status="PASS" starttime="20250325 21:33:13.134" endtime="20250325 21:33:13.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:13.476" level="INFO">93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3</msg>
<status status="PASS" starttime="20250325 21:33:13.475" endtime="20250325 21:33:13.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:13.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:13.476" endtime="20250325 21:33:13.476"/>
</kw>
<status status="PASS" starttime="20250325 21:33:13.133" endtime="20250325 21:33:13.477"/>
</kw>
<msg timestamp="20250325 21:33:13.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:13.133" endtime="20250325 21:33:13.477"/>
</kw>
<msg timestamp="20250325 21:33:13.477" level="INFO">${secret} = 93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3</msg>
<status status="PASS" starttime="20250325 21:33:13.133" endtime="20250325 21:33:13.477"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250325 21:33:13.477" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value '93b5a62db0567f57f7a62498f475552b391193c782b6f42b09e4e491271febe3'.</msg>
<status status="PASS" starttime="20250325 21:33:13.477" endtime="20250325 21:33:13.477"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250325 21:33:13.478" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/scm@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20250325 21:33:13.477" endtime="20250325 21:33:13.478"/>
</kw>
<status status="PASS" starttime="20250325 21:33:12.793" endtime="20250325 21:33:13.478"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>RCLONE_CONFIG</arg>
<arg>${RCLONE_CONFIG_PATH}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250325 21:33:13.478" level="INFO">Environment variable 'RCLONE_CONFIG' set to value '/tmp/rclone.conf'.</msg>
<status status="PASS" starttime="20250325 21:33:13.478" endtime="20250325 21:33:13.478"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>RCLONE_VERBOSE</arg>
<arg>${RCLONE_VERBOSE_LEVEL}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250325 21:33:13.478" level="INFO">Environment variable 'RCLONE_VERBOSE' set to value '2'.</msg>
<status status="PASS" starttime="20250325 21:33:13.478" endtime="20250325 21:33:13.478"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>rclone config create ${RCLONE_CONFIG_NAME} s3 env_auth=true provider=Other endpoint=${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:13.482" level="INFO">Running command 'rclone config create ozone s3 env_auth=true provider=Other endpoint=http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:13.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:13.544" level="INFO">${output} = 2025/03/25 21:33:13 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/03/25 21:33:13...</msg>
<status status="PASS" starttime="20250325 21:33:13.479" endtime="20250325 21:33:13.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:13.545" level="INFO">2025/03/25 21:33:13 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/03/25 21:33:13 NOTICE: Config file "/tmp/rclone.conf" not found - using defaults
2025/03/25 21:33:13 DEBUG : Saving config "provider" in section "ozone" of the config file
2025/03/25 21:33:13 DEBUG : Using default permissions for config file: -rw-------
2025/03/25 21:33:13 DEBUG : Saving config "endpoint" in section "ozone" of the config file
2025/03/25 21:33:13 DEBUG : Saving config "env_auth" in section "ozone" of the config file
2025/03/25 21:33:13 DEBUG : ozone: config in: state="", result=""
2025/03/25 21:33:13 DEBUG : ozone: config out: out=&lt;nil&gt;, err=&lt;nil&gt;
[ozone]
type = s3
provider = Other
endpoint = http://s3g:9878
env_auth = true
2025/03/25 21:33:13 DEBUG : rclone: Version "v1.68.2" finishing with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]</msg>
<status status="PASS" starttime="20250325 21:33:13.545" endtime="20250325 21:33:13.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:13.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:13.545" endtime="20250325 21:33:13.546"/>
</kw>
<status status="PASS" starttime="20250325 21:33:13.479" endtime="20250325 21:33:13.546"/>
</kw>
<msg timestamp="20250325 21:33:13.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:13.479" endtime="20250325 21:33:13.546"/>
</kw>
<msg timestamp="20250325 21:33:13.546" level="INFO">${result} = 2025/03/25 21:33:13 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/03/25 21:33:13...</msg>
<status status="PASS" starttime="20250325 21:33:13.478" endtime="20250325 21:33:13.546"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>rclone copy /opt/hadoop/smoketest ${RCLONE_CONFIG_NAME}:/${S3_VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:13.550" level="INFO">Running command 'rclone copy /opt/hadoop/smoketest ozone:/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:19.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:19.121" level="INFO">${output} = 2025/03/25 21:33:13 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/encrypted"]
2025/03/25 21:33:13 DEBUG : Creating backend with remote...</msg>
<status status="PASS" starttime="20250325 21:33:13.547" endtime="20250325 21:33:19.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:19.126" level="INFO">2025/03/25 21:33:13 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/encrypted"]
2025/03/25 21:33:13 DEBUG : Creating backend with remote "/opt/hadoop/smoketest"
2025/03/25 21:33:13 DEBUG : Using config file from "/tmp/rclone.conf"
2025/03/25 21:33:13 DEBUG : Creating backend with remote "ozone:/s3v/encrypted"
2025/03/25 21:33:13 DEBUG : fs cache: renaming cache item "ozone:/s3v/encrypted" to be canonical "ozone:s3v/encrypted"
2025/03/25 21:33:13 DEBUG : .env: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : README.md: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : __init__.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : commonlib.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : createbucketenv.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : createmrenv.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : csi.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : kinit-hadoop.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : kinit.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : mapreduce.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : test.sh: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : testlib.sh: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : balancer/testBalancer.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : debug/ozone-debug-corrupt-block.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : debug/ozone-debug-dead-datanode.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : debug/ozone-debug-ldb.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : debug/ozone-debug-stale-datanode.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : debug/ozone-debug-tests-ec3-2.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : debug/ozone-debug-tests-ec6-3.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : debug/ozone-debug-tests.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : debug/ozone-debug.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : basic/basic.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : basic/getconf.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : basic/links.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : basic/ozone-shell-lib.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : basic/ozone-shell-single.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : basic/ozone-shell.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : basic/single_node.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : failing/test1.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : failing/test2.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : fcq/s3_om_fcq.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : auditparser/auditparser.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : gdpr/gdpr.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : freon/echoRPCLoad.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : freon/generate-chunk.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : ec/basic.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : admincli/admin.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : ec/lib.resource: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : ec/read.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : ec/rewrite.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : ec/upgrade-ec-check.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : certrotation/cert-rotation.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : certrotation/root-ca-rotation-client-checks.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : httpfs/operations.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : httpfs/operations_tests.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : compatibility/dn-one-rocksdb.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : compatibility/dn.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : compatibility/om.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : compatibility/read.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : compatibility/recon.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : compatibility/scm.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : compatibility/setup.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : compatibility/write.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : grpc/grpc-om-s3-metrics.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : lib/fs.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : lib/fs_tests.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : lib/os.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : lib/os_tests.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : lib/string.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : lib/string_tests.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : ozone-lib/freon.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : freon/generate.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : ozone-lib/shell.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : ozone-lib/shell_tests.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : cli/classpath.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : cli/envvars.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : ozonefs/hadoopo3fs.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : ozonefs/ozonefs.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : ozonefs/setup.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : recon/recon-api.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : recon/recon-nssummary.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : freon/hsync.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : repair/bucket-encryption.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : freon/metadata-generate.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : replication/wait.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : freon/read-write-key.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : freon/remove.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : freon/validate-chunk.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : freon/validate.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : scmha/primordial-scm.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : scmha/root-ca-rotation.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : scmha/scm-decommission.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : scmha/scm-leader-transfer.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : snapshot/snapshot-acls.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : snapshot/snapshot-fs.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : snapshot/snapshot-setup.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : snapshot/snapshot-sh.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/MultipartUpload.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/README.md: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/__init__.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/awss3.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/awss3virtualhost.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/boto3.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/boto_client.py: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/bucketcreate.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/bucketdelete.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/buckethead.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/bucketlist.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/commonawslib.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/freon.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/mpu_lib.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/objectcopy.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/objectcopys3a.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/objectdelete.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/objecthead.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/objectmultidelete.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/objectputget.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : om-ratis/testOMAdminCmd.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : omha/data-creation-before-om-bootstrap.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : omha/data-validation-after-om-bootstrap.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : spnego/web.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : omha/om-cancel-prepare.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : omha/om-fetch-key.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : omha/om-leader-transfer.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : snapshot/upgrade-snapshot-check.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : omha/om-prepare.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : omha/om-prepared.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : omha/om-roles.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : omha/testOMHA.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : security/S3-secret.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : security/admin-cert.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : security/ozone-secure-fs.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : security/ozone-secure-owner-s3.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : security/ozone-secure-s3.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : security/ozone-secure-tenant.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : security/ozone-secure-token.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : admincli/cert.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : recon/recon-taskstatus.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : hsync/upgrade-hsync-check.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/objecttagging.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : topology/cli.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/rclone.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/s3_compatbility_check.sh: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/s3_getsecret.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/secretgenerate.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/secretrevoke.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : s3/webui.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : upgrade/check-finalization.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : topology/loaddata.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : topology/readdata.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : upgrade/finalize.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : upgrade/generate.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : upgrade/prepare.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : upgrade/validate.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : admincli/container.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : admincli/datanode.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : admincli/lease-recovery.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : admincli/pipeline.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : admincli/printTopology.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : admincli/reconfigure.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : admincli/replicationmanager.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : admincli/safemode.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : admincli/scmrole.robot: Need to transfer - File not found at Destination
2025/03/25 21:33:13 DEBUG : S3 bucket s3v path encrypted: Waiting for checks to finish
2025/03/25 21:33:13 DEBUG : S3 bucket s3v path encrypted: Waiting for transfers to finish
2025/03/25 21:33:13 INFO  : S3 bucket s3v path encrypted: Bucket "s3v" created with ACL ""
2025/03/25 21:33:13 DEBUG : __init__.robot: md5 = 3e4f357bbd75e1f408f5730125e3d69f OK
2025/03/25 21:33:13 INFO  : __init__.robot: Copied (new)
2025/03/25 21:33:13 DEBUG : .env: md5 = 856bb7fb5c872feedbd56751ab2de082 OK
2025/03/25 21:33:13 INFO  : .env: Copied (new)
2025/03/25 21:33:13 DEBUG : README.md: md5 = 17df896fbc01fff5fb5b9db87fd9e014 OK
2025/03/25 21:33:13 INFO  : README.md: Copied (new)
2025/03/25 21:33:13 DEBUG : commonlib.robot: md5 = f35ee74dcb4b089c1dd2a06c8d59a7cb OK
2025/03/25 21:33:13 INFO  : commonlib.robot: Copied (new)
2025/03/25 21:33:13 DEBUG : createmrenv.robot: md5 = 76f31b9aa05ce60f5b2960a224ba8cfd OK
2025/03/25 21:33:13 INFO  : createmrenv.robot: Copied (new)
2025/03/25 21:33:13 DEBUG : csi.robot: md5 = b626d511d7707277a894085bf5374e83 OK
2025/03/25 21:33:13 INFO  : csi.robot: Copied (new)
2025/03/25 21:33:13 DEBUG : createbucketenv.robot: md5 = c879380e6beff95ce11e3a64a51f113e OK
2025/03/25 21:33:13 INFO  : createbucketenv.robot: Copied (new)
2025/03/25 21:33:13 DEBUG : kinit-hadoop.robot: md5 = 8401390e0e40e74a4185c2b7f4187b01 OK
2025/03/25 21:33:13 INFO  : kinit-hadoop.robot: Copied (new)
2025/03/25 21:33:13 DEBUG : kinit.robot: md5 = ff777fbe3aa12927c1de1e4a3d0126bf OK
2025/03/25 21:33:13 INFO  : kinit.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : test.sh: md5 = ed5682637036980f884a70c9d898cffd OK
2025/03/25 21:33:14 INFO  : test.sh: Copied (new)
2025/03/25 21:33:14 DEBUG : mapreduce.robot: md5 = 0f9c6faf7612a3a08a73382cc5cc3285 OK
2025/03/25 21:33:14 INFO  : mapreduce.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : testlib.sh: md5 = 854af5a9711319c1c1d472e1919f5980 OK
2025/03/25 21:33:14 INFO  : testlib.sh: Copied (new)
2025/03/25 21:33:14 DEBUG : balancer/testBalancer.robot: md5 = b100fea9912fc01d1e27cc1b77c83b31 OK
2025/03/25 21:33:14 INFO  : balancer/testBalancer.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : debug/ozone-debug-corrupt-block.robot: md5 = 36a6e7365f4610d458871af80644370e OK
2025/03/25 21:33:14 INFO  : debug/ozone-debug-corrupt-block.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : debug/ozone-debug-dead-datanode.robot: md5 = 11e2354888e750fb967b1bae317177a4 OK
2025/03/25 21:33:14 INFO  : debug/ozone-debug-dead-datanode.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : debug/ozone-debug-ldb.robot: md5 = b8ccca17d5a70220be57068aaabdf361 OK
2025/03/25 21:33:14 INFO  : debug/ozone-debug-ldb.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : debug/ozone-debug-stale-datanode.robot: md5 = 121f59de6c7aa5f2e963343702b9d11b OK
2025/03/25 21:33:14 INFO  : debug/ozone-debug-stale-datanode.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : debug/ozone-debug-tests-ec3-2.robot: md5 = f4d595ed6fc949da866876efb193d013 OK
2025/03/25 21:33:14 INFO  : debug/ozone-debug-tests-ec3-2.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : debug/ozone-debug-tests.robot: md5 = 62ce3abc9b9128a292d87ad1fdc8fc54 OK
2025/03/25 21:33:14 INFO  : debug/ozone-debug-tests.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : debug/ozone-debug-tests-ec6-3.robot: md5 = b6e936c3c2fa997e936910610a805454 OK
2025/03/25 21:33:14 INFO  : debug/ozone-debug-tests-ec6-3.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : basic/basic.robot: md5 = 82a250b46e17af336904e2a40ae44f7c OK
2025/03/25 21:33:14 INFO  : basic/basic.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : debug/ozone-debug.robot: md5 = b8f5d2764c0de7bdd5e8720a1743b577 OK
2025/03/25 21:33:14 INFO  : debug/ozone-debug.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : basic/links.robot: md5 = e12a2214f323103b90e5dc88e00d771a OK
2025/03/25 21:33:14 INFO  : basic/links.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : basic/getconf.robot: md5 = e4b3cc6aba745ad47ae7096b96b696d7 OK
2025/03/25 21:33:14 INFO  : basic/getconf.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : basic/ozone-shell-lib.robot: md5 = 43e0705f055b64f0d928ec7208880688 OK
2025/03/25 21:33:14 INFO  : basic/ozone-shell-lib.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : basic/ozone-shell-single.robot: md5 = 91830dc70ef59cdfc3776547feecf417 OK
2025/03/25 21:33:14 INFO  : basic/ozone-shell-single.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : basic/ozone-shell.robot: md5 = 3afa3f07707cfbf3931b321af6db8332 OK
2025/03/25 21:33:14 INFO  : basic/ozone-shell.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : basic/single_node.robot: md5 = 83014215421eac19113e5d9e73d3b5d8 OK
2025/03/25 21:33:14 INFO  : basic/single_node.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : failing/test2.robot: md5 = 48a8a3810b50776e3c666ad8329874c4 OK
2025/03/25 21:33:14 INFO  : failing/test2.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : failing/test1.robot: md5 = 096d2965be1aba0411e6f60d8b90db60 OK
2025/03/25 21:33:14 INFO  : failing/test1.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : auditparser/auditparser.robot: md5 = 285b8ffb3b3a62410b490cf35f156ab9 OK
2025/03/25 21:33:14 INFO  : auditparser/auditparser.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : fcq/s3_om_fcq.robot: md5 = 09872d18952b1ed19476e9be82197d97 OK
2025/03/25 21:33:14 INFO  : fcq/s3_om_fcq.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : gdpr/gdpr.robot: md5 = 55db38304c3687e1ced9f24c5351acc3 OK
2025/03/25 21:33:14 INFO  : gdpr/gdpr.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : freon/echoRPCLoad.robot: md5 = 2fc53080896aa6c46c9065a2f95f8a06 OK
2025/03/25 21:33:14 INFO  : freon/echoRPCLoad.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : freon/generate-chunk.robot: md5 = b2ea5843932f9dd4aace06b987a5a95b OK
2025/03/25 21:33:14 INFO  : freon/generate-chunk.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : ec/basic.robot: md5 = 5c31a5db433ed08496f786ee27531a8e OK
2025/03/25 21:33:14 INFO  : ec/basic.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : admincli/admin.robot: md5 = d39b70dc555c6c987f6cc5bed2811b3d OK
2025/03/25 21:33:14 INFO  : admincli/admin.robot: Copied (new)
2025/03/25 21:33:14 DEBUG : ec/lib.resource: md5 = 9db19e6c4eec84a56e1527a0e5c0eedb OK
2025/03/25 21:33:14 INFO  : ec/lib.resource: Copied (new)
2025/03/25 21:33:15 DEBUG : ec/read.robot: md5 = 6a1409d13888ee6c452afae4e1fa5440 OK
2025/03/25 21:33:15 INFO  : ec/read.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : ec/rewrite.robot: md5 = 58ee9e6157cf8e88593d686d55eebea5 OK
2025/03/25 21:33:15 INFO  : ec/rewrite.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : ec/upgrade-ec-check.robot: md5 = 98acf9175a001fb901e6fc90808a6c5b OK
2025/03/25 21:33:15 INFO  : ec/upgrade-ec-check.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : certrotation/cert-rotation.robot: md5 = c5c790317ea695e9a10056e4d3345633 OK
2025/03/25 21:33:15 INFO  : certrotation/cert-rotation.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : httpfs/operations.robot: md5 = 3abce0ef1c2d9e19c348e2eb093a0123 OK
2025/03/25 21:33:15 INFO  : httpfs/operations.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : certrotation/root-ca-rotation-client-checks.robot: md5 = 753e60393a600d76facb7a02c9377546 OK
2025/03/25 21:33:15 INFO  : certrotation/root-ca-rotation-client-checks.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : compatibility/dn-one-rocksdb.robot: md5 = 88430ae0b01aad442da17efb6dceeff5 OK
2025/03/25 21:33:15 INFO  : compatibility/dn-one-rocksdb.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : compatibility/om.robot: md5 = e5472b10866575e3035b2ff890e17f03 OK
2025/03/25 21:33:15 INFO  : compatibility/om.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : httpfs/operations_tests.robot: md5 = b5037537a59479fa397f521858151de7 OK
2025/03/25 21:33:15 INFO  : httpfs/operations_tests.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : compatibility/dn.robot: md5 = 1562fd650324206ae5229fcaf4d978c3 OK
2025/03/25 21:33:15 INFO  : compatibility/dn.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : compatibility/read.robot: md5 = 9efb635ef918f329d6c8e47aca554f3d OK
2025/03/25 21:33:15 INFO  : compatibility/read.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : compatibility/scm.robot: md5 = b52956a2ccb6ca2ead8138b966a3cf69 OK
2025/03/25 21:33:15 INFO  : compatibility/scm.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : compatibility/recon.robot: md5 = 2aa8dbd2330da544996377aaf3bcdd65 OK
2025/03/25 21:33:15 INFO  : compatibility/recon.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : compatibility/setup.robot: md5 = abee4cf943dea0d9eb9404a65c62259c OK
2025/03/25 21:33:15 INFO  : compatibility/setup.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : grpc/grpc-om-s3-metrics.robot: md5 = 46e600db0f1a54a11f51e680ea737807 OK
2025/03/25 21:33:15 INFO  : grpc/grpc-om-s3-metrics.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : compatibility/write.robot: md5 = 27c4325259d4b71fd120a49c8a5b6246 OK
2025/03/25 21:33:15 INFO  : compatibility/write.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : lib/fs.robot: md5 = 37f5052dda89a5965f9b25e32a19400f OK
2025/03/25 21:33:15 INFO  : lib/fs.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : lib/fs_tests.robot: md5 = 659a8762cd74723d9f1aa58553c56bd3 OK
2025/03/25 21:33:15 INFO  : lib/fs_tests.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : lib/os_tests.robot: md5 = 2fff5aeac04f4cd0b44ad37027aee143 OK
2025/03/25 21:33:15 INFO  : lib/os_tests.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : lib/os.robot: md5 = 0d5c26d90f992ec5e493fbd261b802a0 OK
2025/03/25 21:33:15 INFO  : lib/os.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : lib/string_tests.robot: md5 = 6cb4abeaa32800093caab1e3ef3a6dc8 OK
2025/03/25 21:33:15 INFO  : lib/string_tests.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : lib/string.robot: md5 = 3f328b056d05b4c0b1de0155300722b3 OK
2025/03/25 21:33:15 INFO  : lib/string.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : ozone-lib/freon.robot: md5 = 92b3859196c46cf840c46923815692a5 OK
2025/03/25 21:33:15 INFO  : ozone-lib/freon.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : freon/generate.robot: md5 = 794114406a50ce0efa2eb018c63e3569 OK
2025/03/25 21:33:15 INFO  : freon/generate.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : ozone-lib/shell.robot: md5 = 31382dc80887332e0c4cd46ce5d11d18 OK
2025/03/25 21:33:15 INFO  : ozone-lib/shell.robot: Copied (new)
2025/03/25 21:33:15 DEBUG : ozone-lib/shell_tests.robot: md5 = 0731e1512a9ef08685cd5f1a671a0374 OK
2025/03/25 21:33:15 INFO  : ozone-lib/shell_tests.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : cli/classpath.robot: md5 = 56071fa2cdcf819011667d597f0de700 OK
2025/03/25 21:33:16 INFO  : cli/classpath.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : cli/envvars.robot: md5 = 97be7992b4b7681defe5391bbe55c75d OK
2025/03/25 21:33:16 INFO  : cli/envvars.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : ozonefs/hadoopo3fs.robot: md5 = af6c7cdaa17e6814065c51678a719de8 OK
2025/03/25 21:33:16 INFO  : ozonefs/hadoopo3fs.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : ozonefs/ozonefs.robot: md5 = c065378df949a1edbd8438dc17438755 OK
2025/03/25 21:33:16 INFO  : ozonefs/ozonefs.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : ozonefs/setup.robot: md5 = 654df9c1aba73bbe70615bd138bbe9ea OK
2025/03/25 21:33:16 INFO  : ozonefs/setup.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : recon/recon-api.robot: md5 = f5af7d2e74c23d011027ac387f521a4b OK
2025/03/25 21:33:16 INFO  : recon/recon-api.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : freon/hsync.robot: md5 = 67303a57b73bf512cd3c115506691ab4 OK
2025/03/25 21:33:16 INFO  : freon/hsync.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : recon/recon-nssummary.robot: md5 = 6913f9075574a8ea22e660e42bda74fe OK
2025/03/25 21:33:16 INFO  : recon/recon-nssummary.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : repair/bucket-encryption.robot: md5 = 85fb3e7e6bc38056a137d3b55df020da OK
2025/03/25 21:33:16 INFO  : repair/bucket-encryption.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : replication/wait.robot: md5 = 6c2234cd0a195a66958f1b95e06ca22f OK
2025/03/25 21:33:16 INFO  : replication/wait.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : freon/metadata-generate.robot: md5 = 9212bb41f3c6725b4cfbf27563256dc1 OK
2025/03/25 21:33:16 INFO  : freon/metadata-generate.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : freon/read-write-key.robot: md5 = 97b5b3757ce62078e01acb30bf857bc9 OK
2025/03/25 21:33:16 INFO  : freon/read-write-key.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : freon/remove.robot: md5 = 069bd821affc2700b55e95e923debb40 OK
2025/03/25 21:33:16 INFO  : freon/remove.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : scmha/primordial-scm.robot: md5 = c6be6e3c99778e59a6941565ea904f37 OK
2025/03/25 21:33:16 INFO  : scmha/primordial-scm.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : freon/validate-chunk.robot: md5 = 59e91563fa0a2fb6c3c84ca4e85fa12a OK
2025/03/25 21:33:16 INFO  : freon/validate-chunk.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : freon/validate.robot: md5 = de7167e08a627d9edba48f6493b3b21d OK
2025/03/25 21:33:16 INFO  : freon/validate.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : scmha/scm-decommission.robot: md5 = 4f92e183f637f288f1c09cc28e5c35f8 OK
2025/03/25 21:33:16 INFO  : scmha/scm-decommission.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : scmha/root-ca-rotation.robot: md5 = bcffcde9f44f71177636bd67d64cde0c OK
2025/03/25 21:33:16 INFO  : scmha/root-ca-rotation.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : snapshot/snapshot-acls.robot: md5 = 5165ce0e5d63ddba8123fccdbc7fe74e OK
2025/03/25 21:33:16 INFO  : snapshot/snapshot-acls.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : scmha/scm-leader-transfer.robot: md5 = 51aaf7c7dd2e3a9ef6ce31b50e617425 OK
2025/03/25 21:33:16 INFO  : scmha/scm-leader-transfer.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : snapshot/snapshot-fs.robot: md5 = 8303ebaf2fc12efc0eedf897a3b8388b OK
2025/03/25 21:33:16 INFO  : snapshot/snapshot-fs.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : snapshot/snapshot-setup.robot: md5 = deee56580a640f4f2a24c27e2875deef OK
2025/03/25 21:33:16 INFO  : snapshot/snapshot-setup.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : s3/MultipartUpload.robot: md5 = e6673c38f9e2f03353cc475166e3564f OK
2025/03/25 21:33:16 INFO  : s3/MultipartUpload.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : snapshot/snapshot-sh.robot: md5 = b7089719e57e909dc80406968156276e OK
2025/03/25 21:33:16 INFO  : snapshot/snapshot-sh.robot: Copied (new)
2025/03/25 21:33:16 DEBUG : s3/README.md: md5 = 4967f548b5fbc96c22e590f6352de20c OK
2025/03/25 21:33:16 INFO  : s3/README.md: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/__init__.robot: md5 = 23063b5cc483e26c9391946748d0e9c0 OK
2025/03/25 21:33:17 INFO  : s3/__init__.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/awss3virtualhost.robot: md5 = 96d3468b5d85ac399b3955acfb0f5dfb OK
2025/03/25 21:33:17 INFO  : s3/awss3virtualhost.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/awss3.robot: md5 = 613af88fef39a5eb7fd1ad90f655accf OK
2025/03/25 21:33:17 INFO  : s3/awss3.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/boto3.robot: md5 = 57deba6f5134410aa7132bcbba35bf02 OK
2025/03/25 21:33:17 INFO  : s3/boto3.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/boto_client.py: md5 = 67191f51cc17259b5b31d0083dd1c8af OK
2025/03/25 21:33:17 INFO  : s3/boto_client.py: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/bucketcreate.robot: md5 = 62dba6ffa76fe172082a845dca604d6e OK
2025/03/25 21:33:17 INFO  : s3/bucketcreate.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/bucketdelete.robot: md5 = c1d00766ad49e0c124d009c6007d5c91 OK
2025/03/25 21:33:17 INFO  : s3/bucketdelete.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/buckethead.robot: md5 = 2bb1986d15d3ae567300b5e313e894bb OK
2025/03/25 21:33:17 INFO  : s3/buckethead.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/bucketlist.robot: md5 = fbb9afb6fa4f7f2ac2eea383f8bf319e OK
2025/03/25 21:33:17 INFO  : s3/bucketlist.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/freon.robot: md5 = a0a59d691e3baf7be0aea34198319f79 OK
2025/03/25 21:33:17 INFO  : s3/freon.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/commonawslib.robot: md5 = 24fad4f84a921ea9819269ea5c1c1104 OK
2025/03/25 21:33:17 INFO  : s3/commonawslib.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/objectcopy.robot: md5 = 30e2c16d6411104c566d3d278fe9158c OK
2025/03/25 21:33:17 INFO  : s3/objectcopy.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/mpu_lib.robot: md5 = 64b8fcd0c76085408602f5224a615a5d OK
2025/03/25 21:33:17 INFO  : s3/mpu_lib.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/objectdelete.robot: md5 = e088e8a4177b2a88978d9d7b0e0eca7c OK
2025/03/25 21:33:17 INFO  : s3/objectdelete.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/objectcopys3a.robot: md5 = bef140aaa9c1c502fabaf129f9ac516c OK
2025/03/25 21:33:17 INFO  : s3/objectcopys3a.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/objecthead.robot: md5 = 013c35538293ecef75dec800ad2052e2 OK
2025/03/25 21:33:17 INFO  : s3/objecthead.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/objectmultidelete.robot: md5 = df1f9f0b36f9093d141d3eee4ea1a941 OK
2025/03/25 21:33:17 INFO  : s3/objectmultidelete.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : s3/objectputget.robot: md5 = 7219881d97216436b5c6a392a958128c OK
2025/03/25 21:33:17 INFO  : s3/objectputget.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : om-ratis/testOMAdminCmd.robot: md5 = b3e566d742593fdcbd4b25c49c1df9b9 OK
2025/03/25 21:33:17 INFO  : om-ratis/testOMAdminCmd.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : omha/data-validation-after-om-bootstrap.robot: md5 = ebef0dcb8b6ade5f72ea7805764edd61 OK
2025/03/25 21:33:17 INFO  : omha/data-validation-after-om-bootstrap.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : omha/data-creation-before-om-bootstrap.robot: md5 = 7ce911a55a7fb5edd84c77e3942ae57b OK
2025/03/25 21:33:17 INFO  : omha/data-creation-before-om-bootstrap.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : spnego/web.robot: md5 = 6891b9a6a120773f347563f2b334730e OK
2025/03/25 21:33:17 INFO  : spnego/web.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : omha/om-cancel-prepare.robot: md5 = 9d970a2b8e82faa67bfb3f2559f3b2d5 OK
2025/03/25 21:33:17 INFO  : omha/om-cancel-prepare.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : omha/om-fetch-key.robot: md5 = 107bc35bac744c63479a62c484173dcd OK
2025/03/25 21:33:17 INFO  : omha/om-fetch-key.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : omha/om-leader-transfer.robot: md5 = 2300435cfdb5fd36295701e65c730217 OK
2025/03/25 21:33:17 INFO  : omha/om-leader-transfer.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : snapshot/upgrade-snapshot-check.robot: md5 = 94052acf25531c5779f6e67fe1a5e5d8 OK
2025/03/25 21:33:17 INFO  : snapshot/upgrade-snapshot-check.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : omha/om-prepare.robot: md5 = d555d6a6176d694c0e68139157d7178f OK
2025/03/25 21:33:17 INFO  : omha/om-prepare.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : omha/om-roles.robot: md5 = 72254e4c5dcce7eb25e939dd388c184e OK
2025/03/25 21:33:17 INFO  : omha/om-roles.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : omha/testOMHA.robot: md5 = 76420a98f0abcd940eb808e88dca8ddb OK
2025/03/25 21:33:17 INFO  : omha/testOMHA.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : omha/om-prepared.robot: md5 = cef530c89296bc0f60aa3abc750c67ae OK
2025/03/25 21:33:17 INFO  : omha/om-prepared.robot: Copied (new)
2025/03/25 21:33:17 DEBUG : security/S3-secret.robot: md5 = d7dcdb93c4d1410f43c692576b9a021e OK
2025/03/25 21:33:17 INFO  : security/S3-secret.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : security/admin-cert.robot: md5 = 77c7d7f0aa43c7b81b26021bd3da0531 OK
2025/03/25 21:33:18 INFO  : security/admin-cert.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : security/ozone-secure-fs.robot: md5 = feac34a4a3e86b047206038a9018f31a OK
2025/03/25 21:33:18 INFO  : security/ozone-secure-fs.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : security/ozone-secure-s3.robot: md5 = f2ee95c122db6a64890f21818ff5d0f5 OK
2025/03/25 21:33:18 INFO  : security/ozone-secure-s3.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : security/ozone-secure-owner-s3.robot: md5 = 3e7cfb86bcac237e0fbb8d56f0f744b0 OK
2025/03/25 21:33:18 INFO  : security/ozone-secure-owner-s3.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : security/ozone-secure-token.robot: md5 = f0bc9c409bf869d559d0386a5d3bd826 OK
2025/03/25 21:33:18 INFO  : security/ozone-secure-token.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : security/ozone-secure-tenant.robot: md5 = 638546f4ca6201cfc7bba27b87a2495c OK
2025/03/25 21:33:18 INFO  : security/ozone-secure-tenant.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : hsync/upgrade-hsync-check.robot: md5 = fa4e2635324abcf9be7106de160defb3 OK
2025/03/25 21:33:18 INFO  : hsync/upgrade-hsync-check.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : s3/objecttagging.robot: md5 = 91be9cf21ad20dcdec46bd5b4ee2df90 OK
2025/03/25 21:33:18 INFO  : s3/objecttagging.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : s3/s3_compatbility_check.sh: md5 = 034162b7078c6076ebb59eaa4b5473cc OK
2025/03/25 21:33:18 INFO  : s3/s3_compatbility_check.sh: Copied (new)
2025/03/25 21:33:18 DEBUG : s3/rclone.robot: md5 = d21ab56698189510215111a278dad68e OK
2025/03/25 21:33:18 INFO  : s3/rclone.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : s3/s3_getsecret.robot: md5 = 13e88d6b5040c3bfd441335745f803bc OK
2025/03/25 21:33:18 INFO  : s3/s3_getsecret.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : s3/secretgenerate.robot: md5 = 6488717e37a1b9dfdcb45948caf4eaf2 OK
2025/03/25 21:33:18 INFO  : s3/secretgenerate.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : s3/webui.robot: md5 = 9bb0ab60ddd8632befc79c71790aeaa0 OK
2025/03/25 21:33:18 INFO  : s3/webui.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : s3/secretrevoke.robot: md5 = fad00ae3b97b2b3e21180a73f59f44c8 OK
2025/03/25 21:33:18 INFO  : s3/secretrevoke.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : recon/recon-taskstatus.robot: md5 = 103ee5fcec5f0332cb9efd35f877aabd OK
2025/03/25 21:33:18 INFO  : recon/recon-taskstatus.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : admincli/cert.robot: md5 = 77dfdeefa42fc03d3ad817a2764b9278 OK
2025/03/25 21:33:18 INFO  : admincli/cert.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : topology/cli.robot: md5 = 1312a3e8e54ae621f71b8c579610389c OK
2025/03/25 21:33:18 INFO  : topology/cli.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : topology/readdata.robot: md5 = 924403a1188642f6cb1f939631d9b8fd OK
2025/03/25 21:33:18 INFO  : topology/readdata.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : upgrade/check-finalization.robot: md5 = 2ec44c3cfb922f39cc948eee24d3ee44 OK
2025/03/25 21:33:18 INFO  : upgrade/check-finalization.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : topology/loaddata.robot: md5 = 6f2723e7d07650f411a67a272b33de40 OK
2025/03/25 21:33:18 INFO  : topology/loaddata.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : upgrade/prepare.robot: md5 = 6b07fdc028074a0ea045f14392770610 OK
2025/03/25 21:33:18 INFO  : upgrade/prepare.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : upgrade/generate.robot: md5 = 87c3babbadb7231a37035b0fb45c012d OK
2025/03/25 21:33:18 INFO  : upgrade/generate.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : upgrade/finalize.robot: md5 = 2a8a50ebe55fd6527750e3f997a3caed OK
2025/03/25 21:33:18 INFO  : upgrade/finalize.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : upgrade/validate.robot: md5 = 4997452324a0fd6c01066d94d2938704 OK
2025/03/25 21:33:18 INFO  : upgrade/validate.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : admincli/container.robot: md5 = a7eb0d23c26a124b37bf2286589a01d2 OK
2025/03/25 21:33:18 INFO  : admincli/container.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : admincli/lease-recovery.robot: md5 = dedf24150a762af48094f7ac0fb0cf46 OK
2025/03/25 21:33:18 INFO  : admincli/lease-recovery.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : admincli/pipeline.robot: md5 = f21de9178c946f815dca4591c48b6dce OK
2025/03/25 21:33:18 INFO  : admincli/pipeline.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : admincli/datanode.robot: md5 = b80f648efc34bae344513a2bbf822420 OK
2025/03/25 21:33:18 INFO  : admincli/datanode.robot: Copied (new)
2025/03/25 21:33:18 DEBUG : admincli/printTopology.robot: md5 = b13fb6db17d23a519907f231ccf56059 OK
2025/03/25 21:33:18 INFO  : admincli/printTopology.robot: Copied (new)
2025/03/25 21:33:19 DEBUG : admincli/reconfigure.robot: md5 = 1a9e5cf67cb3472c99ca26262e522fcf OK
2025/03/25 21:33:19 INFO  : admincli/reconfigure.robot: Copied (new)
2025/03/25 21:33:19 DEBUG : admincli/safemode.robot: md5 = d547033e4e042a61474a44e175954b86 OK
2025/03/25 21:33:19 INFO  : admincli/safemode.robot: Copied (new)
2025/03/25 21:33:19 DEBUG : admincli/replicationmanager.robot: md5 = 93b30cc65865d2d684e987c4b94610e4 OK
2025/03/25 21:33:19 INFO  : admincli/replicationmanager.robot: Copied (new)
2025/03/25 21:33:19 DEBUG : admincli/scmrole.robot: md5 = c7a5aa9ad1e2277764da1517ff91e386 OK
2025/03/25 21:33:19 INFO  : admincli/scmrole.robot: Copied (new)
2025/03/25 21:33:19 INFO  : 
Transferred:   	  558.387 KiB / 558.387 KiB, 100%, 105.185 KiB/s, ETA 0s
Transferred:          153 / 153, 100%
Elapsed time:         5.5s

2025/03/25 21:33:19 DEBUG : 15 go routines active</msg>
<status status="PASS" starttime="20250325 21:33:19.124" endtime="20250325 21:33:19.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:19.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:19.129" endtime="20250325 21:33:19.130"/>
</kw>
<status status="PASS" starttime="20250325 21:33:13.547" endtime="20250325 21:33:19.131"/>
</kw>
<msg timestamp="20250325 21:33:19.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:13.547" endtime="20250325 21:33:19.131"/>
</kw>
<msg timestamp="20250325 21:33:19.135" level="INFO">${result} = 2025/03/25 21:33:13 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/encrypted"]
2025/03/25 21:33:13 DEBUG : Creating backend with remote...</msg>
<status status="PASS" starttime="20250325 21:33:13.546" endtime="20250325 21:33:19.136"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20250325 21:33:12.793" endtime="20250325 21:33:19.136"/>
</test>
<doc>S3 gateway test with rclone client</doc>
<status status="PASS" starttime="20250325 21:33:12.784" endtime="20250325 21:33:19.138"/>
</suite>
<suite id="s1-s3-s17" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:33:19.157" endtime="20250325 21:33:19.157"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:19.162" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:19.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:19.171" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:33:19.159" endtime="20250325 21:33:19.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:19.172" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:33:19.171" endtime="20250325 21:33:19.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:19.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:19.172" endtime="20250325 21:33:19.173"/>
</kw>
<status status="PASS" starttime="20250325 21:33:19.158" endtime="20250325 21:33:19.173"/>
</kw>
<msg timestamp="20250325 21:33:19.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:19.158" endtime="20250325 21:33:19.173"/>
</kw>
<msg timestamp="20250325 21:33:19.173" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:33:19.158" endtime="20250325 21:33:19.173"/>
</kw>
<msg timestamp="20250325 21:33:19.174" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:33:19.157" endtime="20250325 21:33:19.174"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:33:19.174" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:33:19.174" endtime="20250325 21:33:19.174"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:19.180" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:19.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:19.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:19.177" endtime="20250325 21:33:19.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:19.202" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:19.202" endtime="20250325 21:33:19.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:19.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:19.203" endtime="20250325 21:33:19.203"/>
</kw>
<status status="PASS" starttime="20250325 21:33:19.176" endtime="20250325 21:33:19.203"/>
</kw>
<msg timestamp="20250325 21:33:19.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:19.176" endtime="20250325 21:33:19.203"/>
</kw>
<status status="PASS" starttime="20250325 21:33:19.175" endtime="20250325 21:33:19.203"/>
</kw>
<status status="PASS" starttime="20250325 21:33:19.175" endtime="20250325 21:33:19.203"/>
</kw>
<status status="PASS" starttime="20250325 21:33:19.156" endtime="20250325 21:33:19.204"/>
</kw>
<status status="PASS" starttime="20250325 21:33:19.156" endtime="20250325 21:33:19.204"/>
</kw>
<test id="s1-s3-s17-t1" name="Without OM service ID" line="32">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:33:19.204" endtime="20250325 21:33:19.205"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:19.208" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:21.627" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:33:21.627" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:19.205" endtime="20250325 21:33:21.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:21.628" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:21.627" endtime="20250325 21:33:21.628"/>
</kw>
<status status="PASS" starttime="20250325 21:33:19.205" endtime="20250325 21:33:21.628"/>
</kw>
<status status="PASS" starttime="20250325 21:33:19.205" endtime="20250325 21:33:21.628"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:21.631" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:24.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:24.164" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=8c70e756cb25bf00736da2d35265ee92cf1720010e928e140bc64099c6886281</msg>
<status status="PASS" starttime="20250325 21:33:21.629" endtime="20250325 21:33:24.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:24.165" level="INFO">awsAccessKey=testuser2
awsSecret=8c70e756cb25bf00736da2d35265ee92cf1720010e928e140bc64099c6886281</msg>
<status status="PASS" starttime="20250325 21:33:24.165" endtime="20250325 21:33:24.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:24.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:24.165" endtime="20250325 21:33:24.166"/>
</kw>
<status status="PASS" starttime="20250325 21:33:21.629" endtime="20250325 21:33:24.166"/>
</kw>
<msg timestamp="20250325 21:33:24.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:21.629" endtime="20250325 21:33:24.166"/>
</kw>
<msg timestamp="20250325 21:33:24.166" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=8c70e756cb25bf00736da2d35265ee92cf1720010e928e140bc64099c6886281</msg>
<status status="PASS" starttime="20250325 21:33:21.628" endtime="20250325 21:33:24.166"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:24.167" endtime="20250325 21:33:24.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:24.167" endtime="20250325 21:33:24.167"/>
</kw>
<status status="PASS" starttime="20250325 21:33:24.166" endtime="20250325 21:33:24.167"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:24.170" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:26.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:26.856" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:33:24.168" endtime="20250325 21:33:26.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:26.857" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:33:26.856" endtime="20250325 21:33:26.857"/>
</kw>
<status status="PASS" starttime="20250325 21:33:24.168" endtime="20250325 21:33:26.857"/>
</kw>
<status status="PASS" starttime="20250325 21:33:24.167" endtime="20250325 21:33:26.857"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250325 21:33:19.204" endtime="20250325 21:33:26.857"/>
</test>
<test id="s1-s3-s17-t2" name="With OM service ID" line="39">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250325 21:33:26.859" level="INFO">Execution passed with message:
duplicate test in non-HA env.</msg>
<status status="PASS" starttime="20250325 21:33:26.858" endtime="20250325 21:33:26.859"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20250325 21:33:26.859" endtime="20250325 21:33:26.859"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20250325 21:33:26.859" endtime="20250325 21:33:26.859"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250325 21:33:26.860" endtime="20250325 21:33:26.860"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<status status="NOT RUN" starttime="20250325 21:33:26.860" endtime="20250325 21:33:26.860"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20250325 21:33:26.860" endtime="20250325 21:33:26.860"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250325 21:33:26.858" endtime="20250325 21:33:26.860">duplicate test in non-HA env.</status>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20250325 21:33:19.141" endtime="20250325 21:33:26.860"/>
</suite>
<suite id="s1-s3-s18" name="Secretgenerate" source="/opt/hadoop/smoketest/s3/secretgenerate.robot">
<test id="s1-s3-s18-t1" name="S3 Gateway Generate Secret" line="35">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:33:26.869" endtime="20250325 21:33:26.869"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:26.873" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:26.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:26.877" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:33:26.870" endtime="20250325 21:33:26.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:26.877" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:33:26.877" endtime="20250325 21:33:26.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:26.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:26.877" endtime="20250325 21:33:26.878"/>
</kw>
<status status="PASS" starttime="20250325 21:33:26.870" endtime="20250325 21:33:26.878"/>
</kw>
<msg timestamp="20250325 21:33:26.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:26.870" endtime="20250325 21:33:26.878"/>
</kw>
<msg timestamp="20250325 21:33:26.878" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:33:26.870" endtime="20250325 21:33:26.878"/>
</kw>
<msg timestamp="20250325 21:33:26.878" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:33:26.869" endtime="20250325 21:33:26.878"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:33:26.879" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:33:26.879" endtime="20250325 21:33:26.879"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:26.882" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:26.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:26.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:26.880" endtime="20250325 21:33:26.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:26.901" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:26.901" endtime="20250325 21:33:26.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:26.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:26.901" endtime="20250325 21:33:26.902"/>
</kw>
<status status="PASS" starttime="20250325 21:33:26.880" endtime="20250325 21:33:26.902"/>
</kw>
<msg timestamp="20250325 21:33:26.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:26.880" endtime="20250325 21:33:26.902"/>
</kw>
<status status="PASS" starttime="20250325 21:33:26.879" endtime="20250325 21:33:26.902"/>
</kw>
<status status="PASS" starttime="20250325 21:33:26.879" endtime="20250325 21:33:26.902"/>
</kw>
<status status="PASS" starttime="20250325 21:33:26.869" endtime="20250325 21:33:26.902"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:26.906" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:29.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:29.611" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:33:26.903" endtime="20250325 21:33:29.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:29.612" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:33:29.611" endtime="20250325 21:33:29.612"/>
</kw>
<status status="PASS" starttime="20250325 21:33:26.902" endtime="20250325 21:33:29.612"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:29.615" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:32.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:32.256" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:33:29.612" endtime="20250325 21:33:32.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:32.256" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:33:32.256" endtime="20250325 21:33:32.257"/>
</kw>
<status status="PASS" starttime="20250325 21:33:29.612" endtime="20250325 21:33:32.257"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:32.259" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:34.858" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:33:34.858" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:32.257" endtime="20250325 21:33:34.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:34.859" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:34.858" endtime="20250325 21:33:34.859"/>
</kw>
<status status="PASS" starttime="20250325 21:33:32.257" endtime="20250325 21:33:34.859"/>
</kw>
<status status="PASS" starttime="20250325 21:33:26.902" endtime="20250325 21:33:34.859"/>
</kw>
<status status="PASS" starttime="20250325 21:33:26.869" endtime="20250325 21:33:34.859"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:33:34.859" endtime="20250325 21:33:34.860"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:34.863" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:34.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:34.982" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:33:34.861" endtime="20250325 21:33:34.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:34.983" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.10:19878...
* Connected to s3g (172.19.0.10) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGep+sXlfcJvYpN4wALj8AND4jykbHuuPZNHJ9HLVzwBW7bpLP8JnGilJgv27CaT861PxNQuKmrxEc6DBZkPHL38ZDcYGKzWRp+NlAju91Qyroqh0gz/K34V5H9VzEwa3JtJUyCZAZWe5mCC236/re/qSnH4RiJQ9R5IwgThDOXjx8elenuxmGr60vgzNtzY64Lst5XJGw3CjtCnGWTI9QuCqVmw2HG5Dj1g726D0bmuhNCUEg+pvN06kswp0EwhXWneF2LcYJPN+6UukJx7on9zZUpc/Qq53T597TJZdj0hkn3e8nrdP5dQzHnhaXXmx9mOEw1OJWDdT4z/AM28TSePN43KwwKxUU5oQLm38xYmn5fzympAesh+RpIHWMIHToAMCARKigcsEgciJtireGsSysoJtorQbuu5uLyxiZDHPdrHYJix7mU1J7GUowlJ7DmUFCHw1jpecPvpADCmlvrQ0HYuqNxxv9fF0CynD45SC/nItZweGZC9bC1flGAMSQEWU2cdO/OlSqXbOrxZiGEdj13VnwAh+JUjnhtggO2g4kNz30Nv05EQxtCeFj9IbW7kkzFkVysywrzA4V1RmV7XydFFI/N8NwNsot4OoyEU7yNXqblHI9OyahZX2gwlwSWek+Em06wqMk0yrFp4eQwBGEQ==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; date: Tue, 25 Mar 2025 21:33:34 GMT
&lt; cache-control: no-cache
&lt; expires: Tue, 25 Mar 2025 21:33:34 GMT
&lt; pragma: no-cache
&lt; content-type: application/xml
&lt; x-content-type-options: nosniff
&lt; x-xss-protection: 1; mode=block
&lt; x-frame-options: SAMEORIGIN
&lt; www-authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQs+X+VrLsrAeh78vUuREqzWp2lMp1UZEBRg7uUE4vWo67YqlOCaH7o1NDuc9awSfiYje7mpgM85pev1I8y/wjG5L3Q==
&lt; set-cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1742974414894&amp;s=//N6Sx28f4NZwd7/U8ipw/kxj9wjkUOidVrangf1wCM="; HttpOnly
&lt; content-length: 216
&lt; 
{ [216 bytes data]

100   216  100   216    0     0   1963      0 --:--:-- --:--:-- --:--:--  1945
100   216  100   216    0     0   1963      0 --:--:-- --:--:-- --:--:--  1945
* Connection #0 to host s3g left intact
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;testuser/scm@EXAMPLE.COM&lt;/awsAccessKey&gt;&lt;awsSecret&gt;1237e99bbac2e9f9b0b6c2f766c514588913f3b7aba5d7254225d266973c495a&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20250325 21:33:34.982" endtime="20250325 21:33:34.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:34.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:34.983" endtime="20250325 21:33:34.983"/>
</kw>
<status status="PASS" starttime="20250325 21:33:34.860" endtime="20250325 21:33:34.983"/>
</kw>
<msg timestamp="20250325 21:33:34.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:34.860" endtime="20250325 21:33:34.984"/>
</kw>
<msg timestamp="20250325 21:33:34.984" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:33:34.860" endtime="20250325 21:33:34.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:34.984" endtime="20250325 21:33:34.984"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250325 21:33:34.985" endtime="20250325 21:33:34.985"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:34.989" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:37.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:37.598" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:33:34.986" endtime="20250325 21:33:37.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:37.599" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:33:37.598" endtime="20250325 21:33:37.599"/>
</kw>
<status status="PASS" starttime="20250325 21:33:34.986" endtime="20250325 21:33:37.599"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:37.602" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:40.234" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:33:40.235" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:37.600" endtime="20250325 21:33:40.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:40.235" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:40.235" endtime="20250325 21:33:40.236"/>
</kw>
<status status="PASS" starttime="20250325 21:33:37.599" endtime="20250325 21:33:40.236"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:40.239" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:42.790" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:33:42.790" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:40.236" endtime="20250325 21:33:42.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:42.791" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:42.790" endtime="20250325 21:33:42.791"/>
</kw>
<status status="PASS" starttime="20250325 21:33:40.236" endtime="20250325 21:33:42.791"/>
</kw>
<status status="PASS" starttime="20250325 21:33:34.986" endtime="20250325 21:33:42.791"/>
</kw>
<status status="PASS" starttime="20250325 21:33:34.985" endtime="20250325 21:33:42.791"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:33:26.868" endtime="20250325 21:33:42.791"/>
</test>
<test id="s1-s3-s18-t2" name="S3 Gateway Secret Already Exists" line="41">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:33:42.792" endtime="20250325 21:33:42.793"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:42.796" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:42.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:42.800" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:33:42.794" endtime="20250325 21:33:42.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:42.801" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:33:42.800" endtime="20250325 21:33:42.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:42.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:42.801" endtime="20250325 21:33:42.801"/>
</kw>
<status status="PASS" starttime="20250325 21:33:42.794" endtime="20250325 21:33:42.801"/>
</kw>
<msg timestamp="20250325 21:33:42.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:42.793" endtime="20250325 21:33:42.802"/>
</kw>
<msg timestamp="20250325 21:33:42.802" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:33:42.793" endtime="20250325 21:33:42.802"/>
</kw>
<msg timestamp="20250325 21:33:42.802" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:33:42.793" endtime="20250325 21:33:42.802"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:33:42.802" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:33:42.802" endtime="20250325 21:33:42.802"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:42.805" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:42.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:42.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:33:42.803" endtime="20250325 21:33:42.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:42.839" level="INFO"/>
<status status="PASS" starttime="20250325 21:33:42.838" endtime="20250325 21:33:42.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:42.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:42.839" endtime="20250325 21:33:42.840"/>
</kw>
<status status="PASS" starttime="20250325 21:33:42.803" endtime="20250325 21:33:42.840"/>
</kw>
<msg timestamp="20250325 21:33:42.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:42.803" endtime="20250325 21:33:42.840"/>
</kw>
<status status="PASS" starttime="20250325 21:33:42.803" endtime="20250325 21:33:42.840"/>
</kw>
<status status="PASS" starttime="20250325 21:33:42.802" endtime="20250325 21:33:42.840"/>
</kw>
<status status="PASS" starttime="20250325 21:33:42.792" endtime="20250325 21:33:42.840"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:42.843" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:45.631" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:33:45.631" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:42.841" endtime="20250325 21:33:45.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:45.632" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:45.632" endtime="20250325 21:33:45.633"/>
</kw>
<status status="PASS" starttime="20250325 21:33:42.840" endtime="20250325 21:33:45.633"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:45.636" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:48.355" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:33:48.355" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:45.633" endtime="20250325 21:33:48.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:48.356" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:48.356" endtime="20250325 21:33:48.356"/>
</kw>
<status status="PASS" starttime="20250325 21:33:45.633" endtime="20250325 21:33:48.356"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:48.359" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:51.169" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:33:51.169" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:48.357" endtime="20250325 21:33:51.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:51.170" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:51.170" endtime="20250325 21:33:51.170"/>
</kw>
<status status="PASS" starttime="20250325 21:33:48.356" endtime="20250325 21:33:51.171"/>
</kw>
<status status="PASS" starttime="20250325 21:33:42.840" endtime="20250325 21:33:51.171"/>
</kw>
<status status="PASS" starttime="20250325 21:33:42.792" endtime="20250325 21:33:51.171"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:33:51.171" endtime="20250325 21:33:51.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:51.175" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:53.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:53.732" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8d1a577b7daa11ad078deda888e5bf0d52fef10c7d496d35e2455c9ed54e9c1e</msg>
<status status="PASS" starttime="20250325 21:33:51.172" endtime="20250325 21:33:53.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:53.733" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8d1a577b7daa11ad078deda888e5bf0d52fef10c7d496d35e2455c9ed54e9c1e</msg>
<status status="PASS" starttime="20250325 21:33:53.733" endtime="20250325 21:33:53.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:53.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:53.733" endtime="20250325 21:33:53.734"/>
</kw>
<status status="PASS" starttime="20250325 21:33:51.172" endtime="20250325 21:33:53.734"/>
</kw>
<msg timestamp="20250325 21:33:53.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:51.172" endtime="20250325 21:33:53.734"/>
</kw>
<status status="PASS" starttime="20250325 21:33:51.171" endtime="20250325 21:33:53.734"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:53.738" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:53.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:53.863" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:33:53.736" endtime="20250325 21:33:53.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:53.865" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.10:19878...
* Connected to s3g (172.19.0.10) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGT2RFE/jRa9K0Sror42fqlzxtAuTpOj1qkGCeGN3NvHoo+rhxc6JA7J8vwP5TI1a310MQWLrsug0m+kfB5/aJFe1SCRK81+s4rcwjJOs+3haTOIT/yZ7Cu/sKT32q+aZUSrhUmTud/ZputUGalYBvx+uAIujl96XJhbPMDkSFhIZrfgPeT/Zd4jgkl7Qq7sur70ij0uKRat/Z/QuwCH7b+6xTJ5Q4QToNpf1UuDIiZGAObXWZNmp4kER0U9jRY5pLoIxBYP78tOT+H8fjfklX169cM02HJI5el/vVd49Onl7FXYRG1BtApLDOSYG5OBsYF8OqDm5Di1Vv1w11tJuWI9dryQPSH9WWD+Ah9pfMIQjb1iEp51Q7FsApIHWMIHToAMCARKigcsEgcjxEGYzPqr/Uyyi//UXfdWBMkMAN+a1eWPiSQA4SCl/T4JhIcZYQ+iz8yiaBQ+Mt0z+m5RafC7rYHrguILDBCJLqfWg/by8f9t5/16qMIwf0lHu8sOnEuSbHc8nBAv2I9BNM1WDQqfAIrQiM650dMpY/9mvp05dMXQ7gd7nVJ2HKfmN0rfstfKFS+JhCu2iUw6jsCg5mQcX1CvhY7d/OOjXul4Ex0cbWMheEbd+T7O924GCXd8G6V2Lvaym0g9YxIeYtyvD+cGvFQ==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 400 S3_SECRET_ALREADY_EXISTS
&lt; pragma: no-cache
&lt; x-content-type-options: nosniff
&lt; x-xss-protection: 1; mode=block
&lt; x-frame-options: SAMEORIGIN
&lt; www-authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQh52aGZ6EM07/cJBR2jFrmc5p9n16DqW0D+kT/O9d0+577Zy+P/bGjuDs4EoyIDiIZfMtTXkftX7a3KlQ7ibgnsEgQ==
&lt; set-cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1742974433837&amp;s=k6axkKRV1Yec14QSOSpcWjGmqDowP0vh5quqPb47W3Y="; HttpOnly
&lt; content-length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250325 21:33:53.864" endtime="20250325 21:33:53.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:33:53.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:33:53.865" endtime="20250325 21:33:53.866"/>
</kw>
<status status="PASS" starttime="20250325 21:33:53.735" endtime="20250325 21:33:53.866"/>
</kw>
<msg timestamp="20250325 21:33:53.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:33:53.735" endtime="20250325 21:33:53.866"/>
</kw>
<msg timestamp="20250325 21:33:53.866" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:33:53.734" endtime="20250325 21:33:53.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 400 S3_SECRET_ALREADY_EXISTS</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:33:53.866" endtime="20250325 21:33:53.867"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:53.871" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:56.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:33:56.464" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:33:53.868" endtime="20250325 21:33:56.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:56.465" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:33:56.464" endtime="20250325 21:33:56.465"/>
</kw>
<status status="PASS" starttime="20250325 21:33:53.868" endtime="20250325 21:33:56.465"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:56.468" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:33:58.983" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:33:58.983" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:56.465" endtime="20250325 21:33:58.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:33:58.984" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:58.984" endtime="20250325 21:33:58.984"/>
</kw>
<status status="PASS" starttime="20250325 21:33:56.465" endtime="20250325 21:33:58.984"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:33:58.987" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:01.586" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:01.586" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:33:58.985" endtime="20250325 21:34:01.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:01.586" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:01.586" endtime="20250325 21:34:01.586"/>
</kw>
<status status="PASS" starttime="20250325 21:33:58.984" endtime="20250325 21:34:01.587"/>
</kw>
<status status="PASS" starttime="20250325 21:33:53.867" endtime="20250325 21:34:01.587"/>
</kw>
<status status="PASS" starttime="20250325 21:33:53.867" endtime="20250325 21:34:01.587"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:33:42.791" endtime="20250325 21:34:01.587"/>
</test>
<test id="s1-s3-s18-t3" name="S3 Gateway Generate Secret By Username" line="47">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:34:01.588" endtime="20250325 21:34:01.589"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:01.592" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:01.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:01.596" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:34:01.590" endtime="20250325 21:34:01.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:01.596" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:34:01.596" endtime="20250325 21:34:01.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:01.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:01.597" endtime="20250325 21:34:01.597"/>
</kw>
<status status="PASS" starttime="20250325 21:34:01.589" endtime="20250325 21:34:01.597"/>
</kw>
<msg timestamp="20250325 21:34:01.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:01.589" endtime="20250325 21:34:01.597"/>
</kw>
<msg timestamp="20250325 21:34:01.597" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:34:01.589" endtime="20250325 21:34:01.597"/>
</kw>
<msg timestamp="20250325 21:34:01.597" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:34:01.589" endtime="20250325 21:34:01.597"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:34:01.598" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:34:01.598" endtime="20250325 21:34:01.598"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:01.601" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:01.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:01.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:34:01.599" endtime="20250325 21:34:01.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:01.624" level="INFO"/>
<status status="PASS" starttime="20250325 21:34:01.623" endtime="20250325 21:34:01.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:01.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:01.624" endtime="20250325 21:34:01.624"/>
</kw>
<status status="PASS" starttime="20250325 21:34:01.599" endtime="20250325 21:34:01.624"/>
</kw>
<msg timestamp="20250325 21:34:01.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:01.599" endtime="20250325 21:34:01.624"/>
</kw>
<status status="PASS" starttime="20250325 21:34:01.598" endtime="20250325 21:34:01.625"/>
</kw>
<status status="PASS" starttime="20250325 21:34:01.598" endtime="20250325 21:34:01.625"/>
</kw>
<status status="PASS" starttime="20250325 21:34:01.588" endtime="20250325 21:34:01.625"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:01.628" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:04.109" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:04.109" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:01.625" endtime="20250325 21:34:04.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:04.110" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:04.109" endtime="20250325 21:34:04.110"/>
</kw>
<status status="PASS" starttime="20250325 21:34:01.625" endtime="20250325 21:34:04.110"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:04.113" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:06.689" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:06.690" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:04.110" endtime="20250325 21:34:06.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:06.691" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:06.690" endtime="20250325 21:34:06.691"/>
</kw>
<status status="PASS" starttime="20250325 21:34:04.110" endtime="20250325 21:34:06.691"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:06.694" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:09.089" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:09.089" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:06.691" endtime="20250325 21:34:09.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:09.091" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:09.090" endtime="20250325 21:34:09.091"/>
</kw>
<status status="PASS" starttime="20250325 21:34:06.691" endtime="20250325 21:34:09.091"/>
</kw>
<status status="PASS" starttime="20250325 21:34:01.625" endtime="20250325 21:34:09.091"/>
</kw>
<status status="PASS" starttime="20250325 21:34:01.588" endtime="20250325 21:34:09.091"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:34:09.091" endtime="20250325 21:34:09.091"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:09.095" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:09.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:09.227" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:34:09.092" endtime="20250325 21:34:09.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:09.228" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.10:19878...
* Connected to s3g (172.19.0.10) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret/testuser HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGdPZVirZk+llfvcTjNP3s/7OZW95oTlzeZ/FXTsK0uDYEtgp3fbc4bewRqo3156UfNLhEDw8k9b5SDaVeJjggRxgWzYelbd+cezOPx2YnhCUzcz0CvonapknC7xoCPifnPj2UieWDbDYaB39jKPSyUK0VKtlKXPlnDVmYEtgV+641d2Oq64phNmkhcG6IXMTmMQKBRQWOs6a2LKS5TMVJ0fHaNS9sYUVWbfR8LCmENWyZvpR9Ol4nahDLwJR3BWSN+I2xaIssNCADXINeTKwVtcqI2HuCOkah+uiKRoU6wyZ261WdZfwgetWAt1M2TQFnokbjtcx+rskaLopa1d1I39q3fqjdzPviZgxCdkS6hEd+gMaqZ7JqBu5pIHWMIHToAMCARKigcsEgchS12ltGK0QD/AlyiIK1wzRFsfHXLalUWFVdMwsBpqoPAkOi7DyUCWt5W+FyiXoB+ujvK/k2I3XqyWSmgE55npH6yNmqoEl5FTfcWaAm43BUlkFOOrld2pRveQFXhUmNPPay5B09lE3IsWmMissxyWAmcsg8/HCAy4Z+JMJqmhP8ZIQ/FV4FHS6mD2WiUKjJHRdSHs8MeA71FOsDsoKmz4BdVulUqvpdFK7LeajyaLor0e9U6vNOo7PpZQTTs3a633fp/O7e5QxyQ==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; date: Tue, 25 Mar 2025 21:34:09 GMT
&lt; cache-control: no-cache
&lt; expires: Tue, 25 Mar 2025 21:34:09 GMT
&lt; pragma: no-cache
&lt; content-type: application/xml
&lt; x-content-type-options: nosniff
&lt; x-xss-protection: 1; mode=block
&lt; x-frame-options: SAMEORIGIN
&lt; www-authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQkd046siSK5Pz4ubktozl0AH2ct7QolVXXfrOKG1sD1AS3rIafLqL6iZKA9FW7meftMSVpwWYYWr9RzH1OL1pYPtUQ==
&lt; set-cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1742974449137&amp;s=ngekkYw3XhgKbaRUC5iLVs6gMfwpJYi1YwYD2YQF3hM="; HttpOnly
&lt; content-length: 200
&lt; 
{ [200 bytes data]

100   200  100   200    0     0   1612      0 --:--:-- --:--:-- --:--:--  1612
* Connection #0 to host s3g left intact
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;testuser&lt;/awsAccessKey&gt;&lt;awsSecret&gt;68299776848af4a283c8d7cbc5071b572a0485e9ba48f7da410dd609072f70be&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20250325 21:34:09.227" endtime="20250325 21:34:09.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:09.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:09.228" endtime="20250325 21:34:09.229"/>
</kw>
<status status="PASS" starttime="20250325 21:34:09.092" endtime="20250325 21:34:09.229"/>
</kw>
<msg timestamp="20250325 21:34:09.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:09.092" endtime="20250325 21:34:09.229"/>
</kw>
<msg timestamp="20250325 21:34:09.229" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:34:09.091" endtime="20250325 21:34:09.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:34:09.230" endtime="20250325 21:34:09.230"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250325 21:34:09.230" endtime="20250325 21:34:09.230"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:09.235" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:11.838" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:11.838" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:09.232" endtime="20250325 21:34:11.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:11.839" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:11.839" endtime="20250325 21:34:11.839"/>
</kw>
<status status="PASS" starttime="20250325 21:34:09.231" endtime="20250325 21:34:11.839"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:11.842" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:14.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:14.373" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:34:11.840" endtime="20250325 21:34:14.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:14.374" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:34:14.373" endtime="20250325 21:34:14.374"/>
</kw>
<status status="PASS" starttime="20250325 21:34:11.840" endtime="20250325 21:34:14.374"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:14.377" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:17.009" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:17.009" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:14.374" endtime="20250325 21:34:17.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:17.009" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:17.009" endtime="20250325 21:34:17.010"/>
</kw>
<status status="PASS" starttime="20250325 21:34:14.374" endtime="20250325 21:34:17.010"/>
</kw>
<status status="PASS" starttime="20250325 21:34:09.231" endtime="20250325 21:34:17.010"/>
</kw>
<status status="PASS" starttime="20250325 21:34:09.231" endtime="20250325 21:34:17.010"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:34:01.587" endtime="20250325 21:34:17.010"/>
</test>
<test id="s1-s3-s18-t4" name="S3 Gateway Generate Secret By Username For Other User" line="53">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:34:17.012" endtime="20250325 21:34:17.012"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:17.015" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:17.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:17.019" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:34:17.013" endtime="20250325 21:34:17.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:17.020" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:34:17.020" endtime="20250325 21:34:17.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:17.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:17.020" endtime="20250325 21:34:17.021"/>
</kw>
<status status="PASS" starttime="20250325 21:34:17.013" endtime="20250325 21:34:17.021"/>
</kw>
<msg timestamp="20250325 21:34:17.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:17.013" endtime="20250325 21:34:17.021"/>
</kw>
<msg timestamp="20250325 21:34:17.021" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:34:17.012" endtime="20250325 21:34:17.021"/>
</kw>
<msg timestamp="20250325 21:34:17.021" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:34:17.012" endtime="20250325 21:34:17.021"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:34:17.022" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:34:17.021" endtime="20250325 21:34:17.022"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:17.025" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:17.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:17.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:34:17.023" endtime="20250325 21:34:17.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:17.049" level="INFO"/>
<status status="PASS" starttime="20250325 21:34:17.048" endtime="20250325 21:34:17.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:17.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:17.049" endtime="20250325 21:34:17.049"/>
</kw>
<status status="PASS" starttime="20250325 21:34:17.022" endtime="20250325 21:34:17.049"/>
</kw>
<msg timestamp="20250325 21:34:17.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:17.022" endtime="20250325 21:34:17.049"/>
</kw>
<status status="PASS" starttime="20250325 21:34:17.022" endtime="20250325 21:34:17.050"/>
</kw>
<status status="PASS" starttime="20250325 21:34:17.022" endtime="20250325 21:34:17.050"/>
</kw>
<status status="PASS" starttime="20250325 21:34:17.011" endtime="20250325 21:34:17.050"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:17.053" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:19.704" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:19.704" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:17.051" endtime="20250325 21:34:19.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:19.705" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:19.704" endtime="20250325 21:34:19.705"/>
</kw>
<status status="PASS" starttime="20250325 21:34:17.050" endtime="20250325 21:34:19.705"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:19.709" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:22.403" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:22.403" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:19.706" endtime="20250325 21:34:22.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:22.404" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:22.403" endtime="20250325 21:34:22.404"/>
</kw>
<status status="PASS" starttime="20250325 21:34:19.705" endtime="20250325 21:34:22.404"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:22.407" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:25.008" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:25.008" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:22.404" endtime="20250325 21:34:25.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:25.009" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:25.009" endtime="20250325 21:34:25.009"/>
</kw>
<status status="PASS" starttime="20250325 21:34:22.404" endtime="20250325 21:34:25.010"/>
</kw>
<status status="PASS" starttime="20250325 21:34:17.050" endtime="20250325 21:34:25.010"/>
</kw>
<status status="PASS" starttime="20250325 21:34:17.011" endtime="20250325 21:34:25.010"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:34:25.010" endtime="20250325 21:34:25.010"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:25.014" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:25.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:25.049" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:34:25.011" endtime="20250325 21:34:25.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:25.051" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.10:19878...
* Connected to s3g (172.19.0.10) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret/testuser2 HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClgYGKwYBBQUCoIICijCCAoagDTALBgkqhkiG9xIBAgKiggJzBIICb2CCAmsGCSqGSIb3EgECAgEAboICWjCCAlagAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGRKJeN9VGppHMJGJF3Ws1FvAELsl3dkko43a2WlCxprvkOJkHaMZ6IU+lPPYmL59YTo5UWidN4QGQlZrb1wx2zYLBNyOKKaWm6jfE3WW/D5ixBtKebmoE2uug1EvJ2ion2B9WHUR36+HXcm3TyNvWARt2pquUIr0ekpcMMsSYn3Me8sF0WYE6BfR3nwjwr5vOO4ZwVwv2dew3uK4QeVm4EmcbEFQVH46SiPuGE+SffVleGudoni/RDBNsP8TF9naLICQKZ82nL7341HBWoSjz6j8lQqCc9faZ+qBOl1ugDYDzj48/0iYkMGrQNW7BffPqAspp0M7iQ3INHaFDsGgQREPsuvIwGrC1bKOMDqnQ87o1Un3XhxPnP0GpIHVMIHSoAMCARKigcoEgcdxQ+tuw74Hn+24mcg9lZZrmBBsWHDGaglmFjeJLvXUuWBmDm0EkcoCifbAX3S3WDFdCIcjeVgVjXJCJ2cYQ83tYepnXxMlqab0h9I4dQcgYkcp2GkUoHZNgLPdhbnwt1yvbqgL8cWECKifObAI3wuMA5sVNj7dZ+0ofiSRhfXm9hrLOQreX3me3IOKjiKxyygs29CNP8vmdxSEMmdOyAwRVcCmWEx8bmeKXsUbZlpsKCdsY1aYB9C/QZP74GCKpUN7Bi9mgSh3
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; date: Tue, 25 Mar 2025 21:34:25 GMT
&lt; cache-control: no-cache
&lt; expires: Tue, 25 Mar 2025 21:34:25 GMT
&lt; pragma: no-cache
&lt; content-type: application/xml
&lt; x-content-type-options: nosniff
&lt; x-xss-protection: 1; mode=block
&lt; x-frame-options: SAMEORIGIN
&lt; www-authenticate: Negotiate oYGEMIGBoAMKAQChCwYJKoZIhvcSAQICom0Ea2BpBgkqhkiG9xIBAgICAG9aMFigAwIBBaEDAgEPokwwSqADAgESokMEQfx+PO/yYL+BilhsoAqT1htNFM6vVxS2Tz+hrYxwAdeOJB33GJUTsDOD9Quw8QfQEGclSEftBYoBeXpLq35nri0y
&lt; set-cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1742974465039&amp;s=LWRCnQwjxSpzDsey4HOhQY8YY7EyZEHV1WuHrivMEQ0="; HttpOnly
&lt; content-length: 201
&lt; 
{ [201 bytes data]

100   201  100   201    0     0   7178      0 --:--:-- --:--:-- --:--:--  7178
* Connection #0 to host s3g left intact
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;testuser2&lt;/awsAccessKey&gt;&lt;awsSecret&gt;0c6f7db065a97027ce235d4f48159ed79f2700aa1b5b4671241f68e2de5de096&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20250325 21:34:25.050" endtime="20250325 21:34:25.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:25.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:25.051" endtime="20250325 21:34:25.051"/>
</kw>
<status status="PASS" starttime="20250325 21:34:25.011" endtime="20250325 21:34:25.052"/>
</kw>
<msg timestamp="20250325 21:34:25.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:25.011" endtime="20250325 21:34:25.052"/>
</kw>
<msg timestamp="20250325 21:34:25.052" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:34:25.010" endtime="20250325 21:34:25.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:34:25.052" endtime="20250325 21:34:25.052"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250325 21:34:25.052" endtime="20250325 21:34:25.053"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:25.056" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:27.598" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:27.598" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:25.054" endtime="20250325 21:34:27.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:27.599" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:27.598" endtime="20250325 21:34:27.599"/>
</kw>
<status status="PASS" starttime="20250325 21:34:25.053" endtime="20250325 21:34:27.599"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:27.602" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:29.996" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:29.996" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:27.599" endtime="20250325 21:34:29.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:29.997" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:29.997" endtime="20250325 21:34:29.997"/>
</kw>
<status status="PASS" starttime="20250325 21:34:27.599" endtime="20250325 21:34:29.997"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:30.000" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:32.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:32.552" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:34:29.998" endtime="20250325 21:34:32.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:32.552" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250325 21:34:32.552" endtime="20250325 21:34:32.552"/>
</kw>
<status status="PASS" starttime="20250325 21:34:29.998" endtime="20250325 21:34:32.553"/>
</kw>
<status status="PASS" starttime="20250325 21:34:25.053" endtime="20250325 21:34:32.553"/>
</kw>
<status status="PASS" starttime="20250325 21:34:25.053" endtime="20250325 21:34:32.553"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:34:17.010" endtime="20250325 21:34:32.553"/>
</test>
<test id="s1-s3-s18-t5" name="S3 Gateway Reject Secret Generation By Non-admin User" line="59">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:34:32.554" endtime="20250325 21:34:32.555"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:32.558" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:32.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:32.562" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:34:32.556" endtime="20250325 21:34:32.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:32.563" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:34:32.562" endtime="20250325 21:34:32.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:32.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:32.563" endtime="20250325 21:34:32.563"/>
</kw>
<status status="PASS" starttime="20250325 21:34:32.555" endtime="20250325 21:34:32.563"/>
</kw>
<msg timestamp="20250325 21:34:32.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:32.555" endtime="20250325 21:34:32.563"/>
</kw>
<msg timestamp="20250325 21:34:32.563" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:34:32.555" endtime="20250325 21:34:32.563"/>
</kw>
<msg timestamp="20250325 21:34:32.564" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:34:32.555" endtime="20250325 21:34:32.564"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:34:32.564" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:34:32.564" endtime="20250325 21:34:32.564"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:32.567" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:32.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:32.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:34:32.565" endtime="20250325 21:34:32.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:32.618" level="INFO"/>
<status status="PASS" starttime="20250325 21:34:32.618" endtime="20250325 21:34:32.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:32.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:32.618" endtime="20250325 21:34:32.619"/>
</kw>
<status status="PASS" starttime="20250325 21:34:32.565" endtime="20250325 21:34:32.619"/>
</kw>
<msg timestamp="20250325 21:34:32.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:32.565" endtime="20250325 21:34:32.619"/>
</kw>
<status status="PASS" starttime="20250325 21:34:32.565" endtime="20250325 21:34:32.619"/>
</kw>
<status status="PASS" starttime="20250325 21:34:32.564" endtime="20250325 21:34:32.619"/>
</kw>
<status status="PASS" starttime="20250325 21:34:32.554" endtime="20250325 21:34:32.619"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:32.622" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:35.367" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:35.367" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:32.620" endtime="20250325 21:34:35.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:35.368" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:35.368" endtime="20250325 21:34:35.368"/>
</kw>
<status status="PASS" starttime="20250325 21:34:32.620" endtime="20250325 21:34:35.369"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:35.371" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:37.883" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:37.883" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:35.369" endtime="20250325 21:34:37.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:37.884" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:37.884" endtime="20250325 21:34:37.884"/>
</kw>
<status status="PASS" starttime="20250325 21:34:35.369" endtime="20250325 21:34:37.885"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:37.888" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:40.362" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:40.362" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:37.885" endtime="20250325 21:34:40.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:40.363" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:40.362" endtime="20250325 21:34:40.363"/>
</kw>
<status status="PASS" starttime="20250325 21:34:37.885" endtime="20250325 21:34:40.363"/>
</kw>
<status status="PASS" starttime="20250325 21:34:32.619" endtime="20250325 21:34:40.363"/>
</kw>
<status status="PASS" starttime="20250325 21:34:32.554" endtime="20250325 21:34:40.363"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:34:40.363" endtime="20250325 21:34:40.363"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:34:40.364" endtime="20250325 21:34:40.364"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:40.368" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:40.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:40.372" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:34:40.365" endtime="20250325 21:34:40.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:40.373" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:34:40.372" endtime="20250325 21:34:40.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:40.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:40.373" endtime="20250325 21:34:40.373"/>
</kw>
<status status="PASS" starttime="20250325 21:34:40.365" endtime="20250325 21:34:40.373"/>
</kw>
<msg timestamp="20250325 21:34:40.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:40.365" endtime="20250325 21:34:40.374"/>
</kw>
<msg timestamp="20250325 21:34:40.374" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:34:40.364" endtime="20250325 21:34:40.374"/>
</kw>
<msg timestamp="20250325 21:34:40.374" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:34:40.364" endtime="20250325 21:34:40.374"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:34:40.374" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:34:40.374" endtime="20250325 21:34:40.374"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:40.378" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:40.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:40.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:34:40.375" endtime="20250325 21:34:40.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:40.400" level="INFO"/>
<status status="PASS" starttime="20250325 21:34:40.400" endtime="20250325 21:34:40.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:40.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:40.400" endtime="20250325 21:34:40.401"/>
</kw>
<status status="PASS" starttime="20250325 21:34:40.375" endtime="20250325 21:34:40.401"/>
</kw>
<msg timestamp="20250325 21:34:40.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:40.375" endtime="20250325 21:34:40.401"/>
</kw>
<status status="PASS" starttime="20250325 21:34:40.375" endtime="20250325 21:34:40.401"/>
</kw>
<status status="PASS" starttime="20250325 21:34:40.374" endtime="20250325 21:34:40.401"/>
</kw>
<status status="PASS" starttime="20250325 21:34:40.364" endtime="20250325 21:34:40.401"/>
</kw>
<status status="PASS" starttime="20250325 21:34:40.363" endtime="20250325 21:34:40.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:40.404" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:40.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:40.451" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:34:40.402" endtime="20250325 21:34:40.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:40.452" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.10:19878...
* Connected to s3g (172.19.0.10) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret/testuser HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIChgYGKwYBBQUCoIICejCCAnagDTALBgkqhkiG9xIBAgKiggJjBIICX2CCAlsGCSqGSIb3EgECAgEAboICSjCCAkagAwIBBaEDAgEOogcDBQAgAAAAo4IBVWGCAVEwggFNoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEdMIIBGaADAgESoQMCAQGiggELBIIBB6Gkoo6aJdLHldlaVx/5ykppihLDzMI+yovNH37nGgI79IEf5fqh7XvdcGu3/xO8DxhJt1Pp5VNsqmEsDlTIGiAGwD+j6HnSbqgIlIk+aH4XrQ+7X5+DISqzplsYZObbHOaGffBG1jGRZC5SyeEtr8z3I05ZmSe78Lc1n2wYh3jeV1pT1nZfdjC24jv62FwCe/Iobb4axUMQdlSFYCqlcRpShd78q56AGyXTRAWfGGJRFMBBsh73u34HQumvAAYvlvBIQLjbcIrXc9RfALoK/AESruUwu+WgsevShSVLNtm1NnfeDPjlXHO5wzRhfMuCUzAMYUWupeBoVFYmezXectW+bHefHLIWpIHXMIHUoAMCARKigcwEgclrYF4NaiRCHhjjQABjzWkH2kUdexvx4mtaIq2jr+71J5AsyPUAPcOmxzPKD+bFB5wirEtyqLF/y0TGPvoVVmKK/EchHJUbjCdcQE4vyhMbvtQgp5yDzOtWoeLjvQuLN5n8QYOYCK+D3FNPRZlDJv6Ttk5n53RXm6uUUaGVZIQJ1bmRkg90VCMwPz9W+/IRDKxlbMzGj3LmTDAKOwAFwoAFxnGPVvLKwB9sSC0/ghuaoQATdFMX7Q435CwEn0cBUU7v7ng0boX8AQ4=
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 403 Forbidden
&lt; pragma: no-cache
&lt; x-content-type-options: nosniff
&lt; x-xss-protection: 1; mode=block
&lt; x-frame-options: SAMEORIGIN
&lt; www-authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQhF8vwB9TM0GxJOFUhQWnm2srXf5Kw1kFKCtAkxzkp3wkdNMfI9EwAdiUMCO/ocBhVCjX2UuztBOH9PsKwfMwvujfA==
&lt; set-cookie: hadoop.auth="u=testuser2&amp;p=testuser2/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1742974480429&amp;s=O8Bevd19mXel9lgrz6aUPyUhrsjliv3hpOe/Obp31tw="; HttpOnly
&lt; content-length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250325 21:34:40.451" endtime="20250325 21:34:40.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:40.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:40.452" endtime="20250325 21:34:40.452"/>
</kw>
<status status="PASS" starttime="20250325 21:34:40.402" endtime="20250325 21:34:40.452"/>
</kw>
<msg timestamp="20250325 21:34:40.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:40.402" endtime="20250325 21:34:40.453"/>
</kw>
<msg timestamp="20250325 21:34:40.453" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:34:40.401" endtime="20250325 21:34:40.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 403 FORBIDDEN</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:34:40.453" endtime="20250325 21:34:40.453"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:40.456" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:43.143" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:43.143" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:40.454" endtime="20250325 21:34:43.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:43.144" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:43.144" endtime="20250325 21:34:43.144"/>
</kw>
<status status="PASS" starttime="20250325 21:34:40.454" endtime="20250325 21:34:43.144"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:43.147" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:45.835" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:45.835" level="INFO">${output} = USER_MISMATCH Requested accessId 'testuser' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250325 21:34:43.145" endtime="20250325 21:34:45.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:45.836" level="INFO">USER_MISMATCH Requested accessId 'testuser' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250325 21:34:45.835" endtime="20250325 21:34:45.836"/>
</kw>
<status status="PASS" starttime="20250325 21:34:43.145" endtime="20250325 21:34:45.836"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:45.839" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:48.478" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:48.479" level="INFO">${output} = USER_MISMATCH Requested accessId 'testuser2' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250325 21:34:45.837" endtime="20250325 21:34:48.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:48.479" level="INFO">USER_MISMATCH Requested accessId 'testuser2' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250325 21:34:48.479" endtime="20250325 21:34:48.479"/>
</kw>
<status status="PASS" starttime="20250325 21:34:45.836" endtime="20250325 21:34:48.480"/>
</kw>
<status status="PASS" starttime="20250325 21:34:40.454" endtime="20250325 21:34:48.480"/>
</kw>
<status status="PASS" starttime="20250325 21:34:40.453" endtime="20250325 21:34:48.480"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:34:32.553" endtime="20250325 21:34:48.480"/>
</test>
<doc>S3 Secret Generate test</doc>
<status status="PASS" starttime="20250325 21:33:26.861" endtime="20250325 21:34:48.481"/>
</suite>
<suite id="s1-s3-s19" name="Secretrevoke" source="/opt/hadoop/smoketest/s3/secretrevoke.robot">
<test id="s1-s3-s19-t1" name="S3 Gateway Revoke Secret" line="35">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:34:48.491" endtime="20250325 21:34:48.491"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:48.494" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:48.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:48.498" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:34:48.492" endtime="20250325 21:34:48.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:48.499" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:34:48.498" endtime="20250325 21:34:48.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:48.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:48.499" endtime="20250325 21:34:48.500"/>
</kw>
<status status="PASS" starttime="20250325 21:34:48.492" endtime="20250325 21:34:48.500"/>
</kw>
<msg timestamp="20250325 21:34:48.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:48.491" endtime="20250325 21:34:48.500"/>
</kw>
<msg timestamp="20250325 21:34:48.500" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:34:48.491" endtime="20250325 21:34:48.500"/>
</kw>
<msg timestamp="20250325 21:34:48.500" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:34:48.491" endtime="20250325 21:34:48.500"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:34:48.501" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:34:48.500" endtime="20250325 21:34:48.501"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:48.504" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:48.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:48.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:34:48.502" endtime="20250325 21:34:48.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:48.531" level="INFO"/>
<status status="PASS" starttime="20250325 21:34:48.530" endtime="20250325 21:34:48.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:48.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:48.531" endtime="20250325 21:34:48.531"/>
</kw>
<status status="PASS" starttime="20250325 21:34:48.501" endtime="20250325 21:34:48.531"/>
</kw>
<msg timestamp="20250325 21:34:48.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:48.501" endtime="20250325 21:34:48.531"/>
</kw>
<status status="PASS" starttime="20250325 21:34:48.501" endtime="20250325 21:34:48.531"/>
</kw>
<status status="PASS" starttime="20250325 21:34:48.501" endtime="20250325 21:34:48.532"/>
</kw>
<status status="PASS" starttime="20250325 21:34:48.490" endtime="20250325 21:34:48.532"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:48.535" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:51.282" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:51.282" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:48.532" endtime="20250325 21:34:51.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:51.283" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:51.283" endtime="20250325 21:34:51.283"/>
</kw>
<status status="PASS" starttime="20250325 21:34:48.532" endtime="20250325 21:34:51.284"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:51.286" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:54.033" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:54.033" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:51.284" endtime="20250325 21:34:54.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:54.034" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:54.033" endtime="20250325 21:34:54.034"/>
</kw>
<status status="PASS" starttime="20250325 21:34:51.284" endtime="20250325 21:34:54.034"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:54.037" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:56.684" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:34:56.684" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:54.034" endtime="20250325 21:34:56.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:56.685" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:56.684" endtime="20250325 21:34:56.685"/>
</kw>
<status status="PASS" starttime="20250325 21:34:54.034" endtime="20250325 21:34:56.685"/>
</kw>
<status status="PASS" starttime="20250325 21:34:48.532" endtime="20250325 21:34:56.685"/>
</kw>
<status status="PASS" starttime="20250325 21:34:48.490" endtime="20250325 21:34:56.685"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:34:56.685" endtime="20250325 21:34:56.686"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:56.689" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:59.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:59.238" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f070bd7d116398d226f44c437bfaa310e348f8c981ab616bc743e29e290feddf</msg>
<status status="PASS" starttime="20250325 21:34:56.687" endtime="20250325 21:34:59.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:59.239" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f070bd7d116398d226f44c437bfaa310e348f8c981ab616bc743e29e290feddf</msg>
<status status="PASS" starttime="20250325 21:34:59.238" endtime="20250325 21:34:59.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:59.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:59.239" endtime="20250325 21:34:59.239"/>
</kw>
<status status="PASS" starttime="20250325 21:34:56.686" endtime="20250325 21:34:59.239"/>
</kw>
<msg timestamp="20250325 21:34:59.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:56.686" endtime="20250325 21:34:59.239"/>
</kw>
<status status="PASS" starttime="20250325 21:34:56.686" endtime="20250325 21:34:59.240"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:59.243" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:59.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:59.284" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:34:59.241" endtime="20250325 21:34:59.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:59.285" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.10:19878...
* Connected to s3g (172.19.0.10) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; DELETE /secret HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGRgJO00XT6O2bBT0C3KA0c4sR8b8A0XYB13770DSrc8lgMhx4cCTDLQl37GR1O9vQRgFJPqfC93lb2AngM8pP1lK+v6djSH3qrZVR/3qKGBHMtwY4KITb2F7HB0PcXLUR9sVWFsEYqqlg7xG7CZrYchvWImomeVGU5CPgazzqzboxC0CvVIsnwGw5UImoM1W4qaW3pbZfbXGsuXZFIAitaSy4sSSvDF/D1FjP4D91bsTMpe3TDtf/CoiCC8O53DZixWw/guv6BNPNentB/Jhry+54JmTfq0ts2W7IO10vm0XFWI9p7cRRnUWoiEXANgyC35yIXxyRmg/piYC/KtJmrs3XDxGGDw7XnvBVZ1Tii0V1Yu/J6n13t2HpIHWMIHToAMCARKigcsEgchXiPHXn2JMLglFieozDRhCH8w6lEpHH+KLG49Cj2XAZ2vCAS8XxUGchRBWOw2yyw3iS7ZmsJ4gC2ecxnaFm22MfZ3ilOdMEKdlyrx03UUtFHcMq+/yl83gUAkDUeg2poB0At1cDRbTIaow6hmYwm3sPZk8pyYtFZcDQFRisuq7J3oBd1MxatgJ8E5gPwXRgl2z01a5hO8ALqRVKEgFm4nhyLg+RvfoQd2LWV80eO3s/3x14A/HiTk9AzxdVZo2LkWYMFrRRuRWcw==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; date: Tue, 25 Mar 2025 21:34:59 GMT
&lt; cache-control: no-cache
&lt; expires: Tue, 25 Mar 2025 21:34:59 GMT
&lt; pragma: no-cache
&lt; content-type: text/plain;charset=utf-8
&lt; x-content-type-options: nosniff
&lt; x-xss-protection: 1; mode=block
&lt; x-frame-options: SAMEORIGIN
&lt; www-authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQpQQC2/BzI3pCcBN9xi7qUfTXAYziR0yBaT3nn8P3EX2yFcmH+nfYnYtcAI4x29l9MlOoZxvbof8CLGhtPlu9Yj0Qw==
&lt; set-cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1742974499273&amp;s=E2foWJfJIpbxMD9n/Dx+y9fd6Sg/cS0mslEU1ZuVkds="; HttpOnly
&lt; content-length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250325 21:34:59.284" endtime="20250325 21:34:59.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:59.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:59.285" endtime="20250325 21:34:59.285"/>
</kw>
<status status="PASS" starttime="20250325 21:34:59.240" endtime="20250325 21:34:59.285"/>
</kw>
<msg timestamp="20250325 21:34:59.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:59.240" endtime="20250325 21:34:59.286"/>
</kw>
<msg timestamp="20250325 21:34:59.286" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:34:59.240" endtime="20250325 21:34:59.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:34:59.286" endtime="20250325 21:34:59.286"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:34:48.490" endtime="20250325 21:34:59.286"/>
</test>
<test id="s1-s3-s19-t2" name="S3 Gateway Revoke Secret By Username" line="41">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:34:59.288" endtime="20250325 21:34:59.288"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:59.292" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:59.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:59.296" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:34:59.290" endtime="20250325 21:34:59.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:59.297" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:34:59.296" endtime="20250325 21:34:59.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:59.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:59.297" endtime="20250325 21:34:59.297"/>
</kw>
<status status="PASS" starttime="20250325 21:34:59.289" endtime="20250325 21:34:59.297"/>
</kw>
<msg timestamp="20250325 21:34:59.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:59.289" endtime="20250325 21:34:59.297"/>
</kw>
<msg timestamp="20250325 21:34:59.298" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:34:59.289" endtime="20250325 21:34:59.298"/>
</kw>
<msg timestamp="20250325 21:34:59.298" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:34:59.288" endtime="20250325 21:34:59.298"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:34:59.298" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:34:59.298" endtime="20250325 21:34:59.298"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:59.301" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:34:59.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:34:59.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:34:59.299" endtime="20250325 21:34:59.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:34:59.331" level="INFO"/>
<status status="PASS" starttime="20250325 21:34:59.331" endtime="20250325 21:34:59.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:34:59.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:34:59.331" endtime="20250325 21:34:59.332"/>
</kw>
<status status="PASS" starttime="20250325 21:34:59.299" endtime="20250325 21:34:59.332"/>
</kw>
<msg timestamp="20250325 21:34:59.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:34:59.299" endtime="20250325 21:34:59.332"/>
</kw>
<status status="PASS" starttime="20250325 21:34:59.299" endtime="20250325 21:34:59.332"/>
</kw>
<status status="PASS" starttime="20250325 21:34:59.298" endtime="20250325 21:34:59.332"/>
</kw>
<status status="PASS" starttime="20250325 21:34:59.288" endtime="20250325 21:34:59.332"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:34:59.335" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:02.093" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:35:02.093" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:34:59.333" endtime="20250325 21:35:02.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:02.094" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:02.093" endtime="20250325 21:35:02.094"/>
</kw>
<status status="PASS" starttime="20250325 21:34:59.332" endtime="20250325 21:35:02.094"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:02.097" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:04.660" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:35:04.660" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:02.095" endtime="20250325 21:35:04.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:04.661" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:04.661" endtime="20250325 21:35:04.661"/>
</kw>
<status status="PASS" starttime="20250325 21:35:02.094" endtime="20250325 21:35:04.661"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:04.664" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:07.327" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:35:07.328" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:04.662" endtime="20250325 21:35:07.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:07.328" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:07.328" endtime="20250325 21:35:07.329"/>
</kw>
<status status="PASS" starttime="20250325 21:35:04.661" endtime="20250325 21:35:07.329"/>
</kw>
<status status="PASS" starttime="20250325 21:34:59.332" endtime="20250325 21:35:07.329"/>
</kw>
<status status="PASS" starttime="20250325 21:34:59.288" endtime="20250325 21:35:07.329"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:35:07.329" endtime="20250325 21:35:07.329"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret -u testuser ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:07.333" level="INFO">Running command 'ozone s3 getsecret -u testuser  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:10.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:10.023" level="INFO">${output} = awsAccessKey=testuser
awsSecret=975f6aafe722ceab2c0254a0d3867ce66d32740680962696283d163f3af15119</msg>
<status status="PASS" starttime="20250325 21:35:07.330" endtime="20250325 21:35:10.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:10.024" level="INFO">awsAccessKey=testuser
awsSecret=975f6aafe722ceab2c0254a0d3867ce66d32740680962696283d163f3af15119</msg>
<status status="PASS" starttime="20250325 21:35:10.023" endtime="20250325 21:35:10.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:10.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:10.024" endtime="20250325 21:35:10.024"/>
</kw>
<status status="PASS" starttime="20250325 21:35:07.330" endtime="20250325 21:35:10.024"/>
</kw>
<msg timestamp="20250325 21:35:10.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:07.330" endtime="20250325 21:35:10.025"/>
</kw>
<status status="PASS" starttime="20250325 21:35:07.330" endtime="20250325 21:35:10.025"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:10.029" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:10.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:10.063" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:35:10.026" endtime="20250325 21:35:10.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:10.064" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.10:19878...
* Connected to s3g (172.19.0.10) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; DELETE /secret/testuser HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGZWaFxXjk+Z2u3G+qm2UDpkTRaknXt2VXuTyuIeTaRpINRvAtNWBfc1izZkoHCuprxnml645Isn+pUZvsyvfTRSlwwk4u2rY47lFR3soquqCJvvirZhazVbk0ATelpjrol8x6Sbx5wowMYHN1KGnFxEr7u4V+9juBnhsgFQmk68Vw1tXvyVpUEnJox2FA9xJtie053jDOTs2mFMJR2XpNqgsqiNjAxcnZzitzo+lgfAS6UvEoc0EqNyBcAtGH7X/VvUQms2SBu0GsejMT4TCkYv4r62FKG1IRoL0kN21IvDw7a3L2A3VLrPhLRukQn7q8CB24aAoZ2iBI5vuP7VlykOY97Oid0VVvGC5BpSZ4XhDcdiSEzhleH7tpIHWMIHToAMCARKigcsEgchKI660iK9I+/pdDufV2A47AEmWqcGOdYwS4OvbcKM2kOzrgYMLVH5kGK15xm2ZfhEDLqrmX3FJ+QUtzE5gqtIlqzMtqt5+wQSciT5aZsBJRO9qkq/Djq4pquYUC9OLaZsA4cfeJsDvEfBu0tGFbsIPwx1L5QFpb5qwzul69ZKY5bOqk/KmATrHybxkLRT9RrJf2/aGXtKGChJ6LbDuSJJhQEIWxHVVdkr9kNKLVOvvVBFquCKgyvslFbnFSlHme15gIDWG+tmP5g==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; date: Tue, 25 Mar 2025 21:35:10 GMT
&lt; cache-control: no-cache
&lt; expires: Tue, 25 Mar 2025 21:35:10 GMT
&lt; pragma: no-cache
&lt; content-type: text/plain;charset=utf-8
&lt; x-content-type-options: nosniff
&lt; x-xss-protection: 1; mode=block
&lt; x-frame-options: SAMEORIGIN
&lt; www-authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQrDQU7XRx1KMHQU4C9ud9Q4wB0qb2GrBgkqzB/6G6RUZabpn6dAeRNlgCCjQGoKLq5CQQx5lORwF2SVW9Nstr+fICg==
&lt; set-cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1742974510052&amp;s=2cSMIUqO5zDruOkF+24PAdJhf7+Gw5iJcYEfJW9B8Mk="; HttpOnly
&lt; content-length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250325 21:35:10.064" endtime="20250325 21:35:10.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:10.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:10.064" endtime="20250325 21:35:10.065"/>
</kw>
<status status="PASS" starttime="20250325 21:35:10.025" endtime="20250325 21:35:10.065"/>
</kw>
<msg timestamp="20250325 21:35:10.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:10.025" endtime="20250325 21:35:10.065"/>
</kw>
<msg timestamp="20250325 21:35:10.065" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:35:10.025" endtime="20250325 21:35:10.065"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:35:10.065" endtime="20250325 21:35:10.066"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:34:59.287" endtime="20250325 21:35:10.066"/>
</test>
<test id="s1-s3-s19-t3" name="S3 Gateway Revoke Secret By Username For Other User" line="47">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:35:10.067" endtime="20250325 21:35:10.067"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:10.071" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:10.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:10.075" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:35:10.069" endtime="20250325 21:35:10.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:10.076" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:35:10.075" endtime="20250325 21:35:10.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:10.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:10.076" endtime="20250325 21:35:10.076"/>
</kw>
<status status="PASS" starttime="20250325 21:35:10.068" endtime="20250325 21:35:10.076"/>
</kw>
<msg timestamp="20250325 21:35:10.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:10.068" endtime="20250325 21:35:10.077"/>
</kw>
<msg timestamp="20250325 21:35:10.077" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:35:10.068" endtime="20250325 21:35:10.077"/>
</kw>
<msg timestamp="20250325 21:35:10.077" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:35:10.068" endtime="20250325 21:35:10.077"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:35:10.077" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:35:10.077" endtime="20250325 21:35:10.077"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:10.081" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:10.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:10.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:35:10.079" endtime="20250325 21:35:10.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:10.115" level="INFO"/>
<status status="PASS" starttime="20250325 21:35:10.114" endtime="20250325 21:35:10.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:10.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:10.115" endtime="20250325 21:35:10.115"/>
</kw>
<status status="PASS" starttime="20250325 21:35:10.078" endtime="20250325 21:35:10.115"/>
</kw>
<msg timestamp="20250325 21:35:10.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:10.078" endtime="20250325 21:35:10.115"/>
</kw>
<status status="PASS" starttime="20250325 21:35:10.078" endtime="20250325 21:35:10.116"/>
</kw>
<status status="PASS" starttime="20250325 21:35:10.077" endtime="20250325 21:35:10.116"/>
</kw>
<status status="PASS" starttime="20250325 21:35:10.067" endtime="20250325 21:35:10.116"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:10.119" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:12.804" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:35:12.804" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:10.116" endtime="20250325 21:35:12.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:12.805" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:12.805" endtime="20250325 21:35:12.805"/>
</kw>
<status status="PASS" starttime="20250325 21:35:10.116" endtime="20250325 21:35:12.805"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:12.809" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:15.494" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:35:15.494" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:12.806" endtime="20250325 21:35:15.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:15.495" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:15.494" endtime="20250325 21:35:15.495"/>
</kw>
<status status="PASS" starttime="20250325 21:35:12.806" endtime="20250325 21:35:15.495"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:15.498" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:18.138" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:35:18.138" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:15.495" endtime="20250325 21:35:18.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:18.139" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:18.139" endtime="20250325 21:35:18.139"/>
</kw>
<status status="PASS" starttime="20250325 21:35:15.495" endtime="20250325 21:35:18.139"/>
</kw>
<status status="PASS" starttime="20250325 21:35:10.116" endtime="20250325 21:35:18.139"/>
</kw>
<status status="PASS" starttime="20250325 21:35:10.067" endtime="20250325 21:35:18.140"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:35:18.140" endtime="20250325 21:35:18.140"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:18.143" level="INFO">Running command 'ozone s3 getsecret -u testuser2  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:20.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:20.814" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=554467ae72840318e7ca031328648713e8f51ec2f057b0549b74792267817b3d</msg>
<status status="PASS" starttime="20250325 21:35:18.141" endtime="20250325 21:35:20.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:20.815" level="INFO">awsAccessKey=testuser2
awsSecret=554467ae72840318e7ca031328648713e8f51ec2f057b0549b74792267817b3d</msg>
<status status="PASS" starttime="20250325 21:35:20.814" endtime="20250325 21:35:20.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:20.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:20.815" endtime="20250325 21:35:20.815"/>
</kw>
<status status="PASS" starttime="20250325 21:35:18.141" endtime="20250325 21:35:20.815"/>
</kw>
<msg timestamp="20250325 21:35:20.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:18.140" endtime="20250325 21:35:20.815"/>
</kw>
<status status="PASS" starttime="20250325 21:35:18.140" endtime="20250325 21:35:20.816"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:20.819" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:20.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:20.855" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:35:20.817" endtime="20250325 21:35:20.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:20.856" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.10:19878...
* Connected to s3g (172.19.0.10) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; DELETE /secret/testuser2 HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGSbE/72YF/b7oef+HmhzTMEJFADwc1gcOWna621AAS/gvmujbeGtl/Oj5lqTYihqY5yGsln7G+bjGe4Qq+1luqghRXBUVzXNQyvTdVm9m0CHgEKL24dOy8BPMgB1s7wYxZcrwvWnOuRvfcCPiCR8omiHqpZ2+AwekvXz9j20yDuru+C74+JUUfKlfEnR6X1/PHvHsblAdj9oMjsj1NbcLsixfcEZ0jy0GzeLjgWc3oS391xE09Fi+dRs/zswmSWu1835iVRFqc87OvLaKwvo0hpDkeUqYNLpFhTeyaqpxrxxUbxicbF4ENZJqJfsp0kfYUBsW/UTF8RpjYufweOMZArB6ZE0+IFe9FcXoCzY2sK9JDg0463Kqjv0pIHWMIHToAMCARKigcsEgcg8wPzDhGjCeLTKuJ7IoNZd3fJ8EBcUcHWcRKqa5NAOclqFZKFJhHc/SltXcGj9gpy2UcLbLL7OizxDJjMJ4UCYmdO9kiMhAKzQUVWYXSdBKZczV+GFWFMHI28oWGzU1DGJKQqdFiYIqQL8XlhO6yD0uMQN7UfjUh5hBP1PPtPqg6YxgLkQIYp5EZ2Y9GlhIO3jqbBjcFRaPjivC/GHkdU1F/wbZ0VCG1s+kwfhc7M+rs4CEX+lrWyTy1qstvcc54Ztqld7aWQVUg==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; date: Tue, 25 Mar 2025 21:35:20 GMT
&lt; cache-control: no-cache
&lt; expires: Tue, 25 Mar 2025 21:35:20 GMT
&lt; pragma: no-cache
&lt; content-type: text/plain;charset=utf-8
&lt; x-content-type-options: nosniff
&lt; x-xss-protection: 1; mode=block
&lt; x-frame-options: SAMEORIGIN
&lt; www-authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQiqacd3PVDB2CEVT2tWwZsE2Ff4oeCFmw1N4MF/MzrDZL+NmO/2WYF7dUF05MskeWszRqjO4uNQn2tJqa/O/7Nws1w==
&lt; set-cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1742974520845&amp;s=ltE1Z0fRH0HKy6kw2LFKrR+OQl4eK3x+w4neeHFljZI="; HttpOnly
&lt; content-length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250325 21:35:20.855" endtime="20250325 21:35:20.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:20.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:20.856" endtime="20250325 21:35:20.857"/>
</kw>
<status status="PASS" starttime="20250325 21:35:20.816" endtime="20250325 21:35:20.857"/>
</kw>
<msg timestamp="20250325 21:35:20.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:20.816" endtime="20250325 21:35:20.857"/>
</kw>
<msg timestamp="20250325 21:35:20.857" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:35:20.816" endtime="20250325 21:35:20.857"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:35:20.857" endtime="20250325 21:35:20.858"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:35:10.066" endtime="20250325 21:35:20.858"/>
</test>
<test id="s1-s3-s19-t4" name="S3 Gateway Reject Secret Revoke By Non-admin User" line="53">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:35:20.860" endtime="20250325 21:35:20.860"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:20.863" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:20.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:20.867" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:35:20.861" endtime="20250325 21:35:20.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:20.868" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:35:20.867" endtime="20250325 21:35:20.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:20.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:20.868" endtime="20250325 21:35:20.868"/>
</kw>
<status status="PASS" starttime="20250325 21:35:20.861" endtime="20250325 21:35:20.868"/>
</kw>
<msg timestamp="20250325 21:35:20.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:20.861" endtime="20250325 21:35:20.869"/>
</kw>
<msg timestamp="20250325 21:35:20.869" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:35:20.860" endtime="20250325 21:35:20.869"/>
</kw>
<msg timestamp="20250325 21:35:20.869" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:35:20.860" endtime="20250325 21:35:20.869"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:35:20.869" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:35:20.869" endtime="20250325 21:35:20.869"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:20.872" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:20.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:20.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:35:20.870" endtime="20250325 21:35:20.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:20.919" level="INFO"/>
<status status="PASS" starttime="20250325 21:35:20.919" endtime="20250325 21:35:20.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:20.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:20.919" endtime="20250325 21:35:20.920"/>
</kw>
<status status="PASS" starttime="20250325 21:35:20.870" endtime="20250325 21:35:20.920"/>
</kw>
<msg timestamp="20250325 21:35:20.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:20.870" endtime="20250325 21:35:20.920"/>
</kw>
<status status="PASS" starttime="20250325 21:35:20.870" endtime="20250325 21:35:20.920"/>
</kw>
<status status="PASS" starttime="20250325 21:35:20.869" endtime="20250325 21:35:20.920"/>
</kw>
<status status="PASS" starttime="20250325 21:35:20.859" endtime="20250325 21:35:20.920"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:20.923" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:23.563" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:35:23.563" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:20.921" endtime="20250325 21:35:23.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:23.564" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:23.564" endtime="20250325 21:35:23.564"/>
</kw>
<status status="PASS" starttime="20250325 21:35:20.921" endtime="20250325 21:35:23.564"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:23.567" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:26.310" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:35:26.310" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:23.565" endtime="20250325 21:35:26.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:26.311" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:26.310" endtime="20250325 21:35:26.311"/>
</kw>
<status status="PASS" starttime="20250325 21:35:23.564" endtime="20250325 21:35:26.311"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:26.314" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:28.859" level="INFO">${rc} = 255</msg>
<msg timestamp="20250325 21:35:28.859" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:26.311" endtime="20250325 21:35:28.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:28.860" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250325 21:35:28.859" endtime="20250325 21:35:28.860"/>
</kw>
<status status="PASS" starttime="20250325 21:35:26.311" endtime="20250325 21:35:28.860"/>
</kw>
<status status="PASS" starttime="20250325 21:35:20.920" endtime="20250325 21:35:28.860"/>
</kw>
<status status="PASS" starttime="20250325 21:35:20.859" endtime="20250325 21:35:28.860"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:35:28.860" endtime="20250325 21:35:28.861"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:35:28.861" endtime="20250325 21:35:28.861"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:28.865" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:28.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:28.869" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:35:28.863" endtime="20250325 21:35:28.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:28.870" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:35:28.869" endtime="20250325 21:35:28.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:28.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:28.870" endtime="20250325 21:35:28.870"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.862" endtime="20250325 21:35:28.870"/>
</kw>
<msg timestamp="20250325 21:35:28.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:28.862" endtime="20250325 21:35:28.870"/>
</kw>
<msg timestamp="20250325 21:35:28.870" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:35:28.862" endtime="20250325 21:35:28.871"/>
</kw>
<msg timestamp="20250325 21:35:28.871" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:35:28.862" endtime="20250325 21:35:28.871"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:35:28.871" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:35:28.871" endtime="20250325 21:35:28.871"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:28.874" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:28.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:28.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:35:28.872" endtime="20250325 21:35:28.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:28.890" level="INFO"/>
<status status="PASS" starttime="20250325 21:35:28.890" endtime="20250325 21:35:28.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:28.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:28.890" endtime="20250325 21:35:28.891"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.872" endtime="20250325 21:35:28.891"/>
</kw>
<msg timestamp="20250325 21:35:28.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:28.872" endtime="20250325 21:35:28.891"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.871" endtime="20250325 21:35:28.891"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.871" endtime="20250325 21:35:28.891"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.861" endtime="20250325 21:35:28.891"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.861" endtime="20250325 21:35:28.891"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:28.894" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:28.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:28.938" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:35:28.892" endtime="20250325 21:35:28.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:28.939" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.10:19878...
* Connected to s3g (172.19.0.10) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; DELETE /secret/testuser HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIChgYGKwYBBQUCoIICejCCAnagDTALBgkqhkiG9xIBAgKiggJjBIICX2CCAlsGCSqGSIb3EgECAgEAboICSjCCAkagAwIBBaEDAgEOogcDBQAgAAAAo4IBVWGCAVEwggFNoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEdMIIBGaADAgESoQMCAQGiggELBIIBBzt/pBlbvsUYzEHV8/zzK3TbOBVVidivwOp5VeSKNHNuTHR7qPFLOwKWkaLjD1jUg7B8M2oQAoEi16w3ThZTdOLfb7aV4orrK0A3dGyhzb/eiz4Sm5d2ChPO18SdR8PvcVCAt9uSUA4UZd0dUDOqxp+6LN+BJly5HuSLvwZk5l97WJ3DnsggmjNBeimjvlByGTZoil+fudVnJdzC7HfAIE6t6F56y5U/v40/8dsR4mZMcMK0jsYyf54RROJ3cVgufQiOuPIbbwW0pZ/DZ9LLTXrdviVTOJlF59mpnGSbuZrXvjUKrhN8y6EDHdeeMpdPKSmmRA8zlGzTrgLW0awU+mNTGDgV8ufBpIHXMIHUoAMCARKigcwEgcnINt+KCp3lo++jcU+0z0Cqu2wMm7aaVQB5x4YD7Ujmsu/vDVAM4djhoaEHN8M67lr7PUl2sg9CnaJVyFpn5ZzsTl60DqbO+WzbOyGEp7wztsLnkkMLa5sAWtNGO+64Dp90mxGisyPfu1Nf89TjSgsM4cNUHWj9qqL0vtnys2EwGYOWb/dg8d/xCn/AV0YVqJSQc46Rw5Gxp2GvBdcnPUkfFWua5DLCnMn4rEeXzg7VfyinhrPF3jUfGrxytI7xhQ8iRb5toVaUqvc=
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 403 Forbidden
&lt; pragma: no-cache
&lt; x-content-type-options: nosniff
&lt; x-xss-protection: 1; mode=block
&lt; x-frame-options: SAMEORIGIN
&lt; www-authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQvmvWcPwNgZhsGHheDqR+cL5KXdoSg8EKoNAF+RqMg8El0sz02j2hy18JTquaEmmCvw7/Cp0wQUfg9qriyj6PBPvfw==
&lt; set-cookie: hadoop.auth="u=testuser2&amp;p=testuser2/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1742974528914&amp;s=I+ZG1xFLFscDRd3KxOTy1Zo0gUf/YrZ8KZLP+Ys4oEA="; HttpOnly
&lt; content-length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20250325 21:35:28.939" endtime="20250325 21:35:28.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:28.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:28.939" endtime="20250325 21:35:28.940"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.892" endtime="20250325 21:35:28.940"/>
</kw>
<msg timestamp="20250325 21:35:28.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:28.892" endtime="20250325 21:35:28.940"/>
</kw>
<msg timestamp="20250325 21:35:28.940" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:35:28.891" endtime="20250325 21:35:28.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 403 FORBIDDEN</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:35:28.940" endtime="20250325 21:35:28.941"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:35:20.858" endtime="20250325 21:35:28.941"/>
</test>
<kw name="Setup v4 headers" library="commonawslib" type="TEARDOWN">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:35:28.943" endtime="20250325 21:35:28.943"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:28.947" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:28.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:28.950" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:35:28.944" endtime="20250325 21:35:28.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:28.951" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:35:28.950" endtime="20250325 21:35:28.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:28.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:28.951" endtime="20250325 21:35:28.951"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.944" endtime="20250325 21:35:28.951"/>
</kw>
<msg timestamp="20250325 21:35:28.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:28.943" endtime="20250325 21:35:28.952"/>
</kw>
<msg timestamp="20250325 21:35:28.952" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:35:28.943" endtime="20250325 21:35:28.952"/>
</kw>
<msg timestamp="20250325 21:35:28.952" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:35:28.943" endtime="20250325 21:35:28.952"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:35:28.952" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:35:28.952" endtime="20250325 21:35:28.952"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:28.956" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:28.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:28.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:35:28.953" endtime="20250325 21:35:28.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:28.976" level="INFO"/>
<status status="PASS" starttime="20250325 21:35:28.975" endtime="20250325 21:35:28.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:28.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:28.976" endtime="20250325 21:35:28.976"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.953" endtime="20250325 21:35:28.976"/>
</kw>
<msg timestamp="20250325 21:35:28.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:28.953" endtime="20250325 21:35:28.976"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.953" endtime="20250325 21:35:28.976"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.952" endtime="20250325 21:35:28.976"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.942" endtime="20250325 21:35:28.977"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.942" endtime="20250325 21:35:28.977"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:28.979" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:31.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:31.641" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=31ecaa63727a2ef0d23a52e7f159b950f31105a2249bc30e7f0dd957e96d2e9c</msg>
<status status="PASS" starttime="20250325 21:35:28.977" endtime="20250325 21:35:31.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:31.642" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=31ecaa63727a2ef0d23a52e7f159b950f31105a2249bc30e7f0dd957e96d2e9c</msg>
<status status="PASS" starttime="20250325 21:35:31.641" endtime="20250325 21:35:31.642"/>
</kw>
<msg timestamp="20250325 21:35:31.642" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=31ecaa63727a2ef0d23a52e7f159b950f31105a2249bc30e7f0dd957e96d2e9c</msg>
<status status="PASS" starttime="20250325 21:35:28.977" endtime="20250325 21:35:31.642"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250325 21:35:31.643" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=31ecaa63727a2ef0d23a52e7f159b950f31105a2249bc30e7f0dd957e96d2e9c' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20250325 21:35:31.642" endtime="20250325 21:35:31.643"/>
</kw>
<msg timestamp="20250325 21:35:31.643" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250325 21:35:31.642" endtime="20250325 21:35:31.643"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250325 21:35:31.643" endtime="20250325 21:35:31.643"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250325 21:35:31.643" endtime="20250325 21:35:31.643"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:31.643" endtime="20250325 21:35:31.643"/>
</branch>
<status status="PASS" starttime="20250325 21:35:31.643" endtime="20250325 21:35:31.643"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250325 21:35:31.644" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250325 21:35:31.644" endtime="20250325 21:35:31.644"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250325 21:35:31.644" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250325 21:35:31.644" endtime="20250325 21:35:31.644"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250325 21:35:31.645" level="INFO">${secret} = ['31ecaa63727a2ef0d23a52e7f159b950f31105a2249bc30e7f0dd957e96d2e9c']</msg>
<status status="PASS" starttime="20250325 21:35:31.644" endtime="20250325 21:35:31.645"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:35:31.645" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:35:31.645" endtime="20250325 21:35:31.645"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250325 21:35:31.646" level="INFO">${secret} = 31ecaa63727a2ef0d23a52e7f159b950f31105a2249bc30e7f0dd957e96d2e9c</msg>
<status status="PASS" starttime="20250325 21:35:31.646" endtime="20250325 21:35:31.646"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:31.649" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:31.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:31.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:35:31.647" endtime="20250325 21:35:31.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:31.991" level="INFO"/>
<status status="PASS" starttime="20250325 21:35:31.991" endtime="20250325 21:35:31.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:31.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:31.991" endtime="20250325 21:35:31.992"/>
</kw>
<status status="PASS" starttime="20250325 21:35:31.647" endtime="20250325 21:35:31.992"/>
</kw>
<msg timestamp="20250325 21:35:31.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:31.647" endtime="20250325 21:35:31.992"/>
</kw>
<status status="PASS" starttime="20250325 21:35:31.646" endtime="20250325 21:35:31.993"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:31.996" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:32.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:32.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:35:31.993" endtime="20250325 21:35:32.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:32.334" level="INFO"/>
<status status="PASS" starttime="20250325 21:35:32.334" endtime="20250325 21:35:32.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:32.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:32.334" endtime="20250325 21:35:32.335"/>
</kw>
<status status="PASS" starttime="20250325 21:35:31.993" endtime="20250325 21:35:32.335"/>
</kw>
<msg timestamp="20250325 21:35:32.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:31.993" endtime="20250325 21:35:32.335"/>
</kw>
<status status="PASS" starttime="20250325 21:35:31.993" endtime="20250325 21:35:32.335"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:32.338" level="INFO">Running command 'aws configure set aws_secret_access_key 31ecaa63727a2ef0d23a52e7f159b950f31105a2249bc30e7f0dd957e96d2e9c 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:32.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:32.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:35:32.336" endtime="20250325 21:35:32.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:32.676" level="INFO"/>
<status status="PASS" starttime="20250325 21:35:32.676" endtime="20250325 21:35:32.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:32.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:32.676" endtime="20250325 21:35:32.677"/>
</kw>
<status status="PASS" starttime="20250325 21:35:32.336" endtime="20250325 21:35:32.677"/>
</kw>
<msg timestamp="20250325 21:35:32.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:32.336" endtime="20250325 21:35:32.677"/>
</kw>
<status status="PASS" starttime="20250325 21:35:32.335" endtime="20250325 21:35:32.677"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:32.680" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:33.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:33.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:35:32.678" endtime="20250325 21:35:33.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:33.015" level="INFO"/>
<status status="PASS" starttime="20250325 21:35:33.015" endtime="20250325 21:35:33.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:33.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:33.016" endtime="20250325 21:35:33.016"/>
</kw>
<status status="PASS" starttime="20250325 21:35:32.678" endtime="20250325 21:35:33.016"/>
</kw>
<msg timestamp="20250325 21:35:33.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:32.677" endtime="20250325 21:35:33.016"/>
</kw>
<status status="PASS" starttime="20250325 21:35:32.677" endtime="20250325 21:35:33.016"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:33.020" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:33.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:33.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:35:33.017" endtime="20250325 21:35:33.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:33.355" level="INFO"/>
<status status="PASS" starttime="20250325 21:35:33.355" endtime="20250325 21:35:33.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:33.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:33.355" endtime="20250325 21:35:33.356"/>
</kw>
<status status="PASS" starttime="20250325 21:35:33.017" endtime="20250325 21:35:33.356"/>
</kw>
<msg timestamp="20250325 21:35:33.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:33.017" endtime="20250325 21:35:33.356"/>
</kw>
<status status="PASS" starttime="20250325 21:35:33.016" endtime="20250325 21:35:33.356"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.977" endtime="20250325 21:35:33.356"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.977" endtime="20250325 21:35:33.356"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250325 21:35:33.356" endtime="20250325 21:35:33.357"/>
</kw>
<status status="PASS" starttime="20250325 21:35:28.942" endtime="20250325 21:35:33.357"/>
</kw>
<doc>S3 Secret Revoke test</doc>
<status status="PASS" starttime="20250325 21:34:48.482" endtime="20250325 21:35:33.357"/>
</suite>
<suite id="s1-s3-s20" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250325 21:35:33.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:33.366" endtime="20250325 21:35:33.366"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:35:33.366" endtime="20250325 21:35:33.366"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250325 21:35:33.366" endtime="20250325 21:35:33.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:35:33.366" endtime="20250325 21:35:33.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:35:33.366" endtime="20250325 21:35:33.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:35:33.366" endtime="20250325 21:35:33.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:35:33.366" endtime="20250325 21:35:33.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250325 21:35:33.366" endtime="20250325 21:35:33.366"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250325 21:35:33.367" endtime="20250325 21:35:33.367"/>
</kw>
<status status="PASS" starttime="20250325 21:35:33.365" endtime="20250325 21:35:33.367"/>
</kw>
<test id="s1-s3-s20-t1" name="Check web UI" line="33">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${S3G_WEB_UI}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:33.370" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:19878 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:33.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:33.418" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:35:33.368" endtime="20250325 21:35:33.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:33.419" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.10:19878...
* Connected to s3g (172.19.0.10) port 19878 (#0)
* Server auth using Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Host: s3g:19878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGazBPFLrD8s254KLvVTbtVScPLE+r8aK53tU4wpOEx27Do7ZKVQq1MHA3AW8E76918KNSa453JkTZoBd0R2WY/Z/XvZr8d7R4vVSLCrQRKZEFXFesoHLMvKHD6pH5e694hl5k3JNyzjl9uTHNT90Y4jj6pir09uE7FxJYjlSMFKgOiMC43WrV757uN/zpREDMB3cQXplQ03MSOFK9GOO5cEsJdU23+uZrO+aH0nbVvar2YOrZMw6SiQmu3/nKItzU7ckG6X5kvj1fhjrO1n7W4q9BDeTzQgP8OFaOXXfS0lNt4WtnAunjQkup5VYKADLoplUzUZBY/zbfjcyaIPYMcY5WTXB+cyWVoVko/MARc7A/oWGYaC9aOXVpIHWMIHToAMCARKigcsEgciRibr8oaWBxYvx84mXchynnnA4cr7uWhpdR1bQTv61u+Gh57fyEJKGl/d0gcbRpBE5RTyhk1r/dHwda7YVBIuGbNI4ZrVWfpoPfSm6H5Jo8eVu/ptM+L2MwUoBh24sB0b46M114iUsmD1I+kdUagGf9COX4x1byfIUwHxIDPoxYHJhvDCzxwn6fMK+1wSFA+jqTgmJqvkfvlfdkf13niHrdgZVqJe+NIiXwnllO5bLdBZDQKI3rOaSw/Is9rOqLEqOLyQwghKI4w==
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; date: Tue, 25 Mar 2025 21:35:33 GMT
&lt; cache-control: no-cache
&lt; expires: Tue, 25 Mar 2025 21:35:33 GMT
&lt; pragma: no-cache
&lt; content-type: text/html
&lt; x-content-type-options: nosniff
&lt; x-xss-protection: 1; mode=block
&lt; x-frame-options: SAMEORIGIN
&lt; www-authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQqMTybPsdEckBCPlmx37oVVWClCd4IDO5xOiqVf5AvU60oxedfmvEpCCquZftPZt18yjs14bOqCYtiODbsU2YAR2zw==
&lt; set-cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1742974533412&amp;s=PXIu1fZp1ZpemgIBxtn2364TXA4ZwdW1ZDwEx5BzkBY="; Path=/; HttpOnly
&lt; last-modified: Wed, 12 Mar 2025 22:12:52 GMT
&lt; accept-ranges: bytes
&lt; content-length: 2761
&lt; 
{ [2761 bytes data]

100  2761  100  2761    0     0  67341      0 --:--:-- --:--:-- --:--:-- 69025
* Connection #0 to host s3g left intact
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="static/bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="static/hadoop.css" rel="stylesheet"&gt;
    &lt;link href="static/ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="static/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;For more information, please check the &lt;a href="static/docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="static/jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="static/bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20250325 21:35:33.419" endtime="20250325 21:35:33.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:33.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:33.419" endtime="20250325 21:35:33.420"/>
</kw>
<status status="PASS" starttime="20250325 21:35:33.368" endtime="20250325 21:35:33.420"/>
</kw>
<msg timestamp="20250325 21:35:33.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:33.367" endtime="20250325 21:35:33.420"/>
</kw>
<msg timestamp="20250325 21:35:33.420" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250325 21:35:33.367" endtime="20250325 21:35:33.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250325 21:35:33.420" endtime="20250325 21:35:33.421"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:35:33.367" endtime="20250325 21:35:33.421"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20250325 21:35:33.358" endtime="20250325 21:35:33.421"/>
</suite>
<status status="PASS" starttime="20250325 21:29:30.622" endtime="20250325 21:35:33.425"/>
</suite>
<suite id="s1-s4" name="Spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s4-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s4-s1-t1" name="Verify SPNEGO URLs without auth" line="49">
<kw name="Execute" library="os" type="SETUP">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.030" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:35:34.028" endtime="20250325 21:35:34.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.035" level="INFO"/>
<status status="PASS" starttime="20250325 21:35:34.035" endtime="20250325 21:35:34.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.035" endtime="20250325 21:35:34.036"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.027" endtime="20250325 21:35:34.036"/>
</kw>
<msg timestamp="20250325 21:35:34.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.027" endtime="20250325 21:35:34.036"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.027" endtime="20250325 21:35:34.036"/>
</kw>
<for flavor="IN">
<var>${BASE_URL}</var>
<value>@{BASE_URLS}</value>
<iter>
<var name="${BASE_URL}">http://om:9874</var>
<for flavor="IN">
<var>${PATH}</var>
<value>@{COMMON_PATHS}</value>
<iter>
<var name="${PATH}">conf</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.040" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/conf' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.052" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.038" endtime="20250325 21:35:34.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.053" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.052" endtime="20250325 21:35:34.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.053" endtime="20250325 21:35:34.053"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.038" endtime="20250325 21:35:34.054"/>
</kw>
<msg timestamp="20250325 21:35:34.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.037" endtime="20250325 21:35:34.054"/>
</kw>
<msg timestamp="20250325 21:35:34.054" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.037" endtime="20250325 21:35:34.054"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.054" endtime="20250325 21:35:34.054"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.054" endtime="20250325 21:35:34.054"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.054" endtime="20250325 21:35:34.054"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.054" endtime="20250325 21:35:34.054"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.037" endtime="20250325 21:35:34.055"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.037" endtime="20250325 21:35:34.055"/>
</iter>
<iter>
<var name="${PATH}">jmx</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.058" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/jmx' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.068" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.056" endtime="20250325 21:35:34.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.069" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.068" endtime="20250325 21:35:34.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.069" endtime="20250325 21:35:34.069"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.056" endtime="20250325 21:35:34.069"/>
</kw>
<msg timestamp="20250325 21:35:34.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.056" endtime="20250325 21:35:34.069"/>
</kw>
<msg timestamp="20250325 21:35:34.069" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.055" endtime="20250325 21:35:34.069"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.070" endtime="20250325 21:35:34.070"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.070" endtime="20250325 21:35:34.070"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.070" endtime="20250325 21:35:34.070"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.070" endtime="20250325 21:35:34.070"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.055" endtime="20250325 21:35:34.070"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.055" endtime="20250325 21:35:34.070"/>
</iter>
<iter>
<var name="${PATH}">logLevel</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.074" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/logLevel' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.082" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.071" endtime="20250325 21:35:34.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.083" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.083" endtime="20250325 21:35:34.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.083" endtime="20250325 21:35:34.084"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.071" endtime="20250325 21:35:34.084"/>
</kw>
<msg timestamp="20250325 21:35:34.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.071" endtime="20250325 21:35:34.084"/>
</kw>
<msg timestamp="20250325 21:35:34.084" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.071" endtime="20250325 21:35:34.084"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.084" endtime="20250325 21:35:34.084"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.084" endtime="20250325 21:35:34.084"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.084" endtime="20250325 21:35:34.085"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.084" endtime="20250325 21:35:34.085"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.070" endtime="20250325 21:35:34.085"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.070" endtime="20250325 21:35:34.085"/>
</iter>
<iter>
<var name="${PATH}">logs/</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.088" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/logs/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.097" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.086" endtime="20250325 21:35:34.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.098" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.097" endtime="20250325 21:35:34.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.098" endtime="20250325 21:35:34.099"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.086" endtime="20250325 21:35:34.099"/>
</kw>
<msg timestamp="20250325 21:35:34.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.085" endtime="20250325 21:35:34.099"/>
</kw>
<msg timestamp="20250325 21:35:34.099" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.085" endtime="20250325 21:35:34.099"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.100" endtime="20250325 21:35:34.100"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.100" endtime="20250325 21:35:34.100"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.099" endtime="20250325 21:35:34.100"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.099" endtime="20250325 21:35:34.100"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.085" endtime="20250325 21:35:34.100"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.085" endtime="20250325 21:35:34.100"/>
</iter>
<iter>
<var name="${PATH}">prom</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.105" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/prom' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.115" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.102" endtime="20250325 21:35:34.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.115" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.115" endtime="20250325 21:35:34.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.116" endtime="20250325 21:35:34.116"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.102" endtime="20250325 21:35:34.116"/>
</kw>
<msg timestamp="20250325 21:35:34.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.101" endtime="20250325 21:35:34.116"/>
</kw>
<msg timestamp="20250325 21:35:34.116" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.101" endtime="20250325 21:35:34.116"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.117" endtime="20250325 21:35:34.117"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.117" endtime="20250325 21:35:34.117"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.116" endtime="20250325 21:35:34.117"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.116" endtime="20250325 21:35:34.117"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.100" endtime="20250325 21:35:34.117"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.100" endtime="20250325 21:35:34.117"/>
</iter>
<iter>
<var name="${PATH}">stacks</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.120" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/stacks' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.129" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.118" endtime="20250325 21:35:34.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.130" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.130" endtime="20250325 21:35:34.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.130" endtime="20250325 21:35:34.131"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.118" endtime="20250325 21:35:34.131"/>
</kw>
<msg timestamp="20250325 21:35:34.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.118" endtime="20250325 21:35:34.131"/>
</kw>
<msg timestamp="20250325 21:35:34.131" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.117" endtime="20250325 21:35:34.131"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.131" endtime="20250325 21:35:34.131"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.131" endtime="20250325 21:35:34.131"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.131" endtime="20250325 21:35:34.132"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.131" endtime="20250325 21:35:34.132"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.117" endtime="20250325 21:35:34.132"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.117" endtime="20250325 21:35:34.132"/>
</iter>
<status status="PASS" starttime="20250325 21:35:34.036" endtime="20250325 21:35:34.132"/>
</for>
<status status="PASS" starttime="20250325 21:35:34.036" endtime="20250325 21:35:34.132"/>
</iter>
<iter>
<var name="${BASE_URL}">http://recon:9888</var>
<for flavor="IN">
<var>${PATH}</var>
<value>@{COMMON_PATHS}</value>
<iter>
<var name="${PATH}">conf</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.135" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://recon:9888/conf' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.188" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.133" endtime="20250325 21:35:34.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.189" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.189" endtime="20250325 21:35:34.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.189" endtime="20250325 21:35:34.189"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.133" endtime="20250325 21:35:34.190"/>
</kw>
<msg timestamp="20250325 21:35:34.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.133" endtime="20250325 21:35:34.190"/>
</kw>
<msg timestamp="20250325 21:35:34.190" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.132" endtime="20250325 21:35:34.190"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.190" endtime="20250325 21:35:34.190"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.190" endtime="20250325 21:35:34.190"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.190" endtime="20250325 21:35:34.190"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.190" endtime="20250325 21:35:34.190"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.132" endtime="20250325 21:35:34.191"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.132" endtime="20250325 21:35:34.191"/>
</iter>
<iter>
<var name="${PATH}">jmx</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.194" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://recon:9888/jmx' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.204" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.192" endtime="20250325 21:35:34.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.205" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.205" endtime="20250325 21:35:34.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.205" endtime="20250325 21:35:34.206"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.192" endtime="20250325 21:35:34.206"/>
</kw>
<msg timestamp="20250325 21:35:34.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.191" endtime="20250325 21:35:34.206"/>
</kw>
<msg timestamp="20250325 21:35:34.206" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.191" endtime="20250325 21:35:34.206"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.206" endtime="20250325 21:35:34.206"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.206" endtime="20250325 21:35:34.207"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.206" endtime="20250325 21:35:34.207"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.206" endtime="20250325 21:35:34.207"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.191" endtime="20250325 21:35:34.207"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.191" endtime="20250325 21:35:34.207"/>
</iter>
<iter>
<var name="${PATH}">logLevel</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.210" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://recon:9888/logLevel' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.220" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.208" endtime="20250325 21:35:34.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.221" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.220" endtime="20250325 21:35:34.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.221" endtime="20250325 21:35:34.221"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.208" endtime="20250325 21:35:34.221"/>
</kw>
<msg timestamp="20250325 21:35:34.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.208" endtime="20250325 21:35:34.221"/>
</kw>
<msg timestamp="20250325 21:35:34.221" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.207" endtime="20250325 21:35:34.221"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.222" endtime="20250325 21:35:34.222"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.222" endtime="20250325 21:35:34.222"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.222" endtime="20250325 21:35:34.222"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.222" endtime="20250325 21:35:34.222"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.207" endtime="20250325 21:35:34.222"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.207" endtime="20250325 21:35:34.222"/>
</iter>
<iter>
<var name="${PATH}">logs/</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.226" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://recon:9888/logs/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.235" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.224" endtime="20250325 21:35:34.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.236" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.235" endtime="20250325 21:35:34.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.236" endtime="20250325 21:35:34.236"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.223" endtime="20250325 21:35:34.236"/>
</kw>
<msg timestamp="20250325 21:35:34.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.223" endtime="20250325 21:35:34.236"/>
</kw>
<msg timestamp="20250325 21:35:34.237" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.223" endtime="20250325 21:35:34.237"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.237" endtime="20250325 21:35:34.237"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.237" endtime="20250325 21:35:34.237"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.237" endtime="20250325 21:35:34.237"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.237" endtime="20250325 21:35:34.237"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.222" endtime="20250325 21:35:34.237"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.222" endtime="20250325 21:35:34.237"/>
</iter>
<iter>
<var name="${PATH}">prom</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.241" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://recon:9888/prom' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.249" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.238" endtime="20250325 21:35:34.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.250" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.250" endtime="20250325 21:35:34.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.250" endtime="20250325 21:35:34.251"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.238" endtime="20250325 21:35:34.251"/>
</kw>
<msg timestamp="20250325 21:35:34.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.238" endtime="20250325 21:35:34.251"/>
</kw>
<msg timestamp="20250325 21:35:34.251" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.238" endtime="20250325 21:35:34.251"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.251" endtime="20250325 21:35:34.251"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.252" endtime="20250325 21:35:34.252"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.251" endtime="20250325 21:35:34.252"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.251" endtime="20250325 21:35:34.252"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.237" endtime="20250325 21:35:34.252"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.237" endtime="20250325 21:35:34.252"/>
</iter>
<iter>
<var name="${PATH}">stacks</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.255" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://recon:9888/stacks' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.264" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.253" endtime="20250325 21:35:34.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.265" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.264" endtime="20250325 21:35:34.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.265" endtime="20250325 21:35:34.265"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.253" endtime="20250325 21:35:34.265"/>
</kw>
<msg timestamp="20250325 21:35:34.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.253" endtime="20250325 21:35:34.265"/>
</kw>
<msg timestamp="20250325 21:35:34.266" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.252" endtime="20250325 21:35:34.266"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.266" endtime="20250325 21:35:34.266"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.266" endtime="20250325 21:35:34.266"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.266" endtime="20250325 21:35:34.266"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.266" endtime="20250325 21:35:34.266"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.252" endtime="20250325 21:35:34.266"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.252" endtime="20250325 21:35:34.266"/>
</iter>
<status status="PASS" starttime="20250325 21:35:34.132" endtime="20250325 21:35:34.266"/>
</for>
<status status="PASS" starttime="20250325 21:35:34.132" endtime="20250325 21:35:34.266"/>
</iter>
<iter>
<var name="${BASE_URL}">http://s3g:19878</var>
<for flavor="IN">
<var>${PATH}</var>
<value>@{COMMON_PATHS}</value>
<iter>
<var name="${PATH}">conf</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.270" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://s3g:19878/conf' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.283" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.268" endtime="20250325 21:35:34.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.283" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.283" endtime="20250325 21:35:34.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.284" endtime="20250325 21:35:34.284"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.267" endtime="20250325 21:35:34.284"/>
</kw>
<msg timestamp="20250325 21:35:34.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.267" endtime="20250325 21:35:34.284"/>
</kw>
<msg timestamp="20250325 21:35:34.284" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.267" endtime="20250325 21:35:34.284"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.285" endtime="20250325 21:35:34.285"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.285" endtime="20250325 21:35:34.285"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.284" endtime="20250325 21:35:34.285"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.284" endtime="20250325 21:35:34.285"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.267" endtime="20250325 21:35:34.285"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.267" endtime="20250325 21:35:34.285"/>
</iter>
<iter>
<var name="${PATH}">jmx</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.289" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://s3g:19878/jmx' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.306" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.286" endtime="20250325 21:35:34.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.307" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.307" endtime="20250325 21:35:34.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.307" endtime="20250325 21:35:34.308"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.286" endtime="20250325 21:35:34.308"/>
</kw>
<msg timestamp="20250325 21:35:34.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.286" endtime="20250325 21:35:34.308"/>
</kw>
<msg timestamp="20250325 21:35:34.308" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.286" endtime="20250325 21:35:34.308"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.309" endtime="20250325 21:35:34.309"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.309" endtime="20250325 21:35:34.309"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.309" endtime="20250325 21:35:34.309"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.309" endtime="20250325 21:35:34.310"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.285" endtime="20250325 21:35:34.310"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.285" endtime="20250325 21:35:34.310"/>
</iter>
<iter>
<var name="${PATH}">logLevel</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.315" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://s3g:19878/logLevel' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.338" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.312" endtime="20250325 21:35:34.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.340" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.339" endtime="20250325 21:35:34.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.340" endtime="20250325 21:35:34.341"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.311" endtime="20250325 21:35:34.341"/>
</kw>
<msg timestamp="20250325 21:35:34.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.311" endtime="20250325 21:35:34.341"/>
</kw>
<msg timestamp="20250325 21:35:34.342" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.311" endtime="20250325 21:35:34.342"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.342" endtime="20250325 21:35:34.342"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.342" endtime="20250325 21:35:34.342"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.342" endtime="20250325 21:35:34.343"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.342" endtime="20250325 21:35:34.343"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.310" endtime="20250325 21:35:34.343"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.310" endtime="20250325 21:35:34.343"/>
</iter>
<iter>
<var name="${PATH}">logs/</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.348" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://s3g:19878/logs/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.359" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.345" endtime="20250325 21:35:34.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.360" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.359" endtime="20250325 21:35:34.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.360" endtime="20250325 21:35:34.361"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.344" endtime="20250325 21:35:34.361"/>
</kw>
<msg timestamp="20250325 21:35:34.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.344" endtime="20250325 21:35:34.361"/>
</kw>
<msg timestamp="20250325 21:35:34.361" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.344" endtime="20250325 21:35:34.361"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.361" endtime="20250325 21:35:34.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.362" endtime="20250325 21:35:34.362"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.361" endtime="20250325 21:35:34.362"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.361" endtime="20250325 21:35:34.362"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.343" endtime="20250325 21:35:34.362"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.343" endtime="20250325 21:35:34.362"/>
</iter>
<iter>
<var name="${PATH}">prom</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.366" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://s3g:19878/prom' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.379" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.364" endtime="20250325 21:35:34.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.381" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.380" endtime="20250325 21:35:34.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.381" endtime="20250325 21:35:34.381"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.363" endtime="20250325 21:35:34.382"/>
</kw>
<msg timestamp="20250325 21:35:34.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.363" endtime="20250325 21:35:34.382"/>
</kw>
<msg timestamp="20250325 21:35:34.382" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.363" endtime="20250325 21:35:34.382"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.383" endtime="20250325 21:35:34.383"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.383" endtime="20250325 21:35:34.383"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.382" endtime="20250325 21:35:34.383"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.382" endtime="20250325 21:35:34.383"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.362" endtime="20250325 21:35:34.383"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.362" endtime="20250325 21:35:34.383"/>
</iter>
<iter>
<var name="${PATH}">stacks</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.387" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://s3g:19878/stacks' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.400" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.385" endtime="20250325 21:35:34.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.401" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.400" endtime="20250325 21:35:34.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.401" endtime="20250325 21:35:34.402"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.385" endtime="20250325 21:35:34.402"/>
</kw>
<msg timestamp="20250325 21:35:34.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.384" endtime="20250325 21:35:34.402"/>
</kw>
<msg timestamp="20250325 21:35:34.402" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.384" endtime="20250325 21:35:34.402"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.403" endtime="20250325 21:35:34.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.403" endtime="20250325 21:35:34.403"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.402" endtime="20250325 21:35:34.403"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.402" endtime="20250325 21:35:34.403"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.383" endtime="20250325 21:35:34.403"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.383" endtime="20250325 21:35:34.403"/>
</iter>
<status status="PASS" starttime="20250325 21:35:34.266" endtime="20250325 21:35:34.403"/>
</for>
<status status="PASS" starttime="20250325 21:35:34.266" endtime="20250325 21:35:34.403"/>
</iter>
<iter>
<var name="${BASE_URL}">http://scm:9876</var>
<for flavor="IN">
<var>${PATH}</var>
<value>@{COMMON_PATHS}</value>
<iter>
<var name="${PATH}">conf</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.407" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/conf' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.460" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.404" endtime="20250325 21:35:34.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.461" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.460" endtime="20250325 21:35:34.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.461" endtime="20250325 21:35:34.462"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.404" endtime="20250325 21:35:34.462"/>
</kw>
<msg timestamp="20250325 21:35:34.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.404" endtime="20250325 21:35:34.462"/>
</kw>
<msg timestamp="20250325 21:35:34.462" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.404" endtime="20250325 21:35:34.462"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.462" endtime="20250325 21:35:34.463"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.463" endtime="20250325 21:35:34.463"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.462" endtime="20250325 21:35:34.463"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.462" endtime="20250325 21:35:34.463"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.403" endtime="20250325 21:35:34.463"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.403" endtime="20250325 21:35:34.463"/>
</iter>
<iter>
<var name="${PATH}">jmx</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.467" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/jmx' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.477" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.464" endtime="20250325 21:35:34.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.478" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.478" endtime="20250325 21:35:34.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.478" endtime="20250325 21:35:34.479"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.464" endtime="20250325 21:35:34.479"/>
</kw>
<msg timestamp="20250325 21:35:34.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.464" endtime="20250325 21:35:34.479"/>
</kw>
<msg timestamp="20250325 21:35:34.479" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.464" endtime="20250325 21:35:34.479"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.479" endtime="20250325 21:35:34.479"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.480" endtime="20250325 21:35:34.480"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.479" endtime="20250325 21:35:34.480"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.479" endtime="20250325 21:35:34.480"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.463" endtime="20250325 21:35:34.480"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.463" endtime="20250325 21:35:34.480"/>
</iter>
<iter>
<var name="${PATH}">logLevel</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.483" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/logLevel' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.492" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.481" endtime="20250325 21:35:34.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.493" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.493" endtime="20250325 21:35:34.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.493" endtime="20250325 21:35:34.494"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.481" endtime="20250325 21:35:34.494"/>
</kw>
<msg timestamp="20250325 21:35:34.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.480" endtime="20250325 21:35:34.494"/>
</kw>
<msg timestamp="20250325 21:35:34.494" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.480" endtime="20250325 21:35:34.494"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.494" endtime="20250325 21:35:34.495"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.495" endtime="20250325 21:35:34.495"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.494" endtime="20250325 21:35:34.495"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.494" endtime="20250325 21:35:34.495"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.480" endtime="20250325 21:35:34.495"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.480" endtime="20250325 21:35:34.495"/>
</iter>
<iter>
<var name="${PATH}">logs/</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.498" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/logs/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.507" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.496" endtime="20250325 21:35:34.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.508" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.508" endtime="20250325 21:35:34.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.508" endtime="20250325 21:35:34.509"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.496" endtime="20250325 21:35:34.509"/>
</kw>
<msg timestamp="20250325 21:35:34.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.496" endtime="20250325 21:35:34.509"/>
</kw>
<msg timestamp="20250325 21:35:34.509" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.495" endtime="20250325 21:35:34.509"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.510" endtime="20250325 21:35:34.510"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.510" endtime="20250325 21:35:34.510"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.509" endtime="20250325 21:35:34.510"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.509" endtime="20250325 21:35:34.510"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.495" endtime="20250325 21:35:34.510"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.495" endtime="20250325 21:35:34.510"/>
</iter>
<iter>
<var name="${PATH}">prom</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.514" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/prom' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.523" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.512" endtime="20250325 21:35:34.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.524" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.523" endtime="20250325 21:35:34.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.524" endtime="20250325 21:35:34.524"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.512" endtime="20250325 21:35:34.524"/>
</kw>
<msg timestamp="20250325 21:35:34.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.511" endtime="20250325 21:35:34.525"/>
</kw>
<msg timestamp="20250325 21:35:34.525" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.511" endtime="20250325 21:35:34.525"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.525" endtime="20250325 21:35:34.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.525" endtime="20250325 21:35:34.525"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.525" endtime="20250325 21:35:34.525"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.525" endtime="20250325 21:35:34.525"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.511" endtime="20250325 21:35:34.525"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.510" endtime="20250325 21:35:34.525"/>
</iter>
<iter>
<var name="${PATH}">stacks</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.529" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/stacks' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.536" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.527" endtime="20250325 21:35:34.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.537" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.537" endtime="20250325 21:35:34.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.537" endtime="20250325 21:35:34.538"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.526" endtime="20250325 21:35:34.538"/>
</kw>
<msg timestamp="20250325 21:35:34.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.526" endtime="20250325 21:35:34.538"/>
</kw>
<msg timestamp="20250325 21:35:34.538" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.526" endtime="20250325 21:35:34.538"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.538" endtime="20250325 21:35:34.538"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.538" endtime="20250325 21:35:34.539"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.538" endtime="20250325 21:35:34.539"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.538" endtime="20250325 21:35:34.539"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.525" endtime="20250325 21:35:34.539"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.525" endtime="20250325 21:35:34.539"/>
</iter>
<status status="PASS" starttime="20250325 21:35:34.403" endtime="20250325 21:35:34.539"/>
</for>
<status status="PASS" starttime="20250325 21:35:34.403" endtime="20250325 21:35:34.539"/>
</iter>
<status status="PASS" starttime="20250325 21:35:34.036" endtime="20250325 21:35:34.539"/>
</for>
<for flavor="IN">
<var>${URL}</var>
<value>@{CUSTOM_ENDPOINTS}</value>
<iter>
<var name="${URL}">http://om:9874/dbCheckpoint</var>
<kw name="Verify SPNEGO URL">
<arg>${URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.542" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/dbCheckpoint' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.550" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.540" endtime="20250325 21:35:34.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.551" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.551" endtime="20250325 21:35:34.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.551" endtime="20250325 21:35:34.552"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.540" endtime="20250325 21:35:34.552"/>
</kw>
<msg timestamp="20250325 21:35:34.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.540" endtime="20250325 21:35:34.552"/>
</kw>
<msg timestamp="20250325 21:35:34.552" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.539" endtime="20250325 21:35:34.552"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.552" endtime="20250325 21:35:34.552"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.553" endtime="20250325 21:35:34.553"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.552" endtime="20250325 21:35:34.553"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.552" endtime="20250325 21:35:34.553"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.539" endtime="20250325 21:35:34.553"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.539" endtime="20250325 21:35:34.553"/>
</iter>
<iter>
<var name="${URL}">http://om:9874/serviceList</var>
<kw name="Verify SPNEGO URL">
<arg>${URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.556" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/serviceList' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.564" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.554" endtime="20250325 21:35:34.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.565" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.564" endtime="20250325 21:35:34.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.565" endtime="20250325 21:35:34.565"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.554" endtime="20250325 21:35:34.565"/>
</kw>
<msg timestamp="20250325 21:35:34.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.553" endtime="20250325 21:35:34.566"/>
</kw>
<msg timestamp="20250325 21:35:34.566" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.553" endtime="20250325 21:35:34.566"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.566" endtime="20250325 21:35:34.566"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.566" endtime="20250325 21:35:34.566"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.566" endtime="20250325 21:35:34.566"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.566" endtime="20250325 21:35:34.566"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.553" endtime="20250325 21:35:34.566"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.553" endtime="20250325 21:35:34.566"/>
</iter>
<iter>
<var name="${URL}">http://scm:9876/dbCheckpoint</var>
<kw name="Verify SPNEGO URL">
<arg>${URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.569" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/dbCheckpoint' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.579" level="INFO">${output} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.567" endtime="20250325 21:35:34.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.580" level="INFO">401</msg>
<status status="PASS" starttime="20250325 21:35:34.579" endtime="20250325 21:35:34.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.580" endtime="20250325 21:35:34.580"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.567" endtime="20250325 21:35:34.580"/>
</kw>
<msg timestamp="20250325 21:35:34.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.567" endtime="20250325 21:35:34.580"/>
</kw>
<msg timestamp="20250325 21:35:34.580" level="INFO">${result} = 401</msg>
<status status="PASS" starttime="20250325 21:35:34.567" endtime="20250325 21:35:34.580"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.581" endtime="20250325 21:35:34.581"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.581" endtime="20250325 21:35:34.581"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.581" endtime="20250325 21:35:34.581"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.581" endtime="20250325 21:35:34.581"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.566" endtime="20250325 21:35:34.581"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.566" endtime="20250325 21:35:34.581"/>
</iter>
<status status="PASS" starttime="20250325 21:35:34.539" endtime="20250325 21:35:34.581"/>
</for>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:35:34.026" endtime="20250325 21:35:34.581"/>
</test>
<test id="s1-s4-s1-t2" name="Verify SPNEGO URLs with auth" line="62">
<kw name="Kinit test user" library="commonlib" type="SETUP">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250325 21:35:34.582" endtime="20250325 21:35:34.583"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.586" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.589" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250325 21:35:34.584" endtime="20250325 21:35:34.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.590" level="INFO">scm</msg>
<status status="PASS" starttime="20250325 21:35:34.589" endtime="20250325 21:35:34.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.590" endtime="20250325 21:35:34.590"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.583" endtime="20250325 21:35:34.590"/>
</kw>
<msg timestamp="20250325 21:35:34.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.583" endtime="20250325 21:35:34.590"/>
</kw>
<msg timestamp="20250325 21:35:34.591" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250325 21:35:34.583" endtime="20250325 21:35:34.591"/>
</kw>
<msg timestamp="20250325 21:35:34.591" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:35:34.583" endtime="20250325 21:35:34.591"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250325 21:35:34.591" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250325 21:35:34.591" endtime="20250325 21:35:34.591"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.595" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250325 21:35:34.593" endtime="20250325 21:35:34.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.612" level="INFO"/>
<status status="PASS" starttime="20250325 21:35:34.611" endtime="20250325 21:35:34.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.612" endtime="20250325 21:35:34.612"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.592" endtime="20250325 21:35:34.612"/>
</kw>
<msg timestamp="20250325 21:35:34.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.592" endtime="20250325 21:35:34.612"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.592" endtime="20250325 21:35:34.612"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.591" endtime="20250325 21:35:34.613"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.582" endtime="20250325 21:35:34.613"/>
</kw>
<for flavor="IN">
<var>${BASE_URL}</var>
<value>@{BASE_URLS}</value>
<iter>
<var name="${BASE_URL}">http://om:9874</var>
<for flavor="IN">
<var>${PATH}</var>
<value>@{COMMON_PATHS}</value>
<iter>
<var name="${PATH}">conf</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.616" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/conf' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:34.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:34.725" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:34.614" endtime="20250325 21:35:34.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:34.727" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:34.726" endtime="20250325 21:35:34.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:34.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:34.727" endtime="20250325 21:35:34.727"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.614" endtime="20250325 21:35:34.728"/>
</kw>
<msg timestamp="20250325 21:35:34.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.614" endtime="20250325 21:35:34.728"/>
</kw>
<msg timestamp="20250325 21:35:34.728" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:34.613" endtime="20250325 21:35:34.728"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:34.728" endtime="20250325 21:35:34.728"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:34.729" endtime="20250325 21:35:34.729"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:34.728" endtime="20250325 21:35:34.729"/>
</branch>
<status status="PASS" starttime="20250325 21:35:34.728" endtime="20250325 21:35:34.729"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.613" endtime="20250325 21:35:34.729"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.613" endtime="20250325 21:35:34.729"/>
</iter>
<iter>
<var name="${PATH}">jmx</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:34.734" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/jmx' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:35.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:35.031" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:34.731" endtime="20250325 21:35:35.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:35.032" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:35.031" endtime="20250325 21:35:35.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:35.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:35.032" endtime="20250325 21:35:35.032"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.730" endtime="20250325 21:35:35.033"/>
</kw>
<msg timestamp="20250325 21:35:35.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:34.730" endtime="20250325 21:35:35.033"/>
</kw>
<msg timestamp="20250325 21:35:35.033" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:34.729" endtime="20250325 21:35:35.033"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:35.033" endtime="20250325 21:35:35.033"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:35.034" endtime="20250325 21:35:35.034"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:35.033" endtime="20250325 21:35:35.034"/>
</branch>
<status status="PASS" starttime="20250325 21:35:35.033" endtime="20250325 21:35:35.034"/>
</if>
<status status="PASS" starttime="20250325 21:35:34.729" endtime="20250325 21:35:35.034"/>
</kw>
<status status="PASS" starttime="20250325 21:35:34.729" endtime="20250325 21:35:35.034"/>
</iter>
<iter>
<var name="${PATH}">logLevel</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:35.039" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/logLevel' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:35.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:35.056" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.036" endtime="20250325 21:35:35.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:35.058" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:35.057" endtime="20250325 21:35:35.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:35.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:35.058" endtime="20250325 21:35:35.058"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.035" endtime="20250325 21:35:35.059"/>
</kw>
<msg timestamp="20250325 21:35:35.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:35.035" endtime="20250325 21:35:35.059"/>
</kw>
<msg timestamp="20250325 21:35:35.059" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.035" endtime="20250325 21:35:35.059"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:35.059" endtime="20250325 21:35:35.059"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:35.060" endtime="20250325 21:35:35.060"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:35.059" endtime="20250325 21:35:35.060"/>
</branch>
<status status="PASS" starttime="20250325 21:35:35.059" endtime="20250325 21:35:35.060"/>
</if>
<status status="PASS" starttime="20250325 21:35:35.034" endtime="20250325 21:35:35.060"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.034" endtime="20250325 21:35:35.060"/>
</iter>
<iter>
<var name="${PATH}">logs/</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:35.064" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/logs/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:35.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:35.097" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.062" endtime="20250325 21:35:35.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:35.098" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:35.097" endtime="20250325 21:35:35.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:35.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:35.098" endtime="20250325 21:35:35.099"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.061" endtime="20250325 21:35:35.099"/>
</kw>
<msg timestamp="20250325 21:35:35.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:35.061" endtime="20250325 21:35:35.099"/>
</kw>
<msg timestamp="20250325 21:35:35.099" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.061" endtime="20250325 21:35:35.099"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:35.100" endtime="20250325 21:35:35.100"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:35.100" endtime="20250325 21:35:35.100"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:35.100" endtime="20250325 21:35:35.100"/>
</branch>
<status status="PASS" starttime="20250325 21:35:35.099" endtime="20250325 21:35:35.100"/>
</if>
<status status="PASS" starttime="20250325 21:35:35.060" endtime="20250325 21:35:35.100"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.060" endtime="20250325 21:35:35.100"/>
</iter>
<iter>
<var name="${PATH}">prom</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:35.104" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/prom' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:35.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:35.150" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.102" endtime="20250325 21:35:35.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:35.151" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:35.151" endtime="20250325 21:35:35.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:35.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:35.152" endtime="20250325 21:35:35.152"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.102" endtime="20250325 21:35:35.152"/>
</kw>
<msg timestamp="20250325 21:35:35.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:35.101" endtime="20250325 21:35:35.153"/>
</kw>
<msg timestamp="20250325 21:35:35.153" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.101" endtime="20250325 21:35:35.153"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:35.153" endtime="20250325 21:35:35.153"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:35.153" endtime="20250325 21:35:35.153"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:35.153" endtime="20250325 21:35:35.153"/>
</branch>
<status status="PASS" starttime="20250325 21:35:35.153" endtime="20250325 21:35:35.154"/>
</if>
<status status="PASS" starttime="20250325 21:35:35.100" endtime="20250325 21:35:35.154"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.100" endtime="20250325 21:35:35.154"/>
</iter>
<iter>
<var name="${PATH}">stacks</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:35.159" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/stacks' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:35.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:35.211" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.156" endtime="20250325 21:35:35.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:35.213" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:35.212" endtime="20250325 21:35:35.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:35.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:35.213" endtime="20250325 21:35:35.214"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.155" endtime="20250325 21:35:35.214"/>
</kw>
<msg timestamp="20250325 21:35:35.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:35.155" endtime="20250325 21:35:35.214"/>
</kw>
<msg timestamp="20250325 21:35:35.214" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.154" endtime="20250325 21:35:35.214"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:35.215" endtime="20250325 21:35:35.215"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:35.215" endtime="20250325 21:35:35.215"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:35.215" endtime="20250325 21:35:35.215"/>
</branch>
<status status="PASS" starttime="20250325 21:35:35.214" endtime="20250325 21:35:35.215"/>
</if>
<status status="PASS" starttime="20250325 21:35:35.154" endtime="20250325 21:35:35.215"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.154" endtime="20250325 21:35:35.215"/>
</iter>
<status status="PASS" starttime="20250325 21:35:34.613" endtime="20250325 21:35:35.215"/>
</for>
<status status="PASS" starttime="20250325 21:35:34.613" endtime="20250325 21:35:35.215"/>
</iter>
<iter>
<var name="${BASE_URL}">http://recon:9888</var>
<for flavor="IN">
<var>${PATH}</var>
<value>@{COMMON_PATHS}</value>
<iter>
<var name="${PATH}">conf</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:35.221" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://recon:9888/conf' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:35.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:35.415" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.218" endtime="20250325 21:35:35.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:35.416" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:35.415" endtime="20250325 21:35:35.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:35.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:35.416" endtime="20250325 21:35:35.417"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.217" endtime="20250325 21:35:35.417"/>
</kw>
<msg timestamp="20250325 21:35:35.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:35.217" endtime="20250325 21:35:35.417"/>
</kw>
<msg timestamp="20250325 21:35:35.417" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.217" endtime="20250325 21:35:35.418"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:35.418" endtime="20250325 21:35:35.418"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:35.418" endtime="20250325 21:35:35.418"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:35.418" endtime="20250325 21:35:35.418"/>
</branch>
<status status="PASS" starttime="20250325 21:35:35.418" endtime="20250325 21:35:35.418"/>
</if>
<status status="PASS" starttime="20250325 21:35:35.216" endtime="20250325 21:35:35.419"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.216" endtime="20250325 21:35:35.419"/>
</iter>
<iter>
<var name="${PATH}">jmx</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:35.424" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://recon:9888/jmx' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:35.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:35.653" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.420" endtime="20250325 21:35:35.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:35.655" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:35.654" endtime="20250325 21:35:35.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:35.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:35.655" endtime="20250325 21:35:35.655"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.420" endtime="20250325 21:35:35.656"/>
</kw>
<msg timestamp="20250325 21:35:35.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:35.420" endtime="20250325 21:35:35.656"/>
</kw>
<msg timestamp="20250325 21:35:35.656" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.419" endtime="20250325 21:35:35.656"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:35.656" endtime="20250325 21:35:35.656"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:35.657" endtime="20250325 21:35:35.657"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:35.656" endtime="20250325 21:35:35.657"/>
</branch>
<status status="PASS" starttime="20250325 21:35:35.656" endtime="20250325 21:35:35.657"/>
</if>
<status status="PASS" starttime="20250325 21:35:35.419" endtime="20250325 21:35:35.657"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.419" endtime="20250325 21:35:35.657"/>
</iter>
<iter>
<var name="${PATH}">logLevel</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:35.662" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://recon:9888/logLevel' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:35.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:35.676" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.659" endtime="20250325 21:35:35.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:35.677" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:35.677" endtime="20250325 21:35:35.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:35.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:35.678" endtime="20250325 21:35:35.678"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.658" endtime="20250325 21:35:35.678"/>
</kw>
<msg timestamp="20250325 21:35:35.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:35.658" endtime="20250325 21:35:35.678"/>
</kw>
<msg timestamp="20250325 21:35:35.678" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.658" endtime="20250325 21:35:35.678"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:35.679" endtime="20250325 21:35:35.679"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:35.679" endtime="20250325 21:35:35.679"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:35.679" endtime="20250325 21:35:35.679"/>
</branch>
<status status="PASS" starttime="20250325 21:35:35.679" endtime="20250325 21:35:35.679"/>
</if>
<status status="PASS" starttime="20250325 21:35:35.657" endtime="20250325 21:35:35.679"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.657" endtime="20250325 21:35:35.679"/>
</iter>
<iter>
<var name="${PATH}">logs/</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:35.683" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://recon:9888/logs/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:35.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:35.712" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.680" endtime="20250325 21:35:35.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:35.713" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:35.712" endtime="20250325 21:35:35.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:35.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:35.713" endtime="20250325 21:35:35.713"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.680" endtime="20250325 21:35:35.713"/>
</kw>
<msg timestamp="20250325 21:35:35.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:35.680" endtime="20250325 21:35:35.714"/>
</kw>
<msg timestamp="20250325 21:35:35.714" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.680" endtime="20250325 21:35:35.714"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:35.714" endtime="20250325 21:35:35.714"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:35.714" endtime="20250325 21:35:35.714"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:35.714" endtime="20250325 21:35:35.714"/>
</branch>
<status status="PASS" starttime="20250325 21:35:35.714" endtime="20250325 21:35:35.714"/>
</if>
<status status="PASS" starttime="20250325 21:35:35.679" endtime="20250325 21:35:35.714"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.679" endtime="20250325 21:35:35.714"/>
</iter>
<iter>
<var name="${PATH}">prom</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:35.718" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://recon:9888/prom' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:35.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:35.750" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.716" endtime="20250325 21:35:35.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:35.751" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:35.750" endtime="20250325 21:35:35.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:35.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:35.751" endtime="20250325 21:35:35.752"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.715" endtime="20250325 21:35:35.752"/>
</kw>
<msg timestamp="20250325 21:35:35.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:35.715" endtime="20250325 21:35:35.752"/>
</kw>
<msg timestamp="20250325 21:35:35.752" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.715" endtime="20250325 21:35:35.752"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:35.753" endtime="20250325 21:35:35.753"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:35.753" endtime="20250325 21:35:35.753"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:35.752" endtime="20250325 21:35:35.753"/>
</branch>
<status status="PASS" starttime="20250325 21:35:35.752" endtime="20250325 21:35:35.753"/>
</if>
<status status="PASS" starttime="20250325 21:35:35.715" endtime="20250325 21:35:35.753"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.714" endtime="20250325 21:35:35.753"/>
</iter>
<iter>
<var name="${PATH}">stacks</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:35.757" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://recon:9888/stacks' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:35.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:35.795" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.755" endtime="20250325 21:35:35.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:35.796" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:35.795" endtime="20250325 21:35:35.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:35.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:35.796" endtime="20250325 21:35:35.797"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.754" endtime="20250325 21:35:35.797"/>
</kw>
<msg timestamp="20250325 21:35:35.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:35.754" endtime="20250325 21:35:35.797"/>
</kw>
<msg timestamp="20250325 21:35:35.797" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.754" endtime="20250325 21:35:35.797"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:35.798" endtime="20250325 21:35:35.798"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:35.798" endtime="20250325 21:35:35.798"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:35.797" endtime="20250325 21:35:35.798"/>
</branch>
<status status="PASS" starttime="20250325 21:35:35.797" endtime="20250325 21:35:35.798"/>
</if>
<status status="PASS" starttime="20250325 21:35:35.753" endtime="20250325 21:35:35.798"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.753" endtime="20250325 21:35:35.798"/>
</iter>
<status status="PASS" starttime="20250325 21:35:35.216" endtime="20250325 21:35:35.798"/>
</for>
<status status="PASS" starttime="20250325 21:35:35.216" endtime="20250325 21:35:35.798"/>
</iter>
<iter>
<var name="${BASE_URL}">http://s3g:19878</var>
<for flavor="IN">
<var>${PATH}</var>
<value>@{COMMON_PATHS}</value>
<iter>
<var name="${PATH}">conf</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:35.802" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://s3g:19878/conf' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:35.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:35.928" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.800" endtime="20250325 21:35:35.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:35.929" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:35.929" endtime="20250325 21:35:35.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:35.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:35.930" endtime="20250325 21:35:35.930"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.799" endtime="20250325 21:35:35.930"/>
</kw>
<msg timestamp="20250325 21:35:35.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:35.799" endtime="20250325 21:35:35.930"/>
</kw>
<msg timestamp="20250325 21:35:35.931" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.799" endtime="20250325 21:35:35.931"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:35.931" endtime="20250325 21:35:35.931"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:35.931" endtime="20250325 21:35:35.931"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:35.931" endtime="20250325 21:35:35.931"/>
</branch>
<status status="PASS" starttime="20250325 21:35:35.931" endtime="20250325 21:35:35.931"/>
</if>
<status status="PASS" starttime="20250325 21:35:35.798" endtime="20250325 21:35:35.932"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.798" endtime="20250325 21:35:35.932"/>
</iter>
<iter>
<var name="${PATH}">jmx</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:35.937" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://s3g:19878/jmx' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:36.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:36.249" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.933" endtime="20250325 21:35:36.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:36.250" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:36.250" endtime="20250325 21:35:36.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:36.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:36.251" endtime="20250325 21:35:36.251"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.933" endtime="20250325 21:35:36.251"/>
</kw>
<msg timestamp="20250325 21:35:36.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:35.933" endtime="20250325 21:35:36.251"/>
</kw>
<msg timestamp="20250325 21:35:36.252" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:35.932" endtime="20250325 21:35:36.252"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:36.252" endtime="20250325 21:35:36.252"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:36.252" endtime="20250325 21:35:36.252"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:36.252" endtime="20250325 21:35:36.252"/>
</branch>
<status status="PASS" starttime="20250325 21:35:36.252" endtime="20250325 21:35:36.252"/>
</if>
<status status="PASS" starttime="20250325 21:35:35.932" endtime="20250325 21:35:36.253"/>
</kw>
<status status="PASS" starttime="20250325 21:35:35.932" endtime="20250325 21:35:36.253"/>
</iter>
<iter>
<var name="${PATH}">logLevel</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:36.258" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://s3g:19878/logLevel' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:36.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:36.282" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.255" endtime="20250325 21:35:36.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:36.283" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:36.282" endtime="20250325 21:35:36.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:36.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:36.283" endtime="20250325 21:35:36.284"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.254" endtime="20250325 21:35:36.284"/>
</kw>
<msg timestamp="20250325 21:35:36.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:36.254" endtime="20250325 21:35:36.284"/>
</kw>
<msg timestamp="20250325 21:35:36.284" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.253" endtime="20250325 21:35:36.284"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:36.285" endtime="20250325 21:35:36.285"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:36.285" endtime="20250325 21:35:36.285"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:36.284" endtime="20250325 21:35:36.285"/>
</branch>
<status status="PASS" starttime="20250325 21:35:36.284" endtime="20250325 21:35:36.285"/>
</if>
<status status="PASS" starttime="20250325 21:35:36.253" endtime="20250325 21:35:36.285"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.253" endtime="20250325 21:35:36.285"/>
</iter>
<iter>
<var name="${PATH}">logs/</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:36.289" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://s3g:19878/logs/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:36.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:36.321" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.287" endtime="20250325 21:35:36.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:36.321" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:36.321" endtime="20250325 21:35:36.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:36.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:36.322" endtime="20250325 21:35:36.322"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.286" endtime="20250325 21:35:36.322"/>
</kw>
<msg timestamp="20250325 21:35:36.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:36.286" endtime="20250325 21:35:36.322"/>
</kw>
<msg timestamp="20250325 21:35:36.322" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.286" endtime="20250325 21:35:36.322"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:36.323" endtime="20250325 21:35:36.323"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:36.323" endtime="20250325 21:35:36.323"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:36.323" endtime="20250325 21:35:36.323"/>
</branch>
<status status="PASS" starttime="20250325 21:35:36.323" endtime="20250325 21:35:36.323"/>
</if>
<status status="PASS" starttime="20250325 21:35:36.285" endtime="20250325 21:35:36.323"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.285" endtime="20250325 21:35:36.323"/>
</iter>
<iter>
<var name="${PATH}">prom</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:36.327" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://s3g:19878/prom' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:36.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:36.351" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.324" endtime="20250325 21:35:36.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:36.353" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:36.352" endtime="20250325 21:35:36.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:36.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:36.353" endtime="20250325 21:35:36.353"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.324" endtime="20250325 21:35:36.353"/>
</kw>
<msg timestamp="20250325 21:35:36.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:36.324" endtime="20250325 21:35:36.354"/>
</kw>
<msg timestamp="20250325 21:35:36.354" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.324" endtime="20250325 21:35:36.354"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:36.354" endtime="20250325 21:35:36.354"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:36.354" endtime="20250325 21:35:36.355"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:36.354" endtime="20250325 21:35:36.355"/>
</branch>
<status status="PASS" starttime="20250325 21:35:36.354" endtime="20250325 21:35:36.355"/>
</if>
<status status="PASS" starttime="20250325 21:35:36.323" endtime="20250325 21:35:36.355"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.323" endtime="20250325 21:35:36.355"/>
</iter>
<iter>
<var name="${PATH}">stacks</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:36.360" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://s3g:19878/stacks' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:36.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:36.390" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.357" endtime="20250325 21:35:36.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:36.391" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:36.390" endtime="20250325 21:35:36.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:36.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:36.391" endtime="20250325 21:35:36.392"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.356" endtime="20250325 21:35:36.392"/>
</kw>
<msg timestamp="20250325 21:35:36.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:36.356" endtime="20250325 21:35:36.392"/>
</kw>
<msg timestamp="20250325 21:35:36.392" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.356" endtime="20250325 21:35:36.392"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:36.393" endtime="20250325 21:35:36.393"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:36.393" endtime="20250325 21:35:36.393"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:36.392" endtime="20250325 21:35:36.393"/>
</branch>
<status status="PASS" starttime="20250325 21:35:36.392" endtime="20250325 21:35:36.393"/>
</if>
<status status="PASS" starttime="20250325 21:35:36.355" endtime="20250325 21:35:36.393"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.355" endtime="20250325 21:35:36.393"/>
</iter>
<status status="PASS" starttime="20250325 21:35:35.798" endtime="20250325 21:35:36.393"/>
</for>
<status status="PASS" starttime="20250325 21:35:35.798" endtime="20250325 21:35:36.393"/>
</iter>
<iter>
<var name="${BASE_URL}">http://scm:9876</var>
<for flavor="IN">
<var>${PATH}</var>
<value>@{COMMON_PATHS}</value>
<iter>
<var name="${PATH}">conf</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:36.399" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/conf' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:36.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:36.532" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.395" endtime="20250325 21:35:36.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:36.533" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:36.533" endtime="20250325 21:35:36.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:36.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:36.534" endtime="20250325 21:35:36.534"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.395" endtime="20250325 21:35:36.534"/>
</kw>
<msg timestamp="20250325 21:35:36.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:36.395" endtime="20250325 21:35:36.534"/>
</kw>
<msg timestamp="20250325 21:35:36.535" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.394" endtime="20250325 21:35:36.535"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:36.535" endtime="20250325 21:35:36.535"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:36.535" endtime="20250325 21:35:36.535"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:36.535" endtime="20250325 21:35:36.535"/>
</branch>
<status status="PASS" starttime="20250325 21:35:36.535" endtime="20250325 21:35:36.535"/>
</if>
<status status="PASS" starttime="20250325 21:35:36.394" endtime="20250325 21:35:36.535"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.394" endtime="20250325 21:35:36.536"/>
</iter>
<iter>
<var name="${PATH}">jmx</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:36.540" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/jmx' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:36.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:36.796" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.537" endtime="20250325 21:35:36.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:36.797" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:36.796" endtime="20250325 21:35:36.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:36.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:36.797" endtime="20250325 21:35:36.798"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.537" endtime="20250325 21:35:36.798"/>
</kw>
<msg timestamp="20250325 21:35:36.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:36.537" endtime="20250325 21:35:36.798"/>
</kw>
<msg timestamp="20250325 21:35:36.798" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.536" endtime="20250325 21:35:36.798"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:36.799" endtime="20250325 21:35:36.799"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:36.799" endtime="20250325 21:35:36.799"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:36.799" endtime="20250325 21:35:36.799"/>
</branch>
<status status="PASS" starttime="20250325 21:35:36.799" endtime="20250325 21:35:36.799"/>
</if>
<status status="PASS" starttime="20250325 21:35:36.536" endtime="20250325 21:35:36.800"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.536" endtime="20250325 21:35:36.800"/>
</iter>
<iter>
<var name="${PATH}">logLevel</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:36.805" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/logLevel' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:36.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:36.822" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.802" endtime="20250325 21:35:36.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:36.823" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:36.823" endtime="20250325 21:35:36.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:36.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:36.824" endtime="20250325 21:35:36.824"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.801" endtime="20250325 21:35:36.824"/>
</kw>
<msg timestamp="20250325 21:35:36.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:36.801" endtime="20250325 21:35:36.824"/>
</kw>
<msg timestamp="20250325 21:35:36.825" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.801" endtime="20250325 21:35:36.825"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:36.825" endtime="20250325 21:35:36.825"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:36.825" endtime="20250325 21:35:36.825"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:36.825" endtime="20250325 21:35:36.825"/>
</branch>
<status status="PASS" starttime="20250325 21:35:36.825" endtime="20250325 21:35:36.825"/>
</if>
<status status="PASS" starttime="20250325 21:35:36.800" endtime="20250325 21:35:36.825"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.800" endtime="20250325 21:35:36.825"/>
</iter>
<iter>
<var name="${PATH}">logs/</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:36.830" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/logs/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:36.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:36.864" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.827" endtime="20250325 21:35:36.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:36.865" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:36.865" endtime="20250325 21:35:36.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:36.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:36.865" endtime="20250325 21:35:36.866"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.827" endtime="20250325 21:35:36.866"/>
</kw>
<msg timestamp="20250325 21:35:36.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:36.827" endtime="20250325 21:35:36.866"/>
</kw>
<msg timestamp="20250325 21:35:36.866" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.826" endtime="20250325 21:35:36.866"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:36.867" endtime="20250325 21:35:36.867"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:36.867" endtime="20250325 21:35:36.867"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:36.866" endtime="20250325 21:35:36.867"/>
</branch>
<status status="PASS" starttime="20250325 21:35:36.866" endtime="20250325 21:35:36.867"/>
</if>
<status status="PASS" starttime="20250325 21:35:36.826" endtime="20250325 21:35:36.867"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.826" endtime="20250325 21:35:36.867"/>
</iter>
<iter>
<var name="${PATH}">prom</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:36.871" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/prom' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:36.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:36.906" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.868" endtime="20250325 21:35:36.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:36.907" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:36.906" endtime="20250325 21:35:36.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:36.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:36.907" endtime="20250325 21:35:36.907"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.868" endtime="20250325 21:35:36.907"/>
</kw>
<msg timestamp="20250325 21:35:36.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:36.868" endtime="20250325 21:35:36.907"/>
</kw>
<msg timestamp="20250325 21:35:36.907" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.867" endtime="20250325 21:35:36.907"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:36.908" endtime="20250325 21:35:36.908"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:36.908" endtime="20250325 21:35:36.908"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:36.908" endtime="20250325 21:35:36.908"/>
</branch>
<status status="PASS" starttime="20250325 21:35:36.908" endtime="20250325 21:35:36.908"/>
</if>
<status status="PASS" starttime="20250325 21:35:36.867" endtime="20250325 21:35:36.908"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.867" endtime="20250325 21:35:36.908"/>
</iter>
<iter>
<var name="${PATH}">stacks</var>
<kw name="Verify SPNEGO URL">
<arg>${BASE_URL}/${PATH}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:36.912" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/stacks' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:36.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:36.989" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.909" endtime="20250325 21:35:36.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:36.990" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:36.989" endtime="20250325 21:35:36.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:36.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:36.990" endtime="20250325 21:35:36.991"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.909" endtime="20250325 21:35:36.991"/>
</kw>
<msg timestamp="20250325 21:35:36.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:36.909" endtime="20250325 21:35:36.992"/>
</kw>
<msg timestamp="20250325 21:35:36.992" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.909" endtime="20250325 21:35:36.992"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:36.992" endtime="20250325 21:35:36.992"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:36.992" endtime="20250325 21:35:36.993"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:36.992" endtime="20250325 21:35:36.993"/>
</branch>
<status status="PASS" starttime="20250325 21:35:36.992" endtime="20250325 21:35:36.993"/>
</if>
<status status="PASS" starttime="20250325 21:35:36.908" endtime="20250325 21:35:36.993"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.908" endtime="20250325 21:35:36.993"/>
</iter>
<status status="PASS" starttime="20250325 21:35:36.393" endtime="20250325 21:35:36.993"/>
</for>
<status status="PASS" starttime="20250325 21:35:36.393" endtime="20250325 21:35:36.993"/>
</iter>
<status status="PASS" starttime="20250325 21:35:34.613" endtime="20250325 21:35:36.993"/>
</for>
<for flavor="IN">
<var>${URL}</var>
<value>@{CUSTOM_ENDPOINTS}</value>
<iter>
<var name="${URL}">http://om:9874/dbCheckpoint</var>
<kw name="Verify SPNEGO URL">
<arg>${URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:36.999" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/dbCheckpoint' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:37.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:37.606" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.995" endtime="20250325 21:35:37.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:37.607" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:37.606" endtime="20250325 21:35:37.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:37.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:37.607" endtime="20250325 21:35:37.607"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.995" endtime="20250325 21:35:37.608"/>
</kw>
<msg timestamp="20250325 21:35:37.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:36.994" endtime="20250325 21:35:37.608"/>
</kw>
<msg timestamp="20250325 21:35:37.608" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:36.994" endtime="20250325 21:35:37.608"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:37.608" endtime="20250325 21:35:37.608"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:37.608" endtime="20250325 21:35:37.608"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:37.608" endtime="20250325 21:35:37.608"/>
</branch>
<status status="PASS" starttime="20250325 21:35:37.608" endtime="20250325 21:35:37.608"/>
</if>
<status status="PASS" starttime="20250325 21:35:36.993" endtime="20250325 21:35:37.608"/>
</kw>
<status status="PASS" starttime="20250325 21:35:36.993" endtime="20250325 21:35:37.608"/>
</iter>
<iter>
<var name="${URL}">http://om:9874/serviceList</var>
<kw name="Verify SPNEGO URL">
<arg>${URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:37.612" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://om:9874/serviceList' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:37.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:37.630" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:37.610" endtime="20250325 21:35:37.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:37.631" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:37.630" endtime="20250325 21:35:37.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:37.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:37.631" endtime="20250325 21:35:37.631"/>
</kw>
<status status="PASS" starttime="20250325 21:35:37.609" endtime="20250325 21:35:37.632"/>
</kw>
<msg timestamp="20250325 21:35:37.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:37.609" endtime="20250325 21:35:37.632"/>
</kw>
<msg timestamp="20250325 21:35:37.632" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:37.609" endtime="20250325 21:35:37.632"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:37.632" endtime="20250325 21:35:37.632"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:37.632" endtime="20250325 21:35:37.632"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:37.632" endtime="20250325 21:35:37.632"/>
</branch>
<status status="PASS" starttime="20250325 21:35:37.632" endtime="20250325 21:35:37.632"/>
</if>
<status status="PASS" starttime="20250325 21:35:37.609" endtime="20250325 21:35:37.633"/>
</kw>
<status status="PASS" starttime="20250325 21:35:37.609" endtime="20250325 21:35:37.633"/>
</iter>
<iter>
<var name="${URL}">http://scm:9876/dbCheckpoint</var>
<kw name="Verify SPNEGO URL">
<arg>${URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --silent -o /dev/null -w '\%{http_code}' '${url}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250325 21:35:37.636" level="INFO">Running command 'curl --negotiate -u : --silent -o /dev/null -w '%{http_code}' 'http://scm:9876/dbCheckpoint' 2&gt;&amp;1'.</msg>
<msg timestamp="20250325 21:35:37.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20250325 21:35:37.680" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250325 21:35:37.634" endtime="20250325 21:35:37.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250325 21:35:37.681" level="INFO">200</msg>
<status status="PASS" starttime="20250325 21:35:37.681" endtime="20250325 21:35:37.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250325 21:35:37.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250325 21:35:37.681" endtime="20250325 21:35:37.682"/>
</kw>
<status status="PASS" starttime="20250325 21:35:37.634" endtime="20250325 21:35:37.682"/>
</kw>
<msg timestamp="20250325 21:35:37.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250325 21:35:37.633" endtime="20250325 21:35:37.682"/>
</kw>
<msg timestamp="20250325 21:35:37.682" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250325 21:35:37.633" endtime="20250325 21:35:37.682"/>
</kw>
<if>
<branch type="IF" condition="'${result}' != '${expected_response}'">
<kw name="Execute" library="os">
<arg>curl --negotiate -u : -vvv -o /dev/null '${url}'</arg>
<status status="NOT RUN" starttime="20250325 21:35:37.682" endtime="20250325 21:35:37.682"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>'${result}'</arg>
<arg>'${expected_response}'</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250325 21:35:37.683" endtime="20250325 21:35:37.683"/>
</kw>
<status status="NOT RUN" starttime="20250325 21:35:37.682" endtime="20250325 21:35:37.683"/>
</branch>
<status status="PASS" starttime="20250325 21:35:37.682" endtime="20250325 21:35:37.683"/>
</if>
<status status="PASS" starttime="20250325 21:35:37.633" endtime="20250325 21:35:37.683"/>
</kw>
<status status="PASS" starttime="20250325 21:35:37.633" endtime="20250325 21:35:37.683"/>
</iter>
<status status="PASS" starttime="20250325 21:35:36.993" endtime="20250325 21:35:37.683"/>
</for>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250325 21:35:34.582" endtime="20250325 21:35:37.683"/>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20250325 21:35:34.007" endtime="20250325 21:35:37.684"/>
</suite>
<status status="PASS" starttime="20250325 21:35:33.991" endtime="20250325 21:35:37.685"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="542184"/>
</suite>
<statistics>
<total>
<stat pass="138" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">aws-skip</stat>
<stat pass="19" fail="0" skip="0">no-bucket-type</stat>
</tag>
<suite>
<stat pass="138" fail="0" skip="0" id="s1" name="ozonesecure-haproxy-s3g">ozonesecure-haproxy-s3g</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-haproxy-s3g.Kinit</stat>
<stat pass="45" fail="0" skip="0" id="s1-s2" name="Security">ozonesecure-haproxy-s3g.Security</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Admin-Cert">ozonesecure-haproxy-s3g.Security.Admin-Cert</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2-s2" name="Ozone-Secure-Fs">ozonesecure-haproxy-s3g.Security.Ozone-Secure-Fs</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s3" name="Ozone-Secure-Owner-S3">ozonesecure-haproxy-s3g.Security.Ozone-Secure-Owner-S3</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s4" name="Ozone-Secure-S3">ozonesecure-haproxy-s3g.Security.Ozone-Secure-S3</stat>
<stat pass="28" fail="0" skip="0" id="s1-s2-s5" name="Ozone-Secure-Tenant">ozonesecure-haproxy-s3g.Security.Ozone-Secure-Tenant</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Ozone-Secure-Token">ozonesecure-haproxy-s3g.Security.Ozone-Secure-Token</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="S3-secret">ozonesecure-haproxy-s3g.Security.S3-secret</stat>
<stat pass="90" fail="0" skip="0" id="s1-s3" name="s3-encrypted">ozonesecure-haproxy-s3g.s3-encrypted</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s1" name="Awss3">ozonesecure-haproxy-s3g.s3-encrypted.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s2" name="Boto3">ozonesecure-haproxy-s3g.s3-encrypted.Boto3</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3-s3" name="Bucketcreate">ozonesecure-haproxy-s3g.s3-encrypted.Bucketcreate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s4" name="Bucketdelete">ozonesecure-haproxy-s3g.s3-encrypted.Bucketdelete</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s5" name="Buckethead">ozonesecure-haproxy-s3g.s3-encrypted.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s6" name="Bucketlist">ozonesecure-haproxy-s3g.s3-encrypted.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s7" name="Freon">ozonesecure-haproxy-s3g.s3-encrypted.Freon</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s8" name="MultipartUpload">ozonesecure-haproxy-s3g.s3-encrypted.MultipartUpload</stat>
<stat pass="6" fail="0" skip="0" id="s1-s3-s9" name="Objectcopy">ozonesecure-haproxy-s3g.s3-encrypted.Objectcopy</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s10" name="Objectcopys3A">ozonesecure-haproxy-s3g.s3-encrypted.Objectcopys3A</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3-s11" name="Objectdelete">ozonesecure-haproxy-s3g.s3-encrypted.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3-s12" name="Objecthead">ozonesecure-haproxy-s3g.s3-encrypted.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s13" name="Objectmultidelete">ozonesecure-haproxy-s3g.s3-encrypted.Objectmultidelete</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3-s14" name="Objectputget">ozonesecure-haproxy-s3g.s3-encrypted.Objectputget</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s15" name="Objecttagging">ozonesecure-haproxy-s3g.s3-encrypted.Objecttagging</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s16" name="Rclone">ozonesecure-haproxy-s3g.s3-encrypted.Rclone</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s17" name="S3 Getsecret">ozonesecure-haproxy-s3g.s3-encrypted.S3 Getsecret</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3-s18" name="Secretgenerate">ozonesecure-haproxy-s3g.s3-encrypted.Secretgenerate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3-s19" name="Secretrevoke">ozonesecure-haproxy-s3g.s3-encrypted.Secretrevoke</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s20" name="Webui">ozonesecure-haproxy-s3g.s3-encrypted.Webui</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Spnego">ozonesecure-haproxy-s3g.Spnego</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s1" name="Web">ozonesecure-haproxy-s3g.Spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
