<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250304 19:49:07.929" rpa="false" schemaversion="4">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:47:29.751" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:47:33.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:47:33.441" level="INFO">${output} = 2025-03-04 19:47:30,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:30,883 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:47:29.749" endtime="20250304 19:47:33.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:47:33.442" level="INFO">2025-03-04 19:47:30,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:30,883 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:47:30,883 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:47:31,027 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-03-04 19:47:31,081 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:47:32,007 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-03-04 19:47:32,076 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-03-04 19:47:32,082 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:47:32,241 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 19:47:33,082 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 19:47:33,102 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=838.20774, max=838.20774, mean=838.20774, stddev=0.0, median=838.20774, p75=838.20774, p95=838.20774, p98=838.20774, p99=838.20774, p999=838.20774, mean_rate=0.9956705099906795, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:47:33,102 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 19:47:33,102 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:47:33,102 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 19:47:33.441" endtime="20250304 19:47:33.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:47:33.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:47:33.442" endtime="20250304 19:47:33.442"/>
</kw>
<status status="PASS" starttime="20250304 19:47:29.749" endtime="20250304 19:47:33.442"/>
</kw>
<msg timestamp="20250304 19:47:33.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:47:29.748" endtime="20250304 19:47:33.442"/>
</kw>
<msg timestamp="20250304 19:47:33.443" level="INFO">${result} = 2025-03-04 19:47:30,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:30,883 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:47:29.748" endtime="20250304 19:47:33.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:47:33.443" endtime="20250304 19:47:33.443"/>
</kw>
<status status="PASS" starttime="20250304 19:47:29.747" endtime="20250304 19:47:33.443"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:47:29.746" endtime="20250304 19:47:33.443"/>
</test>
<test id="s1-s1-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:47:33.448" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:47:35.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:47:35.789" level="INFO">${output} = 2025-03-04 19:47:34,387 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:34,535 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:47:33.446" endtime="20250304 19:47:35.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:47:35.790" level="INFO">2025-03-04 19:47:34,387 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:34,535 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:47:34,536 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:47:34,692 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2025-03-04 19:47:34,741 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:47:35,742 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 19:47:35,749 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=56.445948, max=56.445948, mean=56.445948, stddev=0.0, median=56.445948, p75=56.445948, p95=56.445948, p98=56.445948, p99=56.445948, p999=56.445948, mean_rate=7.9818915783588755, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:47:35,749 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-03-04 19:47:35,749 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:47:35,749 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 19:47:35.789" endtime="20250304 19:47:35.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:47:35.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:47:35.790" endtime="20250304 19:47:35.790"/>
</kw>
<status status="PASS" starttime="20250304 19:47:33.445" endtime="20250304 19:47:35.790"/>
</kw>
<msg timestamp="20250304 19:47:35.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:47:33.445" endtime="20250304 19:47:35.790"/>
</kw>
<msg timestamp="20250304 19:47:35.791" level="INFO">${result} = 2025-03-04 19:47:34,387 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:34,535 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:47:33.445" endtime="20250304 19:47:35.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:47:35.791" endtime="20250304 19:47:35.791"/>
</kw>
<status status="PASS" starttime="20250304 19:47:33.444" endtime="20250304 19:47:35.791"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:47:33.444" endtime="20250304 19:47:35.791"/>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:47:35.796" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:47:38.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:47:38.081" level="INFO">${output} = 2025-03-04 19:47:36,713 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:36,854 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:47:35.794" endtime="20250304 19:47:38.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:47:38.082" level="INFO">2025-03-04 19:47:36,713 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:36,854 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:47:36,854 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:47:36,983 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2025-03-04 19:47:37,033 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:47:38,034 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 19:47:38,042 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=11.58381, max=11.58381, mean=11.58381, stddev=0.0, median=11.58381, p75=11.58381, p95=11.58381, p98=11.58381, p99=11.58381, p999=11.58381, mean_rate=7.309496111406545, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:47:38,043 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-03-04 19:47:38,043 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:47:38,043 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 19:47:38.081" endtime="20250304 19:47:38.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:47:38.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:47:38.082" endtime="20250304 19:47:38.082"/>
</kw>
<status status="PASS" starttime="20250304 19:47:35.793" endtime="20250304 19:47:38.082"/>
</kw>
<msg timestamp="20250304 19:47:38.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:47:35.793" endtime="20250304 19:47:38.082"/>
</kw>
<msg timestamp="20250304 19:47:38.083" level="INFO">${result} = 2025-03-04 19:47:36,713 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:36,854 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:47:35.793" endtime="20250304 19:47:38.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:47:38.083" endtime="20250304 19:47:38.083"/>
</kw>
<status status="PASS" starttime="20250304 19:47:35.792" endtime="20250304 19:47:38.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:47:35.792" endtime="20250304 19:47:38.083"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250304 19:47:29.714" endtime="20250304 19:47:38.084"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s2-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:47:38.683" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:47:42.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:47:42.327" level="INFO">${output} = 2025-03-04 19:47:39,629 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:39,768 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:47:38.681" endtime="20250304 19:47:42.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:47:42.328" level="INFO">2025-03-04 19:47:39,629 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:39,768 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:47:39,769 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:47:39,920 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-03-04 19:47:39,972 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:47:40,974 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:47:40,981 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 19:47:41,974 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 19:47:41,987 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=18.391777, max=18.391777, mean=18.391777, stddev=0.0, median=18.391777, p75=18.391777, p95=18.391777, p98=18.391777, p99=18.391777, p999=18.391777, mean_rate=2.3620487696744608, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:47:41,987 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 19:47:41,987 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:47:41,987 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 19:47:42.328" endtime="20250304 19:47:42.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:47:42.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:47:42.328" endtime="20250304 19:47:42.329"/>
</kw>
<status status="PASS" starttime="20250304 19:47:38.680" endtime="20250304 19:47:42.329"/>
</kw>
<msg timestamp="20250304 19:47:42.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:47:38.680" endtime="20250304 19:47:42.329"/>
</kw>
<msg timestamp="20250304 19:47:42.329" level="INFO">${result} = 2025-03-04 19:47:39,629 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:39,768 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:47:38.680" endtime="20250304 19:47:42.329"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:47:42.329" endtime="20250304 19:47:42.330"/>
</kw>
<status status="PASS" starttime="20250304 19:47:38.678" endtime="20250304 19:47:42.330"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:47:38.678" endtime="20250304 19:47:42.330"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250304 19:47:38.646" endtime="20250304 19:47:42.331"/>
</suite>
<suite id="s1-s3" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s3-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:47:42.868" endtime="20250304 19:47:42.868"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:47:42.871" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:47:47.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:47:47.115" level="INFO">${output} = 2025-03-04 19:47:43,779 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:43,935 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:47:42.869" endtime="20250304 19:47:47.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:47:47.116" level="INFO">2025-03-04 19:47:43,779 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:43,935 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:47:43,935 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:47:44,496 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 19:47:44,719 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-03-04 19:47:44,753 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 19:47:44,803 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 19:47:45,754 [Thread-4] INFO freon.ProgressBar: Progress: 15.00 % (15 out of 100)
2025-03-04 19:47:46,755 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 19:47:46,775 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=6.557638, max=564.481501, mean=17.04067915841913, stddev=54.8170116937847, median=11.616371, p75=13.066652, p95=16.42514, p98=19.135659, p99=19.53929, p999=564.481501, mean_rate=54.20488077560858, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:47:46,776 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 19:47:46,776 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:47:46,776 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 19:47:47.115" endtime="20250304 19:47:47.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:47:47.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:47:47.116" endtime="20250304 19:47:47.116"/>
</kw>
<status status="PASS" starttime="20250304 19:47:42.869" endtime="20250304 19:47:47.116"/>
</kw>
<msg timestamp="20250304 19:47:47.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:47:42.868" endtime="20250304 19:47:47.116"/>
</kw>
<msg timestamp="20250304 19:47:47.117" level="INFO">${result} = 2025-03-04 19:47:43,779 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:43,935 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:47:42.868" endtime="20250304 19:47:47.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:47:47.117" endtime="20250304 19:47:47.117"/>
</kw>
<status status="PASS" starttime="20250304 19:47:42.866" endtime="20250304 19:47:47.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:47:42.866" endtime="20250304 19:47:47.117"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250304 19:47:42.834" endtime="20250304 19:47:47.118"/>
</suite>
<suite id="s1-s4" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s4-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:47:47.654" endtime="20250304 19:47:47.654"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:47:47.657" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:47:51.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:47:51.386" level="INFO">${output} = 2025-03-04 19:47:48,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:48,812 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:47:47.655" endtime="20250304 19:47:51.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:47:51.387" level="INFO">2025-03-04 19:47:48,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:48,812 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:47:48,812 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:47:48,974 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-03-04 19:47:49,024 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 19:47:49,427 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 19:47:49,657 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=7cc52ecf-0eae-436b-9a9a-414b01861754
2025-03-04 19:47:49,727 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 19:47:50,026 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 19:47:51,027 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 19:47:51,047 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.426437, max=4.370177, mean=1.9238971000000005, stddev=0.4162930811868124, median=1.843937, p75=2.066414, p95=2.448326, p98=2.890553, p99=3.660413, p999=4.370177, mean_rate=164.3387421015062, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:47:51,047 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 19:47:51,047 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:47:51,047 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 19:47:51.387" endtime="20250304 19:47:51.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:47:51.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:47:51.388" endtime="20250304 19:47:51.388"/>
</kw>
<status status="PASS" starttime="20250304 19:47:47.655" endtime="20250304 19:47:51.388"/>
</kw>
<msg timestamp="20250304 19:47:51.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:47:47.655" endtime="20250304 19:47:51.388"/>
</kw>
<msg timestamp="20250304 19:47:51.388" level="INFO">${result} = 2025-03-04 19:47:48,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:47:48,812 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:47:47.654" endtime="20250304 19:47:51.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:47:51.388" endtime="20250304 19:47:51.389"/>
</kw>
<status status="PASS" starttime="20250304 19:47:47.653" endtime="20250304 19:47:51.389"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:47:47.652" endtime="20250304 19:47:51.389"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250304 19:47:47.621" endtime="20250304 19:47:51.390"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s5-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:48:25.380" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:48:35.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:48:35.073" level="INFO">${output} = 2025-03-04 19:48:26,370 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:26,508 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:25.378" endtime="20250304 19:48:35.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:48:35.074" level="INFO">2025-03-04 19:48:26,370 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:26,508 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:48:26,508 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:48:26,651 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-03-04 19:48:26,711 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:27,712 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:28,712 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:29,163 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:812)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:233)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:226)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:161)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:127)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:118)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1246)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1169)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:525)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1953)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3198)
, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2025-03-04 19:48:29,713 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:30,713 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:31,714 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:32,714 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:33,716 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:33,882 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 19:48:34,716 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 19:48:34,731 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=19.507986, max=19.507986, mean=19.507986, stddev=0.0, median=19.507986, p75=19.507986, p95=19.507986, p98=19.507986, p99=19.507986, p999=19.507986, mean_rate=4.29107538365561, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:48:34,731 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2025-03-04 19:48:34,731 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:48:34,731 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 19:48:35.073" endtime="20250304 19:48:35.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:48:35.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:48:35.074" endtime="20250304 19:48:35.074"/>
</kw>
<status status="PASS" starttime="20250304 19:48:25.378" endtime="20250304 19:48:35.075"/>
</kw>
<msg timestamp="20250304 19:48:35.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:48:25.378" endtime="20250304 19:48:35.075"/>
</kw>
<msg timestamp="20250304 19:48:35.075" level="INFO">${result} = 2025-03-04 19:48:26,370 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:26,508 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:25.377" endtime="20250304 19:48:35.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:48:35.075" endtime="20250304 19:48:35.075"/>
</kw>
<status status="PASS" starttime="20250304 19:48:25.376" endtime="20250304 19:48:35.075"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:48:25.375" endtime="20250304 19:48:35.076"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250304 19:48:25.332" endtime="20250304 19:48:35.076"/>
</suite>
<suite id="s1-s6" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s6-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:48:35.616" endtime="20250304 19:48:35.616"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:48:35.619" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:48:39.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:48:39.269" level="INFO">${output} = 2025-03-04 19:48:36,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:36,696 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:35.617" endtime="20250304 19:48:39.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:48:39.270" level="INFO">2025-03-04 19:48:36,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:36,696 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:48:36,696 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:48:36,837 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-03-04 19:48:36,905 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 19:48:37,297 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 19:48:37,529 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=612ca0e2-34eb-46ab-84da-a0c8399a818a
2025-03-04 19:48:37,575 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 19:48:37,905 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 19:48:38,906 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 19:48:38,927 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.579052, max=10.089801, mean=2.9766769099999992, stddev=1.60596392793608, median=2.380939, p75=2.910723, p95=6.307108, p98=8.986658, p99=9.397086, p999=10.089801, mean_rate=146.184002777882, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:48:38,927 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 19:48:38,927 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:48:38,927 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 19:48:39.270" endtime="20250304 19:48:39.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:48:39.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:48:39.270" endtime="20250304 19:48:39.271"/>
</kw>
<status status="PASS" starttime="20250304 19:48:35.616" endtime="20250304 19:48:39.271"/>
</kw>
<msg timestamp="20250304 19:48:39.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:48:35.616" endtime="20250304 19:48:39.271"/>
</kw>
<msg timestamp="20250304 19:48:39.271" level="INFO">${result} = 2025-03-04 19:48:36,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:36,696 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:35.616" endtime="20250304 19:48:39.271"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:48:39.271" endtime="20250304 19:48:39.272"/>
</kw>
<status status="PASS" starttime="20250304 19:48:35.614" endtime="20250304 19:48:39.272"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:48:35.614" endtime="20250304 19:48:39.272"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250304 19:48:35.583" endtime="20250304 19:48:39.272"/>
</suite>
<suite id="s1-s7" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:48:39.816" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:48:43.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:48:43.437" level="INFO">${output} = 2025-03-04 19:48:40,754 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:40,888 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:39.814" endtime="20250304 19:48:43.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:48:43.438" level="INFO">2025-03-04 19:48:40,754 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:40,888 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:48:40,888 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:48:41,030 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-03-04 19:48:41,077 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:42,078 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:42,106 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 19:48:43,078 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 19:48:43,097 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=924.426232, max=924.426232, mean=924.426232, stddev=0.0, median=924.426232, p75=924.426232, p95=924.426232, p98=924.426232, p99=924.426232, p999=924.426232, mean_rate=0.826796209162862, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:48:43,097 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 19:48:43,097 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:48:43,097 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 19:48:43.437" endtime="20250304 19:48:43.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:48:43.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:48:43.438" endtime="20250304 19:48:43.438"/>
</kw>
<status status="PASS" starttime="20250304 19:48:39.814" endtime="20250304 19:48:43.438"/>
</kw>
<msg timestamp="20250304 19:48:43.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:48:39.814" endtime="20250304 19:48:43.438"/>
</kw>
<msg timestamp="20250304 19:48:43.439" level="INFO">${result} = 2025-03-04 19:48:40,754 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:40,888 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:39.813" endtime="20250304 19:48:43.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:48:43.439" endtime="20250304 19:48:43.439"/>
</kw>
<status status="PASS" starttime="20250304 19:48:39.812" endtime="20250304 19:48:43.439"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:48:39.811" endtime="20250304 19:48:43.439"/>
</test>
<test id="s1-s7-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:48:43.444" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:48:45.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:48:45.827" level="INFO">${output} = 2025-03-04 19:48:44,398 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:44,542 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:43.442" endtime="20250304 19:48:45.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:48:45.828" level="INFO">2025-03-04 19:48:44,398 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:44,542 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:48:44,543 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:48:44,724 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2025-03-04 19:48:44,778 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:45,779 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 19:48:45,786 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=61.398739, max=61.398739, mean=61.398739, stddev=0.0, median=61.398739, p75=61.398739, p95=61.398739, p98=61.398739, p99=61.398739, p999=61.398739, mean_rate=7.472042791492422, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:48:45,786 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-03-04 19:48:45,786 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:48:45,786 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 19:48:45.827" endtime="20250304 19:48:45.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:48:45.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:48:45.828" endtime="20250304 19:48:45.828"/>
</kw>
<status status="PASS" starttime="20250304 19:48:43.442" endtime="20250304 19:48:45.829"/>
</kw>
<msg timestamp="20250304 19:48:45.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:48:43.441" endtime="20250304 19:48:45.829"/>
</kw>
<msg timestamp="20250304 19:48:45.829" level="INFO">${result} = 2025-03-04 19:48:44,398 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:44,542 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:43.441" endtime="20250304 19:48:45.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:48:45.829" endtime="20250304 19:48:45.829"/>
</kw>
<status status="PASS" starttime="20250304 19:48:43.440" endtime="20250304 19:48:45.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:48:43.440" endtime="20250304 19:48:45.829"/>
</test>
<test id="s1-s7-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:48:45.834" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:48:48.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:48:48.173" level="INFO">${output} = 2025-03-04 19:48:46,764 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:46,919 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:45.832" endtime="20250304 19:48:48.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:48:48.174" level="INFO">2025-03-04 19:48:46,764 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:46,919 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:48:46,920 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:48:47,068 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2025-03-04 19:48:47,128 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:48,128 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 19:48:48,136 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=10.775183, max=10.775183, mean=10.775183, stddev=0.0, median=10.775183, p75=10.775183, p95=10.775183, p98=10.775183, p99=10.775183, p999=10.775183, mean_rate=5.81005443515531, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:48:48,137 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-03-04 19:48:48,137 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:48:48,137 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 19:48:48.173" endtime="20250304 19:48:48.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:48:48.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:48:48.174" endtime="20250304 19:48:48.174"/>
</kw>
<status status="PASS" starttime="20250304 19:48:45.832" endtime="20250304 19:48:48.174"/>
</kw>
<msg timestamp="20250304 19:48:48.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:48:45.832" endtime="20250304 19:48:48.174"/>
</kw>
<msg timestamp="20250304 19:48:48.175" level="INFO">${result} = 2025-03-04 19:48:46,764 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:46,919 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:45.831" endtime="20250304 19:48:48.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:48:48.175" endtime="20250304 19:48:48.175"/>
</kw>
<status status="PASS" starttime="20250304 19:48:45.830" endtime="20250304 19:48:48.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:48:45.830" endtime="20250304 19:48:48.175"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250304 19:48:39.780" endtime="20250304 19:48:48.176"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s8-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:48:48.724" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:48:52.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:48:52.353" level="INFO">${output} = 2025-03-04 19:48:49,643 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:49,789 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:48.722" endtime="20250304 19:48:52.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:48:52.354" level="INFO">2025-03-04 19:48:49,643 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:49,789 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:48:49,789 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:48:49,943 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-03-04 19:48:49,999 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:50,931 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 19:48:50,999 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 19:48:52,000 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 19:48:52,013 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=19.357712, max=19.357712, mean=19.357712, stddev=0.0, median=19.357712, p75=19.357712, p95=19.357712, p98=19.357712, p99=19.357712, p999=19.357712, mean_rate=1.781921449997952, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:48:52,013 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 19:48:52,013 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:48:52,013 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 19:48:52.354" endtime="20250304 19:48:52.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:48:52.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:48:52.354" endtime="20250304 19:48:52.355"/>
</kw>
<status status="PASS" starttime="20250304 19:48:48.722" endtime="20250304 19:48:52.355"/>
</kw>
<msg timestamp="20250304 19:48:52.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:48:48.722" endtime="20250304 19:48:52.355"/>
</kw>
<msg timestamp="20250304 19:48:52.355" level="INFO">${result} = 2025-03-04 19:48:49,643 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:49,789 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:48.722" endtime="20250304 19:48:52.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:48:52.355" endtime="20250304 19:48:52.355"/>
</kw>
<status status="PASS" starttime="20250304 19:48:48.720" endtime="20250304 19:48:52.355"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:48:48.720" endtime="20250304 19:48:52.356"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250304 19:48:48.689" endtime="20250304 19:48:52.356"/>
</suite>
<suite id="s1-s9" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s9-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:48:52.892" endtime="20250304 19:48:52.892"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:48:52.895" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:48:57.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:48:57.222" level="INFO">${output} = 2025-03-04 19:48:53,798 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:53,969 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:52.893" endtime="20250304 19:48:57.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:48:57.222" level="INFO">2025-03-04 19:48:53,798 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:53,969 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:48:53,969 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:48:54,587 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 19:48:54,828 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-03-04 19:48:54,860 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 19:48:54,901 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 19:48:55,861 [Thread-4] INFO freon.ProgressBar: Progress: 27.00 % (27 out of 100)
2025-03-04 19:48:56,861 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 19:48:56,881 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=6.652264, max=448.158395, mean=14.876437718826756, stddev=43.44527458498636, median=9.867435, p75=11.637293, p95=16.276692, p98=21.917637, p99=23.517509, p999=448.158395, mean_rate=53.95415848374519, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:48:56,881 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 19:48:56,881 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:48:56,882 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 19:48:57.222" endtime="20250304 19:48:57.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:48:57.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:48:57.223" endtime="20250304 19:48:57.223"/>
</kw>
<status status="PASS" starttime="20250304 19:48:52.893" endtime="20250304 19:48:57.223"/>
</kw>
<msg timestamp="20250304 19:48:57.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:48:52.893" endtime="20250304 19:48:57.223"/>
</kw>
<msg timestamp="20250304 19:48:57.223" level="INFO">${result} = 2025-03-04 19:48:53,798 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:53,969 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:52.892" endtime="20250304 19:48:57.223"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:48:57.223" endtime="20250304 19:48:57.224"/>
</kw>
<status status="PASS" starttime="20250304 19:48:52.891" endtime="20250304 19:48:57.224"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:48:52.890" endtime="20250304 19:48:57.224"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250304 19:48:52.859" endtime="20250304 19:48:57.225"/>
</suite>
<suite id="s1-s10" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s10-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:48:57.755" endtime="20250304 19:48:57.755"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:48:57.758" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:49:01.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:49:01.417" level="INFO">${output} = 2025-03-04 19:48:58,709 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:58,853 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:57.756" endtime="20250304 19:49:01.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:49:01.418" level="INFO">2025-03-04 19:48:58,709 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:58,853 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:48:58,853 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:48:59,004 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-03-04 19:48:59,057 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 19:48:59,433 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 19:48:59,661 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=612ca0e2-34eb-46ab-84da-a0c8399a818a
2025-03-04 19:48:59,703 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 19:49:00,058 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 19:49:01,059 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 19:49:01,078 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.300251, max=4.030644, mean=1.8456996299999993, stddev=0.34617001984324575, median=1.831936, p75=1.993687, p95=2.281917, p98=2.431075, p99=2.774397, p999=4.030644, mean_rate=123.61613681786555, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:49:01,079 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 19:49:01,079 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:49:01,079 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 19:49:01.418" endtime="20250304 19:49:01.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:49:01.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:49:01.419" endtime="20250304 19:49:01.419"/>
</kw>
<status status="PASS" starttime="20250304 19:48:57.756" endtime="20250304 19:49:01.419"/>
</kw>
<msg timestamp="20250304 19:49:01.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:48:57.756" endtime="20250304 19:49:01.419"/>
</kw>
<msg timestamp="20250304 19:49:01.419" level="INFO">${result} = 2025-03-04 19:48:58,709 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:48:58,853 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:48:57.755" endtime="20250304 19:49:01.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:49:01.420" endtime="20250304 19:49:01.420"/>
</kw>
<status status="PASS" starttime="20250304 19:48:57.754" endtime="20250304 19:49:01.420"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:48:57.753" endtime="20250304 19:49:01.420"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250304 19:48:57.722" endtime="20250304 19:49:01.421"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="53669"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate-Chunk">restart.Validate-Chunk</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
