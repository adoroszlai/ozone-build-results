<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250304 19:30:33.031" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:27:40.599" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:27:48.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:27:48.236" level="INFO">${output} = 2025-03-04 19:27:41,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:27:41,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:27:40.597" endtime="20250304 19:27:48.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:27:48.237" level="INFO">2025-03-04 19:27:41,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:27:41,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:27:41,656 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:27:41,806 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-03-04 19:27:41,860 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 19:27:42,719 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-03-04 19:27:42,817 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-03-04 19:27:42,861 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 19:27:43,081 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 19:27:43,862 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2025-03-04 19:27:44,862 [Thread-3] INFO freon.ProgressBar: Progress: 18.00 % (18 out of 100)
2025-03-04 19:27:45,862 [Thread-3] INFO freon.ProgressBar: Progress: 45.00 % (45 out of 100)
2025-03-04 19:27:46,864 [Thread-3] INFO freon.ProgressBar: Progress: 75.00 % (75 out of 100)
2025-03-04 19:27:47,864 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 19:27:47,892 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=23.531855, max=843.458022, mean=47.182798478159654, stddev=81.59730204865434, median=34.203462, p75=41.799665, p95=57.195765, p98=178.320973, p99=184.160711, p999=843.458022, mean_rate=19.921708510313202, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:27:47,892 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2025-03-04 19:27:47,893 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:27:47,893 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 19:27:48.236" endtime="20250304 19:27:48.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:27:48.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:27:48.237" endtime="20250304 19:27:48.237"/>
</kw>
<status status="PASS" starttime="20250304 19:27:40.597" endtime="20250304 19:27:48.237"/>
</kw>
<msg timestamp="20250304 19:27:48.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:27:40.596" endtime="20250304 19:27:48.237"/>
</kw>
<msg timestamp="20250304 19:27:48.237" level="INFO">${result} = 2025-03-04 19:27:41,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:27:41,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:27:40.596" endtime="20250304 19:27:48.237"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:27:48.238" endtime="20250304 19:27:48.238"/>
</kw>
<status status="PASS" starttime="20250304 19:27:40.595" endtime="20250304 19:27:48.238"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 19:27:48.238" level="INFO">${random} = 93791</msg>
<status status="PASS" starttime="20250304 19:27:48.238" endtime="20250304 19:27:48.238"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 19:27:48.239" level="INFO">${volume_name} = 93791-volume-for-prepare</msg>
<status status="PASS" starttime="20250304 19:27:48.238" endtime="20250304 19:27:48.239"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 19:27:48.240" level="INFO">${bucket_name} = 93791-bucket-for-prepare</msg>
<status status="PASS" starttime="20250304 19:27:48.239" endtime="20250304 19:27:48.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:27:48.243" level="INFO">Running command 'ozone sh volume create /93791-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:27:50.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:27:50.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:27:48.241" endtime="20250304 19:27:50.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:27:50.012" level="INFO"/>
<status status="PASS" starttime="20250304 19:27:50.011" endtime="20250304 19:27:50.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:27:50.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:27:50.012" endtime="20250304 19:27:50.012"/>
</kw>
<status status="PASS" starttime="20250304 19:27:48.241" endtime="20250304 19:27:50.012"/>
</kw>
<msg timestamp="20250304 19:27:50.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:27:48.240" endtime="20250304 19:27:50.013"/>
</kw>
<status status="PASS" starttime="20250304 19:27:48.240" endtime="20250304 19:27:50.013"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:27:50.015" level="INFO">Running command 'ozone sh bucket create /93791-volume-for-prepare/93791-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:27:51.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:27:51.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:27:50.013" endtime="20250304 19:27:51.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:27:51.753" level="INFO"/>
<status status="PASS" starttime="20250304 19:27:51.752" endtime="20250304 19:27:51.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:27:51.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:27:51.753" endtime="20250304 19:27:51.753"/>
</kw>
<status status="PASS" starttime="20250304 19:27:50.013" endtime="20250304 19:27:51.753"/>
</kw>
<msg timestamp="20250304 19:27:51.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:27:50.013" endtime="20250304 19:27:51.754"/>
</kw>
<status status="PASS" starttime="20250304 19:27:50.013" endtime="20250304 19:27:51.754"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:27:51.756" level="INFO">Running command 'ozone sh key put /93791-volume-for-prepare/93791-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:27:54.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:27:54.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:27:51.754" endtime="20250304 19:27:54.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:27:54.618" level="INFO"/>
<status status="PASS" starttime="20250304 19:27:54.617" endtime="20250304 19:27:54.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:27:54.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:27:54.618" endtime="20250304 19:27:54.618"/>
</kw>
<status status="PASS" starttime="20250304 19:27:51.754" endtime="20250304 19:27:54.618"/>
</kw>
<msg timestamp="20250304 19:27:54.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:27:51.754" endtime="20250304 19:27:54.618"/>
</kw>
<status status="PASS" starttime="20250304 19:27:51.754" endtime="20250304 19:27:54.618"/>
</kw>
<status status="PASS" starttime="20250304 19:27:40.595" endtime="20250304 19:27:54.618"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:27:54.619" endtime="20250304 19:27:54.620"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:27:54.622" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:01.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:01.236" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 19:27:54.620" endtime="20250304 19:28:01.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:01.237" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250304 19:28:01.237" endtime="20250304 19:28:01.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:01.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:01.237" endtime="20250304 19:28:01.238"/>
</kw>
<status status="PASS" starttime="20250304 19:27:54.620" endtime="20250304 19:28:01.238"/>
</kw>
<msg timestamp="20250304 19:28:01.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:27:54.620" endtime="20250304 19:28:01.238"/>
</kw>
<msg timestamp="20250304 19:28:01.238" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 19:27:54.620" endtime="20250304 19:28:01.238"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:28:01.238" endtime="20250304 19:28:01.239"/>
</kw>
<status status="PASS" starttime="20250304 19:28:01.238" endtime="20250304 19:28:01.239"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:27:54.619" endtime="20250304 19:28:01.239"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:28:01.240" endtime="20250304 19:28:01.240"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:01.243" level="INFO">Running command 'ozone sh key info /93791-volume-for-prepare/93791-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:03.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:03.233" level="INFO">${output} = {
  "volumeName" : "93791-volume-for-prepare",
  "bucketName" : "93791-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T19:27:5...</msg>
<status status="PASS" starttime="20250304 19:28:01.241" endtime="20250304 19:28:03.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:03.233" level="INFO">{
  "volumeName" : "93791-volume-for-prepare",
  "bucketName" : "93791-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T19:27:53.505Z",
  "modificationTime" : "2025-03-04T19:27:54.266Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 115816896921600101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 411,
  "file" : true
}</msg>
<status status="PASS" starttime="20250304 19:28:03.233" endtime="20250304 19:28:03.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:03.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:03.234" endtime="20250304 19:28:03.234"/>
</kw>
<status status="PASS" starttime="20250304 19:28:01.241" endtime="20250304 19:28:03.234"/>
</kw>
<msg timestamp="20250304 19:28:03.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:28:01.241" endtime="20250304 19:28:03.234"/>
</kw>
<msg timestamp="20250304 19:28:03.234" level="INFO">${result} = {
  "volumeName" : "93791-volume-for-prepare",
  "bucketName" : "93791-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T19:27:5...</msg>
<status status="PASS" starttime="20250304 19:28:01.240" endtime="20250304 19:28:03.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:28:03.234" endtime="20250304 19:28:03.235"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:28:01.239" endtime="20250304 19:28:03.235"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:28:03.236" endtime="20250304 19:28:03.236"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:03.238" level="INFO">Running command 'ozone sh key put /93791-volume-for-prepare/93791-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:04.937" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 19:28:04.937" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 19:28:03.236" endtime="20250304 19:28:04.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:04.938" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 19:28:04.937" endtime="20250304 19:28:04.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:04.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:04.938" endtime="20250304 19:28:04.938"/>
</kw>
<msg timestamp="20250304 19:28:04.939" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 19:28:03.236" endtime="20250304 19:28:04.939"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:28:04.939" endtime="20250304 19:28:04.939"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:04.942" level="INFO">Running command 'ozone sh key info /93791-volume-for-prepare/93791-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:06.663" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 19:28:06.663" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250304 19:28:04.940" endtime="20250304 19:28:06.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:06.664" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250304 19:28:06.663" endtime="20250304 19:28:06.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:06.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:06.664" endtime="20250304 19:28:06.664"/>
</kw>
<status status="PASS" starttime="20250304 19:28:04.939" endtime="20250304 19:28:06.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:28:03.235" endtime="20250304 19:28:06.664"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20250304 19:27:40.557" endtime="20250304 19:28:06.665"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 19:28:07.170" level="INFO">${random} = 34163</msg>
<status status="PASS" starttime="20250304 19:28:07.170" endtime="20250304 19:28:07.170"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 19:28:07.171" level="INFO">${volume_name} = 34163-volume-for-cancel</msg>
<status status="PASS" starttime="20250304 19:28:07.170" endtime="20250304 19:28:07.171"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 19:28:07.172" level="INFO">${bucket_name} = 34163-bucket-for-cancel</msg>
<status status="PASS" starttime="20250304 19:28:07.171" endtime="20250304 19:28:07.172"/>
</kw>
<status status="PASS" starttime="20250304 19:28:07.169" endtime="20250304 19:28:07.172"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:28:07.172" endtime="20250304 19:28:07.172"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:07.175" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:08.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:08.783" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250304 19:28:07.173" endtime="20250304 19:28:08.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:08.783" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250304 19:28:08.783" endtime="20250304 19:28:08.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:08.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:08.784" endtime="20250304 19:28:08.784"/>
</kw>
<status status="PASS" starttime="20250304 19:28:07.173" endtime="20250304 19:28:08.784"/>
</kw>
<msg timestamp="20250304 19:28:08.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:28:07.173" endtime="20250304 19:28:08.784"/>
</kw>
<msg timestamp="20250304 19:28:08.784" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250304 19:28:07.172" endtime="20250304 19:28:08.784"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:28:08.785" endtime="20250304 19:28:08.785"/>
</kw>
<status status="PASS" starttime="20250304 19:28:08.784" endtime="20250304 19:28:08.785"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:28:07.172" endtime="20250304 19:28:08.785"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:28:08.786" endtime="20250304 19:28:08.786"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:08.789" level="INFO">Running command 'ozone sh volume create /34163-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:10.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:10.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:28:08.787" endtime="20250304 19:28:10.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:10.541" level="INFO"/>
<status status="PASS" starttime="20250304 19:28:10.540" endtime="20250304 19:28:10.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:10.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:10.541" endtime="20250304 19:28:10.541"/>
</kw>
<status status="PASS" starttime="20250304 19:28:08.787" endtime="20250304 19:28:10.541"/>
</kw>
<msg timestamp="20250304 19:28:10.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:28:08.787" endtime="20250304 19:28:10.541"/>
</kw>
<status status="PASS" starttime="20250304 19:28:08.786" endtime="20250304 19:28:10.542"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:10.545" level="INFO">Running command 'ozone sh bucket create /34163-volume-for-cancel/34163-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:12.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:12.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:28:10.543" endtime="20250304 19:28:12.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:12.330" level="INFO"/>
<status status="PASS" starttime="20250304 19:28:12.329" endtime="20250304 19:28:12.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:12.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:12.330" endtime="20250304 19:28:12.330"/>
</kw>
<status status="PASS" starttime="20250304 19:28:10.542" endtime="20250304 19:28:12.330"/>
</kw>
<msg timestamp="20250304 19:28:12.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:28:10.542" endtime="20250304 19:28:12.330"/>
</kw>
<status status="PASS" starttime="20250304 19:28:10.542" endtime="20250304 19:28:12.330"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:12.333" level="INFO">Running command 'ozone sh key put /34163-volume-for-cancel/34163-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:15.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:15.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:28:12.331" endtime="20250304 19:28:15.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:15.346" level="INFO"/>
<status status="PASS" starttime="20250304 19:28:15.346" endtime="20250304 19:28:15.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:15.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:15.346" endtime="20250304 19:28:15.347"/>
</kw>
<status status="PASS" starttime="20250304 19:28:12.331" endtime="20250304 19:28:15.347"/>
</kw>
<msg timestamp="20250304 19:28:15.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:28:12.331" endtime="20250304 19:28:15.347"/>
</kw>
<msg timestamp="20250304 19:28:15.347" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250304 19:28:12.330" endtime="20250304 19:28:15.347"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:15.350" level="INFO">Running command 'ozone sh key info /34163-volume-for-cancel/34163-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:17.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:17.300" level="INFO">${output} = {
  "volumeName" : "34163-volume-for-cancel",
  "bucketName" : "34163-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T19:28:14.2...</msg>
<status status="PASS" starttime="20250304 19:28:15.348" endtime="20250304 19:28:17.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:17.301" level="INFO">{
  "volumeName" : "34163-volume-for-cancel",
  "bucketName" : "34163-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T19:28:14.239Z",
  "modificationTime" : "2025-03-04T19:28:14.994Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 115816896921600103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 423,
  "file" : true
}</msg>
<status status="PASS" starttime="20250304 19:28:17.300" endtime="20250304 19:28:17.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:17.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:17.301" endtime="20250304 19:28:17.301"/>
</kw>
<status status="PASS" starttime="20250304 19:28:15.348" endtime="20250304 19:28:17.302"/>
</kw>
<msg timestamp="20250304 19:28:17.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:28:15.348" endtime="20250304 19:28:17.302"/>
</kw>
<msg timestamp="20250304 19:28:17.302" level="INFO">${result} = {
  "volumeName" : "34163-volume-for-cancel",
  "bucketName" : "34163-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T19:28:14.2...</msg>
<status status="PASS" starttime="20250304 19:28:15.347" endtime="20250304 19:28:17.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:28:17.302" endtime="20250304 19:28:17.302"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:28:08.786" endtime="20250304 19:28:17.302"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20250304 19:28:07.136" endtime="20250304 19:28:17.303"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:17.883" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:24.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:24.536" level="INFO">${output} = 2025-03-04 19:28:18,817 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:28:18,948 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:28:17.881" endtime="20250304 19:28:24.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:24.537" level="INFO">2025-03-04 19:28:18,817 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:28:18,948 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 19:28:18,948 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 19:28:19,120 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-03-04 19:28:19,168 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 19:28:20,067 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 19:28:20,168 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 19:28:21,170 [Thread-3] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2025-03-04 19:28:22,170 [Thread-3] INFO freon.ProgressBar: Progress: 47.00 % (47 out of 100)
2025-03-04 19:28:23,172 [Thread-3] INFO freon.ProgressBar: Progress: 84.00 % (84 out of 100)
2025-03-04 19:28:24,172 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 19:28:24,196 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=20.971433, max=657.244965, mean=36.24479918875074, stddev=62.01058310587339, median=28.832674, p75=34.029216, p95=44.05255, p98=52.524802, p99=54.562723, p999=657.244965, mean_rate=23.64887653513516, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 19:28:24,196 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2025-03-04 19:28:24,196 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 19:28:24,196 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 19:28:24.536" endtime="20250304 19:28:24.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:24.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:24.537" endtime="20250304 19:28:24.537"/>
</kw>
<status status="PASS" starttime="20250304 19:28:17.881" endtime="20250304 19:28:24.537"/>
</kw>
<msg timestamp="20250304 19:28:24.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:28:17.881" endtime="20250304 19:28:24.537"/>
</kw>
<msg timestamp="20250304 19:28:24.538" level="INFO">${result} = 2025-03-04 19:28:18,817 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 19:28:18,948 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 19:28:17.881" endtime="20250304 19:28:24.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:28:24.538" endtime="20250304 19:28:24.538"/>
</kw>
<status status="PASS" starttime="20250304 19:28:17.880" endtime="20250304 19:28:24.538"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 19:28:24.538" level="INFO">${random} = 96707</msg>
<status status="PASS" starttime="20250304 19:28:24.538" endtime="20250304 19:28:24.538"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 19:28:24.539" level="INFO">${volume_name} = 96707-volume-for-prepare</msg>
<status status="PASS" starttime="20250304 19:28:24.539" endtime="20250304 19:28:24.539"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 19:28:24.540" level="INFO">${bucket_name} = 96707-bucket-for-prepare</msg>
<status status="PASS" starttime="20250304 19:28:24.539" endtime="20250304 19:28:24.540"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:24.543" level="INFO">Running command 'ozone sh volume create /96707-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:26.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:26.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:28:24.541" endtime="20250304 19:28:26.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:26.239" level="INFO"/>
<status status="PASS" starttime="20250304 19:28:26.239" endtime="20250304 19:28:26.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:26.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:26.239" endtime="20250304 19:28:26.240"/>
</kw>
<status status="PASS" starttime="20250304 19:28:24.541" endtime="20250304 19:28:26.240"/>
</kw>
<msg timestamp="20250304 19:28:26.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:28:24.541" endtime="20250304 19:28:26.240"/>
</kw>
<status status="PASS" starttime="20250304 19:28:24.540" endtime="20250304 19:28:26.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:26.243" level="INFO">Running command 'ozone sh bucket create /96707-volume-for-prepare/96707-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:27.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:27.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:28:26.241" endtime="20250304 19:28:27.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:27.988" level="INFO"/>
<status status="PASS" starttime="20250304 19:28:27.988" endtime="20250304 19:28:27.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:27.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:27.989" endtime="20250304 19:28:27.989"/>
</kw>
<status status="PASS" starttime="20250304 19:28:26.241" endtime="20250304 19:28:27.989"/>
</kw>
<msg timestamp="20250304 19:28:27.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:28:26.241" endtime="20250304 19:28:27.989"/>
</kw>
<status status="PASS" starttime="20250304 19:28:26.240" endtime="20250304 19:28:27.989"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:27.992" level="INFO">Running command 'ozone sh key put /96707-volume-for-prepare/96707-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:30.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:30.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:28:27.990" endtime="20250304 19:28:30.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:30.999" level="INFO"/>
<status status="PASS" starttime="20250304 19:28:30.999" endtime="20250304 19:28:30.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:31.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:30.999" endtime="20250304 19:28:31.000"/>
</kw>
<status status="PASS" starttime="20250304 19:28:27.990" endtime="20250304 19:28:31.000"/>
</kw>
<msg timestamp="20250304 19:28:31.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:28:27.990" endtime="20250304 19:28:31.000"/>
</kw>
<status status="PASS" starttime="20250304 19:28:27.989" endtime="20250304 19:28:31.000"/>
</kw>
<status status="PASS" starttime="20250304 19:28:17.880" endtime="20250304 19:28:31.000"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:28:31.001" endtime="20250304 19:28:31.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:31.004" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:37.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:37.720" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 19:28:31.002" endtime="20250304 19:28:37.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:37.720" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250304 19:28:37.720" endtime="20250304 19:28:37.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:37.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:37.721" endtime="20250304 19:28:37.721"/>
</kw>
<status status="PASS" starttime="20250304 19:28:31.002" endtime="20250304 19:28:37.721"/>
</kw>
<msg timestamp="20250304 19:28:37.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:28:31.002" endtime="20250304 19:28:37.721"/>
</kw>
<msg timestamp="20250304 19:28:37.721" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 19:28:31.001" endtime="20250304 19:28:37.721"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:28:37.722" endtime="20250304 19:28:37.722"/>
</kw>
<status status="PASS" starttime="20250304 19:28:37.721" endtime="20250304 19:28:37.722"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:28:31.000" endtime="20250304 19:28:37.722"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:28:37.723" endtime="20250304 19:28:37.723"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:37.727" level="INFO">Running command 'ozone sh key info /96707-volume-for-prepare/96707-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:39.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:39.735" level="INFO">${output} = {
  "volumeName" : "96707-volume-for-prepare",
  "bucketName" : "96707-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T19:28:2...</msg>
<status status="PASS" starttime="20250304 19:28:37.724" endtime="20250304 19:28:39.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:39.736" level="INFO">{
  "volumeName" : "96707-volume-for-prepare",
  "bucketName" : "96707-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T19:28:29.879Z",
  "modificationTime" : "2025-03-04T19:28:30.648Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 6,
    "localID" : 115816896921600204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 833,
  "file" : true
}</msg>
<status status="PASS" starttime="20250304 19:28:39.735" endtime="20250304 19:28:39.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:39.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:39.736" endtime="20250304 19:28:39.736"/>
</kw>
<status status="PASS" starttime="20250304 19:28:37.724" endtime="20250304 19:28:39.736"/>
</kw>
<msg timestamp="20250304 19:28:39.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:28:37.724" endtime="20250304 19:28:39.736"/>
</kw>
<msg timestamp="20250304 19:28:39.736" level="INFO">${result} = {
  "volumeName" : "96707-volume-for-prepare",
  "bucketName" : "96707-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T19:28:2...</msg>
<status status="PASS" starttime="20250304 19:28:37.724" endtime="20250304 19:28:39.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:28:39.736" endtime="20250304 19:28:39.737"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:28:37.723" endtime="20250304 19:28:39.737"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:28:39.738" endtime="20250304 19:28:39.738"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:39.740" level="INFO">Running command 'ozone sh key put /96707-volume-for-prepare/96707-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:41.506" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 19:28:41.506" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 19:28:39.738" endtime="20250304 19:28:41.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:41.507" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 19:28:41.507" endtime="20250304 19:28:41.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:41.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:41.507" endtime="20250304 19:28:41.508"/>
</kw>
<msg timestamp="20250304 19:28:41.508" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 19:28:39.738" endtime="20250304 19:28:41.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:28:41.508" endtime="20250304 19:28:41.508"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:41.510" level="INFO">Running command 'ozone sh key info /96707-volume-for-prepare/96707-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:43.260" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 19:28:43.260" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250304 19:28:41.508" endtime="20250304 19:28:43.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:43.260" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250304 19:28:43.260" endtime="20250304 19:28:43.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:43.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:43.261" endtime="20250304 19:28:43.261"/>
</kw>
<status status="PASS" starttime="20250304 19:28:41.508" endtime="20250304 19:28:43.261"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:28:39.737" endtime="20250304 19:28:43.261"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20250304 19:28:17.843" endtime="20250304 19:28:43.262"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:28:43.775" endtime="20250304 19:28:43.775"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 19:28:43.775" level="INFO">${random} = 14808</msg>
<status status="PASS" starttime="20250304 19:28:43.775" endtime="20250304 19:28:43.775"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 19:28:43.776" level="INFO">${volume_name} = 14808-volume-for-prepare</msg>
<status status="PASS" starttime="20250304 19:28:43.775" endtime="20250304 19:28:43.776"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:43.779" level="INFO">Running command 'ozone sh volume create /14808-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:45.493" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 19:28:45.493" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 19:28:43.777" endtime="20250304 19:28:45.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:45.494" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 19:28:45.494" endtime="20250304 19:28:45.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:45.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:45.494" endtime="20250304 19:28:45.495"/>
</kw>
<msg timestamp="20250304 19:28:45.495" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 19:28:43.776" endtime="20250304 19:28:45.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:28:45.495" endtime="20250304 19:28:45.495"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:45.498" level="INFO">Running command 'ozone sh volume info /14808-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:47.235" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 19:28:47.235" level="INFO">${output} = VOLUME_NOT_FOUND Volume 14808-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 19:28:45.496" endtime="20250304 19:28:47.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:47.236" level="INFO">VOLUME_NOT_FOUND Volume 14808-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 19:28:47.235" endtime="20250304 19:28:47.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:47.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:47.236" endtime="20250304 19:28:47.236"/>
</kw>
<msg timestamp="20250304 19:28:47.236" level="INFO">${result} = VOLUME_NOT_FOUND Volume 14808-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 19:28:45.495" endtime="20250304 19:28:47.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:28:47.236" endtime="20250304 19:28:47.237"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:28:43.774" endtime="20250304 19:28:47.237"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:28:47.238" endtime="20250304 19:28:47.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:28:47.241" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:28:49.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:28:49.247" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "34163-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20250304 19:28:47.239" endtime="20250304 19:28:49.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:28:49.248" level="INFO">[ {
  "metadata" : { },
  "name" : "34163-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T19:28:10.508Z",
  "modificationTime" : "2025-03-04T19:28:10.508Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "96707-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T19:28:26.208Z",
  "modificationTime" : "2025-03-04T19:28:26.208Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "93791-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T19:27:49.978Z",
  "modificationTime" : "2025-03-04T19:27:49.978Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-03-04T19:27:22.946Z",
  "modificationTime" : "2025-03-04T19:27:22.946Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T19:27:42.727Z",
  "modificationTime" : "2025-03-04T19:27:42.727Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20250304 19:28:49.247" endtime="20250304 19:28:49.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:28:49.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:28:49.248" endtime="20250304 19:28:49.249"/>
</kw>
<status status="PASS" starttime="20250304 19:28:47.238" endtime="20250304 19:28:49.249"/>
</kw>
<msg timestamp="20250304 19:28:49.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:28:47.238" endtime="20250304 19:28:49.249"/>
</kw>
<msg timestamp="20250304 19:28:49.249" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "34163-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20250304 19:28:47.238" endtime="20250304 19:28:49.249"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:28:47.237" endtime="20250304 19:28:49.249"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20250304 19:28:43.741" endtime="20250304 19:28:49.250"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:29:28.953" endtime="20250304 19:29:28.954"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 19:29:28.954" level="INFO">${random} = 89863</msg>
<status status="PASS" starttime="20250304 19:29:28.954" endtime="20250304 19:29:28.954"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 19:29:28.955" level="INFO">${volume_name} = 89863-volume-for-prepare</msg>
<status status="PASS" starttime="20250304 19:29:28.954" endtime="20250304 19:29:28.955"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:29:28.957" level="INFO">Running command 'ozone sh volume create /89863-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:29:30.740" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 19:29:30.740" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 19:29:28.955" endtime="20250304 19:29:30.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:29:30.741" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 19:29:30.741" endtime="20250304 19:29:30.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:29:30.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:29:30.741" endtime="20250304 19:29:30.742"/>
</kw>
<msg timestamp="20250304 19:29:30.742" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 19:29:28.955" endtime="20250304 19:29:30.742"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:29:30.742" endtime="20250304 19:29:30.742"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:29:30.745" level="INFO">Running command 'ozone sh volume info /89863-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:29:32.546" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 19:29:32.546" level="INFO">${output} = VOLUME_NOT_FOUND Volume 89863-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 19:29:30.743" endtime="20250304 19:29:32.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:29:32.547" level="INFO">VOLUME_NOT_FOUND Volume 89863-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 19:29:32.546" endtime="20250304 19:29:32.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:29:32.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:29:32.547" endtime="20250304 19:29:32.547"/>
</kw>
<msg timestamp="20250304 19:29:32.548" level="INFO">${result} = VOLUME_NOT_FOUND Volume 89863-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 19:29:30.742" endtime="20250304 19:29:32.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:29:32.548" endtime="20250304 19:29:32.548"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:29:28.953" endtime="20250304 19:29:32.548"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 19:29:32.549" endtime="20250304 19:29:32.549"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:29:32.552" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:29:34.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:29:34.499" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "34163-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20250304 19:29:32.550" endtime="20250304 19:29:34.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:29:34.500" level="INFO">[ {
  "metadata" : { },
  "name" : "34163-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T19:28:10.508Z",
  "modificationTime" : "2025-03-04T19:28:10.508Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "96707-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T19:28:26.208Z",
  "modificationTime" : "2025-03-04T19:28:26.208Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "93791-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T19:27:49.978Z",
  "modificationTime" : "2025-03-04T19:27:49.978Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-03-04T19:27:22.946Z",
  "modificationTime" : "2025-03-04T19:27:22.946Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T19:27:42.727Z",
  "modificationTime" : "2025-03-04T19:27:42.727Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20250304 19:29:34.499" endtime="20250304 19:29:34.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:29:34.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:29:34.500" endtime="20250304 19:29:34.500"/>
</kw>
<status status="PASS" starttime="20250304 19:29:32.550" endtime="20250304 19:29:34.500"/>
</kw>
<msg timestamp="20250304 19:29:34.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:29:32.550" endtime="20250304 19:29:34.500"/>
</kw>
<msg timestamp="20250304 19:29:34.501" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "34163-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20250304 19:29:32.549" endtime="20250304 19:29:34.501"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:29:32.549" endtime="20250304 19:29:34.501"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20250304 19:29:28.921" endtime="20250304 19:29:34.502"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:30:17.588" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:30:19.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:30:19.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:30:17.585" endtime="20250304 19:30:19.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:30:19.479" level="INFO"/>
<status status="PASS" starttime="20250304 19:30:19.479" endtime="20250304 19:30:19.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:30:19.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:30:19.480" endtime="20250304 19:30:19.480"/>
</kw>
<status status="PASS" starttime="20250304 19:30:17.585" endtime="20250304 19:30:19.480"/>
</kw>
<msg timestamp="20250304 19:30:19.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:30:17.585" endtime="20250304 19:30:19.481"/>
</kw>
<msg timestamp="20250304 19:30:19.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:30:17.584" endtime="20250304 19:30:19.481"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:30:19.481" endtime="20250304 19:30:19.481"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:30:19.484" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:30:21.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:30:21.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:30:19.482" endtime="20250304 19:30:21.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:30:21.220" level="INFO"/>
<status status="PASS" starttime="20250304 19:30:21.220" endtime="20250304 19:30:21.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:30:21.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:30:21.220" endtime="20250304 19:30:21.221"/>
</kw>
<status status="PASS" starttime="20250304 19:30:19.482" endtime="20250304 19:30:21.221"/>
</kw>
<msg timestamp="20250304 19:30:21.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:30:19.482" endtime="20250304 19:30:21.221"/>
</kw>
<msg timestamp="20250304 19:30:21.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:30:19.481" endtime="20250304 19:30:21.221"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:30:21.221" endtime="20250304 19:30:21.221"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:30:21.224" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:30:24.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:30:24.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:30:21.222" endtime="20250304 19:30:24.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:30:24.445" level="INFO"/>
<status status="PASS" starttime="20250304 19:30:24.445" endtime="20250304 19:30:24.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:30:24.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:30:24.446" endtime="20250304 19:30:24.446"/>
</kw>
<status status="PASS" starttime="20250304 19:30:21.222" endtime="20250304 19:30:24.446"/>
</kw>
<msg timestamp="20250304 19:30:24.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:30:21.222" endtime="20250304 19:30:24.446"/>
</kw>
<msg timestamp="20250304 19:30:24.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:30:21.222" endtime="20250304 19:30:24.446"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:30:24.446" endtime="20250304 19:30:24.447"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:30:17.584" endtime="20250304 19:30:24.447"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 19:30:17.552" endtime="20250304 19:30:24.447"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 19:30:24.968" level="INFO">${random} = 39712</msg>
<status status="PASS" starttime="20250304 19:30:24.968" endtime="20250304 19:30:24.968"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 19:30:24.971" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-39712 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 19:30:27.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 19:30:27.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:30:24.969" endtime="20250304 19:30:27.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 19:30:27.813" level="INFO"/>
<status status="PASS" starttime="20250304 19:30:27.813" endtime="20250304 19:30:27.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 19:30:27.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 19:30:27.814" endtime="20250304 19:30:27.814"/>
</kw>
<status status="PASS" starttime="20250304 19:30:24.969" endtime="20250304 19:30:27.814"/>
</kw>
<msg timestamp="20250304 19:30:27.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 19:30:24.969" endtime="20250304 19:30:27.814"/>
</kw>
<msg timestamp="20250304 19:30:27.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 19:30:24.968" endtime="20250304 19:30:27.814"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 19:30:27.814" endtime="20250304 19:30:27.815"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 19:30:24.967" endtime="20250304 19:30:27.815"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 19:30:24.934" endtime="20250304 19:30:27.816"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="82561"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
