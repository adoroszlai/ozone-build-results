<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250304 05:25:45.763" rpa="false" schemaversion="4">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:24:10.383" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:24:14.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:24:14.076" level="INFO">${output} = 2025-03-04 05:24:11,311 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:11,467 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:24:10.381" endtime="20250304 05:24:14.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:24:14.077" level="INFO">2025-03-04 05:24:11,311 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:11,467 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:24:11,467 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:24:11,640 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-03-04 05:24:11,720 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:24:12,612 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-03-04 05:24:12,675 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-03-04 05:24:12,720 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:24:12,817 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 05:24:13,721 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 05:24:13,738 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=745.746796, max=745.746796, mean=745.746796, stddev=0.0, median=745.746796, p75=745.746796, p95=745.746796, p98=745.746796, p99=745.746796, p999=745.746796, mean_rate=0.9564913665372354, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:24:13,738 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 05:24:13,738 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:24:13,738 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 05:24:14.076" endtime="20250304 05:24:14.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:24:14.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:24:14.077" endtime="20250304 05:24:14.077"/>
</kw>
<status status="PASS" starttime="20250304 05:24:10.381" endtime="20250304 05:24:14.077"/>
</kw>
<msg timestamp="20250304 05:24:14.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:24:10.381" endtime="20250304 05:24:14.077"/>
</kw>
<msg timestamp="20250304 05:24:14.078" level="INFO">${result} = 2025-03-04 05:24:11,311 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:11,467 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:24:10.381" endtime="20250304 05:24:14.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:24:14.078" endtime="20250304 05:24:14.078"/>
</kw>
<status status="PASS" starttime="20250304 05:24:10.379" endtime="20250304 05:24:14.078"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:24:10.379" endtime="20250304 05:24:14.078"/>
</test>
<test id="s1-s1-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:24:14.083" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:24:16.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:24:16.346" level="INFO">${output} = 2025-03-04 05:24:14,960 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:15,086 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:24:14.081" endtime="20250304 05:24:16.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:24:16.347" level="INFO">2025-03-04 05:24:14,960 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:15,086 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:24:15,086 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:24:15,222 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2025-03-04 05:24:15,299 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:24:16,300 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 05:24:16,306 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=57.985547, max=57.985547, mean=57.985547, stddev=0.0, median=57.985547, p75=57.985547, p95=57.985547, p98=57.985547, p99=57.985547, p999=57.985547, mean_rate=5.40549878904935, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:24:16,307 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-03-04 05:24:16,307 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:24:16,307 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 05:24:16.347" endtime="20250304 05:24:16.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:24:16.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:24:16.347" endtime="20250304 05:24:16.348"/>
</kw>
<status status="PASS" starttime="20250304 05:24:14.081" endtime="20250304 05:24:16.348"/>
</kw>
<msg timestamp="20250304 05:24:16.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:24:14.080" endtime="20250304 05:24:16.348"/>
</kw>
<msg timestamp="20250304 05:24:16.348" level="INFO">${result} = 2025-03-04 05:24:14,960 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:15,086 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:24:14.080" endtime="20250304 05:24:16.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:24:16.348" endtime="20250304 05:24:16.349"/>
</kw>
<status status="PASS" starttime="20250304 05:24:14.079" endtime="20250304 05:24:16.349"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:24:14.079" endtime="20250304 05:24:16.349"/>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:24:16.353" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:24:18.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:24:18.611" level="INFO">${output} = 2025-03-04 05:24:17,235 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:17,361 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:24:16.351" endtime="20250304 05:24:18.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:24:18.611" level="INFO">2025-03-04 05:24:17,235 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:17,361 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:24:17,361 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:24:17,504 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2025-03-04 05:24:17,567 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:24:18,567 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 05:24:18,575 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=9.6549, max=9.6549, mean=9.6549, stddev=0.0, median=9.6549, p75=9.6549, p95=9.6549, p98=9.6549, p99=9.6549, p999=9.6549, mean_rate=3.7692402943909347, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:24:18,575 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-03-04 05:24:18,575 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:24:18,575 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 05:24:18.611" endtime="20250304 05:24:18.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:24:18.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:24:18.612" endtime="20250304 05:24:18.612"/>
</kw>
<status status="PASS" starttime="20250304 05:24:16.351" endtime="20250304 05:24:18.612"/>
</kw>
<msg timestamp="20250304 05:24:18.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:24:16.351" endtime="20250304 05:24:18.612"/>
</kw>
<msg timestamp="20250304 05:24:18.612" level="INFO">${result} = 2025-03-04 05:24:17,235 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:17,361 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:24:16.351" endtime="20250304 05:24:18.612"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:24:18.612" endtime="20250304 05:24:18.613"/>
</kw>
<status status="PASS" starttime="20250304 05:24:16.350" endtime="20250304 05:24:18.613"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:24:16.349" endtime="20250304 05:24:18.613"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250304 05:24:10.349" endtime="20250304 05:24:18.614"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s2-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:24:19.110" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:24:22.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:24:22.752" level="INFO">${output} = 2025-03-04 05:24:20,040 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:20,176 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:24:19.108" endtime="20250304 05:24:22.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:24:22.753" level="INFO">2025-03-04 05:24:20,040 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:20,176 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:24:20,176 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:24:20,334 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-03-04 05:24:20,398 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:24:21,320 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 05:24:21,399 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:24:22,399 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 05:24:22,411 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=21.197558, max=21.197558, mean=21.197558, stddev=0.0, median=21.197558, p75=21.197558, p95=21.197558, p98=21.197558, p99=21.197558, p999=21.197558, mean_rate=1.7021144830354573, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:24:22,411 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 05:24:22,411 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:24:22,411 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 05:24:22.752" endtime="20250304 05:24:22.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:24:22.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:24:22.753" endtime="20250304 05:24:22.753"/>
</kw>
<status status="PASS" starttime="20250304 05:24:19.108" endtime="20250304 05:24:22.753"/>
</kw>
<msg timestamp="20250304 05:24:22.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:24:19.108" endtime="20250304 05:24:22.753"/>
</kw>
<msg timestamp="20250304 05:24:22.753" level="INFO">${result} = 2025-03-04 05:24:20,040 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:20,176 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:24:19.107" endtime="20250304 05:24:22.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:24:22.754" endtime="20250304 05:24:22.754"/>
</kw>
<status status="PASS" starttime="20250304 05:24:19.106" endtime="20250304 05:24:22.754"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:24:19.106" endtime="20250304 05:24:22.754"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250304 05:24:19.076" endtime="20250304 05:24:22.755"/>
</suite>
<suite id="s1-s3" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s3-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:24:23.247" endtime="20250304 05:24:23.247"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:24:23.250" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:24:27.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:24:27.371" level="INFO">${output} = 2025-03-04 05:24:24,122 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:24,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:24:23.248" endtime="20250304 05:24:27.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:24:27.372" level="INFO">2025-03-04 05:24:24,122 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:24,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:24:24,250 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:24:24,768 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 05:24:24,987 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-03-04 05:24:25,012 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 05:24:25,051 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 05:24:26,012 [Thread-4] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2025-03-04 05:24:27,013 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 05:24:27,032 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=6.090354, max=544.616839, mean=16.386815347115597, stddev=52.90073316455295, median=10.170775, p75=13.398239, p95=18.036192, p98=21.160673, p99=29.43681, p999=544.616839, mean_rate=53.46705486528786, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:24:27,032 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 05:24:27,032 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:24:27,032 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 05:24:27.372" endtime="20250304 05:24:27.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:24:27.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:24:27.372" endtime="20250304 05:24:27.372"/>
</kw>
<status status="PASS" starttime="20250304 05:24:23.248" endtime="20250304 05:24:27.373"/>
</kw>
<msg timestamp="20250304 05:24:27.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:24:23.248" endtime="20250304 05:24:27.373"/>
</kw>
<msg timestamp="20250304 05:24:27.373" level="INFO">${result} = 2025-03-04 05:24:24,122 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:24,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:24:23.247" endtime="20250304 05:24:27.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:24:27.373" endtime="20250304 05:24:27.373"/>
</kw>
<status status="PASS" starttime="20250304 05:24:23.246" endtime="20250304 05:24:27.373"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:24:23.246" endtime="20250304 05:24:27.373"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250304 05:24:23.215" endtime="20250304 05:24:27.374"/>
</suite>
<suite id="s1-s4" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s4-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:24:27.871" endtime="20250304 05:24:27.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:24:27.874" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:24:31.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:24:31.430" level="INFO">${output} = 2025-03-04 05:24:28,750 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:28,879 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:24:27.872" endtime="20250304 05:24:31.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:24:31.430" level="INFO">2025-03-04 05:24:28,750 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:28,879 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:24:28,879 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:24:29,018 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-03-04 05:24:29,066 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 05:24:29,414 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 05:24:29,633 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=ed03c21a-cc41-4f1c-bc85-774c127c64a9
2025-03-04 05:24:29,703 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 05:24:30,070 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 05:24:31,072 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 05:24:31,090 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.363343, max=6.490238, mean=2.16827414, stddev=0.8510337523215049, median=1.839703, p75=2.467463, p95=3.585123, p98=4.801736, p99=5.750069, p999=6.490238, mean_rate=118.23540403623367, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:24:31,091 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 05:24:31,091 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:24:31,091 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 05:24:31.430" endtime="20250304 05:24:31.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:24:31.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:24:31.431" endtime="20250304 05:24:31.431"/>
</kw>
<status status="PASS" starttime="20250304 05:24:27.872" endtime="20250304 05:24:31.431"/>
</kw>
<msg timestamp="20250304 05:24:31.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:24:27.872" endtime="20250304 05:24:31.431"/>
</kw>
<msg timestamp="20250304 05:24:31.431" level="INFO">${result} = 2025-03-04 05:24:28,750 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:24:28,879 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:24:27.871" endtime="20250304 05:24:31.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:24:31.432" endtime="20250304 05:24:31.432"/>
</kw>
<status status="PASS" starttime="20250304 05:24:27.870" endtime="20250304 05:24:31.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:24:27.869" endtime="20250304 05:24:31.432"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250304 05:24:27.840" endtime="20250304 05:24:31.433"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s5-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:25:03.780" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:25:13.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:25:13.423" level="INFO">${output} = 2025-03-04 05:25:04,678 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:04,873 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:03.778" endtime="20250304 05:25:13.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:25:13.424" level="INFO">2025-03-04 05:25:04,678 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:04,873 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:25:04,873 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:25:05,012 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-03-04 05:25:05,061 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:06,062 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:07,062 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:07,519 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:812)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:233)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:226)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:161)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:127)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:118)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1246)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1169)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:525)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1953)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3198)
, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2025-03-04 05:25:08,063 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:09,063 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:10,063 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:11,064 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:12,064 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:12,154 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 05:25:13,064 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 05:25:13,079 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=20.751333, max=20.751333, mean=20.751333, stddev=0.0, median=20.751333, p75=20.751333, p95=20.751333, p98=20.751333, p99=20.751333, p999=20.751333, mean_rate=2.7940901104789937, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:25:13,080 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2025-03-04 05:25:13,080 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:25:13,080 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 05:25:13.423" endtime="20250304 05:25:13.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:25:13.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:25:13.424" endtime="20250304 05:25:13.424"/>
</kw>
<status status="PASS" starttime="20250304 05:25:03.778" endtime="20250304 05:25:13.425"/>
</kw>
<msg timestamp="20250304 05:25:13.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:25:03.778" endtime="20250304 05:25:13.425"/>
</kw>
<msg timestamp="20250304 05:25:13.425" level="INFO">${result} = 2025-03-04 05:25:04,678 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:04,873 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:03.777" endtime="20250304 05:25:13.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:25:13.425" endtime="20250304 05:25:13.425"/>
</kw>
<status status="PASS" starttime="20250304 05:25:03.776" endtime="20250304 05:25:13.425"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:25:03.776" endtime="20250304 05:25:13.425"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250304 05:25:03.747" endtime="20250304 05:25:13.426"/>
</suite>
<suite id="s1-s6" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s6-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:25:13.936" endtime="20250304 05:25:13.936"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:25:13.939" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:25:17.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:25:17.520" level="INFO">${output} = 2025-03-04 05:25:14,835 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:14,975 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:13.937" endtime="20250304 05:25:17.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:25:17.520" level="INFO">2025-03-04 05:25:14,835 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:14,975 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:25:14,975 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:25:15,096 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-03-04 05:25:15,146 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 05:25:15,524 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 05:25:15,735 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=ed03c21a-cc41-4f1c-bc85-774c127c64a9
2025-03-04 05:25:15,777 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 05:25:16,153 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 05:25:17,154 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 05:25:17,175 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.590868, max=5.292269, mean=2.1588300200000003, stddev=0.44582101847588973, median=2.138073, p75=2.320961, p95=2.700044, p98=2.853134, p99=3.190744, p999=5.292269, mean_rate=134.35427191949537, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:25:17,175 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 05:25:17,175 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:25:17,175 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 05:25:17.520" endtime="20250304 05:25:17.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:25:17.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:25:17.521" endtime="20250304 05:25:17.521"/>
</kw>
<status status="PASS" starttime="20250304 05:25:13.936" endtime="20250304 05:25:17.521"/>
</kw>
<msg timestamp="20250304 05:25:17.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:25:13.936" endtime="20250304 05:25:17.521"/>
</kw>
<msg timestamp="20250304 05:25:17.521" level="INFO">${result} = 2025-03-04 05:25:14,835 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:14,975 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:13.936" endtime="20250304 05:25:17.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:25:17.521" endtime="20250304 05:25:17.522"/>
</kw>
<status status="PASS" starttime="20250304 05:25:13.935" endtime="20250304 05:25:17.522"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:25:13.934" endtime="20250304 05:25:17.522"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250304 05:25:13.906" endtime="20250304 05:25:17.523"/>
</suite>
<suite id="s1-s7" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:25:18.027" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:25:21.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:25:21.581" level="INFO">${output} = 2025-03-04 05:25:18,901 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:19,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:18.025" endtime="20250304 05:25:21.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:25:21.582" level="INFO">2025-03-04 05:25:18,901 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:19,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:25:19,027 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:25:19,177 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-03-04 05:25:19,222 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:20,222 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 05:25:20,222 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:21,223 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 05:25:21,242 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=854.79834, max=854.79834, mean=854.79834, stddev=0.0, median=854.79834, p75=854.79834, p95=854.79834, p98=854.79834, p99=854.79834, p999=854.79834, mean_rate=0.8064295973752175, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:25:21,242 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 05:25:21,242 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:25:21,242 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 05:25:21.581" endtime="20250304 05:25:21.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:25:21.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:25:21.582" endtime="20250304 05:25:21.582"/>
</kw>
<status status="PASS" starttime="20250304 05:25:18.025" endtime="20250304 05:25:21.582"/>
</kw>
<msg timestamp="20250304 05:25:21.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:25:18.025" endtime="20250304 05:25:21.582"/>
</kw>
<msg timestamp="20250304 05:25:21.583" level="INFO">${result} = 2025-03-04 05:25:18,901 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:19,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:18.024" endtime="20250304 05:25:21.583"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:25:21.583" endtime="20250304 05:25:21.583"/>
</kw>
<status status="PASS" starttime="20250304 05:25:18.023" endtime="20250304 05:25:21.583"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:25:18.023" endtime="20250304 05:25:21.583"/>
</test>
<test id="s1-s7-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:25:21.588" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:25:23.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:25:23.818" level="INFO">${output} = 2025-03-04 05:25:22,477 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:22,606 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:21.586" endtime="20250304 05:25:23.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:25:23.819" level="INFO">2025-03-04 05:25:22,477 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:22,606 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:25:22,606 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:25:22,729 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2025-03-04 05:25:22,775 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:23,775 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 05:25:23,782 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=53.258541, max=53.258541, mean=53.258541, stddev=0.0, median=53.258541, p75=53.258541, p95=53.258541, p98=53.258541, p99=53.258541, p999=53.258541, mean_rate=4.429695939159083, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:25:23,782 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-03-04 05:25:23,782 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:25:23,782 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 05:25:23.818" endtime="20250304 05:25:23.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:25:23.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:25:23.819" endtime="20250304 05:25:23.819"/>
</kw>
<status status="PASS" starttime="20250304 05:25:21.585" endtime="20250304 05:25:23.819"/>
</kw>
<msg timestamp="20250304 05:25:23.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:25:21.585" endtime="20250304 05:25:23.819"/>
</kw>
<msg timestamp="20250304 05:25:23.820" level="INFO">${result} = 2025-03-04 05:25:22,477 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:22,606 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:21.585" endtime="20250304 05:25:23.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:25:23.820" endtime="20250304 05:25:23.820"/>
</kw>
<status status="PASS" starttime="20250304 05:25:21.584" endtime="20250304 05:25:23.820"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:25:21.584" endtime="20250304 05:25:23.820"/>
</test>
<test id="s1-s7-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:25:23.824" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:25:26.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:25:26.120" level="INFO">${output} = 2025-03-04 05:25:24,711 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:24,896 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:23.822" endtime="20250304 05:25:26.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:25:26.121" level="INFO">2025-03-04 05:25:24,711 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:24,896 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:25:24,896 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:25:25,027 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2025-03-04 05:25:25,075 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:26,076 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 05:25:26,083 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=8.894113, max=8.894113, mean=8.894113, stddev=0.0, median=8.894113, p75=8.894113, p95=8.894113, p98=8.894113, p99=8.894113, p999=8.894113, mean_rate=3.7492914214142674, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:25:26,083 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-03-04 05:25:26,084 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:25:26,084 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 05:25:26.121" endtime="20250304 05:25:26.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:25:26.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:25:26.121" endtime="20250304 05:25:26.122"/>
</kw>
<status status="PASS" starttime="20250304 05:25:23.822" endtime="20250304 05:25:26.122"/>
</kw>
<msg timestamp="20250304 05:25:26.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:25:23.822" endtime="20250304 05:25:26.122"/>
</kw>
<msg timestamp="20250304 05:25:26.122" level="INFO">${result} = 2025-03-04 05:25:24,711 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:24,896 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:23.822" endtime="20250304 05:25:26.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:25:26.122" endtime="20250304 05:25:26.122"/>
</kw>
<status status="PASS" starttime="20250304 05:25:23.821" endtime="20250304 05:25:26.122"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:25:23.821" endtime="20250304 05:25:26.123"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250304 05:25:17.994" endtime="20250304 05:25:26.123"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s8-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:25:26.634" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:25:30.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:25:30.186" level="INFO">${output} = 2025-03-04 05:25:27,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:27,637 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:26.632" endtime="20250304 05:25:30.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:25:30.187" level="INFO">2025-03-04 05:25:27,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:27,637 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:25:27,637 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:25:27,786 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-03-04 05:25:27,835 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:28,658 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 05:25:28,836 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 05:25:29,836 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 05:25:29,848 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=24.337888, max=24.337888, mean=24.337888, stddev=0.0, median=24.337888, p75=24.337888, p95=24.337888, p98=24.337888, p99=24.337888, p999=24.337888, mean_rate=1.4279739724212188, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:25:29,848 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 05:25:29,848 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:25:29,848 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 05:25:30.187" endtime="20250304 05:25:30.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:25:30.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:25:30.187" endtime="20250304 05:25:30.188"/>
</kw>
<status status="PASS" starttime="20250304 05:25:26.632" endtime="20250304 05:25:30.188"/>
</kw>
<msg timestamp="20250304 05:25:30.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:25:26.632" endtime="20250304 05:25:30.188"/>
</kw>
<msg timestamp="20250304 05:25:30.188" level="INFO">${result} = 2025-03-04 05:25:27,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:27,637 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:26.631" endtime="20250304 05:25:30.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:25:30.188" endtime="20250304 05:25:30.188"/>
</kw>
<status status="PASS" starttime="20250304 05:25:26.630" endtime="20250304 05:25:30.188"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:25:26.630" endtime="20250304 05:25:30.189"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250304 05:25:26.599" endtime="20250304 05:25:30.189"/>
</suite>
<suite id="s1-s9" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s9-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:25:30.693" endtime="20250304 05:25:30.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:25:30.696" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:25:34.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:25:34.861" level="INFO">${output} = 2025-03-04 05:25:31,624 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:31,750 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:30.694" endtime="20250304 05:25:34.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:25:34.862" level="INFO">2025-03-04 05:25:31,624 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:31,750 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:25:31,750 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:25:32,244 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 05:25:32,470 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-03-04 05:25:32,499 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 05:25:32,539 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 05:25:33,500 [Thread-4] INFO freon.ProgressBar: Progress: 34.00 % (34 out of 100)
2025-03-04 05:25:34,501 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 05:25:34,518 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=5.674509, max=432.532912, mean=13.552108810439977, stddev=42.14300229415483, median=8.821407, p75=10.683912, p95=14.299252, p98=16.463667, p99=16.463667, p999=432.532912, mean_rate=53.592198830997766, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:25:34,518 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 05:25:34,518 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:25:34,519 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 05:25:34.862" endtime="20250304 05:25:34.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:25:34.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:25:34.862" endtime="20250304 05:25:34.863"/>
</kw>
<status status="PASS" starttime="20250304 05:25:30.694" endtime="20250304 05:25:34.863"/>
</kw>
<msg timestamp="20250304 05:25:34.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:25:30.693" endtime="20250304 05:25:34.863"/>
</kw>
<msg timestamp="20250304 05:25:34.863" level="INFO">${result} = 2025-03-04 05:25:31,624 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:31,750 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:30.693" endtime="20250304 05:25:34.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:25:34.863" endtime="20250304 05:25:34.863"/>
</kw>
<status status="PASS" starttime="20250304 05:25:30.692" endtime="20250304 05:25:34.863"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:25:30.691" endtime="20250304 05:25:34.864"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250304 05:25:30.663" endtime="20250304 05:25:34.864"/>
</suite>
<suite id="s1-s10" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s10-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:25:35.374" endtime="20250304 05:25:35.374"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:25:35.377" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:25:38.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:25:38.938" level="INFO">${output} = 2025-03-04 05:25:36,246 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:36,382 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:35.375" endtime="20250304 05:25:38.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:25:38.939" level="INFO">2025-03-04 05:25:36,246 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:36,382 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:25:36,383 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:25:36,528 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-03-04 05:25:36,580 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 05:25:36,929 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 05:25:37,139 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=ed03c21a-cc41-4f1c-bc85-774c127c64a9
2025-03-04 05:25:37,181 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 05:25:37,581 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 05:25:38,582 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 05:25:38,600 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.343034, max=3.373182, mean=1.8382257400000002, stddev=0.3308700359454334, median=1.796141, p75=1.95423, p95=2.297664, p98=2.765411, p99=2.983234, p999=3.373182, mean_rate=117.11344848031429, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:25:38,600 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 05:25:38,600 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:25:38,600 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 05:25:38.938" endtime="20250304 05:25:38.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:25:38.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:25:38.939" endtime="20250304 05:25:38.939"/>
</kw>
<status status="PASS" starttime="20250304 05:25:35.375" endtime="20250304 05:25:38.939"/>
</kw>
<msg timestamp="20250304 05:25:38.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:25:35.375" endtime="20250304 05:25:38.939"/>
</kw>
<msg timestamp="20250304 05:25:38.939" level="INFO">${result} = 2025-03-04 05:25:36,246 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:25:36,382 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:25:35.374" endtime="20250304 05:25:38.939"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:25:38.940" endtime="20250304 05:25:38.940"/>
</kw>
<status status="PASS" starttime="20250304 05:25:35.373" endtime="20250304 05:25:38.940"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:25:35.373" endtime="20250304 05:25:38.940"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250304 05:25:35.344" endtime="20250304 05:25:38.941"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="52509"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate-Chunk">restart.Validate-Chunk</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
