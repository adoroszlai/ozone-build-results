<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250304 05:07:51.545" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:04:53.825" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:01.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:01.339" level="INFO">${output} = 2025-03-04 05:04:54,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:04:54,788 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:04:53.823" endtime="20250304 05:05:01.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:01.340" level="INFO">2025-03-04 05:04:54,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:04:54,788 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:04:54,788 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:04:54,929 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-03-04 05:04:54,971 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 05:04:55,757 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-03-04 05:04:55,883 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-03-04 05:04:55,971 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 05:04:56,073 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 05:04:56,972 [Thread-3] INFO freon.ProgressBar: Progress: 4.00 % (4 out of 100)
2025-03-04 05:04:57,973 [Thread-3] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2025-03-04 05:04:58,974 [Thread-3] INFO freon.ProgressBar: Progress: 54.00 % (54 out of 100)
2025-03-04 05:04:59,975 [Thread-3] INFO freon.ProgressBar: Progress: 87.00 % (87 out of 100)
2025-03-04 05:05:00,975 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 05:05:00,996 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=21.502449, max=764.556662, mean=43.799299027108376, stddev=74.41769186450368, median=33.064204, p75=39.176049, p95=50.347287, p98=161.584662, p99=190.730501, p999=764.556662, mean_rate=19.722446686236754, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:05:00,996 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2025-03-04 05:05:00,997 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:05:00,997 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 05:05:01.339" endtime="20250304 05:05:01.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:01.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:01.340" endtime="20250304 05:05:01.340"/>
</kw>
<status status="PASS" starttime="20250304 05:04:53.823" endtime="20250304 05:05:01.340"/>
</kw>
<msg timestamp="20250304 05:05:01.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:04:53.822" endtime="20250304 05:05:01.340"/>
</kw>
<msg timestamp="20250304 05:05:01.340" level="INFO">${result} = 2025-03-04 05:04:54,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:04:54,788 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:04:53.822" endtime="20250304 05:05:01.340"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:05:01.340" endtime="20250304 05:05:01.341"/>
</kw>
<status status="PASS" starttime="20250304 05:04:53.821" endtime="20250304 05:05:01.341"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 05:05:01.341" level="INFO">${random} = 34425</msg>
<status status="PASS" starttime="20250304 05:05:01.341" endtime="20250304 05:05:01.341"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 05:05:01.342" level="INFO">${volume_name} = 34425-volume-for-prepare</msg>
<status status="PASS" starttime="20250304 05:05:01.341" endtime="20250304 05:05:01.342"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 05:05:01.343" level="INFO">${bucket_name} = 34425-bucket-for-prepare</msg>
<status status="PASS" starttime="20250304 05:05:01.342" endtime="20250304 05:05:01.343"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:01.345" level="INFO">Running command 'ozone sh volume create /34425-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:03.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:03.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:05:01.343" endtime="20250304 05:05:03.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:03.085" level="INFO"/>
<status status="PASS" starttime="20250304 05:05:03.085" endtime="20250304 05:05:03.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:03.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:03.085" endtime="20250304 05:05:03.086"/>
</kw>
<status status="PASS" starttime="20250304 05:05:01.343" endtime="20250304 05:05:03.086"/>
</kw>
<msg timestamp="20250304 05:05:03.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:01.343" endtime="20250304 05:05:03.086"/>
</kw>
<status status="PASS" starttime="20250304 05:05:01.343" endtime="20250304 05:05:03.086"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:03.089" level="INFO">Running command 'ozone sh bucket create /34425-volume-for-prepare/34425-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:04.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:04.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:05:03.087" endtime="20250304 05:05:04.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:04.772" level="INFO"/>
<status status="PASS" starttime="20250304 05:05:04.772" endtime="20250304 05:05:04.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:04.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:04.772" endtime="20250304 05:05:04.773"/>
</kw>
<status status="PASS" starttime="20250304 05:05:03.087" endtime="20250304 05:05:04.773"/>
</kw>
<msg timestamp="20250304 05:05:04.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:03.087" endtime="20250304 05:05:04.773"/>
</kw>
<status status="PASS" starttime="20250304 05:05:03.086" endtime="20250304 05:05:04.773"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:04.776" level="INFO">Running command 'ozone sh key put /34425-volume-for-prepare/34425-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:07.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:07.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:05:04.774" endtime="20250304 05:05:07.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:07.560" level="INFO"/>
<status status="PASS" starttime="20250304 05:05:07.560" endtime="20250304 05:05:07.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:07.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:07.560" endtime="20250304 05:05:07.561"/>
</kw>
<status status="PASS" starttime="20250304 05:05:04.774" endtime="20250304 05:05:07.561"/>
</kw>
<msg timestamp="20250304 05:05:07.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:04.773" endtime="20250304 05:05:07.561"/>
</kw>
<status status="PASS" starttime="20250304 05:05:04.773" endtime="20250304 05:05:07.561"/>
</kw>
<status status="PASS" starttime="20250304 05:04:53.821" endtime="20250304 05:05:07.561"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:05:07.562" endtime="20250304 05:05:07.562"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:07.565" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:14.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:14.187" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 05:05:07.563" endtime="20250304 05:05:14.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:14.188" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250304 05:05:14.187" endtime="20250304 05:05:14.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:14.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:14.188" endtime="20250304 05:05:14.188"/>
</kw>
<status status="PASS" starttime="20250304 05:05:07.563" endtime="20250304 05:05:14.188"/>
</kw>
<msg timestamp="20250304 05:05:14.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:07.563" endtime="20250304 05:05:14.188"/>
</kw>
<msg timestamp="20250304 05:05:14.189" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 05:05:07.562" endtime="20250304 05:05:14.189"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:05:14.189" endtime="20250304 05:05:14.189"/>
</kw>
<status status="PASS" starttime="20250304 05:05:14.189" endtime="20250304 05:05:14.189"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:05:07.561" endtime="20250304 05:05:14.189"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:05:14.190" endtime="20250304 05:05:14.190"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:14.193" level="INFO">Running command 'ozone sh key info /34425-volume-for-prepare/34425-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:16.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:16.280" level="INFO">${output} = {
  "volumeName" : "34425-volume-for-prepare",
  "bucketName" : "34425-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T05:05:0...</msg>
<status status="PASS" starttime="20250304 05:05:14.191" endtime="20250304 05:05:16.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:16.280" level="INFO">{
  "volumeName" : "34425-volume-for-prepare",
  "bucketName" : "34425-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T05:05:06.491Z",
  "modificationTime" : "2025-03-04T05:05:07.209Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 5,
    "localID" : 115816896921600101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 411,
  "file" : true
}</msg>
<status status="PASS" starttime="20250304 05:05:16.280" endtime="20250304 05:05:16.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:16.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:16.281" endtime="20250304 05:05:16.281"/>
</kw>
<status status="PASS" starttime="20250304 05:05:14.191" endtime="20250304 05:05:16.281"/>
</kw>
<msg timestamp="20250304 05:05:16.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:14.191" endtime="20250304 05:05:16.281"/>
</kw>
<msg timestamp="20250304 05:05:16.281" level="INFO">${result} = {
  "volumeName" : "34425-volume-for-prepare",
  "bucketName" : "34425-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T05:05:0...</msg>
<status status="PASS" starttime="20250304 05:05:14.191" endtime="20250304 05:05:16.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:05:16.281" endtime="20250304 05:05:16.282"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:05:14.190" endtime="20250304 05:05:16.282"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:05:16.282" endtime="20250304 05:05:16.283"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:16.285" level="INFO">Running command 'ozone sh key put /34425-volume-for-prepare/34425-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:17.980" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 05:05:17.980" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 05:05:16.283" endtime="20250304 05:05:17.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:17.980" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 05:05:17.980" endtime="20250304 05:05:17.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:17.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:17.981" endtime="20250304 05:05:17.981"/>
</kw>
<msg timestamp="20250304 05:05:17.981" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 05:05:16.283" endtime="20250304 05:05:17.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:05:17.981" endtime="20250304 05:05:17.981"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:17.983" level="INFO">Running command 'ozone sh key info /34425-volume-for-prepare/34425-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:19.645" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 05:05:19.645" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250304 05:05:17.982" endtime="20250304 05:05:19.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:19.645" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250304 05:05:19.645" endtime="20250304 05:05:19.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:19.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:19.646" endtime="20250304 05:05:19.646"/>
</kw>
<status status="PASS" starttime="20250304 05:05:17.981" endtime="20250304 05:05:19.646"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:05:16.282" endtime="20250304 05:05:19.646"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20250304 05:04:53.785" endtime="20250304 05:05:19.647"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 05:05:20.139" level="INFO">${random} = 41079</msg>
<status status="PASS" starttime="20250304 05:05:20.139" endtime="20250304 05:05:20.139"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 05:05:20.140" level="INFO">${volume_name} = 41079-volume-for-cancel</msg>
<status status="PASS" starttime="20250304 05:05:20.139" endtime="20250304 05:05:20.140"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 05:05:20.141" level="INFO">${bucket_name} = 41079-bucket-for-cancel</msg>
<status status="PASS" starttime="20250304 05:05:20.140" endtime="20250304 05:05:20.141"/>
</kw>
<status status="PASS" starttime="20250304 05:05:20.138" endtime="20250304 05:05:20.141"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:05:20.141" endtime="20250304 05:05:20.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:20.144" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:21.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:21.647" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250304 05:05:20.142" endtime="20250304 05:05:21.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:21.648" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250304 05:05:21.647" endtime="20250304 05:05:21.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:21.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:21.648" endtime="20250304 05:05:21.648"/>
</kw>
<status status="PASS" starttime="20250304 05:05:20.142" endtime="20250304 05:05:21.648"/>
</kw>
<msg timestamp="20250304 05:05:21.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:20.142" endtime="20250304 05:05:21.648"/>
</kw>
<msg timestamp="20250304 05:05:21.648" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250304 05:05:20.141" endtime="20250304 05:05:21.648"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:05:21.649" endtime="20250304 05:05:21.649"/>
</kw>
<status status="PASS" starttime="20250304 05:05:21.649" endtime="20250304 05:05:21.649"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:05:20.141" endtime="20250304 05:05:21.649"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:05:21.650" endtime="20250304 05:05:21.650"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:21.653" level="INFO">Running command 'ozone sh volume create /41079-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:23.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:23.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:05:21.651" endtime="20250304 05:05:23.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:23.311" level="INFO"/>
<status status="PASS" starttime="20250304 05:05:23.311" endtime="20250304 05:05:23.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:23.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:23.311" endtime="20250304 05:05:23.311"/>
</kw>
<status status="PASS" starttime="20250304 05:05:21.651" endtime="20250304 05:05:23.312"/>
</kw>
<msg timestamp="20250304 05:05:23.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:21.651" endtime="20250304 05:05:23.312"/>
</kw>
<status status="PASS" starttime="20250304 05:05:21.650" endtime="20250304 05:05:23.312"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:23.314" level="INFO">Running command 'ozone sh bucket create /41079-volume-for-cancel/41079-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:24.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:24.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:05:23.313" endtime="20250304 05:05:24.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:24.960" level="INFO"/>
<status status="PASS" starttime="20250304 05:05:24.960" endtime="20250304 05:05:24.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:24.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:24.960" endtime="20250304 05:05:24.961"/>
</kw>
<status status="PASS" starttime="20250304 05:05:23.312" endtime="20250304 05:05:24.961"/>
</kw>
<msg timestamp="20250304 05:05:24.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:23.312" endtime="20250304 05:05:24.961"/>
</kw>
<status status="PASS" starttime="20250304 05:05:23.312" endtime="20250304 05:05:24.961"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:24.964" level="INFO">Running command 'ozone sh key put /41079-volume-for-cancel/41079-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:27.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:27.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:05:24.962" endtime="20250304 05:05:27.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:27.703" level="INFO"/>
<status status="PASS" starttime="20250304 05:05:27.702" endtime="20250304 05:05:27.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:27.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:27.703" endtime="20250304 05:05:27.703"/>
</kw>
<status status="PASS" starttime="20250304 05:05:24.962" endtime="20250304 05:05:27.703"/>
</kw>
<msg timestamp="20250304 05:05:27.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:24.961" endtime="20250304 05:05:27.704"/>
</kw>
<msg timestamp="20250304 05:05:27.704" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250304 05:05:24.961" endtime="20250304 05:05:27.704"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:27.707" level="INFO">Running command 'ozone sh key info /41079-volume-for-cancel/41079-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:29.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:29.594" level="INFO">${output} = {
  "volumeName" : "41079-volume-for-cancel",
  "bucketName" : "41079-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T05:05:26.5...</msg>
<status status="PASS" starttime="20250304 05:05:27.705" endtime="20250304 05:05:29.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:29.595" level="INFO">{
  "volumeName" : "41079-volume-for-cancel",
  "bucketName" : "41079-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T05:05:26.592Z",
  "modificationTime" : "2025-03-04T05:05:27.354Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 5,
    "localID" : 115816896921600103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 423,
  "file" : true
}</msg>
<status status="PASS" starttime="20250304 05:05:29.594" endtime="20250304 05:05:29.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:29.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:29.595" endtime="20250304 05:05:29.595"/>
</kw>
<status status="PASS" starttime="20250304 05:05:27.704" endtime="20250304 05:05:29.595"/>
</kw>
<msg timestamp="20250304 05:05:29.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:27.704" endtime="20250304 05:05:29.595"/>
</kw>
<msg timestamp="20250304 05:05:29.595" level="INFO">${result} = {
  "volumeName" : "41079-volume-for-cancel",
  "bucketName" : "41079-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T05:05:26.5...</msg>
<status status="PASS" starttime="20250304 05:05:27.704" endtime="20250304 05:05:29.595"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:05:29.596" endtime="20250304 05:05:29.596"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:05:21.650" endtime="20250304 05:05:29.596"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20250304 05:05:20.106" endtime="20250304 05:05:29.597"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:30.103" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:36.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:36.684" level="INFO">${output} = 2025-03-04 05:05:30,975 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:05:31,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:05:30.101" endtime="20250304 05:05:36.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:36.685" level="INFO">2025-03-04 05:05:30,975 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:05:31,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 05:05:31,105 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 05:05:31,232 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-03-04 05:05:31,275 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 05:05:32,211 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 05:05:32,276 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 05:05:33,276 [Thread-3] INFO freon.ProgressBar: Progress: 15.00 % (15 out of 100)
2025-03-04 05:05:34,277 [Thread-3] INFO freon.ProgressBar: Progress: 48.00 % (48 out of 100)
2025-03-04 05:05:35,278 [Thread-3] INFO freon.ProgressBar: Progress: 86.00 % (86 out of 100)
2025-03-04 05:05:36,279 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 05:05:36,338 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=18.738835, max=630.293656, mean=35.32929483574486, stddev=59.70773010434515, median=26.579718, p75=34.326499, p95=53.170623, p98=56.463662, p99=57.044968, p999=630.293656, mean_rate=23.68822677789357, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 05:05:36,338 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2025-03-04 05:05:36,338 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 05:05:36,338 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 05:05:36.685" endtime="20250304 05:05:36.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:36.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:36.685" endtime="20250304 05:05:36.686"/>
</kw>
<status status="PASS" starttime="20250304 05:05:30.101" endtime="20250304 05:05:36.686"/>
</kw>
<msg timestamp="20250304 05:05:36.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:30.101" endtime="20250304 05:05:36.686"/>
</kw>
<msg timestamp="20250304 05:05:36.686" level="INFO">${result} = 2025-03-04 05:05:30,975 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 05:05:31,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 05:05:30.101" endtime="20250304 05:05:36.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:05:36.686" endtime="20250304 05:05:36.686"/>
</kw>
<status status="PASS" starttime="20250304 05:05:30.100" endtime="20250304 05:05:36.686"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 05:05:36.687" level="INFO">${random} = 14496</msg>
<status status="PASS" starttime="20250304 05:05:36.687" endtime="20250304 05:05:36.687"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 05:05:36.688" level="INFO">${volume_name} = 14496-volume-for-prepare</msg>
<status status="PASS" starttime="20250304 05:05:36.687" endtime="20250304 05:05:36.688"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 05:05:36.689" level="INFO">${bucket_name} = 14496-bucket-for-prepare</msg>
<status status="PASS" starttime="20250304 05:05:36.688" endtime="20250304 05:05:36.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:36.691" level="INFO">Running command 'ozone sh volume create /14496-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:38.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:38.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:05:36.689" endtime="20250304 05:05:38.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:38.296" level="INFO"/>
<status status="PASS" starttime="20250304 05:05:38.295" endtime="20250304 05:05:38.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:38.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:38.296" endtime="20250304 05:05:38.296"/>
</kw>
<status status="PASS" starttime="20250304 05:05:36.689" endtime="20250304 05:05:38.296"/>
</kw>
<msg timestamp="20250304 05:05:38.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:36.689" endtime="20250304 05:05:38.296"/>
</kw>
<status status="PASS" starttime="20250304 05:05:36.689" endtime="20250304 05:05:38.296"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:38.299" level="INFO">Running command 'ozone sh bucket create /14496-volume-for-prepare/14496-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:39.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:39.917" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:05:38.297" endtime="20250304 05:05:39.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:39.917" level="INFO"/>
<status status="PASS" starttime="20250304 05:05:39.917" endtime="20250304 05:05:39.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:39.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:39.918" endtime="20250304 05:05:39.918"/>
</kw>
<status status="PASS" starttime="20250304 05:05:38.297" endtime="20250304 05:05:39.918"/>
</kw>
<msg timestamp="20250304 05:05:39.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:38.297" endtime="20250304 05:05:39.918"/>
</kw>
<status status="PASS" starttime="20250304 05:05:38.296" endtime="20250304 05:05:39.918"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:39.921" level="INFO">Running command 'ozone sh key put /14496-volume-for-prepare/14496-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:42.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:42.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:05:39.919" endtime="20250304 05:05:42.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:42.631" level="INFO"/>
<status status="PASS" starttime="20250304 05:05:42.631" endtime="20250304 05:05:42.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:42.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:42.631" endtime="20250304 05:05:42.632"/>
</kw>
<status status="PASS" starttime="20250304 05:05:39.919" endtime="20250304 05:05:42.632"/>
</kw>
<msg timestamp="20250304 05:05:42.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:39.919" endtime="20250304 05:05:42.632"/>
</kw>
<status status="PASS" starttime="20250304 05:05:39.918" endtime="20250304 05:05:42.632"/>
</kw>
<status status="PASS" starttime="20250304 05:05:30.100" endtime="20250304 05:05:42.632"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:05:42.633" endtime="20250304 05:05:42.633"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:42.636" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:49.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:49.172" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 05:05:42.634" endtime="20250304 05:05:49.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:49.172" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250304 05:05:49.172" endtime="20250304 05:05:49.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:49.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:49.173" endtime="20250304 05:05:49.173"/>
</kw>
<status status="PASS" starttime="20250304 05:05:42.634" endtime="20250304 05:05:49.173"/>
</kw>
<msg timestamp="20250304 05:05:49.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:42.634" endtime="20250304 05:05:49.173"/>
</kw>
<msg timestamp="20250304 05:05:49.173" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 05:05:42.633" endtime="20250304 05:05:49.173"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:05:49.174" endtime="20250304 05:05:49.174"/>
</kw>
<status status="PASS" starttime="20250304 05:05:49.174" endtime="20250304 05:05:49.174"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:05:42.632" endtime="20250304 05:05:49.174"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:05:49.175" endtime="20250304 05:05:49.175"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:49.178" level="INFO">Running command 'ozone sh key info /14496-volume-for-prepare/14496-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:51.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:51.005" level="INFO">${output} = {
  "volumeName" : "14496-volume-for-prepare",
  "bucketName" : "14496-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T05:05:4...</msg>
<status status="PASS" starttime="20250304 05:05:49.176" endtime="20250304 05:05:51.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:51.006" level="INFO">{
  "volumeName" : "14496-volume-for-prepare",
  "bucketName" : "14496-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T05:05:41.552Z",
  "modificationTime" : "2025-03-04T05:05:42.285Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 115816896921600204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 831,
  "file" : true
}</msg>
<status status="PASS" starttime="20250304 05:05:51.005" endtime="20250304 05:05:51.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:51.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:51.006" endtime="20250304 05:05:51.007"/>
</kw>
<status status="PASS" starttime="20250304 05:05:49.176" endtime="20250304 05:05:51.007"/>
</kw>
<msg timestamp="20250304 05:05:51.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:49.176" endtime="20250304 05:05:51.007"/>
</kw>
<msg timestamp="20250304 05:05:51.007" level="INFO">${result} = {
  "volumeName" : "14496-volume-for-prepare",
  "bucketName" : "14496-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T05:05:4...</msg>
<status status="PASS" starttime="20250304 05:05:49.176" endtime="20250304 05:05:51.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:05:51.007" endtime="20250304 05:05:51.008"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:05:49.175" endtime="20250304 05:05:51.008"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:05:51.009" endtime="20250304 05:05:51.009"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:51.012" level="INFO">Running command 'ozone sh key put /14496-volume-for-prepare/14496-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:52.674" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 05:05:52.674" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 05:05:51.010" endtime="20250304 05:05:52.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:52.675" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 05:05:52.675" endtime="20250304 05:05:52.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:52.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:52.675" endtime="20250304 05:05:52.675"/>
</kw>
<msg timestamp="20250304 05:05:52.676" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 05:05:51.009" endtime="20250304 05:05:52.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:05:52.676" endtime="20250304 05:05:52.676"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:52.678" level="INFO">Running command 'ozone sh key info /14496-volume-for-prepare/14496-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:54.313" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 05:05:54.314" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250304 05:05:52.676" endtime="20250304 05:05:54.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:54.314" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250304 05:05:54.314" endtime="20250304 05:05:54.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:54.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:54.314" endtime="20250304 05:05:54.315"/>
</kw>
<status status="PASS" starttime="20250304 05:05:52.676" endtime="20250304 05:05:54.315"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:05:51.008" endtime="20250304 05:05:54.315"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20250304 05:05:30.062" endtime="20250304 05:05:54.316"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:05:54.791" endtime="20250304 05:05:54.792"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 05:05:54.792" level="INFO">${random} = 85951</msg>
<status status="PASS" starttime="20250304 05:05:54.792" endtime="20250304 05:05:54.792"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 05:05:54.793" level="INFO">${volume_name} = 85951-volume-for-prepare</msg>
<status status="PASS" starttime="20250304 05:05:54.792" endtime="20250304 05:05:54.793"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:54.795" level="INFO">Running command 'ozone sh volume create /85951-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:56.432" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 05:05:56.432" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 05:05:54.793" endtime="20250304 05:05:56.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:56.433" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 05:05:56.433" endtime="20250304 05:05:56.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:56.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:56.433" endtime="20250304 05:05:56.433"/>
</kw>
<msg timestamp="20250304 05:05:56.434" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 05:05:54.793" endtime="20250304 05:05:56.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:05:56.434" endtime="20250304 05:05:56.434"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:56.436" level="INFO">Running command 'ozone sh volume info /85951-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:58.062" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 05:05:58.062" level="INFO">${output} = VOLUME_NOT_FOUND Volume 85951-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 05:05:56.434" endtime="20250304 05:05:58.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:58.062" level="INFO">VOLUME_NOT_FOUND Volume 85951-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 05:05:58.062" endtime="20250304 05:05:58.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:58.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:58.063" endtime="20250304 05:05:58.063"/>
</kw>
<msg timestamp="20250304 05:05:58.063" level="INFO">${result} = VOLUME_NOT_FOUND Volume 85951-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 05:05:56.434" endtime="20250304 05:05:58.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:05:58.063" endtime="20250304 05:05:58.063"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:05:54.791" endtime="20250304 05:05:58.064"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:05:58.065" endtime="20250304 05:05:58.065"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:05:58.068" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:05:59.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:05:59.827" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "41079-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20250304 05:05:58.066" endtime="20250304 05:05:59.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:05:59.827" level="INFO">[ {
  "metadata" : { },
  "name" : "41079-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T05:05:23.276Z",
  "modificationTime" : "2025-03-04T05:05:23.276Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "14496-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T05:05:38.267Z",
  "modificationTime" : "2025-03-04T05:05:38.267Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-03-04T05:04:40.274Z",
  "modificationTime" : "2025-03-04T05:04:40.274Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T05:04:55.765Z",
  "modificationTime" : "2025-03-04T05:04:55.765Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "34425-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T05:05:03.053Z",
  "modificationTime" : "2025-03-04T05:05:03.053Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20250304 05:05:59.827" endtime="20250304 05:05:59.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:05:59.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:05:59.828" endtime="20250304 05:05:59.828"/>
</kw>
<status status="PASS" starttime="20250304 05:05:58.065" endtime="20250304 05:05:59.828"/>
</kw>
<msg timestamp="20250304 05:05:59.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:05:58.065" endtime="20250304 05:05:59.828"/>
</kw>
<msg timestamp="20250304 05:05:59.828" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "41079-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20250304 05:05:58.065" endtime="20250304 05:05:59.828"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:05:58.064" endtime="20250304 05:05:59.828"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20250304 05:05:54.762" endtime="20250304 05:05:59.829"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:06:44.974" endtime="20250304 05:06:44.974"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 05:06:44.974" level="INFO">${random} = 48972</msg>
<status status="PASS" starttime="20250304 05:06:44.974" endtime="20250304 05:06:44.975"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 05:06:44.975" level="INFO">${volume_name} = 48972-volume-for-prepare</msg>
<status status="PASS" starttime="20250304 05:06:44.975" endtime="20250304 05:06:44.975"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:06:44.977" level="INFO">Running command 'ozone sh volume create /48972-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:06:46.617" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 05:06:46.617" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 05:06:44.976" endtime="20250304 05:06:46.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:06:46.618" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 05:06:46.618" endtime="20250304 05:06:46.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:06:46.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:06:46.618" endtime="20250304 05:06:46.618"/>
</kw>
<msg timestamp="20250304 05:06:46.619" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 05:06:44.975" endtime="20250304 05:06:46.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:06:46.619" endtime="20250304 05:06:46.619"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:06:46.621" level="INFO">Running command 'ozone sh volume info /48972-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:06:48.220" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 05:06:48.220" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48972-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 05:06:46.620" endtime="20250304 05:06:48.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:06:48.221" level="INFO">VOLUME_NOT_FOUND Volume 48972-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 05:06:48.220" endtime="20250304 05:06:48.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:06:48.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:06:48.221" endtime="20250304 05:06:48.221"/>
</kw>
<msg timestamp="20250304 05:06:48.222" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48972-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 05:06:46.619" endtime="20250304 05:06:48.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:06:48.222" endtime="20250304 05:06:48.222"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:06:44.973" endtime="20250304 05:06:48.222"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 05:06:48.223" endtime="20250304 05:06:48.223"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:06:48.226" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:06:49.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:06:50.000" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "41079-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20250304 05:06:48.224" endtime="20250304 05:06:50.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:06:50.000" level="INFO">[ {
  "metadata" : { },
  "name" : "41079-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T05:05:23.276Z",
  "modificationTime" : "2025-03-04T05:05:23.276Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "14496-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T05:05:38.267Z",
  "modificationTime" : "2025-03-04T05:05:38.267Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-03-04T05:04:40.921Z",
  "modificationTime" : "2025-03-04T05:04:40.921Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T05:04:55.765Z",
  "modificationTime" : "2025-03-04T05:04:55.765Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "34425-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T05:05:03.053Z",
  "modificationTime" : "2025-03-04T05:05:03.053Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20250304 05:06:50.000" endtime="20250304 05:06:50.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:06:50.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:06:50.001" endtime="20250304 05:06:50.001"/>
</kw>
<status status="PASS" starttime="20250304 05:06:48.224" endtime="20250304 05:06:50.001"/>
</kw>
<msg timestamp="20250304 05:06:50.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:06:48.223" endtime="20250304 05:06:50.001"/>
</kw>
<msg timestamp="20250304 05:06:50.001" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "41079-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20250304 05:06:48.223" endtime="20250304 05:06:50.001"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:06:48.222" endtime="20250304 05:06:50.001"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20250304 05:06:44.943" endtime="20250304 05:06:50.002"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:07:37.252" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:07:38.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:07:38.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:07:37.250" endtime="20250304 05:07:38.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:07:38.940" level="INFO"/>
<status status="PASS" starttime="20250304 05:07:38.939" endtime="20250304 05:07:38.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:07:38.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:07:38.940" endtime="20250304 05:07:38.941"/>
</kw>
<status status="PASS" starttime="20250304 05:07:37.250" endtime="20250304 05:07:38.941"/>
</kw>
<msg timestamp="20250304 05:07:38.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:07:37.250" endtime="20250304 05:07:38.941"/>
</kw>
<msg timestamp="20250304 05:07:38.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:07:37.250" endtime="20250304 05:07:38.941"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:07:38.941" endtime="20250304 05:07:38.942"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:07:38.949" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:07:40.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:07:40.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:07:38.945" endtime="20250304 05:07:40.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:07:40.602" level="INFO"/>
<status status="PASS" starttime="20250304 05:07:40.602" endtime="20250304 05:07:40.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:07:40.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:07:40.602" endtime="20250304 05:07:40.603"/>
</kw>
<status status="PASS" starttime="20250304 05:07:38.945" endtime="20250304 05:07:40.603"/>
</kw>
<msg timestamp="20250304 05:07:40.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:07:38.944" endtime="20250304 05:07:40.603"/>
</kw>
<msg timestamp="20250304 05:07:40.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:07:38.942" endtime="20250304 05:07:40.603"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:07:40.603" endtime="20250304 05:07:40.603"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:07:40.606" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:07:43.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:07:43.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:07:40.604" endtime="20250304 05:07:43.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:07:43.550" level="INFO"/>
<status status="PASS" starttime="20250304 05:07:43.549" endtime="20250304 05:07:43.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:07:43.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:07:43.550" endtime="20250304 05:07:43.550"/>
</kw>
<status status="PASS" starttime="20250304 05:07:40.604" endtime="20250304 05:07:43.550"/>
</kw>
<msg timestamp="20250304 05:07:43.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:07:40.604" endtime="20250304 05:07:43.550"/>
</kw>
<msg timestamp="20250304 05:07:43.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:07:40.603" endtime="20250304 05:07:43.550"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:07:43.550" endtime="20250304 05:07:43.551"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:07:37.249" endtime="20250304 05:07:43.551"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 05:07:37.217" endtime="20250304 05:07:43.551"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 05:07:44.036" level="INFO">${random} = 23872</msg>
<status status="PASS" starttime="20250304 05:07:44.036" endtime="20250304 05:07:44.036"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 05:07:44.039" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-23872 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 05:07:46.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 05:07:46.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:07:44.037" endtime="20250304 05:07:46.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 05:07:46.813" level="INFO"/>
<status status="PASS" starttime="20250304 05:07:46.813" endtime="20250304 05:07:46.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 05:07:46.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 05:07:46.813" endtime="20250304 05:07:46.814"/>
</kw>
<status status="PASS" starttime="20250304 05:07:44.037" endtime="20250304 05:07:46.814"/>
</kw>
<msg timestamp="20250304 05:07:46.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 05:07:44.037" endtime="20250304 05:07:46.814"/>
</kw>
<msg timestamp="20250304 05:07:46.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 05:07:44.036" endtime="20250304 05:07:46.814"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 05:07:46.814" endtime="20250304 05:07:46.814"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 05:07:44.035" endtime="20250304 05:07:46.814"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 05:07:44.005" endtime="20250304 05:07:46.815"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="78877"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
