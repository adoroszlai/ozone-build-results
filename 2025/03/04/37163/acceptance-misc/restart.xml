<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250304 04:23:51.849" rpa="false" schemaversion="4">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:14.346" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:18.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:18.141" level="INFO">${output} = 2025-03-04 04:22:15,435 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:15,576 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:22:14.344" endtime="20250304 04:22:18.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:18.141" level="INFO">2025-03-04 04:22:15,435 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:15,576 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:22:15,577 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:22:15,730 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-03-04 04:22:15,781 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:22:16,716 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-03-04 04:22:16,781 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:22:16,789 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-03-04 04:22:16,945 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 04:22:17,782 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 04:22:17,800 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=825.787242, max=825.787242, mean=825.787242, stddev=0.0, median=825.787242, p75=825.787242, p95=825.787242, p98=825.787242, p99=825.787242, p999=825.787242, mean_rate=1.0106618723131326, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:22:17,800 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 04:22:17,800 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:22:17,800 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 04:22:18.141" endtime="20250304 04:22:18.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:18.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:18.142" endtime="20250304 04:22:18.142"/>
</kw>
<status status="PASS" starttime="20250304 04:22:14.344" endtime="20250304 04:22:18.142"/>
</kw>
<msg timestamp="20250304 04:22:18.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:14.344" endtime="20250304 04:22:18.142"/>
</kw>
<msg timestamp="20250304 04:22:18.142" level="INFO">${result} = 2025-03-04 04:22:15,435 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:15,576 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:22:14.343" endtime="20250304 04:22:18.142"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:18.143" endtime="20250304 04:22:18.143"/>
</kw>
<status status="PASS" starttime="20250304 04:22:14.342" endtime="20250304 04:22:18.143"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:14.342" endtime="20250304 04:22:18.143"/>
</test>
<test id="s1-s1-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:18.148" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:20.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:20.509" level="INFO">${output} = 2025-03-04 04:22:19,066 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:19,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:22:18.146" endtime="20250304 04:22:20.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:20.510" level="INFO">2025-03-04 04:22:19,066 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:19,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:22:19,208 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:22:19,411 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2025-03-04 04:22:19,461 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:22:20,462 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 04:22:20,469 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=62.663271, max=62.663271, mean=62.663271, stddev=0.0, median=62.663271, p75=62.663271, p95=62.663271, p98=62.663271, p99=62.663271, p999=62.663271, mean_rate=4.340274066692747, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:22:20,470 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-03-04 04:22:20,470 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:22:20,470 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 04:22:20.509" endtime="20250304 04:22:20.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:20.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:20.510" endtime="20250304 04:22:20.510"/>
</kw>
<status status="PASS" starttime="20250304 04:22:18.145" endtime="20250304 04:22:20.510"/>
</kw>
<msg timestamp="20250304 04:22:20.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:18.145" endtime="20250304 04:22:20.510"/>
</kw>
<msg timestamp="20250304 04:22:20.511" level="INFO">${result} = 2025-03-04 04:22:19,066 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:19,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:22:18.145" endtime="20250304 04:22:20.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:20.511" endtime="20250304 04:22:20.511"/>
</kw>
<status status="PASS" starttime="20250304 04:22:18.144" endtime="20250304 04:22:20.511"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:18.144" endtime="20250304 04:22:20.511"/>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:20.516" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:22.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:22.856" level="INFO">${output} = 2025-03-04 04:22:21,449 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:21,596 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:22:20.514" endtime="20250304 04:22:22.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:22.857" level="INFO">2025-03-04 04:22:21,449 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:21,596 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:22:21,596 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:22:21,750 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2025-03-04 04:22:21,807 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:22:22,808 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 04:22:22,816 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=8.899164, max=8.899164, mean=8.899164, stddev=0.0, median=8.899164, p75=8.899164, p95=8.899164, p98=8.899164, p99=8.899164, p999=8.899164, mean_rate=4.869833205582999, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:22:22,817 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-03-04 04:22:22,817 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:22:22,817 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 04:22:22.856" endtime="20250304 04:22:22.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:22.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:22.857" endtime="20250304 04:22:22.857"/>
</kw>
<status status="PASS" starttime="20250304 04:22:20.513" endtime="20250304 04:22:22.857"/>
</kw>
<msg timestamp="20250304 04:22:22.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:20.513" endtime="20250304 04:22:22.858"/>
</kw>
<msg timestamp="20250304 04:22:22.858" level="INFO">${result} = 2025-03-04 04:22:21,449 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:21,596 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:22:20.513" endtime="20250304 04:22:22.858"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:22.858" endtime="20250304 04:22:22.858"/>
</kw>
<status status="PASS" starttime="20250304 04:22:20.512" endtime="20250304 04:22:22.858"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:20.512" endtime="20250304 04:22:22.858"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250304 04:22:14.309" endtime="20250304 04:22:22.859"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s2-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:23.425" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:27.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:27.081" level="INFO">${output} = 2025-03-04 04:22:24,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:24,509 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:22:23.422" endtime="20250304 04:22:27.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:27.081" level="INFO">2025-03-04 04:22:24,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:24,509 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:22:24,509 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:22:24,673 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-03-04 04:22:24,726 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:22:25,708 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 04:22:25,727 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:22:26,727 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 04:22:26,741 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=18.904768, max=18.904768, mean=18.904768, stddev=0.0, median=18.904768, p75=18.904768, p95=18.904768, p98=18.904768, p99=18.904768, p999=18.904768, mean_rate=1.9967864996018765, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:22:26,741 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 04:22:26,741 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:22:26,741 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 04:22:27.081" endtime="20250304 04:22:27.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:27.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:27.082" endtime="20250304 04:22:27.082"/>
</kw>
<status status="PASS" starttime="20250304 04:22:23.422" endtime="20250304 04:22:27.082"/>
</kw>
<msg timestamp="20250304 04:22:27.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:23.422" endtime="20250304 04:22:27.082"/>
</kw>
<msg timestamp="20250304 04:22:27.082" level="INFO">${result} = 2025-03-04 04:22:24,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:24,509 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:22:23.421" endtime="20250304 04:22:27.082"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:27.083" endtime="20250304 04:22:27.083"/>
</kw>
<status status="PASS" starttime="20250304 04:22:23.419" endtime="20250304 04:22:27.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:23.419" endtime="20250304 04:22:27.083"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250304 04:22:23.376" endtime="20250304 04:22:27.084"/>
</suite>
<suite id="s1-s3" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s3-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:22:27.624" endtime="20250304 04:22:27.625"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:27.628" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:31.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:31.893" level="INFO">${output} = 2025-03-04 04:22:28,549 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:28,686 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:22:27.626" endtime="20250304 04:22:31.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:31.894" level="INFO">2025-03-04 04:22:28,549 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:28,686 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:22:28,686 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:22:29,233 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 04:22:29,494 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-03-04 04:22:29,527 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 04:22:29,574 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 04:22:30,528 [Thread-4] INFO freon.ProgressBar: Progress: 14.00 % (14 out of 100)
2025-03-04 04:22:31,530 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 04:22:31,548 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=6.377418, max=534.880869, mean=17.33689581850415, stddev=52.002214091982175, median=11.430974, p75=14.482193, p95=20.385769, p98=25.318803, p99=30.652229, p999=534.880869, mean_rate=54.25836492435749, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:22:31,548 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 04:22:31,548 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:22:31,548 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 04:22:31.894" endtime="20250304 04:22:31.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:31.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:31.894" endtime="20250304 04:22:31.895"/>
</kw>
<status status="PASS" starttime="20250304 04:22:27.625" endtime="20250304 04:22:31.895"/>
</kw>
<msg timestamp="20250304 04:22:31.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:27.625" endtime="20250304 04:22:31.895"/>
</kw>
<msg timestamp="20250304 04:22:31.895" level="INFO">${result} = 2025-03-04 04:22:28,549 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:28,686 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:22:27.625" endtime="20250304 04:22:31.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:31.895" endtime="20250304 04:22:31.895"/>
</kw>
<status status="PASS" starttime="20250304 04:22:27.623" endtime="20250304 04:22:31.895"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:27.622" endtime="20250304 04:22:31.896"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250304 04:22:27.590" endtime="20250304 04:22:31.896"/>
</suite>
<suite id="s1-s4" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s4-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:22:32.423" endtime="20250304 04:22:32.423"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:32.426" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:36.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:36.180" level="INFO">${output} = 2025-03-04 04:22:33,375 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:33,559 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:22:32.424" endtime="20250304 04:22:36.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:36.181" level="INFO">2025-03-04 04:22:33,375 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:33,559 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:22:33,559 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:22:33,757 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-03-04 04:22:33,820 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 04:22:34,239 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 04:22:34,454 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=609709a7-f5ed-4003-aad9-dae4c4e57326
2025-03-04 04:22:34,496 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 04:22:34,821 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 04:22:35,821 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 04:22:35,841 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.400942, max=4.836705, mean=2.103470550000001, stddev=0.6670595357250262, median=1.886539, p75=2.153306, p95=3.745034, p98=4.025811, p99=4.049079, p999=4.836705, mean_rate=142.58315994555696, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:22:35,841 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 04:22:35,841 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:22:35,841 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 04:22:36.181" endtime="20250304 04:22:36.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:36.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:36.181" endtime="20250304 04:22:36.182"/>
</kw>
<status status="PASS" starttime="20250304 04:22:32.424" endtime="20250304 04:22:36.182"/>
</kw>
<msg timestamp="20250304 04:22:36.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:32.423" endtime="20250304 04:22:36.182"/>
</kw>
<msg timestamp="20250304 04:22:36.182" level="INFO">${result} = 2025-03-04 04:22:33,375 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:22:33,559 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:22:32.423" endtime="20250304 04:22:36.182"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:36.182" endtime="20250304 04:22:36.183"/>
</kw>
<status status="PASS" starttime="20250304 04:22:32.421" endtime="20250304 04:22:36.183"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:32.421" endtime="20250304 04:22:36.183"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250304 04:22:32.390" endtime="20250304 04:22:36.184"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s5-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:09.181" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:19.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:19.005" level="INFO">${output} = 2025-03-04 04:23:10,282 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:10,418 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:09.178" endtime="20250304 04:23:19.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:19.006" level="INFO">2025-03-04 04:23:10,282 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:10,418 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:23:10,418 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:23:10,577 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-03-04 04:23:10,633 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:11,634 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:12,634 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:13,097 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:812)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:233)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:226)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:161)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:127)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:118)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1246)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1169)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:525)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1953)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3198)
, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2025-03-04 04:23:13,634 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:14,635 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:15,635 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:16,636 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:17,636 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:17,762 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 04:23:18,637 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 04:23:18,662 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=22.650347, max=22.650347, mean=22.650347, stddev=0.0, median=22.650347, p75=22.650347, p95=22.650347, p98=22.650347, p99=22.650347, p999=22.650347, mean_rate=3.028699572504204, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:23:18,663 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2025-03-04 04:23:18,663 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:23:18,663 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 04:23:19.005" endtime="20250304 04:23:19.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:19.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:19.006" endtime="20250304 04:23:19.006"/>
</kw>
<status status="PASS" starttime="20250304 04:23:09.178" endtime="20250304 04:23:19.006"/>
</kw>
<msg timestamp="20250304 04:23:19.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:09.178" endtime="20250304 04:23:19.007"/>
</kw>
<msg timestamp="20250304 04:23:19.007" level="INFO">${result} = 2025-03-04 04:23:10,282 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:10,418 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:09.177" endtime="20250304 04:23:19.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:19.007" endtime="20250304 04:23:19.007"/>
</kw>
<status status="PASS" starttime="20250304 04:23:09.176" endtime="20250304 04:23:19.007"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:23:09.175" endtime="20250304 04:23:19.007"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250304 04:23:09.133" endtime="20250304 04:23:19.008"/>
</suite>
<suite id="s1-s6" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s6-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:23:19.562" endtime="20250304 04:23:19.562"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:19.565" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:23.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:23.202" level="INFO">${output} = 2025-03-04 04:23:20,475 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:20,612 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:19.563" endtime="20250304 04:23:23.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:23.203" level="INFO">2025-03-04 04:23:20,475 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:20,612 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:23:20,612 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:23:20,788 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-03-04 04:23:20,840 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 04:23:21,225 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 04:23:21,468 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=609709a7-f5ed-4003-aad9-dae4c4e57326
2025-03-04 04:23:21,512 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 04:23:21,840 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 04:23:22,841 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 04:23:22,861 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.494792, max=12.285921, mean=2.8047855600000005, stddev=1.4095010756211312, median=2.335557, p75=2.867227, p95=5.185846, p98=5.7965, p99=6.420963, p999=12.285921, mean_rate=144.41405385467525, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:23:22,862 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 04:23:22,862 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:23:22,862 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 04:23:23.203" endtime="20250304 04:23:23.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:23.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:23.203" endtime="20250304 04:23:23.204"/>
</kw>
<status status="PASS" starttime="20250304 04:23:19.563" endtime="20250304 04:23:23.204"/>
</kw>
<msg timestamp="20250304 04:23:23.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:19.563" endtime="20250304 04:23:23.204"/>
</kw>
<msg timestamp="20250304 04:23:23.204" level="INFO">${result} = 2025-03-04 04:23:20,475 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:20,612 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:19.562" endtime="20250304 04:23:23.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:23.204" endtime="20250304 04:23:23.204"/>
</kw>
<status status="PASS" starttime="20250304 04:23:19.561" endtime="20250304 04:23:23.205"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:23:19.560" endtime="20250304 04:23:23.205"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250304 04:23:19.530" endtime="20250304 04:23:23.205"/>
</suite>
<suite id="s1-s7" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:23.732" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:27.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:27.356" level="INFO">${output} = 2025-03-04 04:23:24,638 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:24,784 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:23.730" endtime="20250304 04:23:27.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:27.357" level="INFO">2025-03-04 04:23:24,638 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:24,784 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:23:24,784 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:23:24,944 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-03-04 04:23:24,998 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:25,998 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:26,084 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 04:23:26,999 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 04:23:27,017 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=846.190279, max=846.190279, mean=846.190279, stddev=0.0, median=846.190279, p75=846.190279, p95=846.190279, p98=846.190279, p99=846.190279, p999=846.190279, mean_rate=0.8644332874345191, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:23:27,017 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 04:23:27,017 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:23:27,017 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 04:23:27.357" endtime="20250304 04:23:27.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:27.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:27.357" endtime="20250304 04:23:27.358"/>
</kw>
<status status="PASS" starttime="20250304 04:23:23.730" endtime="20250304 04:23:27.358"/>
</kw>
<msg timestamp="20250304 04:23:27.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:23.730" endtime="20250304 04:23:27.358"/>
</kw>
<msg timestamp="20250304 04:23:27.358" level="INFO">${result} = 2025-03-04 04:23:24,638 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:24,784 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:23.730" endtime="20250304 04:23:27.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:27.358" endtime="20250304 04:23:27.359"/>
</kw>
<status status="PASS" starttime="20250304 04:23:23.728" endtime="20250304 04:23:27.359"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:23:23.728" endtime="20250304 04:23:27.359"/>
</test>
<test id="s1-s7-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:27.363" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:29.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:29.782" level="INFO">${output} = 2025-03-04 04:23:28,280 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:28,424 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:27.361" endtime="20250304 04:23:29.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:29.783" level="INFO">2025-03-04 04:23:28,280 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:28,424 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:23:28,425 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:23:28,673 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2025-03-04 04:23:28,735 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:29,736 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 04:23:29,743 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=81.314131, max=81.314131, mean=81.314131, stddev=0.0, median=81.314131, p75=81.314131, p95=81.314131, p98=81.314131, p99=81.314131, p999=81.314131, mean_rate=7.388407433580157, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:23:29,743 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-03-04 04:23:29,743 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:23:29,743 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 04:23:29.782" endtime="20250304 04:23:29.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:29.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:29.783" endtime="20250304 04:23:29.783"/>
</kw>
<status status="PASS" starttime="20250304 04:23:27.361" endtime="20250304 04:23:29.783"/>
</kw>
<msg timestamp="20250304 04:23:29.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:27.361" endtime="20250304 04:23:29.784"/>
</kw>
<msg timestamp="20250304 04:23:29.784" level="INFO">${result} = 2025-03-04 04:23:28,280 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:28,424 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:27.360" endtime="20250304 04:23:29.784"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:29.784" endtime="20250304 04:23:29.784"/>
</kw>
<status status="PASS" starttime="20250304 04:23:27.360" endtime="20250304 04:23:29.784"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:23:27.359" endtime="20250304 04:23:29.784"/>
</test>
<test id="s1-s7-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:29.789" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:32.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:32.098" level="INFO">${output} = 2025-03-04 04:23:30,702 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:30,863 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:29.787" endtime="20250304 04:23:32.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:32.099" level="INFO">2025-03-04 04:23:30,702 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:30,863 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:23:30,863 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:23:31,012 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2025-03-04 04:23:31,064 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:32,065 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 04:23:32,072 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=11.734664, max=11.734664, mean=11.734664, stddev=0.0, median=11.734664, p75=11.734664, p95=11.734664, p98=11.734664, p99=11.734664, p999=11.734664, mean_rate=4.9881539573965865, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:23:32,073 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-03-04 04:23:32,073 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:23:32,073 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 04:23:32.098" endtime="20250304 04:23:32.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:32.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:32.099" endtime="20250304 04:23:32.099"/>
</kw>
<status status="PASS" starttime="20250304 04:23:29.786" endtime="20250304 04:23:32.099"/>
</kw>
<msg timestamp="20250304 04:23:32.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:29.786" endtime="20250304 04:23:32.099"/>
</kw>
<msg timestamp="20250304 04:23:32.100" level="INFO">${result} = 2025-03-04 04:23:30,702 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:30,863 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:29.786" endtime="20250304 04:23:32.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:32.100" endtime="20250304 04:23:32.100"/>
</kw>
<status status="PASS" starttime="20250304 04:23:29.785" endtime="20250304 04:23:32.100"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:23:29.785" endtime="20250304 04:23:32.100"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250304 04:23:23.697" endtime="20250304 04:23:32.101"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s8-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:32.653" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:36.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:36.279" level="INFO">${output} = 2025-03-04 04:23:33,578 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:33,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:32.651" endtime="20250304 04:23:36.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:36.280" level="INFO">2025-03-04 04:23:33,578 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:33,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:23:33,716 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:23:33,871 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-03-04 04:23:33,920 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:34,796 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 04:23:34,921 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-03-04 04:23:35,921 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-03-04 04:23:35,935 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=22.126889, max=22.126889, mean=22.126889, stddev=0.0, median=22.126889, p75=22.126889, p95=22.126889, p98=22.126889, p99=22.126889, p999=22.126889, mean_rate=1.6192100489471006, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:23:35,935 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 04:23:35,935 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:23:35,935 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250304 04:23:36.279" endtime="20250304 04:23:36.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:36.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:36.280" endtime="20250304 04:23:36.280"/>
</kw>
<status status="PASS" starttime="20250304 04:23:32.651" endtime="20250304 04:23:36.280"/>
</kw>
<msg timestamp="20250304 04:23:36.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:32.651" endtime="20250304 04:23:36.281"/>
</kw>
<msg timestamp="20250304 04:23:36.281" level="INFO">${result} = 2025-03-04 04:23:33,578 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:33,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:32.650" endtime="20250304 04:23:36.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:36.281" endtime="20250304 04:23:36.281"/>
</kw>
<status status="PASS" starttime="20250304 04:23:32.649" endtime="20250304 04:23:36.281"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:23:32.649" endtime="20250304 04:23:36.281"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250304 04:23:32.618" endtime="20250304 04:23:36.282"/>
</suite>
<suite id="s1-s9" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s9-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:23:36.836" endtime="20250304 04:23:36.836"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:36.839" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:41.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:41.094" level="INFO">${output} = 2025-03-04 04:23:37,775 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:37,906 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:36.837" endtime="20250304 04:23:41.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:41.095" level="INFO">2025-03-04 04:23:37,775 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:37,906 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:23:37,906 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:23:38,469 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 04:23:38,705 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-03-04 04:23:38,731 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 04:23:38,773 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 04:23:39,731 [Thread-4] INFO freon.ProgressBar: Progress: 17.00 % (17 out of 100)
2025-03-04 04:23:40,732 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 04:23:40,750 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=6.006155, max=494.525765, mean=16.2385875055294, stddev=48.075653070209356, median=10.395548, p75=11.756916, p95=22.655016, p98=29.477564, p99=40.220432, p999=494.525765, mean_rate=54.08164071895164, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:23:40,750 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 04:23:40,750 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:23:40,750 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 04:23:41.095" endtime="20250304 04:23:41.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:41.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:41.095" endtime="20250304 04:23:41.096"/>
</kw>
<status status="PASS" starttime="20250304 04:23:36.837" endtime="20250304 04:23:41.096"/>
</kw>
<msg timestamp="20250304 04:23:41.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:36.837" endtime="20250304 04:23:41.096"/>
</kw>
<msg timestamp="20250304 04:23:41.096" level="INFO">${result} = 2025-03-04 04:23:37,775 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:37,906 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:36.836" endtime="20250304 04:23:41.096"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:41.096" endtime="20250304 04:23:41.096"/>
</kw>
<status status="PASS" starttime="20250304 04:23:36.835" endtime="20250304 04:23:41.097"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:23:36.834" endtime="20250304 04:23:41.097"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250304 04:23:36.804" endtime="20250304 04:23:41.097"/>
</suite>
<suite id="s1-s10" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s10-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:23:41.638" endtime="20250304 04:23:41.639"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:41.642" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:45.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:45.328" level="INFO">${output} = 2025-03-04 04:23:42,603 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:42,747 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:41.639" endtime="20250304 04:23:45.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:45.329" level="INFO">2025-03-04 04:23:42,603 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:42,747 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:23:42,747 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:23:42,911 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-03-04 04:23:42,966 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 04:23:43,349 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-03-04 04:23:43,603 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=609709a7-f5ed-4003-aad9-dae4c4e57326
2025-03-04 04:23:43,648 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 04:23:43,967 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 04:23:44,968 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 04:23:44,988 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.378426, max=4.101291, mean=1.9082382499999995, stddev=0.4291658114906959, median=1.834117, p75=2.047522, p95=2.661138, p98=2.829274, p99=3.298956, p999=4.101291, mean_rate=132.52269202620903, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:23:44,989 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-03-04 04:23:44,989 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:23:44,989 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 04:23:45.328" endtime="20250304 04:23:45.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:45.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:45.329" endtime="20250304 04:23:45.329"/>
</kw>
<status status="PASS" starttime="20250304 04:23:41.639" endtime="20250304 04:23:45.329"/>
</kw>
<msg timestamp="20250304 04:23:45.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:41.639" endtime="20250304 04:23:45.329"/>
</kw>
<msg timestamp="20250304 04:23:45.330" level="INFO">${result} = 2025-03-04 04:23:42,603 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:23:42,747 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:23:41.639" endtime="20250304 04:23:45.330"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:45.330" endtime="20250304 04:23:45.330"/>
</kw>
<status status="PASS" starttime="20250304 04:23:41.637" endtime="20250304 04:23:45.330"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:23:41.636" endtime="20250304 04:23:45.330"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250304 04:23:41.602" endtime="20250304 04:23:45.331"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="53998"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate-Chunk">restart.Validate-Chunk</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
