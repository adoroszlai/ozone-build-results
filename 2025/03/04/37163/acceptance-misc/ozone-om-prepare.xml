<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250304 04:13:17.124" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:22.682" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:30.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:30.290" level="INFO">${output} = 2025-03-04 04:10:23,593 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:10:23,730 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:10:22.680" endtime="20250304 04:10:30.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:30.291" level="INFO">2025-03-04 04:10:23,593 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:10:23,730 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:10:23,730 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:10:23,868 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-03-04 04:10:23,917 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 04:10:24,723 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-03-04 04:10:24,830 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-03-04 04:10:24,918 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 04:10:25,014 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 04:10:25,919 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2025-03-04 04:10:26,920 [Thread-3] INFO freon.ProgressBar: Progress: 19.00 % (19 out of 100)
2025-03-04 04:10:27,920 [Thread-3] INFO freon.ProgressBar: Progress: 47.00 % (47 out of 100)
2025-03-04 04:10:28,921 [Thread-3] INFO freon.ProgressBar: Progress: 77.00 % (77 out of 100)
2025-03-04 04:10:29,921 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 04:10:29,952 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=24.478877, max=823.730671, mean=47.172797130781106, stddev=81.04388810768104, median=35.436143, p75=39.887771, p95=58.375084, p98=184.525475, p99=244.356945, p999=823.730671, mean_rate=19.649698551734453, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:10:29,952 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2025-03-04 04:10:29,952 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:10:29,952 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 04:10:30.291" endtime="20250304 04:10:30.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:30.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:30.291" endtime="20250304 04:10:30.291"/>
</kw>
<status status="PASS" starttime="20250304 04:10:22.680" endtime="20250304 04:10:30.292"/>
</kw>
<msg timestamp="20250304 04:10:30.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:22.679" endtime="20250304 04:10:30.292"/>
</kw>
<msg timestamp="20250304 04:10:30.292" level="INFO">${result} = 2025-03-04 04:10:23,593 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:10:23,730 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:10:22.679" endtime="20250304 04:10:30.292"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:30.292" endtime="20250304 04:10:30.292"/>
</kw>
<status status="PASS" starttime="20250304 04:10:22.678" endtime="20250304 04:10:30.292"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:10:30.293" level="INFO">${random} = 33314</msg>
<status status="PASS" starttime="20250304 04:10:30.292" endtime="20250304 04:10:30.293"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:10:30.294" level="INFO">${volume_name} = 33314-volume-for-prepare</msg>
<status status="PASS" starttime="20250304 04:10:30.293" endtime="20250304 04:10:30.294"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:10:30.294" level="INFO">${bucket_name} = 33314-bucket-for-prepare</msg>
<status status="PASS" starttime="20250304 04:10:30.294" endtime="20250304 04:10:30.295"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:30.297" level="INFO">Running command 'ozone sh volume create /33314-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:32.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:32.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:30.295" endtime="20250304 04:10:32.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:32.082" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:32.081" endtime="20250304 04:10:32.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:32.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:32.082" endtime="20250304 04:10:32.082"/>
</kw>
<status status="PASS" starttime="20250304 04:10:30.295" endtime="20250304 04:10:32.082"/>
</kw>
<msg timestamp="20250304 04:10:32.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:30.295" endtime="20250304 04:10:32.082"/>
</kw>
<status status="PASS" starttime="20250304 04:10:30.295" endtime="20250304 04:10:32.082"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:32.085" level="INFO">Running command 'ozone sh bucket create /33314-volume-for-prepare/33314-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:33.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:33.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:32.083" endtime="20250304 04:10:33.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:33.833" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:33.833" endtime="20250304 04:10:33.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:33.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:33.833" endtime="20250304 04:10:33.833"/>
</kw>
<status status="PASS" starttime="20250304 04:10:32.083" endtime="20250304 04:10:33.834"/>
</kw>
<msg timestamp="20250304 04:10:33.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:32.083" endtime="20250304 04:10:33.834"/>
</kw>
<status status="PASS" starttime="20250304 04:10:32.082" endtime="20250304 04:10:33.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:33.837" level="INFO">Running command 'ozone sh key put /33314-volume-for-prepare/33314-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:36.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:36.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:33.835" endtime="20250304 04:10:36.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:36.764" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:36.763" endtime="20250304 04:10:36.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:36.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:36.764" endtime="20250304 04:10:36.764"/>
</kw>
<status status="PASS" starttime="20250304 04:10:33.834" endtime="20250304 04:10:36.764"/>
</kw>
<msg timestamp="20250304 04:10:36.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:33.834" endtime="20250304 04:10:36.764"/>
</kw>
<status status="PASS" starttime="20250304 04:10:33.834" endtime="20250304 04:10:36.764"/>
</kw>
<status status="PASS" starttime="20250304 04:10:22.678" endtime="20250304 04:10:36.764"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:10:36.765" endtime="20250304 04:10:36.766"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:36.769" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:43.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:43.488" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 04:10:36.766" endtime="20250304 04:10:43.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:43.489" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250304 04:10:43.488" endtime="20250304 04:10:43.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:43.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:43.489" endtime="20250304 04:10:43.489"/>
</kw>
<status status="PASS" starttime="20250304 04:10:36.766" endtime="20250304 04:10:43.489"/>
</kw>
<msg timestamp="20250304 04:10:43.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:36.766" endtime="20250304 04:10:43.489"/>
</kw>
<msg timestamp="20250304 04:10:43.490" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 04:10:36.766" endtime="20250304 04:10:43.490"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:43.490" endtime="20250304 04:10:43.490"/>
</kw>
<status status="PASS" starttime="20250304 04:10:43.490" endtime="20250304 04:10:43.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:36.765" endtime="20250304 04:10:43.491"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:10:43.492" endtime="20250304 04:10:43.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:43.495" level="INFO">Running command 'ozone sh key info /33314-volume-for-prepare/33314-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:45.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:45.489" level="INFO">${output} = {
  "volumeName" : "33314-volume-for-prepare",
  "bucketName" : "33314-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T04:10:3...</msg>
<status status="PASS" starttime="20250304 04:10:43.493" endtime="20250304 04:10:45.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:45.489" level="INFO">{
  "volumeName" : "33314-volume-for-prepare",
  "bucketName" : "33314-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T04:10:35.543Z",
  "modificationTime" : "2025-03-04T04:10:36.408Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 115816896921600101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 411,
  "file" : true
}</msg>
<status status="PASS" starttime="20250304 04:10:45.489" endtime="20250304 04:10:45.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:45.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:45.490" endtime="20250304 04:10:45.490"/>
</kw>
<status status="PASS" starttime="20250304 04:10:43.492" endtime="20250304 04:10:45.490"/>
</kw>
<msg timestamp="20250304 04:10:45.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:43.492" endtime="20250304 04:10:45.490"/>
</kw>
<msg timestamp="20250304 04:10:45.490" level="INFO">${result} = {
  "volumeName" : "33314-volume-for-prepare",
  "bucketName" : "33314-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T04:10:3...</msg>
<status status="PASS" starttime="20250304 04:10:43.492" endtime="20250304 04:10:45.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:45.490" endtime="20250304 04:10:45.491"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:43.491" endtime="20250304 04:10:45.491"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:10:45.492" endtime="20250304 04:10:45.492"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:45.494" level="INFO">Running command 'ozone sh key put /33314-volume-for-prepare/33314-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:47.269" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:10:47.269" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 04:10:45.492" endtime="20250304 04:10:47.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:47.269" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 04:10:47.269" endtime="20250304 04:10:47.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:47.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:47.270" endtime="20250304 04:10:47.270"/>
</kw>
<msg timestamp="20250304 04:10:47.270" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 04:10:45.492" endtime="20250304 04:10:47.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:47.270" endtime="20250304 04:10:47.270"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:47.273" level="INFO">Running command 'ozone sh key info /33314-volume-for-prepare/33314-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:49.032" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:10:49.032" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250304 04:10:47.271" endtime="20250304 04:10:49.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:49.033" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250304 04:10:49.033" endtime="20250304 04:10:49.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:49.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:49.033" endtime="20250304 04:10:49.034"/>
</kw>
<status status="PASS" starttime="20250304 04:10:47.271" endtime="20250304 04:10:49.034"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:45.491" endtime="20250304 04:10:49.034"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20250304 04:10:22.640" endtime="20250304 04:10:49.035"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:10:49.551" level="INFO">${random} = 38415</msg>
<status status="PASS" starttime="20250304 04:10:49.551" endtime="20250304 04:10:49.551"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:10:49.552" level="INFO">${volume_name} = 38415-volume-for-cancel</msg>
<status status="PASS" starttime="20250304 04:10:49.551" endtime="20250304 04:10:49.552"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:10:49.553" level="INFO">${bucket_name} = 38415-bucket-for-cancel</msg>
<status status="PASS" starttime="20250304 04:10:49.552" endtime="20250304 04:10:49.553"/>
</kw>
<status status="PASS" starttime="20250304 04:10:49.551" endtime="20250304 04:10:49.553"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:10:49.553" endtime="20250304 04:10:49.554"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:49.556" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:51.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:51.237" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250304 04:10:49.554" endtime="20250304 04:10:51.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:51.238" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250304 04:10:51.237" endtime="20250304 04:10:51.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:51.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:51.238" endtime="20250304 04:10:51.238"/>
</kw>
<status status="PASS" starttime="20250304 04:10:49.554" endtime="20250304 04:10:51.238"/>
</kw>
<msg timestamp="20250304 04:10:51.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:49.554" endtime="20250304 04:10:51.238"/>
</kw>
<msg timestamp="20250304 04:10:51.238" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250304 04:10:49.554" endtime="20250304 04:10:51.238"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:51.239" endtime="20250304 04:10:51.239"/>
</kw>
<status status="PASS" starttime="20250304 04:10:51.239" endtime="20250304 04:10:51.239"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:49.553" endtime="20250304 04:10:51.239"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:10:51.240" endtime="20250304 04:10:51.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:51.243" level="INFO">Running command 'ozone sh volume create /38415-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:52.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:52.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:51.241" endtime="20250304 04:10:52.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:52.993" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:52.993" endtime="20250304 04:10:52.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:52.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:52.993" endtime="20250304 04:10:52.994"/>
</kw>
<status status="PASS" starttime="20250304 04:10:51.241" endtime="20250304 04:10:52.994"/>
</kw>
<msg timestamp="20250304 04:10:52.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:51.241" endtime="20250304 04:10:52.994"/>
</kw>
<status status="PASS" starttime="20250304 04:10:51.240" endtime="20250304 04:10:52.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:52.997" level="INFO">Running command 'ozone sh bucket create /38415-volume-for-cancel/38415-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:54.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:54.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:52.995" endtime="20250304 04:10:54.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:54.837" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:54.837" endtime="20250304 04:10:54.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:54.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:54.837" endtime="20250304 04:10:54.838"/>
</kw>
<status status="PASS" starttime="20250304 04:10:52.995" endtime="20250304 04:10:54.838"/>
</kw>
<msg timestamp="20250304 04:10:54.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:52.994" endtime="20250304 04:10:54.838"/>
</kw>
<status status="PASS" starttime="20250304 04:10:52.994" endtime="20250304 04:10:54.838"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:54.841" level="INFO">Running command 'ozone sh key put /38415-volume-for-cancel/38415-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:57.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:57.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:54.839" endtime="20250304 04:10:57.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:57.789" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:57.789" endtime="20250304 04:10:57.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:57.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:57.789" endtime="20250304 04:10:57.790"/>
</kw>
<status status="PASS" starttime="20250304 04:10:54.839" endtime="20250304 04:10:57.790"/>
</kw>
<msg timestamp="20250304 04:10:57.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:54.838" endtime="20250304 04:10:57.790"/>
</kw>
<msg timestamp="20250304 04:10:57.790" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250304 04:10:54.838" endtime="20250304 04:10:57.790"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:57.793" level="INFO">Running command 'ozone sh key info /38415-volume-for-cancel/38415-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:59.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:59.736" level="INFO">${output} = {
  "volumeName" : "38415-volume-for-cancel",
  "bucketName" : "38415-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T04:10:56.6...</msg>
<status status="PASS" starttime="20250304 04:10:57.791" endtime="20250304 04:10:59.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:59.737" level="INFO">{
  "volumeName" : "38415-volume-for-cancel",
  "bucketName" : "38415-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T04:10:56.667Z",
  "modificationTime" : "2025-03-04T04:10:57.438Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 6,
    "localID" : 115816896921600103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 423,
  "file" : true
}</msg>
<status status="PASS" starttime="20250304 04:10:59.736" endtime="20250304 04:10:59.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:59.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:59.737" endtime="20250304 04:10:59.737"/>
</kw>
<status status="PASS" starttime="20250304 04:10:57.791" endtime="20250304 04:10:59.737"/>
</kw>
<msg timestamp="20250304 04:10:59.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:57.791" endtime="20250304 04:10:59.737"/>
</kw>
<msg timestamp="20250304 04:10:59.738" level="INFO">${result} = {
  "volumeName" : "38415-volume-for-cancel",
  "bucketName" : "38415-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T04:10:56.6...</msg>
<status status="PASS" starttime="20250304 04:10:57.790" endtime="20250304 04:10:59.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:59.738" endtime="20250304 04:10:59.738"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:51.240" endtime="20250304 04:10:59.738"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20250304 04:10:49.518" endtime="20250304 04:10:59.739"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:11:00.322" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:11:06.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:11:06.990" level="INFO">${output} = 2025-03-04 04:11:01,278 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:11:01,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:11:00.320" endtime="20250304 04:11:06.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:11:06.991" level="INFO">2025-03-04 04:11:01,278 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:11:01,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-03-04 04:11:01,414 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-03-04 04:11:01,570 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-03-04 04:11:01,621 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 04:11:02,515 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-03-04 04:11:02,621 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-03-04 04:11:03,623 [Thread-3] INFO freon.ProgressBar: Progress: 17.00 % (17 out of 100)
2025-03-04 04:11:04,623 [Thread-3] INFO freon.ProgressBar: Progress: 50.00 % (50 out of 100)
2025-03-04 04:11:05,624 [Thread-3] INFO freon.ProgressBar: Progress: 87.00 % (87 out of 100)
2025-03-04 04:11:06,624 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-03-04 04:11:06,649 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=19.142422, max=663.308916, mean=35.54837310323511, stddev=62.966222817129896, median=28.00644, p75=34.307764, p95=40.310705, p98=47.030433, p99=64.665937, p999=663.308916, mean_rate=23.559652263594273, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-03-04 04:11:06,650 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2025-03-04 04:11:06,650 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-03-04 04:11:06,650 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250304 04:11:06.990" endtime="20250304 04:11:06.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:11:06.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:11:06.991" endtime="20250304 04:11:06.991"/>
</kw>
<status status="PASS" starttime="20250304 04:11:00.320" endtime="20250304 04:11:06.991"/>
</kw>
<msg timestamp="20250304 04:11:06.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:11:00.319" endtime="20250304 04:11:06.992"/>
</kw>
<msg timestamp="20250304 04:11:06.992" level="INFO">${result} = 2025-03-04 04:11:01,278 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-03-04 04:11:01,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250304 04:11:00.319" endtime="20250304 04:11:06.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:11:06.992" endtime="20250304 04:11:06.992"/>
</kw>
<status status="PASS" starttime="20250304 04:11:00.318" endtime="20250304 04:11:06.992"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:11:06.993" level="INFO">${random} = 17098</msg>
<status status="PASS" starttime="20250304 04:11:06.992" endtime="20250304 04:11:06.993"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:11:06.994" level="INFO">${volume_name} = 17098-volume-for-prepare</msg>
<status status="PASS" starttime="20250304 04:11:06.993" endtime="20250304 04:11:06.994"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:11:06.994" level="INFO">${bucket_name} = 17098-bucket-for-prepare</msg>
<status status="PASS" starttime="20250304 04:11:06.994" endtime="20250304 04:11:06.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:11:06.997" level="INFO">Running command 'ozone sh volume create /17098-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:11:08.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:11:08.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:11:06.995" endtime="20250304 04:11:08.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:11:08.688" level="INFO"/>
<status status="PASS" starttime="20250304 04:11:08.688" endtime="20250304 04:11:08.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:11:08.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:11:08.689" endtime="20250304 04:11:08.689"/>
</kw>
<status status="PASS" starttime="20250304 04:11:06.995" endtime="20250304 04:11:08.689"/>
</kw>
<msg timestamp="20250304 04:11:08.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:11:06.995" endtime="20250304 04:11:08.689"/>
</kw>
<status status="PASS" starttime="20250304 04:11:06.995" endtime="20250304 04:11:08.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:11:08.692" level="INFO">Running command 'ozone sh bucket create /17098-volume-for-prepare/17098-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:11:10.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:11:10.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:11:08.690" endtime="20250304 04:11:10.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:11:10.467" level="INFO"/>
<status status="PASS" starttime="20250304 04:11:10.466" endtime="20250304 04:11:10.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:11:10.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:11:10.467" endtime="20250304 04:11:10.467"/>
</kw>
<status status="PASS" starttime="20250304 04:11:08.690" endtime="20250304 04:11:10.468"/>
</kw>
<msg timestamp="20250304 04:11:10.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:11:08.690" endtime="20250304 04:11:10.468"/>
</kw>
<status status="PASS" starttime="20250304 04:11:08.689" endtime="20250304 04:11:10.468"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:11:10.472" level="INFO">Running command 'ozone sh key put /17098-volume-for-prepare/17098-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:11:13.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:11:13.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:11:10.469" endtime="20250304 04:11:13.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:11:13.400" level="INFO"/>
<status status="PASS" starttime="20250304 04:11:13.400" endtime="20250304 04:11:13.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:11:13.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:11:13.400" endtime="20250304 04:11:13.400"/>
</kw>
<status status="PASS" starttime="20250304 04:11:10.469" endtime="20250304 04:11:13.401"/>
</kw>
<msg timestamp="20250304 04:11:13.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:11:10.469" endtime="20250304 04:11:13.401"/>
</kw>
<status status="PASS" starttime="20250304 04:11:10.468" endtime="20250304 04:11:13.401"/>
</kw>
<status status="PASS" starttime="20250304 04:11:00.318" endtime="20250304 04:11:13.401"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:11:13.402" endtime="20250304 04:11:13.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:11:13.405" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:11:20.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:11:20.107" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 04:11:13.403" endtime="20250304 04:11:20.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:11:20.108" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250304 04:11:20.108" endtime="20250304 04:11:20.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:11:20.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:11:20.108" endtime="20250304 04:11:20.109"/>
</kw>
<status status="PASS" starttime="20250304 04:11:13.402" endtime="20250304 04:11:20.109"/>
</kw>
<msg timestamp="20250304 04:11:20.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:11:13.402" endtime="20250304 04:11:20.109"/>
</kw>
<msg timestamp="20250304 04:11:20.109" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 04:11:13.402" endtime="20250304 04:11:20.109"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:11:20.109" endtime="20250304 04:11:20.110"/>
</kw>
<status status="PASS" starttime="20250304 04:11:20.109" endtime="20250304 04:11:20.110"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:11:13.401" endtime="20250304 04:11:20.110"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:11:20.111" endtime="20250304 04:11:20.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:11:20.114" level="INFO">Running command 'ozone sh key info /17098-volume-for-prepare/17098-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:11:22.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:11:22.090" level="INFO">${output} = {
  "volumeName" : "17098-volume-for-prepare",
  "bucketName" : "17098-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T04:11:1...</msg>
<status status="PASS" starttime="20250304 04:11:20.112" endtime="20250304 04:11:22.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:11:22.091" level="INFO">{
  "volumeName" : "17098-volume-for-prepare",
  "bucketName" : "17098-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T04:11:12.289Z",
  "modificationTime" : "2025-03-04T04:11:13.051Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 115816896921600204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 833,
  "file" : true
}</msg>
<status status="PASS" starttime="20250304 04:11:22.090" endtime="20250304 04:11:22.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:11:22.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:11:22.091" endtime="20250304 04:11:22.091"/>
</kw>
<status status="PASS" starttime="20250304 04:11:20.112" endtime="20250304 04:11:22.092"/>
</kw>
<msg timestamp="20250304 04:11:22.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:11:20.111" endtime="20250304 04:11:22.092"/>
</kw>
<msg timestamp="20250304 04:11:22.092" level="INFO">${result} = {
  "volumeName" : "17098-volume-for-prepare",
  "bucketName" : "17098-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-03-04T04:11:1...</msg>
<status status="PASS" starttime="20250304 04:11:20.111" endtime="20250304 04:11:22.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:11:22.092" endtime="20250304 04:11:22.092"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:11:20.110" endtime="20250304 04:11:22.092"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:11:22.093" endtime="20250304 04:11:22.093"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:11:22.096" level="INFO">Running command 'ozone sh key put /17098-volume-for-prepare/17098-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:11:23.830" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:11:23.830" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 04:11:22.094" endtime="20250304 04:11:23.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:11:23.831" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 04:11:23.830" endtime="20250304 04:11:23.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:11:23.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:11:23.831" endtime="20250304 04:11:23.831"/>
</kw>
<msg timestamp="20250304 04:11:23.831" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 04:11:22.093" endtime="20250304 04:11:23.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:11:23.831" endtime="20250304 04:11:23.832"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:11:23.834" level="INFO">Running command 'ozone sh key info /17098-volume-for-prepare/17098-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:11:25.618" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:11:25.618" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250304 04:11:23.832" endtime="20250304 04:11:25.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:11:25.619" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250304 04:11:25.618" endtime="20250304 04:11:25.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:11:25.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:11:25.619" endtime="20250304 04:11:25.619"/>
</kw>
<status status="PASS" starttime="20250304 04:11:23.832" endtime="20250304 04:11:25.619"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:11:22.093" endtime="20250304 04:11:25.619"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20250304 04:11:00.270" endtime="20250304 04:11:25.620"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:11:26.146" endtime="20250304 04:11:26.146"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:11:26.147" level="INFO">${random} = 63768</msg>
<status status="PASS" starttime="20250304 04:11:26.146" endtime="20250304 04:11:26.147"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:11:26.147" level="INFO">${volume_name} = 63768-volume-for-prepare</msg>
<status status="PASS" starttime="20250304 04:11:26.147" endtime="20250304 04:11:26.148"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:11:26.150" level="INFO">Running command 'ozone sh volume create /63768-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:11:27.862" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:11:27.862" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 04:11:26.148" endtime="20250304 04:11:27.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:11:27.863" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 04:11:27.863" endtime="20250304 04:11:27.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:11:27.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:11:27.863" endtime="20250304 04:11:27.864"/>
</kw>
<msg timestamp="20250304 04:11:27.864" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 04:11:26.148" endtime="20250304 04:11:27.864"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:11:27.864" endtime="20250304 04:11:27.864"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:11:27.867" level="INFO">Running command 'ozone sh volume info /63768-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:11:29.526" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:11:29.526" level="INFO">${output} = VOLUME_NOT_FOUND Volume 63768-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 04:11:27.865" endtime="20250304 04:11:29.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:11:29.527" level="INFO">VOLUME_NOT_FOUND Volume 63768-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 04:11:29.527" endtime="20250304 04:11:29.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:11:29.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:11:29.527" endtime="20250304 04:11:29.528"/>
</kw>
<msg timestamp="20250304 04:11:29.528" level="INFO">${result} = VOLUME_NOT_FOUND Volume 63768-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 04:11:27.864" endtime="20250304 04:11:29.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:11:29.528" endtime="20250304 04:11:29.528"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:11:26.145" endtime="20250304 04:11:29.528"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:11:29.529" endtime="20250304 04:11:29.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:11:29.532" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:11:31.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:11:31.503" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-03-04T04:10:05.1...</msg>
<status status="PASS" starttime="20250304 04:11:29.530" endtime="20250304 04:11:31.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:11:31.503" level="INFO">[ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-03-04T04:10:05.144Z",
  "modificationTime" : "2025-03-04T04:10:05.144Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "17098-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T04:11:08.658Z",
  "modificationTime" : "2025-03-04T04:11:08.658Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T04:10:24.730Z",
  "modificationTime" : "2025-03-04T04:10:24.730Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "38415-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T04:10:52.973Z",
  "modificationTime" : "2025-03-04T04:10:52.973Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "33314-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T04:10:32.061Z",
  "modificationTime" : "2025-03-04T04:10:32.061Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20250304 04:11:31.503" endtime="20250304 04:11:31.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:11:31.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:11:31.504" endtime="20250304 04:11:31.504"/>
</kw>
<status status="PASS" starttime="20250304 04:11:29.530" endtime="20250304 04:11:31.504"/>
</kw>
<msg timestamp="20250304 04:11:31.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:11:29.530" endtime="20250304 04:11:31.504"/>
</kw>
<msg timestamp="20250304 04:11:31.504" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-03-04T04:10:05.1...</msg>
<status status="PASS" starttime="20250304 04:11:29.529" endtime="20250304 04:11:31.504"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:11:29.529" endtime="20250304 04:11:31.504"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20250304 04:11:26.113" endtime="20250304 04:11:31.505"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:12:12.085" endtime="20250304 04:12:12.085"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:12:12.085" level="INFO">${random} = 66113</msg>
<status status="PASS" starttime="20250304 04:12:12.085" endtime="20250304 04:12:12.085"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:12:12.086" level="INFO">${volume_name} = 66113-volume-for-prepare</msg>
<status status="PASS" starttime="20250304 04:12:12.085" endtime="20250304 04:12:12.086"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:12.089" level="INFO">Running command 'ozone sh volume create /66113-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:13.881" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:12:13.881" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 04:12:12.087" endtime="20250304 04:12:13.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:13.882" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 04:12:13.882" endtime="20250304 04:12:13.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:13.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:13.882" endtime="20250304 04:12:13.883"/>
</kw>
<msg timestamp="20250304 04:12:13.883" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250304 04:12:12.086" endtime="20250304 04:12:13.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:12:13.883" endtime="20250304 04:12:13.883"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:13.886" level="INFO">Running command 'ozone sh volume info /66113-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:15.634" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:12:15.635" level="INFO">${output} = VOLUME_NOT_FOUND Volume 66113-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 04:12:13.884" endtime="20250304 04:12:15.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:15.635" level="INFO">VOLUME_NOT_FOUND Volume 66113-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 04:12:15.635" endtime="20250304 04:12:15.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:15.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:15.635" endtime="20250304 04:12:15.636"/>
</kw>
<msg timestamp="20250304 04:12:15.636" level="INFO">${result} = VOLUME_NOT_FOUND Volume 66113-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250304 04:12:13.883" endtime="20250304 04:12:15.636"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:12:15.636" endtime="20250304 04:12:15.636"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:12:12.084" endtime="20250304 04:12:15.636"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:12:15.637" endtime="20250304 04:12:15.638"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:15.640" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:17.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:17.606" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-03-04T04:10:05.3...</msg>
<status status="PASS" starttime="20250304 04:12:15.638" endtime="20250304 04:12:17.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:17.606" level="INFO">[ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-03-04T04:10:05.347Z",
  "modificationTime" : "2025-03-04T04:10:05.347Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "17098-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T04:11:08.658Z",
  "modificationTime" : "2025-03-04T04:11:08.658Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T04:10:24.730Z",
  "modificationTime" : "2025-03-04T04:10:24.730Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "38415-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T04:10:52.973Z",
  "modificationTime" : "2025-03-04T04:10:52.973Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "33314-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-03-04T04:10:32.061Z",
  "modificationTime" : "2025-03-04T04:10:32.061Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20250304 04:12:17.606" endtime="20250304 04:12:17.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:17.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:17.607" endtime="20250304 04:12:17.607"/>
</kw>
<status status="PASS" starttime="20250304 04:12:15.638" endtime="20250304 04:12:17.607"/>
</kw>
<msg timestamp="20250304 04:12:17.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:15.638" endtime="20250304 04:12:17.607"/>
</kw>
<msg timestamp="20250304 04:12:17.607" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-03-04T04:10:05.3...</msg>
<status status="PASS" starttime="20250304 04:12:15.638" endtime="20250304 04:12:17.607"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:12:15.637" endtime="20250304 04:12:17.608"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20250304 04:12:12.052" endtime="20250304 04:12:17.608"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:02.089" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:04.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:04.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:02.087" endtime="20250304 04:13:04.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:04.089" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:04.089" endtime="20250304 04:13:04.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:04.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:04.090" endtime="20250304 04:13:04.090"/>
</kw>
<status status="PASS" starttime="20250304 04:13:02.086" endtime="20250304 04:13:04.090"/>
</kw>
<msg timestamp="20250304 04:13:04.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:02.086" endtime="20250304 04:13:04.090"/>
</kw>
<msg timestamp="20250304 04:13:04.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:02.086" endtime="20250304 04:13:04.091"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:04.091" endtime="20250304 04:13:04.091"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:04.094" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:05.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:05.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:04.092" endtime="20250304 04:13:05.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:05.801" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:05.801" endtime="20250304 04:13:05.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:05.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:05.801" endtime="20250304 04:13:05.802"/>
</kw>
<status status="PASS" starttime="20250304 04:13:04.092" endtime="20250304 04:13:05.802"/>
</kw>
<msg timestamp="20250304 04:13:05.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:04.091" endtime="20250304 04:13:05.802"/>
</kw>
<msg timestamp="20250304 04:13:05.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:04.091" endtime="20250304 04:13:05.802"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:05.802" endtime="20250304 04:13:05.802"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:05.805" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:08.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:08.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:05.803" endtime="20250304 04:13:08.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:08.860" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:08.860" endtime="20250304 04:13:08.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:08.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:08.861" endtime="20250304 04:13:08.861"/>
</kw>
<status status="PASS" starttime="20250304 04:13:05.803" endtime="20250304 04:13:08.861"/>
</kw>
<msg timestamp="20250304 04:13:08.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:05.803" endtime="20250304 04:13:08.861"/>
</kw>
<msg timestamp="20250304 04:13:08.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:05.802" endtime="20250304 04:13:08.861"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:08.861" endtime="20250304 04:13:08.862"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:02.085" endtime="20250304 04:13:08.862"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 04:13:02.050" endtime="20250304 04:13:08.862"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:13:09.383" level="INFO">${random} = 57843</msg>
<status status="PASS" starttime="20250304 04:13:09.383" endtime="20250304 04:13:09.383"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:09.386" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-57843 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:12.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:12.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:09.384" endtime="20250304 04:13:12.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:12.378" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:12.377" endtime="20250304 04:13:12.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:12.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:12.378" endtime="20250304 04:13:12.378"/>
</kw>
<status status="PASS" starttime="20250304 04:13:09.384" endtime="20250304 04:13:12.378"/>
</kw>
<msg timestamp="20250304 04:13:12.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:09.384" endtime="20250304 04:13:12.379"/>
</kw>
<msg timestamp="20250304 04:13:12.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:09.383" endtime="20250304 04:13:12.379"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:12.379" endtime="20250304 04:13:12.379"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:09.382" endtime="20250304 04:13:12.379"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 04:13:09.348" endtime="20250304 04:13:12.380"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="82758"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
