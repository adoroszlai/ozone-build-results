<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250304 04:23:37.003" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="1.4.1-2.0.0-SNAPSHOT-1-original-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:09:54.960" endtime="20250304 04:09:54.960"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:09:54.964" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:09:54.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:09:54.968" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:09:54.962" endtime="20250304 04:09:54.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:09:54.969" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:09:54.969" endtime="20250304 04:09:54.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:09:54.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:09:54.969" endtime="20250304 04:09:54.970"/>
</kw>
<status status="PASS" starttime="20250304 04:09:54.961" endtime="20250304 04:09:54.970"/>
</kw>
<msg timestamp="20250304 04:09:54.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:09:54.961" endtime="20250304 04:09:54.970"/>
</kw>
<msg timestamp="20250304 04:09:54.970" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:09:54.961" endtime="20250304 04:09:54.970"/>
</kw>
<msg timestamp="20250304 04:09:54.970" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:09:54.960" endtime="20250304 04:09:54.970"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:09:54.971" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:09:54.970" endtime="20250304 04:09:54.971"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:09:54.974" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:09:55.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:09:55.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:09:54.972" endtime="20250304 04:09:55.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:09:55.025" level="INFO"/>
<status status="PASS" starttime="20250304 04:09:55.024" endtime="20250304 04:09:55.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:09:55.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:09:55.025" endtime="20250304 04:09:55.025"/>
</kw>
<status status="PASS" starttime="20250304 04:09:54.972" endtime="20250304 04:09:55.026"/>
</kw>
<msg timestamp="20250304 04:09:55.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:09:54.972" endtime="20250304 04:09:55.026"/>
</kw>
<status status="PASS" starttime="20250304 04:09:54.971" endtime="20250304 04:09:55.026"/>
</kw>
<status status="PASS" starttime="20250304 04:09:54.971" endtime="20250304 04:09:55.026"/>
</kw>
<status status="PASS" starttime="20250304 04:09:54.959" endtime="20250304 04:09:55.026"/>
</kw>
<status status="PASS" starttime="20250304 04:09:54.959" endtime="20250304 04:09:55.026"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:09:55.030" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:09:55.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:09:55.034" level="INFO">${output} = OZONE-SITE.XML_ozone.administrators=testuser,recon,om
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML...</msg>
<status status="PASS" starttime="20250304 04:09:55.027" endtime="20250304 04:09:55.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:09:55.035" level="INFO">OZONE-SITE.XML_ozone.administrators=testuser,recon,om
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
CORE-SITE.XML_hadoop.security.authorization=true
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_ozone.server.default.replication=3
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.acl.enabled=true
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.block.token.enabled=true
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.om.service.ids=omservice
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HOSTNAME=scm2.org
JAVA_HOME=/usr/lib/jvm/java-11-openjdk
OZONE_CONF_DIR=/etc/hadoop
PWD=/opt/hadoop
OZONE_LOG_DIR=/var/log/hadoop
OZONE_UPGRADE_FROM=1.4.1
OM_SERVICE_ID=omservice
HOME=/opt/hadoop
WAITFOR=scm1.org:9894
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
SHLVL=1
OZONE_UPGRADE_TO=2.0.0-SNAPSHOT
LD_LIBRARY_PATH=/usr/local/lib
LC_CTYPE=C.UTF-8
OZONE_DATANODE_SECURE_USER=root
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
_=/usr/bin/env</msg>
<status status="PASS" starttime="20250304 04:09:55.034" endtime="20250304 04:09:55.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:09:55.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:09:55.035" endtime="20250304 04:09:55.036"/>
</kw>
<status status="PASS" starttime="20250304 04:09:55.027" endtime="20250304 04:09:55.036"/>
</kw>
<msg timestamp="20250304 04:09:55.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:09:55.027" endtime="20250304 04:09:55.036"/>
</kw>
<msg timestamp="20250304 04:09:55.036" level="INFO">${result} = OZONE-SITE.XML_ozone.administrators=testuser,recon,om
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML...</msg>
<status status="PASS" starttime="20250304 04:09:55.026" endtime="20250304 04:09:55.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:09:55.037" level="INFO">OZONE-SITE.XML_ozone.administrators=testuser,recon,om
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
CORE-SITE.XML_hadoop.security.authorization=true
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_ozone.server.default.replication=3
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.acl.enabled=true
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.block.token.enabled=true
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.om.service.ids=omservice
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HOSTNAME=scm2.org
JAVA_HOME=/usr/lib/jvm/java-11-openjdk
OZONE_CONF_DIR=/etc/hadoop
PWD=/opt/hadoop
OZONE_LOG_DIR=/var/log/hadoop
OZONE_UPGRADE_FROM=1.4.1
OM_SERVICE_ID=omservice
HOME=/opt/hadoop
WAITFOR=scm1.org:9894
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
SHLVL=1
OZONE_UPGRADE_TO=2.0.0-SNAPSHOT
LD_LIBRARY_PATH=/usr/local/lib
LC_CTYPE=C.UTF-8
OZONE_DATANODE_SECURE_USER=root
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
_=/usr/bin/env</msg>
<status status="PASS" starttime="20250304 04:09:55.037" endtime="20250304 04:09:55.037"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:09:55.037" endtime="20250304 04:09:55.037"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:09:55.041" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:09:57.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:09:57.699" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20250304 04:09:55.038" endtime="20250304 04:09:57.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:09:57.700" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20250304 04:09:57.699" endtime="20250304 04:09:57.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:09:57.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:09:57.700" endtime="20250304 04:09:57.700"/>
</kw>
<status status="PASS" starttime="20250304 04:09:55.038" endtime="20250304 04:09:57.700"/>
</kw>
<msg timestamp="20250304 04:09:57.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:09:55.038" endtime="20250304 04:09:57.700"/>
</kw>
<msg timestamp="20250304 04:09:57.701" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20250304 04:09:55.037" endtime="20250304 04:09:57.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:09:57.701" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20250304 04:09:57.701" endtime="20250304 04:09:57.701"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250304 04:09:57.701" endtime="20250304 04:09:57.701"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250304 04:09:54.958" endtime="20250304 04:09:57.701"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:09:57.703" endtime="20250304 04:09:57.703"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:09:57.707" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:09:57.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:09:57.711" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:09:57.704" endtime="20250304 04:09:57.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:09:57.712" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:09:57.711" endtime="20250304 04:09:57.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:09:57.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:09:57.712" endtime="20250304 04:09:57.713"/>
</kw>
<status status="PASS" starttime="20250304 04:09:57.704" endtime="20250304 04:09:57.713"/>
</kw>
<msg timestamp="20250304 04:09:57.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:09:57.704" endtime="20250304 04:09:57.713"/>
</kw>
<msg timestamp="20250304 04:09:57.713" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:09:57.704" endtime="20250304 04:09:57.713"/>
</kw>
<msg timestamp="20250304 04:09:57.713" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:09:57.703" endtime="20250304 04:09:57.713"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:09:57.714" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:09:57.713" endtime="20250304 04:09:57.714"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:09:57.718" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:09:57.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:09:57.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:09:57.716" endtime="20250304 04:09:57.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:09:57.745" level="INFO"/>
<status status="PASS" starttime="20250304 04:09:57.745" endtime="20250304 04:09:57.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:09:57.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:09:57.745" endtime="20250304 04:09:57.746"/>
</kw>
<status status="PASS" starttime="20250304 04:09:57.715" endtime="20250304 04:09:57.746"/>
</kw>
<msg timestamp="20250304 04:09:57.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:09:57.715" endtime="20250304 04:09:57.746"/>
</kw>
<status status="PASS" starttime="20250304 04:09:57.714" endtime="20250304 04:09:57.746"/>
</kw>
<status status="PASS" starttime="20250304 04:09:57.714" endtime="20250304 04:09:57.746"/>
</kw>
<status status="PASS" starttime="20250304 04:09:57.703" endtime="20250304 04:09:57.746"/>
</kw>
<status status="PASS" starttime="20250304 04:09:57.702" endtime="20250304 04:09:57.747"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:09:57.747" endtime="20250304 04:09:57.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:09:57.750" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:00.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:00.299" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:09:57.748" endtime="20250304 04:10:00.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:00.300" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:10:00.299" endtime="20250304 04:10:00.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:00.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:00.300" endtime="20250304 04:10:00.301"/>
</kw>
<status status="PASS" starttime="20250304 04:09:57.748" endtime="20250304 04:10:00.301"/>
</kw>
<msg timestamp="20250304 04:10:00.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:09:57.747" endtime="20250304 04:10:00.301"/>
</kw>
<msg timestamp="20250304 04:10:00.301" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:09:57.747" endtime="20250304 04:10:00.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:00.301" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:10:00.301" endtime="20250304 04:10:00.301"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250304 04:10:00.301" endtime="20250304 04:10:00.302"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250304 04:09:57.702" endtime="20250304 04:10:00.302"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20250304 04:09:54.919" endtime="20250304 04:10:00.303"/>
</suite>
<suite id="s1-s2" name="1.4.1-2.0.0-SNAPSHOT-1-original-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:10:01.049" endtime="20250304 04:10:01.049"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:01.053" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:01.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:01.057" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:10:01.050" endtime="20250304 04:10:01.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:01.058" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:10:01.057" endtime="20250304 04:10:01.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:01.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:01.058" endtime="20250304 04:10:01.058"/>
</kw>
<status status="PASS" starttime="20250304 04:10:01.050" endtime="20250304 04:10:01.058"/>
</kw>
<msg timestamp="20250304 04:10:01.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:01.050" endtime="20250304 04:10:01.059"/>
</kw>
<msg timestamp="20250304 04:10:01.059" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:10:01.050" endtime="20250304 04:10:01.059"/>
</kw>
<msg timestamp="20250304 04:10:01.059" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:01.049" endtime="20250304 04:10:01.059"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:10:01.059" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:01.059" endtime="20250304 04:10:01.059"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:01.063" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:01.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:01.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:01.061" endtime="20250304 04:10:01.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:01.092" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:01.091" endtime="20250304 04:10:01.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:01.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:01.092" endtime="20250304 04:10:01.092"/>
</kw>
<status status="PASS" starttime="20250304 04:10:01.060" endtime="20250304 04:10:01.093"/>
</kw>
<msg timestamp="20250304 04:10:01.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:01.060" endtime="20250304 04:10:01.093"/>
</kw>
<status status="PASS" starttime="20250304 04:10:01.060" endtime="20250304 04:10:01.093"/>
</kw>
<status status="PASS" starttime="20250304 04:10:01.060" endtime="20250304 04:10:01.093"/>
</kw>
<status status="PASS" starttime="20250304 04:10:01.049" endtime="20250304 04:10:01.093"/>
</kw>
<status status="PASS" starttime="20250304 04:10:01.048" endtime="20250304 04:10:01.093"/>
</kw>
<test id="s1-s2-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:01.097" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:04.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:04.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:01.095" endtime="20250304 04:10:04.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:04.037" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:04.037" endtime="20250304 04:10:04.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:04.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:04.037" endtime="20250304 04:10:04.038"/>
</kw>
<status status="PASS" starttime="20250304 04:10:01.094" endtime="20250304 04:10:04.038"/>
</kw>
<msg timestamp="20250304 04:10:04.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:01.094" endtime="20250304 04:10:04.039"/>
</kw>
<msg timestamp="20250304 04:10:04.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:01.094" endtime="20250304 04:10:04.039"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:04.039" endtime="20250304 04:10:04.040"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:04.048" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:07.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:07.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:04.041" endtime="20250304 04:10:07.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:07.028" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:07.028" endtime="20250304 04:10:07.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:07.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:07.028" endtime="20250304 04:10:07.029"/>
</kw>
<status status="PASS" starttime="20250304 04:10:04.041" endtime="20250304 04:10:07.029"/>
</kw>
<msg timestamp="20250304 04:10:07.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:04.040" endtime="20250304 04:10:07.029"/>
</kw>
<msg timestamp="20250304 04:10:07.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:04.040" endtime="20250304 04:10:07.029"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:07.029" endtime="20250304 04:10:07.029"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:01.093" endtime="20250304 04:10:07.029"/>
</test>
<test id="s1-s2-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:07.033" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:10:07.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:07.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:07.031" endtime="20250304 04:10:07.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:07.037" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:07.036" endtime="20250304 04:10:07.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:07.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:07.037" endtime="20250304 04:10:07.037"/>
</kw>
<status status="PASS" starttime="20250304 04:10:07.030" endtime="20250304 04:10:07.038"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:07.041" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:12.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:12.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:07.039" endtime="20250304 04:10:12.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:12.407" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:12.406" endtime="20250304 04:10:12.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:12.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:12.407" endtime="20250304 04:10:12.407"/>
</kw>
<status status="PASS" starttime="20250304 04:10:07.038" endtime="20250304 04:10:12.407"/>
</kw>
<msg timestamp="20250304 04:10:12.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:07.038" endtime="20250304 04:10:12.408"/>
</kw>
<msg timestamp="20250304 04:10:12.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:07.038" endtime="20250304 04:10:12.408"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:12.408" endtime="20250304 04:10:12.408"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:12.411" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:12.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:12.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:12.409" endtime="20250304 04:10:12.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:12.416" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:12.416" endtime="20250304 04:10:12.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:12.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:12.416" endtime="20250304 04:10:12.416"/>
</kw>
<status status="PASS" starttime="20250304 04:10:12.408" endtime="20250304 04:10:12.417"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:07.030" endtime="20250304 04:10:12.417"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:12.421" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:15.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:15.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:12.419" endtime="20250304 04:10:15.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:15.746" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:15.746" endtime="20250304 04:10:15.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:15.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:15.747" endtime="20250304 04:10:15.747"/>
</kw>
<status status="PASS" starttime="20250304 04:10:12.418" endtime="20250304 04:10:15.747"/>
</kw>
<msg timestamp="20250304 04:10:15.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:12.418" endtime="20250304 04:10:15.747"/>
</kw>
<msg timestamp="20250304 04:10:15.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:12.418" endtime="20250304 04:10:15.747"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:15.748" endtime="20250304 04:10:15.748"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:12.417" endtime="20250304 04:10:15.748"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:15.752" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:10:15.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:15.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:15.749" endtime="20250304 04:10:15.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:15.755" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:15.754" endtime="20250304 04:10:15.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:15.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:15.755" endtime="20250304 04:10:15.755"/>
</kw>
<status status="PASS" starttime="20250304 04:10:15.749" endtime="20250304 04:10:15.755"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:15.759" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:20.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:20.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:15.756" endtime="20250304 04:10:20.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:20.663" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:20.663" endtime="20250304 04:10:20.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:20.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:20.664" endtime="20250304 04:10:20.664"/>
</kw>
<status status="PASS" starttime="20250304 04:10:15.756" endtime="20250304 04:10:20.664"/>
</kw>
<msg timestamp="20250304 04:10:20.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:15.756" endtime="20250304 04:10:20.664"/>
</kw>
<msg timestamp="20250304 04:10:20.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:15.756" endtime="20250304 04:10:20.665"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:20.665" endtime="20250304 04:10:20.665"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:20.668" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:20.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:20.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:20.666" endtime="20250304 04:10:20.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:20.673" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:20.673" endtime="20250304 04:10:20.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:20.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:20.673" endtime="20250304 04:10:20.674"/>
</kw>
<status status="PASS" starttime="20250304 04:10:20.665" endtime="20250304 04:10:20.674"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:15.748" endtime="20250304 04:10:20.674"/>
</test>
<test id="s1-s2-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:10:20.676" endtime="20250304 04:10:20.676"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:20.680" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:20.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:20.684" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:10:20.678" endtime="20250304 04:10:20.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:20.685" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:10:20.684" endtime="20250304 04:10:20.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:20.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:20.685" endtime="20250304 04:10:20.685"/>
</kw>
<status status="PASS" starttime="20250304 04:10:20.677" endtime="20250304 04:10:20.685"/>
</kw>
<msg timestamp="20250304 04:10:20.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:20.677" endtime="20250304 04:10:20.685"/>
</kw>
<msg timestamp="20250304 04:10:20.686" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:10:20.677" endtime="20250304 04:10:20.686"/>
</kw>
<msg timestamp="20250304 04:10:20.686" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:20.676" endtime="20250304 04:10:20.686"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:10:20.686" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:20.686" endtime="20250304 04:10:20.686"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:20.690" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:20.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:20.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:20.688" endtime="20250304 04:10:20.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:20.731" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:20.730" endtime="20250304 04:10:20.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:20.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:20.731" endtime="20250304 04:10:20.731"/>
</kw>
<status status="PASS" starttime="20250304 04:10:20.687" endtime="20250304 04:10:20.731"/>
</kw>
<msg timestamp="20250304 04:10:20.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:20.687" endtime="20250304 04:10:20.732"/>
</kw>
<status status="PASS" starttime="20250304 04:10:20.687" endtime="20250304 04:10:20.732"/>
</kw>
<status status="PASS" starttime="20250304 04:10:20.686" endtime="20250304 04:10:20.732"/>
</kw>
<status status="PASS" starttime="20250304 04:10:20.676" endtime="20250304 04:10:20.732"/>
</kw>
<status status="PASS" starttime="20250304 04:10:20.675" endtime="20250304 04:10:20.732"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:20.736" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:23.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:23.405" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=34baaeab47fd560eff09eabb4ebea78ed1b1bc2a5a75becf5824a0feeb8dda7f</msg>
<status status="PASS" starttime="20250304 04:10:20.733" endtime="20250304 04:10:23.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:23.406" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=34baaeab47fd560eff09eabb4ebea78ed1b1bc2a5a75becf5824a0feeb8dda7f</msg>
<status status="PASS" starttime="20250304 04:10:23.405" endtime="20250304 04:10:23.406"/>
</kw>
<msg timestamp="20250304 04:10:23.406" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=34baaeab47fd560eff09eabb4ebea78ed1b1bc2a5a75becf5824a0feeb8dda7f</msg>
<status status="PASS" starttime="20250304 04:10:20.733" endtime="20250304 04:10:23.406"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250304 04:10:23.407" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=34baaeab47fd560eff09eabb4ebea78ed1b1bc2a5a75becf5824a0feeb8dda7f' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20250304 04:10:23.407" endtime="20250304 04:10:23.407"/>
</kw>
<msg timestamp="20250304 04:10:23.408" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250304 04:10:23.407" endtime="20250304 04:10:23.408"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250304 04:10:23.408" endtime="20250304 04:10:23.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250304 04:10:23.408" endtime="20250304 04:10:23.408"/>
</kw>
<status status="NOT RUN" starttime="20250304 04:10:23.408" endtime="20250304 04:10:23.408"/>
</branch>
<status status="PASS" starttime="20250304 04:10:23.408" endtime="20250304 04:10:23.408"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:10:23.409" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:10:23.408" endtime="20250304 04:10:23.409"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:10:23.409" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:10:23.409" endtime="20250304 04:10:23.409"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:10:23.410" level="INFO">${secret} = ['34baaeab47fd560eff09eabb4ebea78ed1b1bc2a5a75becf5824a0feeb8dda7f']</msg>
<status status="PASS" starttime="20250304 04:10:23.409" endtime="20250304 04:10:23.410"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:10:23.411" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:23.410" endtime="20250304 04:10:23.411"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:10:23.412" level="INFO">${secret} = 34baaeab47fd560eff09eabb4ebea78ed1b1bc2a5a75becf5824a0feeb8dda7f</msg>
<status status="PASS" starttime="20250304 04:10:23.411" endtime="20250304 04:10:23.412"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:23.416" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:23.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:23.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:23.413" endtime="20250304 04:10:23.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:23.873" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:23.873" endtime="20250304 04:10:23.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:23.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:23.873" endtime="20250304 04:10:23.874"/>
</kw>
<status status="PASS" starttime="20250304 04:10:23.413" endtime="20250304 04:10:23.874"/>
</kw>
<msg timestamp="20250304 04:10:23.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:23.412" endtime="20250304 04:10:23.874"/>
</kw>
<status status="PASS" starttime="20250304 04:10:23.412" endtime="20250304 04:10:23.874"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:23.878" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:24.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:24.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:23.875" endtime="20250304 04:10:24.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:24.258" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:24.258" endtime="20250304 04:10:24.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:24.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:24.258" endtime="20250304 04:10:24.259"/>
</kw>
<status status="PASS" starttime="20250304 04:10:23.875" endtime="20250304 04:10:24.259"/>
</kw>
<msg timestamp="20250304 04:10:24.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:23.875" endtime="20250304 04:10:24.259"/>
</kw>
<status status="PASS" starttime="20250304 04:10:23.874" endtime="20250304 04:10:24.259"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:24.262" level="INFO">Running command 'aws configure set aws_secret_access_key 34baaeab47fd560eff09eabb4ebea78ed1b1bc2a5a75becf5824a0feeb8dda7f 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:24.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:24.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:24.260" endtime="20250304 04:10:24.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:24.649" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:24.648" endtime="20250304 04:10:24.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:24.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:24.649" endtime="20250304 04:10:24.649"/>
</kw>
<status status="PASS" starttime="20250304 04:10:24.260" endtime="20250304 04:10:24.649"/>
</kw>
<msg timestamp="20250304 04:10:24.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:24.260" endtime="20250304 04:10:24.650"/>
</kw>
<status status="PASS" starttime="20250304 04:10:24.259" endtime="20250304 04:10:24.650"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:24.653" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:25.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:25.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:24.651" endtime="20250304 04:10:25.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:25.028" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:25.027" endtime="20250304 04:10:25.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:25.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:25.028" endtime="20250304 04:10:25.028"/>
</kw>
<status status="PASS" starttime="20250304 04:10:24.650" endtime="20250304 04:10:25.028"/>
</kw>
<msg timestamp="20250304 04:10:25.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:24.650" endtime="20250304 04:10:25.029"/>
</kw>
<status status="PASS" starttime="20250304 04:10:24.650" endtime="20250304 04:10:25.029"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:25.032" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:25.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:25.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:25.030" endtime="20250304 04:10:25.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:25.444" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:25.443" endtime="20250304 04:10:25.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:25.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:25.444" endtime="20250304 04:10:25.445"/>
</kw>
<status status="PASS" starttime="20250304 04:10:25.029" endtime="20250304 04:10:25.445"/>
</kw>
<msg timestamp="20250304 04:10:25.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:25.029" endtime="20250304 04:10:25.445"/>
</kw>
<status status="PASS" starttime="20250304 04:10:25.029" endtime="20250304 04:10:25.445"/>
</kw>
<status status="PASS" starttime="20250304 04:10:20.732" endtime="20250304 04:10:25.445"/>
</kw>
<status status="PASS" starttime="20250304 04:10:20.732" endtime="20250304 04:10:25.445"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:10:25.445" endtime="20250304 04:10:25.445"/>
</kw>
<status status="PASS" starttime="20250304 04:10:20.675" endtime="20250304 04:10:25.445"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:10:25.446" level="INFO">${randStr} = 8967336670</msg>
<status status="PASS" starttime="20250304 04:10:25.446" endtime="20250304 04:10:25.446"/>
</kw>
<msg timestamp="20250304 04:10:25.447" level="INFO">${random} = ozone-test-8967336670</msg>
<status status="PASS" starttime="20250304 04:10:25.446" endtime="20250304 04:10:25.447"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:25.451" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-8967336670 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:27.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:27.252" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8967336670"
}</msg>
<status status="PASS" starttime="20250304 04:10:25.448" endtime="20250304 04:10:27.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:27.253" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8967336670"
}</msg>
<status status="PASS" starttime="20250304 04:10:27.252" endtime="20250304 04:10:27.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:27.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:27.253" endtime="20250304 04:10:27.253"/>
</kw>
<status status="PASS" starttime="20250304 04:10:25.448" endtime="20250304 04:10:27.254"/>
</kw>
<msg timestamp="20250304 04:10:27.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:25.448" endtime="20250304 04:10:27.254"/>
</kw>
<msg timestamp="20250304 04:10:27.254" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8967336670"
}</msg>
<status status="PASS" starttime="20250304 04:10:25.447" endtime="20250304 04:10:27.254"/>
</kw>
<msg timestamp="20250304 04:10:27.254" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8967336670"
}</msg>
<status status="PASS" starttime="20250304 04:10:25.447" endtime="20250304 04:10:27.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:27.254" endtime="20250304 04:10:27.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:27.254" endtime="20250304 04:10:27.255"/>
</kw>
<msg timestamp="20250304 04:10:27.255" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20250304 04:10:25.447" endtime="20250304 04:10:27.255"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250304 04:10:27.255" endtime="20250304 04:10:27.255"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:20.674" endtime="20250304 04:10:27.255"/>
</test>
<test id="s1-s2-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:27.259" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:10:27.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:27.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:27.257" endtime="20250304 04:10:27.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:27.262" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:27.261" endtime="20250304 04:10:27.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:27.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:27.262" endtime="20250304 04:10:27.262"/>
</kw>
<status status="PASS" starttime="20250304 04:10:27.256" endtime="20250304 04:10:27.262"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:27.265" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:28.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:28.867" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20250304 04:10:27.263" endtime="20250304 04:10:28.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:28.868" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20250304 04:10:28.868" endtime="20250304 04:10:28.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:28.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:28.868" endtime="20250304 04:10:28.869"/>
</kw>
<msg timestamp="20250304 04:10:28.869" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20250304 04:10:27.263" endtime="20250304 04:10:28.869"/>
</kw>
<msg timestamp="20250304 04:10:28.869" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20250304 04:10:27.263" endtime="20250304 04:10:28.869"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:28.869" endtime="20250304 04:10:28.869"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:28.872" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:28.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:28.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:28.870" endtime="20250304 04:10:28.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:28.877" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:28.877" endtime="20250304 04:10:28.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:28.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:28.878" endtime="20250304 04:10:28.878"/>
</kw>
<status status="PASS" starttime="20250304 04:10:28.870" endtime="20250304 04:10:28.878"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:27.256" endtime="20250304 04:10:28.878"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20250304 04:10:00.987" endtime="20250304 04:10:28.879"/>
</suite>
<suite id="s1-s3" name="1.4.1-2.0.0-SNAPSHOT-1-original-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:10:29.603" endtime="20250304 04:10:29.603"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:29.607" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:29.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:29.611" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:10:29.604" endtime="20250304 04:10:29.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:29.612" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:10:29.611" endtime="20250304 04:10:29.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:29.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:29.612" endtime="20250304 04:10:29.612"/>
</kw>
<status status="PASS" starttime="20250304 04:10:29.604" endtime="20250304 04:10:29.612"/>
</kw>
<msg timestamp="20250304 04:10:29.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:29.603" endtime="20250304 04:10:29.612"/>
</kw>
<msg timestamp="20250304 04:10:29.612" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:10:29.603" endtime="20250304 04:10:29.612"/>
</kw>
<msg timestamp="20250304 04:10:29.613" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:29.603" endtime="20250304 04:10:29.613"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:10:29.613" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:29.613" endtime="20250304 04:10:29.613"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:29.617" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:29.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:29.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:29.614" endtime="20250304 04:10:29.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:29.661" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:29.661" endtime="20250304 04:10:29.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:29.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:29.661" endtime="20250304 04:10:29.662"/>
</kw>
<status status="PASS" starttime="20250304 04:10:29.614" endtime="20250304 04:10:29.662"/>
</kw>
<msg timestamp="20250304 04:10:29.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:29.614" endtime="20250304 04:10:29.662"/>
</kw>
<status status="PASS" starttime="20250304 04:10:29.614" endtime="20250304 04:10:29.662"/>
</kw>
<status status="PASS" starttime="20250304 04:10:29.613" endtime="20250304 04:10:29.662"/>
</kw>
<status status="PASS" starttime="20250304 04:10:29.602" endtime="20250304 04:10:29.662"/>
</kw>
<status status="PASS" starttime="20250304 04:10:29.602" endtime="20250304 04:10:29.662"/>
</kw>
<test id="s1-s3-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:10:29.663" level="INFO">${random} = 80535</msg>
<status status="PASS" starttime="20250304 04:10:29.663" endtime="20250304 04:10:29.663"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:29.667" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-80535 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:34.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:34.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:29.665" endtime="20250304 04:10:34.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:34.021" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:34.020" endtime="20250304 04:10:34.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:34.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:34.021" endtime="20250304 04:10:34.021"/>
</kw>
<status status="PASS" starttime="20250304 04:10:29.664" endtime="20250304 04:10:34.022"/>
</kw>
<msg timestamp="20250304 04:10:34.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:29.664" endtime="20250304 04:10:34.022"/>
</kw>
<msg timestamp="20250304 04:10:34.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:29.664" endtime="20250304 04:10:34.022"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:34.022" endtime="20250304 04:10:34.022"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:34.025" level="INFO">Running command 'cat /tmp/key-80535 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:34.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:34.029" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:10:34.023" endtime="20250304 04:10:34.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:34.030" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:10:34.030" endtime="20250304 04:10:34.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:34.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:34.030" endtime="20250304 04:10:34.031"/>
</kw>
<msg timestamp="20250304 04:10:34.031" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:10:34.022" endtime="20250304 04:10:34.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:34.031" endtime="20250304 04:10:34.031"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:34.034" level="INFO">Running command 'rm /tmp/key-80535 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:34.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:34.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:34.032" endtime="20250304 04:10:34.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:34.039" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:34.038" endtime="20250304 04:10:34.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:34.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:34.039" endtime="20250304 04:10:34.039"/>
</kw>
<status status="PASS" starttime="20250304 04:10:34.031" endtime="20250304 04:10:34.039"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:29.662" endtime="20250304 04:10:34.040"/>
</test>
<test id="s1-s3-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:10:34.042" endtime="20250304 04:10:34.042"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:34.045" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:34.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:34.049" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:10:34.043" endtime="20250304 04:10:34.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:34.050" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:10:34.049" endtime="20250304 04:10:34.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:34.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:34.050" endtime="20250304 04:10:34.050"/>
</kw>
<status status="PASS" starttime="20250304 04:10:34.043" endtime="20250304 04:10:34.051"/>
</kw>
<msg timestamp="20250304 04:10:34.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:34.042" endtime="20250304 04:10:34.051"/>
</kw>
<msg timestamp="20250304 04:10:34.051" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:10:34.042" endtime="20250304 04:10:34.051"/>
</kw>
<msg timestamp="20250304 04:10:34.051" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:34.042" endtime="20250304 04:10:34.051"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:10:34.051" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:34.051" endtime="20250304 04:10:34.052"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:34.055" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:34.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:34.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:34.053" endtime="20250304 04:10:34.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:34.105" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:34.104" endtime="20250304 04:10:34.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:34.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:34.105" endtime="20250304 04:10:34.106"/>
</kw>
<status status="PASS" starttime="20250304 04:10:34.053" endtime="20250304 04:10:34.106"/>
</kw>
<msg timestamp="20250304 04:10:34.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:34.052" endtime="20250304 04:10:34.106"/>
</kw>
<status status="PASS" starttime="20250304 04:10:34.052" endtime="20250304 04:10:34.106"/>
</kw>
<status status="PASS" starttime="20250304 04:10:34.052" endtime="20250304 04:10:34.106"/>
</kw>
<status status="PASS" starttime="20250304 04:10:34.041" endtime="20250304 04:10:34.106"/>
</kw>
<status status="PASS" starttime="20250304 04:10:34.041" endtime="20250304 04:10:34.106"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:34.110" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:36.585" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:10:36.585" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:10:34.107" endtime="20250304 04:10:36.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:36.586" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:10:36.586" endtime="20250304 04:10:36.587"/>
</kw>
<msg timestamp="20250304 04:10:36.587" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:10:34.107" endtime="20250304 04:10:36.587"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:36.587" endtime="20250304 04:10:36.587"/>
</kw>
<msg timestamp="20250304 04:10:36.587" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:10:36.587" endtime="20250304 04:10:36.587"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:36.591" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:39.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:39.161" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:10:36.589" endtime="20250304 04:10:39.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:39.162" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:10:39.162" endtime="20250304 04:10:39.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:39.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:39.162" endtime="20250304 04:10:39.163"/>
</kw>
<status status="PASS" starttime="20250304 04:10:36.588" endtime="20250304 04:10:39.163"/>
</kw>
<msg timestamp="20250304 04:10:39.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:36.588" endtime="20250304 04:10:39.163"/>
</kw>
<status status="PASS" starttime="20250304 04:10:36.588" endtime="20250304 04:10:39.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:39.167" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:41.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:41.669" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e6855b96c9693e8d5ce7a0091d1bdea6597df259436530000c30f39642744a48</msg>
<status status="PASS" starttime="20250304 04:10:39.164" endtime="20250304 04:10:41.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:41.670" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e6855b96c9693e8d5ce7a0091d1bdea6597df259436530000c30f39642744a48</msg>
<status status="PASS" starttime="20250304 04:10:41.670" endtime="20250304 04:10:41.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:41.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:41.670" endtime="20250304 04:10:41.671"/>
</kw>
<status status="PASS" starttime="20250304 04:10:39.164" endtime="20250304 04:10:41.671"/>
</kw>
<msg timestamp="20250304 04:10:41.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:39.164" endtime="20250304 04:10:41.671"/>
</kw>
<msg timestamp="20250304 04:10:41.671" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e6855b96c9693e8d5ce7a0091d1bdea6597df259436530000c30f39642744a48</msg>
<status status="PASS" starttime="20250304 04:10:39.163" endtime="20250304 04:10:41.671"/>
</kw>
<status status="PASS" starttime="20250304 04:10:36.588" endtime="20250304 04:10:41.671"/>
</branch>
<status status="PASS" starttime="20250304 04:10:36.588" endtime="20250304 04:10:41.671"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:10:41.672" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:10:41.672" endtime="20250304 04:10:41.672"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:10:41.672" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:10:41.672" endtime="20250304 04:10:41.672"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:10:41.673" level="INFO">${secret} = ['e6855b96c9693e8d5ce7a0091d1bdea6597df259436530000c30f39642744a48']</msg>
<status status="PASS" starttime="20250304 04:10:41.673" endtime="20250304 04:10:41.673"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:10:41.674" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:41.673" endtime="20250304 04:10:41.674"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:10:41.675" level="INFO">${secret} = e6855b96c9693e8d5ce7a0091d1bdea6597df259436530000c30f39642744a48</msg>
<status status="PASS" starttime="20250304 04:10:41.674" endtime="20250304 04:10:41.675"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:41.678" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:42.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:42.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:41.676" endtime="20250304 04:10:42.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:42.062" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:42.062" endtime="20250304 04:10:42.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:42.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:42.063" endtime="20250304 04:10:42.063"/>
</kw>
<status status="PASS" starttime="20250304 04:10:41.676" endtime="20250304 04:10:42.063"/>
</kw>
<msg timestamp="20250304 04:10:42.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:41.675" endtime="20250304 04:10:42.063"/>
</kw>
<status status="PASS" starttime="20250304 04:10:41.675" endtime="20250304 04:10:42.063"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:42.067" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:42.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:42.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:42.065" endtime="20250304 04:10:42.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:42.457" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:42.457" endtime="20250304 04:10:42.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:42.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:42.458" endtime="20250304 04:10:42.458"/>
</kw>
<status status="PASS" starttime="20250304 04:10:42.064" endtime="20250304 04:10:42.458"/>
</kw>
<msg timestamp="20250304 04:10:42.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:42.064" endtime="20250304 04:10:42.458"/>
</kw>
<status status="PASS" starttime="20250304 04:10:42.064" endtime="20250304 04:10:42.458"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:42.462" level="INFO">Running command 'aws configure set aws_secret_access_key e6855b96c9693e8d5ce7a0091d1bdea6597df259436530000c30f39642744a48 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:42.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:42.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:42.459" endtime="20250304 04:10:42.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:42.860" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:42.860" endtime="20250304 04:10:42.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:42.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:42.861" endtime="20250304 04:10:42.861"/>
</kw>
<status status="PASS" starttime="20250304 04:10:42.459" endtime="20250304 04:10:42.861"/>
</kw>
<msg timestamp="20250304 04:10:42.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:42.459" endtime="20250304 04:10:42.861"/>
</kw>
<status status="PASS" starttime="20250304 04:10:42.458" endtime="20250304 04:10:42.861"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:42.865" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:43.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:43.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:42.863" endtime="20250304 04:10:43.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:43.266" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:43.266" endtime="20250304 04:10:43.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:43.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:43.267" endtime="20250304 04:10:43.267"/>
</kw>
<status status="PASS" starttime="20250304 04:10:42.862" endtime="20250304 04:10:43.267"/>
</kw>
<msg timestamp="20250304 04:10:43.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:42.862" endtime="20250304 04:10:43.267"/>
</kw>
<status status="PASS" starttime="20250304 04:10:42.862" endtime="20250304 04:10:43.267"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:43.271" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:43.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:43.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:43.268" endtime="20250304 04:10:43.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:43.672" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:43.672" endtime="20250304 04:10:43.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:43.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:43.673" endtime="20250304 04:10:43.673"/>
</kw>
<status status="PASS" starttime="20250304 04:10:43.268" endtime="20250304 04:10:43.673"/>
</kw>
<msg timestamp="20250304 04:10:43.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:43.268" endtime="20250304 04:10:43.673"/>
</kw>
<status status="PASS" starttime="20250304 04:10:43.267" endtime="20250304 04:10:43.673"/>
</kw>
<status status="PASS" starttime="20250304 04:10:34.107" endtime="20250304 04:10:43.673"/>
</kw>
<status status="PASS" starttime="20250304 04:10:34.106" endtime="20250304 04:10:43.673"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:10:43.674" endtime="20250304 04:10:43.674"/>
</kw>
<status status="PASS" starttime="20250304 04:10:34.040" endtime="20250304 04:10:43.674"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:43.677" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:44.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:44.504" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:20 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:10:43.675" endtime="20250304 04:10:44.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:44.505" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:20 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:10:44 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:10:44 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:10:44.504" endtime="20250304 04:10:44.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:44.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:44.505" endtime="20250304 04:10:44.505"/>
</kw>
<msg timestamp="20250304 04:10:44.505" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:20 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:10:43.674" endtime="20250304 04:10:44.505"/>
</kw>
<msg timestamp="20250304 04:10:44.506" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:20 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:10:43.674" endtime="20250304 04:10:44.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:44.506" endtime="20250304 04:10:44.506"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:44.509" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:44.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:44.513" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:10:44.506" endtime="20250304 04:10:44.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:44.514" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:10:44.513" endtime="20250304 04:10:44.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:44.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:44.514" endtime="20250304 04:10:44.514"/>
</kw>
<msg timestamp="20250304 04:10:44.515" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:10:44.506" endtime="20250304 04:10:44.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:44.515" endtime="20250304 04:10:44.515"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:44.519" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:44.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:44.523" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:44.515" endtime="20250304 04:10:44.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:44.524" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:44.524" endtime="20250304 04:10:44.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:44.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:44.525" endtime="20250304 04:10:44.525"/>
</kw>
<status status="PASS" starttime="20250304 04:10:44.515" endtime="20250304 04:10:44.525"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:34.040" endtime="20250304 04:10:44.526"/>
</test>
<test id="s1-s3-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:10:44.528" endtime="20250304 04:10:44.528"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:44.533" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:44.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:44.538" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:10:44.530" endtime="20250304 04:10:44.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:44.539" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:10:44.538" endtime="20250304 04:10:44.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:44.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:44.539" endtime="20250304 04:10:44.539"/>
</kw>
<status status="PASS" starttime="20250304 04:10:44.529" endtime="20250304 04:10:44.539"/>
</kw>
<msg timestamp="20250304 04:10:44.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:44.529" endtime="20250304 04:10:44.539"/>
</kw>
<msg timestamp="20250304 04:10:44.540" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:10:44.529" endtime="20250304 04:10:44.540"/>
</kw>
<msg timestamp="20250304 04:10:44.540" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:44.529" endtime="20250304 04:10:44.540"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:10:44.540" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:44.540" endtime="20250304 04:10:44.540"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:44.544" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:44.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:44.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:44.542" endtime="20250304 04:10:44.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:44.574" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:44.573" endtime="20250304 04:10:44.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:44.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:44.574" endtime="20250304 04:10:44.575"/>
</kw>
<status status="PASS" starttime="20250304 04:10:44.541" endtime="20250304 04:10:44.575"/>
</kw>
<msg timestamp="20250304 04:10:44.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:44.541" endtime="20250304 04:10:44.575"/>
</kw>
<status status="PASS" starttime="20250304 04:10:44.541" endtime="20250304 04:10:44.575"/>
</kw>
<status status="PASS" starttime="20250304 04:10:44.540" endtime="20250304 04:10:44.575"/>
</kw>
<status status="PASS" starttime="20250304 04:10:44.528" endtime="20250304 04:10:44.575"/>
</kw>
<status status="PASS" starttime="20250304 04:10:44.527" endtime="20250304 04:10:44.575"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:44.579" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:46.971" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:10:46.971" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:10:44.576" endtime="20250304 04:10:46.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:46.972" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:10:46.971" endtime="20250304 04:10:46.972"/>
</kw>
<msg timestamp="20250304 04:10:46.972" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:10:44.576" endtime="20250304 04:10:46.972"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:46.973" endtime="20250304 04:10:46.973"/>
</kw>
<msg timestamp="20250304 04:10:46.973" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:10:46.973" endtime="20250304 04:10:46.973"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:46.977" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:49.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:49.403" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:10:46.974" endtime="20250304 04:10:49.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:49.404" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:10:49.403" endtime="20250304 04:10:49.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:49.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:49.404" endtime="20250304 04:10:49.404"/>
</kw>
<status status="PASS" starttime="20250304 04:10:46.974" endtime="20250304 04:10:49.404"/>
</kw>
<msg timestamp="20250304 04:10:49.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:46.974" endtime="20250304 04:10:49.405"/>
</kw>
<status status="PASS" starttime="20250304 04:10:46.973" endtime="20250304 04:10:49.405"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:49.408" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:52.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:52.177" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=98d7201aec28e5914f3ee97ddf0f5e22a8a2137031b9138fdbdf0c12a34b8f3b</msg>
<status status="PASS" starttime="20250304 04:10:49.406" endtime="20250304 04:10:52.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:52.178" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=98d7201aec28e5914f3ee97ddf0f5e22a8a2137031b9138fdbdf0c12a34b8f3b</msg>
<status status="PASS" starttime="20250304 04:10:52.177" endtime="20250304 04:10:52.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:52.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:52.178" endtime="20250304 04:10:52.178"/>
</kw>
<status status="PASS" starttime="20250304 04:10:49.405" endtime="20250304 04:10:52.178"/>
</kw>
<msg timestamp="20250304 04:10:52.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:49.405" endtime="20250304 04:10:52.179"/>
</kw>
<msg timestamp="20250304 04:10:52.179" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=98d7201aec28e5914f3ee97ddf0f5e22a8a2137031b9138fdbdf0c12a34b8f3b</msg>
<status status="PASS" starttime="20250304 04:10:49.405" endtime="20250304 04:10:52.179"/>
</kw>
<status status="PASS" starttime="20250304 04:10:46.973" endtime="20250304 04:10:52.179"/>
</branch>
<status status="PASS" starttime="20250304 04:10:46.973" endtime="20250304 04:10:52.179"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:10:52.179" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:10:52.179" endtime="20250304 04:10:52.179"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:10:52.180" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:10:52.179" endtime="20250304 04:10:52.180"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:10:52.180" level="INFO">${secret} = ['98d7201aec28e5914f3ee97ddf0f5e22a8a2137031b9138fdbdf0c12a34b8f3b']</msg>
<status status="PASS" starttime="20250304 04:10:52.180" endtime="20250304 04:10:52.180"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:10:52.181" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:52.180" endtime="20250304 04:10:52.181"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:10:52.182" level="INFO">${secret} = 98d7201aec28e5914f3ee97ddf0f5e22a8a2137031b9138fdbdf0c12a34b8f3b</msg>
<status status="PASS" starttime="20250304 04:10:52.181" endtime="20250304 04:10:52.182"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:52.185" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:52.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:52.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:52.183" endtime="20250304 04:10:52.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:52.579" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:52.578" endtime="20250304 04:10:52.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:52.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:52.579" endtime="20250304 04:10:52.580"/>
</kw>
<status status="PASS" starttime="20250304 04:10:52.183" endtime="20250304 04:10:52.580"/>
</kw>
<msg timestamp="20250304 04:10:52.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:52.183" endtime="20250304 04:10:52.580"/>
</kw>
<status status="PASS" starttime="20250304 04:10:52.182" endtime="20250304 04:10:52.580"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:52.583" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:52.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:52.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:52.581" endtime="20250304 04:10:52.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:52.968" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:52.968" endtime="20250304 04:10:52.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:52.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:52.969" endtime="20250304 04:10:52.969"/>
</kw>
<status status="PASS" starttime="20250304 04:10:52.581" endtime="20250304 04:10:52.969"/>
</kw>
<msg timestamp="20250304 04:10:52.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:52.580" endtime="20250304 04:10:52.969"/>
</kw>
<status status="PASS" starttime="20250304 04:10:52.580" endtime="20250304 04:10:52.969"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:52.973" level="INFO">Running command 'aws configure set aws_secret_access_key 98d7201aec28e5914f3ee97ddf0f5e22a8a2137031b9138fdbdf0c12a34b8f3b 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:53.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:53.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:52.970" endtime="20250304 04:10:53.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:53.351" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:53.350" endtime="20250304 04:10:53.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:53.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:53.351" endtime="20250304 04:10:53.352"/>
</kw>
<status status="PASS" starttime="20250304 04:10:52.970" endtime="20250304 04:10:53.352"/>
</kw>
<msg timestamp="20250304 04:10:53.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:52.970" endtime="20250304 04:10:53.352"/>
</kw>
<status status="PASS" starttime="20250304 04:10:52.969" endtime="20250304 04:10:53.352"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:53.356" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:53.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:53.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:53.353" endtime="20250304 04:10:53.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:53.740" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:53.739" endtime="20250304 04:10:53.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:53.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:53.740" endtime="20250304 04:10:53.741"/>
</kw>
<status status="PASS" starttime="20250304 04:10:53.353" endtime="20250304 04:10:53.741"/>
</kw>
<msg timestamp="20250304 04:10:53.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:53.353" endtime="20250304 04:10:53.741"/>
</kw>
<status status="PASS" starttime="20250304 04:10:53.352" endtime="20250304 04:10:53.741"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:53.745" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:54.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:54.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:53.743" endtime="20250304 04:10:54.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:54.129" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:54.129" endtime="20250304 04:10:54.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:54.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:54.129" endtime="20250304 04:10:54.130"/>
</kw>
<status status="PASS" starttime="20250304 04:10:53.742" endtime="20250304 04:10:54.130"/>
</kw>
<msg timestamp="20250304 04:10:54.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:53.742" endtime="20250304 04:10:54.130"/>
</kw>
<status status="PASS" starttime="20250304 04:10:53.741" endtime="20250304 04:10:54.130"/>
</kw>
<status status="PASS" starttime="20250304 04:10:44.576" endtime="20250304 04:10:54.130"/>
</kw>
<status status="PASS" starttime="20250304 04:10:44.575" endtime="20250304 04:10:54.130"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:10:54.130" endtime="20250304 04:10:54.130"/>
</kw>
<status status="PASS" starttime="20250304 04:10:44.527" endtime="20250304 04:10:54.131"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:54.134" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:54.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:54.758" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:28 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:10:54.131" endtime="20250304 04:10:54.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:54.759" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:28 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:10:54 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:10:54 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:10:54.758" endtime="20250304 04:10:54.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:54.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:54.759" endtime="20250304 04:10:54.759"/>
</kw>
<msg timestamp="20250304 04:10:54.760" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:28 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:10:54.131" endtime="20250304 04:10:54.760"/>
</kw>
<msg timestamp="20250304 04:10:54.760" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:28 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:10:54.131" endtime="20250304 04:10:54.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:54.760" endtime="20250304 04:10:54.760"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:54.763" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:54.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:54.767" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:10:54.761" endtime="20250304 04:10:54.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:54.768" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:10:54.768" endtime="20250304 04:10:54.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:54.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:54.768" endtime="20250304 04:10:54.769"/>
</kw>
<msg timestamp="20250304 04:10:54.769" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:10:54.760" endtime="20250304 04:10:54.769"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:10:54.769" endtime="20250304 04:10:54.769"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:54.772" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:54.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:54.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:54.770" endtime="20250304 04:10:54.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:54.777" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:54.776" endtime="20250304 04:10:54.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:54.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:54.777" endtime="20250304 04:10:54.777"/>
</kw>
<status status="PASS" starttime="20250304 04:10:54.769" endtime="20250304 04:10:54.777"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:44.526" endtime="20250304 04:10:54.778"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 04:10:29.542" endtime="20250304 04:10:54.779"/>
</suite>
<suite id="s1-s4" name="1.4.1-2.0.0-SNAPSHOT-1-original-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:10:55.492" endtime="20250304 04:10:55.492"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:55.496" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:55.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:55.501" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:10:55.494" endtime="20250304 04:10:55.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:55.502" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:10:55.501" endtime="20250304 04:10:55.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:55.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:55.502" endtime="20250304 04:10:55.502"/>
</kw>
<status status="PASS" starttime="20250304 04:10:55.493" endtime="20250304 04:10:55.503"/>
</kw>
<msg timestamp="20250304 04:10:55.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:55.493" endtime="20250304 04:10:55.503"/>
</kw>
<msg timestamp="20250304 04:10:55.503" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:10:55.492" endtime="20250304 04:10:55.503"/>
</kw>
<msg timestamp="20250304 04:10:55.503" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:55.492" endtime="20250304 04:10:55.503"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:10:55.504" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:10:55.503" endtime="20250304 04:10:55.504"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:55.507" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:10:55.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:10:55.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:10:55.505" endtime="20250304 04:10:55.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:10:55.535" level="INFO"/>
<status status="PASS" starttime="20250304 04:10:55.535" endtime="20250304 04:10:55.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:10:55.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:10:55.536" endtime="20250304 04:10:55.536"/>
</kw>
<status status="PASS" starttime="20250304 04:10:55.505" endtime="20250304 04:10:55.536"/>
</kw>
<msg timestamp="20250304 04:10:55.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:55.504" endtime="20250304 04:10:55.536"/>
</kw>
<status status="PASS" starttime="20250304 04:10:55.504" endtime="20250304 04:10:55.536"/>
</kw>
<status status="PASS" starttime="20250304 04:10:55.504" endtime="20250304 04:10:55.536"/>
</kw>
<status status="PASS" starttime="20250304 04:10:55.491" endtime="20250304 04:10:55.537"/>
</kw>
<status status="PASS" starttime="20250304 04:10:55.490" endtime="20250304 04:10:55.537"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:10:55.537" endtime="20250304 04:10:55.537"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:10:55.541" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:11:03.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:11:03.319" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [35].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20250304 04:10:55.538" endtime="20250304 04:11:03.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:11:03.320" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [35].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [35]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [35]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [35]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250304 04:11:03.319" endtime="20250304 04:11:03.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:11:03.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:11:03.320" endtime="20250304 04:11:03.320"/>
</kw>
<status status="PASS" starttime="20250304 04:10:55.538" endtime="20250304 04:11:03.321"/>
</kw>
<msg timestamp="20250304 04:11:03.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:10:55.538" endtime="20250304 04:11:03.321"/>
</kw>
<msg timestamp="20250304 04:11:03.321" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [35].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20250304 04:10:55.537" endtime="20250304 04:11:03.321"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:11:03.321" endtime="20250304 04:11:03.322"/>
</kw>
<status status="PASS" starttime="20250304 04:11:03.321" endtime="20250304 04:11:03.322"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:10:55.490" endtime="20250304 04:11:03.322"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20250304 04:10:55.449" endtime="20250304 04:11:03.323"/>
</suite>
<suite id="s1-s5" name="1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-validate-old1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:12:43.476" endtime="20250304 04:12:43.476"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:43.479" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:43.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:43.483" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:12:43.477" endtime="20250304 04:12:43.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:43.484" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:12:43.484" endtime="20250304 04:12:43.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:43.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:43.484" endtime="20250304 04:12:43.484"/>
</kw>
<status status="PASS" starttime="20250304 04:12:43.477" endtime="20250304 04:12:43.485"/>
</kw>
<msg timestamp="20250304 04:12:43.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:43.477" endtime="20250304 04:12:43.485"/>
</kw>
<msg timestamp="20250304 04:12:43.485" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:12:43.476" endtime="20250304 04:12:43.485"/>
</kw>
<msg timestamp="20250304 04:12:43.485" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:12:43.476" endtime="20250304 04:12:43.485"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:12:43.485" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:12:43.485" endtime="20250304 04:12:43.485"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:43.488" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:43.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:43.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:12:43.487" endtime="20250304 04:12:43.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:43.515" level="INFO"/>
<status status="PASS" starttime="20250304 04:12:43.515" endtime="20250304 04:12:43.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:43.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:43.516" endtime="20250304 04:12:43.516"/>
</kw>
<status status="PASS" starttime="20250304 04:12:43.486" endtime="20250304 04:12:43.516"/>
</kw>
<msg timestamp="20250304 04:12:43.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:43.486" endtime="20250304 04:12:43.516"/>
</kw>
<status status="PASS" starttime="20250304 04:12:43.486" endtime="20250304 04:12:43.516"/>
</kw>
<status status="PASS" starttime="20250304 04:12:43.485" endtime="20250304 04:12:43.516"/>
</kw>
<status status="PASS" starttime="20250304 04:12:43.476" endtime="20250304 04:12:43.516"/>
</kw>
<status status="PASS" starttime="20250304 04:12:43.475" endtime="20250304 04:12:43.516"/>
</kw>
<test id="s1-s5-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:12:43.518" level="INFO">${random} = 02802</msg>
<status status="PASS" starttime="20250304 04:12:43.517" endtime="20250304 04:12:43.518"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:43.521" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-02802 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:47.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:47.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:12:43.519" endtime="20250304 04:12:47.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:47.237" level="INFO"/>
<status status="PASS" starttime="20250304 04:12:47.236" endtime="20250304 04:12:47.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:47.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:47.237" endtime="20250304 04:12:47.237"/>
</kw>
<status status="PASS" starttime="20250304 04:12:43.518" endtime="20250304 04:12:47.237"/>
</kw>
<msg timestamp="20250304 04:12:47.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:43.518" endtime="20250304 04:12:47.237"/>
</kw>
<msg timestamp="20250304 04:12:47.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:12:43.518" endtime="20250304 04:12:47.238"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:12:47.238" endtime="20250304 04:12:47.238"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:47.241" level="INFO">Running command 'cat /tmp/key-02802 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:47.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:47.245" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:12:47.238" endtime="20250304 04:12:47.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:47.245" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:12:47.245" endtime="20250304 04:12:47.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:47.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:47.246" endtime="20250304 04:12:47.246"/>
</kw>
<msg timestamp="20250304 04:12:47.246" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:12:47.238" endtime="20250304 04:12:47.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:12:47.246" endtime="20250304 04:12:47.247"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:47.249" level="INFO">Running command 'rm /tmp/key-02802 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:47.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:47.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:12:47.247" endtime="20250304 04:12:47.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:47.253" level="INFO"/>
<status status="PASS" starttime="20250304 04:12:47.253" endtime="20250304 04:12:47.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:47.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:47.253" endtime="20250304 04:12:47.254"/>
</kw>
<status status="PASS" starttime="20250304 04:12:47.247" endtime="20250304 04:12:47.254"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:12:43.517" endtime="20250304 04:12:47.254"/>
</test>
<test id="s1-s5-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:12:47.256" endtime="20250304 04:12:47.256"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:47.259" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:47.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:47.263" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:12:47.257" endtime="20250304 04:12:47.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:47.264" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:12:47.263" endtime="20250304 04:12:47.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:47.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:47.264" endtime="20250304 04:12:47.264"/>
</kw>
<status status="PASS" starttime="20250304 04:12:47.257" endtime="20250304 04:12:47.264"/>
</kw>
<msg timestamp="20250304 04:12:47.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:47.257" endtime="20250304 04:12:47.264"/>
</kw>
<msg timestamp="20250304 04:12:47.264" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:12:47.257" endtime="20250304 04:12:47.264"/>
</kw>
<msg timestamp="20250304 04:12:47.265" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:12:47.256" endtime="20250304 04:12:47.265"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:12:47.265" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:12:47.265" endtime="20250304 04:12:47.265"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:47.269" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:47.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:47.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:12:47.267" endtime="20250304 04:12:47.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:47.305" level="INFO"/>
<status status="PASS" starttime="20250304 04:12:47.304" endtime="20250304 04:12:47.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:47.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:47.305" endtime="20250304 04:12:47.305"/>
</kw>
<status status="PASS" starttime="20250304 04:12:47.266" endtime="20250304 04:12:47.305"/>
</kw>
<msg timestamp="20250304 04:12:47.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:47.266" endtime="20250304 04:12:47.305"/>
</kw>
<status status="PASS" starttime="20250304 04:12:47.266" endtime="20250304 04:12:47.306"/>
</kw>
<status status="PASS" starttime="20250304 04:12:47.265" endtime="20250304 04:12:47.306"/>
</kw>
<status status="PASS" starttime="20250304 04:12:47.256" endtime="20250304 04:12:47.306"/>
</kw>
<status status="PASS" starttime="20250304 04:12:47.255" endtime="20250304 04:12:47.306"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:47.309" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:49.321" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:12:49.321" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:12:47.307" endtime="20250304 04:12:49.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:49.322" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:12:49.322" endtime="20250304 04:12:49.322"/>
</kw>
<msg timestamp="20250304 04:12:49.323" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:12:47.306" endtime="20250304 04:12:49.323"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:12:49.323" endtime="20250304 04:12:49.323"/>
</kw>
<msg timestamp="20250304 04:12:49.323" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:12:49.323" endtime="20250304 04:12:49.324"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:49.328" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:51.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:51.204" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:12:49.325" endtime="20250304 04:12:51.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:51.205" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:12:51.204" endtime="20250304 04:12:51.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:51.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:51.205" endtime="20250304 04:12:51.206"/>
</kw>
<status status="PASS" starttime="20250304 04:12:49.325" endtime="20250304 04:12:51.206"/>
</kw>
<msg timestamp="20250304 04:12:51.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:49.324" endtime="20250304 04:12:51.206"/>
</kw>
<status status="PASS" starttime="20250304 04:12:49.324" endtime="20250304 04:12:51.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:51.209" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:53.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:53.086" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=5c55a96cbebea663eb60a86d883c5c5deef3f5034a50cbf56dcab61f87b34fb6</msg>
<status status="PASS" starttime="20250304 04:12:51.207" endtime="20250304 04:12:53.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:53.087" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=5c55a96cbebea663eb60a86d883c5c5deef3f5034a50cbf56dcab61f87b34fb6</msg>
<status status="PASS" starttime="20250304 04:12:53.086" endtime="20250304 04:12:53.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:53.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:53.088" endtime="20250304 04:12:53.088"/>
</kw>
<status status="PASS" starttime="20250304 04:12:51.207" endtime="20250304 04:12:53.088"/>
</kw>
<msg timestamp="20250304 04:12:53.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:51.206" endtime="20250304 04:12:53.088"/>
</kw>
<msg timestamp="20250304 04:12:53.089" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=5c55a96cbebea663eb60a86d883c5c5deef3f5034a50cbf56dcab61f87b34fb6</msg>
<status status="PASS" starttime="20250304 04:12:51.206" endtime="20250304 04:12:53.089"/>
</kw>
<status status="PASS" starttime="20250304 04:12:49.324" endtime="20250304 04:12:53.089"/>
</branch>
<status status="PASS" starttime="20250304 04:12:49.324" endtime="20250304 04:12:53.089"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:12:53.089" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:12:53.089" endtime="20250304 04:12:53.090"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:12:53.090" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:12:53.090" endtime="20250304 04:12:53.090"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:12:53.091" level="INFO">${secret} = ['5c55a96cbebea663eb60a86d883c5c5deef3f5034a50cbf56dcab61f87b34fb6']</msg>
<status status="PASS" starttime="20250304 04:12:53.090" endtime="20250304 04:12:53.091"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:12:53.092" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:12:53.091" endtime="20250304 04:12:53.092"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:12:53.093" level="INFO">${secret} = 5c55a96cbebea663eb60a86d883c5c5deef3f5034a50cbf56dcab61f87b34fb6</msg>
<status status="PASS" starttime="20250304 04:12:53.092" endtime="20250304 04:12:53.093"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:53.097" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:53.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:53.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:12:53.094" endtime="20250304 04:12:53.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:53.494" level="INFO"/>
<status status="PASS" starttime="20250304 04:12:53.493" endtime="20250304 04:12:53.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:53.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:53.494" endtime="20250304 04:12:53.494"/>
</kw>
<status status="PASS" starttime="20250304 04:12:53.094" endtime="20250304 04:12:53.494"/>
</kw>
<msg timestamp="20250304 04:12:53.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:53.093" endtime="20250304 04:12:53.494"/>
</kw>
<status status="PASS" starttime="20250304 04:12:53.093" endtime="20250304 04:12:53.495"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:53.498" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:53.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:53.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:12:53.496" endtime="20250304 04:12:53.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:53.876" level="INFO"/>
<status status="PASS" starttime="20250304 04:12:53.876" endtime="20250304 04:12:53.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:53.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:53.876" endtime="20250304 04:12:53.877"/>
</kw>
<status status="PASS" starttime="20250304 04:12:53.495" endtime="20250304 04:12:53.877"/>
</kw>
<msg timestamp="20250304 04:12:53.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:53.495" endtime="20250304 04:12:53.877"/>
</kw>
<status status="PASS" starttime="20250304 04:12:53.495" endtime="20250304 04:12:53.877"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:53.881" level="INFO">Running command 'aws configure set aws_secret_access_key 5c55a96cbebea663eb60a86d883c5c5deef3f5034a50cbf56dcab61f87b34fb6 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:54.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:54.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:12:53.878" endtime="20250304 04:12:54.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:54.243" level="INFO"/>
<status status="PASS" starttime="20250304 04:12:54.243" endtime="20250304 04:12:54.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:54.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:54.244" endtime="20250304 04:12:54.244"/>
</kw>
<status status="PASS" starttime="20250304 04:12:53.878" endtime="20250304 04:12:54.244"/>
</kw>
<msg timestamp="20250304 04:12:54.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:53.878" endtime="20250304 04:12:54.244"/>
</kw>
<status status="PASS" starttime="20250304 04:12:53.877" endtime="20250304 04:12:54.244"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:54.247" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:54.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:54.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:12:54.245" endtime="20250304 04:12:54.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:54.641" level="INFO"/>
<status status="PASS" starttime="20250304 04:12:54.640" endtime="20250304 04:12:54.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:54.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:54.641" endtime="20250304 04:12:54.641"/>
</kw>
<status status="PASS" starttime="20250304 04:12:54.245" endtime="20250304 04:12:54.642"/>
</kw>
<msg timestamp="20250304 04:12:54.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:54.245" endtime="20250304 04:12:54.642"/>
</kw>
<status status="PASS" starttime="20250304 04:12:54.244" endtime="20250304 04:12:54.642"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:54.645" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:55.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:55.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:12:54.643" endtime="20250304 04:12:55.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:55.019" level="INFO"/>
<status status="PASS" starttime="20250304 04:12:55.018" endtime="20250304 04:12:55.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:55.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:55.019" endtime="20250304 04:12:55.019"/>
</kw>
<status status="PASS" starttime="20250304 04:12:54.642" endtime="20250304 04:12:55.019"/>
</kw>
<msg timestamp="20250304 04:12:55.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:54.642" endtime="20250304 04:12:55.019"/>
</kw>
<status status="PASS" starttime="20250304 04:12:54.642" endtime="20250304 04:12:55.019"/>
</kw>
<status status="PASS" starttime="20250304 04:12:47.306" endtime="20250304 04:12:55.020"/>
</kw>
<status status="PASS" starttime="20250304 04:12:47.306" endtime="20250304 04:12:55.020"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:12:55.020" endtime="20250304 04:12:55.020"/>
</kw>
<status status="PASS" starttime="20250304 04:12:47.255" endtime="20250304 04:12:55.020"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:55.023" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:57.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:57.061" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:20 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:12:55.021" endtime="20250304 04:12:57.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:57.062" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:20 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:12:55 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:12:55 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:12:57.062" endtime="20250304 04:12:57.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:57.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:57.062" endtime="20250304 04:12:57.063"/>
</kw>
<msg timestamp="20250304 04:12:57.063" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:20 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:12:55.021" endtime="20250304 04:12:57.063"/>
</kw>
<msg timestamp="20250304 04:12:57.063" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:20 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:12:55.020" endtime="20250304 04:12:57.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:12:57.064" endtime="20250304 04:12:57.064"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:57.067" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:57.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:57.071" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:12:57.064" endtime="20250304 04:12:57.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:57.072" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:12:57.072" endtime="20250304 04:12:57.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:57.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:57.072" endtime="20250304 04:12:57.073"/>
</kw>
<msg timestamp="20250304 04:12:57.073" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:12:57.064" endtime="20250304 04:12:57.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:12:57.073" endtime="20250304 04:12:57.074"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:57.077" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:57.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:57.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:12:57.074" endtime="20250304 04:12:57.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:57.082" level="INFO"/>
<status status="PASS" starttime="20250304 04:12:57.081" endtime="20250304 04:12:57.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:57.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:57.082" endtime="20250304 04:12:57.082"/>
</kw>
<status status="PASS" starttime="20250304 04:12:57.074" endtime="20250304 04:12:57.082"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:12:47.255" endtime="20250304 04:12:57.083"/>
</test>
<test id="s1-s5-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:12:57.085" endtime="20250304 04:12:57.085"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:57.089" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:57.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:57.094" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:12:57.086" endtime="20250304 04:12:57.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:57.094" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:12:57.094" endtime="20250304 04:12:57.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:57.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:57.095" endtime="20250304 04:12:57.095"/>
</kw>
<status status="PASS" starttime="20250304 04:12:57.086" endtime="20250304 04:12:57.095"/>
</kw>
<msg timestamp="20250304 04:12:57.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:57.086" endtime="20250304 04:12:57.095"/>
</kw>
<msg timestamp="20250304 04:12:57.096" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:12:57.085" endtime="20250304 04:12:57.096"/>
</kw>
<msg timestamp="20250304 04:12:57.096" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:12:57.085" endtime="20250304 04:12:57.096"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:12:57.096" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:12:57.096" endtime="20250304 04:12:57.096"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:57.100" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:57.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:12:57.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:12:57.098" endtime="20250304 04:12:57.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:57.140" level="INFO"/>
<status status="PASS" starttime="20250304 04:12:57.140" endtime="20250304 04:12:57.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:12:57.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:12:57.141" endtime="20250304 04:12:57.141"/>
</kw>
<status status="PASS" starttime="20250304 04:12:57.098" endtime="20250304 04:12:57.141"/>
</kw>
<msg timestamp="20250304 04:12:57.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:57.097" endtime="20250304 04:12:57.141"/>
</kw>
<status status="PASS" starttime="20250304 04:12:57.097" endtime="20250304 04:12:57.141"/>
</kw>
<status status="PASS" starttime="20250304 04:12:57.096" endtime="20250304 04:12:57.141"/>
</kw>
<status status="PASS" starttime="20250304 04:12:57.084" endtime="20250304 04:12:57.142"/>
</kw>
<status status="PASS" starttime="20250304 04:12:57.084" endtime="20250304 04:12:57.142"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:57.145" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:12:59.007" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:12:59.007" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:12:57.143" endtime="20250304 04:12:59.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:12:59.008" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:12:59.007" endtime="20250304 04:12:59.008"/>
</kw>
<msg timestamp="20250304 04:12:59.008" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:12:57.142" endtime="20250304 04:12:59.008"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:12:59.008" endtime="20250304 04:12:59.009"/>
</kw>
<msg timestamp="20250304 04:12:59.009" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:12:59.008" endtime="20250304 04:12:59.009"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:12:59.012" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:00.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:00.929" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:12:59.010" endtime="20250304 04:13:00.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:00.930" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:13:00.929" endtime="20250304 04:13:00.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:00.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:00.930" endtime="20250304 04:13:00.930"/>
</kw>
<status status="PASS" starttime="20250304 04:12:59.009" endtime="20250304 04:13:00.930"/>
</kw>
<msg timestamp="20250304 04:13:00.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:12:59.009" endtime="20250304 04:13:00.930"/>
</kw>
<status status="PASS" starttime="20250304 04:12:59.009" endtime="20250304 04:13:00.930"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:00.934" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:02.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:02.835" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7d036a96305ef9ed1992b9d11a130f67dd8879682035ef857f288fba8aac74ba</msg>
<status status="PASS" starttime="20250304 04:13:00.931" endtime="20250304 04:13:02.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:02.837" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7d036a96305ef9ed1992b9d11a130f67dd8879682035ef857f288fba8aac74ba</msg>
<status status="PASS" starttime="20250304 04:13:02.836" endtime="20250304 04:13:02.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:02.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:02.837" endtime="20250304 04:13:02.837"/>
</kw>
<status status="PASS" starttime="20250304 04:13:00.931" endtime="20250304 04:13:02.837"/>
</kw>
<msg timestamp="20250304 04:13:02.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:00.931" endtime="20250304 04:13:02.838"/>
</kw>
<msg timestamp="20250304 04:13:02.838" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7d036a96305ef9ed1992b9d11a130f67dd8879682035ef857f288fba8aac74ba</msg>
<status status="PASS" starttime="20250304 04:13:00.931" endtime="20250304 04:13:02.838"/>
</kw>
<status status="PASS" starttime="20250304 04:12:59.009" endtime="20250304 04:13:02.838"/>
</branch>
<status status="PASS" starttime="20250304 04:12:59.009" endtime="20250304 04:13:02.838"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:13:02.838" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:13:02.838" endtime="20250304 04:13:02.838"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:13:02.839" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:13:02.838" endtime="20250304 04:13:02.839"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:13:02.839" level="INFO">${secret} = ['7d036a96305ef9ed1992b9d11a130f67dd8879682035ef857f288fba8aac74ba']</msg>
<status status="PASS" starttime="20250304 04:13:02.839" endtime="20250304 04:13:02.839"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:13:02.840" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:02.839" endtime="20250304 04:13:02.840"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:13:02.841" level="INFO">${secret} = 7d036a96305ef9ed1992b9d11a130f67dd8879682035ef857f288fba8aac74ba</msg>
<status status="PASS" starttime="20250304 04:13:02.840" endtime="20250304 04:13:02.841"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:02.844" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:03.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:03.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:02.842" endtime="20250304 04:13:03.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:03.221" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:03.221" endtime="20250304 04:13:03.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:03.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:03.221" endtime="20250304 04:13:03.222"/>
</kw>
<status status="PASS" starttime="20250304 04:13:02.841" endtime="20250304 04:13:03.222"/>
</kw>
<msg timestamp="20250304 04:13:03.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:02.841" endtime="20250304 04:13:03.222"/>
</kw>
<status status="PASS" starttime="20250304 04:13:02.841" endtime="20250304 04:13:03.222"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:03.225" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:03.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:03.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:03.223" endtime="20250304 04:13:03.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:03.594" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:03.593" endtime="20250304 04:13:03.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:03.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:03.594" endtime="20250304 04:13:03.594"/>
</kw>
<status status="PASS" starttime="20250304 04:13:03.223" endtime="20250304 04:13:03.595"/>
</kw>
<msg timestamp="20250304 04:13:03.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:03.223" endtime="20250304 04:13:03.595"/>
</kw>
<status status="PASS" starttime="20250304 04:13:03.222" endtime="20250304 04:13:03.595"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:03.599" level="INFO">Running command 'aws configure set aws_secret_access_key 7d036a96305ef9ed1992b9d11a130f67dd8879682035ef857f288fba8aac74ba 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:03.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:03.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:03.596" endtime="20250304 04:13:03.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:03.977" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:03.976" endtime="20250304 04:13:03.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:03.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:03.977" endtime="20250304 04:13:03.978"/>
</kw>
<status status="PASS" starttime="20250304 04:13:03.596" endtime="20250304 04:13:03.978"/>
</kw>
<msg timestamp="20250304 04:13:03.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:03.596" endtime="20250304 04:13:03.978"/>
</kw>
<status status="PASS" starttime="20250304 04:13:03.595" endtime="20250304 04:13:03.978"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:03.981" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:04.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:04.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:03.979" endtime="20250304 04:13:04.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:04.365" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:04.364" endtime="20250304 04:13:04.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:04.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:04.365" endtime="20250304 04:13:04.365"/>
</kw>
<status status="PASS" starttime="20250304 04:13:03.979" endtime="20250304 04:13:04.366"/>
</kw>
<msg timestamp="20250304 04:13:04.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:03.978" endtime="20250304 04:13:04.366"/>
</kw>
<status status="PASS" starttime="20250304 04:13:03.978" endtime="20250304 04:13:04.366"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:04.370" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:04.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:04.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:04.367" endtime="20250304 04:13:04.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:04.756" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:04.756" endtime="20250304 04:13:04.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:04.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:04.756" endtime="20250304 04:13:04.757"/>
</kw>
<status status="PASS" starttime="20250304 04:13:04.367" endtime="20250304 04:13:04.757"/>
</kw>
<msg timestamp="20250304 04:13:04.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:04.367" endtime="20250304 04:13:04.757"/>
</kw>
<status status="PASS" starttime="20250304 04:13:04.366" endtime="20250304 04:13:04.757"/>
</kw>
<status status="PASS" starttime="20250304 04:12:57.142" endtime="20250304 04:13:04.757"/>
</kw>
<status status="PASS" starttime="20250304 04:12:57.142" endtime="20250304 04:13:04.757"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:13:04.757" endtime="20250304 04:13:04.758"/>
</kw>
<status status="PASS" starttime="20250304 04:12:57.084" endtime="20250304 04:13:04.758"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:04.761" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:05.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:05.287" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:28 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:13:04.759" endtime="20250304 04:13:05.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:05.288" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:28 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:13:05 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:13:05 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:13:05.287" endtime="20250304 04:13:05.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:05.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:05.288" endtime="20250304 04:13:05.289"/>
</kw>
<msg timestamp="20250304 04:13:05.289" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:28 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:13:04.758" endtime="20250304 04:13:05.289"/>
</kw>
<msg timestamp="20250304 04:13:05.289" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:10:28 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:13:04.758" endtime="20250304 04:13:05.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:05.290" endtime="20250304 04:13:05.290"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:05.295" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:05.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:05.298" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:13:05.290" endtime="20250304 04:13:05.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:05.299" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:13:05.298" endtime="20250304 04:13:05.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:05.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:05.299" endtime="20250304 04:13:05.300"/>
</kw>
<msg timestamp="20250304 04:13:05.300" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:13:05.290" endtime="20250304 04:13:05.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:05.300" endtime="20250304 04:13:05.301"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:05.304" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:05.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:05.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:05.301" endtime="20250304 04:13:05.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:05.308" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:05.308" endtime="20250304 04:13:05.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:05.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:05.308" endtime="20250304 04:13:05.309"/>
</kw>
<status status="PASS" starttime="20250304 04:13:05.301" endtime="20250304 04:13:05.309"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:12:57.083" endtime="20250304 04:13:05.309"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 04:12:43.416" endtime="20250304 04:13:05.310"/>
</suite>
<suite id="s1-s6" name="1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-generate-old1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:13:06.028" endtime="20250304 04:13:06.028"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:06.032" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:06.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:06.036" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:13:06.029" endtime="20250304 04:13:06.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:06.036" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:13:06.036" endtime="20250304 04:13:06.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:06.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:06.036" endtime="20250304 04:13:06.037"/>
</kw>
<status status="PASS" starttime="20250304 04:13:06.029" endtime="20250304 04:13:06.037"/>
</kw>
<msg timestamp="20250304 04:13:06.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:06.029" endtime="20250304 04:13:06.037"/>
</kw>
<msg timestamp="20250304 04:13:06.037" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:13:06.029" endtime="20250304 04:13:06.037"/>
</kw>
<msg timestamp="20250304 04:13:06.037" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:06.028" endtime="20250304 04:13:06.037"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:13:06.038" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:06.037" endtime="20250304 04:13:06.038"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:06.041" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:06.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:06.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:06.039" endtime="20250304 04:13:06.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:06.059" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:06.058" endtime="20250304 04:13:06.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:06.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:06.059" endtime="20250304 04:13:06.059"/>
</kw>
<status status="PASS" starttime="20250304 04:13:06.039" endtime="20250304 04:13:06.059"/>
</kw>
<msg timestamp="20250304 04:13:06.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:06.038" endtime="20250304 04:13:06.059"/>
</kw>
<status status="PASS" starttime="20250304 04:13:06.038" endtime="20250304 04:13:06.060"/>
</kw>
<status status="PASS" starttime="20250304 04:13:06.038" endtime="20250304 04:13:06.060"/>
</kw>
<status status="PASS" starttime="20250304 04:13:06.028" endtime="20250304 04:13:06.060"/>
</kw>
<status status="PASS" starttime="20250304 04:13:06.027" endtime="20250304 04:13:06.060"/>
</kw>
<test id="s1-s6-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:06.064" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:13:06.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:06.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:06.061" endtime="20250304 04:13:06.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:06.066" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:06.066" endtime="20250304 04:13:06.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:06.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:06.067" endtime="20250304 04:13:06.067"/>
</kw>
<status status="PASS" starttime="20250304 04:13:06.061" endtime="20250304 04:13:06.067"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:06.071" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:10.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:10.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:06.068" endtime="20250304 04:13:10.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:10.130" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:10.130" endtime="20250304 04:13:10.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:10.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:10.130" endtime="20250304 04:13:10.131"/>
</kw>
<status status="PASS" starttime="20250304 04:13:06.068" endtime="20250304 04:13:10.131"/>
</kw>
<msg timestamp="20250304 04:13:10.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:06.068" endtime="20250304 04:13:10.131"/>
</kw>
<msg timestamp="20250304 04:13:10.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:06.067" endtime="20250304 04:13:10.131"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:10.131" endtime="20250304 04:13:10.132"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:10.135" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:10.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:10.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:10.132" endtime="20250304 04:13:10.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:10.140" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:10.139" endtime="20250304 04:13:10.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:10.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:10.140" endtime="20250304 04:13:10.140"/>
</kw>
<status status="PASS" starttime="20250304 04:13:10.132" endtime="20250304 04:13:10.140"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:06.060" endtime="20250304 04:13:10.140"/>
</test>
<test id="s1-s6-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:10.145" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:13:10.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:10.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:10.142" endtime="20250304 04:13:10.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:10.147" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:10.147" endtime="20250304 04:13:10.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:10.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:10.148" endtime="20250304 04:13:10.148"/>
</kw>
<status status="PASS" starttime="20250304 04:13:10.142" endtime="20250304 04:13:10.148"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:10.151" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:13.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:13.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:10.149" endtime="20250304 04:13:13.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:13.849" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:13.849" endtime="20250304 04:13:13.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:13.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:13.849" endtime="20250304 04:13:13.850"/>
</kw>
<status status="PASS" starttime="20250304 04:13:10.149" endtime="20250304 04:13:13.850"/>
</kw>
<msg timestamp="20250304 04:13:13.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:10.149" endtime="20250304 04:13:13.850"/>
</kw>
<msg timestamp="20250304 04:13:13.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:10.148" endtime="20250304 04:13:13.850"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:13.850" endtime="20250304 04:13:13.850"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:13.853" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:13.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:13.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:13.851" endtime="20250304 04:13:13.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:13.858" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:13.857" endtime="20250304 04:13:13.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:13.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:13.858" endtime="20250304 04:13:13.858"/>
</kw>
<status status="PASS" starttime="20250304 04:13:13.850" endtime="20250304 04:13:13.858"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:10.141" endtime="20250304 04:13:13.859"/>
</test>
<test id="s1-s6-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:13:13.860" endtime="20250304 04:13:13.861"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:13.864" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:13.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:13.868" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:13:13.862" endtime="20250304 04:13:13.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:13.869" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:13:13.869" endtime="20250304 04:13:13.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:13.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:13.869" endtime="20250304 04:13:13.870"/>
</kw>
<status status="PASS" starttime="20250304 04:13:13.862" endtime="20250304 04:13:13.870"/>
</kw>
<msg timestamp="20250304 04:13:13.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:13.861" endtime="20250304 04:13:13.870"/>
</kw>
<msg timestamp="20250304 04:13:13.870" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:13:13.861" endtime="20250304 04:13:13.870"/>
</kw>
<msg timestamp="20250304 04:13:13.870" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:13.861" endtime="20250304 04:13:13.870"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:13:13.871" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:13.870" endtime="20250304 04:13:13.871"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:13.874" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:13.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:13.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:13.872" endtime="20250304 04:13:13.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:13.891" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:13.891" endtime="20250304 04:13:13.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:13.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:13.892" endtime="20250304 04:13:13.892"/>
</kw>
<status status="PASS" starttime="20250304 04:13:13.872" endtime="20250304 04:13:13.892"/>
</kw>
<msg timestamp="20250304 04:13:13.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:13.871" endtime="20250304 04:13:13.892"/>
</kw>
<status status="PASS" starttime="20250304 04:13:13.871" endtime="20250304 04:13:13.892"/>
</kw>
<status status="PASS" starttime="20250304 04:13:13.871" endtime="20250304 04:13:13.892"/>
</kw>
<status status="PASS" starttime="20250304 04:13:13.860" endtime="20250304 04:13:13.892"/>
</kw>
<status status="PASS" starttime="20250304 04:13:13.860" endtime="20250304 04:13:13.893"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:13.896" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:15.817" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:13:15.817" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:13:13.894" endtime="20250304 04:13:15.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:15.818" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:13:15.818" endtime="20250304 04:13:15.818"/>
</kw>
<msg timestamp="20250304 04:13:15.818" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:13:13.893" endtime="20250304 04:13:15.819"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:15.819" endtime="20250304 04:13:15.819"/>
</kw>
<msg timestamp="20250304 04:13:15.819" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:13:15.819" endtime="20250304 04:13:15.819"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:15.824" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:17.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:17.787" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:13:15.821" endtime="20250304 04:13:17.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:17.788" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:13:17.788" endtime="20250304 04:13:17.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:17.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:17.789" endtime="20250304 04:13:17.789"/>
</kw>
<status status="PASS" starttime="20250304 04:13:15.820" endtime="20250304 04:13:17.789"/>
</kw>
<msg timestamp="20250304 04:13:17.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:15.820" endtime="20250304 04:13:17.789"/>
</kw>
<status status="PASS" starttime="20250304 04:13:15.820" endtime="20250304 04:13:17.789"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:17.793" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:19.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:19.672" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=76345ad0ab5d276b5df9015c781ff37954faff29983e66ce5dde1603216a3281</msg>
<status status="PASS" starttime="20250304 04:13:17.791" endtime="20250304 04:13:19.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:19.673" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=76345ad0ab5d276b5df9015c781ff37954faff29983e66ce5dde1603216a3281</msg>
<status status="PASS" starttime="20250304 04:13:19.672" endtime="20250304 04:13:19.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:19.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:19.673" endtime="20250304 04:13:19.673"/>
</kw>
<status status="PASS" starttime="20250304 04:13:17.790" endtime="20250304 04:13:19.674"/>
</kw>
<msg timestamp="20250304 04:13:19.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:17.790" endtime="20250304 04:13:19.674"/>
</kw>
<msg timestamp="20250304 04:13:19.674" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=76345ad0ab5d276b5df9015c781ff37954faff29983e66ce5dde1603216a3281</msg>
<status status="PASS" starttime="20250304 04:13:17.789" endtime="20250304 04:13:19.674"/>
</kw>
<status status="PASS" starttime="20250304 04:13:15.820" endtime="20250304 04:13:19.674"/>
</branch>
<status status="PASS" starttime="20250304 04:13:15.819" endtime="20250304 04:13:19.674"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:13:19.675" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:13:19.674" endtime="20250304 04:13:19.675"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:13:19.675" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:13:19.675" endtime="20250304 04:13:19.675"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:13:19.676" level="INFO">${secret} = ['76345ad0ab5d276b5df9015c781ff37954faff29983e66ce5dde1603216a3281']</msg>
<status status="PASS" starttime="20250304 04:13:19.675" endtime="20250304 04:13:19.676"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:13:19.677" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:19.676" endtime="20250304 04:13:19.677"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:13:19.677" level="INFO">${secret} = 76345ad0ab5d276b5df9015c781ff37954faff29983e66ce5dde1603216a3281</msg>
<status status="PASS" starttime="20250304 04:13:19.677" endtime="20250304 04:13:19.677"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:19.681" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:20.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:20.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:19.678" endtime="20250304 04:13:20.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:20.047" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:20.047" endtime="20250304 04:13:20.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:20.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:20.047" endtime="20250304 04:13:20.048"/>
</kw>
<status status="PASS" starttime="20250304 04:13:19.678" endtime="20250304 04:13:20.048"/>
</kw>
<msg timestamp="20250304 04:13:20.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:19.678" endtime="20250304 04:13:20.048"/>
</kw>
<status status="PASS" starttime="20250304 04:13:19.677" endtime="20250304 04:13:20.048"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:20.051" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:20.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:20.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:20.049" endtime="20250304 04:13:20.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:20.416" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:20.415" endtime="20250304 04:13:20.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:20.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:20.416" endtime="20250304 04:13:20.417"/>
</kw>
<status status="PASS" starttime="20250304 04:13:20.049" endtime="20250304 04:13:20.417"/>
</kw>
<msg timestamp="20250304 04:13:20.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:20.049" endtime="20250304 04:13:20.417"/>
</kw>
<status status="PASS" starttime="20250304 04:13:20.048" endtime="20250304 04:13:20.417"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:20.420" level="INFO">Running command 'aws configure set aws_secret_access_key 76345ad0ab5d276b5df9015c781ff37954faff29983e66ce5dde1603216a3281 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:20.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:20.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:20.418" endtime="20250304 04:13:20.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:20.821" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:20.820" endtime="20250304 04:13:20.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:20.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:20.821" endtime="20250304 04:13:20.821"/>
</kw>
<status status="PASS" starttime="20250304 04:13:20.418" endtime="20250304 04:13:20.821"/>
</kw>
<msg timestamp="20250304 04:13:20.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:20.417" endtime="20250304 04:13:20.821"/>
</kw>
<status status="PASS" starttime="20250304 04:13:20.417" endtime="20250304 04:13:20.821"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:20.825" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:21.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:21.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:20.822" endtime="20250304 04:13:21.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:21.204" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:21.204" endtime="20250304 04:13:21.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:21.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:21.204" endtime="20250304 04:13:21.205"/>
</kw>
<status status="PASS" starttime="20250304 04:13:20.822" endtime="20250304 04:13:21.205"/>
</kw>
<msg timestamp="20250304 04:13:21.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:20.822" endtime="20250304 04:13:21.205"/>
</kw>
<status status="PASS" starttime="20250304 04:13:20.822" endtime="20250304 04:13:21.205"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:21.209" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:21.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:21.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:21.206" endtime="20250304 04:13:21.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:21.584" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:21.583" endtime="20250304 04:13:21.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:21.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:21.584" endtime="20250304 04:13:21.585"/>
</kw>
<status status="PASS" starttime="20250304 04:13:21.206" endtime="20250304 04:13:21.585"/>
</kw>
<msg timestamp="20250304 04:13:21.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:21.206" endtime="20250304 04:13:21.585"/>
</kw>
<status status="PASS" starttime="20250304 04:13:21.205" endtime="20250304 04:13:21.585"/>
</kw>
<status status="PASS" starttime="20250304 04:13:13.893" endtime="20250304 04:13:21.585"/>
</kw>
<status status="PASS" starttime="20250304 04:13:13.893" endtime="20250304 04:13:21.585"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:13:21.585" endtime="20250304 04:13:21.585"/>
</kw>
<status status="PASS" starttime="20250304 04:13:13.860" endtime="20250304 04:13:21.585"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:13:21.586" level="INFO">${randStr} = 3042557505</msg>
<status status="PASS" starttime="20250304 04:13:21.586" endtime="20250304 04:13:21.586"/>
</kw>
<msg timestamp="20250304 04:13:21.586" level="INFO">${random} = ozone-test-3042557505</msg>
<status status="PASS" starttime="20250304 04:13:21.586" endtime="20250304 04:13:21.586"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:21.590" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-3042557505 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:22.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:22.196" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3042557505"
}</msg>
<status status="PASS" starttime="20250304 04:13:21.588" endtime="20250304 04:13:22.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:22.197" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3042557505"
}</msg>
<status status="PASS" starttime="20250304 04:13:22.196" endtime="20250304 04:13:22.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:22.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:22.197" endtime="20250304 04:13:22.198"/>
</kw>
<status status="PASS" starttime="20250304 04:13:21.588" endtime="20250304 04:13:22.198"/>
</kw>
<msg timestamp="20250304 04:13:22.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:21.587" endtime="20250304 04:13:22.198"/>
</kw>
<msg timestamp="20250304 04:13:22.198" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3042557505"
}</msg>
<status status="PASS" starttime="20250304 04:13:21.587" endtime="20250304 04:13:22.198"/>
</kw>
<msg timestamp="20250304 04:13:22.199" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3042557505"
}</msg>
<status status="PASS" starttime="20250304 04:13:21.587" endtime="20250304 04:13:22.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:22.199" endtime="20250304 04:13:22.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:22.199" endtime="20250304 04:13:22.199"/>
</kw>
<msg timestamp="20250304 04:13:22.200" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20250304 04:13:21.587" endtime="20250304 04:13:22.200"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250304 04:13:22.200" endtime="20250304 04:13:22.200"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:13.859" endtime="20250304 04:13:22.200"/>
</test>
<test id="s1-s6-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:22.205" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:13:22.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:22.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:22.202" endtime="20250304 04:13:22.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:22.208" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:22.208" endtime="20250304 04:13:22.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:22.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:22.209" endtime="20250304 04:13:22.209"/>
</kw>
<status status="PASS" starttime="20250304 04:13:22.201" endtime="20250304 04:13:22.209"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:22.213" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:23.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:23.009" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20250304 04:13:22.211" endtime="20250304 04:13:23.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:23.010" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20250304 04:13:23.009" endtime="20250304 04:13:23.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:23.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:23.010" endtime="20250304 04:13:23.011"/>
</kw>
<msg timestamp="20250304 04:13:23.011" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20250304 04:13:22.210" endtime="20250304 04:13:23.011"/>
</kw>
<msg timestamp="20250304 04:13:23.011" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20250304 04:13:22.210" endtime="20250304 04:13:23.011"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:23.011" endtime="20250304 04:13:23.011"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:23.014" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:23.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:23.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:23.012" endtime="20250304 04:13:23.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:23.019" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:23.018" endtime="20250304 04:13:23.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:23.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:23.019" endtime="20250304 04:13:23.019"/>
</kw>
<status status="PASS" starttime="20250304 04:13:23.011" endtime="20250304 04:13:23.019"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:22.201" endtime="20250304 04:13:23.019"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20250304 04:13:05.967" endtime="20250304 04:13:23.020"/>
</suite>
<suite id="s1-s7" name="1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-generate-new1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:13:23.735" endtime="20250304 04:13:23.735"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:23.738" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:23.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:23.742" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:13:23.736" endtime="20250304 04:13:23.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:23.743" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:13:23.742" endtime="20250304 04:13:23.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:23.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:23.743" endtime="20250304 04:13:23.743"/>
</kw>
<status status="PASS" starttime="20250304 04:13:23.735" endtime="20250304 04:13:23.743"/>
</kw>
<msg timestamp="20250304 04:13:23.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:23.735" endtime="20250304 04:13:23.744"/>
</kw>
<msg timestamp="20250304 04:13:23.744" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:13:23.735" endtime="20250304 04:13:23.744"/>
</kw>
<msg timestamp="20250304 04:13:23.744" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:23.735" endtime="20250304 04:13:23.744"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:13:23.744" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:23.744" endtime="20250304 04:13:23.744"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:23.748" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:23.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:23.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:23.746" endtime="20250304 04:13:23.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:23.776" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:23.776" endtime="20250304 04:13:23.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:23.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:23.776" endtime="20250304 04:13:23.777"/>
</kw>
<status status="PASS" starttime="20250304 04:13:23.745" endtime="20250304 04:13:23.777"/>
</kw>
<msg timestamp="20250304 04:13:23.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:23.745" endtime="20250304 04:13:23.777"/>
</kw>
<status status="PASS" starttime="20250304 04:13:23.745" endtime="20250304 04:13:23.777"/>
</kw>
<status status="PASS" starttime="20250304 04:13:23.745" endtime="20250304 04:13:23.777"/>
</kw>
<status status="PASS" starttime="20250304 04:13:23.734" endtime="20250304 04:13:23.777"/>
</kw>
<status status="PASS" starttime="20250304 04:13:23.734" endtime="20250304 04:13:23.777"/>
</kw>
<test id="s1-s7-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:23.781" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:25.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:25.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:23.779" endtime="20250304 04:13:25.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:25.878" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:25.878" endtime="20250304 04:13:25.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:25.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:25.878" endtime="20250304 04:13:25.879"/>
</kw>
<status status="PASS" starttime="20250304 04:13:23.778" endtime="20250304 04:13:25.879"/>
</kw>
<msg timestamp="20250304 04:13:25.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:23.778" endtime="20250304 04:13:25.879"/>
</kw>
<msg timestamp="20250304 04:13:25.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:23.778" endtime="20250304 04:13:25.880"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:25.880" endtime="20250304 04:13:25.880"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:25.883" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:28.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:28.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:25.881" endtime="20250304 04:13:28.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:28.002" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:28.002" endtime="20250304 04:13:28.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:28.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:28.002" endtime="20250304 04:13:28.003"/>
</kw>
<status status="PASS" starttime="20250304 04:13:25.881" endtime="20250304 04:13:28.003"/>
</kw>
<msg timestamp="20250304 04:13:28.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:25.880" endtime="20250304 04:13:28.003"/>
</kw>
<msg timestamp="20250304 04:13:28.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:25.880" endtime="20250304 04:13:28.003"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:28.003" endtime="20250304 04:13:28.004"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:23.777" endtime="20250304 04:13:28.004"/>
</test>
<test id="s1-s7-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:28.007" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:13:28.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:28.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:28.005" endtime="20250304 04:13:28.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:28.010" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:28.009" endtime="20250304 04:13:28.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:28.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:28.010" endtime="20250304 04:13:28.010"/>
</kw>
<status status="PASS" starttime="20250304 04:13:28.005" endtime="20250304 04:13:28.011"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:28.014" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:31.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:31.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:28.012" endtime="20250304 04:13:31.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:31.611" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:31.610" endtime="20250304 04:13:31.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:31.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:31.611" endtime="20250304 04:13:31.611"/>
</kw>
<status status="PASS" starttime="20250304 04:13:28.011" endtime="20250304 04:13:31.612"/>
</kw>
<msg timestamp="20250304 04:13:31.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:28.011" endtime="20250304 04:13:31.612"/>
</kw>
<msg timestamp="20250304 04:13:31.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:28.011" endtime="20250304 04:13:31.612"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:31.612" endtime="20250304 04:13:31.613"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:31.618" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:31.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:31.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:31.614" endtime="20250304 04:13:31.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:31.627" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:31.626" endtime="20250304 04:13:31.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:31.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:31.628" endtime="20250304 04:13:31.629"/>
</kw>
<status status="PASS" starttime="20250304 04:13:31.613" endtime="20250304 04:13:31.629"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:28.004" endtime="20250304 04:13:31.630"/>
</test>
<test id="s1-s7-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:31.644" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:33.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:33.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:31.635" endtime="20250304 04:13:33.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:33.783" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:33.782" endtime="20250304 04:13:33.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:33.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:33.783" endtime="20250304 04:13:33.783"/>
</kw>
<status status="PASS" starttime="20250304 04:13:31.633" endtime="20250304 04:13:33.783"/>
</kw>
<msg timestamp="20250304 04:13:33.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:31.633" endtime="20250304 04:13:33.783"/>
</kw>
<msg timestamp="20250304 04:13:33.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:31.632" endtime="20250304 04:13:33.784"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:33.784" endtime="20250304 04:13:33.784"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:31.631" endtime="20250304 04:13:33.784"/>
</test>
<test id="s1-s7-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:33.788" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:13:33.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:33.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:33.786" endtime="20250304 04:13:33.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:33.791" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:33.790" endtime="20250304 04:13:33.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:33.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:33.791" endtime="20250304 04:13:33.791"/>
</kw>
<status status="PASS" starttime="20250304 04:13:33.785" endtime="20250304 04:13:33.791"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:33.794" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:37.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:37.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:33.792" endtime="20250304 04:13:37.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:37.584" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:37.584" endtime="20250304 04:13:37.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:37.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:37.584" endtime="20250304 04:13:37.585"/>
</kw>
<status status="PASS" starttime="20250304 04:13:33.792" endtime="20250304 04:13:37.585"/>
</kw>
<msg timestamp="20250304 04:13:37.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:33.792" endtime="20250304 04:13:37.585"/>
</kw>
<msg timestamp="20250304 04:13:37.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:33.791" endtime="20250304 04:13:37.585"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:37.585" endtime="20250304 04:13:37.585"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:37.588" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:37.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:37.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:37.586" endtime="20250304 04:13:37.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:37.593" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:37.592" endtime="20250304 04:13:37.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:37.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:37.593" endtime="20250304 04:13:37.593"/>
</kw>
<status status="PASS" starttime="20250304 04:13:37.586" endtime="20250304 04:13:37.593"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:33.785" endtime="20250304 04:13:37.594"/>
</test>
<test id="s1-s7-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:13:37.595" endtime="20250304 04:13:37.596"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:37.599" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:37.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:37.603" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:13:37.597" endtime="20250304 04:13:37.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:37.603" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:13:37.603" endtime="20250304 04:13:37.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:37.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:37.603" endtime="20250304 04:13:37.604"/>
</kw>
<status status="PASS" starttime="20250304 04:13:37.597" endtime="20250304 04:13:37.604"/>
</kw>
<msg timestamp="20250304 04:13:37.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:37.596" endtime="20250304 04:13:37.604"/>
</kw>
<msg timestamp="20250304 04:13:37.604" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:13:37.596" endtime="20250304 04:13:37.604"/>
</kw>
<msg timestamp="20250304 04:13:37.604" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:37.596" endtime="20250304 04:13:37.604"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:13:37.605" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:37.605" endtime="20250304 04:13:37.605"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:37.608" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:37.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:37.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:37.606" endtime="20250304 04:13:37.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:37.624" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:37.623" endtime="20250304 04:13:37.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:37.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:37.624" endtime="20250304 04:13:37.624"/>
</kw>
<status status="PASS" starttime="20250304 04:13:37.606" endtime="20250304 04:13:37.624"/>
</kw>
<msg timestamp="20250304 04:13:37.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:37.606" endtime="20250304 04:13:37.625"/>
</kw>
<status status="PASS" starttime="20250304 04:13:37.605" endtime="20250304 04:13:37.625"/>
</kw>
<status status="PASS" starttime="20250304 04:13:37.605" endtime="20250304 04:13:37.625"/>
</kw>
<status status="PASS" starttime="20250304 04:13:37.595" endtime="20250304 04:13:37.625"/>
</kw>
<status status="PASS" starttime="20250304 04:13:37.595" endtime="20250304 04:13:37.625"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:37.628" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:39.587" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:13:39.588" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:13:37.626" endtime="20250304 04:13:39.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:39.588" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:13:39.588" endtime="20250304 04:13:39.589"/>
</kw>
<msg timestamp="20250304 04:13:39.589" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:13:37.626" endtime="20250304 04:13:39.589"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:39.589" endtime="20250304 04:13:39.590"/>
</kw>
<msg timestamp="20250304 04:13:39.590" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:13:39.589" endtime="20250304 04:13:39.590"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:39.593" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:41.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:41.559" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:13:39.591" endtime="20250304 04:13:41.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:41.560" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:13:41.559" endtime="20250304 04:13:41.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:41.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:41.561" endtime="20250304 04:13:41.561"/>
</kw>
<status status="PASS" starttime="20250304 04:13:39.591" endtime="20250304 04:13:41.561"/>
</kw>
<msg timestamp="20250304 04:13:41.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:39.590" endtime="20250304 04:13:41.561"/>
</kw>
<status status="PASS" starttime="20250304 04:13:39.590" endtime="20250304 04:13:41.562"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:41.565" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:43.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:43.472" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=9e9cc7780c67763004094a815bde613142a35fd8a83996549fa212bb6ecd3f87</msg>
<status status="PASS" starttime="20250304 04:13:41.563" endtime="20250304 04:13:43.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:43.473" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=9e9cc7780c67763004094a815bde613142a35fd8a83996549fa212bb6ecd3f87</msg>
<status status="PASS" starttime="20250304 04:13:43.473" endtime="20250304 04:13:43.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:43.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:43.474" endtime="20250304 04:13:43.474"/>
</kw>
<status status="PASS" starttime="20250304 04:13:41.562" endtime="20250304 04:13:43.474"/>
</kw>
<msg timestamp="20250304 04:13:43.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:41.562" endtime="20250304 04:13:43.474"/>
</kw>
<msg timestamp="20250304 04:13:43.475" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=9e9cc7780c67763004094a815bde613142a35fd8a83996549fa212bb6ecd3f87</msg>
<status status="PASS" starttime="20250304 04:13:41.562" endtime="20250304 04:13:43.475"/>
</kw>
<status status="PASS" starttime="20250304 04:13:39.590" endtime="20250304 04:13:43.475"/>
</branch>
<status status="PASS" starttime="20250304 04:13:39.590" endtime="20250304 04:13:43.475"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:13:43.475" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:13:43.475" endtime="20250304 04:13:43.475"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:13:43.476" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:13:43.476" endtime="20250304 04:13:43.476"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:13:43.476" level="INFO">${secret} = ['9e9cc7780c67763004094a815bde613142a35fd8a83996549fa212bb6ecd3f87']</msg>
<status status="PASS" starttime="20250304 04:13:43.476" endtime="20250304 04:13:43.476"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:13:43.477" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:43.477" endtime="20250304 04:13:43.477"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:13:43.478" level="INFO">${secret} = 9e9cc7780c67763004094a815bde613142a35fd8a83996549fa212bb6ecd3f87</msg>
<status status="PASS" starttime="20250304 04:13:43.478" endtime="20250304 04:13:43.478"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:43.482" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:43.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:43.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:43.479" endtime="20250304 04:13:43.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:43.895" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:43.895" endtime="20250304 04:13:43.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:43.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:43.895" endtime="20250304 04:13:43.896"/>
</kw>
<status status="PASS" starttime="20250304 04:13:43.479" endtime="20250304 04:13:43.896"/>
</kw>
<msg timestamp="20250304 04:13:43.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:43.479" endtime="20250304 04:13:43.896"/>
</kw>
<status status="PASS" starttime="20250304 04:13:43.478" endtime="20250304 04:13:43.896"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:43.899" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:44.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:44.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:43.897" endtime="20250304 04:13:44.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:44.263" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:44.263" endtime="20250304 04:13:44.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:44.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:44.263" endtime="20250304 04:13:44.264"/>
</kw>
<status status="PASS" starttime="20250304 04:13:43.897" endtime="20250304 04:13:44.264"/>
</kw>
<msg timestamp="20250304 04:13:44.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:43.897" endtime="20250304 04:13:44.264"/>
</kw>
<status status="PASS" starttime="20250304 04:13:43.896" endtime="20250304 04:13:44.264"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:44.268" level="INFO">Running command 'aws configure set aws_secret_access_key 9e9cc7780c67763004094a815bde613142a35fd8a83996549fa212bb6ecd3f87 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:44.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:44.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:44.265" endtime="20250304 04:13:44.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:44.627" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:44.626" endtime="20250304 04:13:44.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:44.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:44.627" endtime="20250304 04:13:44.627"/>
</kw>
<status status="PASS" starttime="20250304 04:13:44.265" endtime="20250304 04:13:44.627"/>
</kw>
<msg timestamp="20250304 04:13:44.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:44.265" endtime="20250304 04:13:44.628"/>
</kw>
<status status="PASS" starttime="20250304 04:13:44.264" endtime="20250304 04:13:44.628"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:44.631" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:44.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:44.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:44.628" endtime="20250304 04:13:44.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:44.994" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:44.993" endtime="20250304 04:13:44.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:44.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:44.994" endtime="20250304 04:13:44.995"/>
</kw>
<status status="PASS" starttime="20250304 04:13:44.628" endtime="20250304 04:13:44.995"/>
</kw>
<msg timestamp="20250304 04:13:44.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:44.628" endtime="20250304 04:13:44.995"/>
</kw>
<status status="PASS" starttime="20250304 04:13:44.628" endtime="20250304 04:13:44.995"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:44.998" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:45.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:45.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:44.996" endtime="20250304 04:13:45.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:45.397" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:45.396" endtime="20250304 04:13:45.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:45.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:45.397" endtime="20250304 04:13:45.398"/>
</kw>
<status status="PASS" starttime="20250304 04:13:44.996" endtime="20250304 04:13:45.398"/>
</kw>
<msg timestamp="20250304 04:13:45.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:44.995" endtime="20250304 04:13:45.398"/>
</kw>
<status status="PASS" starttime="20250304 04:13:44.995" endtime="20250304 04:13:45.398"/>
</kw>
<status status="PASS" starttime="20250304 04:13:37.625" endtime="20250304 04:13:45.398"/>
</kw>
<status status="PASS" starttime="20250304 04:13:37.625" endtime="20250304 04:13:45.398"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:13:45.398" endtime="20250304 04:13:45.398"/>
</kw>
<status status="PASS" starttime="20250304 04:13:37.594" endtime="20250304 04:13:45.399"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:13:45.399" level="INFO">${randStr} = 5453779880</msg>
<status status="PASS" starttime="20250304 04:13:45.399" endtime="20250304 04:13:45.399"/>
</kw>
<msg timestamp="20250304 04:13:45.399" level="INFO">${random} = ozone-test-5453779880</msg>
<status status="PASS" starttime="20250304 04:13:45.399" endtime="20250304 04:13:45.400"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:45.403" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket-ozone-test-5453779880 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:45.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:45.945" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-5453779880"
}</msg>
<status status="PASS" starttime="20250304 04:13:45.401" endtime="20250304 04:13:45.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:45.946" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket-ozone-test-5453779880"
}</msg>
<status status="PASS" starttime="20250304 04:13:45.945" endtime="20250304 04:13:45.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:45.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:45.946" endtime="20250304 04:13:45.946"/>
</kw>
<status status="PASS" starttime="20250304 04:13:45.401" endtime="20250304 04:13:45.946"/>
</kw>
<msg timestamp="20250304 04:13:45.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:45.401" endtime="20250304 04:13:45.947"/>
</kw>
<msg timestamp="20250304 04:13:45.947" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-5453779880"
}</msg>
<status status="PASS" starttime="20250304 04:13:45.400" endtime="20250304 04:13:45.947"/>
</kw>
<msg timestamp="20250304 04:13:45.947" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-5453779880"
}</msg>
<status status="PASS" starttime="20250304 04:13:45.400" endtime="20250304 04:13:45.947"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:45.947" endtime="20250304 04:13:45.947"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:45.947" endtime="20250304 04:13:45.948"/>
</kw>
<msg timestamp="20250304 04:13:45.948" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20250304 04:13:45.400" endtime="20250304 04:13:45.948"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250304 04:13:45.948" endtime="20250304 04:13:45.948"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:37.594" endtime="20250304 04:13:45.948"/>
</test>
<test id="s1-s7-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:45.953" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:13:45.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:45.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:45.949" endtime="20250304 04:13:45.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:45.955" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:45.955" endtime="20250304 04:13:45.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:45.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:45.955" endtime="20250304 04:13:45.956"/>
</kw>
<status status="PASS" starttime="20250304 04:13:45.949" endtime="20250304 04:13:45.956"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:45.959" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:46.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:46.605" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20250304 04:13:45.957" endtime="20250304 04:13:46.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:46.606" level="INFO">{
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20250304 04:13:46.605" endtime="20250304 04:13:46.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:46.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:46.606" endtime="20250304 04:13:46.606"/>
</kw>
<msg timestamp="20250304 04:13:46.607" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20250304 04:13:45.956" endtime="20250304 04:13:46.607"/>
</kw>
<msg timestamp="20250304 04:13:46.607" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20250304 04:13:45.956" endtime="20250304 04:13:46.607"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:46.607" endtime="20250304 04:13:46.607"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:46.610" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:46.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:46.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:46.608" endtime="20250304 04:13:46.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:46.615" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:46.615" endtime="20250304 04:13:46.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:46.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:46.615" endtime="20250304 04:13:46.616"/>
</kw>
<status status="PASS" starttime="20250304 04:13:46.607" endtime="20250304 04:13:46.616"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:45.949" endtime="20250304 04:13:46.616"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20250304 04:13:23.676" endtime="20250304 04:13:46.617"/>
</suite>
<suite id="s1-s8" name="1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-validate-new1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:13:47.303" endtime="20250304 04:13:47.304"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:47.307" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:47.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:47.311" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:13:47.305" endtime="20250304 04:13:47.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:47.311" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:13:47.311" endtime="20250304 04:13:47.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:47.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:47.311" endtime="20250304 04:13:47.312"/>
</kw>
<status status="PASS" starttime="20250304 04:13:47.304" endtime="20250304 04:13:47.312"/>
</kw>
<msg timestamp="20250304 04:13:47.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:47.304" endtime="20250304 04:13:47.312"/>
</kw>
<msg timestamp="20250304 04:13:47.312" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:13:47.304" endtime="20250304 04:13:47.312"/>
</kw>
<msg timestamp="20250304 04:13:47.312" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:47.304" endtime="20250304 04:13:47.312"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:13:47.313" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:47.312" endtime="20250304 04:13:47.313"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:47.316" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:47.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:47.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:47.314" endtime="20250304 04:13:47.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:47.340" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:47.340" endtime="20250304 04:13:47.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:47.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:47.340" endtime="20250304 04:13:47.341"/>
</kw>
<status status="PASS" starttime="20250304 04:13:47.313" endtime="20250304 04:13:47.341"/>
</kw>
<msg timestamp="20250304 04:13:47.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:47.313" endtime="20250304 04:13:47.341"/>
</kw>
<status status="PASS" starttime="20250304 04:13:47.313" endtime="20250304 04:13:47.341"/>
</kw>
<status status="PASS" starttime="20250304 04:13:47.313" endtime="20250304 04:13:47.348"/>
</kw>
<status status="PASS" starttime="20250304 04:13:47.303" endtime="20250304 04:13:47.348"/>
</kw>
<status status="PASS" starttime="20250304 04:13:47.303" endtime="20250304 04:13:47.348"/>
</kw>
<test id="s1-s8-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:13:47.353" level="INFO">${random} = 37274</msg>
<status status="PASS" starttime="20250304 04:13:47.350" endtime="20250304 04:13:47.353"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:47.364" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-37274 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:50.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:50.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:47.356" endtime="20250304 04:13:50.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:50.713" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:50.712" endtime="20250304 04:13:50.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:50.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:50.713" endtime="20250304 04:13:50.714"/>
</kw>
<status status="PASS" starttime="20250304 04:13:47.356" endtime="20250304 04:13:50.714"/>
</kw>
<msg timestamp="20250304 04:13:50.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:47.355" endtime="20250304 04:13:50.714"/>
</kw>
<msg timestamp="20250304 04:13:50.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:47.353" endtime="20250304 04:13:50.714"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:50.714" endtime="20250304 04:13:50.714"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:50.717" level="INFO">Running command 'cat /tmp/key-37274 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:50.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:50.721" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:13:50.715" endtime="20250304 04:13:50.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:50.722" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:13:50.722" endtime="20250304 04:13:50.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:50.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:50.722" endtime="20250304 04:13:50.723"/>
</kw>
<msg timestamp="20250304 04:13:50.723" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:13:50.714" endtime="20250304 04:13:50.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:50.723" endtime="20250304 04:13:50.723"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:50.726" level="INFO">Running command 'rm /tmp/key-37274 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:50.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:50.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:50.724" endtime="20250304 04:13:50.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:50.730" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:50.730" endtime="20250304 04:13:50.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:50.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:50.730" endtime="20250304 04:13:50.731"/>
</kw>
<status status="PASS" starttime="20250304 04:13:50.723" endtime="20250304 04:13:50.731"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:47.348" endtime="20250304 04:13:50.731"/>
</test>
<test id="s1-s8-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:13:50.733" endtime="20250304 04:13:50.733"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:50.736" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:50.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:50.740" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:13:50.734" endtime="20250304 04:13:50.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:50.741" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:13:50.740" endtime="20250304 04:13:50.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:50.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:50.741" endtime="20250304 04:13:50.741"/>
</kw>
<status status="PASS" starttime="20250304 04:13:50.734" endtime="20250304 04:13:50.741"/>
</kw>
<msg timestamp="20250304 04:13:50.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:50.734" endtime="20250304 04:13:50.741"/>
</kw>
<msg timestamp="20250304 04:13:50.741" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:13:50.733" endtime="20250304 04:13:50.741"/>
</kw>
<msg timestamp="20250304 04:13:50.742" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:50.733" endtime="20250304 04:13:50.742"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:13:50.742" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:50.742" endtime="20250304 04:13:50.742"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:50.745" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:50.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:50.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:50.744" endtime="20250304 04:13:50.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:50.762" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:50.762" endtime="20250304 04:13:50.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:50.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:50.762" endtime="20250304 04:13:50.763"/>
</kw>
<status status="PASS" starttime="20250304 04:13:50.743" endtime="20250304 04:13:50.763"/>
</kw>
<msg timestamp="20250304 04:13:50.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:50.743" endtime="20250304 04:13:50.763"/>
</kw>
<status status="PASS" starttime="20250304 04:13:50.743" endtime="20250304 04:13:50.763"/>
</kw>
<status status="PASS" starttime="20250304 04:13:50.742" endtime="20250304 04:13:50.763"/>
</kw>
<status status="PASS" starttime="20250304 04:13:50.733" endtime="20250304 04:13:50.763"/>
</kw>
<status status="PASS" starttime="20250304 04:13:50.732" endtime="20250304 04:13:50.763"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:50.766" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:52.616" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:13:52.616" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:13:50.764" endtime="20250304 04:13:52.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:52.617" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:13:52.616" endtime="20250304 04:13:52.617"/>
</kw>
<msg timestamp="20250304 04:13:52.617" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:13:50.764" endtime="20250304 04:13:52.617"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:52.617" endtime="20250304 04:13:52.618"/>
</kw>
<msg timestamp="20250304 04:13:52.618" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:13:52.617" endtime="20250304 04:13:52.618"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:52.622" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:54.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:54.506" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:13:52.619" endtime="20250304 04:13:54.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:54.507" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:13:54.507" endtime="20250304 04:13:54.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:54.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:54.508" endtime="20250304 04:13:54.508"/>
</kw>
<status status="PASS" starttime="20250304 04:13:52.619" endtime="20250304 04:13:54.508"/>
</kw>
<msg timestamp="20250304 04:13:54.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:52.619" endtime="20250304 04:13:54.508"/>
</kw>
<status status="PASS" starttime="20250304 04:13:52.618" endtime="20250304 04:13:54.508"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:54.512" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:56.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:56.429" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=a7d931d765f7cf28326426c808d668436dd41a9af58568b3f60499a4d2f7592f</msg>
<status status="PASS" starttime="20250304 04:13:54.509" endtime="20250304 04:13:56.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:56.430" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=a7d931d765f7cf28326426c808d668436dd41a9af58568b3f60499a4d2f7592f</msg>
<status status="PASS" starttime="20250304 04:13:56.429" endtime="20250304 04:13:56.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:56.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:56.430" endtime="20250304 04:13:56.431"/>
</kw>
<status status="PASS" starttime="20250304 04:13:54.509" endtime="20250304 04:13:56.431"/>
</kw>
<msg timestamp="20250304 04:13:56.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:54.509" endtime="20250304 04:13:56.431"/>
</kw>
<msg timestamp="20250304 04:13:56.431" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=a7d931d765f7cf28326426c808d668436dd41a9af58568b3f60499a4d2f7592f</msg>
<status status="PASS" starttime="20250304 04:13:54.508" endtime="20250304 04:13:56.431"/>
</kw>
<status status="PASS" starttime="20250304 04:13:52.618" endtime="20250304 04:13:56.431"/>
</branch>
<status status="PASS" starttime="20250304 04:13:52.618" endtime="20250304 04:13:56.431"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:13:56.432" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:13:56.431" endtime="20250304 04:13:56.432"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:13:56.432" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:13:56.432" endtime="20250304 04:13:56.432"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:13:56.433" level="INFO">${secret} = ['a7d931d765f7cf28326426c808d668436dd41a9af58568b3f60499a4d2f7592f']</msg>
<status status="PASS" starttime="20250304 04:13:56.432" endtime="20250304 04:13:56.433"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:13:56.434" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:56.433" endtime="20250304 04:13:56.434"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:13:56.434" level="INFO">${secret} = a7d931d765f7cf28326426c808d668436dd41a9af58568b3f60499a4d2f7592f</msg>
<status status="PASS" starttime="20250304 04:13:56.434" endtime="20250304 04:13:56.434"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:56.438" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:56.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:56.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:56.436" endtime="20250304 04:13:56.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:56.820" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:56.819" endtime="20250304 04:13:56.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:56.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:56.820" endtime="20250304 04:13:56.820"/>
</kw>
<status status="PASS" starttime="20250304 04:13:56.435" endtime="20250304 04:13:56.820"/>
</kw>
<msg timestamp="20250304 04:13:56.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:56.435" endtime="20250304 04:13:56.820"/>
</kw>
<status status="PASS" starttime="20250304 04:13:56.434" endtime="20250304 04:13:56.821"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:56.824" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:57.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:57.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:56.821" endtime="20250304 04:13:57.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:57.183" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:57.183" endtime="20250304 04:13:57.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:57.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:57.184" endtime="20250304 04:13:57.184"/>
</kw>
<status status="PASS" starttime="20250304 04:13:56.821" endtime="20250304 04:13:57.184"/>
</kw>
<msg timestamp="20250304 04:13:57.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:56.821" endtime="20250304 04:13:57.184"/>
</kw>
<status status="PASS" starttime="20250304 04:13:56.821" endtime="20250304 04:13:57.184"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:57.188" level="INFO">Running command 'aws configure set aws_secret_access_key a7d931d765f7cf28326426c808d668436dd41a9af58568b3f60499a4d2f7592f 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:57.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:57.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:57.185" endtime="20250304 04:13:57.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:57.556" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:57.556" endtime="20250304 04:13:57.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:57.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:57.557" endtime="20250304 04:13:57.557"/>
</kw>
<status status="PASS" starttime="20250304 04:13:57.185" endtime="20250304 04:13:57.557"/>
</kw>
<msg timestamp="20250304 04:13:57.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:57.185" endtime="20250304 04:13:57.557"/>
</kw>
<status status="PASS" starttime="20250304 04:13:57.184" endtime="20250304 04:13:57.557"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:57.561" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:57.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:57.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:57.558" endtime="20250304 04:13:57.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:57.930" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:57.930" endtime="20250304 04:13:57.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:57.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:57.930" endtime="20250304 04:13:57.931"/>
</kw>
<status status="PASS" starttime="20250304 04:13:57.558" endtime="20250304 04:13:57.931"/>
</kw>
<msg timestamp="20250304 04:13:57.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:57.558" endtime="20250304 04:13:57.931"/>
</kw>
<status status="PASS" starttime="20250304 04:13:57.558" endtime="20250304 04:13:57.931"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:57.935" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:58.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:58.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:57.932" endtime="20250304 04:13:58.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:58.307" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:58.306" endtime="20250304 04:13:58.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:58.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:58.307" endtime="20250304 04:13:58.307"/>
</kw>
<status status="PASS" starttime="20250304 04:13:57.932" endtime="20250304 04:13:58.308"/>
</kw>
<msg timestamp="20250304 04:13:58.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:57.932" endtime="20250304 04:13:58.308"/>
</kw>
<status status="PASS" starttime="20250304 04:13:57.931" endtime="20250304 04:13:58.308"/>
</kw>
<status status="PASS" starttime="20250304 04:13:50.764" endtime="20250304 04:13:58.308"/>
</kw>
<status status="PASS" starttime="20250304 04:13:50.763" endtime="20250304 04:13:58.308"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:13:58.308" endtime="20250304 04:13:58.308"/>
</kw>
<status status="PASS" starttime="20250304 04:13:50.732" endtime="20250304 04:13:58.308"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:58.312" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:58.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:58.905" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:13:58.309" endtime="20250304 04:13:58.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:58.905" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:13:58 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:13:58 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:13:58.905" endtime="20250304 04:13:58.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:58.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:58.906" endtime="20250304 04:13:58.906"/>
</kw>
<msg timestamp="20250304 04:13:58.906" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:13:58.309" endtime="20250304 04:13:58.906"/>
</kw>
<msg timestamp="20250304 04:13:58.906" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:13:58.308" endtime="20250304 04:13:58.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:58.907" endtime="20250304 04:13:58.907"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:58.912" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:58.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:58.916" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:13:58.908" endtime="20250304 04:13:58.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:58.917" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:13:58.916" endtime="20250304 04:13:58.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:58.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:58.917" endtime="20250304 04:13:58.917"/>
</kw>
<msg timestamp="20250304 04:13:58.917" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:13:58.907" endtime="20250304 04:13:58.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:13:58.917" endtime="20250304 04:13:58.918"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:58.920" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:58.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:58.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:58.918" endtime="20250304 04:13:58.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:58.924" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:58.924" endtime="20250304 04:13:58.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:58.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:58.925" endtime="20250304 04:13:58.925"/>
</kw>
<status status="PASS" starttime="20250304 04:13:58.918" endtime="20250304 04:13:58.925"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:50.731" endtime="20250304 04:13:58.925"/>
</test>
<test id="s1-s8-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:13:58.927" endtime="20250304 04:13:58.927"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:58.931" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:58.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:58.934" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:13:58.928" endtime="20250304 04:13:58.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:58.935" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:13:58.935" endtime="20250304 04:13:58.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:58.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:58.935" endtime="20250304 04:13:58.936"/>
</kw>
<status status="PASS" starttime="20250304 04:13:58.928" endtime="20250304 04:13:58.936"/>
</kw>
<msg timestamp="20250304 04:13:58.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:58.928" endtime="20250304 04:13:58.936"/>
</kw>
<msg timestamp="20250304 04:13:58.936" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:13:58.928" endtime="20250304 04:13:58.936"/>
</kw>
<msg timestamp="20250304 04:13:58.936" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:58.927" endtime="20250304 04:13:58.936"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:13:58.937" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:13:58.936" endtime="20250304 04:13:58.937"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:58.940" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:13:59.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:13:59.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:13:58.938" endtime="20250304 04:13:59.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:13:59.002" level="INFO"/>
<status status="PASS" starttime="20250304 04:13:59.002" endtime="20250304 04:13:59.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:13:59.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:13:59.002" endtime="20250304 04:13:59.003"/>
</kw>
<status status="PASS" starttime="20250304 04:13:58.938" endtime="20250304 04:13:59.003"/>
</kw>
<msg timestamp="20250304 04:13:59.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:13:58.938" endtime="20250304 04:13:59.003"/>
</kw>
<status status="PASS" starttime="20250304 04:13:58.937" endtime="20250304 04:13:59.003"/>
</kw>
<status status="PASS" starttime="20250304 04:13:58.937" endtime="20250304 04:13:59.003"/>
</kw>
<status status="PASS" starttime="20250304 04:13:58.927" endtime="20250304 04:13:59.003"/>
</kw>
<status status="PASS" starttime="20250304 04:13:58.926" endtime="20250304 04:13:59.003"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:13:59.007" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:00.945" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:14:00.945" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:13:59.004" endtime="20250304 04:14:00.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:00.946" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:14:00.946" endtime="20250304 04:14:00.946"/>
</kw>
<msg timestamp="20250304 04:14:00.946" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:13:59.004" endtime="20250304 04:14:00.947"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:14:00.947" endtime="20250304 04:14:00.947"/>
</kw>
<msg timestamp="20250304 04:14:00.947" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:14:00.947" endtime="20250304 04:14:00.947"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:14:00.951" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:02.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:14:02.812" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:14:00.948" endtime="20250304 04:14:02.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:02.813" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:14:02.813" endtime="20250304 04:14:02.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:14:02.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:14:02.814" endtime="20250304 04:14:02.814"/>
</kw>
<status status="PASS" starttime="20250304 04:14:00.948" endtime="20250304 04:14:02.814"/>
</kw>
<msg timestamp="20250304 04:14:02.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:14:00.948" endtime="20250304 04:14:02.814"/>
</kw>
<status status="PASS" starttime="20250304 04:14:00.948" endtime="20250304 04:14:02.814"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:14:02.818" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:04.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:14:04.710" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7cb15435a793e21cf1e45ce5251d12eeaddc0885619564f1ad0beb8f13053832</msg>
<status status="PASS" starttime="20250304 04:14:02.815" endtime="20250304 04:14:04.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:04.711" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7cb15435a793e21cf1e45ce5251d12eeaddc0885619564f1ad0beb8f13053832</msg>
<status status="PASS" starttime="20250304 04:14:04.710" endtime="20250304 04:14:04.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:14:04.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:14:04.711" endtime="20250304 04:14:04.711"/>
</kw>
<status status="PASS" starttime="20250304 04:14:02.815" endtime="20250304 04:14:04.711"/>
</kw>
<msg timestamp="20250304 04:14:04.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:14:02.815" endtime="20250304 04:14:04.712"/>
</kw>
<msg timestamp="20250304 04:14:04.712" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7cb15435a793e21cf1e45ce5251d12eeaddc0885619564f1ad0beb8f13053832</msg>
<status status="PASS" starttime="20250304 04:14:02.814" endtime="20250304 04:14:04.712"/>
</kw>
<status status="PASS" starttime="20250304 04:14:00.947" endtime="20250304 04:14:04.712"/>
</branch>
<status status="PASS" starttime="20250304 04:14:00.947" endtime="20250304 04:14:04.712"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:14:04.712" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:14:04.712" endtime="20250304 04:14:04.712"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:14:04.713" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:14:04.712" endtime="20250304 04:14:04.713"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:14:04.713" level="INFO">${secret} = ['7cb15435a793e21cf1e45ce5251d12eeaddc0885619564f1ad0beb8f13053832']</msg>
<status status="PASS" starttime="20250304 04:14:04.713" endtime="20250304 04:14:04.713"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:14:04.714" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:14:04.713" endtime="20250304 04:14:04.714"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:14:04.715" level="INFO">${secret} = 7cb15435a793e21cf1e45ce5251d12eeaddc0885619564f1ad0beb8f13053832</msg>
<status status="PASS" starttime="20250304 04:14:04.714" endtime="20250304 04:14:04.715"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:14:04.718" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:05.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:14:05.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:14:04.716" endtime="20250304 04:14:05.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:05.076" level="INFO"/>
<status status="PASS" starttime="20250304 04:14:05.075" endtime="20250304 04:14:05.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:14:05.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:14:05.076" endtime="20250304 04:14:05.076"/>
</kw>
<status status="PASS" starttime="20250304 04:14:04.715" endtime="20250304 04:14:05.076"/>
</kw>
<msg timestamp="20250304 04:14:05.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:14:04.715" endtime="20250304 04:14:05.076"/>
</kw>
<status status="PASS" starttime="20250304 04:14:04.715" endtime="20250304 04:14:05.077"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:14:05.080" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:05.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:14:05.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:14:05.078" endtime="20250304 04:14:05.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:05.497" level="INFO"/>
<status status="PASS" starttime="20250304 04:14:05.496" endtime="20250304 04:14:05.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:14:05.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:14:05.497" endtime="20250304 04:14:05.497"/>
</kw>
<status status="PASS" starttime="20250304 04:14:05.077" endtime="20250304 04:14:05.497"/>
</kw>
<msg timestamp="20250304 04:14:05.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:14:05.077" endtime="20250304 04:14:05.497"/>
</kw>
<status status="PASS" starttime="20250304 04:14:05.077" endtime="20250304 04:14:05.497"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:14:05.501" level="INFO">Running command 'aws configure set aws_secret_access_key 7cb15435a793e21cf1e45ce5251d12eeaddc0885619564f1ad0beb8f13053832 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:05.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:14:05.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:14:05.498" endtime="20250304 04:14:05.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:05.863" level="INFO"/>
<status status="PASS" starttime="20250304 04:14:05.862" endtime="20250304 04:14:05.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:14:05.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:14:05.863" endtime="20250304 04:14:05.863"/>
</kw>
<status status="PASS" starttime="20250304 04:14:05.498" endtime="20250304 04:14:05.864"/>
</kw>
<msg timestamp="20250304 04:14:05.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:14:05.498" endtime="20250304 04:14:05.864"/>
</kw>
<status status="PASS" starttime="20250304 04:14:05.498" endtime="20250304 04:14:05.864"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:14:05.867" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:06.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:14:06.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:14:05.865" endtime="20250304 04:14:06.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:06.233" level="INFO"/>
<status status="PASS" starttime="20250304 04:14:06.233" endtime="20250304 04:14:06.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:14:06.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:14:06.233" endtime="20250304 04:14:06.234"/>
</kw>
<status status="PASS" starttime="20250304 04:14:05.864" endtime="20250304 04:14:06.234"/>
</kw>
<msg timestamp="20250304 04:14:06.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:14:05.864" endtime="20250304 04:14:06.234"/>
</kw>
<status status="PASS" starttime="20250304 04:14:05.864" endtime="20250304 04:14:06.234"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:14:06.237" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:06.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:14:06.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:14:06.235" endtime="20250304 04:14:06.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:06.598" level="INFO"/>
<status status="PASS" starttime="20250304 04:14:06.598" endtime="20250304 04:14:06.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:14:06.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:14:06.598" endtime="20250304 04:14:06.599"/>
</kw>
<status status="PASS" starttime="20250304 04:14:06.235" endtime="20250304 04:14:06.599"/>
</kw>
<msg timestamp="20250304 04:14:06.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:14:06.234" endtime="20250304 04:14:06.599"/>
</kw>
<status status="PASS" starttime="20250304 04:14:06.234" endtime="20250304 04:14:06.599"/>
</kw>
<status status="PASS" starttime="20250304 04:13:59.004" endtime="20250304 04:14:06.599"/>
</kw>
<status status="PASS" starttime="20250304 04:13:59.003" endtime="20250304 04:14:06.599"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:14:06.599" endtime="20250304 04:14:06.599"/>
</kw>
<status status="PASS" starttime="20250304 04:13:58.926" endtime="20250304 04:14:06.599"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:14:06.603" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:07.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:14:07.156" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:46 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:14:06.600" endtime="20250304 04:14:07.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:07.157" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:46 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:14:07 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:14:07 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:14:07.156" endtime="20250304 04:14:07.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:14:07.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:14:07.157" endtime="20250304 04:14:07.157"/>
</kw>
<msg timestamp="20250304 04:14:07.158" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:46 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:14:06.600" endtime="20250304 04:14:07.158"/>
</kw>
<msg timestamp="20250304 04:14:07.158" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:46 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:14:06.600" endtime="20250304 04:14:07.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:14:07.158" endtime="20250304 04:14:07.158"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:14:07.161" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:07.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:14:07.165" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:14:07.159" endtime="20250304 04:14:07.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:07.166" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:14:07.166" endtime="20250304 04:14:07.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:14:07.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:14:07.166" endtime="20250304 04:14:07.167"/>
</kw>
<msg timestamp="20250304 04:14:07.167" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:14:07.158" endtime="20250304 04:14:07.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:14:07.167" endtime="20250304 04:14:07.167"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:14:07.170" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:07.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:14:07.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:14:07.168" endtime="20250304 04:14:07.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:07.174" level="INFO"/>
<status status="PASS" starttime="20250304 04:14:07.174" endtime="20250304 04:14:07.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:14:07.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:14:07.174" endtime="20250304 04:14:07.175"/>
</kw>
<status status="PASS" starttime="20250304 04:14:07.167" endtime="20250304 04:14:07.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:13:58.926" endtime="20250304 04:14:07.175"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 04:13:47.248" endtime="20250304 04:14:07.176"/>
</suite>
<suite id="s1-s9" name="1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s9-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:14:07.838" endtime="20250304 04:14:07.838"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:14:07.841" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:07.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:14:07.845" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:14:07.839" endtime="20250304 04:14:07.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:07.846" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:14:07.846" endtime="20250304 04:14:07.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:14:07.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:14:07.846" endtime="20250304 04:14:07.847"/>
</kw>
<status status="PASS" starttime="20250304 04:14:07.839" endtime="20250304 04:14:07.847"/>
</kw>
<msg timestamp="20250304 04:14:07.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:14:07.839" endtime="20250304 04:14:07.847"/>
</kw>
<msg timestamp="20250304 04:14:07.847" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:14:07.839" endtime="20250304 04:14:07.847"/>
</kw>
<msg timestamp="20250304 04:14:07.847" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:14:07.838" endtime="20250304 04:14:07.847"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:14:07.848" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:14:07.847" endtime="20250304 04:14:07.848"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:14:07.851" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:07.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:14:07.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:14:07.849" endtime="20250304 04:14:07.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:07.867" level="INFO"/>
<status status="PASS" starttime="20250304 04:14:07.867" endtime="20250304 04:14:07.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:14:07.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:14:07.868" endtime="20250304 04:14:07.868"/>
</kw>
<status status="PASS" starttime="20250304 04:14:07.848" endtime="20250304 04:14:07.868"/>
</kw>
<msg timestamp="20250304 04:14:07.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:14:07.848" endtime="20250304 04:14:07.868"/>
</kw>
<status status="PASS" starttime="20250304 04:14:07.848" endtime="20250304 04:14:07.868"/>
</kw>
<status status="PASS" starttime="20250304 04:14:07.848" endtime="20250304 04:14:07.868"/>
</kw>
<status status="PASS" starttime="20250304 04:14:07.838" endtime="20250304 04:14:07.868"/>
</kw>
<status status="PASS" starttime="20250304 04:14:07.837" endtime="20250304 04:14:07.868"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:14:07.869" endtime="20250304 04:14:07.869"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:14:07.872" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:14:14.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:14:14.931" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [111].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 04:14:07.870" endtime="20250304 04:14:14.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:14:14.931" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [111].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [111]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [111]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [111]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250304 04:14:14.931" endtime="20250304 04:14:14.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:14:14.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:14:14.932" endtime="20250304 04:14:14.932"/>
</kw>
<status status="PASS" starttime="20250304 04:14:07.869" endtime="20250304 04:14:14.932"/>
</kw>
<msg timestamp="20250304 04:14:14.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:14:07.869" endtime="20250304 04:14:14.932"/>
</kw>
<msg timestamp="20250304 04:14:14.932" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [111].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 04:14:07.869" endtime="20250304 04:14:14.933"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:14:14.933" endtime="20250304 04:14:14.933"/>
</kw>
<status status="PASS" starttime="20250304 04:14:14.933" endtime="20250304 04:14:14.933"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:14:07.837" endtime="20250304 04:14:14.933"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20250304 04:14:07.802" endtime="20250304 04:14:14.934"/>
</suite>
<suite id="s1-s10" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s10-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:15:39.361" endtime="20250304 04:15:39.362"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:39.366" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:39.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:39.370" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:15:39.363" endtime="20250304 04:15:39.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:39.371" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:15:39.370" endtime="20250304 04:15:39.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:39.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:39.371" endtime="20250304 04:15:39.371"/>
</kw>
<status status="PASS" starttime="20250304 04:15:39.363" endtime="20250304 04:15:39.371"/>
</kw>
<msg timestamp="20250304 04:15:39.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:39.363" endtime="20250304 04:15:39.372"/>
</kw>
<msg timestamp="20250304 04:15:39.372" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:15:39.363" endtime="20250304 04:15:39.372"/>
</kw>
<msg timestamp="20250304 04:15:39.372" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:15:39.362" endtime="20250304 04:15:39.372"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:15:39.372" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:15:39.372" endtime="20250304 04:15:39.372"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:39.376" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:39.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:39.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:15:39.374" endtime="20250304 04:15:39.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:39.415" level="INFO"/>
<status status="PASS" starttime="20250304 04:15:39.414" endtime="20250304 04:15:39.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:39.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:39.415" endtime="20250304 04:15:39.415"/>
</kw>
<status status="PASS" starttime="20250304 04:15:39.373" endtime="20250304 04:15:39.415"/>
</kw>
<msg timestamp="20250304 04:15:39.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:39.373" endtime="20250304 04:15:39.416"/>
</kw>
<status status="PASS" starttime="20250304 04:15:39.373" endtime="20250304 04:15:39.416"/>
</kw>
<status status="PASS" starttime="20250304 04:15:39.372" endtime="20250304 04:15:39.416"/>
</kw>
<status status="PASS" starttime="20250304 04:15:39.361" endtime="20250304 04:15:39.416"/>
</kw>
<status status="PASS" starttime="20250304 04:15:39.361" endtime="20250304 04:15:39.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:39.420" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:39.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:39.425" level="INFO">${output} = OZONE-SITE.XML_ozone.administrators=testuser,recon,om
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
HDFS-SITE.XML_dfs.web.authenticatio...</msg>
<status status="PASS" starttime="20250304 04:15:39.417" endtime="20250304 04:15:39.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:39.426" level="INFO">OZONE-SITE.XML_ozone.administrators=testuser,recon,om
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.security.authorization=true
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.server.default.replication=3
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.acl.enabled=true
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
CORE-SITE.XML_dfs.data.transfer.protection=authentication
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data/metadata
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.block.token.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.om.service.ids=omservice
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HOSTNAME=scm2.org
JAVA_HOME=/usr/lib/jvm/java-11-openjdk
OZONE_CONF_DIR=/etc/hadoop
PWD=/opt/hadoop
OZONE_LOG_DIR=/var/log/hadoop
OZONE_UPGRADE_FROM=1.4.1
OM_SERVICE_ID=omservice
HOME=/opt/hadoop
WAITFOR=scm1.org:9894
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
SHLVL=1
OZONE_UPGRADE_TO=2.0.0-SNAPSHOT
LD_LIBRARY_PATH=/usr/local/lib
LC_CTYPE=C.UTF-8
OZONE_DATANODE_SECURE_USER=root
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
_=/usr/bin/env</msg>
<status status="PASS" starttime="20250304 04:15:39.425" endtime="20250304 04:15:39.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:39.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:39.426" endtime="20250304 04:15:39.427"/>
</kw>
<status status="PASS" starttime="20250304 04:15:39.417" endtime="20250304 04:15:39.427"/>
</kw>
<msg timestamp="20250304 04:15:39.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:39.416" endtime="20250304 04:15:39.427"/>
</kw>
<msg timestamp="20250304 04:15:39.427" level="INFO">${result} = OZONE-SITE.XML_ozone.administrators=testuser,recon,om
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
HDFS-SITE.XML_dfs.web.authenticatio...</msg>
<status status="PASS" starttime="20250304 04:15:39.416" endtime="20250304 04:15:39.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:39.428" level="INFO">OZONE-SITE.XML_ozone.administrators=testuser,recon,om
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.security.authorization=true
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.server.default.replication=3
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.acl.enabled=true
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
CORE-SITE.XML_dfs.data.transfer.protection=authentication
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data/metadata
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.block.token.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.om.service.ids=omservice
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HOSTNAME=scm2.org
JAVA_HOME=/usr/lib/jvm/java-11-openjdk
OZONE_CONF_DIR=/etc/hadoop
PWD=/opt/hadoop
OZONE_LOG_DIR=/var/log/hadoop
OZONE_UPGRADE_FROM=1.4.1
OM_SERVICE_ID=omservice
HOME=/opt/hadoop
WAITFOR=scm1.org:9894
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
SHLVL=1
OZONE_UPGRADE_TO=2.0.0-SNAPSHOT
LD_LIBRARY_PATH=/usr/local/lib
LC_CTYPE=C.UTF-8
OZONE_DATANODE_SECURE_USER=root
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
_=/usr/bin/env</msg>
<status status="PASS" starttime="20250304 04:15:39.428" endtime="20250304 04:15:39.428"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:15:39.428" endtime="20250304 04:15:39.428"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:39.432" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:42.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:42.083" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20250304 04:15:39.429" endtime="20250304 04:15:42.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:42.084" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20250304 04:15:42.083" endtime="20250304 04:15:42.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:42.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:42.084" endtime="20250304 04:15:42.084"/>
</kw>
<status status="PASS" starttime="20250304 04:15:39.429" endtime="20250304 04:15:42.085"/>
</kw>
<msg timestamp="20250304 04:15:42.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:39.429" endtime="20250304 04:15:42.085"/>
</kw>
<msg timestamp="20250304 04:15:42.085" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20250304 04:15:39.429" endtime="20250304 04:15:42.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:42.085" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20250304 04:15:42.085" endtime="20250304 04:15:42.085"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250304 04:15:42.085" endtime="20250304 04:15:42.086"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250304 04:15:39.360" endtime="20250304 04:15:42.086"/>
</test>
<test id="s1-s10-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:15:42.087" endtime="20250304 04:15:42.088"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:42.091" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:42.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:42.095" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:15:42.089" endtime="20250304 04:15:42.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:42.096" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:15:42.095" endtime="20250304 04:15:42.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:42.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:42.096" endtime="20250304 04:15:42.096"/>
</kw>
<status status="PASS" starttime="20250304 04:15:42.088" endtime="20250304 04:15:42.097"/>
</kw>
<msg timestamp="20250304 04:15:42.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:42.088" endtime="20250304 04:15:42.097"/>
</kw>
<msg timestamp="20250304 04:15:42.097" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:15:42.088" endtime="20250304 04:15:42.097"/>
</kw>
<msg timestamp="20250304 04:15:42.097" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:15:42.088" endtime="20250304 04:15:42.097"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:15:42.098" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:15:42.097" endtime="20250304 04:15:42.098"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:42.101" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:42.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:42.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:15:42.099" endtime="20250304 04:15:42.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:42.143" level="INFO"/>
<status status="PASS" starttime="20250304 04:15:42.143" endtime="20250304 04:15:42.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:42.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:42.143" endtime="20250304 04:15:42.144"/>
</kw>
<status status="PASS" starttime="20250304 04:15:42.099" endtime="20250304 04:15:42.144"/>
</kw>
<msg timestamp="20250304 04:15:42.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:42.098" endtime="20250304 04:15:42.144"/>
</kw>
<status status="PASS" starttime="20250304 04:15:42.098" endtime="20250304 04:15:42.144"/>
</kw>
<status status="PASS" starttime="20250304 04:15:42.098" endtime="20250304 04:15:42.144"/>
</kw>
<status status="PASS" starttime="20250304 04:15:42.087" endtime="20250304 04:15:42.144"/>
</kw>
<status status="PASS" starttime="20250304 04:15:42.087" endtime="20250304 04:15:42.145"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:15:42.145" endtime="20250304 04:15:42.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:42.148" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:44.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:44.798" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:15:42.146" endtime="20250304 04:15:44.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:44.799" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:15:44.798" endtime="20250304 04:15:44.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:44.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:44.799" endtime="20250304 04:15:44.799"/>
</kw>
<status status="PASS" starttime="20250304 04:15:42.146" endtime="20250304 04:15:44.799"/>
</kw>
<msg timestamp="20250304 04:15:44.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:42.145" endtime="20250304 04:15:44.800"/>
</kw>
<msg timestamp="20250304 04:15:44.800" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:15:42.145" endtime="20250304 04:15:44.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:44.800" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:15:44.800" endtime="20250304 04:15:44.800"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250304 04:15:44.800" endtime="20250304 04:15:44.800"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250304 04:15:42.086" endtime="20250304 04:15:44.801"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20250304 04:15:39.323" endtime="20250304 04:15:44.801"/>
</suite>
<suite id="s1-s11" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:15:45.566" endtime="20250304 04:15:45.566"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:45.570" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:45.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:45.574" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:15:45.567" endtime="20250304 04:15:45.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:45.575" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:15:45.574" endtime="20250304 04:15:45.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:45.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:45.575" endtime="20250304 04:15:45.575"/>
</kw>
<status status="PASS" starttime="20250304 04:15:45.567" endtime="20250304 04:15:45.575"/>
</kw>
<msg timestamp="20250304 04:15:45.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:45.567" endtime="20250304 04:15:45.575"/>
</kw>
<msg timestamp="20250304 04:15:45.576" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:15:45.567" endtime="20250304 04:15:45.576"/>
</kw>
<msg timestamp="20250304 04:15:45.576" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:15:45.566" endtime="20250304 04:15:45.576"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:15:45.576" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:15:45.576" endtime="20250304 04:15:45.576"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:45.580" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:45.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:45.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:15:45.578" endtime="20250304 04:15:45.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:45.615" level="INFO"/>
<status status="PASS" starttime="20250304 04:15:45.615" endtime="20250304 04:15:45.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:45.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:45.615" endtime="20250304 04:15:45.616"/>
</kw>
<status status="PASS" starttime="20250304 04:15:45.577" endtime="20250304 04:15:45.616"/>
</kw>
<msg timestamp="20250304 04:15:45.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:45.577" endtime="20250304 04:15:45.616"/>
</kw>
<status status="PASS" starttime="20250304 04:15:45.577" endtime="20250304 04:15:45.616"/>
</kw>
<status status="PASS" starttime="20250304 04:15:45.576" endtime="20250304 04:15:45.616"/>
</kw>
<status status="PASS" starttime="20250304 04:15:45.566" endtime="20250304 04:15:45.616"/>
</kw>
<status status="PASS" starttime="20250304 04:15:45.565" endtime="20250304 04:15:45.616"/>
</kw>
<test id="s1-s11-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:15:45.618" level="INFO">${random} = 58478</msg>
<status status="PASS" starttime="20250304 04:15:45.617" endtime="20250304 04:15:45.618"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:45.621" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-58478 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:50.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:50.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:15:45.619" endtime="20250304 04:15:50.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:50.158" level="INFO"/>
<status status="PASS" starttime="20250304 04:15:50.158" endtime="20250304 04:15:50.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:50.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:50.159" endtime="20250304 04:15:50.159"/>
</kw>
<status status="PASS" starttime="20250304 04:15:45.618" endtime="20250304 04:15:50.159"/>
</kw>
<msg timestamp="20250304 04:15:50.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:45.618" endtime="20250304 04:15:50.159"/>
</kw>
<msg timestamp="20250304 04:15:50.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:15:45.618" endtime="20250304 04:15:50.160"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:15:50.160" endtime="20250304 04:15:50.160"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:50.163" level="INFO">Running command 'cat /tmp/key-58478 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:50.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:50.167" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:15:50.161" endtime="20250304 04:15:50.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:50.168" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:15:50.167" endtime="20250304 04:15:50.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:50.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:50.168" endtime="20250304 04:15:50.168"/>
</kw>
<msg timestamp="20250304 04:15:50.169" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:15:50.160" endtime="20250304 04:15:50.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:15:50.169" endtime="20250304 04:15:50.169"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:50.172" level="INFO">Running command 'rm /tmp/key-58478 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:50.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:50.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:15:50.169" endtime="20250304 04:15:50.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:50.176" level="INFO"/>
<status status="PASS" starttime="20250304 04:15:50.176" endtime="20250304 04:15:50.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:50.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:50.176" endtime="20250304 04:15:50.177"/>
</kw>
<status status="PASS" starttime="20250304 04:15:50.169" endtime="20250304 04:15:50.177"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:15:45.616" endtime="20250304 04:15:50.177"/>
</test>
<test id="s1-s11-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:15:50.179" endtime="20250304 04:15:50.179"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:50.182" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:50.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:50.186" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:15:50.180" endtime="20250304 04:15:50.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:50.187" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:15:50.187" endtime="20250304 04:15:50.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:50.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:50.187" endtime="20250304 04:15:50.188"/>
</kw>
<status status="PASS" starttime="20250304 04:15:50.180" endtime="20250304 04:15:50.188"/>
</kw>
<msg timestamp="20250304 04:15:50.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:50.180" endtime="20250304 04:15:50.188"/>
</kw>
<msg timestamp="20250304 04:15:50.188" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:15:50.180" endtime="20250304 04:15:50.188"/>
</kw>
<msg timestamp="20250304 04:15:50.188" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:15:50.179" endtime="20250304 04:15:50.188"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:15:50.188" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:15:50.188" endtime="20250304 04:15:50.189"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:50.192" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:50.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:50.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:15:50.190" endtime="20250304 04:15:50.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:50.229" level="INFO"/>
<status status="PASS" starttime="20250304 04:15:50.228" endtime="20250304 04:15:50.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:50.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:50.229" endtime="20250304 04:15:50.229"/>
</kw>
<status status="PASS" starttime="20250304 04:15:50.190" endtime="20250304 04:15:50.229"/>
</kw>
<msg timestamp="20250304 04:15:50.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:50.189" endtime="20250304 04:15:50.229"/>
</kw>
<status status="PASS" starttime="20250304 04:15:50.189" endtime="20250304 04:15:50.230"/>
</kw>
<status status="PASS" starttime="20250304 04:15:50.189" endtime="20250304 04:15:50.230"/>
</kw>
<status status="PASS" starttime="20250304 04:15:50.179" endtime="20250304 04:15:50.230"/>
</kw>
<status status="PASS" starttime="20250304 04:15:50.178" endtime="20250304 04:15:50.230"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:50.233" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:52.812" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:15:52.812" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:15:50.231" endtime="20250304 04:15:52.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:52.813" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:15:52.813" endtime="20250304 04:15:52.813"/>
</kw>
<msg timestamp="20250304 04:15:52.814" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:15:50.230" endtime="20250304 04:15:52.814"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:15:52.814" endtime="20250304 04:15:52.815"/>
</kw>
<msg timestamp="20250304 04:15:52.815" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:15:52.814" endtime="20250304 04:15:52.815"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:52.824" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:55.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:55.349" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:15:52.817" endtime="20250304 04:15:55.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:55.350" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:15:55.350" endtime="20250304 04:15:55.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:55.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:55.350" endtime="20250304 04:15:55.351"/>
</kw>
<status status="PASS" starttime="20250304 04:15:52.816" endtime="20250304 04:15:55.351"/>
</kw>
<msg timestamp="20250304 04:15:55.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:52.816" endtime="20250304 04:15:55.351"/>
</kw>
<status status="PASS" starttime="20250304 04:15:52.815" endtime="20250304 04:15:55.351"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:55.354" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:57.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:57.948" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e2d81415b413402a3d3f1b3ffc5cd39286f34bb40b6f479042acca5393c0b0db</msg>
<status status="PASS" starttime="20250304 04:15:55.352" endtime="20250304 04:15:57.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:57.949" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e2d81415b413402a3d3f1b3ffc5cd39286f34bb40b6f479042acca5393c0b0db</msg>
<status status="PASS" starttime="20250304 04:15:57.948" endtime="20250304 04:15:57.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:57.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:57.949" endtime="20250304 04:15:57.950"/>
</kw>
<status status="PASS" starttime="20250304 04:15:55.352" endtime="20250304 04:15:57.950"/>
</kw>
<msg timestamp="20250304 04:15:57.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:55.352" endtime="20250304 04:15:57.950"/>
</kw>
<msg timestamp="20250304 04:15:57.950" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e2d81415b413402a3d3f1b3ffc5cd39286f34bb40b6f479042acca5393c0b0db</msg>
<status status="PASS" starttime="20250304 04:15:55.351" endtime="20250304 04:15:57.950"/>
</kw>
<status status="PASS" starttime="20250304 04:15:52.815" endtime="20250304 04:15:57.950"/>
</branch>
<status status="PASS" starttime="20250304 04:15:52.815" endtime="20250304 04:15:57.951"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:15:57.951" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:15:57.951" endtime="20250304 04:15:57.951"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:15:57.952" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:15:57.952" endtime="20250304 04:15:57.952"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:15:57.952" level="INFO">${secret} = ['e2d81415b413402a3d3f1b3ffc5cd39286f34bb40b6f479042acca5393c0b0db']</msg>
<status status="PASS" starttime="20250304 04:15:57.952" endtime="20250304 04:15:57.952"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:15:57.953" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:15:57.953" endtime="20250304 04:15:57.954"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:15:57.954" level="INFO">${secret} = e2d81415b413402a3d3f1b3ffc5cd39286f34bb40b6f479042acca5393c0b0db</msg>
<status status="PASS" starttime="20250304 04:15:57.954" endtime="20250304 04:15:57.954"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:57.958" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:58.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:58.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:15:57.956" endtime="20250304 04:15:58.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:58.360" level="INFO"/>
<status status="PASS" starttime="20250304 04:15:58.359" endtime="20250304 04:15:58.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:58.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:58.360" endtime="20250304 04:15:58.360"/>
</kw>
<status status="PASS" starttime="20250304 04:15:57.955" endtime="20250304 04:15:58.360"/>
</kw>
<msg timestamp="20250304 04:15:58.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:57.955" endtime="20250304 04:15:58.360"/>
</kw>
<status status="PASS" starttime="20250304 04:15:57.955" endtime="20250304 04:15:58.361"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:58.364" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:58.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:58.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:15:58.362" endtime="20250304 04:15:58.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:58.741" level="INFO"/>
<status status="PASS" starttime="20250304 04:15:58.740" endtime="20250304 04:15:58.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:58.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:58.741" endtime="20250304 04:15:58.742"/>
</kw>
<status status="PASS" starttime="20250304 04:15:58.361" endtime="20250304 04:15:58.742"/>
</kw>
<msg timestamp="20250304 04:15:58.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:58.361" endtime="20250304 04:15:58.742"/>
</kw>
<status status="PASS" starttime="20250304 04:15:58.361" endtime="20250304 04:15:58.742"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:58.745" level="INFO">Running command 'aws configure set aws_secret_access_key e2d81415b413402a3d3f1b3ffc5cd39286f34bb40b6f479042acca5393c0b0db 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:59.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:59.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:15:58.743" endtime="20250304 04:15:59.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:59.113" level="INFO"/>
<status status="PASS" starttime="20250304 04:15:59.112" endtime="20250304 04:15:59.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:59.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:59.113" endtime="20250304 04:15:59.113"/>
</kw>
<status status="PASS" starttime="20250304 04:15:58.743" endtime="20250304 04:15:59.113"/>
</kw>
<msg timestamp="20250304 04:15:59.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:58.742" endtime="20250304 04:15:59.113"/>
</kw>
<status status="PASS" starttime="20250304 04:15:58.742" endtime="20250304 04:15:59.113"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:59.117" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:59.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:59.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:15:59.114" endtime="20250304 04:15:59.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:59.519" level="INFO"/>
<status status="PASS" starttime="20250304 04:15:59.518" endtime="20250304 04:15:59.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:59.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:59.519" endtime="20250304 04:15:59.519"/>
</kw>
<status status="PASS" starttime="20250304 04:15:59.114" endtime="20250304 04:15:59.519"/>
</kw>
<msg timestamp="20250304 04:15:59.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:59.114" endtime="20250304 04:15:59.519"/>
</kw>
<status status="PASS" starttime="20250304 04:15:59.114" endtime="20250304 04:15:59.520"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:59.523" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:15:59.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:15:59.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:15:59.521" endtime="20250304 04:15:59.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:15:59.902" level="INFO"/>
<status status="PASS" starttime="20250304 04:15:59.901" endtime="20250304 04:15:59.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:15:59.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:15:59.902" endtime="20250304 04:15:59.902"/>
</kw>
<status status="PASS" starttime="20250304 04:15:59.520" endtime="20250304 04:15:59.902"/>
</kw>
<msg timestamp="20250304 04:15:59.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:15:59.520" endtime="20250304 04:15:59.902"/>
</kw>
<status status="PASS" starttime="20250304 04:15:59.520" endtime="20250304 04:15:59.903"/>
</kw>
<status status="PASS" starttime="20250304 04:15:50.230" endtime="20250304 04:15:59.903"/>
</kw>
<status status="PASS" starttime="20250304 04:15:50.230" endtime="20250304 04:15:59.903"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:15:59.903" endtime="20250304 04:15:59.903"/>
</kw>
<status status="PASS" starttime="20250304 04:15:50.178" endtime="20250304 04:15:59.903"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:15:59.906" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:02.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:02.550" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:15:59.904" endtime="20250304 04:16:02.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:02.551" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:16:00 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:16:00 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:16:02.550" endtime="20250304 04:16:02.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:02.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:02.551" endtime="20250304 04:16:02.551"/>
</kw>
<msg timestamp="20250304 04:16:02.552" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:15:59.904" endtime="20250304 04:16:02.552"/>
</kw>
<msg timestamp="20250304 04:16:02.552" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:15:59.903" endtime="20250304 04:16:02.552"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:02.552" endtime="20250304 04:16:02.552"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:02.556" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:02.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:02.560" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:16:02.553" endtime="20250304 04:16:02.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:02.561" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:16:02.561" endtime="20250304 04:16:02.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:02.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:02.562" endtime="20250304 04:16:02.562"/>
</kw>
<msg timestamp="20250304 04:16:02.562" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:16:02.552" endtime="20250304 04:16:02.562"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:02.562" endtime="20250304 04:16:02.563"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:02.566" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:02.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:02.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:02.563" endtime="20250304 04:16:02.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:02.572" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:02.571" endtime="20250304 04:16:02.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:02.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:02.572" endtime="20250304 04:16:02.572"/>
</kw>
<status status="PASS" starttime="20250304 04:16:02.563" endtime="20250304 04:16:02.572"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:15:50.178" endtime="20250304 04:16:02.573"/>
</test>
<test id="s1-s11-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:16:02.575" endtime="20250304 04:16:02.575"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:02.579" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:02.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:02.584" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:16:02.577" endtime="20250304 04:16:02.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:02.585" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:16:02.584" endtime="20250304 04:16:02.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:02.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:02.585" endtime="20250304 04:16:02.586"/>
</kw>
<status status="PASS" starttime="20250304 04:16:02.576" endtime="20250304 04:16:02.586"/>
</kw>
<msg timestamp="20250304 04:16:02.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:02.576" endtime="20250304 04:16:02.586"/>
</kw>
<msg timestamp="20250304 04:16:02.586" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:16:02.576" endtime="20250304 04:16:02.586"/>
</kw>
<msg timestamp="20250304 04:16:02.586" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:02.575" endtime="20250304 04:16:02.586"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:16:02.587" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:02.587" endtime="20250304 04:16:02.587"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:02.591" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:02.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:02.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:02.588" endtime="20250304 04:16:02.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:02.610" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:02.610" endtime="20250304 04:16:02.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:02.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:02.611" endtime="20250304 04:16:02.611"/>
</kw>
<status status="PASS" starttime="20250304 04:16:02.588" endtime="20250304 04:16:02.611"/>
</kw>
<msg timestamp="20250304 04:16:02.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:02.588" endtime="20250304 04:16:02.612"/>
</kw>
<status status="PASS" starttime="20250304 04:16:02.587" endtime="20250304 04:16:02.612"/>
</kw>
<status status="PASS" starttime="20250304 04:16:02.587" endtime="20250304 04:16:02.612"/>
</kw>
<status status="PASS" starttime="20250304 04:16:02.575" endtime="20250304 04:16:02.612"/>
</kw>
<status status="PASS" starttime="20250304 04:16:02.574" endtime="20250304 04:16:02.612"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:02.617" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:05.244" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:16:05.244" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:16:02.614" endtime="20250304 04:16:05.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:05.245" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:16:05.245" endtime="20250304 04:16:05.245"/>
</kw>
<msg timestamp="20250304 04:16:05.246" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:16:02.613" endtime="20250304 04:16:05.246"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:05.246" endtime="20250304 04:16:05.246"/>
</kw>
<msg timestamp="20250304 04:16:05.246" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:16:05.246" endtime="20250304 04:16:05.246"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:05.250" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:07.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:07.740" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:16:05.248" endtime="20250304 04:16:07.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:07.741" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:16:07.740" endtime="20250304 04:16:07.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:07.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:07.741" endtime="20250304 04:16:07.742"/>
</kw>
<status status="PASS" starttime="20250304 04:16:05.247" endtime="20250304 04:16:07.742"/>
</kw>
<msg timestamp="20250304 04:16:07.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:05.247" endtime="20250304 04:16:07.742"/>
</kw>
<status status="PASS" starttime="20250304 04:16:05.247" endtime="20250304 04:16:07.742"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:07.746" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:10.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:10.174" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3f156bb54d15307e05589ca902fdce9200b4aa65581c6e95e14981dcc7c6cf6b</msg>
<status status="PASS" starttime="20250304 04:16:07.743" endtime="20250304 04:16:10.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:10.175" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3f156bb54d15307e05589ca902fdce9200b4aa65581c6e95e14981dcc7c6cf6b</msg>
<status status="PASS" starttime="20250304 04:16:10.175" endtime="20250304 04:16:10.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:10.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:10.176" endtime="20250304 04:16:10.176"/>
</kw>
<status status="PASS" starttime="20250304 04:16:07.743" endtime="20250304 04:16:10.176"/>
</kw>
<msg timestamp="20250304 04:16:10.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:07.743" endtime="20250304 04:16:10.176"/>
</kw>
<msg timestamp="20250304 04:16:10.177" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3f156bb54d15307e05589ca902fdce9200b4aa65581c6e95e14981dcc7c6cf6b</msg>
<status status="PASS" starttime="20250304 04:16:07.742" endtime="20250304 04:16:10.177"/>
</kw>
<status status="PASS" starttime="20250304 04:16:05.247" endtime="20250304 04:16:10.177"/>
</branch>
<status status="PASS" starttime="20250304 04:16:05.246" endtime="20250304 04:16:10.177"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:16:10.177" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:16:10.177" endtime="20250304 04:16:10.177"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:16:10.178" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:16:10.177" endtime="20250304 04:16:10.178"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:16:10.178" level="INFO">${secret} = ['3f156bb54d15307e05589ca902fdce9200b4aa65581c6e95e14981dcc7c6cf6b']</msg>
<status status="PASS" starttime="20250304 04:16:10.178" endtime="20250304 04:16:10.178"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:16:10.179" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:10.178" endtime="20250304 04:16:10.179"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:16:10.180" level="INFO">${secret} = 3f156bb54d15307e05589ca902fdce9200b4aa65581c6e95e14981dcc7c6cf6b</msg>
<status status="PASS" starttime="20250304 04:16:10.179" endtime="20250304 04:16:10.180"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:10.183" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:10.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:10.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:10.181" endtime="20250304 04:16:10.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:10.557" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:10.557" endtime="20250304 04:16:10.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:10.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:10.558" endtime="20250304 04:16:10.558"/>
</kw>
<status status="PASS" starttime="20250304 04:16:10.180" endtime="20250304 04:16:10.558"/>
</kw>
<msg timestamp="20250304 04:16:10.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:10.180" endtime="20250304 04:16:10.558"/>
</kw>
<status status="PASS" starttime="20250304 04:16:10.180" endtime="20250304 04:16:10.558"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:10.562" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:10.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:10.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:10.559" endtime="20250304 04:16:10.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:10.934" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:10.934" endtime="20250304 04:16:10.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:10.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:10.934" endtime="20250304 04:16:10.935"/>
</kw>
<status status="PASS" starttime="20250304 04:16:10.559" endtime="20250304 04:16:10.935"/>
</kw>
<msg timestamp="20250304 04:16:10.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:10.559" endtime="20250304 04:16:10.935"/>
</kw>
<status status="PASS" starttime="20250304 04:16:10.558" endtime="20250304 04:16:10.935"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:10.939" level="INFO">Running command 'aws configure set aws_secret_access_key 3f156bb54d15307e05589ca902fdce9200b4aa65581c6e95e14981dcc7c6cf6b 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:11.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:11.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:10.936" endtime="20250304 04:16:11.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:11.312" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:11.311" endtime="20250304 04:16:11.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:11.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:11.312" endtime="20250304 04:16:11.313"/>
</kw>
<status status="PASS" starttime="20250304 04:16:10.936" endtime="20250304 04:16:11.313"/>
</kw>
<msg timestamp="20250304 04:16:11.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:10.936" endtime="20250304 04:16:11.313"/>
</kw>
<status status="PASS" starttime="20250304 04:16:10.935" endtime="20250304 04:16:11.313"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:11.316" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:11.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:11.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:11.314" endtime="20250304 04:16:11.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:11.691" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:11.690" endtime="20250304 04:16:11.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:11.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:11.691" endtime="20250304 04:16:11.691"/>
</kw>
<status status="PASS" starttime="20250304 04:16:11.314" endtime="20250304 04:16:11.691"/>
</kw>
<msg timestamp="20250304 04:16:11.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:11.313" endtime="20250304 04:16:11.691"/>
</kw>
<status status="PASS" starttime="20250304 04:16:11.313" endtime="20250304 04:16:11.691"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:11.695" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:12.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:12.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:11.693" endtime="20250304 04:16:12.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:12.081" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:12.081" endtime="20250304 04:16:12.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:12.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:12.081" endtime="20250304 04:16:12.082"/>
</kw>
<status status="PASS" starttime="20250304 04:16:11.692" endtime="20250304 04:16:12.082"/>
</kw>
<msg timestamp="20250304 04:16:12.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:11.692" endtime="20250304 04:16:12.082"/>
</kw>
<status status="PASS" starttime="20250304 04:16:11.692" endtime="20250304 04:16:12.082"/>
</kw>
<status status="PASS" starttime="20250304 04:16:02.613" endtime="20250304 04:16:12.082"/>
</kw>
<status status="PASS" starttime="20250304 04:16:02.612" endtime="20250304 04:16:12.082"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:16:12.083" endtime="20250304 04:16:12.083"/>
</kw>
<status status="PASS" starttime="20250304 04:16:02.574" endtime="20250304 04:16:12.083"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:12.086" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:12.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:12.713" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:22 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:16:12.084" endtime="20250304 04:16:12.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:12.714" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:22 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:16:12 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:16:12 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:16:12.713" endtime="20250304 04:16:12.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:12.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:12.714" endtime="20250304 04:16:12.714"/>
</kw>
<msg timestamp="20250304 04:16:12.714" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:22 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:16:12.083" endtime="20250304 04:16:12.714"/>
</kw>
<msg timestamp="20250304 04:16:12.714" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:22 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:16:12.083" endtime="20250304 04:16:12.715"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:12.715" endtime="20250304 04:16:12.715"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:12.718" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:12.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:12.723" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:16:12.715" endtime="20250304 04:16:12.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:12.724" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:16:12.723" endtime="20250304 04:16:12.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:12.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:12.724" endtime="20250304 04:16:12.725"/>
</kw>
<msg timestamp="20250304 04:16:12.725" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:16:12.715" endtime="20250304 04:16:12.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:12.725" endtime="20250304 04:16:12.725"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:12.728" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:12.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:12.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:12.726" endtime="20250304 04:16:12.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:12.733" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:12.733" endtime="20250304 04:16:12.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:12.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:12.733" endtime="20250304 04:16:12.734"/>
</kw>
<status status="PASS" starttime="20250304 04:16:12.725" endtime="20250304 04:16:12.734"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:16:02.573" endtime="20250304 04:16:12.734"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 04:15:45.503" endtime="20250304 04:16:12.735"/>
</suite>
<suite id="s1-s12" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-validate-new1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:16:13.450" endtime="20250304 04:16:13.451"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:13.454" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:13.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:13.458" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:16:13.452" endtime="20250304 04:16:13.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:13.459" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:16:13.459" endtime="20250304 04:16:13.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:13.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:13.459" endtime="20250304 04:16:13.460"/>
</kw>
<status status="PASS" starttime="20250304 04:16:13.452" endtime="20250304 04:16:13.460"/>
</kw>
<msg timestamp="20250304 04:16:13.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:13.451" endtime="20250304 04:16:13.460"/>
</kw>
<msg timestamp="20250304 04:16:13.460" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:16:13.451" endtime="20250304 04:16:13.460"/>
</kw>
<msg timestamp="20250304 04:16:13.460" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:13.451" endtime="20250304 04:16:13.460"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:16:13.461" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:13.460" endtime="20250304 04:16:13.461"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:13.464" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:13.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:13.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:13.462" endtime="20250304 04:16:13.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:13.491" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:13.491" endtime="20250304 04:16:13.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:13.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:13.491" endtime="20250304 04:16:13.492"/>
</kw>
<status status="PASS" starttime="20250304 04:16:13.462" endtime="20250304 04:16:13.492"/>
</kw>
<msg timestamp="20250304 04:16:13.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:13.461" endtime="20250304 04:16:13.492"/>
</kw>
<status status="PASS" starttime="20250304 04:16:13.461" endtime="20250304 04:16:13.492"/>
</kw>
<status status="PASS" starttime="20250304 04:16:13.461" endtime="20250304 04:16:13.492"/>
</kw>
<status status="PASS" starttime="20250304 04:16:13.450" endtime="20250304 04:16:13.492"/>
</kw>
<status status="PASS" starttime="20250304 04:16:13.450" endtime="20250304 04:16:13.492"/>
</kw>
<test id="s1-s12-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:16:13.493" level="INFO">${random} = 08828</msg>
<status status="PASS" starttime="20250304 04:16:13.493" endtime="20250304 04:16:13.493"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:13.497" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-08828 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:18.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:18.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:13.495" endtime="20250304 04:16:18.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:18.005" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:18.004" endtime="20250304 04:16:18.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:18.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:18.005" endtime="20250304 04:16:18.005"/>
</kw>
<status status="PASS" starttime="20250304 04:16:13.494" endtime="20250304 04:16:18.006"/>
</kw>
<msg timestamp="20250304 04:16:18.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:13.494" endtime="20250304 04:16:18.006"/>
</kw>
<msg timestamp="20250304 04:16:18.006" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:13.494" endtime="20250304 04:16:18.006"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:18.006" endtime="20250304 04:16:18.006"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:18.009" level="INFO">Running command 'cat /tmp/key-08828 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:18.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:18.013" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:16:18.007" endtime="20250304 04:16:18.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:18.014" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:16:18.013" endtime="20250304 04:16:18.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:18.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:18.014" endtime="20250304 04:16:18.014"/>
</kw>
<msg timestamp="20250304 04:16:18.014" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:16:18.006" endtime="20250304 04:16:18.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:18.014" endtime="20250304 04:16:18.015"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:18.017" level="INFO">Running command 'rm /tmp/key-08828 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:18.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:18.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:18.015" endtime="20250304 04:16:18.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:18.022" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:18.021" endtime="20250304 04:16:18.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:18.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:18.022" endtime="20250304 04:16:18.022"/>
</kw>
<status status="PASS" starttime="20250304 04:16:18.015" endtime="20250304 04:16:18.022"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:16:13.492" endtime="20250304 04:16:18.023"/>
</test>
<test id="s1-s12-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:16:18.024" endtime="20250304 04:16:18.025"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:18.028" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:18.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:18.032" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:16:18.026" endtime="20250304 04:16:18.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:18.032" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:16:18.032" endtime="20250304 04:16:18.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:18.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:18.033" endtime="20250304 04:16:18.033"/>
</kw>
<status status="PASS" starttime="20250304 04:16:18.025" endtime="20250304 04:16:18.033"/>
</kw>
<msg timestamp="20250304 04:16:18.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:18.025" endtime="20250304 04:16:18.033"/>
</kw>
<msg timestamp="20250304 04:16:18.033" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:16:18.025" endtime="20250304 04:16:18.033"/>
</kw>
<msg timestamp="20250304 04:16:18.034" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:18.025" endtime="20250304 04:16:18.034"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:16:18.034" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:18.034" endtime="20250304 04:16:18.034"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:18.037" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:18.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:18.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:18.035" endtime="20250304 04:16:18.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:18.063" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:18.062" endtime="20250304 04:16:18.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:18.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:18.063" endtime="20250304 04:16:18.063"/>
</kw>
<status status="PASS" starttime="20250304 04:16:18.035" endtime="20250304 04:16:18.064"/>
</kw>
<msg timestamp="20250304 04:16:18.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:18.035" endtime="20250304 04:16:18.064"/>
</kw>
<status status="PASS" starttime="20250304 04:16:18.034" endtime="20250304 04:16:18.064"/>
</kw>
<status status="PASS" starttime="20250304 04:16:18.034" endtime="20250304 04:16:18.064"/>
</kw>
<status status="PASS" starttime="20250304 04:16:18.024" endtime="20250304 04:16:18.064"/>
</kw>
<status status="PASS" starttime="20250304 04:16:18.024" endtime="20250304 04:16:18.064"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:18.067" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:20.416" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:16:20.416" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:16:18.065" endtime="20250304 04:16:20.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:20.417" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:16:20.416" endtime="20250304 04:16:20.417"/>
</kw>
<msg timestamp="20250304 04:16:20.417" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:16:18.065" endtime="20250304 04:16:20.417"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:20.418" endtime="20250304 04:16:20.418"/>
</kw>
<msg timestamp="20250304 04:16:20.418" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:16:20.417" endtime="20250304 04:16:20.418"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:20.422" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:22.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:22.977" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:16:20.419" endtime="20250304 04:16:22.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:22.978" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:16:22.978" endtime="20250304 04:16:22.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:22.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:22.979" endtime="20250304 04:16:22.979"/>
</kw>
<status status="PASS" starttime="20250304 04:16:20.419" endtime="20250304 04:16:22.979"/>
</kw>
<msg timestamp="20250304 04:16:22.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:20.419" endtime="20250304 04:16:22.979"/>
</kw>
<status status="PASS" starttime="20250304 04:16:20.418" endtime="20250304 04:16:22.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:22.983" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:25.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:25.560" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=949380b8ba437b149aeb2074b2fd978d622358ac6906b7a856d87b64aa774b9a</msg>
<status status="PASS" starttime="20250304 04:16:22.981" endtime="20250304 04:16:25.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:25.561" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=949380b8ba437b149aeb2074b2fd978d622358ac6906b7a856d87b64aa774b9a</msg>
<status status="PASS" starttime="20250304 04:16:25.560" endtime="20250304 04:16:25.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:25.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:25.561" endtime="20250304 04:16:25.561"/>
</kw>
<status status="PASS" starttime="20250304 04:16:22.980" endtime="20250304 04:16:25.562"/>
</kw>
<msg timestamp="20250304 04:16:25.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:22.980" endtime="20250304 04:16:25.562"/>
</kw>
<msg timestamp="20250304 04:16:25.562" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=949380b8ba437b149aeb2074b2fd978d622358ac6906b7a856d87b64aa774b9a</msg>
<status status="PASS" starttime="20250304 04:16:22.980" endtime="20250304 04:16:25.562"/>
</kw>
<status status="PASS" starttime="20250304 04:16:20.418" endtime="20250304 04:16:25.562"/>
</branch>
<status status="PASS" starttime="20250304 04:16:20.418" endtime="20250304 04:16:25.562"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:16:25.563" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:16:25.562" endtime="20250304 04:16:25.563"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:16:25.563" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:16:25.563" endtime="20250304 04:16:25.563"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:16:25.564" level="INFO">${secret} = ['949380b8ba437b149aeb2074b2fd978d622358ac6906b7a856d87b64aa774b9a']</msg>
<status status="PASS" starttime="20250304 04:16:25.563" endtime="20250304 04:16:25.564"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:16:25.565" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:25.564" endtime="20250304 04:16:25.565"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:16:25.566" level="INFO">${secret} = 949380b8ba437b149aeb2074b2fd978d622358ac6906b7a856d87b64aa774b9a</msg>
<status status="PASS" starttime="20250304 04:16:25.565" endtime="20250304 04:16:25.566"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:25.569" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:25.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:25.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:25.567" endtime="20250304 04:16:25.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:25.946" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:25.945" endtime="20250304 04:16:25.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:25.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:25.946" endtime="20250304 04:16:25.946"/>
</kw>
<status status="PASS" starttime="20250304 04:16:25.567" endtime="20250304 04:16:25.947"/>
</kw>
<msg timestamp="20250304 04:16:25.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:25.566" endtime="20250304 04:16:25.947"/>
</kw>
<status status="PASS" starttime="20250304 04:16:25.566" endtime="20250304 04:16:25.947"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:25.950" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:26.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:26.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:25.948" endtime="20250304 04:16:26.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:26.332" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:26.332" endtime="20250304 04:16:26.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:26.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:26.333" endtime="20250304 04:16:26.333"/>
</kw>
<status status="PASS" starttime="20250304 04:16:25.948" endtime="20250304 04:16:26.333"/>
</kw>
<msg timestamp="20250304 04:16:26.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:25.947" endtime="20250304 04:16:26.333"/>
</kw>
<status status="PASS" starttime="20250304 04:16:25.947" endtime="20250304 04:16:26.333"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:26.337" level="INFO">Running command 'aws configure set aws_secret_access_key 949380b8ba437b149aeb2074b2fd978d622358ac6906b7a856d87b64aa774b9a 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:26.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:26.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:26.335" endtime="20250304 04:16:26.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:26.711" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:26.711" endtime="20250304 04:16:26.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:26.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:26.712" endtime="20250304 04:16:26.712"/>
</kw>
<status status="PASS" starttime="20250304 04:16:26.334" endtime="20250304 04:16:26.712"/>
</kw>
<msg timestamp="20250304 04:16:26.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:26.334" endtime="20250304 04:16:26.712"/>
</kw>
<status status="PASS" starttime="20250304 04:16:26.333" endtime="20250304 04:16:26.712"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:26.716" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:27.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:27.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:26.713" endtime="20250304 04:16:27.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:27.097" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:27.096" endtime="20250304 04:16:27.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:27.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:27.097" endtime="20250304 04:16:27.097"/>
</kw>
<status status="PASS" starttime="20250304 04:16:26.713" endtime="20250304 04:16:27.098"/>
</kw>
<msg timestamp="20250304 04:16:27.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:26.713" endtime="20250304 04:16:27.098"/>
</kw>
<status status="PASS" starttime="20250304 04:16:26.712" endtime="20250304 04:16:27.098"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:27.102" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:27.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:27.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:27.099" endtime="20250304 04:16:27.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:27.476" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:27.475" endtime="20250304 04:16:27.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:27.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:27.476" endtime="20250304 04:16:27.477"/>
</kw>
<status status="PASS" starttime="20250304 04:16:27.099" endtime="20250304 04:16:27.477"/>
</kw>
<msg timestamp="20250304 04:16:27.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:27.098" endtime="20250304 04:16:27.477"/>
</kw>
<status status="PASS" starttime="20250304 04:16:27.098" endtime="20250304 04:16:27.477"/>
</kw>
<status status="PASS" starttime="20250304 04:16:18.064" endtime="20250304 04:16:27.477"/>
</kw>
<status status="PASS" starttime="20250304 04:16:18.064" endtime="20250304 04:16:27.477"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:16:27.477" endtime="20250304 04:16:27.477"/>
</kw>
<status status="PASS" starttime="20250304 04:16:18.024" endtime="20250304 04:16:27.477"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:27.481" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:28.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:28.072" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:16:27.478" endtime="20250304 04:16:28.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:28.073" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:16:27 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:16:27 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:16:28.072" endtime="20250304 04:16:28.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:28.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:28.073" endtime="20250304 04:16:28.073"/>
</kw>
<msg timestamp="20250304 04:16:28.074" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:16:27.478" endtime="20250304 04:16:28.074"/>
</kw>
<msg timestamp="20250304 04:16:28.074" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:16:27.478" endtime="20250304 04:16:28.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:28.074" endtime="20250304 04:16:28.074"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:28.077" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:28.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:28.081" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:16:28.075" endtime="20250304 04:16:28.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:28.082" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:16:28.082" endtime="20250304 04:16:28.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:28.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:28.082" endtime="20250304 04:16:28.083"/>
</kw>
<msg timestamp="20250304 04:16:28.083" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:16:28.074" endtime="20250304 04:16:28.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:28.083" endtime="20250304 04:16:28.083"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:28.086" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:28.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:28.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:28.084" endtime="20250304 04:16:28.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:28.091" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:28.090" endtime="20250304 04:16:28.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:28.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:28.091" endtime="20250304 04:16:28.091"/>
</kw>
<status status="PASS" starttime="20250304 04:16:28.084" endtime="20250304 04:16:28.091"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:16:18.023" endtime="20250304 04:16:28.091"/>
</test>
<test id="s1-s12-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:16:28.093" endtime="20250304 04:16:28.094"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:28.097" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:28.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:28.101" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:16:28.095" endtime="20250304 04:16:28.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:28.102" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:16:28.101" endtime="20250304 04:16:28.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:28.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:28.102" endtime="20250304 04:16:28.102"/>
</kw>
<status status="PASS" starttime="20250304 04:16:28.094" endtime="20250304 04:16:28.102"/>
</kw>
<msg timestamp="20250304 04:16:28.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:28.094" endtime="20250304 04:16:28.103"/>
</kw>
<msg timestamp="20250304 04:16:28.103" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:16:28.094" endtime="20250304 04:16:28.103"/>
</kw>
<msg timestamp="20250304 04:16:28.103" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:28.094" endtime="20250304 04:16:28.103"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:16:28.103" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:28.103" endtime="20250304 04:16:28.103"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:28.107" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:28.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:28.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:28.105" endtime="20250304 04:16:28.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:28.147" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:28.146" endtime="20250304 04:16:28.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:28.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:28.147" endtime="20250304 04:16:28.148"/>
</kw>
<status status="PASS" starttime="20250304 04:16:28.105" endtime="20250304 04:16:28.148"/>
</kw>
<msg timestamp="20250304 04:16:28.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:28.104" endtime="20250304 04:16:28.148"/>
</kw>
<status status="PASS" starttime="20250304 04:16:28.104" endtime="20250304 04:16:28.148"/>
</kw>
<status status="PASS" starttime="20250304 04:16:28.104" endtime="20250304 04:16:28.148"/>
</kw>
<status status="PASS" starttime="20250304 04:16:28.093" endtime="20250304 04:16:28.148"/>
</kw>
<status status="PASS" starttime="20250304 04:16:28.093" endtime="20250304 04:16:28.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:28.152" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:30.402" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:16:30.402" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:16:28.149" endtime="20250304 04:16:30.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:30.403" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:16:30.402" endtime="20250304 04:16:30.403"/>
</kw>
<msg timestamp="20250304 04:16:30.403" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:16:28.149" endtime="20250304 04:16:30.403"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:30.403" endtime="20250304 04:16:30.404"/>
</kw>
<msg timestamp="20250304 04:16:30.404" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:16:30.403" endtime="20250304 04:16:30.404"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:30.407" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:32.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:32.842" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:16:30.405" endtime="20250304 04:16:32.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:32.843" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:16:32.842" endtime="20250304 04:16:32.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:32.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:32.843" endtime="20250304 04:16:32.843"/>
</kw>
<status status="PASS" starttime="20250304 04:16:30.405" endtime="20250304 04:16:32.844"/>
</kw>
<msg timestamp="20250304 04:16:32.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:30.404" endtime="20250304 04:16:32.844"/>
</kw>
<status status="PASS" starttime="20250304 04:16:30.404" endtime="20250304 04:16:32.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:32.848" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:35.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:35.606" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f02b69d04035da8dd6c18535a31574d9d45214c725ee2aebd919240471ba4f21</msg>
<status status="PASS" starttime="20250304 04:16:32.845" endtime="20250304 04:16:35.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:35.607" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f02b69d04035da8dd6c18535a31574d9d45214c725ee2aebd919240471ba4f21</msg>
<status status="PASS" starttime="20250304 04:16:35.606" endtime="20250304 04:16:35.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:35.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:35.607" endtime="20250304 04:16:35.608"/>
</kw>
<status status="PASS" starttime="20250304 04:16:32.845" endtime="20250304 04:16:35.608"/>
</kw>
<msg timestamp="20250304 04:16:35.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:32.844" endtime="20250304 04:16:35.608"/>
</kw>
<msg timestamp="20250304 04:16:35.608" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f02b69d04035da8dd6c18535a31574d9d45214c725ee2aebd919240471ba4f21</msg>
<status status="PASS" starttime="20250304 04:16:32.844" endtime="20250304 04:16:35.608"/>
</kw>
<status status="PASS" starttime="20250304 04:16:30.404" endtime="20250304 04:16:35.608"/>
</branch>
<status status="PASS" starttime="20250304 04:16:30.404" endtime="20250304 04:16:35.608"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:16:35.609" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:16:35.608" endtime="20250304 04:16:35.609"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:16:35.609" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:16:35.609" endtime="20250304 04:16:35.609"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:16:35.609" level="INFO">${secret} = ['f02b69d04035da8dd6c18535a31574d9d45214c725ee2aebd919240471ba4f21']</msg>
<status status="PASS" starttime="20250304 04:16:35.609" endtime="20250304 04:16:35.610"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:16:35.610" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:35.610" endtime="20250304 04:16:35.610"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:16:35.611" level="INFO">${secret} = f02b69d04035da8dd6c18535a31574d9d45214c725ee2aebd919240471ba4f21</msg>
<status status="PASS" starttime="20250304 04:16:35.611" endtime="20250304 04:16:35.611"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:35.615" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:35.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:35.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:35.612" endtime="20250304 04:16:35.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:35.985" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:35.984" endtime="20250304 04:16:35.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:35.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:35.985" endtime="20250304 04:16:35.985"/>
</kw>
<status status="PASS" starttime="20250304 04:16:35.612" endtime="20250304 04:16:35.985"/>
</kw>
<msg timestamp="20250304 04:16:35.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:35.612" endtime="20250304 04:16:35.985"/>
</kw>
<status status="PASS" starttime="20250304 04:16:35.611" endtime="20250304 04:16:35.986"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:35.989" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:36.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:36.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:35.987" endtime="20250304 04:16:36.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:36.352" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:36.352" endtime="20250304 04:16:36.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:36.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:36.353" endtime="20250304 04:16:36.353"/>
</kw>
<status status="PASS" starttime="20250304 04:16:35.986" endtime="20250304 04:16:36.353"/>
</kw>
<msg timestamp="20250304 04:16:36.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:35.986" endtime="20250304 04:16:36.353"/>
</kw>
<status status="PASS" starttime="20250304 04:16:35.986" endtime="20250304 04:16:36.353"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:36.357" level="INFO">Running command 'aws configure set aws_secret_access_key f02b69d04035da8dd6c18535a31574d9d45214c725ee2aebd919240471ba4f21 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:36.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:36.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:36.355" endtime="20250304 04:16:36.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:36.725" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:36.724" endtime="20250304 04:16:36.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:36.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:36.725" endtime="20250304 04:16:36.725"/>
</kw>
<status status="PASS" starttime="20250304 04:16:36.354" endtime="20250304 04:16:36.725"/>
</kw>
<msg timestamp="20250304 04:16:36.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:36.354" endtime="20250304 04:16:36.726"/>
</kw>
<status status="PASS" starttime="20250304 04:16:36.354" endtime="20250304 04:16:36.726"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:36.729" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:37.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:37.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:36.727" endtime="20250304 04:16:37.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:37.114" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:37.113" endtime="20250304 04:16:37.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:37.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:37.114" endtime="20250304 04:16:37.114"/>
</kw>
<status status="PASS" starttime="20250304 04:16:36.726" endtime="20250304 04:16:37.115"/>
</kw>
<msg timestamp="20250304 04:16:37.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:36.726" endtime="20250304 04:16:37.115"/>
</kw>
<status status="PASS" starttime="20250304 04:16:36.726" endtime="20250304 04:16:37.115"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:37.118" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:37.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:37.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:37.116" endtime="20250304 04:16:37.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:37.520" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:37.519" endtime="20250304 04:16:37.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:37.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:37.520" endtime="20250304 04:16:37.520"/>
</kw>
<status status="PASS" starttime="20250304 04:16:37.116" endtime="20250304 04:16:37.521"/>
</kw>
<msg timestamp="20250304 04:16:37.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:37.115" endtime="20250304 04:16:37.521"/>
</kw>
<status status="PASS" starttime="20250304 04:16:37.115" endtime="20250304 04:16:37.521"/>
</kw>
<status status="PASS" starttime="20250304 04:16:28.149" endtime="20250304 04:16:37.521"/>
</kw>
<status status="PASS" starttime="20250304 04:16:28.148" endtime="20250304 04:16:37.521"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:16:37.521" endtime="20250304 04:16:37.521"/>
</kw>
<status status="PASS" starttime="20250304 04:16:28.092" endtime="20250304 04:16:37.521"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:37.525" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:38.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:38.143" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:46 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:16:37.523" endtime="20250304 04:16:38.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:38.144" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:46 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:16:38 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:16:38 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:16:38.144" endtime="20250304 04:16:38.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:38.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:38.144" endtime="20250304 04:16:38.145"/>
</kw>
<msg timestamp="20250304 04:16:38.145" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:46 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:16:37.522" endtime="20250304 04:16:38.145"/>
</kw>
<msg timestamp="20250304 04:16:38.145" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:46 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:16:37.522" endtime="20250304 04:16:38.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:38.145" endtime="20250304 04:16:38.145"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:38.148" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:38.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:38.153" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:16:38.146" endtime="20250304 04:16:38.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:38.153" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:16:38.153" endtime="20250304 04:16:38.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:38.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:38.154" endtime="20250304 04:16:38.154"/>
</kw>
<msg timestamp="20250304 04:16:38.154" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:16:38.146" endtime="20250304 04:16:38.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:38.154" endtime="20250304 04:16:38.155"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:38.157" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:38.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:38.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:38.155" endtime="20250304 04:16:38.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:38.162" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:38.161" endtime="20250304 04:16:38.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:38.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:38.162" endtime="20250304 04:16:38.162"/>
</kw>
<status status="PASS" starttime="20250304 04:16:38.155" endtime="20250304 04:16:38.163"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:16:28.092" endtime="20250304 04:16:38.163"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 04:16:13.383" endtime="20250304 04:16:38.164"/>
</suite>
<suite id="s1-s13" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-generate-old2" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:16:38.867" endtime="20250304 04:16:38.867"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:38.870" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:38.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:38.875" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:16:38.868" endtime="20250304 04:16:38.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:38.875" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:16:38.875" endtime="20250304 04:16:38.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:38.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:38.876" endtime="20250304 04:16:38.876"/>
</kw>
<status status="PASS" starttime="20250304 04:16:38.867" endtime="20250304 04:16:38.876"/>
</kw>
<msg timestamp="20250304 04:16:38.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:38.867" endtime="20250304 04:16:38.876"/>
</kw>
<msg timestamp="20250304 04:16:38.876" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:16:38.867" endtime="20250304 04:16:38.876"/>
</kw>
<msg timestamp="20250304 04:16:38.877" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:38.867" endtime="20250304 04:16:38.877"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:16:38.877" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:38.877" endtime="20250304 04:16:38.877"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:38.880" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:38.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:38.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:38.878" endtime="20250304 04:16:38.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:38.908" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:38.907" endtime="20250304 04:16:38.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:38.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:38.908" endtime="20250304 04:16:38.908"/>
</kw>
<status status="PASS" starttime="20250304 04:16:38.878" endtime="20250304 04:16:38.908"/>
</kw>
<msg timestamp="20250304 04:16:38.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:38.878" endtime="20250304 04:16:38.908"/>
</kw>
<status status="PASS" starttime="20250304 04:16:38.878" endtime="20250304 04:16:38.909"/>
</kw>
<status status="PASS" starttime="20250304 04:16:38.877" endtime="20250304 04:16:38.909"/>
</kw>
<status status="PASS" starttime="20250304 04:16:38.866" endtime="20250304 04:16:38.909"/>
</kw>
<status status="PASS" starttime="20250304 04:16:38.866" endtime="20250304 04:16:38.909"/>
</kw>
<test id="s1-s13-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:38.913" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:41.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:41.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:38.910" endtime="20250304 04:16:41.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:41.663" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:41.663" endtime="20250304 04:16:41.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:41.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:41.664" endtime="20250304 04:16:41.664"/>
</kw>
<status status="PASS" starttime="20250304 04:16:38.910" endtime="20250304 04:16:41.665"/>
</kw>
<msg timestamp="20250304 04:16:41.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:38.910" endtime="20250304 04:16:41.665"/>
</kw>
<msg timestamp="20250304 04:16:41.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:38.909" endtime="20250304 04:16:41.665"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:41.665" endtime="20250304 04:16:41.665"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:41.670" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:44.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:44.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:41.667" endtime="20250304 04:16:44.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:44.990" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:44.990" endtime="20250304 04:16:44.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:44.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:44.990" endtime="20250304 04:16:44.991"/>
</kw>
<status status="PASS" starttime="20250304 04:16:41.666" endtime="20250304 04:16:44.991"/>
</kw>
<msg timestamp="20250304 04:16:44.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:41.666" endtime="20250304 04:16:44.991"/>
</kw>
<msg timestamp="20250304 04:16:44.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:41.666" endtime="20250304 04:16:44.991"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:44.991" endtime="20250304 04:16:44.992"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:16:38.909" endtime="20250304 04:16:44.992"/>
</test>
<test id="s1-s13-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:44.996" level="INFO">Running command 'echo "old2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:16:44.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:44.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:44.993" endtime="20250304 04:16:44.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:44.999" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:44.998" endtime="20250304 04:16:44.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:44.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:44.999" endtime="20250304 04:16:44.999"/>
</kw>
<status status="PASS" starttime="20250304 04:16:44.993" endtime="20250304 04:16:44.999"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:45.002" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:49.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:49.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:45.000" endtime="20250304 04:16:49.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:49.833" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:49.833" endtime="20250304 04:16:49.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:49.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:49.833" endtime="20250304 04:16:49.834"/>
</kw>
<status status="PASS" starttime="20250304 04:16:45.000" endtime="20250304 04:16:49.834"/>
</kw>
<msg timestamp="20250304 04:16:49.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:45.000" endtime="20250304 04:16:49.834"/>
</kw>
<msg timestamp="20250304 04:16:49.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:44.999" endtime="20250304 04:16:49.834"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:49.834" endtime="20250304 04:16:49.834"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:49.837" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:49.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:49.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:49.835" endtime="20250304 04:16:49.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:49.842" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:49.842" endtime="20250304 04:16:49.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:49.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:49.842" endtime="20250304 04:16:49.843"/>
</kw>
<status status="PASS" starttime="20250304 04:16:49.834" endtime="20250304 04:16:49.843"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:16:44.992" endtime="20250304 04:16:49.843"/>
</test>
<test id="s1-s13-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:49.848" level="INFO">Running command 'ozone sh bucket create /s3v/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:52.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:52.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:49.845" endtime="20250304 04:16:52.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:52.935" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:52.934" endtime="20250304 04:16:52.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:52.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:52.935" endtime="20250304 04:16:52.936"/>
</kw>
<status status="PASS" starttime="20250304 04:16:49.845" endtime="20250304 04:16:52.936"/>
</kw>
<msg timestamp="20250304 04:16:52.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:49.844" endtime="20250304 04:16:52.936"/>
</kw>
<msg timestamp="20250304 04:16:52.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:49.844" endtime="20250304 04:16:52.936"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:52.937" endtime="20250304 04:16:52.937"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:16:49.843" endtime="20250304 04:16:52.937"/>
</test>
<test id="s1-s13-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:52.942" level="INFO">Running command 'echo "old2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:16:52.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:52.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:52.939" endtime="20250304 04:16:52.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:52.946" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:52.945" endtime="20250304 04:16:52.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:52.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:52.946" endtime="20250304 04:16:52.946"/>
</kw>
<status status="PASS" starttime="20250304 04:16:52.939" endtime="20250304 04:16:52.946"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:52.950" level="INFO">Running command 'ozone sh key put /s3v/old2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:57.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:57.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:52.948" endtime="20250304 04:16:57.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:57.973" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:57.973" endtime="20250304 04:16:57.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:57.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:57.973" endtime="20250304 04:16:57.974"/>
</kw>
<status status="PASS" starttime="20250304 04:16:52.947" endtime="20250304 04:16:57.974"/>
</kw>
<msg timestamp="20250304 04:16:57.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:52.947" endtime="20250304 04:16:57.974"/>
</kw>
<msg timestamp="20250304 04:16:57.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:52.947" endtime="20250304 04:16:57.974"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:16:57.974" endtime="20250304 04:16:57.975"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:57.977" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:57.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:57.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:57.975" endtime="20250304 04:16:57.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:57.982" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:57.982" endtime="20250304 04:16:57.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:57.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:57.982" endtime="20250304 04:16:57.983"/>
</kw>
<status status="PASS" starttime="20250304 04:16:57.975" endtime="20250304 04:16:57.983"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:16:52.938" endtime="20250304 04:16:57.983"/>
</test>
<test id="s1-s13-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:16:57.985" endtime="20250304 04:16:57.985"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:57.988" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:57.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:57.992" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:16:57.986" endtime="20250304 04:16:57.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:57.993" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:16:57.993" endtime="20250304 04:16:57.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:57.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:57.993" endtime="20250304 04:16:57.994"/>
</kw>
<status status="PASS" starttime="20250304 04:16:57.986" endtime="20250304 04:16:57.994"/>
</kw>
<msg timestamp="20250304 04:16:57.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:57.986" endtime="20250304 04:16:57.994"/>
</kw>
<msg timestamp="20250304 04:16:57.994" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:16:57.985" endtime="20250304 04:16:57.994"/>
</kw>
<msg timestamp="20250304 04:16:57.994" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:57.985" endtime="20250304 04:16:57.994"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:16:57.995" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:16:57.994" endtime="20250304 04:16:57.995"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:57.998" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:16:58.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:16:58.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:16:57.996" endtime="20250304 04:16:58.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:16:58.029" level="INFO"/>
<status status="PASS" starttime="20250304 04:16:58.028" endtime="20250304 04:16:58.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:16:58.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:16:58.029" endtime="20250304 04:16:58.030"/>
</kw>
<status status="PASS" starttime="20250304 04:16:57.996" endtime="20250304 04:16:58.030"/>
</kw>
<msg timestamp="20250304 04:16:58.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:16:57.996" endtime="20250304 04:16:58.030"/>
</kw>
<status status="PASS" starttime="20250304 04:16:57.995" endtime="20250304 04:16:58.030"/>
</kw>
<status status="PASS" starttime="20250304 04:16:57.995" endtime="20250304 04:16:58.030"/>
</kw>
<status status="PASS" starttime="20250304 04:16:57.985" endtime="20250304 04:16:58.030"/>
</kw>
<status status="PASS" starttime="20250304 04:16:57.984" endtime="20250304 04:16:58.031"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:16:58.035" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:00.605" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:17:00.605" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:16:58.032" endtime="20250304 04:17:00.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:00.606" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:17:00.606" endtime="20250304 04:17:00.606"/>
</kw>
<msg timestamp="20250304 04:17:00.607" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:16:58.032" endtime="20250304 04:17:00.607"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:00.607" endtime="20250304 04:17:00.607"/>
</kw>
<msg timestamp="20250304 04:17:00.608" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:17:00.607" endtime="20250304 04:17:00.608"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:00.611" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:03.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:03.130" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:17:00.609" endtime="20250304 04:17:03.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:03.132" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:17:03.131" endtime="20250304 04:17:03.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:03.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:03.132" endtime="20250304 04:17:03.133"/>
</kw>
<status status="PASS" starttime="20250304 04:17:00.609" endtime="20250304 04:17:03.133"/>
</kw>
<msg timestamp="20250304 04:17:03.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:00.608" endtime="20250304 04:17:03.133"/>
</kw>
<status status="PASS" starttime="20250304 04:17:00.608" endtime="20250304 04:17:03.133"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:03.140" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:06.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:06.044" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=748eeb2cebe276e244c4d339217063f2ea6646f2bc4ceb9d373c8e39cdaece98</msg>
<status status="PASS" starttime="20250304 04:17:03.135" endtime="20250304 04:17:06.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:06.045" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=748eeb2cebe276e244c4d339217063f2ea6646f2bc4ceb9d373c8e39cdaece98</msg>
<status status="PASS" starttime="20250304 04:17:06.045" endtime="20250304 04:17:06.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:06.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:06.046" endtime="20250304 04:17:06.046"/>
</kw>
<status status="PASS" starttime="20250304 04:17:03.134" endtime="20250304 04:17:06.046"/>
</kw>
<msg timestamp="20250304 04:17:06.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:03.134" endtime="20250304 04:17:06.046"/>
</kw>
<msg timestamp="20250304 04:17:06.046" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=748eeb2cebe276e244c4d339217063f2ea6646f2bc4ceb9d373c8e39cdaece98</msg>
<status status="PASS" starttime="20250304 04:17:03.134" endtime="20250304 04:17:06.046"/>
</kw>
<status status="PASS" starttime="20250304 04:17:00.608" endtime="20250304 04:17:06.046"/>
</branch>
<status status="PASS" starttime="20250304 04:17:00.608" endtime="20250304 04:17:06.047"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:17:06.047" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:17:06.047" endtime="20250304 04:17:06.047"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:17:06.048" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:17:06.047" endtime="20250304 04:17:06.048"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:17:06.048" level="INFO">${secret} = ['748eeb2cebe276e244c4d339217063f2ea6646f2bc4ceb9d373c8e39cdaece98']</msg>
<status status="PASS" starttime="20250304 04:17:06.048" endtime="20250304 04:17:06.048"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:17:06.049" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:06.048" endtime="20250304 04:17:06.049"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:17:06.050" level="INFO">${secret} = 748eeb2cebe276e244c4d339217063f2ea6646f2bc4ceb9d373c8e39cdaece98</msg>
<status status="PASS" starttime="20250304 04:17:06.049" endtime="20250304 04:17:06.050"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:06.053" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:06.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:06.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:06.051" endtime="20250304 04:17:06.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:06.425" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:06.424" endtime="20250304 04:17:06.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:06.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:06.425" endtime="20250304 04:17:06.425"/>
</kw>
<status status="PASS" starttime="20250304 04:17:06.051" endtime="20250304 04:17:06.426"/>
</kw>
<msg timestamp="20250304 04:17:06.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:06.050" endtime="20250304 04:17:06.426"/>
</kw>
<status status="PASS" starttime="20250304 04:17:06.050" endtime="20250304 04:17:06.426"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:06.429" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:06.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:06.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:06.427" endtime="20250304 04:17:06.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:06.801" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:06.800" endtime="20250304 04:17:06.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:06.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:06.801" endtime="20250304 04:17:06.801"/>
</kw>
<status status="PASS" starttime="20250304 04:17:06.427" endtime="20250304 04:17:06.802"/>
</kw>
<msg timestamp="20250304 04:17:06.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:06.426" endtime="20250304 04:17:06.802"/>
</kw>
<status status="PASS" starttime="20250304 04:17:06.426" endtime="20250304 04:17:06.802"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:06.806" level="INFO">Running command 'aws configure set aws_secret_access_key 748eeb2cebe276e244c4d339217063f2ea6646f2bc4ceb9d373c8e39cdaece98 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:07.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:07.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:06.803" endtime="20250304 04:17:07.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:07.191" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:07.190" endtime="20250304 04:17:07.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:07.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:07.191" endtime="20250304 04:17:07.191"/>
</kw>
<status status="PASS" starttime="20250304 04:17:06.803" endtime="20250304 04:17:07.192"/>
</kw>
<msg timestamp="20250304 04:17:07.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:06.802" endtime="20250304 04:17:07.192"/>
</kw>
<status status="PASS" starttime="20250304 04:17:06.802" endtime="20250304 04:17:07.192"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:07.195" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:07.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:07.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:07.193" endtime="20250304 04:17:07.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:07.565" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:07.564" endtime="20250304 04:17:07.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:07.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:07.565" endtime="20250304 04:17:07.565"/>
</kw>
<status status="PASS" starttime="20250304 04:17:07.192" endtime="20250304 04:17:07.565"/>
</kw>
<msg timestamp="20250304 04:17:07.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:07.192" endtime="20250304 04:17:07.566"/>
</kw>
<status status="PASS" starttime="20250304 04:17:07.192" endtime="20250304 04:17:07.566"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:07.569" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:07.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:07.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:07.567" endtime="20250304 04:17:07.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:07.999" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:07.998" endtime="20250304 04:17:07.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:07.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:07.999" endtime="20250304 04:17:07.999"/>
</kw>
<status status="PASS" starttime="20250304 04:17:07.566" endtime="20250304 04:17:07.999"/>
</kw>
<msg timestamp="20250304 04:17:07.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:07.566" endtime="20250304 04:17:07.999"/>
</kw>
<status status="PASS" starttime="20250304 04:17:07.566" endtime="20250304 04:17:08.000"/>
</kw>
<status status="PASS" starttime="20250304 04:16:58.031" endtime="20250304 04:17:08.000"/>
</kw>
<status status="PASS" starttime="20250304 04:16:58.031" endtime="20250304 04:17:08.000"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:17:08.000" endtime="20250304 04:17:08.000"/>
</kw>
<status status="PASS" starttime="20250304 04:16:57.984" endtime="20250304 04:17:08.000"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:17:08.001" level="INFO">${randStr} = 8641415589</msg>
<status status="PASS" starttime="20250304 04:17:08.001" endtime="20250304 04:17:08.001"/>
</kw>
<msg timestamp="20250304 04:17:08.001" level="INFO">${random} = ozone-test-8641415589</msg>
<status status="PASS" starttime="20250304 04:17:08.000" endtime="20250304 04:17:08.001"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:08.005" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old2-bucket-ozone-test-8641415589 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:08.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:08.584" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-8641415589"
}</msg>
<status status="PASS" starttime="20250304 04:17:08.003" endtime="20250304 04:17:08.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:08.585" level="INFO">{
    "Location": "http://s3g:9878/old2-bucket-ozone-test-8641415589"
}</msg>
<status status="PASS" starttime="20250304 04:17:08.584" endtime="20250304 04:17:08.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:08.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:08.585" endtime="20250304 04:17:08.585"/>
</kw>
<status status="PASS" starttime="20250304 04:17:08.003" endtime="20250304 04:17:08.586"/>
</kw>
<msg timestamp="20250304 04:17:08.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:08.002" endtime="20250304 04:17:08.586"/>
</kw>
<msg timestamp="20250304 04:17:08.586" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-8641415589"
}</msg>
<status status="PASS" starttime="20250304 04:17:08.002" endtime="20250304 04:17:08.586"/>
</kw>
<msg timestamp="20250304 04:17:08.586" level="INFO">${result} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-8641415589"
}</msg>
<status status="PASS" starttime="20250304 04:17:08.002" endtime="20250304 04:17:08.586"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:08.586" endtime="20250304 04:17:08.586"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:08.587" endtime="20250304 04:17:08.587"/>
</kw>
<msg timestamp="20250304 04:17:08.587" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20250304 04:17:08.001" endtime="20250304 04:17:08.587"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250304 04:17:08.587" endtime="20250304 04:17:08.587"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:16:57.984" endtime="20250304 04:17:08.588"/>
</test>
<test id="s1-s13-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:08.591" level="INFO">Running command 'echo "old2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:17:08.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:08.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:08.589" endtime="20250304 04:17:08.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:08.594" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:08.594" endtime="20250304 04:17:08.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:08.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:08.595" endtime="20250304 04:17:08.595"/>
</kw>
<status status="PASS" starttime="20250304 04:17:08.588" endtime="20250304 04:17:08.595"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:08.598" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:09.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:09.433" level="INFO">${output} = {
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\""
}</msg>
<status status="PASS" starttime="20250304 04:17:08.596" endtime="20250304 04:17:09.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:09.434" level="INFO">{
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\""
}</msg>
<status status="PASS" starttime="20250304 04:17:09.434" endtime="20250304 04:17:09.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:09.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:09.434" endtime="20250304 04:17:09.435"/>
</kw>
<msg timestamp="20250304 04:17:09.435" level="INFO">${output} = {
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\""
}</msg>
<status status="PASS" starttime="20250304 04:17:08.596" endtime="20250304 04:17:09.435"/>
</kw>
<msg timestamp="20250304 04:17:09.435" level="INFO">${output} = {
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\""
}</msg>
<status status="PASS" starttime="20250304 04:17:08.595" endtime="20250304 04:17:09.435"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:09.435" endtime="20250304 04:17:09.436"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:09.438" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:09.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:09.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:09.436" endtime="20250304 04:17:09.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:09.443" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:09.443" endtime="20250304 04:17:09.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:09.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:09.443" endtime="20250304 04:17:09.444"/>
</kw>
<status status="PASS" starttime="20250304 04:17:09.436" endtime="20250304 04:17:09.444"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:17:08.588" endtime="20250304 04:17:09.444"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20250304 04:16:38.810" endtime="20250304 04:17:09.445"/>
</suite>
<suite id="s1-s14" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-validate-old2" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:17:10.182" endtime="20250304 04:17:10.182"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:10.185" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:10.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:10.189" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:17:10.183" endtime="20250304 04:17:10.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:10.190" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:17:10.190" endtime="20250304 04:17:10.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:10.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:10.190" endtime="20250304 04:17:10.190"/>
</kw>
<status status="PASS" starttime="20250304 04:17:10.183" endtime="20250304 04:17:10.191"/>
</kw>
<msg timestamp="20250304 04:17:10.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:10.183" endtime="20250304 04:17:10.191"/>
</kw>
<msg timestamp="20250304 04:17:10.191" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:17:10.182" endtime="20250304 04:17:10.191"/>
</kw>
<msg timestamp="20250304 04:17:10.191" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:10.182" endtime="20250304 04:17:10.191"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:17:10.191" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:10.191" endtime="20250304 04:17:10.192"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:10.195" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:10.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:10.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:10.193" endtime="20250304 04:17:10.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:10.211" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:10.211" endtime="20250304 04:17:10.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:10.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:10.211" endtime="20250304 04:17:10.212"/>
</kw>
<status status="PASS" starttime="20250304 04:17:10.192" endtime="20250304 04:17:10.212"/>
</kw>
<msg timestamp="20250304 04:17:10.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:10.192" endtime="20250304 04:17:10.212"/>
</kw>
<status status="PASS" starttime="20250304 04:17:10.192" endtime="20250304 04:17:10.212"/>
</kw>
<status status="PASS" starttime="20250304 04:17:10.192" endtime="20250304 04:17:10.212"/>
</kw>
<status status="PASS" starttime="20250304 04:17:10.182" endtime="20250304 04:17:10.212"/>
</kw>
<status status="PASS" starttime="20250304 04:17:10.181" endtime="20250304 04:17:10.212"/>
</kw>
<test id="s1-s14-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:17:10.213" level="INFO">${random} = 50417</msg>
<status status="PASS" starttime="20250304 04:17:10.213" endtime="20250304 04:17:10.213"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:10.217" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-50417 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:14.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:14.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:10.215" endtime="20250304 04:17:14.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:14.361" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:14.361" endtime="20250304 04:17:14.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:14.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:14.361" endtime="20250304 04:17:14.362"/>
</kw>
<status status="PASS" starttime="20250304 04:17:10.214" endtime="20250304 04:17:14.362"/>
</kw>
<msg timestamp="20250304 04:17:14.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:10.214" endtime="20250304 04:17:14.362"/>
</kw>
<msg timestamp="20250304 04:17:14.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:10.214" endtime="20250304 04:17:14.362"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:14.362" endtime="20250304 04:17:14.363"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:14.366" level="INFO">Running command 'cat /tmp/key-50417 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:14.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:14.370" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:17:14.363" endtime="20250304 04:17:14.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:14.370" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:17:14.370" endtime="20250304 04:17:14.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:14.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:14.370" endtime="20250304 04:17:14.371"/>
</kw>
<msg timestamp="20250304 04:17:14.371" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:17:14.363" endtime="20250304 04:17:14.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:14.371" endtime="20250304 04:17:14.371"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:14.374" level="INFO">Running command 'rm /tmp/key-50417 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:14.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:14.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:14.372" endtime="20250304 04:17:14.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:14.380" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:14.379" endtime="20250304 04:17:14.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:14.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:14.380" endtime="20250304 04:17:14.380"/>
</kw>
<status status="PASS" starttime="20250304 04:17:14.372" endtime="20250304 04:17:14.381"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:17:10.213" endtime="20250304 04:17:14.381"/>
</test>
<test id="s1-s14-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:17:14.383" endtime="20250304 04:17:14.383"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:14.387" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:14.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:14.391" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:17:14.384" endtime="20250304 04:17:14.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:14.391" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:17:14.391" endtime="20250304 04:17:14.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:14.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:14.392" endtime="20250304 04:17:14.392"/>
</kw>
<status status="PASS" starttime="20250304 04:17:14.384" endtime="20250304 04:17:14.392"/>
</kw>
<msg timestamp="20250304 04:17:14.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:14.384" endtime="20250304 04:17:14.392"/>
</kw>
<msg timestamp="20250304 04:17:14.392" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:17:14.384" endtime="20250304 04:17:14.392"/>
</kw>
<msg timestamp="20250304 04:17:14.392" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:14.383" endtime="20250304 04:17:14.393"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:17:14.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:14.393" endtime="20250304 04:17:14.393"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:14.396" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:14.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:14.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:14.394" endtime="20250304 04:17:14.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:14.414" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:14.413" endtime="20250304 04:17:14.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:14.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:14.414" endtime="20250304 04:17:14.414"/>
</kw>
<status status="PASS" starttime="20250304 04:17:14.394" endtime="20250304 04:17:14.414"/>
</kw>
<msg timestamp="20250304 04:17:14.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:14.394" endtime="20250304 04:17:14.414"/>
</kw>
<status status="PASS" starttime="20250304 04:17:14.393" endtime="20250304 04:17:14.415"/>
</kw>
<status status="PASS" starttime="20250304 04:17:14.393" endtime="20250304 04:17:14.415"/>
</kw>
<status status="PASS" starttime="20250304 04:17:14.383" endtime="20250304 04:17:14.415"/>
</kw>
<status status="PASS" starttime="20250304 04:17:14.382" endtime="20250304 04:17:14.415"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:14.418" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:16.988" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:17:16.988" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:17:14.416" endtime="20250304 04:17:16.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:16.989" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:17:16.989" endtime="20250304 04:17:16.990"/>
</kw>
<msg timestamp="20250304 04:17:16.990" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:17:14.415" endtime="20250304 04:17:16.990"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:16.990" endtime="20250304 04:17:16.990"/>
</kw>
<msg timestamp="20250304 04:17:16.991" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:17:16.990" endtime="20250304 04:17:16.991"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:16.994" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:19.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:19.469" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:17:16.992" endtime="20250304 04:17:19.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:19.470" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:17:19.469" endtime="20250304 04:17:19.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:19.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:19.470" endtime="20250304 04:17:19.471"/>
</kw>
<status status="PASS" starttime="20250304 04:17:16.992" endtime="20250304 04:17:19.471"/>
</kw>
<msg timestamp="20250304 04:17:19.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:16.991" endtime="20250304 04:17:19.471"/>
</kw>
<status status="PASS" starttime="20250304 04:17:16.991" endtime="20250304 04:17:19.471"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:19.476" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:21.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:21.951" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=2d6b38f70d2735ec13b80285cf020c3ca4bae881efdb36bc8ff882a10b2e517b</msg>
<status status="PASS" starttime="20250304 04:17:19.473" endtime="20250304 04:17:21.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:21.952" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=2d6b38f70d2735ec13b80285cf020c3ca4bae881efdb36bc8ff882a10b2e517b</msg>
<status status="PASS" starttime="20250304 04:17:21.952" endtime="20250304 04:17:21.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:21.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:21.953" endtime="20250304 04:17:21.953"/>
</kw>
<status status="PASS" starttime="20250304 04:17:19.472" endtime="20250304 04:17:21.953"/>
</kw>
<msg timestamp="20250304 04:17:21.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:19.472" endtime="20250304 04:17:21.953"/>
</kw>
<msg timestamp="20250304 04:17:21.954" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=2d6b38f70d2735ec13b80285cf020c3ca4bae881efdb36bc8ff882a10b2e517b</msg>
<status status="PASS" starttime="20250304 04:17:19.471" endtime="20250304 04:17:21.954"/>
</kw>
<status status="PASS" starttime="20250304 04:17:16.991" endtime="20250304 04:17:21.954"/>
</branch>
<status status="PASS" starttime="20250304 04:17:16.991" endtime="20250304 04:17:21.954"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:17:21.954" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:17:21.954" endtime="20250304 04:17:21.954"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:17:21.955" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:17:21.954" endtime="20250304 04:17:21.955"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:17:21.955" level="INFO">${secret} = ['2d6b38f70d2735ec13b80285cf020c3ca4bae881efdb36bc8ff882a10b2e517b']</msg>
<status status="PASS" starttime="20250304 04:17:21.955" endtime="20250304 04:17:21.955"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:17:21.956" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:21.955" endtime="20250304 04:17:21.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:17:21.957" level="INFO">${secret} = 2d6b38f70d2735ec13b80285cf020c3ca4bae881efdb36bc8ff882a10b2e517b</msg>
<status status="PASS" starttime="20250304 04:17:21.956" endtime="20250304 04:17:21.957"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:21.961" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:22.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:22.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:21.958" endtime="20250304 04:17:22.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:22.354" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:22.353" endtime="20250304 04:17:22.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:22.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:22.354" endtime="20250304 04:17:22.354"/>
</kw>
<status status="PASS" starttime="20250304 04:17:21.958" endtime="20250304 04:17:22.354"/>
</kw>
<msg timestamp="20250304 04:17:22.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:21.958" endtime="20250304 04:17:22.355"/>
</kw>
<status status="PASS" starttime="20250304 04:17:21.957" endtime="20250304 04:17:22.355"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:22.358" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:22.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:22.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:22.356" endtime="20250304 04:17:22.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:22.755" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:22.755" endtime="20250304 04:17:22.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:22.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:22.755" endtime="20250304 04:17:22.756"/>
</kw>
<status status="PASS" starttime="20250304 04:17:22.355" endtime="20250304 04:17:22.756"/>
</kw>
<msg timestamp="20250304 04:17:22.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:22.355" endtime="20250304 04:17:22.756"/>
</kw>
<status status="PASS" starttime="20250304 04:17:22.355" endtime="20250304 04:17:22.756"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:22.760" level="INFO">Running command 'aws configure set aws_secret_access_key 2d6b38f70d2735ec13b80285cf020c3ca4bae881efdb36bc8ff882a10b2e517b 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:23.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:23.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:22.757" endtime="20250304 04:17:23.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:23.151" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:23.150" endtime="20250304 04:17:23.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:23.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:23.151" endtime="20250304 04:17:23.152"/>
</kw>
<status status="PASS" starttime="20250304 04:17:22.757" endtime="20250304 04:17:23.152"/>
</kw>
<msg timestamp="20250304 04:17:23.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:22.757" endtime="20250304 04:17:23.152"/>
</kw>
<status status="PASS" starttime="20250304 04:17:22.756" endtime="20250304 04:17:23.152"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:23.155" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:23.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:23.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:23.153" endtime="20250304 04:17:23.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:23.546" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:23.545" endtime="20250304 04:17:23.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:23.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:23.546" endtime="20250304 04:17:23.546"/>
</kw>
<status status="PASS" starttime="20250304 04:17:23.153" endtime="20250304 04:17:23.546"/>
</kw>
<msg timestamp="20250304 04:17:23.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:23.152" endtime="20250304 04:17:23.546"/>
</kw>
<status status="PASS" starttime="20250304 04:17:23.152" endtime="20250304 04:17:23.547"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:23.550" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:23.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:23.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:23.548" endtime="20250304 04:17:23.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:23.954" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:23.954" endtime="20250304 04:17:23.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:23.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:23.954" endtime="20250304 04:17:23.955"/>
</kw>
<status status="PASS" starttime="20250304 04:17:23.547" endtime="20250304 04:17:23.955"/>
</kw>
<msg timestamp="20250304 04:17:23.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:23.547" endtime="20250304 04:17:23.955"/>
</kw>
<status status="PASS" starttime="20250304 04:17:23.547" endtime="20250304 04:17:23.955"/>
</kw>
<status status="PASS" starttime="20250304 04:17:14.415" endtime="20250304 04:17:23.955"/>
</kw>
<status status="PASS" starttime="20250304 04:17:14.415" endtime="20250304 04:17:23.955"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:17:23.955" endtime="20250304 04:17:23.956"/>
</kw>
<status status="PASS" starttime="20250304 04:17:14.382" endtime="20250304 04:17:23.956"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:23.959" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:24.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:24.567" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:16:57 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:17:23.957" endtime="20250304 04:17:24.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:24.568" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:16:57 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:17:24 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:17:24 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:17:24.568" endtime="20250304 04:17:24.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:24.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:24.569" endtime="20250304 04:17:24.569"/>
</kw>
<msg timestamp="20250304 04:17:24.569" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:16:57 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:17:23.956" endtime="20250304 04:17:24.569"/>
</kw>
<msg timestamp="20250304 04:17:24.569" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:16:57 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:17:23.956" endtime="20250304 04:17:24.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:24.569" endtime="20250304 04:17:24.570"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:24.573" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:24.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:24.577" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:17:24.570" endtime="20250304 04:17:24.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:24.577" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:17:24.577" endtime="20250304 04:17:24.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:24.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:24.578" endtime="20250304 04:17:24.578"/>
</kw>
<msg timestamp="20250304 04:17:24.578" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:17:24.570" endtime="20250304 04:17:24.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:24.578" endtime="20250304 04:17:24.579"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:24.581" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:24.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:24.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:24.579" endtime="20250304 04:17:24.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:24.586" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:24.586" endtime="20250304 04:17:24.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:24.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:24.586" endtime="20250304 04:17:24.587"/>
</kw>
<status status="PASS" starttime="20250304 04:17:24.579" endtime="20250304 04:17:24.587"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:17:14.381" endtime="20250304 04:17:24.587"/>
</test>
<test id="s1-s14-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:17:24.590" endtime="20250304 04:17:24.590"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:24.594" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:24.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:24.598" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:17:24.591" endtime="20250304 04:17:24.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:24.598" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:17:24.598" endtime="20250304 04:17:24.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:24.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:24.599" endtime="20250304 04:17:24.599"/>
</kw>
<status status="PASS" starttime="20250304 04:17:24.591" endtime="20250304 04:17:24.599"/>
</kw>
<msg timestamp="20250304 04:17:24.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:24.590" endtime="20250304 04:17:24.599"/>
</kw>
<msg timestamp="20250304 04:17:24.599" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:17:24.590" endtime="20250304 04:17:24.599"/>
</kw>
<msg timestamp="20250304 04:17:24.600" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:24.590" endtime="20250304 04:17:24.600"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:17:24.600" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:24.600" endtime="20250304 04:17:24.600"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:24.604" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:24.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:24.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:24.602" endtime="20250304 04:17:24.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:24.632" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:24.631" endtime="20250304 04:17:24.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:24.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:24.632" endtime="20250304 04:17:24.632"/>
</kw>
<status status="PASS" starttime="20250304 04:17:24.601" endtime="20250304 04:17:24.633"/>
</kw>
<msg timestamp="20250304 04:17:24.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:24.601" endtime="20250304 04:17:24.633"/>
</kw>
<status status="PASS" starttime="20250304 04:17:24.601" endtime="20250304 04:17:24.633"/>
</kw>
<status status="PASS" starttime="20250304 04:17:24.600" endtime="20250304 04:17:24.633"/>
</kw>
<status status="PASS" starttime="20250304 04:17:24.589" endtime="20250304 04:17:24.633"/>
</kw>
<status status="PASS" starttime="20250304 04:17:24.589" endtime="20250304 04:17:24.633"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:24.637" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:26.916" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:17:26.916" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:17:24.634" endtime="20250304 04:17:26.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:26.917" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:17:26.916" endtime="20250304 04:17:26.917"/>
</kw>
<msg timestamp="20250304 04:17:26.917" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:17:24.634" endtime="20250304 04:17:26.917"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:26.918" endtime="20250304 04:17:26.918"/>
</kw>
<msg timestamp="20250304 04:17:26.918" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:17:26.917" endtime="20250304 04:17:26.918"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:26.922" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:29.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:29.280" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:17:26.919" endtime="20250304 04:17:29.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:29.281" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:17:29.280" endtime="20250304 04:17:29.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:29.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:29.281" endtime="20250304 04:17:29.281"/>
</kw>
<status status="PASS" starttime="20250304 04:17:26.919" endtime="20250304 04:17:29.281"/>
</kw>
<msg timestamp="20250304 04:17:29.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:26.919" endtime="20250304 04:17:29.282"/>
</kw>
<status status="PASS" starttime="20250304 04:17:26.918" endtime="20250304 04:17:29.282"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:29.285" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:31.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:31.697" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=12d250d4ae467bf9d62a35e2f719e22e281bba4cef16fb3d435cbcfba9d3d3aa</msg>
<status status="PASS" starttime="20250304 04:17:29.283" endtime="20250304 04:17:31.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:31.698" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=12d250d4ae467bf9d62a35e2f719e22e281bba4cef16fb3d435cbcfba9d3d3aa</msg>
<status status="PASS" starttime="20250304 04:17:31.698" endtime="20250304 04:17:31.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:31.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:31.698" endtime="20250304 04:17:31.699"/>
</kw>
<status status="PASS" starttime="20250304 04:17:29.282" endtime="20250304 04:17:31.699"/>
</kw>
<msg timestamp="20250304 04:17:31.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:29.282" endtime="20250304 04:17:31.699"/>
</kw>
<msg timestamp="20250304 04:17:31.699" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=12d250d4ae467bf9d62a35e2f719e22e281bba4cef16fb3d435cbcfba9d3d3aa</msg>
<status status="PASS" starttime="20250304 04:17:29.282" endtime="20250304 04:17:31.699"/>
</kw>
<status status="PASS" starttime="20250304 04:17:26.918" endtime="20250304 04:17:31.699"/>
</branch>
<status status="PASS" starttime="20250304 04:17:26.918" endtime="20250304 04:17:31.699"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:17:31.700" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:17:31.700" endtime="20250304 04:17:31.700"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:17:31.700" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:17:31.700" endtime="20250304 04:17:31.700"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:17:31.701" level="INFO">${secret} = ['12d250d4ae467bf9d62a35e2f719e22e281bba4cef16fb3d435cbcfba9d3d3aa']</msg>
<status status="PASS" starttime="20250304 04:17:31.701" endtime="20250304 04:17:31.701"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:17:31.702" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:31.701" endtime="20250304 04:17:31.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:17:31.703" level="INFO">${secret} = 12d250d4ae467bf9d62a35e2f719e22e281bba4cef16fb3d435cbcfba9d3d3aa</msg>
<status status="PASS" starttime="20250304 04:17:31.702" endtime="20250304 04:17:31.703"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:31.706" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:32.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:32.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:31.704" endtime="20250304 04:17:32.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:32.093" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:32.092" endtime="20250304 04:17:32.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:32.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:32.093" endtime="20250304 04:17:32.094"/>
</kw>
<status status="PASS" starttime="20250304 04:17:31.703" endtime="20250304 04:17:32.094"/>
</kw>
<msg timestamp="20250304 04:17:32.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:31.703" endtime="20250304 04:17:32.094"/>
</kw>
<status status="PASS" starttime="20250304 04:17:31.703" endtime="20250304 04:17:32.094"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:32.098" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:32.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:32.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:32.095" endtime="20250304 04:17:32.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:32.496" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:32.495" endtime="20250304 04:17:32.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:32.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:32.496" endtime="20250304 04:17:32.496"/>
</kw>
<status status="PASS" starttime="20250304 04:17:32.095" endtime="20250304 04:17:32.497"/>
</kw>
<msg timestamp="20250304 04:17:32.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:32.095" endtime="20250304 04:17:32.497"/>
</kw>
<status status="PASS" starttime="20250304 04:17:32.094" endtime="20250304 04:17:32.497"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:32.501" level="INFO">Running command 'aws configure set aws_secret_access_key 12d250d4ae467bf9d62a35e2f719e22e281bba4cef16fb3d435cbcfba9d3d3aa 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:32.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:32.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:32.498" endtime="20250304 04:17:32.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:32.936" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:32.935" endtime="20250304 04:17:32.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:32.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:32.936" endtime="20250304 04:17:32.936"/>
</kw>
<status status="PASS" starttime="20250304 04:17:32.498" endtime="20250304 04:17:32.937"/>
</kw>
<msg timestamp="20250304 04:17:32.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:32.497" endtime="20250304 04:17:32.937"/>
</kw>
<status status="PASS" starttime="20250304 04:17:32.497" endtime="20250304 04:17:32.937"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:32.941" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:33.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:33.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:32.938" endtime="20250304 04:17:33.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:33.419" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:33.418" endtime="20250304 04:17:33.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:33.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:33.419" endtime="20250304 04:17:33.419"/>
</kw>
<status status="PASS" starttime="20250304 04:17:32.937" endtime="20250304 04:17:33.419"/>
</kw>
<msg timestamp="20250304 04:17:33.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:32.937" endtime="20250304 04:17:33.419"/>
</kw>
<status status="PASS" starttime="20250304 04:17:32.937" endtime="20250304 04:17:33.420"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:33.423" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:33.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:33.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:33.421" endtime="20250304 04:17:33.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:33.793" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:33.792" endtime="20250304 04:17:33.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:33.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:33.793" endtime="20250304 04:17:33.794"/>
</kw>
<status status="PASS" starttime="20250304 04:17:33.420" endtime="20250304 04:17:33.794"/>
</kw>
<msg timestamp="20250304 04:17:33.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:33.420" endtime="20250304 04:17:33.795"/>
</kw>
<status status="PASS" starttime="20250304 04:17:33.420" endtime="20250304 04:17:33.795"/>
</kw>
<status status="PASS" starttime="20250304 04:17:24.633" endtime="20250304 04:17:33.795"/>
</kw>
<status status="PASS" starttime="20250304 04:17:24.633" endtime="20250304 04:17:33.795"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:17:33.795" endtime="20250304 04:17:33.796"/>
</kw>
<status status="PASS" starttime="20250304 04:17:24.588" endtime="20250304 04:17:33.796"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:33.802" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:34.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:34.367" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:09 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:17:33.797" endtime="20250304 04:17:34.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:34.368" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:09 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:17:34 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:17:34 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:17:34.368" endtime="20250304 04:17:34.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:34.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:34.368" endtime="20250304 04:17:34.369"/>
</kw>
<msg timestamp="20250304 04:17:34.369" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:09 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:17:33.797" endtime="20250304 04:17:34.369"/>
</kw>
<msg timestamp="20250304 04:17:34.369" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:09 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:17:33.796" endtime="20250304 04:17:34.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:34.369" endtime="20250304 04:17:34.370"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:34.374" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:34.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:34.379" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:17:34.370" endtime="20250304 04:17:34.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:34.380" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:17:34.379" endtime="20250304 04:17:34.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:34.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:34.380" endtime="20250304 04:17:34.380"/>
</kw>
<msg timestamp="20250304 04:17:34.381" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:17:34.370" endtime="20250304 04:17:34.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:34.381" endtime="20250304 04:17:34.381"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:34.384" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:34.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:34.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:34.382" endtime="20250304 04:17:34.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:34.389" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:34.389" endtime="20250304 04:17:34.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:34.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:34.389" endtime="20250304 04:17:34.390"/>
</kw>
<status status="PASS" starttime="20250304 04:17:34.381" endtime="20250304 04:17:34.390"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:17:24.588" endtime="20250304 04:17:34.390"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 04:17:10.125" endtime="20250304 04:17:34.391"/>
</suite>
<suite id="s1-s15" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:17:35.176" endtime="20250304 04:17:35.176"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:35.179" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:35.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:35.183" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:17:35.177" endtime="20250304 04:17:35.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:35.184" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:17:35.184" endtime="20250304 04:17:35.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:35.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:35.184" endtime="20250304 04:17:35.184"/>
</kw>
<status status="PASS" starttime="20250304 04:17:35.176" endtime="20250304 04:17:35.185"/>
</kw>
<msg timestamp="20250304 04:17:35.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:35.176" endtime="20250304 04:17:35.185"/>
</kw>
<msg timestamp="20250304 04:17:35.185" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:17:35.176" endtime="20250304 04:17:35.185"/>
</kw>
<msg timestamp="20250304 04:17:35.185" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:35.176" endtime="20250304 04:17:35.185"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:17:35.185" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:35.185" endtime="20250304 04:17:35.185"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:35.189" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:35.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:35.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:35.187" endtime="20250304 04:17:35.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:35.216" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:35.216" endtime="20250304 04:17:35.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:35.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:35.217" endtime="20250304 04:17:35.217"/>
</kw>
<status status="PASS" starttime="20250304 04:17:35.186" endtime="20250304 04:17:35.217"/>
</kw>
<msg timestamp="20250304 04:17:35.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:35.186" endtime="20250304 04:17:35.217"/>
</kw>
<status status="PASS" starttime="20250304 04:17:35.186" endtime="20250304 04:17:35.217"/>
</kw>
<status status="PASS" starttime="20250304 04:17:35.186" endtime="20250304 04:17:35.217"/>
</kw>
<status status="PASS" starttime="20250304 04:17:35.175" endtime="20250304 04:17:35.217"/>
</kw>
<status status="PASS" starttime="20250304 04:17:35.175" endtime="20250304 04:17:35.218"/>
</kw>
<test id="s1-s15-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:35.223" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:17:35.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:35.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:35.219" endtime="20250304 04:17:35.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:35.225" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:35.224" endtime="20250304 04:17:35.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:35.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:35.225" endtime="20250304 04:17:35.225"/>
</kw>
<status status="PASS" starttime="20250304 04:17:35.218" endtime="20250304 04:17:35.225"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:35.229" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:39.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:39.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:35.226" endtime="20250304 04:17:39.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:39.655" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:39.654" endtime="20250304 04:17:39.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:39.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:39.655" endtime="20250304 04:17:39.655"/>
</kw>
<status status="PASS" starttime="20250304 04:17:35.226" endtime="20250304 04:17:39.655"/>
</kw>
<msg timestamp="20250304 04:17:39.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:35.226" endtime="20250304 04:17:39.655"/>
</kw>
<msg timestamp="20250304 04:17:39.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:35.225" endtime="20250304 04:17:39.655"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:39.656" endtime="20250304 04:17:39.656"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:39.659" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:39.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:39.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:39.656" endtime="20250304 04:17:39.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:39.663" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:39.663" endtime="20250304 04:17:39.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:39.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:39.664" endtime="20250304 04:17:39.664"/>
</kw>
<status status="PASS" starttime="20250304 04:17:39.656" endtime="20250304 04:17:39.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:17:35.218" endtime="20250304 04:17:39.664"/>
</test>
<test id="s1-s15-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:39.668" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:17:39.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:39.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:39.666" endtime="20250304 04:17:39.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:39.670" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:39.670" endtime="20250304 04:17:39.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:39.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:39.670" endtime="20250304 04:17:39.671"/>
</kw>
<status status="PASS" starttime="20250304 04:17:39.665" endtime="20250304 04:17:39.671"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:39.674" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:44.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:44.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:39.672" endtime="20250304 04:17:44.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:44.157" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:44.156" endtime="20250304 04:17:44.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:44.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:44.157" endtime="20250304 04:17:44.157"/>
</kw>
<status status="PASS" starttime="20250304 04:17:39.672" endtime="20250304 04:17:44.157"/>
</kw>
<msg timestamp="20250304 04:17:44.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:39.671" endtime="20250304 04:17:44.157"/>
</kw>
<msg timestamp="20250304 04:17:44.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:39.671" endtime="20250304 04:17:44.158"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:44.158" endtime="20250304 04:17:44.158"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:44.161" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:44.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:44.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:44.159" endtime="20250304 04:17:44.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:44.166" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:44.165" endtime="20250304 04:17:44.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:44.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:44.166" endtime="20250304 04:17:44.167"/>
</kw>
<status status="PASS" starttime="20250304 04:17:44.158" endtime="20250304 04:17:44.167"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:17:39.665" endtime="20250304 04:17:44.167"/>
</test>
<test id="s1-s15-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:17:44.169" endtime="20250304 04:17:44.169"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:44.173" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:44.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:44.177" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:17:44.170" endtime="20250304 04:17:44.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:44.178" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:17:44.177" endtime="20250304 04:17:44.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:44.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:44.178" endtime="20250304 04:17:44.178"/>
</kw>
<status status="PASS" starttime="20250304 04:17:44.170" endtime="20250304 04:17:44.179"/>
</kw>
<msg timestamp="20250304 04:17:44.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:44.170" endtime="20250304 04:17:44.179"/>
</kw>
<msg timestamp="20250304 04:17:44.179" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:17:44.170" endtime="20250304 04:17:44.179"/>
</kw>
<msg timestamp="20250304 04:17:44.179" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:44.169" endtime="20250304 04:17:44.179"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:17:44.179" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:44.179" endtime="20250304 04:17:44.179"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:44.183" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:44.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:44.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:44.181" endtime="20250304 04:17:44.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:44.216" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:44.216" endtime="20250304 04:17:44.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:44.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:44.217" endtime="20250304 04:17:44.217"/>
</kw>
<status status="PASS" starttime="20250304 04:17:44.180" endtime="20250304 04:17:44.217"/>
</kw>
<msg timestamp="20250304 04:17:44.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:44.180" endtime="20250304 04:17:44.218"/>
</kw>
<status status="PASS" starttime="20250304 04:17:44.180" endtime="20250304 04:17:44.218"/>
</kw>
<status status="PASS" starttime="20250304 04:17:44.180" endtime="20250304 04:17:44.218"/>
</kw>
<status status="PASS" starttime="20250304 04:17:44.169" endtime="20250304 04:17:44.218"/>
</kw>
<status status="PASS" starttime="20250304 04:17:44.168" endtime="20250304 04:17:44.219"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:44.224" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:46.607" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:17:46.607" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:17:44.220" endtime="20250304 04:17:46.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:46.608" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:17:46.607" endtime="20250304 04:17:46.608"/>
</kw>
<msg timestamp="20250304 04:17:46.608" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:17:44.220" endtime="20250304 04:17:46.608"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:46.609" endtime="20250304 04:17:46.609"/>
</kw>
<msg timestamp="20250304 04:17:46.609" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:17:46.609" endtime="20250304 04:17:46.609"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:46.613" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:48.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:48.951" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:17:46.610" endtime="20250304 04:17:48.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:48.952" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:17:48.952" endtime="20250304 04:17:48.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:48.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:48.953" endtime="20250304 04:17:48.953"/>
</kw>
<status status="PASS" starttime="20250304 04:17:46.610" endtime="20250304 04:17:48.953"/>
</kw>
<msg timestamp="20250304 04:17:48.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:46.610" endtime="20250304 04:17:48.953"/>
</kw>
<status status="PASS" starttime="20250304 04:17:46.610" endtime="20250304 04:17:48.954"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:48.957" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:51.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:51.403" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=2a66edbb19fa214f19618e3d111744221211e6249b5b27963f166ce29e6f0fb2</msg>
<status status="PASS" starttime="20250304 04:17:48.955" endtime="20250304 04:17:51.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:51.404" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=2a66edbb19fa214f19618e3d111744221211e6249b5b27963f166ce29e6f0fb2</msg>
<status status="PASS" starttime="20250304 04:17:51.403" endtime="20250304 04:17:51.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:51.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:51.404" endtime="20250304 04:17:51.405"/>
</kw>
<status status="PASS" starttime="20250304 04:17:48.954" endtime="20250304 04:17:51.405"/>
</kw>
<msg timestamp="20250304 04:17:51.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:48.954" endtime="20250304 04:17:51.405"/>
</kw>
<msg timestamp="20250304 04:17:51.405" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=2a66edbb19fa214f19618e3d111744221211e6249b5b27963f166ce29e6f0fb2</msg>
<status status="PASS" starttime="20250304 04:17:48.954" endtime="20250304 04:17:51.405"/>
</kw>
<status status="PASS" starttime="20250304 04:17:46.609" endtime="20250304 04:17:51.405"/>
</branch>
<status status="PASS" starttime="20250304 04:17:46.609" endtime="20250304 04:17:51.405"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:17:51.406" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:17:51.405" endtime="20250304 04:17:51.406"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:17:51.406" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:17:51.406" endtime="20250304 04:17:51.406"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:17:51.407" level="INFO">${secret} = ['2a66edbb19fa214f19618e3d111744221211e6249b5b27963f166ce29e6f0fb2']</msg>
<status status="PASS" starttime="20250304 04:17:51.406" endtime="20250304 04:17:51.407"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:17:51.408" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:51.407" endtime="20250304 04:17:51.408"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:17:51.409" level="INFO">${secret} = 2a66edbb19fa214f19618e3d111744221211e6249b5b27963f166ce29e6f0fb2</msg>
<status status="PASS" starttime="20250304 04:17:51.408" endtime="20250304 04:17:51.409"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:51.412" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:51.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:51.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:51.410" endtime="20250304 04:17:51.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:51.785" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:51.784" endtime="20250304 04:17:51.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:51.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:51.785" endtime="20250304 04:17:51.785"/>
</kw>
<status status="PASS" starttime="20250304 04:17:51.409" endtime="20250304 04:17:51.786"/>
</kw>
<msg timestamp="20250304 04:17:51.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:51.409" endtime="20250304 04:17:51.786"/>
</kw>
<status status="PASS" starttime="20250304 04:17:51.409" endtime="20250304 04:17:51.786"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:51.789" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:52.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:52.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:51.787" endtime="20250304 04:17:52.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:52.149" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:52.148" endtime="20250304 04:17:52.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:52.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:52.149" endtime="20250304 04:17:52.149"/>
</kw>
<status status="PASS" starttime="20250304 04:17:51.787" endtime="20250304 04:17:52.149"/>
</kw>
<msg timestamp="20250304 04:17:52.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:51.786" endtime="20250304 04:17:52.150"/>
</kw>
<status status="PASS" starttime="20250304 04:17:51.786" endtime="20250304 04:17:52.150"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:52.153" level="INFO">Running command 'aws configure set aws_secret_access_key 2a66edbb19fa214f19618e3d111744221211e6249b5b27963f166ce29e6f0fb2 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:52.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:52.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:52.151" endtime="20250304 04:17:52.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:52.528" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:52.527" endtime="20250304 04:17:52.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:52.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:52.528" endtime="20250304 04:17:52.528"/>
</kw>
<status status="PASS" starttime="20250304 04:17:52.150" endtime="20250304 04:17:52.529"/>
</kw>
<msg timestamp="20250304 04:17:52.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:52.150" endtime="20250304 04:17:52.529"/>
</kw>
<status status="PASS" starttime="20250304 04:17:52.150" endtime="20250304 04:17:52.529"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:52.532" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:52.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:52.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:52.530" endtime="20250304 04:17:52.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:52.921" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:52.920" endtime="20250304 04:17:52.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:52.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:52.921" endtime="20250304 04:17:52.921"/>
</kw>
<status status="PASS" starttime="20250304 04:17:52.529" endtime="20250304 04:17:52.921"/>
</kw>
<msg timestamp="20250304 04:17:52.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:52.529" endtime="20250304 04:17:52.921"/>
</kw>
<status status="PASS" starttime="20250304 04:17:52.529" endtime="20250304 04:17:52.922"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:52.925" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:53.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:53.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:52.923" endtime="20250304 04:17:53.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:53.300" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:53.300" endtime="20250304 04:17:53.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:53.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:53.301" endtime="20250304 04:17:53.301"/>
</kw>
<status status="PASS" starttime="20250304 04:17:52.922" endtime="20250304 04:17:53.301"/>
</kw>
<msg timestamp="20250304 04:17:53.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:52.922" endtime="20250304 04:17:53.301"/>
</kw>
<status status="PASS" starttime="20250304 04:17:52.922" endtime="20250304 04:17:53.301"/>
</kw>
<status status="PASS" starttime="20250304 04:17:44.219" endtime="20250304 04:17:53.302"/>
</kw>
<status status="PASS" starttime="20250304 04:17:44.219" endtime="20250304 04:17:53.302"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:17:53.302" endtime="20250304 04:17:53.302"/>
</kw>
<status status="PASS" starttime="20250304 04:17:44.168" endtime="20250304 04:17:53.302"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:17:53.303" level="INFO">${randStr} = 0236800196</msg>
<status status="PASS" starttime="20250304 04:17:53.303" endtime="20250304 04:17:53.303"/>
</kw>
<msg timestamp="20250304 04:17:53.303" level="INFO">${random} = ozone-test-0236800196</msg>
<status status="PASS" starttime="20250304 04:17:53.302" endtime="20250304 04:17:53.303"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:53.308" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-0236800196 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:53.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:53.934" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-0236800196"
}</msg>
<status status="PASS" starttime="20250304 04:17:53.305" endtime="20250304 04:17:53.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:53.935" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-0236800196"
}</msg>
<status status="PASS" starttime="20250304 04:17:53.934" endtime="20250304 04:17:53.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:53.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:53.935" endtime="20250304 04:17:53.935"/>
</kw>
<status status="PASS" starttime="20250304 04:17:53.304" endtime="20250304 04:17:53.936"/>
</kw>
<msg timestamp="20250304 04:17:53.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:53.304" endtime="20250304 04:17:53.936"/>
</kw>
<msg timestamp="20250304 04:17:53.936" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-0236800196"
}</msg>
<status status="PASS" starttime="20250304 04:17:53.304" endtime="20250304 04:17:53.936"/>
</kw>
<msg timestamp="20250304 04:17:53.936" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-0236800196"
}</msg>
<status status="PASS" starttime="20250304 04:17:53.303" endtime="20250304 04:17:53.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:53.936" endtime="20250304 04:17:53.937"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:53.937" endtime="20250304 04:17:53.937"/>
</kw>
<msg timestamp="20250304 04:17:53.937" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20250304 04:17:53.303" endtime="20250304 04:17:53.937"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250304 04:17:53.937" endtime="20250304 04:17:53.937"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:17:44.167" endtime="20250304 04:17:53.938"/>
</test>
<test id="s1-s15-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:53.942" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:17:53.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:53.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:53.939" endtime="20250304 04:17:53.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:53.945" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:53.944" endtime="20250304 04:17:53.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:53.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:53.945" endtime="20250304 04:17:53.945"/>
</kw>
<status status="PASS" starttime="20250304 04:17:53.939" endtime="20250304 04:17:53.945"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:53.948" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:54.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:54.586" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20250304 04:17:53.946" endtime="20250304 04:17:54.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:54.587" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20250304 04:17:54.586" endtime="20250304 04:17:54.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:54.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:54.587" endtime="20250304 04:17:54.587"/>
</kw>
<msg timestamp="20250304 04:17:54.588" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20250304 04:17:53.946" endtime="20250304 04:17:54.588"/>
</kw>
<msg timestamp="20250304 04:17:54.588" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20250304 04:17:53.946" endtime="20250304 04:17:54.588"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:17:54.588" endtime="20250304 04:17:54.588"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:54.591" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:54.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:54.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:54.589" endtime="20250304 04:17:54.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:54.596" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:54.595" endtime="20250304 04:17:54.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:54.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:54.596" endtime="20250304 04:17:54.596"/>
</kw>
<status status="PASS" starttime="20250304 04:17:54.588" endtime="20250304 04:17:54.596"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:17:53.938" endtime="20250304 04:17:54.597"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20250304 04:17:35.117" endtime="20250304 04:17:54.597"/>
</suite>
<suite id="s1-s16" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s16-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:17:55.284" endtime="20250304 04:17:55.284"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:55.288" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:55.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:55.293" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:17:55.286" endtime="20250304 04:17:55.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:55.294" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:17:55.293" endtime="20250304 04:17:55.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:55.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:55.294" endtime="20250304 04:17:55.294"/>
</kw>
<status status="PASS" starttime="20250304 04:17:55.286" endtime="20250304 04:17:55.295"/>
</kw>
<msg timestamp="20250304 04:17:55.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:55.285" endtime="20250304 04:17:55.295"/>
</kw>
<msg timestamp="20250304 04:17:55.295" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:17:55.284" endtime="20250304 04:17:55.295"/>
</kw>
<msg timestamp="20250304 04:17:55.295" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:55.284" endtime="20250304 04:17:55.295"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:17:55.295" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:17:55.295" endtime="20250304 04:17:55.295"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:55.299" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:17:55.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:17:55.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:17:55.297" endtime="20250304 04:17:55.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:17:55.327" level="INFO"/>
<status status="PASS" starttime="20250304 04:17:55.326" endtime="20250304 04:17:55.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:17:55.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:17:55.327" endtime="20250304 04:17:55.327"/>
</kw>
<status status="PASS" starttime="20250304 04:17:55.296" endtime="20250304 04:17:55.327"/>
</kw>
<msg timestamp="20250304 04:17:55.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:55.296" endtime="20250304 04:17:55.327"/>
</kw>
<status status="PASS" starttime="20250304 04:17:55.296" endtime="20250304 04:17:55.327"/>
</kw>
<status status="PASS" starttime="20250304 04:17:55.296" endtime="20250304 04:17:55.327"/>
</kw>
<status status="PASS" starttime="20250304 04:17:55.283" endtime="20250304 04:17:55.328"/>
</kw>
<status status="PASS" starttime="20250304 04:17:55.283" endtime="20250304 04:17:55.328"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:17:55.328" endtime="20250304 04:17:55.328"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:17:55.331" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:18:03.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:18:03.465" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [197].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 04:17:55.329" endtime="20250304 04:18:03.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:18:03.466" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [197].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [197]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [197]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [197]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250304 04:18:03.465" endtime="20250304 04:18:03.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:18:03.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:18:03.466" endtime="20250304 04:18:03.466"/>
</kw>
<status status="PASS" starttime="20250304 04:17:55.329" endtime="20250304 04:18:03.466"/>
</kw>
<msg timestamp="20250304 04:18:03.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:17:55.328" endtime="20250304 04:18:03.467"/>
</kw>
<msg timestamp="20250304 04:18:03.467" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [197].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250304 04:17:55.328" endtime="20250304 04:18:03.467"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:18:03.467" endtime="20250304 04:18:03.467"/>
</kw>
<status status="PASS" starttime="20250304 04:18:03.467" endtime="20250304 04:18:03.467"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:17:55.282" endtime="20250304 04:18:03.468"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20250304 04:17:55.242" endtime="20250304 04:18:03.468"/>
</suite>
<suite id="s1-s17" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s17-t1" name="Finalize HDDS" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:19:25.778" endtime="20250304 04:19:25.778"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:19:25.782" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:19:25.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:19:25.786" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:19:25.779" endtime="20250304 04:19:25.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:19:25.787" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:19:25.786" endtime="20250304 04:19:25.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:19:25.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:19:25.787" endtime="20250304 04:19:25.787"/>
</kw>
<status status="PASS" starttime="20250304 04:19:25.779" endtime="20250304 04:19:25.787"/>
</kw>
<msg timestamp="20250304 04:19:25.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:19:25.779" endtime="20250304 04:19:25.788"/>
</kw>
<msg timestamp="20250304 04:19:25.788" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:19:25.778" endtime="20250304 04:19:25.788"/>
</kw>
<msg timestamp="20250304 04:19:25.788" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:19:25.778" endtime="20250304 04:19:25.788"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:19:25.788" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:19:25.788" endtime="20250304 04:19:25.788"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:19:25.792" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:19:25.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:19:25.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:19:25.790" endtime="20250304 04:19:25.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:19:25.819" level="INFO"/>
<status status="PASS" starttime="20250304 04:19:25.819" endtime="20250304 04:19:25.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:19:25.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:19:25.820" endtime="20250304 04:19:25.820"/>
</kw>
<status status="PASS" starttime="20250304 04:19:25.789" endtime="20250304 04:19:25.820"/>
</kw>
<msg timestamp="20250304 04:19:25.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:19:25.789" endtime="20250304 04:19:25.820"/>
</kw>
<status status="PASS" starttime="20250304 04:19:25.789" endtime="20250304 04:19:25.820"/>
</kw>
<status status="PASS" starttime="20250304 04:19:25.788" endtime="20250304 04:19:25.820"/>
</kw>
<status status="PASS" starttime="20250304 04:19:25.778" endtime="20250304 04:19:25.820"/>
</kw>
<status status="PASS" starttime="20250304 04:19:25.777" endtime="20250304 04:19:25.820"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:19:25.824" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:33.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:33.325" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20250304 04:19:25.821" endtime="20250304 04:21:33.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:33.326" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: HBASE_SUPPORT.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20250304 04:21:33.325" endtime="20250304 04:21:33.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:33.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:33.326" endtime="20250304 04:21:33.327"/>
</kw>
<status status="PASS" starttime="20250304 04:19:25.821" endtime="20250304 04:21:33.327"/>
</kw>
<msg timestamp="20250304 04:21:33.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:19:25.821" endtime="20250304 04:21:33.327"/>
</kw>
<msg timestamp="20250304 04:21:33.327" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20250304 04:19:25.821" endtime="20250304 04:21:33.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:33.327" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: HBASE_SUPPORT.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20250304 04:21:33.327" endtime="20250304 04:21:33.327"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250304 04:19:25.776" endtime="20250304 04:21:33.328"/>
</test>
<test id="s1-s17-t2" name="Finalize OMs" line="27">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:21:33.329" endtime="20250304 04:21:33.330"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:33.334" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:33.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:33.338" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:21:33.331" endtime="20250304 04:21:33.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:33.339" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:21:33.338" endtime="20250304 04:21:33.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:33.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:33.339" endtime="20250304 04:21:33.339"/>
</kw>
<status status="PASS" starttime="20250304 04:21:33.331" endtime="20250304 04:21:33.340"/>
</kw>
<msg timestamp="20250304 04:21:33.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:33.330" endtime="20250304 04:21:33.340"/>
</kw>
<msg timestamp="20250304 04:21:33.340" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:21:33.330" endtime="20250304 04:21:33.340"/>
</kw>
<msg timestamp="20250304 04:21:33.340" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:21:33.330" endtime="20250304 04:21:33.340"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:21:33.340" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:21:33.340" endtime="20250304 04:21:33.340"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:33.344" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:33.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:33.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:33.342" endtime="20250304 04:21:33.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:33.374" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:33.373" endtime="20250304 04:21:33.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:33.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:33.374" endtime="20250304 04:21:33.374"/>
</kw>
<status status="PASS" starttime="20250304 04:21:33.341" endtime="20250304 04:21:33.374"/>
</kw>
<msg timestamp="20250304 04:21:33.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:33.341" endtime="20250304 04:21:33.374"/>
</kw>
<status status="PASS" starttime="20250304 04:21:33.341" endtime="20250304 04:21:33.374"/>
</kw>
<status status="PASS" starttime="20250304 04:21:33.340" endtime="20250304 04:21:33.374"/>
</kw>
<status status="PASS" starttime="20250304 04:21:33.329" endtime="20250304 04:21:33.374"/>
</kw>
<status status="PASS" starttime="20250304 04:21:33.329" endtime="20250304 04:21:33.375"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:33.378" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:35.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:35.869" level="INFO">${output} = Finalization started.
No onFinalize work defined for feature: HBASE_SUPPORT.
No onFinalize work defined for feature: DELEGATION_TOKEN_SYMMETRIC_SIGN.
Finalization is done.
Exiting...
Finalization of O...</msg>
<status status="PASS" starttime="20250304 04:21:33.376" endtime="20250304 04:21:35.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:35.870" level="INFO">Finalization started.
No onFinalize work defined for feature: HBASE_SUPPORT.
No onFinalize work defined for feature: DELEGATION_TOKEN_SYMMETRIC_SIGN.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20250304 04:21:35.870" endtime="20250304 04:21:35.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:35.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:35.870" endtime="20250304 04:21:35.871"/>
</kw>
<status status="PASS" starttime="20250304 04:21:33.375" endtime="20250304 04:21:35.871"/>
</kw>
<msg timestamp="20250304 04:21:35.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:33.375" endtime="20250304 04:21:35.871"/>
</kw>
<msg timestamp="20250304 04:21:35.871" level="INFO">${result} = Finalization started.
No onFinalize work defined for feature: HBASE_SUPPORT.
No onFinalize work defined for feature: DELEGATION_TOKEN_SYMMETRIC_SIGN.
Finalization is done.
Exiting...
Finalization of O...</msg>
<status status="PASS" starttime="20250304 04:21:33.375" endtime="20250304 04:21:35.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:35.871" level="INFO">Finalization started.
No onFinalize work defined for feature: HBASE_SUPPORT.
No onFinalize work defined for feature: DELEGATION_TOKEN_SYMMETRIC_SIGN.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20250304 04:21:35.871" endtime="20250304 04:21:35.871"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250304 04:21:33.328" endtime="20250304 04:21:35.872"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20250304 04:19:25.738" endtime="20250304 04:21:35.872"/>
</suite>
<suite id="s1-s18" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-check-finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s18-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:21:36.587" endtime="20250304 04:21:36.587"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:36.590" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:36.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:36.594" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:21:36.588" endtime="20250304 04:21:36.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:36.595" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:21:36.595" endtime="20250304 04:21:36.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:36.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:36.595" endtime="20250304 04:21:36.596"/>
</kw>
<status status="PASS" starttime="20250304 04:21:36.588" endtime="20250304 04:21:36.596"/>
</kw>
<msg timestamp="20250304 04:21:36.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:36.588" endtime="20250304 04:21:36.596"/>
</kw>
<msg timestamp="20250304 04:21:36.596" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:21:36.587" endtime="20250304 04:21:36.596"/>
</kw>
<msg timestamp="20250304 04:21:36.596" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:21:36.587" endtime="20250304 04:21:36.596"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:21:36.597" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:21:36.596" endtime="20250304 04:21:36.597"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:36.600" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:36.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:36.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:36.598" endtime="20250304 04:21:36.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:36.649" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:36.648" endtime="20250304 04:21:36.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:36.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:36.649" endtime="20250304 04:21:36.649"/>
</kw>
<status status="PASS" starttime="20250304 04:21:36.598" endtime="20250304 04:21:36.649"/>
</kw>
<msg timestamp="20250304 04:21:36.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:36.597" endtime="20250304 04:21:36.650"/>
</kw>
<status status="PASS" starttime="20250304 04:21:36.597" endtime="20250304 04:21:36.650"/>
</kw>
<status status="PASS" starttime="20250304 04:21:36.597" endtime="20250304 04:21:36.650"/>
</kw>
<status status="PASS" starttime="20250304 04:21:36.586" endtime="20250304 04:21:36.650"/>
</kw>
<status status="PASS" starttime="20250304 04:21:36.586" endtime="20250304 04:21:36.650"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:36.653" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:36.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:36.657" level="INFO">${output} = CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
HDFS-SITE.XML_dfs.web.authenticatio...</msg>
<status status="PASS" starttime="20250304 04:21:36.651" endtime="20250304 04:21:36.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:36.658" level="INFO">CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.security.authorization=true
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_ozone.server.default.replication=3
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.acl.enabled=true
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.block.token.enabled=true
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.om.service.ids=omservice
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HOSTNAME=scm2.org
JAVA_HOME=/usr/local/jdk-21.0.2
OZONE_CONF_DIR=/etc/hadoop
PWD=/opt/hadoop
OZONE_LOG_DIR=/var/log/hadoop
OZONE_UPGRADE_FROM=1.4.1
OM_SERVICE_ID=omservice
HOME=/opt/hadoop
WAITFOR=scm1.org:9894
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
SHLVL=1
OZONE_UPGRADE_TO=2.0.0-SNAPSHOT
LD_LIBRARY_PATH=/usr/local/lib
LC_CTYPE=C.UTF-8
OZONE_DATANODE_SECURE_USER=root
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/jdk-21.0.2/bin:/opt/hadoop/bin
_=/usr/bin/env</msg>
<status status="PASS" starttime="20250304 04:21:36.657" endtime="20250304 04:21:36.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:36.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:36.658" endtime="20250304 04:21:36.658"/>
</kw>
<status status="PASS" starttime="20250304 04:21:36.650" endtime="20250304 04:21:36.658"/>
</kw>
<msg timestamp="20250304 04:21:36.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:36.650" endtime="20250304 04:21:36.659"/>
</kw>
<msg timestamp="20250304 04:21:36.659" level="INFO">${result} = CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
HDFS-SITE.XML_dfs.web.authenticatio...</msg>
<status status="PASS" starttime="20250304 04:21:36.650" endtime="20250304 04:21:36.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:36.659" level="INFO">CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.security.authorization=true
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_ozone.server.default.replication=3
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.acl.enabled=true
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.block.token.enabled=true
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.om.service.ids=omservice
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HOSTNAME=scm2.org
JAVA_HOME=/usr/local/jdk-21.0.2
OZONE_CONF_DIR=/etc/hadoop
PWD=/opt/hadoop
OZONE_LOG_DIR=/var/log/hadoop
OZONE_UPGRADE_FROM=1.4.1
OM_SERVICE_ID=omservice
HOME=/opt/hadoop
WAITFOR=scm1.org:9894
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
SHLVL=1
OZONE_UPGRADE_TO=2.0.0-SNAPSHOT
LD_LIBRARY_PATH=/usr/local/lib
LC_CTYPE=C.UTF-8
OZONE_DATANODE_SECURE_USER=root
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/jdk-21.0.2/bin:/opt/hadoop/bin
_=/usr/bin/env</msg>
<status status="PASS" starttime="20250304 04:21:36.659" endtime="20250304 04:21:36.659"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:21:36.659" endtime="20250304 04:21:36.660"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:36.663" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:38.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:38.590" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:21:36.661" endtime="20250304 04:21:38.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:38.591" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:21:38.590" endtime="20250304 04:21:38.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:38.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:38.591" endtime="20250304 04:21:38.591"/>
</kw>
<status status="PASS" starttime="20250304 04:21:36.660" endtime="20250304 04:21:38.591"/>
</kw>
<msg timestamp="20250304 04:21:38.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:36.660" endtime="20250304 04:21:38.591"/>
</kw>
<msg timestamp="20250304 04:21:38.591" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:21:36.660" endtime="20250304 04:21:38.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:38.592" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:21:38.592" endtime="20250304 04:21:38.592"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250304 04:21:38.592" endtime="20250304 04:21:38.592"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250304 04:21:36.586" endtime="20250304 04:21:38.592"/>
</test>
<test id="s1-s18-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:21:38.594" endtime="20250304 04:21:38.594"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:38.598" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:38.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:38.602" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:21:38.595" endtime="20250304 04:21:38.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:38.603" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:21:38.603" endtime="20250304 04:21:38.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:38.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:38.603" endtime="20250304 04:21:38.604"/>
</kw>
<status status="PASS" starttime="20250304 04:21:38.595" endtime="20250304 04:21:38.604"/>
</kw>
<msg timestamp="20250304 04:21:38.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:38.595" endtime="20250304 04:21:38.604"/>
</kw>
<msg timestamp="20250304 04:21:38.604" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:21:38.594" endtime="20250304 04:21:38.604"/>
</kw>
<msg timestamp="20250304 04:21:38.604" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:21:38.594" endtime="20250304 04:21:38.604"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:21:38.605" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:21:38.604" endtime="20250304 04:21:38.605"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:38.608" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:38.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:38.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:38.606" endtime="20250304 04:21:38.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:38.646" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:38.645" endtime="20250304 04:21:38.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:38.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:38.646" endtime="20250304 04:21:38.646"/>
</kw>
<status status="PASS" starttime="20250304 04:21:38.606" endtime="20250304 04:21:38.647"/>
</kw>
<msg timestamp="20250304 04:21:38.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:38.606" endtime="20250304 04:21:38.647"/>
</kw>
<status status="PASS" starttime="20250304 04:21:38.605" endtime="20250304 04:21:38.647"/>
</kw>
<status status="PASS" starttime="20250304 04:21:38.605" endtime="20250304 04:21:38.647"/>
</kw>
<status status="PASS" starttime="20250304 04:21:38.594" endtime="20250304 04:21:38.647"/>
</kw>
<status status="PASS" starttime="20250304 04:21:38.593" endtime="20250304 04:21:38.647"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:21:38.647" endtime="20250304 04:21:38.647"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:38.651" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:40.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:40.404" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:21:38.648" endtime="20250304 04:21:40.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:40.404" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:21:40.404" endtime="20250304 04:21:40.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:40.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:40.405" endtime="20250304 04:21:40.405"/>
</kw>
<status status="PASS" starttime="20250304 04:21:38.648" endtime="20250304 04:21:40.405"/>
</kw>
<msg timestamp="20250304 04:21:40.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:38.648" endtime="20250304 04:21:40.405"/>
</kw>
<msg timestamp="20250304 04:21:40.405" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:21:38.648" endtime="20250304 04:21:40.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:40.406" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20250304 04:21:40.406" endtime="20250304 04:21:40.406"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250304 04:21:40.406" endtime="20250304 04:21:40.406"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250304 04:21:38.593" endtime="20250304 04:21:40.406"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20250304 04:21:36.551" endtime="20250304 04:21:40.407"/>
</suite>
<suite id="s1-s19" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-validate-old1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:21:41.094" endtime="20250304 04:21:41.094"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:41.098" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:41.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:41.102" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:21:41.095" endtime="20250304 04:21:41.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:41.103" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:21:41.102" endtime="20250304 04:21:41.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:41.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:41.103" endtime="20250304 04:21:41.103"/>
</kw>
<status status="PASS" starttime="20250304 04:21:41.095" endtime="20250304 04:21:41.103"/>
</kw>
<msg timestamp="20250304 04:21:41.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:41.095" endtime="20250304 04:21:41.103"/>
</kw>
<msg timestamp="20250304 04:21:41.103" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:21:41.095" endtime="20250304 04:21:41.103"/>
</kw>
<msg timestamp="20250304 04:21:41.104" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:21:41.095" endtime="20250304 04:21:41.104"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:21:41.104" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:21:41.104" endtime="20250304 04:21:41.104"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:41.107" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:41.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:41.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:41.105" endtime="20250304 04:21:41.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:41.144" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:41.143" endtime="20250304 04:21:41.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:41.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:41.144" endtime="20250304 04:21:41.144"/>
</kw>
<status status="PASS" starttime="20250304 04:21:41.105" endtime="20250304 04:21:41.144"/>
</kw>
<msg timestamp="20250304 04:21:41.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:41.105" endtime="20250304 04:21:41.144"/>
</kw>
<status status="PASS" starttime="20250304 04:21:41.104" endtime="20250304 04:21:41.144"/>
</kw>
<status status="PASS" starttime="20250304 04:21:41.104" endtime="20250304 04:21:41.144"/>
</kw>
<status status="PASS" starttime="20250304 04:21:41.094" endtime="20250304 04:21:41.145"/>
</kw>
<status status="PASS" starttime="20250304 04:21:41.094" endtime="20250304 04:21:41.145"/>
</kw>
<test id="s1-s19-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:21:41.146" level="INFO">${random} = 32109</msg>
<status status="PASS" starttime="20250304 04:21:41.145" endtime="20250304 04:21:41.146"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:41.149" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-32109 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:44.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:44.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:41.147" endtime="20250304 04:21:44.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:44.830" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:44.829" endtime="20250304 04:21:44.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:44.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:44.830" endtime="20250304 04:21:44.830"/>
</kw>
<status status="PASS" starttime="20250304 04:21:41.146" endtime="20250304 04:21:44.831"/>
</kw>
<msg timestamp="20250304 04:21:44.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:41.146" endtime="20250304 04:21:44.831"/>
</kw>
<msg timestamp="20250304 04:21:44.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:41.146" endtime="20250304 04:21:44.831"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:21:44.831" endtime="20250304 04:21:44.831"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:44.834" level="INFO">Running command 'cat /tmp/key-32109 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:44.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:44.838" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:21:44.832" endtime="20250304 04:21:44.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:44.839" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:21:44.838" endtime="20250304 04:21:44.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:44.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:44.839" endtime="20250304 04:21:44.839"/>
</kw>
<msg timestamp="20250304 04:21:44.840" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:21:44.831" endtime="20250304 04:21:44.840"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:21:44.840" endtime="20250304 04:21:44.840"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:44.843" level="INFO">Running command 'rm /tmp/key-32109 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:44.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:44.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:44.840" endtime="20250304 04:21:44.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:44.847" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:44.847" endtime="20250304 04:21:44.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:44.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:44.847" endtime="20250304 04:21:44.848"/>
</kw>
<status status="PASS" starttime="20250304 04:21:44.840" endtime="20250304 04:21:44.848"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:21:41.145" endtime="20250304 04:21:44.848"/>
</test>
<test id="s1-s19-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:21:44.850" endtime="20250304 04:21:44.850"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:44.854" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:44.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:44.858" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:21:44.851" endtime="20250304 04:21:44.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:44.859" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:21:44.859" endtime="20250304 04:21:44.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:44.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:44.860" endtime="20250304 04:21:44.860"/>
</kw>
<status status="PASS" starttime="20250304 04:21:44.851" endtime="20250304 04:21:44.860"/>
</kw>
<msg timestamp="20250304 04:21:44.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:44.851" endtime="20250304 04:21:44.861"/>
</kw>
<msg timestamp="20250304 04:21:44.861" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:21:44.851" endtime="20250304 04:21:44.861"/>
</kw>
<msg timestamp="20250304 04:21:44.861" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:21:44.850" endtime="20250304 04:21:44.861"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:21:44.861" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:21:44.861" endtime="20250304 04:21:44.862"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:44.865" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:44.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:44.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:44.863" endtime="20250304 04:21:44.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:44.903" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:44.902" endtime="20250304 04:21:44.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:44.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:44.903" endtime="20250304 04:21:44.903"/>
</kw>
<status status="PASS" starttime="20250304 04:21:44.863" endtime="20250304 04:21:44.903"/>
</kw>
<msg timestamp="20250304 04:21:44.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:44.862" endtime="20250304 04:21:44.904"/>
</kw>
<status status="PASS" starttime="20250304 04:21:44.862" endtime="20250304 04:21:44.904"/>
</kw>
<status status="PASS" starttime="20250304 04:21:44.862" endtime="20250304 04:21:44.904"/>
</kw>
<status status="PASS" starttime="20250304 04:21:44.850" endtime="20250304 04:21:44.904"/>
</kw>
<status status="PASS" starttime="20250304 04:21:44.849" endtime="20250304 04:21:44.904"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:44.907" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:46.799" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:21:46.799" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:21:44.905" endtime="20250304 04:21:46.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:46.800" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:21:46.799" endtime="20250304 04:21:46.800"/>
</kw>
<msg timestamp="20250304 04:21:46.800" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:21:44.905" endtime="20250304 04:21:46.800"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:21:46.801" endtime="20250304 04:21:46.801"/>
</kw>
<msg timestamp="20250304 04:21:46.801" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:21:46.800" endtime="20250304 04:21:46.801"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:46.805" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:48.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:48.883" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:21:46.802" endtime="20250304 04:21:48.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:48.884" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:21:48.884" endtime="20250304 04:21:48.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:48.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:48.885" endtime="20250304 04:21:48.885"/>
</kw>
<status status="PASS" starttime="20250304 04:21:46.802" endtime="20250304 04:21:48.885"/>
</kw>
<msg timestamp="20250304 04:21:48.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:46.802" endtime="20250304 04:21:48.885"/>
</kw>
<status status="PASS" starttime="20250304 04:21:46.801" endtime="20250304 04:21:48.885"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:48.889" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:50.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:50.805" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=672a588edba44b8958c52e512ed6a81c7e56711092343cab488304506e1f15bc</msg>
<status status="PASS" starttime="20250304 04:21:48.887" endtime="20250304 04:21:50.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:50.806" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=672a588edba44b8958c52e512ed6a81c7e56711092343cab488304506e1f15bc</msg>
<status status="PASS" starttime="20250304 04:21:50.805" endtime="20250304 04:21:50.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:50.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:50.806" endtime="20250304 04:21:50.806"/>
</kw>
<status status="PASS" starttime="20250304 04:21:48.886" endtime="20250304 04:21:50.806"/>
</kw>
<msg timestamp="20250304 04:21:50.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:48.886" endtime="20250304 04:21:50.807"/>
</kw>
<msg timestamp="20250304 04:21:50.807" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=672a588edba44b8958c52e512ed6a81c7e56711092343cab488304506e1f15bc</msg>
<status status="PASS" starttime="20250304 04:21:48.886" endtime="20250304 04:21:50.807"/>
</kw>
<status status="PASS" starttime="20250304 04:21:46.801" endtime="20250304 04:21:50.807"/>
</branch>
<status status="PASS" starttime="20250304 04:21:46.801" endtime="20250304 04:21:50.807"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:21:50.807" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:21:50.807" endtime="20250304 04:21:50.807"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:21:50.808" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:21:50.808" endtime="20250304 04:21:50.808"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:21:50.808" level="INFO">${secret} = ['672a588edba44b8958c52e512ed6a81c7e56711092343cab488304506e1f15bc']</msg>
<status status="PASS" starttime="20250304 04:21:50.808" endtime="20250304 04:21:50.808"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:21:50.809" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:21:50.808" endtime="20250304 04:21:50.809"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:21:50.810" level="INFO">${secret} = 672a588edba44b8958c52e512ed6a81c7e56711092343cab488304506e1f15bc</msg>
<status status="PASS" starttime="20250304 04:21:50.809" endtime="20250304 04:21:50.810"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:50.814" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:51.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:51.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:50.811" endtime="20250304 04:21:51.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:51.183" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:51.182" endtime="20250304 04:21:51.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:51.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:51.183" endtime="20250304 04:21:51.183"/>
</kw>
<status status="PASS" starttime="20250304 04:21:50.811" endtime="20250304 04:21:51.183"/>
</kw>
<msg timestamp="20250304 04:21:51.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:50.811" endtime="20250304 04:21:51.183"/>
</kw>
<status status="PASS" starttime="20250304 04:21:50.810" endtime="20250304 04:21:51.184"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:51.187" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:51.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:51.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:51.185" endtime="20250304 04:21:51.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:51.564" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:51.564" endtime="20250304 04:21:51.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:51.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:51.564" endtime="20250304 04:21:51.565"/>
</kw>
<status status="PASS" starttime="20250304 04:21:51.184" endtime="20250304 04:21:51.565"/>
</kw>
<msg timestamp="20250304 04:21:51.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:51.184" endtime="20250304 04:21:51.565"/>
</kw>
<status status="PASS" starttime="20250304 04:21:51.184" endtime="20250304 04:21:51.565"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:51.568" level="INFO">Running command 'aws configure set aws_secret_access_key 672a588edba44b8958c52e512ed6a81c7e56711092343cab488304506e1f15bc 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:52.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:52.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:51.566" endtime="20250304 04:21:52.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:52.084" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:52.083" endtime="20250304 04:21:52.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:52.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:52.084" endtime="20250304 04:21:52.084"/>
</kw>
<status status="PASS" starttime="20250304 04:21:51.566" endtime="20250304 04:21:52.084"/>
</kw>
<msg timestamp="20250304 04:21:52.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:51.565" endtime="20250304 04:21:52.084"/>
</kw>
<status status="PASS" starttime="20250304 04:21:51.565" endtime="20250304 04:21:52.085"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:52.088" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:52.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:52.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:52.085" endtime="20250304 04:21:52.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:52.450" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:52.449" endtime="20250304 04:21:52.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:52.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:52.450" endtime="20250304 04:21:52.450"/>
</kw>
<status status="PASS" starttime="20250304 04:21:52.085" endtime="20250304 04:21:52.451"/>
</kw>
<msg timestamp="20250304 04:21:52.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:52.085" endtime="20250304 04:21:52.451"/>
</kw>
<status status="PASS" starttime="20250304 04:21:52.085" endtime="20250304 04:21:52.451"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:52.454" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:52.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:52.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:52.452" endtime="20250304 04:21:52.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:52.844" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:52.843" endtime="20250304 04:21:52.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:52.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:52.844" endtime="20250304 04:21:52.845"/>
</kw>
<status status="PASS" starttime="20250304 04:21:52.452" endtime="20250304 04:21:52.845"/>
</kw>
<msg timestamp="20250304 04:21:52.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:52.451" endtime="20250304 04:21:52.845"/>
</kw>
<status status="PASS" starttime="20250304 04:21:52.451" endtime="20250304 04:21:52.845"/>
</kw>
<status status="PASS" starttime="20250304 04:21:44.904" endtime="20250304 04:21:52.845"/>
</kw>
<status status="PASS" starttime="20250304 04:21:44.904" endtime="20250304 04:21:52.845"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:21:52.845" endtime="20250304 04:21:52.846"/>
</kw>
<status status="PASS" starttime="20250304 04:21:44.849" endtime="20250304 04:21:52.846"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:52.850" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:54.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:54.959" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:21:52.848" endtime="20250304 04:21:54.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:54.960" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:21:53 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:21:53 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:21:54.960" endtime="20250304 04:21:54.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:54.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:54.961" endtime="20250304 04:21:54.961"/>
</kw>
<msg timestamp="20250304 04:21:54.961" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:21:52.847" endtime="20250304 04:21:54.961"/>
</kw>
<msg timestamp="20250304 04:21:54.961" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:21:52.846" endtime="20250304 04:21:54.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:21:54.962" endtime="20250304 04:21:54.962"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:54.965" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:54.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:54.969" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:21:54.963" endtime="20250304 04:21:54.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:54.970" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:21:54.970" endtime="20250304 04:21:54.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:54.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:54.970" endtime="20250304 04:21:54.971"/>
</kw>
<msg timestamp="20250304 04:21:54.971" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:21:54.962" endtime="20250304 04:21:54.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:21:54.971" endtime="20250304 04:21:54.971"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:54.974" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:54.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:54.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:54.972" endtime="20250304 04:21:54.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:54.978" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:54.977" endtime="20250304 04:21:54.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:54.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:54.978" endtime="20250304 04:21:54.978"/>
</kw>
<status status="PASS" starttime="20250304 04:21:54.971" endtime="20250304 04:21:54.979"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:21:44.848" endtime="20250304 04:21:54.979"/>
</test>
<test id="s1-s19-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:21:54.980" endtime="20250304 04:21:54.981"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:54.984" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:54.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:54.988" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:21:54.982" endtime="20250304 04:21:54.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:54.988" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:21:54.988" endtime="20250304 04:21:54.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:54.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:54.989" endtime="20250304 04:21:54.989"/>
</kw>
<status status="PASS" starttime="20250304 04:21:54.981" endtime="20250304 04:21:54.989"/>
</kw>
<msg timestamp="20250304 04:21:54.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:54.981" endtime="20250304 04:21:54.989"/>
</kw>
<msg timestamp="20250304 04:21:54.989" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:21:54.981" endtime="20250304 04:21:54.989"/>
</kw>
<msg timestamp="20250304 04:21:54.989" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:21:54.981" endtime="20250304 04:21:54.989"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:21:54.990" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:21:54.990" endtime="20250304 04:21:54.990"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:54.993" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:55.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:55.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:21:54.991" endtime="20250304 04:21:55.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:55.064" level="INFO"/>
<status status="PASS" starttime="20250304 04:21:55.063" endtime="20250304 04:21:55.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:55.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:55.064" endtime="20250304 04:21:55.065"/>
</kw>
<status status="PASS" starttime="20250304 04:21:54.991" endtime="20250304 04:21:55.065"/>
</kw>
<msg timestamp="20250304 04:21:55.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:54.991" endtime="20250304 04:21:55.065"/>
</kw>
<status status="PASS" starttime="20250304 04:21:54.990" endtime="20250304 04:21:55.065"/>
</kw>
<status status="PASS" starttime="20250304 04:21:54.990" endtime="20250304 04:21:55.065"/>
</kw>
<status status="PASS" starttime="20250304 04:21:54.980" endtime="20250304 04:21:55.065"/>
</kw>
<status status="PASS" starttime="20250304 04:21:54.980" endtime="20250304 04:21:55.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:55.068" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:57.058" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:21:57.059" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:21:55.066" endtime="20250304 04:21:57.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:57.060" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:21:57.059" endtime="20250304 04:21:57.060"/>
</kw>
<msg timestamp="20250304 04:21:57.060" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:21:55.066" endtime="20250304 04:21:57.060"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:21:57.060" endtime="20250304 04:21:57.060"/>
</kw>
<msg timestamp="20250304 04:21:57.060" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:21:57.060" endtime="20250304 04:21:57.060"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:57.064" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:21:58.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:21:58.930" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:21:57.062" endtime="20250304 04:21:58.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:21:58.931" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:21:58.930" endtime="20250304 04:21:58.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:21:58.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:21:58.931" endtime="20250304 04:21:58.931"/>
</kw>
<status status="PASS" starttime="20250304 04:21:57.061" endtime="20250304 04:21:58.931"/>
</kw>
<msg timestamp="20250304 04:21:58.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:57.061" endtime="20250304 04:21:58.932"/>
</kw>
<status status="PASS" starttime="20250304 04:21:57.061" endtime="20250304 04:21:58.932"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:21:58.936" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:00.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:00.827" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1ed3cf4bff9a064ffef3d0b55290a29fec632e2b83e4d78ce0b281d1d83fb013</msg>
<status status="PASS" starttime="20250304 04:21:58.933" endtime="20250304 04:22:00.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:00.828" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1ed3cf4bff9a064ffef3d0b55290a29fec632e2b83e4d78ce0b281d1d83fb013</msg>
<status status="PASS" starttime="20250304 04:22:00.828" endtime="20250304 04:22:00.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:00.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:00.828" endtime="20250304 04:22:00.829"/>
</kw>
<status status="PASS" starttime="20250304 04:21:58.932" endtime="20250304 04:22:00.829"/>
</kw>
<msg timestamp="20250304 04:22:00.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:21:58.932" endtime="20250304 04:22:00.829"/>
</kw>
<msg timestamp="20250304 04:22:00.829" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1ed3cf4bff9a064ffef3d0b55290a29fec632e2b83e4d78ce0b281d1d83fb013</msg>
<status status="PASS" starttime="20250304 04:21:58.932" endtime="20250304 04:22:00.829"/>
</kw>
<status status="PASS" starttime="20250304 04:21:57.061" endtime="20250304 04:22:00.829"/>
</branch>
<status status="PASS" starttime="20250304 04:21:57.061" endtime="20250304 04:22:00.829"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:22:00.830" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:22:00.830" endtime="20250304 04:22:00.830"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:22:00.830" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:22:00.830" endtime="20250304 04:22:00.830"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:22:00.831" level="INFO">${secret} = ['1ed3cf4bff9a064ffef3d0b55290a29fec632e2b83e4d78ce0b281d1d83fb013']</msg>
<status status="PASS" starttime="20250304 04:22:00.830" endtime="20250304 04:22:00.831"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:22:00.832" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:00.831" endtime="20250304 04:22:00.832"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:22:00.833" level="INFO">${secret} = 1ed3cf4bff9a064ffef3d0b55290a29fec632e2b83e4d78ce0b281d1d83fb013</msg>
<status status="PASS" starttime="20250304 04:22:00.832" endtime="20250304 04:22:00.833"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:00.836" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:01.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:01.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:00.833" endtime="20250304 04:22:01.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:01.199" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:01.199" endtime="20250304 04:22:01.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:01.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:01.199" endtime="20250304 04:22:01.200"/>
</kw>
<status status="PASS" starttime="20250304 04:22:00.833" endtime="20250304 04:22:01.200"/>
</kw>
<msg timestamp="20250304 04:22:01.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:00.833" endtime="20250304 04:22:01.200"/>
</kw>
<status status="PASS" starttime="20250304 04:22:00.833" endtime="20250304 04:22:01.200"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:01.203" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:01.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:01.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:01.201" endtime="20250304 04:22:01.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:01.572" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:01.571" endtime="20250304 04:22:01.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:01.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:01.572" endtime="20250304 04:22:01.573"/>
</kw>
<status status="PASS" starttime="20250304 04:22:01.201" endtime="20250304 04:22:01.573"/>
</kw>
<msg timestamp="20250304 04:22:01.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:01.201" endtime="20250304 04:22:01.573"/>
</kw>
<status status="PASS" starttime="20250304 04:22:01.200" endtime="20250304 04:22:01.573"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:01.576" level="INFO">Running command 'aws configure set aws_secret_access_key 1ed3cf4bff9a064ffef3d0b55290a29fec632e2b83e4d78ce0b281d1d83fb013 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:01.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:01.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:01.574" endtime="20250304 04:22:01.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:01.966" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:01.965" endtime="20250304 04:22:01.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:01.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:01.966" endtime="20250304 04:22:01.967"/>
</kw>
<status status="PASS" starttime="20250304 04:22:01.574" endtime="20250304 04:22:01.967"/>
</kw>
<msg timestamp="20250304 04:22:01.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:01.573" endtime="20250304 04:22:01.967"/>
</kw>
<status status="PASS" starttime="20250304 04:22:01.573" endtime="20250304 04:22:01.967"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:01.971" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:02.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:02.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:01.968" endtime="20250304 04:22:02.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:02.335" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:02.335" endtime="20250304 04:22:02.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:02.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:02.336" endtime="20250304 04:22:02.336"/>
</kw>
<status status="PASS" starttime="20250304 04:22:01.968" endtime="20250304 04:22:02.336"/>
</kw>
<msg timestamp="20250304 04:22:02.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:01.967" endtime="20250304 04:22:02.336"/>
</kw>
<status status="PASS" starttime="20250304 04:22:01.967" endtime="20250304 04:22:02.336"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:02.339" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:02.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:02.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:02.337" endtime="20250304 04:22:02.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:02.705" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:02.705" endtime="20250304 04:22:02.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:02.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:02.705" endtime="20250304 04:22:02.706"/>
</kw>
<status status="PASS" starttime="20250304 04:22:02.337" endtime="20250304 04:22:02.706"/>
</kw>
<msg timestamp="20250304 04:22:02.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:02.337" endtime="20250304 04:22:02.706"/>
</kw>
<status status="PASS" starttime="20250304 04:22:02.336" endtime="20250304 04:22:02.706"/>
</kw>
<status status="PASS" starttime="20250304 04:21:55.065" endtime="20250304 04:22:02.706"/>
</kw>
<status status="PASS" starttime="20250304 04:21:55.065" endtime="20250304 04:22:02.706"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:22:02.706" endtime="20250304 04:22:02.707"/>
</kw>
<status status="PASS" starttime="20250304 04:21:54.980" endtime="20250304 04:22:02.707"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:02.710" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:03.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:03.256" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:54 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:22:02.708" endtime="20250304 04:22:03.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:03.257" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:54 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:22:03 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:22:03 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:22:03.257" endtime="20250304 04:22:03.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:03.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:03.258" endtime="20250304 04:22:03.258"/>
</kw>
<msg timestamp="20250304 04:22:03.258" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:54 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:22:02.707" endtime="20250304 04:22:03.258"/>
</kw>
<msg timestamp="20250304 04:22:03.258" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:54 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:22:02.707" endtime="20250304 04:22:03.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:03.259" endtime="20250304 04:22:03.259"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:03.262" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:03.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:03.265" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:22:03.259" endtime="20250304 04:22:03.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:03.266" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:22:03.266" endtime="20250304 04:22:03.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:03.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:03.266" endtime="20250304 04:22:03.267"/>
</kw>
<msg timestamp="20250304 04:22:03.267" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:22:03.259" endtime="20250304 04:22:03.267"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:03.267" endtime="20250304 04:22:03.267"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:03.270" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:03.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:03.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:03.268" endtime="20250304 04:22:03.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:03.274" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:03.274" endtime="20250304 04:22:03.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:03.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:03.274" endtime="20250304 04:22:03.275"/>
</kw>
<status status="PASS" starttime="20250304 04:22:03.267" endtime="20250304 04:22:03.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:21:54.979" endtime="20250304 04:22:03.275"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 04:21:41.036" endtime="20250304 04:22:03.276"/>
</suite>
<suite id="s1-s20" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-validate-new1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:22:03.974" endtime="20250304 04:22:03.974"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:03.977" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:03.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:03.981" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:22:03.975" endtime="20250304 04:22:03.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:03.982" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:22:03.982" endtime="20250304 04:22:03.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:03.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:03.982" endtime="20250304 04:22:03.982"/>
</kw>
<status status="PASS" starttime="20250304 04:22:03.975" endtime="20250304 04:22:03.982"/>
</kw>
<msg timestamp="20250304 04:22:03.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:03.975" endtime="20250304 04:22:03.983"/>
</kw>
<msg timestamp="20250304 04:22:03.983" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:22:03.974" endtime="20250304 04:22:03.983"/>
</kw>
<msg timestamp="20250304 04:22:03.983" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:03.974" endtime="20250304 04:22:03.983"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:22:03.983" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:03.983" endtime="20250304 04:22:03.983"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:03.987" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:04.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:04.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:03.984" endtime="20250304 04:22:04.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:04.014" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:04.013" endtime="20250304 04:22:04.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:04.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:04.014" endtime="20250304 04:22:04.014"/>
</kw>
<status status="PASS" starttime="20250304 04:22:03.984" endtime="20250304 04:22:04.014"/>
</kw>
<msg timestamp="20250304 04:22:04.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:03.984" endtime="20250304 04:22:04.014"/>
</kw>
<status status="PASS" starttime="20250304 04:22:03.984" endtime="20250304 04:22:04.014"/>
</kw>
<status status="PASS" starttime="20250304 04:22:03.983" endtime="20250304 04:22:04.014"/>
</kw>
<status status="PASS" starttime="20250304 04:22:03.974" endtime="20250304 04:22:04.014"/>
</kw>
<status status="PASS" starttime="20250304 04:22:03.973" endtime="20250304 04:22:04.015"/>
</kw>
<test id="s1-s20-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:22:04.016" level="INFO">${random} = 74044</msg>
<status status="PASS" starttime="20250304 04:22:04.015" endtime="20250304 04:22:04.016"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:04.020" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-74044 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:07.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:07.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:04.017" endtime="20250304 04:22:07.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:07.519" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:07.519" endtime="20250304 04:22:07.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:07.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:07.519" endtime="20250304 04:22:07.520"/>
</kw>
<status status="PASS" starttime="20250304 04:22:04.017" endtime="20250304 04:22:07.520"/>
</kw>
<msg timestamp="20250304 04:22:07.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:04.016" endtime="20250304 04:22:07.520"/>
</kw>
<msg timestamp="20250304 04:22:07.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:04.016" endtime="20250304 04:22:07.520"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:07.520" endtime="20250304 04:22:07.521"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:07.523" level="INFO">Running command 'cat /tmp/key-74044 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:07.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:07.527" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:22:07.521" endtime="20250304 04:22:07.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:07.528" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:22:07.527" endtime="20250304 04:22:07.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:07.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:07.528" endtime="20250304 04:22:07.528"/>
</kw>
<msg timestamp="20250304 04:22:07.529" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:22:07.521" endtime="20250304 04:22:07.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:07.529" endtime="20250304 04:22:07.529"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:07.531" level="INFO">Running command 'rm /tmp/key-74044 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:07.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:07.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:07.529" endtime="20250304 04:22:07.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:07.536" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:07.535" endtime="20250304 04:22:07.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:07.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:07.536" endtime="20250304 04:22:07.536"/>
</kw>
<status status="PASS" starttime="20250304 04:22:07.529" endtime="20250304 04:22:07.536"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:04.015" endtime="20250304 04:22:07.536"/>
</test>
<test id="s1-s20-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:22:07.538" endtime="20250304 04:22:07.538"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:07.541" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:07.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:07.545" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:22:07.539" endtime="20250304 04:22:07.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:07.546" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:22:07.545" endtime="20250304 04:22:07.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:07.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:07.546" endtime="20250304 04:22:07.546"/>
</kw>
<status status="PASS" starttime="20250304 04:22:07.539" endtime="20250304 04:22:07.546"/>
</kw>
<msg timestamp="20250304 04:22:07.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:07.539" endtime="20250304 04:22:07.547"/>
</kw>
<msg timestamp="20250304 04:22:07.547" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:22:07.539" endtime="20250304 04:22:07.547"/>
</kw>
<msg timestamp="20250304 04:22:07.547" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:07.538" endtime="20250304 04:22:07.547"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:22:07.547" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:07.547" endtime="20250304 04:22:07.547"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:07.551" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:07.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:07.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:07.549" endtime="20250304 04:22:07.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:07.567" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:07.566" endtime="20250304 04:22:07.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:07.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:07.567" endtime="20250304 04:22:07.567"/>
</kw>
<status status="PASS" starttime="20250304 04:22:07.548" endtime="20250304 04:22:07.567"/>
</kw>
<msg timestamp="20250304 04:22:07.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:07.548" endtime="20250304 04:22:07.567"/>
</kw>
<status status="PASS" starttime="20250304 04:22:07.548" endtime="20250304 04:22:07.567"/>
</kw>
<status status="PASS" starttime="20250304 04:22:07.547" endtime="20250304 04:22:07.567"/>
</kw>
<status status="PASS" starttime="20250304 04:22:07.538" endtime="20250304 04:22:07.567"/>
</kw>
<status status="PASS" starttime="20250304 04:22:07.537" endtime="20250304 04:22:07.568"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:07.571" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:09.454" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:22:09.454" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:07.568" endtime="20250304 04:22:09.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:09.456" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:09.455" endtime="20250304 04:22:09.456"/>
</kw>
<msg timestamp="20250304 04:22:09.456" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:07.568" endtime="20250304 04:22:09.456"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:09.456" endtime="20250304 04:22:09.457"/>
</kw>
<msg timestamp="20250304 04:22:09.457" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:22:09.456" endtime="20250304 04:22:09.457"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:09.461" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:11.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:11.318" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:22:09.458" endtime="20250304 04:22:11.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:11.319" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:22:11.319" endtime="20250304 04:22:11.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:11.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:11.320" endtime="20250304 04:22:11.320"/>
</kw>
<status status="PASS" starttime="20250304 04:22:09.458" endtime="20250304 04:22:11.320"/>
</kw>
<msg timestamp="20250304 04:22:11.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:09.458" endtime="20250304 04:22:11.320"/>
</kw>
<status status="PASS" starttime="20250304 04:22:09.457" endtime="20250304 04:22:11.320"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:11.324" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:13.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:13.199" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=62d40dddeba1f0ef798f35c152bf2050c3b86c2bdef1f754775b123d032633f4</msg>
<status status="PASS" starttime="20250304 04:22:11.321" endtime="20250304 04:22:13.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:13.200" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=62d40dddeba1f0ef798f35c152bf2050c3b86c2bdef1f754775b123d032633f4</msg>
<status status="PASS" starttime="20250304 04:22:13.200" endtime="20250304 04:22:13.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:13.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:13.200" endtime="20250304 04:22:13.201"/>
</kw>
<status status="PASS" starttime="20250304 04:22:11.321" endtime="20250304 04:22:13.201"/>
</kw>
<msg timestamp="20250304 04:22:13.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:11.321" endtime="20250304 04:22:13.201"/>
</kw>
<msg timestamp="20250304 04:22:13.201" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=62d40dddeba1f0ef798f35c152bf2050c3b86c2bdef1f754775b123d032633f4</msg>
<status status="PASS" starttime="20250304 04:22:11.320" endtime="20250304 04:22:13.201"/>
</kw>
<status status="PASS" starttime="20250304 04:22:09.457" endtime="20250304 04:22:13.201"/>
</branch>
<status status="PASS" starttime="20250304 04:22:09.457" endtime="20250304 04:22:13.201"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:22:13.202" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:22:13.202" endtime="20250304 04:22:13.202"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:22:13.202" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:22:13.202" endtime="20250304 04:22:13.202"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:22:13.203" level="INFO">${secret} = ['62d40dddeba1f0ef798f35c152bf2050c3b86c2bdef1f754775b123d032633f4']</msg>
<status status="PASS" starttime="20250304 04:22:13.203" endtime="20250304 04:22:13.203"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:22:13.204" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:13.203" endtime="20250304 04:22:13.204"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:22:13.205" level="INFO">${secret} = 62d40dddeba1f0ef798f35c152bf2050c3b86c2bdef1f754775b123d032633f4</msg>
<status status="PASS" starttime="20250304 04:22:13.204" endtime="20250304 04:22:13.205"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:13.208" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:13.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:13.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:13.206" endtime="20250304 04:22:13.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:13.573" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:13.573" endtime="20250304 04:22:13.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:13.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:13.574" endtime="20250304 04:22:13.574"/>
</kw>
<status status="PASS" starttime="20250304 04:22:13.205" endtime="20250304 04:22:13.574"/>
</kw>
<msg timestamp="20250304 04:22:13.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:13.205" endtime="20250304 04:22:13.574"/>
</kw>
<status status="PASS" starttime="20250304 04:22:13.205" endtime="20250304 04:22:13.574"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:13.578" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:13.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:13.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:13.575" endtime="20250304 04:22:13.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:13.951" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:13.951" endtime="20250304 04:22:13.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:13.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:13.952" endtime="20250304 04:22:13.952"/>
</kw>
<status status="PASS" starttime="20250304 04:22:13.575" endtime="20250304 04:22:13.952"/>
</kw>
<msg timestamp="20250304 04:22:13.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:13.575" endtime="20250304 04:22:13.952"/>
</kw>
<status status="PASS" starttime="20250304 04:22:13.574" endtime="20250304 04:22:13.952"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:13.956" level="INFO">Running command 'aws configure set aws_secret_access_key 62d40dddeba1f0ef798f35c152bf2050c3b86c2bdef1f754775b123d032633f4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:14.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:14.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:13.953" endtime="20250304 04:22:14.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:14.322" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:14.321" endtime="20250304 04:22:14.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:14.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:14.322" endtime="20250304 04:22:14.322"/>
</kw>
<status status="PASS" starttime="20250304 04:22:13.953" endtime="20250304 04:22:14.322"/>
</kw>
<msg timestamp="20250304 04:22:14.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:13.953" endtime="20250304 04:22:14.322"/>
</kw>
<status status="PASS" starttime="20250304 04:22:13.952" endtime="20250304 04:22:14.322"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:14.326" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:14.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:14.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:14.323" endtime="20250304 04:22:14.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:14.706" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:14.705" endtime="20250304 04:22:14.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:14.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:14.706" endtime="20250304 04:22:14.706"/>
</kw>
<status status="PASS" starttime="20250304 04:22:14.323" endtime="20250304 04:22:14.706"/>
</kw>
<msg timestamp="20250304 04:22:14.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:14.323" endtime="20250304 04:22:14.706"/>
</kw>
<status status="PASS" starttime="20250304 04:22:14.323" endtime="20250304 04:22:14.707"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:14.710" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:15.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:15.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:14.708" endtime="20250304 04:22:15.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:15.083" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:15.083" endtime="20250304 04:22:15.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:15.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:15.083" endtime="20250304 04:22:15.084"/>
</kw>
<status status="PASS" starttime="20250304 04:22:14.707" endtime="20250304 04:22:15.084"/>
</kw>
<msg timestamp="20250304 04:22:15.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:14.707" endtime="20250304 04:22:15.084"/>
</kw>
<status status="PASS" starttime="20250304 04:22:14.707" endtime="20250304 04:22:15.084"/>
</kw>
<status status="PASS" starttime="20250304 04:22:07.568" endtime="20250304 04:22:15.084"/>
</kw>
<status status="PASS" starttime="20250304 04:22:07.568" endtime="20250304 04:22:15.084"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:22:15.084" endtime="20250304 04:22:15.085"/>
</kw>
<status status="PASS" starttime="20250304 04:22:07.537" endtime="20250304 04:22:15.085"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:15.088" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:15.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:15.653" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:22:15.085" endtime="20250304 04:22:15.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:15.654" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:22:15 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:22:15 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:22:15.653" endtime="20250304 04:22:15.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:15.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:15.654" endtime="20250304 04:22:15.654"/>
</kw>
<msg timestamp="20250304 04:22:15.655" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:22:15.085" endtime="20250304 04:22:15.655"/>
</kw>
<msg timestamp="20250304 04:22:15.655" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:37 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:22:15.085" endtime="20250304 04:22:15.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:15.655" endtime="20250304 04:22:15.655"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:15.658" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:15.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:15.662" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:22:15.656" endtime="20250304 04:22:15.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:15.663" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:22:15.662" endtime="20250304 04:22:15.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:15.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:15.663" endtime="20250304 04:22:15.663"/>
</kw>
<msg timestamp="20250304 04:22:15.663" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:22:15.655" endtime="20250304 04:22:15.663"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:15.663" endtime="20250304 04:22:15.664"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:15.666" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:15.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:15.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:15.664" endtime="20250304 04:22:15.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:15.671" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:15.671" endtime="20250304 04:22:15.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:15.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:15.671" endtime="20250304 04:22:15.672"/>
</kw>
<status status="PASS" starttime="20250304 04:22:15.664" endtime="20250304 04:22:15.672"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:07.537" endtime="20250304 04:22:15.672"/>
</test>
<test id="s1-s20-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:22:15.675" endtime="20250304 04:22:15.675"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:15.679" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:15.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:15.683" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:22:15.677" endtime="20250304 04:22:15.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:15.684" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:22:15.684" endtime="20250304 04:22:15.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:15.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:15.685" endtime="20250304 04:22:15.685"/>
</kw>
<status status="PASS" starttime="20250304 04:22:15.676" endtime="20250304 04:22:15.685"/>
</kw>
<msg timestamp="20250304 04:22:15.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:15.676" endtime="20250304 04:22:15.685"/>
</kw>
<msg timestamp="20250304 04:22:15.685" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:22:15.676" endtime="20250304 04:22:15.685"/>
</kw>
<msg timestamp="20250304 04:22:15.686" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:15.675" endtime="20250304 04:22:15.686"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:22:15.686" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:15.686" endtime="20250304 04:22:15.686"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:15.690" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:15.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:15.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:15.687" endtime="20250304 04:22:15.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:15.728" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:15.727" endtime="20250304 04:22:15.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:15.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:15.728" endtime="20250304 04:22:15.728"/>
</kw>
<status status="PASS" starttime="20250304 04:22:15.687" endtime="20250304 04:22:15.728"/>
</kw>
<msg timestamp="20250304 04:22:15.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:15.687" endtime="20250304 04:22:15.729"/>
</kw>
<status status="PASS" starttime="20250304 04:22:15.686" endtime="20250304 04:22:15.729"/>
</kw>
<status status="PASS" starttime="20250304 04:22:15.686" endtime="20250304 04:22:15.729"/>
</kw>
<status status="PASS" starttime="20250304 04:22:15.675" endtime="20250304 04:22:15.729"/>
</kw>
<status status="PASS" starttime="20250304 04:22:15.674" endtime="20250304 04:22:15.729"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:15.732" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:17.670" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:22:17.670" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:15.730" endtime="20250304 04:22:17.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:17.671" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:17.670" endtime="20250304 04:22:17.671"/>
</kw>
<msg timestamp="20250304 04:22:17.671" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:15.730" endtime="20250304 04:22:17.671"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:17.672" endtime="20250304 04:22:17.672"/>
</kw>
<msg timestamp="20250304 04:22:17.672" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:22:17.671" endtime="20250304 04:22:17.672"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:17.676" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:19.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:19.798" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:22:17.673" endtime="20250304 04:22:19.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:19.799" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:22:19.799" endtime="20250304 04:22:19.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:19.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:19.800" endtime="20250304 04:22:19.800"/>
</kw>
<status status="PASS" starttime="20250304 04:22:17.673" endtime="20250304 04:22:19.800"/>
</kw>
<msg timestamp="20250304 04:22:19.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:17.673" endtime="20250304 04:22:19.800"/>
</kw>
<status status="PASS" starttime="20250304 04:22:17.672" endtime="20250304 04:22:19.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:19.806" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:21.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:21.745" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7a8798c086ad63279e7f2bcdc6c353630ab5f29c7dff64a58a009ed0a572ed32</msg>
<status status="PASS" starttime="20250304 04:22:19.802" endtime="20250304 04:22:21.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:21.746" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7a8798c086ad63279e7f2bcdc6c353630ab5f29c7dff64a58a009ed0a572ed32</msg>
<status status="PASS" starttime="20250304 04:22:21.745" endtime="20250304 04:22:21.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:21.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:21.746" endtime="20250304 04:22:21.746"/>
</kw>
<status status="PASS" starttime="20250304 04:22:19.801" endtime="20250304 04:22:21.747"/>
</kw>
<msg timestamp="20250304 04:22:21.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:19.801" endtime="20250304 04:22:21.747"/>
</kw>
<msg timestamp="20250304 04:22:21.747" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7a8798c086ad63279e7f2bcdc6c353630ab5f29c7dff64a58a009ed0a572ed32</msg>
<status status="PASS" starttime="20250304 04:22:19.800" endtime="20250304 04:22:21.747"/>
</kw>
<status status="PASS" starttime="20250304 04:22:17.672" endtime="20250304 04:22:21.747"/>
</branch>
<status status="PASS" starttime="20250304 04:22:17.672" endtime="20250304 04:22:21.747"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:22:21.747" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:22:21.747" endtime="20250304 04:22:21.747"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:22:21.748" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:22:21.748" endtime="20250304 04:22:21.748"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:22:21.748" level="INFO">${secret} = ['7a8798c086ad63279e7f2bcdc6c353630ab5f29c7dff64a58a009ed0a572ed32']</msg>
<status status="PASS" starttime="20250304 04:22:21.748" endtime="20250304 04:22:21.748"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:22:21.749" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:21.748" endtime="20250304 04:22:21.749"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:22:21.750" level="INFO">${secret} = 7a8798c086ad63279e7f2bcdc6c353630ab5f29c7dff64a58a009ed0a572ed32</msg>
<status status="PASS" starttime="20250304 04:22:21.749" endtime="20250304 04:22:21.750"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:21.754" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:22.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:22.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:21.751" endtime="20250304 04:22:22.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:22.170" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:22.169" endtime="20250304 04:22:22.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:22.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:22.170" endtime="20250304 04:22:22.170"/>
</kw>
<status status="PASS" starttime="20250304 04:22:21.751" endtime="20250304 04:22:22.170"/>
</kw>
<msg timestamp="20250304 04:22:22.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:21.751" endtime="20250304 04:22:22.171"/>
</kw>
<status status="PASS" starttime="20250304 04:22:21.750" endtime="20250304 04:22:22.171"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:22.174" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:22.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:22.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:22.172" endtime="20250304 04:22:22.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:22.550" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:22.549" endtime="20250304 04:22:22.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:22.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:22.550" endtime="20250304 04:22:22.551"/>
</kw>
<status status="PASS" starttime="20250304 04:22:22.171" endtime="20250304 04:22:22.551"/>
</kw>
<msg timestamp="20250304 04:22:22.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:22.171" endtime="20250304 04:22:22.551"/>
</kw>
<status status="PASS" starttime="20250304 04:22:22.171" endtime="20250304 04:22:22.551"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:22.554" level="INFO">Running command 'aws configure set aws_secret_access_key 7a8798c086ad63279e7f2bcdc6c353630ab5f29c7dff64a58a009ed0a572ed32 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:22.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:22.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:22.552" endtime="20250304 04:22:22.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:22.937" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:22.936" endtime="20250304 04:22:22.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:22.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:22.937" endtime="20250304 04:22:22.937"/>
</kw>
<status status="PASS" starttime="20250304 04:22:22.552" endtime="20250304 04:22:22.937"/>
</kw>
<msg timestamp="20250304 04:22:22.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:22.551" endtime="20250304 04:22:22.938"/>
</kw>
<status status="PASS" starttime="20250304 04:22:22.551" endtime="20250304 04:22:22.938"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:22.941" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:23.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:23.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:22.939" endtime="20250304 04:22:23.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:23.324" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:23.323" endtime="20250304 04:22:23.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:23.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:23.324" endtime="20250304 04:22:23.324"/>
</kw>
<status status="PASS" starttime="20250304 04:22:22.938" endtime="20250304 04:22:23.324"/>
</kw>
<msg timestamp="20250304 04:22:23.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:22.938" endtime="20250304 04:22:23.324"/>
</kw>
<status status="PASS" starttime="20250304 04:22:22.938" endtime="20250304 04:22:23.325"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:23.328" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:23.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:23.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:23.326" endtime="20250304 04:22:23.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:23.707" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:23.707" endtime="20250304 04:22:23.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:23.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:23.707" endtime="20250304 04:22:23.708"/>
</kw>
<status status="PASS" starttime="20250304 04:22:23.325" endtime="20250304 04:22:23.708"/>
</kw>
<msg timestamp="20250304 04:22:23.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:23.325" endtime="20250304 04:22:23.708"/>
</kw>
<status status="PASS" starttime="20250304 04:22:23.325" endtime="20250304 04:22:23.708"/>
</kw>
<status status="PASS" starttime="20250304 04:22:15.729" endtime="20250304 04:22:23.708"/>
</kw>
<status status="PASS" starttime="20250304 04:22:15.729" endtime="20250304 04:22:23.708"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:22:23.708" endtime="20250304 04:22:23.709"/>
</kw>
<status status="PASS" starttime="20250304 04:22:15.674" endtime="20250304 04:22:23.709"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:23.712" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:24.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:24.289" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:46 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:22:23.710" endtime="20250304 04:22:24.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:24.290" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:46 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:22:24 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:22:24 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:22:24.289" endtime="20250304 04:22:24.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:24.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:24.290" endtime="20250304 04:22:24.290"/>
</kw>
<msg timestamp="20250304 04:22:24.290" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:46 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:22:23.709" endtime="20250304 04:22:24.290"/>
</kw>
<msg timestamp="20250304 04:22:24.290" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:13:46 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:22:23.709" endtime="20250304 04:22:24.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:24.291" endtime="20250304 04:22:24.291"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:24.294" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:24.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:24.298" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:22:24.291" endtime="20250304 04:22:24.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:24.299" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:22:24.298" endtime="20250304 04:22:24.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:24.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:24.299" endtime="20250304 04:22:24.299"/>
</kw>
<msg timestamp="20250304 04:22:24.299" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:22:24.291" endtime="20250304 04:22:24.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:24.299" endtime="20250304 04:22:24.300"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:24.302" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:24.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:24.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:24.300" endtime="20250304 04:22:24.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:24.307" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:24.307" endtime="20250304 04:22:24.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:24.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:24.307" endtime="20250304 04:22:24.308"/>
</kw>
<status status="PASS" starttime="20250304 04:22:24.300" endtime="20250304 04:22:24.308"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:15.673" endtime="20250304 04:22:24.308"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 04:22:03.916" endtime="20250304 04:22:24.309"/>
</suite>
<suite id="s1-s21" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-validate-old2" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:22:25.050" endtime="20250304 04:22:25.050"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:25.054" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:25.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:25.058" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:22:25.052" endtime="20250304 04:22:25.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:25.059" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:22:25.059" endtime="20250304 04:22:25.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:25.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:25.059" endtime="20250304 04:22:25.059"/>
</kw>
<status status="PASS" starttime="20250304 04:22:25.051" endtime="20250304 04:22:25.060"/>
</kw>
<msg timestamp="20250304 04:22:25.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:25.051" endtime="20250304 04:22:25.060"/>
</kw>
<msg timestamp="20250304 04:22:25.060" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:22:25.051" endtime="20250304 04:22:25.060"/>
</kw>
<msg timestamp="20250304 04:22:25.060" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:25.051" endtime="20250304 04:22:25.060"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:22:25.060" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:25.060" endtime="20250304 04:22:25.060"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:25.064" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:25.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:25.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:25.062" endtime="20250304 04:22:25.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:25.099" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:25.099" endtime="20250304 04:22:25.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:25.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:25.099" endtime="20250304 04:22:25.100"/>
</kw>
<status status="PASS" starttime="20250304 04:22:25.061" endtime="20250304 04:22:25.100"/>
</kw>
<msg timestamp="20250304 04:22:25.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:25.061" endtime="20250304 04:22:25.100"/>
</kw>
<status status="PASS" starttime="20250304 04:22:25.061" endtime="20250304 04:22:25.100"/>
</kw>
<status status="PASS" starttime="20250304 04:22:25.061" endtime="20250304 04:22:25.100"/>
</kw>
<status status="PASS" starttime="20250304 04:22:25.050" endtime="20250304 04:22:25.100"/>
</kw>
<status status="PASS" starttime="20250304 04:22:25.050" endtime="20250304 04:22:25.100"/>
</kw>
<test id="s1-s21-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:22:25.101" level="INFO">${random} = 90727</msg>
<status status="PASS" starttime="20250304 04:22:25.101" endtime="20250304 04:22:25.101"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:25.105" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-90727 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:28.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:28.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:25.102" endtime="20250304 04:22:28.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:28.695" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:28.694" endtime="20250304 04:22:28.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:28.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:28.695" endtime="20250304 04:22:28.696"/>
</kw>
<status status="PASS" starttime="20250304 04:22:25.102" endtime="20250304 04:22:28.696"/>
</kw>
<msg timestamp="20250304 04:22:28.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:25.102" endtime="20250304 04:22:28.696"/>
</kw>
<msg timestamp="20250304 04:22:28.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:25.102" endtime="20250304 04:22:28.696"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:28.696" endtime="20250304 04:22:28.696"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:28.699" level="INFO">Running command 'cat /tmp/key-90727 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:28.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:28.703" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:22:28.697" endtime="20250304 04:22:28.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:28.704" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:22:28.703" endtime="20250304 04:22:28.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:28.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:28.704" endtime="20250304 04:22:28.704"/>
</kw>
<msg timestamp="20250304 04:22:28.705" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:22:28.697" endtime="20250304 04:22:28.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:28.705" endtime="20250304 04:22:28.705"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:28.708" level="INFO">Running command 'rm /tmp/key-90727 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:28.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:28.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:28.706" endtime="20250304 04:22:28.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:28.712" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:28.712" endtime="20250304 04:22:28.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:28.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:28.713" endtime="20250304 04:22:28.713"/>
</kw>
<status status="PASS" starttime="20250304 04:22:28.705" endtime="20250304 04:22:28.713"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:25.100" endtime="20250304 04:22:28.713"/>
</test>
<test id="s1-s21-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:22:28.715" endtime="20250304 04:22:28.715"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:28.719" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:28.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:28.723" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:22:28.716" endtime="20250304 04:22:28.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:28.723" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:22:28.723" endtime="20250304 04:22:28.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:28.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:28.724" endtime="20250304 04:22:28.724"/>
</kw>
<status status="PASS" starttime="20250304 04:22:28.716" endtime="20250304 04:22:28.724"/>
</kw>
<msg timestamp="20250304 04:22:28.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:28.716" endtime="20250304 04:22:28.724"/>
</kw>
<msg timestamp="20250304 04:22:28.724" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:22:28.716" endtime="20250304 04:22:28.724"/>
</kw>
<msg timestamp="20250304 04:22:28.724" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:28.715" endtime="20250304 04:22:28.725"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:22:28.725" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:28.725" endtime="20250304 04:22:28.725"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:28.729" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:28.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:28.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:28.727" endtime="20250304 04:22:28.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:28.746" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:28.745" endtime="20250304 04:22:28.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:28.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:28.746" endtime="20250304 04:22:28.746"/>
</kw>
<status status="PASS" starttime="20250304 04:22:28.726" endtime="20250304 04:22:28.747"/>
</kw>
<msg timestamp="20250304 04:22:28.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:28.726" endtime="20250304 04:22:28.747"/>
</kw>
<status status="PASS" starttime="20250304 04:22:28.725" endtime="20250304 04:22:28.747"/>
</kw>
<status status="PASS" starttime="20250304 04:22:28.725" endtime="20250304 04:22:28.747"/>
</kw>
<status status="PASS" starttime="20250304 04:22:28.715" endtime="20250304 04:22:28.747"/>
</kw>
<status status="PASS" starttime="20250304 04:22:28.714" endtime="20250304 04:22:28.747"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:28.752" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:30.666" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:22:30.667" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:28.748" endtime="20250304 04:22:30.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:30.667" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:30.667" endtime="20250304 04:22:30.667"/>
</kw>
<msg timestamp="20250304 04:22:30.668" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:28.748" endtime="20250304 04:22:30.668"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:30.668" endtime="20250304 04:22:30.668"/>
</kw>
<msg timestamp="20250304 04:22:30.668" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:22:30.668" endtime="20250304 04:22:30.668"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:30.674" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:32.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:32.518" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:22:30.670" endtime="20250304 04:22:32.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:32.519" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:22:32.518" endtime="20250304 04:22:32.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:32.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:32.519" endtime="20250304 04:22:32.519"/>
</kw>
<status status="PASS" starttime="20250304 04:22:30.669" endtime="20250304 04:22:32.520"/>
</kw>
<msg timestamp="20250304 04:22:32.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:30.669" endtime="20250304 04:22:32.520"/>
</kw>
<status status="PASS" starttime="20250304 04:22:30.669" endtime="20250304 04:22:32.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:32.523" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:34.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:34.373" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b3b79f90d361f063996a567437244fd9ad878db34c931b55bfab2943d0c19ad7</msg>
<status status="PASS" starttime="20250304 04:22:32.521" endtime="20250304 04:22:34.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:34.374" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b3b79f90d361f063996a567437244fd9ad878db34c931b55bfab2943d0c19ad7</msg>
<status status="PASS" starttime="20250304 04:22:34.374" endtime="20250304 04:22:34.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:34.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:34.374" endtime="20250304 04:22:34.375"/>
</kw>
<status status="PASS" starttime="20250304 04:22:32.521" endtime="20250304 04:22:34.375"/>
</kw>
<msg timestamp="20250304 04:22:34.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:32.520" endtime="20250304 04:22:34.375"/>
</kw>
<msg timestamp="20250304 04:22:34.375" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b3b79f90d361f063996a567437244fd9ad878db34c931b55bfab2943d0c19ad7</msg>
<status status="PASS" starttime="20250304 04:22:32.520" endtime="20250304 04:22:34.375"/>
</kw>
<status status="PASS" starttime="20250304 04:22:30.669" endtime="20250304 04:22:34.375"/>
</branch>
<status status="PASS" starttime="20250304 04:22:30.668" endtime="20250304 04:22:34.375"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:22:34.376" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:22:34.376" endtime="20250304 04:22:34.376"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:22:34.376" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:22:34.376" endtime="20250304 04:22:34.377"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:22:34.377" level="INFO">${secret} = ['b3b79f90d361f063996a567437244fd9ad878db34c931b55bfab2943d0c19ad7']</msg>
<status status="PASS" starttime="20250304 04:22:34.377" endtime="20250304 04:22:34.377"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:22:34.378" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:34.377" endtime="20250304 04:22:34.378"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:22:34.379" level="INFO">${secret} = b3b79f90d361f063996a567437244fd9ad878db34c931b55bfab2943d0c19ad7</msg>
<status status="PASS" starttime="20250304 04:22:34.378" endtime="20250304 04:22:34.379"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:34.382" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:34.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:34.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:34.380" endtime="20250304 04:22:34.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:34.757" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:34.756" endtime="20250304 04:22:34.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:34.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:34.757" endtime="20250304 04:22:34.757"/>
</kw>
<status status="PASS" starttime="20250304 04:22:34.380" endtime="20250304 04:22:34.758"/>
</kw>
<msg timestamp="20250304 04:22:34.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:34.379" endtime="20250304 04:22:34.758"/>
</kw>
<status status="PASS" starttime="20250304 04:22:34.379" endtime="20250304 04:22:34.758"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:34.761" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:35.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:35.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:34.759" endtime="20250304 04:22:35.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:35.129" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:35.129" endtime="20250304 04:22:35.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:35.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:35.129" endtime="20250304 04:22:35.130"/>
</kw>
<status status="PASS" starttime="20250304 04:22:34.759" endtime="20250304 04:22:35.130"/>
</kw>
<msg timestamp="20250304 04:22:35.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:34.758" endtime="20250304 04:22:35.130"/>
</kw>
<status status="PASS" starttime="20250304 04:22:34.758" endtime="20250304 04:22:35.130"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:35.134" level="INFO">Running command 'aws configure set aws_secret_access_key b3b79f90d361f063996a567437244fd9ad878db34c931b55bfab2943d0c19ad7 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:35.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:35.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:35.131" endtime="20250304 04:22:35.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:35.502" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:35.502" endtime="20250304 04:22:35.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:35.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:35.502" endtime="20250304 04:22:35.503"/>
</kw>
<status status="PASS" starttime="20250304 04:22:35.131" endtime="20250304 04:22:35.503"/>
</kw>
<msg timestamp="20250304 04:22:35.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:35.131" endtime="20250304 04:22:35.503"/>
</kw>
<status status="PASS" starttime="20250304 04:22:35.130" endtime="20250304 04:22:35.503"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:35.506" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:35.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:35.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:35.504" endtime="20250304 04:22:35.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:35.881" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:35.880" endtime="20250304 04:22:35.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:35.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:35.881" endtime="20250304 04:22:35.881"/>
</kw>
<status status="PASS" starttime="20250304 04:22:35.504" endtime="20250304 04:22:35.881"/>
</kw>
<msg timestamp="20250304 04:22:35.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:35.504" endtime="20250304 04:22:35.881"/>
</kw>
<status status="PASS" starttime="20250304 04:22:35.503" endtime="20250304 04:22:35.882"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:35.885" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:36.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:36.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:35.883" endtime="20250304 04:22:36.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:36.255" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:36.254" endtime="20250304 04:22:36.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:36.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:36.255" endtime="20250304 04:22:36.255"/>
</kw>
<status status="PASS" starttime="20250304 04:22:35.882" endtime="20250304 04:22:36.255"/>
</kw>
<msg timestamp="20250304 04:22:36.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:35.882" endtime="20250304 04:22:36.256"/>
</kw>
<status status="PASS" starttime="20250304 04:22:35.882" endtime="20250304 04:22:36.256"/>
</kw>
<status status="PASS" starttime="20250304 04:22:28.748" endtime="20250304 04:22:36.256"/>
</kw>
<status status="PASS" starttime="20250304 04:22:28.747" endtime="20250304 04:22:36.256"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:22:36.256" endtime="20250304 04:22:36.256"/>
</kw>
<status status="PASS" starttime="20250304 04:22:28.714" endtime="20250304 04:22:36.256"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:36.259" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:36.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:36.794" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:16:57 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:22:36.257" endtime="20250304 04:22:36.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:36.795" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:16:57 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:22:36 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:22:36 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:22:36.795" endtime="20250304 04:22:36.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:36.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:36.795" endtime="20250304 04:22:36.796"/>
</kw>
<msg timestamp="20250304 04:22:36.796" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:16:57 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:22:36.257" endtime="20250304 04:22:36.796"/>
</kw>
<msg timestamp="20250304 04:22:36.796" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:16:57 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:22:36.256" endtime="20250304 04:22:36.796"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:36.796" endtime="20250304 04:22:36.796"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:36.799" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:36.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:36.803" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:22:36.797" endtime="20250304 04:22:36.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:36.804" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:22:36.803" endtime="20250304 04:22:36.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:36.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:36.804" endtime="20250304 04:22:36.804"/>
</kw>
<msg timestamp="20250304 04:22:36.804" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:22:36.797" endtime="20250304 04:22:36.804"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:36.805" endtime="20250304 04:22:36.805"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:36.807" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:36.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:36.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:36.805" endtime="20250304 04:22:36.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:36.812" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:36.811" endtime="20250304 04:22:36.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:36.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:36.812" endtime="20250304 04:22:36.812"/>
</kw>
<status status="PASS" starttime="20250304 04:22:36.805" endtime="20250304 04:22:36.812"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:28.714" endtime="20250304 04:22:36.813"/>
</test>
<test id="s1-s21-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:22:36.814" endtime="20250304 04:22:36.815"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:36.818" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:36.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:36.822" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:22:36.816" endtime="20250304 04:22:36.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:36.823" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:22:36.823" endtime="20250304 04:22:36.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:36.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:36.823" endtime="20250304 04:22:36.824"/>
</kw>
<status status="PASS" starttime="20250304 04:22:36.815" endtime="20250304 04:22:36.824"/>
</kw>
<msg timestamp="20250304 04:22:36.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:36.815" endtime="20250304 04:22:36.824"/>
</kw>
<msg timestamp="20250304 04:22:36.824" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:22:36.815" endtime="20250304 04:22:36.824"/>
</kw>
<msg timestamp="20250304 04:22:36.824" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:36.815" endtime="20250304 04:22:36.824"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:22:36.825" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:36.824" endtime="20250304 04:22:36.825"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:36.828" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:36.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:36.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:36.826" endtime="20250304 04:22:36.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:36.856" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:36.856" endtime="20250304 04:22:36.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:36.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:36.857" endtime="20250304 04:22:36.857"/>
</kw>
<status status="PASS" starttime="20250304 04:22:36.826" endtime="20250304 04:22:36.857"/>
</kw>
<msg timestamp="20250304 04:22:36.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:36.825" endtime="20250304 04:22:36.857"/>
</kw>
<status status="PASS" starttime="20250304 04:22:36.825" endtime="20250304 04:22:36.857"/>
</kw>
<status status="PASS" starttime="20250304 04:22:36.825" endtime="20250304 04:22:36.857"/>
</kw>
<status status="PASS" starttime="20250304 04:22:36.814" endtime="20250304 04:22:36.857"/>
</kw>
<status status="PASS" starttime="20250304 04:22:36.814" endtime="20250304 04:22:36.857"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:36.861" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:38.728" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:22:38.728" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:36.858" endtime="20250304 04:22:38.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:38.729" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:38.728" endtime="20250304 04:22:38.729"/>
</kw>
<msg timestamp="20250304 04:22:38.729" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:36.858" endtime="20250304 04:22:38.729"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:38.729" endtime="20250304 04:22:38.730"/>
</kw>
<msg timestamp="20250304 04:22:38.730" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:22:38.729" endtime="20250304 04:22:38.730"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:38.733" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:40.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:40.606" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:22:38.731" endtime="20250304 04:22:40.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:40.607" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:22:40.606" endtime="20250304 04:22:40.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:40.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:40.607" endtime="20250304 04:22:40.607"/>
</kw>
<status status="PASS" starttime="20250304 04:22:38.731" endtime="20250304 04:22:40.607"/>
</kw>
<msg timestamp="20250304 04:22:40.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:38.730" endtime="20250304 04:22:40.608"/>
</kw>
<status status="PASS" starttime="20250304 04:22:38.730" endtime="20250304 04:22:40.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:40.612" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:42.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:42.448" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3542b06019b63ad7c5c5737f0c622b0590ecbdc51c37d970fdf6aaba1e508945</msg>
<status status="PASS" starttime="20250304 04:22:40.609" endtime="20250304 04:22:42.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:42.449" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3542b06019b63ad7c5c5737f0c622b0590ecbdc51c37d970fdf6aaba1e508945</msg>
<status status="PASS" starttime="20250304 04:22:42.449" endtime="20250304 04:22:42.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:42.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:42.449" endtime="20250304 04:22:42.450"/>
</kw>
<status status="PASS" starttime="20250304 04:22:40.608" endtime="20250304 04:22:42.450"/>
</kw>
<msg timestamp="20250304 04:22:42.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:40.608" endtime="20250304 04:22:42.450"/>
</kw>
<msg timestamp="20250304 04:22:42.450" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=3542b06019b63ad7c5c5737f0c622b0590ecbdc51c37d970fdf6aaba1e508945</msg>
<status status="PASS" starttime="20250304 04:22:40.608" endtime="20250304 04:22:42.450"/>
</kw>
<status status="PASS" starttime="20250304 04:22:38.730" endtime="20250304 04:22:42.450"/>
</branch>
<status status="PASS" starttime="20250304 04:22:38.730" endtime="20250304 04:22:42.450"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:22:42.451" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:22:42.451" endtime="20250304 04:22:42.451"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:22:42.452" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:22:42.451" endtime="20250304 04:22:42.452"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:22:42.452" level="INFO">${secret} = ['3542b06019b63ad7c5c5737f0c622b0590ecbdc51c37d970fdf6aaba1e508945']</msg>
<status status="PASS" starttime="20250304 04:22:42.452" endtime="20250304 04:22:42.452"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:22:42.453" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:42.452" endtime="20250304 04:22:42.453"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:22:42.454" level="INFO">${secret} = 3542b06019b63ad7c5c5737f0c622b0590ecbdc51c37d970fdf6aaba1e508945</msg>
<status status="PASS" starttime="20250304 04:22:42.453" endtime="20250304 04:22:42.454"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:42.457" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:42.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:42.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:42.455" endtime="20250304 04:22:42.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:42.829" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:42.828" endtime="20250304 04:22:42.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:42.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:42.829" endtime="20250304 04:22:42.830"/>
</kw>
<status status="PASS" starttime="20250304 04:22:42.455" endtime="20250304 04:22:42.830"/>
</kw>
<msg timestamp="20250304 04:22:42.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:42.454" endtime="20250304 04:22:42.830"/>
</kw>
<status status="PASS" starttime="20250304 04:22:42.454" endtime="20250304 04:22:42.830"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:42.833" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:43.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:43.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:42.831" endtime="20250304 04:22:43.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:43.201" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:43.201" endtime="20250304 04:22:43.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:43.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:43.201" endtime="20250304 04:22:43.202"/>
</kw>
<status status="PASS" starttime="20250304 04:22:42.831" endtime="20250304 04:22:43.202"/>
</kw>
<msg timestamp="20250304 04:22:43.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:42.830" endtime="20250304 04:22:43.202"/>
</kw>
<status status="PASS" starttime="20250304 04:22:42.830" endtime="20250304 04:22:43.202"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:43.205" level="INFO">Running command 'aws configure set aws_secret_access_key 3542b06019b63ad7c5c5737f0c622b0590ecbdc51c37d970fdf6aaba1e508945 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:43.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:43.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:43.203" endtime="20250304 04:22:43.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:43.566" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:43.565" endtime="20250304 04:22:43.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:43.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:43.566" endtime="20250304 04:22:43.566"/>
</kw>
<status status="PASS" starttime="20250304 04:22:43.203" endtime="20250304 04:22:43.566"/>
</kw>
<msg timestamp="20250304 04:22:43.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:43.203" endtime="20250304 04:22:43.566"/>
</kw>
<status status="PASS" starttime="20250304 04:22:43.202" endtime="20250304 04:22:43.567"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:43.570" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:43.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:43.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:43.568" endtime="20250304 04:22:43.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:43.943" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:43.943" endtime="20250304 04:22:43.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:43.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:43.944" endtime="20250304 04:22:43.944"/>
</kw>
<status status="PASS" starttime="20250304 04:22:43.567" endtime="20250304 04:22:43.944"/>
</kw>
<msg timestamp="20250304 04:22:43.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:43.567" endtime="20250304 04:22:43.944"/>
</kw>
<status status="PASS" starttime="20250304 04:22:43.567" endtime="20250304 04:22:43.944"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:43.948" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:44.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:44.314" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:43.945" endtime="20250304 04:22:44.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:44.315" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:44.315" endtime="20250304 04:22:44.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:44.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:44.315" endtime="20250304 04:22:44.316"/>
</kw>
<status status="PASS" starttime="20250304 04:22:43.945" endtime="20250304 04:22:44.316"/>
</kw>
<msg timestamp="20250304 04:22:44.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:43.945" endtime="20250304 04:22:44.316"/>
</kw>
<status status="PASS" starttime="20250304 04:22:43.944" endtime="20250304 04:22:44.316"/>
</kw>
<status status="PASS" starttime="20250304 04:22:36.858" endtime="20250304 04:22:44.316"/>
</kw>
<status status="PASS" starttime="20250304 04:22:36.858" endtime="20250304 04:22:44.316"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:22:44.316" endtime="20250304 04:22:44.317"/>
</kw>
<status status="PASS" starttime="20250304 04:22:36.813" endtime="20250304 04:22:44.317"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:44.320" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:44.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:44.842" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:09 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:22:44.318" endtime="20250304 04:22:44.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:44.843" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:09 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:22:44 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:22:44 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:22:44.843" endtime="20250304 04:22:44.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:44.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:44.843" endtime="20250304 04:22:44.844"/>
</kw>
<msg timestamp="20250304 04:22:44.844" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:09 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:22:44.317" endtime="20250304 04:22:44.844"/>
</kw>
<msg timestamp="20250304 04:22:44.844" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:17:09 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:22:44.317" endtime="20250304 04:22:44.844"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:44.844" endtime="20250304 04:22:44.845"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:44.847" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:44.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:44.851" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:22:44.845" endtime="20250304 04:22:44.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:44.852" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:22:44.852" endtime="20250304 04:22:44.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:44.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:44.852" endtime="20250304 04:22:44.852"/>
</kw>
<msg timestamp="20250304 04:22:44.853" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:22:44.845" endtime="20250304 04:22:44.853"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:44.853" endtime="20250304 04:22:44.853"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:44.856" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:44.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:44.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:44.854" endtime="20250304 04:22:44.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:44.860" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:44.860" endtime="20250304 04:22:44.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:44.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:44.860" endtime="20250304 04:22:44.861"/>
</kw>
<status status="PASS" starttime="20250304 04:22:44.853" endtime="20250304 04:22:44.861"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:36.813" endtime="20250304 04:22:44.861"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 04:22:24.992" endtime="20250304 04:22:44.862"/>
</suite>
<suite id="s1-s22" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-generate-new2" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:22:45.568" endtime="20250304 04:22:45.568"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:45.571" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:45.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:45.575" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:22:45.569" endtime="20250304 04:22:45.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:45.576" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:22:45.576" endtime="20250304 04:22:45.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:45.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:45.576" endtime="20250304 04:22:45.576"/>
</kw>
<status status="PASS" starttime="20250304 04:22:45.569" endtime="20250304 04:22:45.577"/>
</kw>
<msg timestamp="20250304 04:22:45.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:45.569" endtime="20250304 04:22:45.577"/>
</kw>
<msg timestamp="20250304 04:22:45.577" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:22:45.568" endtime="20250304 04:22:45.577"/>
</kw>
<msg timestamp="20250304 04:22:45.577" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:45.568" endtime="20250304 04:22:45.577"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:22:45.577" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:45.577" endtime="20250304 04:22:45.578"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:45.581" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:45.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:45.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:45.579" endtime="20250304 04:22:45.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:45.597" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:45.597" endtime="20250304 04:22:45.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:45.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:45.598" endtime="20250304 04:22:45.598"/>
</kw>
<status status="PASS" starttime="20250304 04:22:45.579" endtime="20250304 04:22:45.598"/>
</kw>
<msg timestamp="20250304 04:22:45.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:45.578" endtime="20250304 04:22:45.598"/>
</kw>
<status status="PASS" starttime="20250304 04:22:45.578" endtime="20250304 04:22:45.598"/>
</kw>
<status status="PASS" starttime="20250304 04:22:45.578" endtime="20250304 04:22:45.598"/>
</kw>
<status status="PASS" starttime="20250304 04:22:45.568" endtime="20250304 04:22:45.598"/>
</kw>
<status status="PASS" starttime="20250304 04:22:45.567" endtime="20250304 04:22:45.598"/>
</kw>
<test id="s1-s22-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:45.602" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:47.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:47.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:45.600" endtime="20250304 04:22:47.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:47.762" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:47.761" endtime="20250304 04:22:47.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:47.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:47.762" endtime="20250304 04:22:47.762"/>
</kw>
<status status="PASS" starttime="20250304 04:22:45.600" endtime="20250304 04:22:47.763"/>
</kw>
<msg timestamp="20250304 04:22:47.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:45.599" endtime="20250304 04:22:47.763"/>
</kw>
<msg timestamp="20250304 04:22:47.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:45.599" endtime="20250304 04:22:47.763"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:47.763" endtime="20250304 04:22:47.763"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:47.767" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:49.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:49.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:47.765" endtime="20250304 04:22:49.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:49.985" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:49.984" endtime="20250304 04:22:49.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:49.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:49.985" endtime="20250304 04:22:49.985"/>
</kw>
<status status="PASS" starttime="20250304 04:22:47.764" endtime="20250304 04:22:49.986"/>
</kw>
<msg timestamp="20250304 04:22:49.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:47.764" endtime="20250304 04:22:49.986"/>
</kw>
<msg timestamp="20250304 04:22:49.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:47.763" endtime="20250304 04:22:49.986"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:49.986" endtime="20250304 04:22:49.986"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:45.599" endtime="20250304 04:22:49.986"/>
</test>
<test id="s1-s22-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:49.990" level="INFO">Running command 'echo "new2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:22:49.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:49.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:49.988" endtime="20250304 04:22:49.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:49.993" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:49.992" endtime="20250304 04:22:49.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:49.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:49.993" endtime="20250304 04:22:49.993"/>
</kw>
<status status="PASS" starttime="20250304 04:22:49.987" endtime="20250304 04:22:49.993"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:49.996" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:53.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:53.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:49.994" endtime="20250304 04:22:53.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:53.869" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:53.868" endtime="20250304 04:22:53.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:53.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:53.869" endtime="20250304 04:22:53.870"/>
</kw>
<status status="PASS" starttime="20250304 04:22:49.994" endtime="20250304 04:22:53.870"/>
</kw>
<msg timestamp="20250304 04:22:53.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:49.994" endtime="20250304 04:22:53.870"/>
</kw>
<msg timestamp="20250304 04:22:53.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:49.994" endtime="20250304 04:22:53.870"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:53.871" endtime="20250304 04:22:53.871"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:53.874" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:53.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:53.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:53.871" endtime="20250304 04:22:53.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:53.879" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:53.878" endtime="20250304 04:22:53.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:53.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:53.879" endtime="20250304 04:22:53.880"/>
</kw>
<status status="PASS" starttime="20250304 04:22:53.871" endtime="20250304 04:22:53.880"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:49.987" endtime="20250304 04:22:53.880"/>
</test>
<test id="s1-s22-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:53.885" level="INFO">Running command 'ozone sh bucket create /s3v/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:56.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:56.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:53.882" endtime="20250304 04:22:56.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:56.023" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:56.022" endtime="20250304 04:22:56.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:56.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:56.023" endtime="20250304 04:22:56.023"/>
</kw>
<status status="PASS" starttime="20250304 04:22:53.882" endtime="20250304 04:22:56.023"/>
</kw>
<msg timestamp="20250304 04:22:56.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:53.881" endtime="20250304 04:22:56.023"/>
</kw>
<msg timestamp="20250304 04:22:56.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:53.881" endtime="20250304 04:22:56.024"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:56.024" endtime="20250304 04:22:56.024"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:53.881" endtime="20250304 04:22:56.024"/>
</test>
<test id="s1-s22-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:56.028" level="INFO">Running command 'echo "new2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:22:56.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:56.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:56.026" endtime="20250304 04:22:56.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:56.031" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:56.030" endtime="20250304 04:22:56.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:56.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:56.031" endtime="20250304 04:22:56.031"/>
</kw>
<status status="PASS" starttime="20250304 04:22:56.025" endtime="20250304 04:22:56.031"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:56.035" level="INFO">Running command 'ozone sh key put /s3v/new2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:59.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:59.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:56.033" endtime="20250304 04:22:59.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:59.713" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:59.712" endtime="20250304 04:22:59.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:59.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:59.713" endtime="20250304 04:22:59.713"/>
</kw>
<status status="PASS" starttime="20250304 04:22:56.032" endtime="20250304 04:22:59.714"/>
</kw>
<msg timestamp="20250304 04:22:59.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:56.032" endtime="20250304 04:22:59.714"/>
</kw>
<msg timestamp="20250304 04:22:59.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:56.031" endtime="20250304 04:22:59.714"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:22:59.714" endtime="20250304 04:22:59.714"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:59.718" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:59.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:59.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:59.715" endtime="20250304 04:22:59.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:59.723" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:59.722" endtime="20250304 04:22:59.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:59.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:59.723" endtime="20250304 04:22:59.723"/>
</kw>
<status status="PASS" starttime="20250304 04:22:59.715" endtime="20250304 04:22:59.724"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:56.025" endtime="20250304 04:22:59.724"/>
</test>
<test id="s1-s22-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:22:59.726" endtime="20250304 04:22:59.726"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:59.730" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:59.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:59.734" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:22:59.727" endtime="20250304 04:22:59.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:59.735" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:22:59.734" endtime="20250304 04:22:59.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:59.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:59.735" endtime="20250304 04:22:59.735"/>
</kw>
<status status="PASS" starttime="20250304 04:22:59.727" endtime="20250304 04:22:59.735"/>
</kw>
<msg timestamp="20250304 04:22:59.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:59.727" endtime="20250304 04:22:59.735"/>
</kw>
<msg timestamp="20250304 04:22:59.736" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:22:59.726" endtime="20250304 04:22:59.736"/>
</kw>
<msg timestamp="20250304 04:22:59.736" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:59.726" endtime="20250304 04:22:59.736"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:22:59.736" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:22:59.736" endtime="20250304 04:22:59.736"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:59.740" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:22:59.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:22:59.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:22:59.737" endtime="20250304 04:22:59.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:22:59.759" level="INFO"/>
<status status="PASS" starttime="20250304 04:22:59.758" endtime="20250304 04:22:59.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:22:59.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:22:59.759" endtime="20250304 04:22:59.760"/>
</kw>
<status status="PASS" starttime="20250304 04:22:59.737" endtime="20250304 04:22:59.760"/>
</kw>
<msg timestamp="20250304 04:22:59.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:22:59.737" endtime="20250304 04:22:59.760"/>
</kw>
<status status="PASS" starttime="20250304 04:22:59.737" endtime="20250304 04:22:59.760"/>
</kw>
<status status="PASS" starttime="20250304 04:22:59.736" endtime="20250304 04:22:59.760"/>
</kw>
<status status="PASS" starttime="20250304 04:22:59.725" endtime="20250304 04:22:59.760"/>
</kw>
<status status="PASS" starttime="20250304 04:22:59.725" endtime="20250304 04:22:59.760"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:22:59.764" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:01.667" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:23:01.667" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:59.761" endtime="20250304 04:23:01.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:01.668" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:23:01.667" endtime="20250304 04:23:01.668"/>
</kw>
<msg timestamp="20250304 04:23:01.668" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:22:59.761" endtime="20250304 04:23:01.668"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:01.669" endtime="20250304 04:23:01.669"/>
</kw>
<msg timestamp="20250304 04:23:01.669" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:23:01.668" endtime="20250304 04:23:01.669"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:01.672" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:03.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:03.591" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:23:01.670" endtime="20250304 04:23:03.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:03.592" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:23:03.592" endtime="20250304 04:23:03.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:03.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:03.593" endtime="20250304 04:23:03.593"/>
</kw>
<status status="PASS" starttime="20250304 04:23:01.670" endtime="20250304 04:23:03.593"/>
</kw>
<msg timestamp="20250304 04:23:03.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:01.670" endtime="20250304 04:23:03.593"/>
</kw>
<status status="PASS" starttime="20250304 04:23:01.669" endtime="20250304 04:23:03.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:03.597" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:05.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:05.497" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=d55efa3344d803c5f94deb4934a6ce2d35a1f283d20b13e85a350b9732a41dd0</msg>
<status status="PASS" starttime="20250304 04:23:03.594" endtime="20250304 04:23:05.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:05.498" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=d55efa3344d803c5f94deb4934a6ce2d35a1f283d20b13e85a350b9732a41dd0</msg>
<status status="PASS" starttime="20250304 04:23:05.498" endtime="20250304 04:23:05.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:05.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:05.498" endtime="20250304 04:23:05.499"/>
</kw>
<status status="PASS" starttime="20250304 04:23:03.594" endtime="20250304 04:23:05.499"/>
</kw>
<msg timestamp="20250304 04:23:05.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:03.594" endtime="20250304 04:23:05.499"/>
</kw>
<msg timestamp="20250304 04:23:05.499" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=d55efa3344d803c5f94deb4934a6ce2d35a1f283d20b13e85a350b9732a41dd0</msg>
<status status="PASS" starttime="20250304 04:23:03.593" endtime="20250304 04:23:05.499"/>
</kw>
<status status="PASS" starttime="20250304 04:23:01.669" endtime="20250304 04:23:05.499"/>
</branch>
<status status="PASS" starttime="20250304 04:23:01.669" endtime="20250304 04:23:05.499"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:23:05.500" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:23:05.499" endtime="20250304 04:23:05.500"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:23:05.500" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:23:05.500" endtime="20250304 04:23:05.500"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:23:05.501" level="INFO">${secret} = ['d55efa3344d803c5f94deb4934a6ce2d35a1f283d20b13e85a350b9732a41dd0']</msg>
<status status="PASS" starttime="20250304 04:23:05.501" endtime="20250304 04:23:05.501"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:23:05.502" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:23:05.501" endtime="20250304 04:23:05.502"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:23:05.503" level="INFO">${secret} = d55efa3344d803c5f94deb4934a6ce2d35a1f283d20b13e85a350b9732a41dd0</msg>
<status status="PASS" starttime="20250304 04:23:05.502" endtime="20250304 04:23:05.503"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:05.506" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:05.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:05.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:05.504" endtime="20250304 04:23:05.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:05.883" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:05.883" endtime="20250304 04:23:05.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:05.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:05.883" endtime="20250304 04:23:05.884"/>
</kw>
<status status="PASS" starttime="20250304 04:23:05.503" endtime="20250304 04:23:05.884"/>
</kw>
<msg timestamp="20250304 04:23:05.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:05.503" endtime="20250304 04:23:05.884"/>
</kw>
<status status="PASS" starttime="20250304 04:23:05.503" endtime="20250304 04:23:05.884"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:05.888" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:06.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:06.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:05.885" endtime="20250304 04:23:06.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:06.269" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:06.268" endtime="20250304 04:23:06.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:06.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:06.269" endtime="20250304 04:23:06.269"/>
</kw>
<status status="PASS" starttime="20250304 04:23:05.885" endtime="20250304 04:23:06.269"/>
</kw>
<msg timestamp="20250304 04:23:06.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:05.885" endtime="20250304 04:23:06.270"/>
</kw>
<status status="PASS" starttime="20250304 04:23:05.884" endtime="20250304 04:23:06.270"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:06.273" level="INFO">Running command 'aws configure set aws_secret_access_key d55efa3344d803c5f94deb4934a6ce2d35a1f283d20b13e85a350b9732a41dd0 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:06.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:06.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:06.271" endtime="20250304 04:23:06.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:06.650" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:06.650" endtime="20250304 04:23:06.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:06.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:06.650" endtime="20250304 04:23:06.651"/>
</kw>
<status status="PASS" starttime="20250304 04:23:06.270" endtime="20250304 04:23:06.651"/>
</kw>
<msg timestamp="20250304 04:23:06.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:06.270" endtime="20250304 04:23:06.651"/>
</kw>
<status status="PASS" starttime="20250304 04:23:06.270" endtime="20250304 04:23:06.651"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:06.655" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:07.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:07.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:06.652" endtime="20250304 04:23:07.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:07.024" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:07.023" endtime="20250304 04:23:07.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:07.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:07.024" endtime="20250304 04:23:07.024"/>
</kw>
<status status="PASS" starttime="20250304 04:23:06.652" endtime="20250304 04:23:07.024"/>
</kw>
<msg timestamp="20250304 04:23:07.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:06.652" endtime="20250304 04:23:07.025"/>
</kw>
<status status="PASS" starttime="20250304 04:23:06.651" endtime="20250304 04:23:07.025"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:07.028" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:07.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:07.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:07.026" endtime="20250304 04:23:07.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:07.392" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:07.391" endtime="20250304 04:23:07.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:07.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:07.392" endtime="20250304 04:23:07.393"/>
</kw>
<status status="PASS" starttime="20250304 04:23:07.025" endtime="20250304 04:23:07.393"/>
</kw>
<msg timestamp="20250304 04:23:07.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:07.025" endtime="20250304 04:23:07.393"/>
</kw>
<status status="PASS" starttime="20250304 04:23:07.025" endtime="20250304 04:23:07.393"/>
</kw>
<status status="PASS" starttime="20250304 04:22:59.761" endtime="20250304 04:23:07.393"/>
</kw>
<status status="PASS" starttime="20250304 04:22:59.760" endtime="20250304 04:23:07.393"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:23:07.393" endtime="20250304 04:23:07.393"/>
</kw>
<status status="PASS" starttime="20250304 04:22:59.725" endtime="20250304 04:23:07.393"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:23:07.394" level="INFO">${randStr} = 3751836957</msg>
<status status="PASS" starttime="20250304 04:23:07.394" endtime="20250304 04:23:07.394"/>
</kw>
<msg timestamp="20250304 04:23:07.394" level="INFO">${random} = ozone-test-3751836957</msg>
<status status="PASS" starttime="20250304 04:23:07.394" endtime="20250304 04:23:07.394"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:07.398" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new2-bucket-ozone-test-3751836957 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:07.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:07.935" level="INFO">${output} = {
    "Location": "http://s3g:9878/new2-bucket-ozone-test-3751836957"
}</msg>
<status status="PASS" starttime="20250304 04:23:07.396" endtime="20250304 04:23:07.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:07.936" level="INFO">{
    "Location": "http://s3g:9878/new2-bucket-ozone-test-3751836957"
}</msg>
<status status="PASS" starttime="20250304 04:23:07.936" endtime="20250304 04:23:07.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:07.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:07.937" endtime="20250304 04:23:07.937"/>
</kw>
<status status="PASS" starttime="20250304 04:23:07.396" endtime="20250304 04:23:07.937"/>
</kw>
<msg timestamp="20250304 04:23:07.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:07.395" endtime="20250304 04:23:07.937"/>
</kw>
<msg timestamp="20250304 04:23:07.937" level="INFO">${output} = {
    "Location": "http://s3g:9878/new2-bucket-ozone-test-3751836957"
}</msg>
<status status="PASS" starttime="20250304 04:23:07.395" endtime="20250304 04:23:07.937"/>
</kw>
<msg timestamp="20250304 04:23:07.937" level="INFO">${result} = {
    "Location": "http://s3g:9878/new2-bucket-ozone-test-3751836957"
}</msg>
<status status="PASS" starttime="20250304 04:23:07.395" endtime="20250304 04:23:07.937"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:07.938" endtime="20250304 04:23:07.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:07.938" endtime="20250304 04:23:07.938"/>
</kw>
<msg timestamp="20250304 04:23:07.938" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20250304 04:23:07.395" endtime="20250304 04:23:07.938"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250304 04:23:07.938" endtime="20250304 04:23:07.939"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:22:59.724" endtime="20250304 04:23:07.939"/>
</test>
<test id="s1-s22-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:07.943" level="INFO">Running command 'echo "new2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20250304 04:23:07.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:07.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:07.940" endtime="20250304 04:23:07.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:07.946" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:07.945" endtime="20250304 04:23:07.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:07.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:07.946" endtime="20250304 04:23:07.946"/>
</kw>
<status status="PASS" starttime="20250304 04:23:07.940" endtime="20250304 04:23:07.946"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:07.949" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:08.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:08.899" level="INFO">${output} = {
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\""
}</msg>
<status status="PASS" starttime="20250304 04:23:07.947" endtime="20250304 04:23:08.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:08.900" level="INFO">{
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\""
}</msg>
<status status="PASS" starttime="20250304 04:23:08.899" endtime="20250304 04:23:08.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:08.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:08.900" endtime="20250304 04:23:08.900"/>
</kw>
<msg timestamp="20250304 04:23:08.900" level="INFO">${output} = {
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\""
}</msg>
<status status="PASS" starttime="20250304 04:23:07.947" endtime="20250304 04:23:08.900"/>
</kw>
<msg timestamp="20250304 04:23:08.901" level="INFO">${output} = {
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\""
}</msg>
<status status="PASS" starttime="20250304 04:23:07.947" endtime="20250304 04:23:08.901"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:08.901" endtime="20250304 04:23:08.901"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:08.904" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:08.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:08.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:08.901" endtime="20250304 04:23:08.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:08.908" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:08.908" endtime="20250304 04:23:08.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:08.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:08.908" endtime="20250304 04:23:08.909"/>
</kw>
<status status="PASS" starttime="20250304 04:23:08.901" endtime="20250304 04:23:08.909"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:23:07.939" endtime="20250304 04:23:08.909"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20250304 04:22:45.511" endtime="20250304 04:23:08.910"/>
</suite>
<suite id="s1-s23" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-validate-new2" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:23:09.592" endtime="20250304 04:23:09.592"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:09.596" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:09.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:09.599" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:23:09.593" endtime="20250304 04:23:09.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:09.600" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:23:09.600" endtime="20250304 04:23:09.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:09.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:09.600" endtime="20250304 04:23:09.601"/>
</kw>
<status status="PASS" starttime="20250304 04:23:09.593" endtime="20250304 04:23:09.601"/>
</kw>
<msg timestamp="20250304 04:23:09.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:09.593" endtime="20250304 04:23:09.601"/>
</kw>
<msg timestamp="20250304 04:23:09.601" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:23:09.593" endtime="20250304 04:23:09.601"/>
</kw>
<msg timestamp="20250304 04:23:09.601" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:23:09.592" endtime="20250304 04:23:09.601"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:23:09.601" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:23:09.601" endtime="20250304 04:23:09.602"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:09.604" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:09.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:09.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:09.603" endtime="20250304 04:23:09.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:09.643" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:09.642" endtime="20250304 04:23:09.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:09.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:09.643" endtime="20250304 04:23:09.643"/>
</kw>
<status status="PASS" starttime="20250304 04:23:09.602" endtime="20250304 04:23:09.643"/>
</kw>
<msg timestamp="20250304 04:23:09.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:09.602" endtime="20250304 04:23:09.644"/>
</kw>
<status status="PASS" starttime="20250304 04:23:09.602" endtime="20250304 04:23:09.644"/>
</kw>
<status status="PASS" starttime="20250304 04:23:09.602" endtime="20250304 04:23:09.644"/>
</kw>
<status status="PASS" starttime="20250304 04:23:09.592" endtime="20250304 04:23:09.644"/>
</kw>
<status status="PASS" starttime="20250304 04:23:09.591" endtime="20250304 04:23:09.644"/>
</kw>
<test id="s1-s23-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250304 04:23:09.645" level="INFO">${random} = 71978</msg>
<status status="PASS" starttime="20250304 04:23:09.645" endtime="20250304 04:23:09.645"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:09.649" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-71978 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:13.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:13.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:09.646" endtime="20250304 04:23:13.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:13.054" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:13.053" endtime="20250304 04:23:13.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:13.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:13.054" endtime="20250304 04:23:13.054"/>
</kw>
<status status="PASS" starttime="20250304 04:23:09.646" endtime="20250304 04:23:13.055"/>
</kw>
<msg timestamp="20250304 04:23:13.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:09.646" endtime="20250304 04:23:13.055"/>
</kw>
<msg timestamp="20250304 04:23:13.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:09.645" endtime="20250304 04:23:13.055"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:13.055" endtime="20250304 04:23:13.055"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:13.058" level="INFO">Running command 'cat /tmp/key-71978 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:13.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:13.062" level="INFO">${output} = new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:23:13.056" endtime="20250304 04:23:13.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:13.063" level="INFO">new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:23:13.062" endtime="20250304 04:23:13.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:13.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:13.063" endtime="20250304 04:23:13.063"/>
</kw>
<msg timestamp="20250304 04:23:13.063" level="INFO">${output} = new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:23:13.055" endtime="20250304 04:23:13.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:13.063" endtime="20250304 04:23:13.064"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:13.066" level="INFO">Running command 'rm /tmp/key-71978 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:13.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:13.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:13.064" endtime="20250304 04:23:13.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:13.070" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:13.070" endtime="20250304 04:23:13.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:13.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:13.070" endtime="20250304 04:23:13.071"/>
</kw>
<status status="PASS" starttime="20250304 04:23:13.064" endtime="20250304 04:23:13.071"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:23:09.644" endtime="20250304 04:23:13.071"/>
</test>
<test id="s1-s23-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:23:13.073" endtime="20250304 04:23:13.073"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:13.076" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:13.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:13.080" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:23:13.074" endtime="20250304 04:23:13.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:13.080" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:23:13.080" endtime="20250304 04:23:13.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:13.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:13.080" endtime="20250304 04:23:13.081"/>
</kw>
<status status="PASS" starttime="20250304 04:23:13.074" endtime="20250304 04:23:13.081"/>
</kw>
<msg timestamp="20250304 04:23:13.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:13.074" endtime="20250304 04:23:13.081"/>
</kw>
<msg timestamp="20250304 04:23:13.081" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:23:13.073" endtime="20250304 04:23:13.081"/>
</kw>
<msg timestamp="20250304 04:23:13.081" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:23:13.073" endtime="20250304 04:23:13.081"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:23:13.082" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:23:13.081" endtime="20250304 04:23:13.082"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:13.085" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:13.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:13.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:13.083" endtime="20250304 04:23:13.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:13.129" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:13.129" endtime="20250304 04:23:13.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:13.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:13.129" endtime="20250304 04:23:13.130"/>
</kw>
<status status="PASS" starttime="20250304 04:23:13.083" endtime="20250304 04:23:13.130"/>
</kw>
<msg timestamp="20250304 04:23:13.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:13.083" endtime="20250304 04:23:13.130"/>
</kw>
<status status="PASS" starttime="20250304 04:23:13.082" endtime="20250304 04:23:13.130"/>
</kw>
<status status="PASS" starttime="20250304 04:23:13.082" endtime="20250304 04:23:13.130"/>
</kw>
<status status="PASS" starttime="20250304 04:23:13.072" endtime="20250304 04:23:13.130"/>
</kw>
<status status="PASS" starttime="20250304 04:23:13.072" endtime="20250304 04:23:13.130"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:13.133" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:15.019" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:23:15.019" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:23:13.131" endtime="20250304 04:23:15.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:15.020" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:23:15.020" endtime="20250304 04:23:15.020"/>
</kw>
<msg timestamp="20250304 04:23:15.021" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:23:13.131" endtime="20250304 04:23:15.021"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:15.021" endtime="20250304 04:23:15.021"/>
</kw>
<msg timestamp="20250304 04:23:15.021" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:23:15.021" endtime="20250304 04:23:15.021"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:15.025" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:16.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:16.870" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:23:15.023" endtime="20250304 04:23:16.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:16.871" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:23:16.871" endtime="20250304 04:23:16.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:16.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:16.871" endtime="20250304 04:23:16.872"/>
</kw>
<status status="PASS" starttime="20250304 04:23:15.022" endtime="20250304 04:23:16.872"/>
</kw>
<msg timestamp="20250304 04:23:16.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:15.022" endtime="20250304 04:23:16.872"/>
</kw>
<status status="PASS" starttime="20250304 04:23:15.022" endtime="20250304 04:23:16.872"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:16.876" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:18.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:18.726" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=d808cc32a48174a116ac76610ee99aef41438cce9cfe4f0125d086c73dbc5ea1</msg>
<status status="PASS" starttime="20250304 04:23:16.873" endtime="20250304 04:23:18.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:18.727" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=d808cc32a48174a116ac76610ee99aef41438cce9cfe4f0125d086c73dbc5ea1</msg>
<status status="PASS" starttime="20250304 04:23:18.727" endtime="20250304 04:23:18.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:18.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:18.727" endtime="20250304 04:23:18.728"/>
</kw>
<status status="PASS" starttime="20250304 04:23:16.873" endtime="20250304 04:23:18.728"/>
</kw>
<msg timestamp="20250304 04:23:18.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:16.873" endtime="20250304 04:23:18.728"/>
</kw>
<msg timestamp="20250304 04:23:18.728" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=d808cc32a48174a116ac76610ee99aef41438cce9cfe4f0125d086c73dbc5ea1</msg>
<status status="PASS" starttime="20250304 04:23:16.872" endtime="20250304 04:23:18.728"/>
</kw>
<status status="PASS" starttime="20250304 04:23:15.022" endtime="20250304 04:23:18.728"/>
</branch>
<status status="PASS" starttime="20250304 04:23:15.021" endtime="20250304 04:23:18.728"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:23:18.729" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:23:18.729" endtime="20250304 04:23:18.729"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:23:18.729" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:23:18.729" endtime="20250304 04:23:18.730"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:23:18.730" level="INFO">${secret} = ['d808cc32a48174a116ac76610ee99aef41438cce9cfe4f0125d086c73dbc5ea1']</msg>
<status status="PASS" starttime="20250304 04:23:18.730" endtime="20250304 04:23:18.730"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:23:18.731" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:23:18.730" endtime="20250304 04:23:18.731"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:23:18.732" level="INFO">${secret} = d808cc32a48174a116ac76610ee99aef41438cce9cfe4f0125d086c73dbc5ea1</msg>
<status status="PASS" starttime="20250304 04:23:18.731" endtime="20250304 04:23:18.732"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:18.735" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:19.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:19.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:18.733" endtime="20250304 04:23:19.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:19.104" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:19.104" endtime="20250304 04:23:19.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:19.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:19.105" endtime="20250304 04:23:19.105"/>
</kw>
<status status="PASS" starttime="20250304 04:23:18.733" endtime="20250304 04:23:19.105"/>
</kw>
<msg timestamp="20250304 04:23:19.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:18.732" endtime="20250304 04:23:19.105"/>
</kw>
<status status="PASS" starttime="20250304 04:23:18.732" endtime="20250304 04:23:19.105"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:19.109" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:19.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:19.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:19.106" endtime="20250304 04:23:19.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:19.476" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:19.475" endtime="20250304 04:23:19.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:19.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:19.476" endtime="20250304 04:23:19.476"/>
</kw>
<status status="PASS" starttime="20250304 04:23:19.106" endtime="20250304 04:23:19.476"/>
</kw>
<msg timestamp="20250304 04:23:19.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:19.106" endtime="20250304 04:23:19.476"/>
</kw>
<status status="PASS" starttime="20250304 04:23:19.105" endtime="20250304 04:23:19.476"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:19.480" level="INFO">Running command 'aws configure set aws_secret_access_key d808cc32a48174a116ac76610ee99aef41438cce9cfe4f0125d086c73dbc5ea1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:19.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:19.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:19.477" endtime="20250304 04:23:19.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:19.858" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:19.857" endtime="20250304 04:23:19.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:19.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:19.858" endtime="20250304 04:23:19.859"/>
</kw>
<status status="PASS" starttime="20250304 04:23:19.477" endtime="20250304 04:23:19.859"/>
</kw>
<msg timestamp="20250304 04:23:19.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:19.477" endtime="20250304 04:23:19.859"/>
</kw>
<status status="PASS" starttime="20250304 04:23:19.477" endtime="20250304 04:23:19.859"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:19.862" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:20.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:20.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:19.860" endtime="20250304 04:23:20.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:20.229" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:20.228" endtime="20250304 04:23:20.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:20.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:20.229" endtime="20250304 04:23:20.229"/>
</kw>
<status status="PASS" starttime="20250304 04:23:19.860" endtime="20250304 04:23:20.229"/>
</kw>
<msg timestamp="20250304 04:23:20.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:19.859" endtime="20250304 04:23:20.229"/>
</kw>
<status status="PASS" starttime="20250304 04:23:19.859" endtime="20250304 04:23:20.229"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:20.233" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:20.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:20.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:20.230" endtime="20250304 04:23:20.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:20.590" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:20.589" endtime="20250304 04:23:20.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:20.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:20.590" endtime="20250304 04:23:20.590"/>
</kw>
<status status="PASS" starttime="20250304 04:23:20.230" endtime="20250304 04:23:20.591"/>
</kw>
<msg timestamp="20250304 04:23:20.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:20.230" endtime="20250304 04:23:20.591"/>
</kw>
<status status="PASS" starttime="20250304 04:23:20.230" endtime="20250304 04:23:20.591"/>
</kw>
<status status="PASS" starttime="20250304 04:23:13.131" endtime="20250304 04:23:20.591"/>
</kw>
<status status="PASS" starttime="20250304 04:23:13.130" endtime="20250304 04:23:20.591"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:23:20.591" endtime="20250304 04:23:20.591"/>
</kw>
<status status="PASS" starttime="20250304 04:23:13.072" endtime="20250304 04:23:20.591"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:20.595" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:21.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:21.172" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:22:59 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:23:20.592" endtime="20250304 04:23:21.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:21.173" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:22:59 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:23:21 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:23:21 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:23:21.173" endtime="20250304 04:23:21.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:21.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:21.173" endtime="20250304 04:23:21.174"/>
</kw>
<msg timestamp="20250304 04:23:21.174" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:22:59 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:23:20.592" endtime="20250304 04:23:21.174"/>
</kw>
<msg timestamp="20250304 04:23:21.174" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:22:59 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20250304 04:23:20.591" endtime="20250304 04:23:21.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:21.174" endtime="20250304 04:23:21.174"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:21.177" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:21.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:21.181" level="INFO">${output} = new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:23:21.175" endtime="20250304 04:23:21.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:21.182" level="INFO">new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:23:21.181" endtime="20250304 04:23:21.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:21.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:21.182" endtime="20250304 04:23:21.182"/>
</kw>
<msg timestamp="20250304 04:23:21.182" level="INFO">${output} = new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20250304 04:23:21.175" endtime="20250304 04:23:21.182"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:21.182" endtime="20250304 04:23:21.183"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:21.185" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:21.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:21.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:21.183" endtime="20250304 04:23:21.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:21.189" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:21.189" endtime="20250304 04:23:21.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:21.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:21.190" endtime="20250304 04:23:21.190"/>
</kw>
<status status="PASS" starttime="20250304 04:23:21.183" endtime="20250304 04:23:21.190"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:23:13.071" endtime="20250304 04:23:21.190"/>
</test>
<test id="s1-s23-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250304 04:23:21.192" endtime="20250304 04:23:21.192"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:21.196" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:21.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:21.199" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250304 04:23:21.193" endtime="20250304 04:23:21.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:21.200" level="INFO">scm</msg>
<status status="PASS" starttime="20250304 04:23:21.200" endtime="20250304 04:23:21.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:21.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:21.200" endtime="20250304 04:23:21.201"/>
</kw>
<status status="PASS" starttime="20250304 04:23:21.193" endtime="20250304 04:23:21.201"/>
</kw>
<msg timestamp="20250304 04:23:21.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:21.193" endtime="20250304 04:23:21.201"/>
</kw>
<msg timestamp="20250304 04:23:21.201" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250304 04:23:21.193" endtime="20250304 04:23:21.201"/>
</kw>
<msg timestamp="20250304 04:23:21.202" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:23:21.192" endtime="20250304 04:23:21.202"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250304 04:23:21.202" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:23:21.202" endtime="20250304 04:23:21.202"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:21.206" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:21.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:21.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:21.204" endtime="20250304 04:23:21.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:21.223" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:21.223" endtime="20250304 04:23:21.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:21.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:21.223" endtime="20250304 04:23:21.224"/>
</kw>
<status status="PASS" starttime="20250304 04:23:21.203" endtime="20250304 04:23:21.224"/>
</kw>
<msg timestamp="20250304 04:23:21.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:21.203" endtime="20250304 04:23:21.224"/>
</kw>
<status status="PASS" starttime="20250304 04:23:21.202" endtime="20250304 04:23:21.224"/>
</kw>
<status status="PASS" starttime="20250304 04:23:21.202" endtime="20250304 04:23:21.224"/>
</kw>
<status status="PASS" starttime="20250304 04:23:21.192" endtime="20250304 04:23:21.224"/>
</kw>
<status status="PASS" starttime="20250304 04:23:21.191" endtime="20250304 04:23:21.224"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:21.228" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:23.072" level="INFO">${rc} = 255</msg>
<msg timestamp="20250304 04:23:23.072" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:23:21.225" endtime="20250304 04:23:23.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:23.073" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:23:23.073" endtime="20250304 04:23:23.073"/>
</kw>
<msg timestamp="20250304 04:23:23.074" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250304 04:23:21.225" endtime="20250304 04:23:23.074"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:23.074" endtime="20250304 04:23:23.074"/>
</kw>
<msg timestamp="20250304 04:23:23.074" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250304 04:23:23.074" endtime="20250304 04:23:23.074"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:23.078" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:24.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:24.955" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:23:23.075" endtime="20250304 04:23:24.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:24.956" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250304 04:23:24.955" endtime="20250304 04:23:24.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:24.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:24.956" endtime="20250304 04:23:24.956"/>
</kw>
<status status="PASS" starttime="20250304 04:23:23.075" endtime="20250304 04:23:24.956"/>
</kw>
<msg timestamp="20250304 04:23:24.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:23.075" endtime="20250304 04:23:24.956"/>
</kw>
<status status="PASS" starttime="20250304 04:23:23.075" endtime="20250304 04:23:24.956"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:24.961" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:26.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:26.834" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=53b652e6e092b0b92e1d557873edc1de4f3c052446c3da37b75718f29c5dd75e</msg>
<status status="PASS" starttime="20250304 04:23:24.958" endtime="20250304 04:23:26.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:26.835" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=53b652e6e092b0b92e1d557873edc1de4f3c052446c3da37b75718f29c5dd75e</msg>
<status status="PASS" starttime="20250304 04:23:26.835" endtime="20250304 04:23:26.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:26.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:26.836" endtime="20250304 04:23:26.836"/>
</kw>
<status status="PASS" starttime="20250304 04:23:24.957" endtime="20250304 04:23:26.836"/>
</kw>
<msg timestamp="20250304 04:23:26.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:24.957" endtime="20250304 04:23:26.836"/>
</kw>
<msg timestamp="20250304 04:23:26.837" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=53b652e6e092b0b92e1d557873edc1de4f3c052446c3da37b75718f29c5dd75e</msg>
<status status="PASS" starttime="20250304 04:23:24.957" endtime="20250304 04:23:26.837"/>
</kw>
<status status="PASS" starttime="20250304 04:23:23.074" endtime="20250304 04:23:26.837"/>
</branch>
<status status="PASS" starttime="20250304 04:23:23.074" endtime="20250304 04:23:26.837"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:23:26.837" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:23:26.837" endtime="20250304 04:23:26.837"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250304 04:23:26.838" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250304 04:23:26.837" endtime="20250304 04:23:26.838"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250304 04:23:26.838" level="INFO">${secret} = ['53b652e6e092b0b92e1d557873edc1de4f3c052446c3da37b75718f29c5dd75e']</msg>
<status status="PASS" starttime="20250304 04:23:26.838" endtime="20250304 04:23:26.838"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:23:26.839" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250304 04:23:26.838" endtime="20250304 04:23:26.839"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250304 04:23:26.840" level="INFO">${secret} = 53b652e6e092b0b92e1d557873edc1de4f3c052446c3da37b75718f29c5dd75e</msg>
<status status="PASS" starttime="20250304 04:23:26.839" endtime="20250304 04:23:26.840"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:26.843" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:27.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:27.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:26.841" endtime="20250304 04:23:27.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:27.215" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:27.214" endtime="20250304 04:23:27.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:27.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:27.215" endtime="20250304 04:23:27.215"/>
</kw>
<status status="PASS" starttime="20250304 04:23:26.840" endtime="20250304 04:23:27.215"/>
</kw>
<msg timestamp="20250304 04:23:27.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:26.840" endtime="20250304 04:23:27.216"/>
</kw>
<status status="PASS" starttime="20250304 04:23:26.840" endtime="20250304 04:23:27.216"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:27.219" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:27.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:27.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:27.217" endtime="20250304 04:23:27.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:27.578" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:27.577" endtime="20250304 04:23:27.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:27.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:27.578" endtime="20250304 04:23:27.578"/>
</kw>
<status status="PASS" starttime="20250304 04:23:27.216" endtime="20250304 04:23:27.578"/>
</kw>
<msg timestamp="20250304 04:23:27.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:27.216" endtime="20250304 04:23:27.578"/>
</kw>
<status status="PASS" starttime="20250304 04:23:27.216" endtime="20250304 04:23:27.578"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:27.582" level="INFO">Running command 'aws configure set aws_secret_access_key 53b652e6e092b0b92e1d557873edc1de4f3c052446c3da37b75718f29c5dd75e 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:27.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:27.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:27.580" endtime="20250304 04:23:27.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:27.954" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:27.953" endtime="20250304 04:23:27.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:27.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:27.954" endtime="20250304 04:23:27.954"/>
</kw>
<status status="PASS" starttime="20250304 04:23:27.579" endtime="20250304 04:23:27.955"/>
</kw>
<msg timestamp="20250304 04:23:27.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:27.579" endtime="20250304 04:23:27.955"/>
</kw>
<status status="PASS" starttime="20250304 04:23:27.579" endtime="20250304 04:23:27.955"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:27.958" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:28.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:28.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:27.956" endtime="20250304 04:23:28.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:28.326" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:28.326" endtime="20250304 04:23:28.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:28.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:28.327" endtime="20250304 04:23:28.327"/>
</kw>
<status status="PASS" starttime="20250304 04:23:27.956" endtime="20250304 04:23:28.327"/>
</kw>
<msg timestamp="20250304 04:23:28.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:27.955" endtime="20250304 04:23:28.327"/>
</kw>
<status status="PASS" starttime="20250304 04:23:27.955" endtime="20250304 04:23:28.327"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:28.331" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:28.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:28.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:28.328" endtime="20250304 04:23:28.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:28.711" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:28.711" endtime="20250304 04:23:28.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:28.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:28.711" endtime="20250304 04:23:28.712"/>
</kw>
<status status="PASS" starttime="20250304 04:23:28.328" endtime="20250304 04:23:28.712"/>
</kw>
<msg timestamp="20250304 04:23:28.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250304 04:23:28.328" endtime="20250304 04:23:28.712"/>
</kw>
<status status="PASS" starttime="20250304 04:23:28.327" endtime="20250304 04:23:28.712"/>
</kw>
<status status="PASS" starttime="20250304 04:23:21.225" endtime="20250304 04:23:28.712"/>
</kw>
<status status="PASS" starttime="20250304 04:23:21.224" endtime="20250304 04:23:28.712"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250304 04:23:28.712" endtime="20250304 04:23:28.713"/>
</kw>
<status status="PASS" starttime="20250304 04:23:21.191" endtime="20250304 04:23:28.713"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:28.716" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:29.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:29.288" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:23:08 GMT",
    "ContentLength": 31,
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:23:28.713" endtime="20250304 04:23:29.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:29.289" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:23:08 GMT",
    "ContentLength": 31,
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 04 Mar 2025 04:23:29 GMT",
    "Metadata": {},
    "ExpiresString": "Tue, 04 Mar 2025 04:23:29 GMT"
}</msg>
<status status="PASS" starttime="20250304 04:23:29.289" endtime="20250304 04:23:29.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:29.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:29.290" endtime="20250304 04:23:29.290"/>
</kw>
<msg timestamp="20250304 04:23:29.290" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:23:08 GMT",
    "ContentLength": 31,
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:23:28.713" endtime="20250304 04:23:29.290"/>
</kw>
<msg timestamp="20250304 04:23:29.290" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 04 Mar 2025 04:23:08 GMT",
    "ContentLength": 31,
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250304 04:23:28.713" endtime="20250304 04:23:29.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:29.290" endtime="20250304 04:23:29.291"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:29.293" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:29.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:29.297" level="INFO">${output} = new2: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:23:29.291" endtime="20250304 04:23:29.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:29.298" level="INFO">new2: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:23:29.297" endtime="20250304 04:23:29.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:29.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:29.298" endtime="20250304 04:23:29.298"/>
</kw>
<msg timestamp="20250304 04:23:29.298" level="INFO">${output} = new2: key created using S3 API</msg>
<status status="PASS" starttime="20250304 04:23:29.291" endtime="20250304 04:23:29.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250304 04:23:29.299" endtime="20250304 04:23:29.299"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250304 04:23:29.301" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250304 04:23:29.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20250304 04:23:29.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250304 04:23:29.299" endtime="20250304 04:23:29.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250304 04:23:29.306" level="INFO"/>
<status status="PASS" starttime="20250304 04:23:29.305" endtime="20250304 04:23:29.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250304 04:23:29.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250304 04:23:29.306" endtime="20250304 04:23:29.306"/>
</kw>
<status status="PASS" starttime="20250304 04:23:29.299" endtime="20250304 04:23:29.306"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250304 04:23:21.191" endtime="20250304 04:23:29.307"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250304 04:23:09.536" endtime="20250304 04:23:29.308"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="535097"/>
</suite>
<statistics>
<total>
<stat pass="73" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="6" fail="0" skip="0">finalized</stat>
<stat pass="3" fail="0" skip="0">om</stat>
<stat pass="3" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="73" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="1.4.1-2.0.0-SNAPSHOT-1-original-check-finalization">upgrade.1.4.1-2.0.0-SNAPSHOT-1-original-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="1.4.1-2.0.0-SNAPSHOT-1-original-generate-old1">upgrade.1.4.1-2.0.0-SNAPSHOT-1-original-generate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="1.4.1-2.0.0-SNAPSHOT-1-original-validate-old1">upgrade.1.4.1-2.0.0-SNAPSHOT-1-original-validate-old1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="1.4.1-2.0.0-SNAPSHOT-1-original-prepare">upgrade.1.4.1-2.0.0-SNAPSHOT-1-original-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-validate-old1">upgrade.1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-validate-old1</stat>
<stat pass="4" fail="0" skip="0" id="s1-s6" name="1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-generate-old1">upgrade.1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-generate-old1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s7" name="1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-generate-new1">upgrade.1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-generate-new1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-validate-new1">upgrade.1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-validate-new1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-prepare">upgrade.1.4.1-2.0.0-SNAPSHOT-2-pre-finalized-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s10" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-check-finalization">upgrade.1.4.1-2.0.0-SNAPSHOT-3-downgraded-check-finalization</stat>
<stat pass="3" fail="0" skip="0" id="s1-s11" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-validate-old1">upgrade.1.4.1-2.0.0-SNAPSHOT-3-downgraded-validate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s12" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-validate-new1">upgrade.1.4.1-2.0.0-SNAPSHOT-3-downgraded-validate-new1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s13" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-generate-old2">upgrade.1.4.1-2.0.0-SNAPSHOT-3-downgraded-generate-old2</stat>
<stat pass="3" fail="0" skip="0" id="s1-s14" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-validate-old2">upgrade.1.4.1-2.0.0-SNAPSHOT-3-downgraded-validate-old2</stat>
<stat pass="4" fail="0" skip="0" id="s1-s15" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-generate-old1">upgrade.1.4.1-2.0.0-SNAPSHOT-3-downgraded-generate-old1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="1.4.1-2.0.0-SNAPSHOT-3-downgraded-prepare">upgrade.1.4.1-2.0.0-SNAPSHOT-3-downgraded-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s17" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-finalize">upgrade.1.4.1-2.0.0-SNAPSHOT-4-finalized-finalize</stat>
<stat pass="2" fail="0" skip="0" id="s1-s18" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-check-finalization">upgrade.1.4.1-2.0.0-SNAPSHOT-4-finalized-check-finalization</stat>
<stat pass="3" fail="0" skip="0" id="s1-s19" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-validate-old1">upgrade.1.4.1-2.0.0-SNAPSHOT-4-finalized-validate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s20" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-validate-new1">upgrade.1.4.1-2.0.0-SNAPSHOT-4-finalized-validate-new1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s21" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-validate-old2">upgrade.1.4.1-2.0.0-SNAPSHOT-4-finalized-validate-old2</stat>
<stat pass="6" fail="0" skip="0" id="s1-s22" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-generate-new2">upgrade.1.4.1-2.0.0-SNAPSHOT-4-finalized-generate-new2</stat>
<stat pass="3" fail="0" skip="0" id="s1-s23" name="1.4.1-2.0.0-SNAPSHOT-4-finalized-validate-new2">upgrade.1.4.1-2.0.0-SNAPSHOT-4-finalized-validate-new2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
