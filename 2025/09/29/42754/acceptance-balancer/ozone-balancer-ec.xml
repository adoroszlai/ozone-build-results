<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250929 18:07:18.905" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-balancer-ec" source="/opt/hadoop/smoketest/balancer/testBalancer.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250929 17:56:59.455" endtime="20250929 17:56:59.456"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:56:59.458" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:57:00.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:57:00.248" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20250929 17:56:59.456" endtime="20250929 17:57:00.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:57:00.249" level="INFO">false</msg>
<status status="PASS" starttime="20250929 17:57:00.249" endtime="20250929 17:57:00.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:57:00.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:57:00.249" endtime="20250929 17:57:00.249"/>
</kw>
<status status="PASS" starttime="20250929 17:56:59.456" endtime="20250929 17:57:00.250"/>
</kw>
<msg timestamp="20250929 17:57:00.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:56:59.456" endtime="20250929 17:57:00.250"/>
</kw>
<msg timestamp="20250929 17:57:00.250" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20250929 17:56:59.456" endtime="20250929 17:57:00.250"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250929 17:57:00.250" endtime="20250929 17:57:00.250"/>
</kw>
<status status="NOT RUN" starttime="20250929 17:57:00.250" endtime="20250929 17:57:00.250"/>
</branch>
<status status="PASS" starttime="20250929 17:57:00.250" endtime="20250929 17:57:00.250"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250929 17:57:00.251" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20250929 17:57:00.251" endtime="20250929 17:57:00.251"/>
</kw>
<status status="PASS" starttime="20250929 17:56:59.455" endtime="20250929 17:57:00.251"/>
</kw>
<test id="s1-t1" name="Verify Container Balancer for RATIS/EC containers" line="158">
<kw name="Prepare For Tests">
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:57:00.255" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:57:00.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:57:00.630" level="INFO">${output} = 100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.370989 s, 283 MB/s</msg>
<status status="PASS" starttime="20250929 17:57:00.253" endtime="20250929 17:57:00.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:57:00.631" level="INFO">100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.370989 s, 283 MB/s</msg>
<status status="PASS" starttime="20250929 17:57:00.630" endtime="20250929 17:57:00.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:57:00.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:57:00.631" endtime="20250929 17:57:00.631"/>
</kw>
<status status="PASS" starttime="20250929 17:57:00.252" endtime="20250929 17:57:00.632"/>
</kw>
<msg timestamp="20250929 17:57:00.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:57:00.252" endtime="20250929 17:57:00.632"/>
</kw>
<status status="PASS" starttime="20250929 17:57:00.252" endtime="20250929 17:57:00.632"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250929 17:57:00.632" endtime="20250929 17:57:00.632"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:57:00.635" level="INFO">Running command 'ozone sh volume create /volume1 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:57:02.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:57:02.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:57:00.633" endtime="20250929 17:57:02.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:57:02.652" level="INFO"/>
<status status="PASS" starttime="20250929 17:57:02.652" endtime="20250929 17:57:02.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:57:02.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:57:02.652" endtime="20250929 17:57:02.653"/>
</kw>
<status status="PASS" starttime="20250929 17:57:00.633" endtime="20250929 17:57:02.653"/>
</kw>
<msg timestamp="20250929 17:57:02.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:57:00.633" endtime="20250929 17:57:02.653"/>
</kw>
<status status="PASS" starttime="20250929 17:57:00.632" endtime="20250929 17:57:02.653"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --replication ${REPLICATION} --type ${TYPE} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:57:02.657" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:57:04.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:57:04.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:57:02.655" endtime="20250929 17:57:04.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:57:04.641" level="INFO"/>
<status status="PASS" starttime="20250929 17:57:04.640" endtime="20250929 17:57:04.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:57:04.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:57:04.641" endtime="20250929 17:57:04.641"/>
</kw>
<status status="PASS" starttime="20250929 17:57:02.654" endtime="20250929 17:57:04.641"/>
</kw>
<msg timestamp="20250929 17:57:04.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:57:02.654" endtime="20250929 17:57:04.641"/>
</kw>
<status status="PASS" starttime="20250929 17:57:02.653" endtime="20250929 17:57:04.641"/>
</kw>
<status status="PASS" starttime="20250929 17:57:00.252" endtime="20250929 17:57:04.641"/>
</kw>
<kw name="Datanode In Maintenance Mode">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode maintenance ${HOST}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:57:04.645" level="INFO">Running command 'ozone admin datanode maintenance datanode1 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:57:06.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:57:06.134" level="INFO">${output} = Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250929 17:57:04.643" endtime="20250929 17:57:06.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:57:06.135" level="INFO">Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250929 17:57:06.134" endtime="20250929 17:57:06.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:57:06.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:57:06.135" endtime="20250929 17:57:06.135"/>
</kw>
<status status="PASS" starttime="20250929 17:57:04.642" endtime="20250929 17:57:06.135"/>
</kw>
<msg timestamp="20250929 17:57:06.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:57:04.642" endtime="20250929 17:57:06.136"/>
</kw>
<msg timestamp="20250929 17:57:06.136" level="INFO">${result} = Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250929 17:57:04.642" endtime="20250929 17:57:06.136"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Entering maintenance mode on datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 17:57:06.136" endtime="20250929 17:57:06.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:57:06.140" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:57:07.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:57:07.693" level="INFO">${output} = Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250929 17:57:06.137" endtime="20250929 17:57:07.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:57:07.694" level="INFO">Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250929 17:57:07.693" endtime="20250929 17:57:07.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:57:07.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:57:07.694" endtime="20250929 17:57:07.694"/>
</kw>
<status status="PASS" starttime="20250929 17:57:06.137" endtime="20250929 17:57:07.695"/>
</kw>
<msg timestamp="20250929 17:57:07.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:57:06.137" endtime="20250929 17:57:07.695"/>
</kw>
<msg timestamp="20250929 17:57:07.695" level="INFO">${result} = Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250929 17:57:06.136" endtime="20250929 17:57:07.695"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 17:57:07.695" endtime="20250929 17:57:07.696"/>
</kw>
<status status="PASS" starttime="20250929 17:57:07.695" endtime="20250929 17:57:07.696"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Related pipelines are closed</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Related pipelines are closed">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \\(.*\\)$/\\1/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:57:07.700" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \(.*\)$/\1/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:57:09.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:57:09.202" level="INFO">${output} = cb3ea292-b2cd-4d04-a79a-21536ad8021f/RATIS/THREE/RATIS/CLOSED/Follower</msg>
<status status="PASS" starttime="20250929 17:57:07.697" endtime="20250929 17:57:09.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:57:09.203" level="INFO">cb3ea292-b2cd-4d04-a79a-21536ad8021f/RATIS/THREE/RATIS/CLOSED/Follower</msg>
<status status="PASS" starttime="20250929 17:57:09.202" endtime="20250929 17:57:09.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:57:09.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:57:09.203" endtime="20250929 17:57:09.203"/>
</kw>
<status status="PASS" starttime="20250929 17:57:07.697" endtime="20250929 17:57:09.204"/>
</kw>
<msg timestamp="20250929 17:57:09.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:57:07.697" endtime="20250929 17:57:09.204"/>
</kw>
<msg timestamp="20250929 17:57:09.204" level="INFO">${result} = cb3ea292-b2cd-4d04-a79a-21536ad8021f/RATIS/THREE/RATIS/CLOSED/Follower</msg>
<status status="PASS" starttime="20250929 17:57:07.696" endtime="20250929 17:57:09.204"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>CLOSED</arg>
<arg>No related pipelines or the node is not in Healthy state.</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250929 17:57:09.204" endtime="20250929 17:57:09.204"/>
</kw>
<status status="PASS" starttime="20250929 17:57:07.696" endtime="20250929 17:57:09.204"/>
</kw>
<status status="PASS" starttime="20250929 17:57:07.696" endtime="20250929 17:57:09.204"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>60000ms</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250929 17:58:09.205" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20250929 17:57:09.204" endtime="20250929 17:58:09.205"/>
</kw>
<status status="PASS" starttime="20250929 17:57:04.642" endtime="20250929 17:58:09.205"/>
</kw>
<kw name="Get Uuid">
<var>${uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'| grep ${HOST} | sed -e 's/Datanode: //'|sed -e 's/ .*$//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:09.209" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'| grep datanode1 | sed -e 's/Datanode: //'|sed -e 's/ .*$//' 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:10.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:10.699" level="INFO">${output} = 209f854f-ec43-43c8-bf7e-39c9f799d21b</msg>
<status status="PASS" starttime="20250929 17:58:09.206" endtime="20250929 17:58:10.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:10.700" level="INFO">209f854f-ec43-43c8-bf7e-39c9f799d21b</msg>
<status status="PASS" starttime="20250929 17:58:10.699" endtime="20250929 17:58:10.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:10.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:10.700" endtime="20250929 17:58:10.700"/>
</kw>
<status status="PASS" starttime="20250929 17:58:09.206" endtime="20250929 17:58:10.700"/>
</kw>
<msg timestamp="20250929 17:58:10.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:09.206" endtime="20250929 17:58:10.700"/>
</kw>
<msg timestamp="20250929 17:58:10.701" level="INFO">${result} = 209f854f-ec43-43c8-bf7e-39c9f799d21b</msg>
<status status="PASS" starttime="20250929 17:58:09.206" endtime="20250929 17:58:10.701"/>
</kw>
<msg timestamp="20250929 17:58:10.701" level="INFO">${uuid} = 209f854f-ec43-43c8-bf7e-39c9f799d21b</msg>
<status status="PASS" starttime="20250929 17:58:09.205" endtime="20250929 17:58:10.701"/>
</kw>
<kw name="Datanode Usageinfo">
<arg>${uuid}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode usageinfo --uuid=${uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:10.705" level="INFO">Running command 'ozone admin datanode usageinfo --uuid=209f854f-ec43-43c8-bf7e-39c9f799d21b 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:12.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:12.212" level="INFO">${output} = Usage Information (1 Datanodes)

UUID         : 209f854f-ec43-43c8-bf7e-39c9f799d21b 
IP Address   : 172.18.0.2 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 214726...</msg>
<status status="PASS" starttime="20250929 17:58:10.702" endtime="20250929 17:58:12.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:12.213" level="INFO">Usage Information (1 Datanodes)

UUID         : 209f854f-ec43-43c8-bf7e-39c9f799d21b 
IP Address   : 172.18.0.2 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 2147268899 B (2.00 GB) 
Total Used   : 12622115 B (12.04 MB) 
Total Used % : 0.59% 
Ozone Used   : 4096 B (4 KB) 
Ozone Used % : 0.00% 
Remaining    : 2134646784 B (1.99 GB) 
Remaining %  : 99.41% 
Pipeline(s)  : 1 
Container(s) : 0 
Container Pre-allocated : 0 B (0 B) 
Remaining Allocatable   : 2134646784 B (1.99 GB) 
Free Space To Spare     : 104857600 B (100 MB) 
</msg>
<status status="PASS" starttime="20250929 17:58:12.212" endtime="20250929 17:58:12.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:12.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:12.213" endtime="20250929 17:58:12.213"/>
</kw>
<status status="PASS" starttime="20250929 17:58:10.702" endtime="20250929 17:58:12.213"/>
</kw>
<msg timestamp="20250929 17:58:12.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:10.702" endtime="20250929 17:58:12.214"/>
</kw>
<msg timestamp="20250929 17:58:12.214" level="INFO">${result} = Usage Information (1 Datanodes)

UUID         : 209f854f-ec43-43c8-bf7e-39c9f799d21b 
IP Address   : 172.18.0.2 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 214726...</msg>
<status status="PASS" starttime="20250929 17:58:10.701" endtime="20250929 17:58:12.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Used</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 17:58:12.214" endtime="20250929 17:58:12.214"/>
</kw>
<status status="PASS" starttime="20250929 17:58:10.701" endtime="20250929 17:58:12.214"/>
</kw>
<kw name="Create Multiple Keys">
<arg>3</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/100mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250929 17:58:12.215" level="INFO">${file} = /tmp/100mb</msg>
<status status="PASS" starttime="20250929 17:58:12.215" endtime="20250929 17:58:12.215"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>${NUM_KEYS}</value>
<iter>
<var name="${INDEX}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250929 17:58:12.216" level="INFO">${fileName} = file-0.txt</msg>
<status status="PASS" starttime="20250929 17:58:12.215" endtime="20250929 17:58:12.216"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250929 17:58:12.216" level="INFO">${key} = /volume1/bucket1/file-0.txt</msg>
<status status="PASS" starttime="20250929 17:58:12.216" endtime="20250929 17:58:12.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:12.216" level="INFO">file-0.txt</msg>
<status status="PASS" starttime="20250929 17:58:12.216" endtime="20250929 17:58:12.216"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:12.220" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /volume1/bucket1/file-0.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:18.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:18.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:12.218" endtime="20250929 17:58:18.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:18.951" level="INFO"/>
<status status="PASS" starttime="20250929 17:58:18.951" endtime="20250929 17:58:18.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:18.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:18.951" endtime="20250929 17:58:18.952"/>
</kw>
<status status="PASS" starttime="20250929 17:58:12.218" endtime="20250929 17:58:18.952"/>
</kw>
<msg timestamp="20250929 17:58:18.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:12.217" endtime="20250929 17:58:18.952"/>
</kw>
<msg timestamp="20250929 17:58:18.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:12.217" endtime="20250929 17:58:18.952"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 17:58:18.952" endtime="20250929 17:58:18.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:18.953" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-0.txt</msg>
<status status="PASS" starttime="20250929 17:58:18.952" endtime="20250929 17:58:18.953"/>
</kw>
<status status="PASS" starttime="20250929 17:58:12.217" endtime="20250929 17:58:18.953"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250929 17:58:18.954" level="INFO">${postfix} = 88389</msg>
<status status="PASS" starttime="20250929 17:58:18.954" endtime="20250929 17:58:18.954"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250929 17:58:18.954" level="INFO">${tmpfile} = /tmp/tempkey-88389</msg>
<status status="PASS" starttime="20250929 17:58:18.954" endtime="20250929 17:58:18.954"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:18.958" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-0.txt /tmp/tempkey-88389 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:23.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:23.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:18.955" endtime="20250929 17:58:23.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:23.493" level="INFO"/>
<status status="PASS" starttime="20250929 17:58:23.493" endtime="20250929 17:58:23.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:23.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:23.493" endtime="20250929 17:58:23.494"/>
</kw>
<status status="PASS" starttime="20250929 17:58:18.955" endtime="20250929 17:58:23.494"/>
</kw>
<msg timestamp="20250929 17:58:23.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:18.955" endtime="20250929 17:58:23.494"/>
</kw>
<status status="PASS" starttime="20250929 17:58:18.955" endtime="20250929 17:58:23.494"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250929 17:58:23.497" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-88389 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:23.561" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250929 17:58:23.494" endtime="20250929 17:58:23.561"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:23.564" level="INFO">Running command 'rm -f /tmp/tempkey-88389 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:23.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:23.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:23.562" endtime="20250929 17:58:23.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:23.589" level="INFO"/>
<status status="PASS" starttime="20250929 17:58:23.589" endtime="20250929 17:58:23.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:23.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:23.589" endtime="20250929 17:58:23.590"/>
</kw>
<status status="PASS" starttime="20250929 17:58:23.562" endtime="20250929 17:58:23.590"/>
</kw>
<msg timestamp="20250929 17:58:23.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:23.562" endtime="20250929 17:58:23.590"/>
</kw>
<status status="PASS" starttime="20250929 17:58:23.561" endtime="20250929 17:58:23.590"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250929 17:58:23.591" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250929 17:58:23.590" endtime="20250929 17:58:23.591"/>
</kw>
<msg timestamp="20250929 17:58:23.591" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250929 17:58:18.953" endtime="20250929 17:58:23.591"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250929 17:58:23.591" endtime="20250929 17:58:23.591"/>
</kw>
<status status="PASS" starttime="20250929 17:58:18.953" endtime="20250929 17:58:23.591"/>
</kw>
<status status="PASS" starttime="20250929 17:58:12.215" endtime="20250929 17:58:23.591"/>
</iter>
<iter>
<var name="${INDEX}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250929 17:58:23.592" level="INFO">${fileName} = file-1.txt</msg>
<status status="PASS" starttime="20250929 17:58:23.591" endtime="20250929 17:58:23.592"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250929 17:58:23.592" level="INFO">${key} = /volume1/bucket1/file-1.txt</msg>
<status status="PASS" starttime="20250929 17:58:23.592" endtime="20250929 17:58:23.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:23.593" level="INFO">file-1.txt</msg>
<status status="PASS" starttime="20250929 17:58:23.592" endtime="20250929 17:58:23.593"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:23.597" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /volume1/bucket1/file-1.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:29.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:29.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:23.595" endtime="20250929 17:58:29.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:29.495" level="INFO"/>
<status status="PASS" starttime="20250929 17:58:29.494" endtime="20250929 17:58:29.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:29.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:29.495" endtime="20250929 17:58:29.495"/>
</kw>
<status status="PASS" starttime="20250929 17:58:23.595" endtime="20250929 17:58:29.496"/>
</kw>
<msg timestamp="20250929 17:58:29.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:23.594" endtime="20250929 17:58:29.496"/>
</kw>
<msg timestamp="20250929 17:58:29.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:23.593" endtime="20250929 17:58:29.496"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 17:58:29.496" endtime="20250929 17:58:29.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:29.497" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-1.txt</msg>
<status status="PASS" starttime="20250929 17:58:29.496" endtime="20250929 17:58:29.497"/>
</kw>
<status status="PASS" starttime="20250929 17:58:23.593" endtime="20250929 17:58:29.497"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250929 17:58:29.498" level="INFO">${postfix} = 85110</msg>
<status status="PASS" starttime="20250929 17:58:29.498" endtime="20250929 17:58:29.498"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250929 17:58:29.498" level="INFO">${tmpfile} = /tmp/tempkey-85110</msg>
<status status="PASS" starttime="20250929 17:58:29.498" endtime="20250929 17:58:29.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:29.501" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-1.txt /tmp/tempkey-85110 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:33.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:33.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:29.499" endtime="20250929 17:58:33.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:33.965" level="INFO"/>
<status status="PASS" starttime="20250929 17:58:33.964" endtime="20250929 17:58:33.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:33.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:33.965" endtime="20250929 17:58:33.966"/>
</kw>
<status status="PASS" starttime="20250929 17:58:29.499" endtime="20250929 17:58:33.966"/>
</kw>
<msg timestamp="20250929 17:58:33.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:29.499" endtime="20250929 17:58:33.966"/>
</kw>
<status status="PASS" starttime="20250929 17:58:29.498" endtime="20250929 17:58:33.966"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250929 17:58:33.968" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-85110 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:34.032" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250929 17:58:33.966" endtime="20250929 17:58:34.032"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:34.035" level="INFO">Running command 'rm -f /tmp/tempkey-85110 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:34.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:34.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:34.033" endtime="20250929 17:58:34.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:34.061" level="INFO"/>
<status status="PASS" starttime="20250929 17:58:34.060" endtime="20250929 17:58:34.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:34.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:34.061" endtime="20250929 17:58:34.061"/>
</kw>
<status status="PASS" starttime="20250929 17:58:34.033" endtime="20250929 17:58:34.061"/>
</kw>
<msg timestamp="20250929 17:58:34.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:34.033" endtime="20250929 17:58:34.062"/>
</kw>
<status status="PASS" starttime="20250929 17:58:34.032" endtime="20250929 17:58:34.062"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250929 17:58:34.062" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250929 17:58:34.062" endtime="20250929 17:58:34.062"/>
</kw>
<msg timestamp="20250929 17:58:34.062" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250929 17:58:29.497" endtime="20250929 17:58:34.062"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250929 17:58:34.062" endtime="20250929 17:58:34.063"/>
</kw>
<status status="PASS" starttime="20250929 17:58:29.497" endtime="20250929 17:58:34.063"/>
</kw>
<status status="PASS" starttime="20250929 17:58:23.591" endtime="20250929 17:58:34.063"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250929 17:58:34.063" level="INFO">${fileName} = file-2.txt</msg>
<status status="PASS" starttime="20250929 17:58:34.063" endtime="20250929 17:58:34.063"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250929 17:58:34.063" level="INFO">${key} = /volume1/bucket1/file-2.txt</msg>
<status status="PASS" starttime="20250929 17:58:34.063" endtime="20250929 17:58:34.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:34.064" level="INFO">file-2.txt</msg>
<status status="PASS" starttime="20250929 17:58:34.064" endtime="20250929 17:58:34.064"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:34.068" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /volume1/bucket1/file-2.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:40.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:40.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:34.065" endtime="20250929 17:58:40.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:40.162" level="INFO"/>
<status status="PASS" starttime="20250929 17:58:40.161" endtime="20250929 17:58:40.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:40.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:40.162" endtime="20250929 17:58:40.162"/>
</kw>
<status status="PASS" starttime="20250929 17:58:34.065" endtime="20250929 17:58:40.162"/>
</kw>
<msg timestamp="20250929 17:58:40.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:34.065" endtime="20250929 17:58:40.162"/>
</kw>
<msg timestamp="20250929 17:58:40.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:34.064" endtime="20250929 17:58:40.162"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 17:58:40.163" endtime="20250929 17:58:40.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:40.163" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-2.txt</msg>
<status status="PASS" starttime="20250929 17:58:40.163" endtime="20250929 17:58:40.163"/>
</kw>
<status status="PASS" starttime="20250929 17:58:34.064" endtime="20250929 17:58:40.163"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250929 17:58:40.164" level="INFO">${postfix} = 58988</msg>
<status status="PASS" starttime="20250929 17:58:40.164" endtime="20250929 17:58:40.164"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250929 17:58:40.165" level="INFO">${tmpfile} = /tmp/tempkey-58988</msg>
<status status="PASS" starttime="20250929 17:58:40.164" endtime="20250929 17:58:40.165"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:40.168" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-2.txt /tmp/tempkey-58988 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:44.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:44.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:40.166" endtime="20250929 17:58:44.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:44.568" level="INFO"/>
<status status="PASS" starttime="20250929 17:58:44.568" endtime="20250929 17:58:44.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:44.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:44.568" endtime="20250929 17:58:44.569"/>
</kw>
<status status="PASS" starttime="20250929 17:58:40.165" endtime="20250929 17:58:44.569"/>
</kw>
<msg timestamp="20250929 17:58:44.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:40.165" endtime="20250929 17:58:44.569"/>
</kw>
<status status="PASS" starttime="20250929 17:58:40.165" endtime="20250929 17:58:44.569"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250929 17:58:44.572" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-58988 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:44.635" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250929 17:58:44.569" endtime="20250929 17:58:44.635"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:44.639" level="INFO">Running command 'rm -f /tmp/tempkey-58988 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:44.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:44.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:44.637" endtime="20250929 17:58:44.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:44.664" level="INFO"/>
<status status="PASS" starttime="20250929 17:58:44.664" endtime="20250929 17:58:44.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:44.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:44.664" endtime="20250929 17:58:44.665"/>
</kw>
<status status="PASS" starttime="20250929 17:58:44.636" endtime="20250929 17:58:44.665"/>
</kw>
<msg timestamp="20250929 17:58:44.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:44.636" endtime="20250929 17:58:44.665"/>
</kw>
<status status="PASS" starttime="20250929 17:58:44.636" endtime="20250929 17:58:44.665"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250929 17:58:44.665" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250929 17:58:44.665" endtime="20250929 17:58:44.665"/>
</kw>
<msg timestamp="20250929 17:58:44.666" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250929 17:58:40.164" endtime="20250929 17:58:44.666"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250929 17:58:44.666" endtime="20250929 17:58:44.666"/>
</kw>
<status status="PASS" starttime="20250929 17:58:40.163" endtime="20250929 17:58:44.666"/>
</kw>
<status status="PASS" starttime="20250929 17:58:34.063" endtime="20250929 17:58:44.666"/>
</iter>
<status status="PASS" starttime="20250929 17:58:12.215" endtime="20250929 17:58:44.666"/>
</for>
<status status="PASS" starttime="20250929 17:58:12.214" endtime="20250929 17:58:44.666"/>
</kw>
<kw name="Close All Containers">
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>15</value>
<iter>
<var name="${INDEX}">0</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:44.670" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:46.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:46.227" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250929 17:58:44.668" endtime="20250929 17:58:46.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:46.228" level="INFO">1</msg>
<status status="PASS" starttime="20250929 17:58:46.228" endtime="20250929 17:58:46.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:46.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:46.229" endtime="20250929 17:58:46.229"/>
</kw>
<status status="PASS" starttime="20250929 17:58:44.668" endtime="20250929 17:58:46.229"/>
</kw>
<msg timestamp="20250929 17:58:46.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:44.668" endtime="20250929 17:58:46.229"/>
</kw>
<msg timestamp="20250929 17:58:46.229" level="INFO">${container} = 1</msg>
<status status="PASS" starttime="20250929 17:58:44.667" endtime="20250929 17:58:46.229"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20250929 17:58:46.229" endtime="20250929 17:58:46.230"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:46.233" level="INFO">Running command 'ozone admin container close "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:47.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:47.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:46.231" endtime="20250929 17:58:47.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:47.684" level="INFO"/>
<status status="PASS" starttime="20250929 17:58:47.683" endtime="20250929 17:58:47.684"/>
</kw>
<msg timestamp="20250929 17:58:47.684" level="INFO">${message} = </msg>
<status status="PASS" starttime="20250929 17:58:46.230" endtime="20250929 17:58:47.684"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250929 17:58:47.684" endtime="20250929 17:58:47.685"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:47.688" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:49.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:49.227" level="INFO">${output} = Container id: 1
Pipeline id: e3f7c811-d195-43ed-92b0-5e64d21ca4f5
Write PipelineId: e3f7c811-d195-43ed-92b0-5e64d21ca4f5
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [a790d750-af9a-4...</msg>
<status status="PASS" starttime="20250929 17:58:47.686" endtime="20250929 17:58:49.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:49.228" level="INFO">Container id: 1
Pipeline id: e3f7c811-d195-43ed-92b0-5e64d21ca4f5
Write PipelineId: e3f7c811-d195-43ed-92b0-5e64d21ca4f5
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [a790d750-af9a-4f1d-aaea-f32514c24d04/ozone-balancer-datanode3-1.ozone-balancer_default,
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f/ozone-balancer-datanode6-1.ozone-balancer_default,
2a910af7-19dc-42fa-b5bb-c9ae25424bb4/ozone-balancer-datanode4-1.ozone-balancer_default,
4559a8ab-405c-429b-900e-5b85eb045739/ozone-balancer-datanode2-1.ozone-balancer_default,
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa/ozone-balancer-datanode5-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: a790d750-af9a-4f1d-aaea-f32514c24d04; Location: a790d750-af9a-4f1d-aaea-f32514c24d04/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f; Location: 6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: 2a910af7-19dc-42fa-b5bb-c9ae25424bb4; Location: 2a910af7-19dc-42fa-b5bb-c9ae25424bb4/ozone-balancer-datanode4-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 4559a8ab-405c-429b-900e-5b85eb045739; Location: 4559a8ab-405c-429b-900e-5b85eb045739/ozone-balancer-datanode2-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: 46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa; Location: 46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa/ozone-balancer-datanode5-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20250929 17:58:49.227" endtime="20250929 17:58:49.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:49.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:49.228" endtime="20250929 17:58:49.228"/>
</kw>
<status status="PASS" starttime="20250929 17:58:47.685" endtime="20250929 17:58:49.229"/>
</kw>
<msg timestamp="20250929 17:58:49.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:47.685" endtime="20250929 17:58:49.229"/>
</kw>
<msg timestamp="20250929 17:58:49.229" level="INFO">${output} = Container id: 1
Pipeline id: e3f7c811-d195-43ed-92b0-5e64d21ca4f5
Write PipelineId: e3f7c811-d195-43ed-92b0-5e64d21ca4f5
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [a790d750-af9a-4...</msg>
<status status="PASS" starttime="20250929 17:58:47.685" endtime="20250929 17:58:49.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 17:58:49.229" endtime="20250929 17:58:49.229"/>
</kw>
<status status="PASS" starttime="20250929 17:58:44.667" endtime="20250929 17:58:49.229"/>
</iter>
<iter>
<var name="${INDEX}">1</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:49.233" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:50.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:50.758" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250929 17:58:49.231" endtime="20250929 17:58:50.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:50.758" level="INFO">2</msg>
<status status="PASS" starttime="20250929 17:58:50.758" endtime="20250929 17:58:50.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:50.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:50.759" endtime="20250929 17:58:50.759"/>
</kw>
<status status="PASS" starttime="20250929 17:58:49.230" endtime="20250929 17:58:50.759"/>
</kw>
<msg timestamp="20250929 17:58:50.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:49.230" endtime="20250929 17:58:50.759"/>
</kw>
<msg timestamp="20250929 17:58:50.759" level="INFO">${container} = 2</msg>
<status status="PASS" starttime="20250929 17:58:49.230" endtime="20250929 17:58:50.759"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20250929 17:58:50.759" endtime="20250929 17:58:50.760"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:50.763" level="INFO">Running command 'ozone admin container close "2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:52.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:52.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:50.761" endtime="20250929 17:58:52.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:52.258" level="INFO"/>
<status status="PASS" starttime="20250929 17:58:52.258" endtime="20250929 17:58:52.258"/>
</kw>
<msg timestamp="20250929 17:58:52.258" level="INFO">${message} = </msg>
<status status="PASS" starttime="20250929 17:58:50.761" endtime="20250929 17:58:52.258"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250929 17:58:52.258" endtime="20250929 17:58:52.259"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:52.263" level="INFO">Running command 'ozone admin container info "2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:53.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:53.750" level="INFO">${output} = Container id: 2
Pipeline id: 5676bcb6-9460-488e-99e8-dc4a62ad101c
Write PipelineId: 5676bcb6-9460-488e-99e8-dc4a62ad101c
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [a790d750-af9a-4...</msg>
<status status="PASS" starttime="20250929 17:58:52.260" endtime="20250929 17:58:53.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:53.751" level="INFO">Container id: 2
Pipeline id: 5676bcb6-9460-488e-99e8-dc4a62ad101c
Write PipelineId: 5676bcb6-9460-488e-99e8-dc4a62ad101c
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [a790d750-af9a-4f1d-aaea-f32514c24d04/ozone-balancer-datanode3-1.ozone-balancer_default,
2a910af7-19dc-42fa-b5bb-c9ae25424bb4/ozone-balancer-datanode4-1.ozone-balancer_default,
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f/ozone-balancer-datanode6-1.ozone-balancer_default,
4559a8ab-405c-429b-900e-5b85eb045739/ozone-balancer-datanode2-1.ozone-balancer_default,
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa/ozone-balancer-datanode5-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: a790d750-af9a-4f1d-aaea-f32514c24d04; Location: a790d750-af9a-4f1d-aaea-f32514c24d04/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 2a910af7-19dc-42fa-b5bb-c9ae25424bb4; Location: 2a910af7-19dc-42fa-b5bb-c9ae25424bb4/ozone-balancer-datanode4-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: 6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f; Location: 6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 4559a8ab-405c-429b-900e-5b85eb045739; Location: 4559a8ab-405c-429b-900e-5b85eb045739/ozone-balancer-datanode2-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: 46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa; Location: 46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa/ozone-balancer-datanode5-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20250929 17:58:53.751" endtime="20250929 17:58:53.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:53.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:53.751" endtime="20250929 17:58:53.752"/>
</kw>
<status status="PASS" starttime="20250929 17:58:52.260" endtime="20250929 17:58:53.752"/>
</kw>
<msg timestamp="20250929 17:58:53.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:52.260" endtime="20250929 17:58:53.752"/>
</kw>
<msg timestamp="20250929 17:58:53.752" level="INFO">${output} = Container id: 2
Pipeline id: 5676bcb6-9460-488e-99e8-dc4a62ad101c
Write PipelineId: 5676bcb6-9460-488e-99e8-dc4a62ad101c
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [a790d750-af9a-4...</msg>
<status status="PASS" starttime="20250929 17:58:52.259" endtime="20250929 17:58:53.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 17:58:53.752" endtime="20250929 17:58:53.753"/>
</kw>
<status status="PASS" starttime="20250929 17:58:49.229" endtime="20250929 17:58:53.753"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:53.756" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:55.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:55.307" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20250929 17:58:53.754" endtime="20250929 17:58:55.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:55.308" level="INFO">3</msg>
<status status="PASS" starttime="20250929 17:58:55.308" endtime="20250929 17:58:55.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:55.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:55.308" endtime="20250929 17:58:55.309"/>
</kw>
<status status="PASS" starttime="20250929 17:58:53.753" endtime="20250929 17:58:55.309"/>
</kw>
<msg timestamp="20250929 17:58:55.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:53.753" endtime="20250929 17:58:55.309"/>
</kw>
<msg timestamp="20250929 17:58:55.309" level="INFO">${container} = 3</msg>
<status status="PASS" starttime="20250929 17:58:53.753" endtime="20250929 17:58:55.309"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20250929 17:58:55.309" endtime="20250929 17:58:55.310"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:55.313" level="INFO">Running command 'ozone admin container close "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:56.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:56.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:55.311" endtime="20250929 17:58:56.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:56.802" level="INFO"/>
<status status="PASS" starttime="20250929 17:58:56.802" endtime="20250929 17:58:56.802"/>
</kw>
<msg timestamp="20250929 17:58:56.803" level="INFO">${message} = </msg>
<status status="PASS" starttime="20250929 17:58:55.310" endtime="20250929 17:58:56.803"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250929 17:58:56.803" endtime="20250929 17:58:56.803"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:56.807" level="INFO">Running command 'ozone admin container info "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:58.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:58.357" level="INFO">${output} = Container id: 3
Pipeline id: de98ebfb-af6e-47cf-81fe-4094812de420
Write PipelineId: de98ebfb-af6e-47cf-81fe-4094812de420
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [4559a8ab-405c-4...</msg>
<status status="PASS" starttime="20250929 17:58:56.804" endtime="20250929 17:58:58.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:58.358" level="INFO">Container id: 3
Pipeline id: de98ebfb-af6e-47cf-81fe-4094812de420
Write PipelineId: de98ebfb-af6e-47cf-81fe-4094812de420
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [4559a8ab-405c-429b-900e-5b85eb045739/ozone-balancer-datanode2-1.ozone-balancer_default,
2a910af7-19dc-42fa-b5bb-c9ae25424bb4/ozone-balancer-datanode4-1.ozone-balancer_default,
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa/ozone-balancer-datanode5-1.ozone-balancer_default,
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f/ozone-balancer-datanode6-1.ozone-balancer_default,
a790d750-af9a-4f1d-aaea-f32514c24d04/ozone-balancer-datanode3-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: 4559a8ab-405c-429b-900e-5b85eb045739; Location: 4559a8ab-405c-429b-900e-5b85eb045739/ozone-balancer-datanode2-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 2a910af7-19dc-42fa-b5bb-c9ae25424bb4; Location: 2a910af7-19dc-42fa-b5bb-c9ae25424bb4/ozone-balancer-datanode4-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: 46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa; Location: 46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa/ozone-balancer-datanode5-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f; Location: 6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: a790d750-af9a-4f1d-aaea-f32514c24d04; Location: a790d750-af9a-4f1d-aaea-f32514c24d04/ozone-balancer-datanode3-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20250929 17:58:58.357" endtime="20250929 17:58:58.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:58.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:58.358" endtime="20250929 17:58:58.358"/>
</kw>
<status status="PASS" starttime="20250929 17:58:56.804" endtime="20250929 17:58:58.358"/>
</kw>
<msg timestamp="20250929 17:58:58.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:56.804" endtime="20250929 17:58:58.359"/>
</kw>
<msg timestamp="20250929 17:58:58.359" level="INFO">${output} = Container id: 3
Pipeline id: de98ebfb-af6e-47cf-81fe-4094812de420
Write PipelineId: de98ebfb-af6e-47cf-81fe-4094812de420
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [4559a8ab-405c-4...</msg>
<status status="PASS" starttime="20250929 17:58:56.804" endtime="20250929 17:58:58.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 17:58:58.359" endtime="20250929 17:58:58.359"/>
</kw>
<status status="PASS" starttime="20250929 17:58:53.753" endtime="20250929 17:58:58.359"/>
</iter>
<iter>
<var name="${INDEX}">3</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:58.363" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:58:59.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:58:59.903" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20250929 17:58:58.360" endtime="20250929 17:58:59.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:58:59.904" level="INFO">5</msg>
<status status="PASS" starttime="20250929 17:58:59.903" endtime="20250929 17:58:59.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:58:59.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:58:59.904" endtime="20250929 17:58:59.905"/>
</kw>
<status status="PASS" starttime="20250929 17:58:58.360" endtime="20250929 17:58:59.905"/>
</kw>
<msg timestamp="20250929 17:58:59.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:58:58.360" endtime="20250929 17:58:59.905"/>
</kw>
<msg timestamp="20250929 17:58:59.905" level="INFO">${container} = 5</msg>
<status status="PASS" starttime="20250929 17:58:58.359" endtime="20250929 17:58:59.905"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20250929 17:58:59.905" endtime="20250929 17:58:59.906"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:58:59.909" level="INFO">Running command 'ozone admin container close "5" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:59:01.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:59:01.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:58:59.907" endtime="20250929 17:59:01.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:59:01.372" level="INFO"/>
<status status="PASS" starttime="20250929 17:59:01.371" endtime="20250929 17:59:01.372"/>
</kw>
<msg timestamp="20250929 17:59:01.372" level="INFO">${message} = </msg>
<status status="PASS" starttime="20250929 17:58:59.906" endtime="20250929 17:59:01.372"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250929 17:59:01.372" endtime="20250929 17:59:01.373"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:59:01.376" level="INFO">Running command 'ozone admin container info "5" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:59:02.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:59:02.900" level="INFO">${output} = Container id: 5
Pipeline id: 21c066e7-baa5-49e2-b34d-4751e9b41715
Write PipelineId: 21c066e7-baa5-49e2-b34d-4751e9b41715
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [6e6dabf2-b460-4...</msg>
<status status="PASS" starttime="20250929 17:59:01.374" endtime="20250929 17:59:02.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:59:02.901" level="INFO">Container id: 5
Pipeline id: 21c066e7-baa5-49e2-b34d-4751e9b41715
Write PipelineId: 21c066e7-baa5-49e2-b34d-4751e9b41715
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f/ozone-balancer-datanode6-1.ozone-balancer_default,
2a910af7-19dc-42fa-b5bb-c9ae25424bb4/ozone-balancer-datanode4-1.ozone-balancer_default,
a790d750-af9a-4f1d-aaea-f32514c24d04/ozone-balancer-datanode3-1.ozone-balancer_default,
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa/ozone-balancer-datanode5-1.ozone-balancer_default,
4559a8ab-405c-429b-900e-5b85eb045739/ozone-balancer-datanode2-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: 6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f; Location: 6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 2a910af7-19dc-42fa-b5bb-c9ae25424bb4; Location: 2a910af7-19dc-42fa-b5bb-c9ae25424bb4/ozone-balancer-datanode4-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: a790d750-af9a-4f1d-aaea-f32514c24d04; Location: a790d750-af9a-4f1d-aaea-f32514c24d04/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa; Location: 46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa/ozone-balancer-datanode5-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: 4559a8ab-405c-429b-900e-5b85eb045739; Location: 4559a8ab-405c-429b-900e-5b85eb045739/ozone-balancer-datanode2-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20250929 17:59:02.901" endtime="20250929 17:59:02.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:59:02.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:59:02.901" endtime="20250929 17:59:02.902"/>
</kw>
<status status="PASS" starttime="20250929 17:59:01.373" endtime="20250929 17:59:02.902"/>
</kw>
<msg timestamp="20250929 17:59:02.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:59:01.373" endtime="20250929 17:59:02.902"/>
</kw>
<msg timestamp="20250929 17:59:02.902" level="INFO">${output} = Container id: 5
Pipeline id: 21c066e7-baa5-49e2-b34d-4751e9b41715
Write PipelineId: 21c066e7-baa5-49e2-b34d-4751e9b41715
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [6e6dabf2-b460-4...</msg>
<status status="PASS" starttime="20250929 17:59:01.373" endtime="20250929 17:59:02.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 17:59:02.902" endtime="20250929 17:59:02.902"/>
</kw>
<status status="PASS" starttime="20250929 17:58:58.359" endtime="20250929 17:59:02.902"/>
</iter>
<iter>
<var name="${INDEX}">4</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:59:02.906" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:59:04.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:59:04.437" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20250929 17:59:02.904" endtime="20250929 17:59:04.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:59:04.439" level="INFO">4</msg>
<status status="PASS" starttime="20250929 17:59:04.438" endtime="20250929 17:59:04.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:59:04.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:59:04.439" endtime="20250929 17:59:04.439"/>
</kw>
<status status="PASS" starttime="20250929 17:59:02.903" endtime="20250929 17:59:04.439"/>
</kw>
<msg timestamp="20250929 17:59:04.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:59:02.903" endtime="20250929 17:59:04.440"/>
</kw>
<msg timestamp="20250929 17:59:04.440" level="INFO">${container} = 4</msg>
<status status="PASS" starttime="20250929 17:59:02.903" endtime="20250929 17:59:04.440"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20250929 17:59:04.440" endtime="20250929 17:59:04.441"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:59:04.444" level="INFO">Running command 'ozone admin container close "4" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:59:05.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:59:05.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:59:04.441" endtime="20250929 17:59:05.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:59:05.906" level="INFO"/>
<status status="PASS" starttime="20250929 17:59:05.905" endtime="20250929 17:59:05.906"/>
</kw>
<msg timestamp="20250929 17:59:05.906" level="INFO">${message} = </msg>
<status status="PASS" starttime="20250929 17:59:04.441" endtime="20250929 17:59:05.906"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250929 17:59:05.906" endtime="20250929 17:59:05.907"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:59:05.911" level="INFO">Running command 'ozone admin container info "4" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:59:07.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:59:07.412" level="INFO">${output} = Container id: 4
Pipeline id: a867d68a-e81d-48bf-b41a-186a00c05cc4
Write PipelineId: a867d68a-e81d-48bf-b41a-186a00c05cc4
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [a790d750-af9a-4...</msg>
<status status="PASS" starttime="20250929 17:59:05.908" endtime="20250929 17:59:07.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:59:07.413" level="INFO">Container id: 4
Pipeline id: a867d68a-e81d-48bf-b41a-186a00c05cc4
Write PipelineId: a867d68a-e81d-48bf-b41a-186a00c05cc4
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [a790d750-af9a-4f1d-aaea-f32514c24d04/ozone-balancer-datanode3-1.ozone-balancer_default,
2a910af7-19dc-42fa-b5bb-c9ae25424bb4/ozone-balancer-datanode4-1.ozone-balancer_default,
4559a8ab-405c-429b-900e-5b85eb045739/ozone-balancer-datanode2-1.ozone-balancer_default,
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f/ozone-balancer-datanode6-1.ozone-balancer_default,
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa/ozone-balancer-datanode5-1.ozone-balancer_default]
Replicas: [State: OPEN; ReplicaIndex: 1; Origin: a790d750-af9a-4f1d-aaea-f32514c24d04; Location: a790d750-af9a-4f1d-aaea-f32514c24d04/ozone-balancer-datanode3-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 2; Origin: 2a910af7-19dc-42fa-b5bb-c9ae25424bb4; Location: 2a910af7-19dc-42fa-b5bb-c9ae25424bb4/ozone-balancer-datanode4-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 3; Origin: 4559a8ab-405c-429b-900e-5b85eb045739; Location: 4559a8ab-405c-429b-900e-5b85eb045739/ozone-balancer-datanode2-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 4; Origin: 6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f; Location: 6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f/ozone-balancer-datanode6-1.ozone-balancer_default,
State: OPEN; ReplicaIndex: 5; Origin: 46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa; Location: 46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa/ozone-balancer-datanode5-1.ozone-balancer_default]</msg>
<status status="PASS" starttime="20250929 17:59:07.412" endtime="20250929 17:59:07.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:59:07.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:59:07.413" endtime="20250929 17:59:07.414"/>
</kw>
<status status="PASS" starttime="20250929 17:59:05.908" endtime="20250929 17:59:07.414"/>
</kw>
<msg timestamp="20250929 17:59:07.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:59:05.908" endtime="20250929 17:59:07.414"/>
</kw>
<msg timestamp="20250929 17:59:07.414" level="INFO">${output} = Container id: 4
Pipeline id: a867d68a-e81d-48bf-b41a-186a00c05cc4
Write PipelineId: a867d68a-e81d-48bf-b41a-186a00c05cc4
Write Pipeline State: OPEN
Container State: CLOSING
Datanodes: [a790d750-af9a-4...</msg>
<status status="PASS" starttime="20250929 17:59:05.907" endtime="20250929 17:59:07.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 17:59:07.414" endtime="20250929 17:59:07.415"/>
</kw>
<status status="PASS" starttime="20250929 17:59:02.903" endtime="20250929 17:59:07.415"/>
</iter>
<iter>
<var name="${INDEX}">5</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:59:07.418" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r '.[] | select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:59:08.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:59:08.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250929 17:59:07.416" endtime="20250929 17:59:08.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:59:08.919" level="INFO"/>
<status status="PASS" starttime="20250929 17:59:08.918" endtime="20250929 17:59:08.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:59:08.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:59:08.919" endtime="20250929 17:59:08.919"/>
</kw>
<status status="PASS" starttime="20250929 17:59:07.415" endtime="20250929 17:59:08.920"/>
</kw>
<msg timestamp="20250929 17:59:08.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:59:07.415" endtime="20250929 17:59:08.920"/>
</kw>
<msg timestamp="20250929 17:59:08.920" level="INFO">${container} = </msg>
<status status="PASS" starttime="20250929 17:59:07.415" endtime="20250929 17:59:08.920"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20250929 17:59:08.921" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20250929 17:59:08.920" endtime="20250929 17:59:08.921"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<status status="NOT RUN" starttime="20250929 17:59:08.921" endtime="20250929 17:59:08.921"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250929 17:59:08.921" endtime="20250929 17:59:08.921"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<status status="NOT RUN" starttime="20250929 17:59:08.921" endtime="20250929 17:59:08.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250929 17:59:08.921" endtime="20250929 17:59:08.921"/>
</kw>
<status status="PASS" starttime="20250929 17:59:07.415" endtime="20250929 17:59:08.921"/>
</iter>
<status status="PASS" starttime="20250929 17:58:44.667" endtime="20250929 17:59:08.922"/>
</for>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>4min</arg>
<arg>10sec</arg>
<arg>All container is closed</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="All container is closed">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state OPEN</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:59:08.925" level="INFO">Running command 'ozone admin container list --state OPEN 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:59:10.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:59:10.401" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20250929 17:59:08.923" endtime="20250929 17:59:10.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:59:10.402" level="INFO">[ ]</msg>
<status status="PASS" starttime="20250929 17:59:10.401" endtime="20250929 17:59:10.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:59:10.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:59:10.402" endtime="20250929 17:59:10.402"/>
</kw>
<status status="PASS" starttime="20250929 17:59:08.923" endtime="20250929 17:59:10.402"/>
</kw>
<msg timestamp="20250929 17:59:10.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:59:08.922" endtime="20250929 17:59:10.402"/>
</kw>
<msg timestamp="20250929 17:59:10.403" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20250929 17:59:08.922" endtime="20250929 17:59:10.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>[ ]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250929 17:59:10.403" endtime="20250929 17:59:10.403"/>
</kw>
<status status="PASS" starttime="20250929 17:59:08.922" endtime="20250929 17:59:10.403"/>
</kw>
<status status="PASS" starttime="20250929 17:59:08.922" endtime="20250929 17:59:10.403"/>
</kw>
<status status="PASS" starttime="20250929 17:58:44.666" endtime="20250929 17:59:10.403"/>
</kw>
<kw name="Get Datanode Ozone Used Bytes Info">
<var>${datanodeOzoneUsedBytesInfo}</var>
<arg>${uuid}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "$\{DATANODES\}" | jq -r '.[].id'); do ozone admin datanode usageinfo --uuid=$\{datanode\} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:59:10.407" level="INFO">Running command 'export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "${DATANODES}" | jq -r '.[].id'); do ozone admin datanode usageinfo --uuid=${datanode} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:59:21.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:59:21.481" level="INFO">${output} = {
  "a790d750-af9a-4f1d-aaea-f32514c24d04": 106958848,
  "209f854f-ec43-43c8-bf7e-39c9f799d21b": 4096,
  "2a910af7-19dc-42fa-b5bb-c9ae25424bb4": 103813120,
  "4559a8ab-405c-429b-900e-5b85eb045739": 10...</msg>
<status status="PASS" starttime="20250929 17:59:10.405" endtime="20250929 17:59:21.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:59:21.482" level="INFO">{
  "a790d750-af9a-4f1d-aaea-f32514c24d04": 106958848,
  "209f854f-ec43-43c8-bf7e-39c9f799d21b": 4096,
  "2a910af7-19dc-42fa-b5bb-c9ae25424bb4": 103813120,
  "4559a8ab-405c-429b-900e-5b85eb045739": 104861696,
  "46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa": 106958848,
  "6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f": 105910272
}</msg>
<status status="PASS" starttime="20250929 17:59:21.482" endtime="20250929 17:59:21.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:59:21.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:59:21.482" endtime="20250929 17:59:21.483"/>
</kw>
<status status="PASS" starttime="20250929 17:59:10.404" endtime="20250929 17:59:21.483"/>
</kw>
<msg timestamp="20250929 17:59:21.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:59:10.404" endtime="20250929 17:59:21.483"/>
</kw>
<msg timestamp="20250929 17:59:21.483" level="INFO">${output} = {
  "a790d750-af9a-4f1d-aaea-f32514c24d04": 106958848,
  "209f854f-ec43-43c8-bf7e-39c9f799d21b": 4096,
  "2a910af7-19dc-42fa-b5bb-c9ae25424bb4": 103813120,
  "4559a8ab-405c-429b-900e-5b85eb045739": 10...</msg>
<status status="PASS" starttime="20250929 17:59:10.404" endtime="20250929 17:59:21.483"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${output}' | jq '. | to_entries | .[] | select(.key == "${uuid}") | .value'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:59:21.486" level="INFO">Running command 'echo '{
  "a790d750-af9a-4f1d-aaea-f32514c24d04": 106958848,
  "209f854f-ec43-43c8-bf7e-39c9f799d21b": 4096,
  "2a910af7-19dc-42fa-b5bb-c9ae25424bb4": 103813120,
  "4559a8ab-405c-429b-900e-5b85eb045739": 104861696,
  "46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa": 106958848,
  "6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f": 105910272
}' | jq '. | to_entries | .[] | select(.key == "209f854f-ec43-43c8-bf7e-39c9f799d21b") | .value' 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:59:21.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:59:21.491" level="INFO">${output} = 4096</msg>
<status status="PASS" starttime="20250929 17:59:21.484" endtime="20250929 17:59:21.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:59:21.492" level="INFO">4096</msg>
<status status="PASS" starttime="20250929 17:59:21.492" endtime="20250929 17:59:21.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:59:21.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:59:21.492" endtime="20250929 17:59:21.493"/>
</kw>
<status status="PASS" starttime="20250929 17:59:21.484" endtime="20250929 17:59:21.493"/>
</kw>
<msg timestamp="20250929 17:59:21.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:59:21.484" endtime="20250929 17:59:21.493"/>
</kw>
<msg timestamp="20250929 17:59:21.493" level="INFO">${result} = 4096</msg>
<status status="PASS" starttime="20250929 17:59:21.483" endtime="20250929 17:59:21.493"/>
</kw>
<msg timestamp="20250929 17:59:21.493" level="INFO">${datanodeOzoneUsedBytesInfo} = 4096</msg>
<status status="PASS" starttime="20250929 17:59:10.403" endtime="20250929 17:59:21.493"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfo} &lt; ${SIZE}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250929 17:59:21.493" endtime="20250929 17:59:21.493"/>
</kw>
<kw name="Datanode Recommission">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode recommission ${HOST}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:59:21.497" level="INFO">Running command 'ozone admin datanode recommission datanode1 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:59:22.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:59:22.979" level="INFO">${output} = Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250929 17:59:21.495" endtime="20250929 17:59:22.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:59:22.980" level="INFO">Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250929 17:59:22.979" endtime="20250929 17:59:22.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:59:22.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:59:22.980" endtime="20250929 17:59:22.980"/>
</kw>
<status status="PASS" starttime="20250929 17:59:21.494" endtime="20250929 17:59:22.980"/>
</kw>
<msg timestamp="20250929 17:59:22.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:59:21.494" endtime="20250929 17:59:22.980"/>
</kw>
<msg timestamp="20250929 17:59:22.981" level="INFO">${result} = Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20250929 17:59:21.494" endtime="20250929 17:59:22.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Started recommissioning datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 17:59:22.981" endtime="20250929 17:59:22.981"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1min</arg>
<arg>10sec</arg>
<arg>Datanode Recommission is Finished</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Datanode Recommission is Finished">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:59:22.985" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:59:24.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:59:24.466" level="INFO">${output} = Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250929 17:59:22.983" endtime="20250929 17:59:24.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:59:24.467" level="INFO">Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250929 17:59:24.466" endtime="20250929 17:59:24.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:59:24.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:59:24.467" endtime="20250929 17:59:24.467"/>
</kw>
<status status="PASS" starttime="20250929 17:59:22.982" endtime="20250929 17:59:24.467"/>
</kw>
<msg timestamp="20250929 17:59:24.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:59:22.982" endtime="20250929 17:59:24.467"/>
</kw>
<msg timestamp="20250929 17:59:24.467" level="INFO">${result} = Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250929 17:59:22.982" endtime="20250929 17:59:24.468"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<msg timestamp="20250929 17:59:24.468" level="FAIL">'Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE' contains 'ENTERING_MAINTENANCE'</msg>
<status status="FAIL" starttime="20250929 17:59:24.468" endtime="20250929 17:59:24.468"/>
</kw>
<status status="FAIL" starttime="20250929 17:59:22.981" endtime="20250929 17:59:24.469"/>
</kw>
<kw name="Datanode Recommission is Finished">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:59:34.473" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:59:36.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:59:36.012" level="INFO">${output} = Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250929 17:59:34.470" endtime="20250929 17:59:36.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:59:36.013" level="INFO">Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250929 17:59:36.012" endtime="20250929 17:59:36.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:59:36.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:59:36.013" endtime="20250929 17:59:36.013"/>
</kw>
<status status="PASS" starttime="20250929 17:59:34.470" endtime="20250929 17:59:36.013"/>
</kw>
<msg timestamp="20250929 17:59:36.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:59:34.470" endtime="20250929 17:59:36.014"/>
</kw>
<msg timestamp="20250929 17:59:36.014" level="INFO">${result} = Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250929 17:59:34.469" endtime="20250929 17:59:36.014"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<msg timestamp="20250929 17:59:36.014" level="FAIL">'Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE' contains 'ENTERING_MAINTENANCE'</msg>
<status status="FAIL" starttime="20250929 17:59:36.014" endtime="20250929 17:59:36.014"/>
</kw>
<status status="FAIL" starttime="20250929 17:59:34.469" endtime="20250929 17:59:36.014"/>
</kw>
<kw name="Datanode Recommission is Finished">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 17:59:46.019" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 17:59:47.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 17:59:47.569" level="INFO">${output} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250929 17:59:46.016" endtime="20250929 17:59:47.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 17:59:47.570" level="INFO">Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250929 17:59:47.570" endtime="20250929 17:59:47.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 17:59:47.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 17:59:47.570" endtime="20250929 17:59:47.571"/>
</kw>
<status status="PASS" starttime="20250929 17:59:46.016" endtime="20250929 17:59:47.571"/>
</kw>
<msg timestamp="20250929 17:59:47.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 17:59:46.016" endtime="20250929 17:59:47.571"/>
</kw>
<msg timestamp="20250929 17:59:47.571" level="INFO">${result} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE</msg>
<status status="PASS" starttime="20250929 17:59:46.015" endtime="20250929 17:59:47.571"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 17:59:47.571" endtime="20250929 17:59:47.571"/>
</kw>
<status status="PASS" starttime="20250929 17:59:46.015" endtime="20250929 17:59:47.572"/>
</kw>
<status status="PASS" starttime="20250929 17:59:22.981" endtime="20250929 17:59:47.572"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>300000ms</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250929 18:04:47.572" level="INFO">Slept 5 minutes</msg>
<status status="PASS" starttime="20250929 17:59:47.572" endtime="20250929 18:04:47.572"/>
</kw>
<status status="PASS" starttime="20250929 17:59:21.494" endtime="20250929 18:04:47.572"/>
</kw>
<kw name="Run Container Balancer">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer start -t 0.1 -d 100 -i 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:04:47.576" level="INFO">Running command 'ozone admin containerbalancer start -t 0.1 -d 100 -i 3 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:04:49.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:04:49.081" level="INFO">${output} = Container Balancer started successfully.</msg>
<status status="PASS" starttime="20250929 18:04:47.574" endtime="20250929 18:04:49.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:04:49.082" level="INFO">Container Balancer started successfully.</msg>
<status status="PASS" starttime="20250929 18:04:49.082" endtime="20250929 18:04:49.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:04:49.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:04:49.083" endtime="20250929 18:04:49.083"/>
</kw>
<status status="PASS" starttime="20250929 18:04:47.573" endtime="20250929 18:04:49.083"/>
</kw>
<msg timestamp="20250929 18:04:49.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:04:47.573" endtime="20250929 18:04:49.083"/>
</kw>
<msg timestamp="20250929 18:04:49.083" level="INFO">${result} = Container Balancer started successfully.</msg>
<status status="PASS" starttime="20250929 18:04:47.573" endtime="20250929 18:04:49.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Container Balancer started successfully.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:49.084" endtime="20250929 18:04:49.084"/>
</kw>
<status status="PASS" starttime="20250929 18:04:47.573" endtime="20250929 18:04:49.084"/>
</kw>
<kw name="Run Balancer Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:04:49.088" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:04:50.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:04:50.542" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250929 18:04:49.085" endtime="20250929 18:04:50.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:04:50.543" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250929 18:04:50.542" endtime="20250929 18:04:50.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:04:50.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:04:50.543" endtime="20250929 18:04:50.543"/>
</kw>
<status status="PASS" starttime="20250929 18:04:49.085" endtime="20250929 18:04:50.543"/>
</kw>
<msg timestamp="20250929 18:04:50.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:04:49.085" endtime="20250929 18:04:50.544"/>
</kw>
<msg timestamp="20250929 18:04:50.544" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250929 18:04:49.085" endtime="20250929 18:04:50.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:50.544" endtime="20250929 18:04:50.544"/>
</kw>
<status status="PASS" starttime="20250929 18:04:49.084" endtime="20250929 18:04:50.544"/>
</kw>
<kw name="Run Balancer Verbose Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:04:50.548" level="INFO">Running command 'ozone admin containerbalancer status --verbose 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:04:52.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:04:52.064" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 4s

Container Balancer Configuration values:
Key                                                Value
Threshold       ...</msg>
<status status="PASS" starttime="20250929 18:04:50.545" endtime="20250929 18:04:52.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:04:52.065" level="INFO">ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 4s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 2s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB
</msg>
<status status="PASS" starttime="20250929 18:04:52.064" endtime="20250929 18:04:52.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:04:52.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:04:52.065" endtime="20250929 18:04:52.065"/>
</kw>
<status status="PASS" starttime="20250929 18:04:50.545" endtime="20250929 18:04:52.065"/>
</kw>
<msg timestamp="20250929 18:04:52.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:04:50.545" endtime="20250929 18:04:52.065"/>
</kw>
<msg timestamp="20250929 18:04:52.065" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 4s

Container Balancer Configuration values:
Key                                                Value
Threshold       ...</msg>
<status status="PASS" starttime="20250929 18:04:50.545" endtime="20250929 18:04:52.065"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:52.066" endtime="20250929 18:04:52.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:52.066" endtime="20250929 18:04:52.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:52.067" endtime="20250929 18:04:52.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:52.067" endtime="20250929 18:04:52.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:52.068" endtime="20250929 18:04:52.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:52.068" endtime="20250929 18:04:52.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:52.068" endtime="20250929 18:04:52.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:52.069" endtime="20250929 18:04:52.069"/>
</kw>
<status status="PASS" starttime="20250929 18:04:52.066" endtime="20250929 18:04:52.069"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Iteration result -</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:52.069" endtime="20250929 18:04:52.069"/>
</kw>
<status status="PASS" starttime="20250929 18:04:50.544" endtime="20250929 18:04:52.069"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>40sec</arg>
<arg>5sec</arg>
<arg>Run Balancer Verbose History Status</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:04:52.073" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:04:53.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:04:53.517" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 5s

Container Balancer Configuration values:
Key                                                Value
Threshold       ...</msg>
<status status="PASS" starttime="20250929 18:04:52.071" endtime="20250929 18:04:53.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:04:53.518" level="INFO">ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 5s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 4s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20250929 18:04:53.517" endtime="20250929 18:04:53.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:04:53.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:04:53.518" endtime="20250929 18:04:53.518"/>
</kw>
<status status="PASS" starttime="20250929 18:04:52.071" endtime="20250929 18:04:53.518"/>
</kw>
<msg timestamp="20250929 18:04:53.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:04:52.070" endtime="20250929 18:04:53.519"/>
</kw>
<msg timestamp="20250929 18:04:53.519" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 5s

Container Balancer Configuration values:
Key                                                Value
Threshold       ...</msg>
<status status="PASS" starttime="20250929 18:04:52.070" endtime="20250929 18:04:53.519"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:53.519" endtime="20250929 18:04:53.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:53.520" endtime="20250929 18:04:53.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:53.520" endtime="20250929 18:04:53.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:53.520" endtime="20250929 18:04:53.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:53.521" endtime="20250929 18:04:53.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:53.521" endtime="20250929 18:04:53.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:53.521" endtime="20250929 18:04:53.522"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:53.522" endtime="20250929 18:04:53.522"/>
</kw>
<status status="PASS" starttime="20250929 18:04:53.519" endtime="20250929 18:04:53.522"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:04:53.522" endtime="20250929 18:04:53.523"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:04:53.523" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:04:53.523" endtime="20250929 18:04:53.523"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:04:53.524" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:04:53.523" endtime="20250929 18:04:53.524"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:04:53.524" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:04:53.524" endtime="20250929 18:04:53.524"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:04:53.524" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:04:53.524" endtime="20250929 18:04:53.525"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:04:53.525" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:04:53.525" endtime="20250929 18:04:53.525"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:04:53.526" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:04:53.525" endtime="20250929 18:04:53.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250929 18:04:53.526" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 5s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 4s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250929 18:04:53.526" endtime="20250929 18:04:53.526"/>
</kw>
<status status="FAIL" starttime="20250929 18:04:53.522" endtime="20250929 18:04:53.527"/>
</kw>
<status status="FAIL" starttime="20250929 18:04:52.070" endtime="20250929 18:04:53.527"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:04:58.531" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:05:01.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:05:01.296" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 13s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250929 18:04:58.528" endtime="20250929 18:05:01.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:05:01.297" level="INFO">ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 13s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 12s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20250929 18:05:01.296" endtime="20250929 18:05:01.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:05:01.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:05:01.297" endtime="20250929 18:05:01.297"/>
</kw>
<status status="PASS" starttime="20250929 18:04:58.528" endtime="20250929 18:05:01.298"/>
</kw>
<msg timestamp="20250929 18:05:01.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:04:58.528" endtime="20250929 18:05:01.298"/>
</kw>
<msg timestamp="20250929 18:05:01.298" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 13s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250929 18:04:58.528" endtime="20250929 18:05:01.298"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:01.298" endtime="20250929 18:05:01.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:01.299" endtime="20250929 18:05:01.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:01.299" endtime="20250929 18:05:01.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:01.299" endtime="20250929 18:05:01.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:01.300" endtime="20250929 18:05:01.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:01.300" endtime="20250929 18:05:01.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:01.301" endtime="20250929 18:05:01.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:01.301" endtime="20250929 18:05:01.301"/>
</kw>
<status status="PASS" starttime="20250929 18:05:01.298" endtime="20250929 18:05:01.301"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:01.302" endtime="20250929 18:05:01.302"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:01.302" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:01.302" endtime="20250929 18:05:01.302"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:01.303" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:01.302" endtime="20250929 18:05:01.303"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:01.303" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:01.303" endtime="20250929 18:05:01.303"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:01.304" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:01.303" endtime="20250929 18:05:01.304"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:01.304" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:01.304" endtime="20250929 18:05:01.304"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:01.305" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:01.304" endtime="20250929 18:05:01.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250929 18:05:01.305" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 13s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 12s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250929 18:05:01.305" endtime="20250929 18:05:01.305"/>
</kw>
<status status="FAIL" starttime="20250929 18:05:01.301" endtime="20250929 18:05:01.305"/>
</kw>
<status status="FAIL" starttime="20250929 18:04:58.527" endtime="20250929 18:05:01.306"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:05:06.310" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:05:08.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:05:08.045" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 19s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250929 18:05:06.307" endtime="20250929 18:05:08.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:05:08.048" level="INFO">ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 19s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 18s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20250929 18:05:08.047" endtime="20250929 18:05:08.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:05:08.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:05:08.048" endtime="20250929 18:05:08.049"/>
</kw>
<status status="PASS" starttime="20250929 18:05:06.307" endtime="20250929 18:05:08.050"/>
</kw>
<msg timestamp="20250929 18:05:08.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:05:06.307" endtime="20250929 18:05:08.052"/>
</kw>
<msg timestamp="20250929 18:05:08.053" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 19s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250929 18:05:06.306" endtime="20250929 18:05:08.053"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:08.053" endtime="20250929 18:05:08.055"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:08.055" endtime="20250929 18:05:08.055"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:08.055" endtime="20250929 18:05:08.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:08.056" endtime="20250929 18:05:08.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:08.057" endtime="20250929 18:05:08.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:08.058" endtime="20250929 18:05:08.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:08.058" endtime="20250929 18:05:08.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:08.059" endtime="20250929 18:05:08.059"/>
</kw>
<status status="PASS" starttime="20250929 18:05:08.053" endtime="20250929 18:05:08.059"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:08.061" endtime="20250929 18:05:08.061"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:08.062" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:08.061" endtime="20250929 18:05:08.062"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:08.063" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:08.062" endtime="20250929 18:05:08.063"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:08.064" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:08.064" endtime="20250929 18:05:08.065"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:08.065" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:08.065" endtime="20250929 18:05:08.065"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:08.066" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:08.066" endtime="20250929 18:05:08.067"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:08.067" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:08.067" endtime="20250929 18:05:08.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250929 18:05:08.069" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 19s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 18s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250929 18:05:08.068" endtime="20250929 18:05:08.069"/>
</kw>
<status status="FAIL" starttime="20250929 18:05:08.059" endtime="20250929 18:05:08.069"/>
</kw>
<status status="FAIL" starttime="20250929 18:05:06.306" endtime="20250929 18:05:08.070"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:05:13.074" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:05:14.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:05:14.573" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 26s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250929 18:05:13.072" endtime="20250929 18:05:14.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:05:14.574" level="INFO">ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 26s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 25s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20250929 18:05:14.573" endtime="20250929 18:05:14.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:05:14.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:05:14.574" endtime="20250929 18:05:14.574"/>
</kw>
<status status="PASS" starttime="20250929 18:05:13.072" endtime="20250929 18:05:14.575"/>
</kw>
<msg timestamp="20250929 18:05:14.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:05:13.071" endtime="20250929 18:05:14.575"/>
</kw>
<msg timestamp="20250929 18:05:14.575" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 26s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250929 18:05:13.071" endtime="20250929 18:05:14.575"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:14.575" endtime="20250929 18:05:14.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:14.576" endtime="20250929 18:05:14.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:14.576" endtime="20250929 18:05:14.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:14.576" endtime="20250929 18:05:14.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:14.577" endtime="20250929 18:05:14.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:14.578" endtime="20250929 18:05:14.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:14.578" endtime="20250929 18:05:14.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:14.578" endtime="20250929 18:05:14.579"/>
</kw>
<status status="PASS" starttime="20250929 18:05:14.575" endtime="20250929 18:05:14.579"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:14.579" endtime="20250929 18:05:14.579"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:14.580" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:14.579" endtime="20250929 18:05:14.580"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:14.580" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:14.580" endtime="20250929 18:05:14.580"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:14.581" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:14.580" endtime="20250929 18:05:14.581"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:14.581" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:14.581" endtime="20250929 18:05:14.581"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:14.582" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:14.581" endtime="20250929 18:05:14.582"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:14.582" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:14.582" endtime="20250929 18:05:14.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250929 18:05:14.583" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 26s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 25s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    0 B
Scheduled to move containers                       5
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250929 18:05:14.582" endtime="20250929 18:05:14.583"/>
</kw>
<status status="FAIL" starttime="20250929 18:05:14.579" endtime="20250929 18:05:14.583"/>
</kw>
<status status="FAIL" starttime="20250929 18:05:13.071" endtime="20250929 18:05:14.583"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:05:19.587" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:05:21.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:05:21.061" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 33s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250929 18:05:19.585" endtime="20250929 18:05:21.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:05:21.062" level="INFO">ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 33s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 31s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    54 MB
Scheduled to move containers                       5
Already moved containers                           3
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20250929 18:05:21.061" endtime="20250929 18:05:21.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:05:21.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:05:21.062" endtime="20250929 18:05:21.062"/>
</kw>
<status status="PASS" starttime="20250929 18:05:19.585" endtime="20250929 18:05:21.062"/>
</kw>
<msg timestamp="20250929 18:05:21.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:05:19.584" endtime="20250929 18:05:21.063"/>
</kw>
<msg timestamp="20250929 18:05:21.063" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 33s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250929 18:05:19.584" endtime="20250929 18:05:21.063"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:21.063" endtime="20250929 18:05:21.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:21.064" endtime="20250929 18:05:21.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:21.064" endtime="20250929 18:05:21.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:21.064" endtime="20250929 18:05:21.065"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:21.065" endtime="20250929 18:05:21.065"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:21.065" endtime="20250929 18:05:21.065"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:21.066" endtime="20250929 18:05:21.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:21.066" endtime="20250929 18:05:21.066"/>
</kw>
<status status="PASS" starttime="20250929 18:05:21.063" endtime="20250929 18:05:21.066"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:21.066" endtime="20250929 18:05:21.067"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:21.067" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:21.067" endtime="20250929 18:05:21.067"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:21.068" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:21.068" endtime="20250929 18:05:21.068"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:21.068" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:21.068" endtime="20250929 18:05:21.068"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:21.069" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:21.068" endtime="20250929 18:05:21.069"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:21.069" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:21.069" endtime="20250929 18:05:21.069"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:21.070" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:21.069" endtime="20250929 18:05:21.070"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250929 18:05:21.070" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 33s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 31s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    54 MB
Scheduled to move containers                       5
Already moved containers                           3
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250929 18:05:21.070" endtime="20250929 18:05:21.070"/>
</kw>
<status status="FAIL" starttime="20250929 18:05:21.066" endtime="20250929 18:05:21.071"/>
</kw>
<status status="FAIL" starttime="20250929 18:05:19.584" endtime="20250929 18:05:21.071"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:05:26.075" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:05:27.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:05:27.574" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 39s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250929 18:05:26.072" endtime="20250929 18:05:27.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:05:27.575" level="INFO">ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 39s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 38s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    82 MB
Scheduled to move containers                       5
Already moved containers                           4
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB

Iteration history list:
</msg>
<status status="PASS" starttime="20250929 18:05:27.574" endtime="20250929 18:05:27.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:05:27.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:05:27.575" endtime="20250929 18:05:27.575"/>
</kw>
<status status="PASS" starttime="20250929 18:05:26.072" endtime="20250929 18:05:27.575"/>
</kw>
<msg timestamp="20250929 18:05:27.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:05:26.072" endtime="20250929 18:05:27.576"/>
</kw>
<msg timestamp="20250929 18:05:27.576" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 39s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250929 18:05:26.072" endtime="20250929 18:05:27.576"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:27.576" endtime="20250929 18:05:27.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:27.577" endtime="20250929 18:05:27.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:27.577" endtime="20250929 18:05:27.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:27.577" endtime="20250929 18:05:27.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:27.578" endtime="20250929 18:05:27.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:27.578" endtime="20250929 18:05:27.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:27.579" endtime="20250929 18:05:27.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:27.579" endtime="20250929 18:05:27.579"/>
</kw>
<status status="PASS" starttime="20250929 18:05:27.576" endtime="20250929 18:05:27.579"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:27.579" endtime="20250929 18:05:27.580"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:27.580" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:27.580" endtime="20250929 18:05:27.580"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:27.581" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:27.580" endtime="20250929 18:05:27.581"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:27.582" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:27.581" endtime="20250929 18:05:27.582"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:27.582" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:27.582" endtime="20250929 18:05:27.583"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:27.583" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:27.583" endtime="20250929 18:05:27.583"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:27.583" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:27.583" endtime="20250929 18:05:27.584"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250929 18:05:27.584" level="FAIL">'ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 39s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration duration                                 38s
Iteration result                                   -
Size scheduled to move                             102 MB
Moved data size                                    82 MB
Scheduled to move containers                       5
Already moved containers                           4
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB

Iteration history list:
' does not contain 'Iteration result ITERATION_COMPLETED'</msg>
<status status="FAIL" starttime="20250929 18:05:27.584" endtime="20250929 18:05:27.584"/>
</kw>
<status status="FAIL" starttime="20250929 18:05:27.579" endtime="20250929 18:05:27.584"/>
</kw>
<status status="FAIL" starttime="20250929 18:05:26.071" endtime="20250929 18:05:27.585"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status --verbose --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:05:32.589" level="INFO">Running command 'ozone admin containerbalancer status --verbose --history 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:05:34.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:05:34.031" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 46s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250929 18:05:32.586" endtime="20250929 18:05:34.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:05:34.032" level="INFO">ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 46s

Container Balancer Configuration values:
Key                                                Value
Threshold                                          0.1
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               3
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    0min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
-

Iteration history list:
Key                                                Value
Iteration number                                   1
Iteration duration                                 38s
Iteration result                                   ITERATION_COMPLETED
Size scheduled to move                             102 MB
Moved data size                                    102 MB
Scheduled to move containers                       5
Already moved containers                           5
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
209f854f-ec43-43c8-bf7e-39c9f799d21b &lt;- 102 MB
Exited data from nodes                             
46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa -&gt; 20 MB
4559a8ab-405c-429b-900e-5b85eb045739 -&gt; 20 MB
2a910af7-19dc-42fa-b5bb-c9ae25424bb4 -&gt; 14 MB
6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f -&gt; 28 MB
a790d750-af9a-4f1d-aaea-f32514c24d04 -&gt; 20 MB
</msg>
<status status="PASS" starttime="20250929 18:05:34.032" endtime="20250929 18:05:34.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:05:34.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:05:34.033" endtime="20250929 18:05:34.033"/>
</kw>
<status status="PASS" starttime="20250929 18:05:32.586" endtime="20250929 18:05:34.033"/>
</kw>
<msg timestamp="20250929 18:05:34.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:05:32.586" endtime="20250929 18:05:34.033"/>
</kw>
<msg timestamp="20250929 18:05:34.033" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2025-09-29 18:04:48
Balancing duration: 46s

Container Balancer Configuration values:
Key                                                Value
Threshold      ...</msg>
<status status="PASS" starttime="20250929 18:05:32.585" endtime="20250929 18:05:34.033"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:34.034" endtime="20250929 18:05:34.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:34.034" endtime="20250929 18:05:34.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:34.035" endtime="20250929 18:05:34.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number ${number}</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:34.035" endtime="20250929 18:05:34.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:34.035" endtime="20250929 18:05:34.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Balancing duration:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:34.036" endtime="20250929 18:05:34.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration duration</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:34.037" endtime="20250929 18:05:34.037"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:34.037" endtime="20250929 18:05:34.037"/>
</kw>
<status status="PASS" starttime="20250929 18:05:34.034" endtime="20250929 18:05:34.037"/>
</kw>
<kw name="Verify Balancer Iteration History">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:34.038" endtime="20250929 18:05:34.038"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Size scheduled to move</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:34.039" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:34.038" endtime="20250929 18:05:34.039"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Moved data size</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:34.039" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:34.039" endtime="20250929 18:05:34.039"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:34.040" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:34.039" endtime="20250929 18:05:34.040"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Already moved containers</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:34.040" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:34.040" endtime="20250929 18:05:34.040"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:34.041" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:34.040" endtime="20250929 18:05:34.041"/>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed to move containers by timeout 0</arg>
<arg>1</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<msg timestamp="20250929 18:05:34.041" level="INFO">Item found from container 1 time.</msg>
<status status="PASS" starttime="20250929 18:05:34.041" endtime="20250929 18:05:34.041"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result ITERATION_COMPLETED</arg>
<arg>collapse_spaces=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:34.041" endtime="20250929 18:05:34.041"/>
</kw>
<status status="PASS" starttime="20250929 18:05:34.037" endtime="20250929 18:05:34.042"/>
</kw>
<status status="PASS" starttime="20250929 18:05:32.585" endtime="20250929 18:05:34.042"/>
</kw>
<status status="PASS" starttime="20250929 18:04:52.069" endtime="20250929 18:05:34.042"/>
</kw>
<kw name="Wait Finish Of Balancing">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:05:34.045" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:05:35.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:05:35.557" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250929 18:05:34.043" endtime="20250929 18:05:35.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:05:35.558" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250929 18:05:35.557" endtime="20250929 18:05:35.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:05:35.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:05:35.558" endtime="20250929 18:05:35.559"/>
</kw>
<status status="PASS" starttime="20250929 18:05:34.043" endtime="20250929 18:05:35.559"/>
</kw>
<msg timestamp="20250929 18:05:35.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:05:34.042" endtime="20250929 18:05:35.559"/>
</kw>
<msg timestamp="20250929 18:05:35.559" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250929 18:05:34.042" endtime="20250929 18:05:35.559"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>4min</arg>
<arg>10sec</arg>
<arg>ContainerBalancer is Not Running</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="ContainerBalancer is Not Running">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:05:35.563" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:05:37.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:05:37.026" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250929 18:05:35.561" endtime="20250929 18:05:37.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:05:37.027" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250929 18:05:37.027" endtime="20250929 18:05:37.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:05:37.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:05:37.028" endtime="20250929 18:05:37.028"/>
</kw>
<status status="PASS" starttime="20250929 18:05:35.560" endtime="20250929 18:05:37.028"/>
</kw>
<msg timestamp="20250929 18:05:37.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:05:35.560" endtime="20250929 18:05:37.028"/>
</kw>
<msg timestamp="20250929 18:05:37.028" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250929 18:05:35.560" endtime="20250929 18:05:37.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Not Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250929 18:05:37.029" level="FAIL">'ContainerBalancer is Running.' does not contain 'ContainerBalancer is Not Running.'</msg>
<status status="FAIL" starttime="20250929 18:05:37.029" endtime="20250929 18:05:37.029"/>
</kw>
<status status="FAIL" starttime="20250929 18:05:35.559" endtime="20250929 18:05:37.029"/>
</kw>
<kw name="ContainerBalancer is Not Running">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:05:47.033" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:05:48.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:05:48.500" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250929 18:05:47.031" endtime="20250929 18:05:48.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:05:48.501" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250929 18:05:48.500" endtime="20250929 18:05:48.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:05:48.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:05:48.501" endtime="20250929 18:05:48.501"/>
</kw>
<status status="PASS" starttime="20250929 18:05:47.031" endtime="20250929 18:05:48.501"/>
</kw>
<msg timestamp="20250929 18:05:48.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:05:47.030" endtime="20250929 18:05:48.501"/>
</kw>
<msg timestamp="20250929 18:05:48.502" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20250929 18:05:47.030" endtime="20250929 18:05:48.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Not Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250929 18:05:48.502" level="FAIL">'ContainerBalancer is Running.' does not contain 'ContainerBalancer is Not Running.'</msg>
<status status="FAIL" starttime="20250929 18:05:48.502" endtime="20250929 18:05:48.502"/>
</kw>
<status status="FAIL" starttime="20250929 18:05:47.030" endtime="20250929 18:05:48.502"/>
</kw>
<kw name="ContainerBalancer is Not Running">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:05:58.507" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:05:59.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:05:59.936" level="INFO">${output} = ContainerBalancer is Not Running.</msg>
<status status="PASS" starttime="20250929 18:05:58.504" endtime="20250929 18:05:59.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:05:59.937" level="INFO">ContainerBalancer is Not Running.</msg>
<status status="PASS" starttime="20250929 18:05:59.936" endtime="20250929 18:05:59.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:05:59.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:05:59.937" endtime="20250929 18:05:59.937"/>
</kw>
<status status="PASS" starttime="20250929 18:05:58.504" endtime="20250929 18:05:59.938"/>
</kw>
<msg timestamp="20250929 18:05:59.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:05:58.504" endtime="20250929 18:05:59.938"/>
</kw>
<msg timestamp="20250929 18:05:59.938" level="INFO">${result} = ContainerBalancer is Not Running.</msg>
<status status="PASS" starttime="20250929 18:05:58.503" endtime="20250929 18:05:59.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Not Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250929 18:05:59.938" endtime="20250929 18:05:59.938"/>
</kw>
<status status="PASS" starttime="20250929 18:05:58.502" endtime="20250929 18:05:59.938"/>
</kw>
<status status="PASS" starttime="20250929 18:05:35.559" endtime="20250929 18:05:59.938"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>60000ms</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250929 18:06:59.939" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20250929 18:05:59.938" endtime="20250929 18:06:59.939"/>
</kw>
<status status="PASS" starttime="20250929 18:05:34.042" endtime="20250929 18:06:59.939"/>
</kw>
<kw name="Get Datanode Ozone Used Bytes Info">
<var>${datanodeOzoneUsedBytesInfoAfterContainerBalancing}</var>
<arg>${uuid}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "$\{DATANODES\}" | jq -r '.[].id'); do ozone admin datanode usageinfo --uuid=$\{datanode\} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:06:59.943" level="INFO">Running command 'export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "${DATANODES}" | jq -r '.[].id'); do ozone admin datanode usageinfo --uuid=${datanode} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:07:10.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:07:10.877" level="INFO">${output} = {
  "a790d750-af9a-4f1d-aaea-f32514c24d04": 85987328,
  "209f854f-ec43-43c8-bf7e-39c9f799d21b": 105910272,
  "2a910af7-19dc-42fa-b5bb-c9ae25424bb4": 90181632,
  "4559a8ab-405c-429b-900e-5b85eb045739":...</msg>
<status status="PASS" starttime="20250929 18:06:59.941" endtime="20250929 18:07:10.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:07:10.878" level="INFO">{
  "a790d750-af9a-4f1d-aaea-f32514c24d04": 85987328,
  "209f854f-ec43-43c8-bf7e-39c9f799d21b": 105910272,
  "2a910af7-19dc-42fa-b5bb-c9ae25424bb4": 90181632,
  "4559a8ab-405c-429b-900e-5b85eb045739": 83890176,
  "46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa": 85987328,
  "6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f": 76550144
}</msg>
<status status="PASS" starttime="20250929 18:07:10.878" endtime="20250929 18:07:10.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:07:10.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:07:10.879" endtime="20250929 18:07:10.879"/>
</kw>
<status status="PASS" starttime="20250929 18:06:59.940" endtime="20250929 18:07:10.879"/>
</kw>
<msg timestamp="20250929 18:07:10.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:06:59.940" endtime="20250929 18:07:10.879"/>
</kw>
<msg timestamp="20250929 18:07:10.880" level="INFO">${output} = {
  "a790d750-af9a-4f1d-aaea-f32514c24d04": 85987328,
  "209f854f-ec43-43c8-bf7e-39c9f799d21b": 105910272,
  "2a910af7-19dc-42fa-b5bb-c9ae25424bb4": 90181632,
  "4559a8ab-405c-429b-900e-5b85eb045739":...</msg>
<status status="PASS" starttime="20250929 18:06:59.940" endtime="20250929 18:07:10.880"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${output}' | jq '. | to_entries | .[] | select(.key == "${uuid}") | .value'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250929 18:07:10.883" level="INFO">Running command 'echo '{
  "a790d750-af9a-4f1d-aaea-f32514c24d04": 85987328,
  "209f854f-ec43-43c8-bf7e-39c9f799d21b": 105910272,
  "2a910af7-19dc-42fa-b5bb-c9ae25424bb4": 90181632,
  "4559a8ab-405c-429b-900e-5b85eb045739": 83890176,
  "46b1ea71-3ec1-4ea9-8446-bc0adf4f5baa": 85987328,
  "6e6dabf2-b460-4ae1-8e39-3e7d3df0d76f": 76550144
}' | jq '. | to_entries | .[] | select(.key == "209f854f-ec43-43c8-bf7e-39c9f799d21b") | .value' 2&gt;&amp;1'.</msg>
<msg timestamp="20250929 18:07:10.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20250929 18:07:10.888" level="INFO">${output} = 105910272</msg>
<status status="PASS" starttime="20250929 18:07:10.881" endtime="20250929 18:07:10.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250929 18:07:10.889" level="INFO">105910272</msg>
<status status="PASS" starttime="20250929 18:07:10.888" endtime="20250929 18:07:10.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250929 18:07:10.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250929 18:07:10.889" endtime="20250929 18:07:10.889"/>
</kw>
<status status="PASS" starttime="20250929 18:07:10.881" endtime="20250929 18:07:10.890"/>
</kw>
<msg timestamp="20250929 18:07:10.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250929 18:07:10.880" endtime="20250929 18:07:10.890"/>
</kw>
<msg timestamp="20250929 18:07:10.890" level="INFO">${result} = 105910272</msg>
<status status="PASS" starttime="20250929 18:07:10.880" endtime="20250929 18:07:10.890"/>
</kw>
<msg timestamp="20250929 18:07:10.890" level="INFO">${datanodeOzoneUsedBytesInfoAfterContainerBalancing} = 105910272</msg>
<status status="PASS" starttime="20250929 18:06:59.939" endtime="20250929 18:07:10.890"/>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfo}</arg>
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing}</arg>
<doc>Fails if objects are equal after converting them to integers.</doc>
<status status="PASS" starttime="20250929 18:07:10.890" endtime="20250929 18:07:10.890"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing} &lt; ${SIZE} * ${UPPER_LIMIT}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250929 18:07:10.891" endtime="20250929 18:07:10.891"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing} &gt; ${SIZE} * ${LOWER_LIMIT}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250929 18:07:10.891" endtime="20250929 18:07:10.891"/>
</kw>
<timeout value="20 minutes"/>
<status status="PASS" starttime="20250929 17:57:00.251" endtime="20250929 18:07:10.892"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250929 17:56:59.407" endtime="20250929 18:07:10.892"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="ozone-balancer-ec">ozone-balancer-ec</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
