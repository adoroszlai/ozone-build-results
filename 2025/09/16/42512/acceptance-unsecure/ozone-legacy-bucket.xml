<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250916 08:45:46.115" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<kw name="Get Security Enabled From Config" library="commonlib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' != ''</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:44:52.307" endtime="20250916 08:44:52.308"/>
</kw>
<kw name="Execute" library="os">
<var>${value}</var>
<arg>ozone getconf confKey ozone.security.enabled</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:44:52.310" level="INFO">Running command 'ozone getconf confKey ozone.security.enabled 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:44:53.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:44:53.197" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20250916 08:44:52.308" endtime="20250916 08:44:53.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:44:53.198" level="INFO">false</msg>
<status status="PASS" starttime="20250916 08:44:53.198" endtime="20250916 08:44:53.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:44:53.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:44:53.198" endtime="20250916 08:44:53.199"/>
</kw>
<status status="PASS" starttime="20250916 08:44:52.308" endtime="20250916 08:44:53.199"/>
</kw>
<msg timestamp="20250916 08:44:53.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:44:52.308" endtime="20250916 08:44:53.199"/>
</kw>
<msg timestamp="20250916 08:44:53.199" level="INFO">${value} = false</msg>
<status status="PASS" starttime="20250916 08:44:52.308" endtime="20250916 08:44:53.199"/>
</kw>
<if>
<branch type="IF" condition="'${value}' != 'true' and '${value}' != 'false'">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250916 08:44:53.200" endtime="20250916 08:44:53.200"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:44:53.199" endtime="20250916 08:44:53.200"/>
</branch>
<status status="PASS" starttime="20250916 08:44:53.199" endtime="20250916 08:44:53.200"/>
</if>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECURITY_ENABLED}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250916 08:44:53.200" level="INFO">${SECURITY_ENABLED} = false</msg>
<status status="PASS" starttime="20250916 08:44:53.200" endtime="20250916 08:44:53.200"/>
</kw>
<status status="PASS" starttime="20250916 08:44:52.307" endtime="20250916 08:44:53.200"/>
</kw>
<test id="s1-t1" name="Check volume creation" line="100">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:44:53.204" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:44:53.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:44:53.208" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250916 08:44:53.201" endtime="20250916 08:44:53.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:44:53.209" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250916 08:44:53.208" endtime="20250916 08:44:53.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:44:53.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:44:53.209" endtime="20250916 08:44:53.209"/>
</kw>
<status status="PASS" starttime="20250916 08:44:53.201" endtime="20250916 08:44:53.209"/>
</kw>
<msg timestamp="20250916 08:44:53.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:44:53.201" endtime="20250916 08:44:53.209"/>
</kw>
<status status="PASS" starttime="20250916 08:44:53.201" endtime="20250916 08:44:53.209"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:44:53.210" endtime="20250916 08:44:53.210"/>
</kw>
<status status="PASS" starttime="20250916 08:44:53.210" endtime="20250916 08:44:53.210"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250916 08:44:53.211" level="INFO">${random} = izlyk</msg>
<status status="PASS" starttime="20250916 08:44:53.210" endtime="20250916 08:44:53.211"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250916 08:44:53.211" level="INFO">${VOLUME} = vol-izlyk</msg>
<status status="PASS" starttime="20250916 08:44:53.211" endtime="20250916 08:44:53.211"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:44:53.214" level="INFO">Running command 'ozone sh volume create /vol-izlyk 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:44:56.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:44:56.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250916 08:44:53.212" endtime="20250916 08:44:56.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:44:56.240" level="INFO"/>
<status status="PASS" starttime="20250916 08:44:56.240" endtime="20250916 08:44:56.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:44:56.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:44:56.240" endtime="20250916 08:44:56.241"/>
</kw>
<status status="PASS" starttime="20250916 08:44:53.212" endtime="20250916 08:44:56.241"/>
</kw>
<msg timestamp="20250916 08:44:56.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:44:53.211" endtime="20250916 08:44:56.241"/>
</kw>
<msg timestamp="20250916 08:44:56.241" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250916 08:44:53.211" endtime="20250916 08:44:56.241"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:44:56.241" endtime="20250916 08:44:56.241"/>
</kw>
<status status="PASS" starttime="20250916 08:44:53.210" endtime="20250916 08:44:56.241"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:44:53.200" endtime="20250916 08:44:56.242"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="105">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250916 08:44:56.243" level="INFO">${random} = apdgp</msg>
<status status="PASS" starttime="20250916 08:44:56.243" endtime="20250916 08:44:56.243"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250916 08:44:56.243" level="INFO">${BUCKET} = buc-apdgp</msg>
<status status="PASS" starttime="20250916 08:44:56.243" endtime="20250916 08:44:56.244"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:44:56.246" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-izlyk/buc-apdgp 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:44:59.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:44:59.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250916 08:44:56.244" endtime="20250916 08:44:59.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:44:59.110" level="INFO"/>
<status status="PASS" starttime="20250916 08:44:59.109" endtime="20250916 08:44:59.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:44:59.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:44:59.110" endtime="20250916 08:44:59.110"/>
</kw>
<status status="PASS" starttime="20250916 08:44:56.244" endtime="20250916 08:44:59.110"/>
</kw>
<msg timestamp="20250916 08:44:59.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:44:56.244" endtime="20250916 08:44:59.110"/>
</kw>
<msg timestamp="20250916 08:44:59.110" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250916 08:44:56.244" endtime="20250916 08:44:59.110"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:44:59.111" endtime="20250916 08:44:59.111"/>
</kw>
<status status="PASS" starttime="20250916 08:44:56.242" endtime="20250916 08:44:59.111"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:44:56.242" endtime="20250916 08:44:59.111"/>
</test>
<test id="s1-t3" name="Check keys creation" line="108">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:44:59.115" level="INFO">Running command 'ozone sh key put /vol-izlyk/buc-apdgp/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:04.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:04.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250916 08:44:59.113" endtime="20250916 08:45:04.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:04.231" level="INFO"/>
<status status="PASS" starttime="20250916 08:45:04.230" endtime="20250916 08:45:04.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:04.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:04.231" endtime="20250916 08:45:04.231"/>
</kw>
<status status="PASS" starttime="20250916 08:44:59.113" endtime="20250916 08:45:04.231"/>
</kw>
<msg timestamp="20250916 08:45:04.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:44:59.112" endtime="20250916 08:45:04.231"/>
</kw>
<msg timestamp="20250916 08:45:04.231" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250916 08:44:59.112" endtime="20250916 08:45:04.231"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:04.232" endtime="20250916 08:45:04.232"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:04.235" level="INFO">Running command 'ozone sh key put /vol-izlyk/buc-apdgp/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250916 08:45:04.233" endtime="20250916 08:45:08.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.655" level="INFO"/>
<status status="PASS" starttime="20250916 08:45:08.655" endtime="20250916 08:45:08.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.656" endtime="20250916 08:45:08.656"/>
</kw>
<status status="PASS" starttime="20250916 08:45:04.232" endtime="20250916 08:45:08.656"/>
</kw>
<msg timestamp="20250916 08:45:08.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:04.232" endtime="20250916 08:45:08.656"/>
</kw>
<msg timestamp="20250916 08:45:08.656" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250916 08:45:04.232" endtime="20250916 08:45:08.656"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.656" endtime="20250916 08:45:08.657"/>
</kw>
<status status="PASS" starttime="20250916 08:44:59.112" endtime="20250916 08:45:08.657"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:44:59.111" endtime="20250916 08:45:08.657"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="111">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.661" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.665" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250916 08:45:08.659" endtime="20250916 08:45:08.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.666" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250916 08:45:08.666" endtime="20250916 08:45:08.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.666" endtime="20250916 08:45:08.667"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.659" endtime="20250916 08:45:08.667"/>
</kw>
<msg timestamp="20250916 08:45:08.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.659" endtime="20250916 08:45:08.667"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.658" endtime="20250916 08:45:08.667"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.670" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.776" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.668" endtime="20250916 08:45:08.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.777" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:08.777" endtime="20250916 08:45:08.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.777" endtime="20250916 08:45:08.778"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.668" endtime="20250916 08:45:08.778"/>
</kw>
<msg timestamp="20250916 08:45:08.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.668" endtime="20250916 08:45:08.778"/>
</kw>
<msg timestamp="20250916 08:45:08.778" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.668" endtime="20250916 08:45:08.778"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:08.779" endtime="20250916 08:45:08.779"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:08.779" endtime="20250916 08:45:08.779"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.779" endtime="20250916 08:45:08.779"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.779" endtime="20250916 08:45:08.779"/>
</branch>
<status status="PASS" starttime="20250916 08:45:08.778" endtime="20250916 08:45:08.779"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.667" endtime="20250916 08:45:08.779"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:45:08.780" endtime="20250916 08:45:08.780"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.779" endtime="20250916 08:45:08.780"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.784" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.795" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.781" endtime="20250916 08:45:08.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.796" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:08.795" endtime="20250916 08:45:08.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.796" endtime="20250916 08:45:08.796"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.781" endtime="20250916 08:45:08.796"/>
</kw>
<msg timestamp="20250916 08:45:08.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.781" endtime="20250916 08:45:08.796"/>
</kw>
<msg timestamp="20250916 08:45:08.796" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.780" endtime="20250916 08:45:08.796"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:08.797" endtime="20250916 08:45:08.797"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:08.797" endtime="20250916 08:45:08.797"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.797" endtime="20250916 08:45:08.797"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.797" endtime="20250916 08:45:08.797"/>
</branch>
<status status="PASS" starttime="20250916 08:45:08.797" endtime="20250916 08:45:08.797"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.780" endtime="20250916 08:45:08.797"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:45:08.798" endtime="20250916 08:45:08.798"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.797" endtime="20250916 08:45:08.798"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.801" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.811" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.799" endtime="20250916 08:45:08.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.811" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:08.811" endtime="20250916 08:45:08.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.812" endtime="20250916 08:45:08.812"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.799" endtime="20250916 08:45:08.812"/>
</kw>
<msg timestamp="20250916 08:45:08.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.799" endtime="20250916 08:45:08.812"/>
</kw>
<msg timestamp="20250916 08:45:08.812" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.798" endtime="20250916 08:45:08.812"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:08.813" endtime="20250916 08:45:08.813"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:08.812" endtime="20250916 08:45:08.813"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.813" endtime="20250916 08:45:08.813"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.813" endtime="20250916 08:45:08.813"/>
</branch>
<status status="PASS" starttime="20250916 08:45:08.812" endtime="20250916 08:45:08.813"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.798" endtime="20250916 08:45:08.813"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:45:08.814" endtime="20250916 08:45:08.814"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.813" endtime="20250916 08:45:08.814"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.817" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.826" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.815" endtime="20250916 08:45:08.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.827" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:08.826" endtime="20250916 08:45:08.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.827" endtime="20250916 08:45:08.827"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.815" endtime="20250916 08:45:08.827"/>
</kw>
<msg timestamp="20250916 08:45:08.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.814" endtime="20250916 08:45:08.828"/>
</kw>
<msg timestamp="20250916 08:45:08.828" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.814" endtime="20250916 08:45:08.828"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:08.828" endtime="20250916 08:45:08.828"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:08.828" endtime="20250916 08:45:08.828"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.828" endtime="20250916 08:45:08.829"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.828" endtime="20250916 08:45:08.829"/>
</branch>
<status status="PASS" starttime="20250916 08:45:08.828" endtime="20250916 08:45:08.829"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.814" endtime="20250916 08:45:08.829"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.658" endtime="20250916 08:45:08.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:45:08.657" endtime="20250916 08:45:08.829"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="114">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.833" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.837" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250916 08:45:08.831" endtime="20250916 08:45:08.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.838" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250916 08:45:08.837" endtime="20250916 08:45:08.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.838" endtime="20250916 08:45:08.839"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.831" endtime="20250916 08:45:08.839"/>
</kw>
<msg timestamp="20250916 08:45:08.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.830" endtime="20250916 08:45:08.839"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.830" endtime="20250916 08:45:08.839"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.842" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/usage?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.856" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.840" endtime="20250916 08:45:08.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.857" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:08.857" endtime="20250916 08:45:08.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.857" endtime="20250916 08:45:08.858"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.840" endtime="20250916 08:45:08.858"/>
</kw>
<msg timestamp="20250916 08:45:08.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.840" endtime="20250916 08:45:08.858"/>
</kw>
<msg timestamp="20250916 08:45:08.858" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.839" endtime="20250916 08:45:08.858"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:08.858" endtime="20250916 08:45:08.858"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:08.858" endtime="20250916 08:45:08.859"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.859" endtime="20250916 08:45:08.859"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.859" endtime="20250916 08:45:08.859"/>
</branch>
<status status="PASS" starttime="20250916 08:45:08.858" endtime="20250916 08:45:08.859"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.839" endtime="20250916 08:45:08.859"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:45:08.859" endtime="20250916 08:45:08.860"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.859" endtime="20250916 08:45:08.860"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.863" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/usage?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.871" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.861" endtime="20250916 08:45:08.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.872" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:08.871" endtime="20250916 08:45:08.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.872" endtime="20250916 08:45:08.872"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.860" endtime="20250916 08:45:08.873"/>
</kw>
<msg timestamp="20250916 08:45:08.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.860" endtime="20250916 08:45:08.873"/>
</kw>
<msg timestamp="20250916 08:45:08.873" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.860" endtime="20250916 08:45:08.873"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:08.873" endtime="20250916 08:45:08.873"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:08.873" endtime="20250916 08:45:08.873"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.873" endtime="20250916 08:45:08.874"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.873" endtime="20250916 08:45:08.874"/>
</branch>
<status status="PASS" starttime="20250916 08:45:08.873" endtime="20250916 08:45:08.874"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.860" endtime="20250916 08:45:08.874"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:45:08.874" endtime="20250916 08:45:08.874"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.874" endtime="20250916 08:45:08.874"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.877" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/usage?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.885" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.875" endtime="20250916 08:45:08.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.886" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:08.886" endtime="20250916 08:45:08.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.886" endtime="20250916 08:45:08.886"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.875" endtime="20250916 08:45:08.886"/>
</kw>
<msg timestamp="20250916 08:45:08.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.875" endtime="20250916 08:45:08.887"/>
</kw>
<msg timestamp="20250916 08:45:08.887" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.875" endtime="20250916 08:45:08.887"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:08.887" endtime="20250916 08:45:08.887"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:08.887" endtime="20250916 08:45:08.887"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.887" endtime="20250916 08:45:08.887"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.887" endtime="20250916 08:45:08.887"/>
</branch>
<status status="PASS" starttime="20250916 08:45:08.887" endtime="20250916 08:45:08.887"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.874" endtime="20250916 08:45:08.888"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:45:08.888" endtime="20250916 08:45:08.888"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.888" endtime="20250916 08:45:08.888"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.891" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/usage?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.899" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.889" endtime="20250916 08:45:08.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.900" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:08.900" endtime="20250916 08:45:08.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.900" endtime="20250916 08:45:08.900"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.889" endtime="20250916 08:45:08.901"/>
</kw>
<msg timestamp="20250916 08:45:08.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.889" endtime="20250916 08:45:08.901"/>
</kw>
<msg timestamp="20250916 08:45:08.901" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.888" endtime="20250916 08:45:08.901"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:08.901" endtime="20250916 08:45:08.901"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:08.901" endtime="20250916 08:45:08.901"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.901" endtime="20250916 08:45:08.902"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.901" endtime="20250916 08:45:08.902"/>
</branch>
<status status="PASS" starttime="20250916 08:45:08.901" endtime="20250916 08:45:08.902"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.888" endtime="20250916 08:45:08.902"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.830" endtime="20250916 08:45:08.902"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:45:08.829" endtime="20250916 08:45:08.902"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="117">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.905" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.909" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250916 08:45:08.904" endtime="20250916 08:45:08.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.910" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250916 08:45:08.910" endtime="20250916 08:45:08.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.910" endtime="20250916 08:45:08.910"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.903" endtime="20250916 08:45:08.910"/>
</kw>
<msg timestamp="20250916 08:45:08.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.903" endtime="20250916 08:45:08.911"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.903" endtime="20250916 08:45:08.911"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.914" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.924" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.912" endtime="20250916 08:45:08.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.925" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:08.924" endtime="20250916 08:45:08.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.925" endtime="20250916 08:45:08.925"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.912" endtime="20250916 08:45:08.925"/>
</kw>
<msg timestamp="20250916 08:45:08.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.911" endtime="20250916 08:45:08.925"/>
</kw>
<msg timestamp="20250916 08:45:08.926" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.911" endtime="20250916 08:45:08.926"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:08.926" endtime="20250916 08:45:08.926"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:08.926" endtime="20250916 08:45:08.926"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.926" endtime="20250916 08:45:08.926"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.926" endtime="20250916 08:45:08.926"/>
</branch>
<status status="PASS" starttime="20250916 08:45:08.926" endtime="20250916 08:45:08.926"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.911" endtime="20250916 08:45:08.926"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:45:08.927" endtime="20250916 08:45:08.927"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.927" endtime="20250916 08:45:08.927"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.930" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.938" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.928" endtime="20250916 08:45:08.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.938" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:08.938" endtime="20250916 08:45:08.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.939" endtime="20250916 08:45:08.939"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.928" endtime="20250916 08:45:08.939"/>
</kw>
<msg timestamp="20250916 08:45:08.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.928" endtime="20250916 08:45:08.939"/>
</kw>
<msg timestamp="20250916 08:45:08.939" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.927" endtime="20250916 08:45:08.939"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:08.940" endtime="20250916 08:45:08.940"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:08.939" endtime="20250916 08:45:08.940"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.940" endtime="20250916 08:45:08.940"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.940" endtime="20250916 08:45:08.940"/>
</branch>
<status status="PASS" starttime="20250916 08:45:08.939" endtime="20250916 08:45:08.940"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.927" endtime="20250916 08:45:08.940"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:45:08.940" endtime="20250916 08:45:08.941"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.940" endtime="20250916 08:45:08.941"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.943" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.951" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.942" endtime="20250916 08:45:08.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.952" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:08.952" endtime="20250916 08:45:08.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.952" endtime="20250916 08:45:08.953"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.941" endtime="20250916 08:45:08.953"/>
</kw>
<msg timestamp="20250916 08:45:08.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.941" endtime="20250916 08:45:08.953"/>
</kw>
<msg timestamp="20250916 08:45:08.953" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.941" endtime="20250916 08:45:08.953"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:08.953" endtime="20250916 08:45:08.953"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:08.953" endtime="20250916 08:45:08.953"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.953" endtime="20250916 08:45:08.954"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.953" endtime="20250916 08:45:08.954"/>
</branch>
<status status="PASS" starttime="20250916 08:45:08.953" endtime="20250916 08:45:08.954"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.941" endtime="20250916 08:45:08.954"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:45:08.954" endtime="20250916 08:45:08.954"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.954" endtime="20250916 08:45:08.955"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.958" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.965" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.956" endtime="20250916 08:45:08.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.966" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:08.965" endtime="20250916 08:45:08.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.966" endtime="20250916 08:45:08.966"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.955" endtime="20250916 08:45:08.966"/>
</kw>
<msg timestamp="20250916 08:45:08.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.955" endtime="20250916 08:45:08.967"/>
</kw>
<msg timestamp="20250916 08:45:08.967" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.955" endtime="20250916 08:45:08.967"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:08.967" endtime="20250916 08:45:08.967"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:08.967" endtime="20250916 08:45:08.967"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.967" endtime="20250916 08:45:08.967"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.967" endtime="20250916 08:45:08.967"/>
</branch>
<status status="PASS" starttime="20250916 08:45:08.967" endtime="20250916 08:45:08.967"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.955" endtime="20250916 08:45:08.968"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.903" endtime="20250916 08:45:08.968"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:45:08.902" endtime="20250916 08:45:08.968"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="120">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.971" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.975" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250916 08:45:08.970" endtime="20250916 08:45:08.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.976" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250916 08:45:08.975" endtime="20250916 08:45:08.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.976" endtime="20250916 08:45:08.976"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.969" endtime="20250916 08:45:08.976"/>
</kw>
<msg timestamp="20250916 08:45:08.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.969" endtime="20250916 08:45:08.976"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.969" endtime="20250916 08:45:08.976"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.979" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:08.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:08.992" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.977" endtime="20250916 08:45:08.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:08.992" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:08.992" endtime="20250916 08:45:08.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:08.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:08.993" endtime="20250916 08:45:08.993"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.977" endtime="20250916 08:45:08.993"/>
</kw>
<msg timestamp="20250916 08:45:08.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.977" endtime="20250916 08:45:08.993"/>
</kw>
<msg timestamp="20250916 08:45:08.993" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.977" endtime="20250916 08:45:08.993"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:08.994" endtime="20250916 08:45:08.994"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:08.993" endtime="20250916 08:45:08.994"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:08.994" endtime="20250916 08:45:08.994"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.994" endtime="20250916 08:45:08.994"/>
</branch>
<status status="PASS" starttime="20250916 08:45:08.993" endtime="20250916 08:45:08.994"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.977" endtime="20250916 08:45:08.994"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:45:08.994" endtime="20250916 08:45:08.995"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.994" endtime="20250916 08:45:08.995"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:08.998" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:09.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:09.006" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.996" endtime="20250916 08:45:09.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:09.006" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:09.006" endtime="20250916 08:45:09.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:09.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:09.007" endtime="20250916 08:45:09.007"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.995" endtime="20250916 08:45:09.007"/>
</kw>
<msg timestamp="20250916 08:45:09.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:08.995" endtime="20250916 08:45:09.007"/>
</kw>
<msg timestamp="20250916 08:45:09.007" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:08.995" endtime="20250916 08:45:09.007"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:09.007" endtime="20250916 08:45:09.008"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:09.007" endtime="20250916 08:45:09.008"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:09.008" endtime="20250916 08:45:09.008"/>
</kw>
<status status="PASS" starttime="20250916 08:45:09.008" endtime="20250916 08:45:09.008"/>
</branch>
<status status="PASS" starttime="20250916 08:45:09.007" endtime="20250916 08:45:09.008"/>
</if>
<status status="PASS" starttime="20250916 08:45:08.995" endtime="20250916 08:45:09.008"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:45:09.008" endtime="20250916 08:45:09.008"/>
</kw>
<status status="PASS" starttime="20250916 08:45:09.008" endtime="20250916 08:45:09.009"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:09.011" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:09.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:09.019" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:09.010" endtime="20250916 08:45:09.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:09.020" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:09.019" endtime="20250916 08:45:09.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:09.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:09.020" endtime="20250916 08:45:09.020"/>
</kw>
<status status="PASS" starttime="20250916 08:45:09.009" endtime="20250916 08:45:09.020"/>
</kw>
<msg timestamp="20250916 08:45:09.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:09.009" endtime="20250916 08:45:09.021"/>
</kw>
<msg timestamp="20250916 08:45:09.021" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:09.009" endtime="20250916 08:45:09.021"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:09.021" endtime="20250916 08:45:09.021"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:09.021" endtime="20250916 08:45:09.021"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:09.021" endtime="20250916 08:45:09.021"/>
</kw>
<status status="PASS" starttime="20250916 08:45:09.021" endtime="20250916 08:45:09.021"/>
</branch>
<status status="PASS" starttime="20250916 08:45:09.021" endtime="20250916 08:45:09.021"/>
</if>
<status status="PASS" starttime="20250916 08:45:09.009" endtime="20250916 08:45:09.021"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:45:09.022" endtime="20250916 08:45:09.022"/>
</kw>
<status status="PASS" starttime="20250916 08:45:09.022" endtime="20250916 08:45:09.022"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:09.025" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:09.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:09.033" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250916 08:45:09.023" endtime="20250916 08:45:09.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:09.033" level="INFO">200</msg>
<status status="PASS" starttime="20250916 08:45:09.033" endtime="20250916 08:45:09.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:09.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:09.033" endtime="20250916 08:45:09.034"/>
</kw>
<status status="PASS" starttime="20250916 08:45:09.023" endtime="20250916 08:45:09.034"/>
</kw>
<msg timestamp="20250916 08:45:09.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:09.023" endtime="20250916 08:45:09.034"/>
</kw>
<msg timestamp="20250916 08:45:09.034" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250916 08:45:09.022" endtime="20250916 08:45:09.034"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:09.034" endtime="20250916 08:45:09.034"/>
</kw>
<status status="NOT RUN" starttime="20250916 08:45:09.034" endtime="20250916 08:45:09.034"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:09.034" endtime="20250916 08:45:09.035"/>
</kw>
<status status="PASS" starttime="20250916 08:45:09.034" endtime="20250916 08:45:09.035"/>
</branch>
<status status="PASS" starttime="20250916 08:45:09.034" endtime="20250916 08:45:09.035"/>
</if>
<status status="PASS" starttime="20250916 08:45:09.022" endtime="20250916 08:45:09.035"/>
</kw>
<status status="PASS" starttime="20250916 08:45:08.969" endtime="20250916 08:45:09.035"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:45:08.968" endtime="20250916 08:45:09.035"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="123">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:09.040" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:09.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:09.048" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250916 08:45:09.038" endtime="20250916 08:45:09.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:09.048" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250916 08:45:09.048" endtime="20250916 08:45:09.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:09.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:09.048" endtime="20250916 08:45:09.049"/>
</kw>
<status status="PASS" starttime="20250916 08:45:09.038" endtime="20250916 08:45:09.049"/>
</kw>
<msg timestamp="20250916 08:45:09.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:09.038" endtime="20250916 08:45:09.049"/>
</kw>
<msg timestamp="20250916 08:45:09.049" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250916 08:45:09.037" endtime="20250916 08:45:09.049"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250916 08:45:09.050" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250916 08:45:09.049" endtime="20250916 08:45:09.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:09.050" endtime="20250916 08:45:09.050"/>
</kw>
<status status="FAIL" starttime="20250916 08:45:09.037" endtime="20250916 08:45:09.050"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:19.054" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:19.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:19.064" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250916 08:45:19.052" endtime="20250916 08:45:19.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:19.065" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250916 08:45:19.065" endtime="20250916 08:45:19.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:19.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:19.065" endtime="20250916 08:45:19.065"/>
</kw>
<status status="PASS" starttime="20250916 08:45:19.051" endtime="20250916 08:45:19.066"/>
</kw>
<msg timestamp="20250916 08:45:19.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:19.051" endtime="20250916 08:45:19.066"/>
</kw>
<msg timestamp="20250916 08:45:19.066" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250916 08:45:19.051" endtime="20250916 08:45:19.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250916 08:45:19.066" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250916 08:45:19.066" endtime="20250916 08:45:19.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:19.066" endtime="20250916 08:45:19.067"/>
</kw>
<status status="FAIL" starttime="20250916 08:45:19.050" endtime="20250916 08:45:19.067"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:29.071" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:29.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:29.080" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250916 08:45:29.069" endtime="20250916 08:45:29.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:29.081" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250916 08:45:29.080" endtime="20250916 08:45:29.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:29.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:29.081" endtime="20250916 08:45:29.081"/>
</kw>
<status status="PASS" starttime="20250916 08:45:29.068" endtime="20250916 08:45:29.082"/>
</kw>
<msg timestamp="20250916 08:45:29.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:29.068" endtime="20250916 08:45:29.082"/>
</kw>
<msg timestamp="20250916 08:45:29.082" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250916 08:45:29.068" endtime="20250916 08:45:29.082"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250916 08:45:29.082" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250916 08:45:29.082" endtime="20250916 08:45:29.082"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250916 08:45:29.082" endtime="20250916 08:45:29.082"/>
</kw>
<status status="FAIL" starttime="20250916 08:45:29.067" endtime="20250916 08:45:29.083"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:39.087" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:39.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:39.104" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20250916 08:45:39.084" endtime="20250916 08:45:39.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:39.105" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.105" endtime="20250916 08:45:39.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:39.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:39.106" endtime="20250916 08:45:39.106"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.084" endtime="20250916 08:45:39.106"/>
</kw>
<msg timestamp="20250916 08:45:39.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:39.084" endtime="20250916 08:45:39.106"/>
</kw>
<msg timestamp="20250916 08:45:39.106" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20250916 08:45:39.083" endtime="20250916 08:45:39.106"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.106" endtime="20250916 08:45:39.107"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.107" endtime="20250916 08:45:39.107"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.083" endtime="20250916 08:45:39.107"/>
</kw>
<status status="PASS" starttime="20250916 08:45:09.036" endtime="20250916 08:45:39.107"/>
</kw>
<status status="PASS" starttime="20250916 08:45:09.036" endtime="20250916 08:45:39.107"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:45:09.035" endtime="20250916 08:45:39.107"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="126">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:39.112" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-izlyk 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:39.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:39.134" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-izlyk","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250916 08:45:39.110" endtime="20250916 08:45:39.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:39.135" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-izlyk","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1758012296052,"modificationTime":1758012296052,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-izlyk"},"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.135" endtime="20250916 08:45:39.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:39.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:39.135" endtime="20250916 08:45:39.136"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.110" endtime="20250916 08:45:39.136"/>
</kw>
<msg timestamp="20250916 08:45:39.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:39.109" endtime="20250916 08:45:39.137"/>
</kw>
<msg timestamp="20250916 08:45:39.137" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-izlyk","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250916 08:45:39.109" endtime="20250916 08:45:39.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.137" endtime="20250916 08:45:39.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.137" endtime="20250916 08:45:39.138"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.109" endtime="20250916 08:45:39.138"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.109" endtime="20250916 08:45:39.138"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.108" endtime="20250916 08:45:39.138"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:45:39.108" endtime="20250916 08:45:39.138"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="129">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:39.144" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-izlyk/buc-apdgp 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:39.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:39.167" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-apdgp","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250916 08:45:39.141" endtime="20250916 08:45:39.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:39.167" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-apdgp","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1758012298988,"modificationTime":1758012298988,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-izlyk","storageType":"DISK","versioning":false,"usedBytes":32967,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"LEGACY","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.167" endtime="20250916 08:45:39.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:39.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:39.168" endtime="20250916 08:45:39.168"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.141" endtime="20250916 08:45:39.168"/>
</kw>
<msg timestamp="20250916 08:45:39.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:39.141" endtime="20250916 08:45:39.168"/>
</kw>
<msg timestamp="20250916 08:45:39.168" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-apdgp","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250916 08:45:39.140" endtime="20250916 08:45:39.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.168" endtime="20250916 08:45:39.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.169" endtime="20250916 08:45:39.169"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.140" endtime="20250916 08:45:39.169"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.140" endtime="20250916 08:45:39.169"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.139" endtime="20250916 08:45:39.169"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:45:39.139" endtime="20250916 08:45:39.169"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="132">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:39.174" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-izlyk/buc-apdgp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:39.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:39.216" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250916 08:45:39.172" endtime="20250916 08:45:39.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:39.217" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1758012302062,"modificationTime":1758012303739,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-izlyk","bucketName":"buc-apdgp","keyName":"file1","dataSize":4951,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4951,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4951,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4951,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4951,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.216" endtime="20250916 08:45:39.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:39.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:39.217" endtime="20250916 08:45:39.218"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.172" endtime="20250916 08:45:39.218"/>
</kw>
<msg timestamp="20250916 08:45:39.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:39.172" endtime="20250916 08:45:39.218"/>
</kw>
<msg timestamp="20250916 08:45:39.218" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250916 08:45:39.171" endtime="20250916 08:45:39.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.218" endtime="20250916 08:45:39.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.218" endtime="20250916 08:45:39.219"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.171" endtime="20250916 08:45:39.219"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.171" endtime="20250916 08:45:39.219"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.170" endtime="20250916 08:45:39.219"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:45:39.170" endtime="20250916 08:45:39.219"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="135">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:39.224" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-izlyk/buc-apdgp/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:39.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:39.236" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250916 08:45:39.222" endtime="20250916 08:45:39.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:39.237" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":[]},"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.236" endtime="20250916 08:45:39.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:39.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:39.237" endtime="20250916 08:45:39.238"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.222" endtime="20250916 08:45:39.238"/>
</kw>
<msg timestamp="20250916 08:45:39.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:39.222" endtime="20250916 08:45:39.238"/>
</kw>
<msg timestamp="20250916 08:45:39.238" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250916 08:45:39.221" endtime="20250916 08:45:39.238"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.238" endtime="20250916 08:45:39.239"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.239" endtime="20250916 08:45:39.239"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.221" endtime="20250916 08:45:39.239"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.221" endtime="20250916 08:45:39.239"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.220" endtime="20250916 08:45:39.239"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.220" endtime="20250916 08:45:39.240"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250916 08:45:39.240" endtime="20250916 08:45:39.240"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:45:39.219" endtime="20250916 08:45:39.240"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="139">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:39.246" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/usage?path=/vol-izlyk/buc-apdgp&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:39.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:39.258" level="INFO">${output} = {"status":"OK","path":"/vol-izlyk/buc-apdgp","size":17027,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-izlyk/buc-apdgp/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250916 08:45:39.244" endtime="20250916 08:45:39.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:39.259" level="INFO">{"status":"OK","path":"/vol-izlyk/buc-apdgp","size":17027,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-izlyk/buc-apdgp/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":10989}</msg>
<status status="PASS" starttime="20250916 08:45:39.258" endtime="20250916 08:45:39.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:39.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:39.259" endtime="20250916 08:45:39.259"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.243" endtime="20250916 08:45:39.260"/>
</kw>
<msg timestamp="20250916 08:45:39.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:39.243" endtime="20250916 08:45:39.260"/>
</kw>
<msg timestamp="20250916 08:45:39.260" level="INFO">${result} = {"status":"OK","path":"/vol-izlyk/buc-apdgp","size":17027,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-izlyk/buc-apdgp/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250916 08:45:39.243" endtime="20250916 08:45:39.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.260" endtime="20250916 08:45:39.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.260" endtime="20250916 08:45:39.260"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.242" endtime="20250916 08:45:39.261"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.242" endtime="20250916 08:45:39.261"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.241" endtime="20250916 08:45:39.261"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:45:39.241" endtime="20250916 08:45:39.261"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="142">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:39.265" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-izlyk 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:39.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:39.275" level="INFO">${output} = {"allowed":-1,"used":10989,"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.263" endtime="20250916 08:45:39.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:39.276" level="INFO">{"allowed":-1,"used":10989,"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.275" endtime="20250916 08:45:39.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:39.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:39.276" endtime="20250916 08:45:39.276"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.263" endtime="20250916 08:45:39.276"/>
</kw>
<msg timestamp="20250916 08:45:39.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:39.263" endtime="20250916 08:45:39.277"/>
</kw>
<msg timestamp="20250916 08:45:39.277" level="INFO">${result} = {"allowed":-1,"used":10989,"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.262" endtime="20250916 08:45:39.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.277" endtime="20250916 08:45:39.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.277" endtime="20250916 08:45:39.277"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.262" endtime="20250916 08:45:39.277"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.262" endtime="20250916 08:45:39.277"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.262" endtime="20250916 08:45:39.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:45:39.261" endtime="20250916 08:45:39.278"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="145">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:39.282" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-izlyk/buc-apdgp 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:39.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:39.291" level="INFO">${output} = {"allowed":-1,"used":10989,"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.280" endtime="20250916 08:45:39.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:39.292" level="INFO">{"allowed":-1,"used":10989,"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.291" endtime="20250916 08:45:39.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:39.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:39.292" endtime="20250916 08:45:39.293"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.280" endtime="20250916 08:45:39.293"/>
</kw>
<msg timestamp="20250916 08:45:39.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:39.280" endtime="20250916 08:45:39.293"/>
</kw>
<msg timestamp="20250916 08:45:39.293" level="INFO">${result} = {"allowed":-1,"used":10989,"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.279" endtime="20250916 08:45:39.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.293" endtime="20250916 08:45:39.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.293" endtime="20250916 08:45:39.294"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.279" endtime="20250916 08:45:39.294"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.279" endtime="20250916 08:45:39.294"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.278" endtime="20250916 08:45:39.294"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:45:39.278" endtime="20250916 08:45:39.294"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="148">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250916 08:45:39.298" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250916 08:45:39.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20250916 08:45:39.307" level="INFO">${output} = {"dist":[0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.296" endtime="20250916 08:45:39.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250916 08:45:39.307" level="INFO">{"dist":[0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.307" endtime="20250916 08:45:39.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250916 08:45:39.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250916 08:45:39.308" endtime="20250916 08:45:39.308"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.296" endtime="20250916 08:45:39.308"/>
</kw>
<msg timestamp="20250916 08:45:39.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250916 08:45:39.296" endtime="20250916 08:45:39.308"/>
</kw>
<msg timestamp="20250916 08:45:39.308" level="INFO">${result} = {"dist":[0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250916 08:45:39.296" endtime="20250916 08:45:39.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.308" endtime="20250916 08:45:39.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250916 08:45:39.309" endtime="20250916 08:45:39.309"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.295" endtime="20250916 08:45:39.309"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.295" endtime="20250916 08:45:39.309"/>
</kw>
<status status="PASS" starttime="20250916 08:45:39.295" endtime="20250916 08:45:39.309"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250916 08:45:39.294" endtime="20250916 08:45:39.309"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" starttime="20250916 08:44:52.271" endtime="20250916 08:45:39.310"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
