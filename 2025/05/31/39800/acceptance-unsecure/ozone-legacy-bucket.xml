<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250531 04:14:24.517" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:29.924" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:29.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:29.928" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:13:29.922" endtime="20250531 04:13:29.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:29.929" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:13:29.928" endtime="20250531 04:13:29.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:29.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:29.929" endtime="20250531 04:13:29.929"/>
</kw>
<status status="PASS" starttime="20250531 04:13:29.921" endtime="20250531 04:13:29.929"/>
</kw>
<msg timestamp="20250531 04:13:29.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:29.921" endtime="20250531 04:13:29.929"/>
</kw>
<status status="PASS" starttime="20250531 04:13:29.921" endtime="20250531 04:13:29.930"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:13:29.930" endtime="20250531 04:13:29.930"/>
</kw>
<status status="PASS" starttime="20250531 04:13:29.930" endtime="20250531 04:13:29.930"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:13:29.931" level="INFO">${random} = kqakx</msg>
<status status="PASS" starttime="20250531 04:13:29.931" endtime="20250531 04:13:29.931"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250531 04:13:29.931" level="INFO">${VOLUME} = vol-kqakx</msg>
<status status="PASS" starttime="20250531 04:13:29.931" endtime="20250531 04:13:29.931"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:29.934" level="INFO">Running command 'ozone sh volume create /vol-kqakx 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:34.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:34.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:13:29.932" endtime="20250531 04:13:34.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:34.965" level="INFO"/>
<status status="PASS" starttime="20250531 04:13:34.965" endtime="20250531 04:13:34.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:34.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:34.965" endtime="20250531 04:13:34.966"/>
</kw>
<status status="PASS" starttime="20250531 04:13:29.932" endtime="20250531 04:13:34.966"/>
</kw>
<msg timestamp="20250531 04:13:34.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:29.932" endtime="20250531 04:13:34.966"/>
</kw>
<msg timestamp="20250531 04:13:34.966" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:13:29.931" endtime="20250531 04:13:34.966"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:34.966" endtime="20250531 04:13:34.966"/>
</kw>
<status status="PASS" starttime="20250531 04:13:29.930" endtime="20250531 04:13:34.966"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:13:29.920" endtime="20250531 04:13:34.966"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:13:34.968" level="INFO">${random} = henbq</msg>
<status status="PASS" starttime="20250531 04:13:34.968" endtime="20250531 04:13:34.968"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250531 04:13:34.968" level="INFO">${BUCKET} = buc-henbq</msg>
<status status="PASS" starttime="20250531 04:13:34.968" endtime="20250531 04:13:34.968"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:34.971" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-kqakx/buc-henbq 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:37.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:37.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:13:34.969" endtime="20250531 04:13:37.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:37.835" level="INFO"/>
<status status="PASS" starttime="20250531 04:13:37.834" endtime="20250531 04:13:37.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:37.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:37.835" endtime="20250531 04:13:37.835"/>
</kw>
<status status="PASS" starttime="20250531 04:13:34.969" endtime="20250531 04:13:37.836"/>
</kw>
<msg timestamp="20250531 04:13:37.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:34.969" endtime="20250531 04:13:37.836"/>
</kw>
<msg timestamp="20250531 04:13:37.836" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:13:34.968" endtime="20250531 04:13:37.836"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:37.836" endtime="20250531 04:13:37.836"/>
</kw>
<status status="PASS" starttime="20250531 04:13:34.967" endtime="20250531 04:13:37.836"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:13:34.967" endtime="20250531 04:13:37.836"/>
</test>
<test id="s1-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:37.841" level="INFO">Running command 'ozone sh key put /vol-kqakx/buc-henbq/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:42.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:42.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:13:37.839" endtime="20250531 04:13:42.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:42.695" level="INFO"/>
<status status="PASS" starttime="20250531 04:13:42.695" endtime="20250531 04:13:42.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:42.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:42.695" endtime="20250531 04:13:42.696"/>
</kw>
<status status="PASS" starttime="20250531 04:13:37.838" endtime="20250531 04:13:42.696"/>
</kw>
<msg timestamp="20250531 04:13:42.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:37.838" endtime="20250531 04:13:42.696"/>
</kw>
<msg timestamp="20250531 04:13:42.696" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:13:37.838" endtime="20250531 04:13:42.696"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:42.696" endtime="20250531 04:13:42.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:42.699" level="INFO">Running command 'ozone sh key put /vol-kqakx/buc-henbq/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:13:42.697" endtime="20250531 04:13:47.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.014" level="INFO"/>
<status status="PASS" starttime="20250531 04:13:47.013" endtime="20250531 04:13:47.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.014" endtime="20250531 04:13:47.014"/>
</kw>
<status status="PASS" starttime="20250531 04:13:42.697" endtime="20250531 04:13:47.014"/>
</kw>
<msg timestamp="20250531 04:13:47.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:42.697" endtime="20250531 04:13:47.014"/>
</kw>
<msg timestamp="20250531 04:13:47.014" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:13:42.697" endtime="20250531 04:13:47.014"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.015" endtime="20250531 04:13:47.015"/>
</kw>
<status status="PASS" starttime="20250531 04:13:37.837" endtime="20250531 04:13:47.015"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:13:37.837" endtime="20250531 04:13:47.015"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.019" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.023" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:13:47.017" endtime="20250531 04:13:47.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.024" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:13:47.023" endtime="20250531 04:13:47.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.024" endtime="20250531 04:13:47.024"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.017" endtime="20250531 04:13:47.024"/>
</kw>
<msg timestamp="20250531 04:13:47.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.017" endtime="20250531 04:13:47.025"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.016" endtime="20250531 04:13:47.025"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.028" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.143" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.026" endtime="20250531 04:13:47.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.144" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.144" endtime="20250531 04:13:47.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.145" endtime="20250531 04:13:47.145"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.026" endtime="20250531 04:13:47.145"/>
</kw>
<msg timestamp="20250531 04:13:47.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.025" endtime="20250531 04:13:47.145"/>
</kw>
<msg timestamp="20250531 04:13:47.146" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.025" endtime="20250531 04:13:47.146"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.146" endtime="20250531 04:13:47.146"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.146" endtime="20250531 04:13:47.146"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.146" endtime="20250531 04:13:47.147"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.146" endtime="20250531 04:13:47.147"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.146" endtime="20250531 04:13:47.147"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.025" endtime="20250531 04:13:47.147"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:13:47.147" endtime="20250531 04:13:47.148"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.147" endtime="20250531 04:13:47.148"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.154" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.166" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.149" endtime="20250531 04:13:47.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.167" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.166" endtime="20250531 04:13:47.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.167" endtime="20250531 04:13:47.167"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.149" endtime="20250531 04:13:47.167"/>
</kw>
<msg timestamp="20250531 04:13:47.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.149" endtime="20250531 04:13:47.168"/>
</kw>
<msg timestamp="20250531 04:13:47.168" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.148" endtime="20250531 04:13:47.168"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.168" endtime="20250531 04:13:47.168"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.168" endtime="20250531 04:13:47.168"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.168" endtime="20250531 04:13:47.169"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.168" endtime="20250531 04:13:47.169"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.168" endtime="20250531 04:13:47.169"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.148" endtime="20250531 04:13:47.169"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:13:47.169" endtime="20250531 04:13:47.170"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.169" endtime="20250531 04:13:47.170"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.173" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.183" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.171" endtime="20250531 04:13:47.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.183" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.183" endtime="20250531 04:13:47.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.184" endtime="20250531 04:13:47.184"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.171" endtime="20250531 04:13:47.184"/>
</kw>
<msg timestamp="20250531 04:13:47.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.170" endtime="20250531 04:13:47.184"/>
</kw>
<msg timestamp="20250531 04:13:47.185" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.170" endtime="20250531 04:13:47.185"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.185" endtime="20250531 04:13:47.185"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.185" endtime="20250531 04:13:47.185"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.185" endtime="20250531 04:13:47.186"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.185" endtime="20250531 04:13:47.186"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.185" endtime="20250531 04:13:47.186"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.170" endtime="20250531 04:13:47.186"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:13:47.186" endtime="20250531 04:13:47.187"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.186" endtime="20250531 04:13:47.187"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.190" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.199" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.188" endtime="20250531 04:13:47.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.200" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.199" endtime="20250531 04:13:47.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.200" endtime="20250531 04:13:47.200"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.188" endtime="20250531 04:13:47.200"/>
</kw>
<msg timestamp="20250531 04:13:47.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.188" endtime="20250531 04:13:47.200"/>
</kw>
<msg timestamp="20250531 04:13:47.200" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.187" endtime="20250531 04:13:47.200"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.201" endtime="20250531 04:13:47.201"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.201" endtime="20250531 04:13:47.201"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.201" endtime="20250531 04:13:47.201"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.201" endtime="20250531 04:13:47.201"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.200" endtime="20250531 04:13:47.201"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.187" endtime="20250531 04:13:47.201"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.016" endtime="20250531 04:13:47.201"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:13:47.015" endtime="20250531 04:13:47.201"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.205" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.209" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:13:47.203" endtime="20250531 04:13:47.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.210" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:13:47.210" endtime="20250531 04:13:47.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.210" endtime="20250531 04:13:47.211"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.203" endtime="20250531 04:13:47.211"/>
</kw>
<msg timestamp="20250531 04:13:47.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.203" endtime="20250531 04:13:47.211"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.203" endtime="20250531 04:13:47.211"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.214" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.228" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.212" endtime="20250531 04:13:47.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.229" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.228" endtime="20250531 04:13:47.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.229" endtime="20250531 04:13:47.229"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.212" endtime="20250531 04:13:47.229"/>
</kw>
<msg timestamp="20250531 04:13:47.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.212" endtime="20250531 04:13:47.230"/>
</kw>
<msg timestamp="20250531 04:13:47.230" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.211" endtime="20250531 04:13:47.230"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.230" endtime="20250531 04:13:47.230"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.230" endtime="20250531 04:13:47.230"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.230" endtime="20250531 04:13:47.230"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.230" endtime="20250531 04:13:47.230"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.230" endtime="20250531 04:13:47.231"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.211" endtime="20250531 04:13:47.231"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:13:47.231" endtime="20250531 04:13:47.231"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.231" endtime="20250531 04:13:47.231"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.234" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.243" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.233" endtime="20250531 04:13:47.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.244" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.244" endtime="20250531 04:13:47.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.244" endtime="20250531 04:13:47.245"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.232" endtime="20250531 04:13:47.245"/>
</kw>
<msg timestamp="20250531 04:13:47.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.232" endtime="20250531 04:13:47.245"/>
</kw>
<msg timestamp="20250531 04:13:47.245" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.232" endtime="20250531 04:13:47.245"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.245" endtime="20250531 04:13:47.245"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.245" endtime="20250531 04:13:47.245"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.245" endtime="20250531 04:13:47.246"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.245" endtime="20250531 04:13:47.246"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.245" endtime="20250531 04:13:47.246"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.231" endtime="20250531 04:13:47.246"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:13:47.246" endtime="20250531 04:13:47.246"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.246" endtime="20250531 04:13:47.246"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.249" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.257" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.247" endtime="20250531 04:13:47.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.258" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.257" endtime="20250531 04:13:47.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.258" endtime="20250531 04:13:47.258"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.247" endtime="20250531 04:13:47.258"/>
</kw>
<msg timestamp="20250531 04:13:47.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.247" endtime="20250531 04:13:47.258"/>
</kw>
<msg timestamp="20250531 04:13:47.258" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.247" endtime="20250531 04:13:47.258"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.259" endtime="20250531 04:13:47.259"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.258" endtime="20250531 04:13:47.259"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.259" endtime="20250531 04:13:47.259"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.259" endtime="20250531 04:13:47.259"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.258" endtime="20250531 04:13:47.259"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.246" endtime="20250531 04:13:47.259"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:13:47.260" endtime="20250531 04:13:47.260"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.259" endtime="20250531 04:13:47.260"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.263" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.271" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.261" endtime="20250531 04:13:47.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.271" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.271" endtime="20250531 04:13:47.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.271" endtime="20250531 04:13:47.272"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.261" endtime="20250531 04:13:47.272"/>
</kw>
<msg timestamp="20250531 04:13:47.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.260" endtime="20250531 04:13:47.272"/>
</kw>
<msg timestamp="20250531 04:13:47.272" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.260" endtime="20250531 04:13:47.272"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.273" endtime="20250531 04:13:47.273"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.273" endtime="20250531 04:13:47.273"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.273" endtime="20250531 04:13:47.273"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.273" endtime="20250531 04:13:47.273"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.273" endtime="20250531 04:13:47.273"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.260" endtime="20250531 04:13:47.273"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.202" endtime="20250531 04:13:47.273"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:13:47.202" endtime="20250531 04:13:47.273"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.277" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.281" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:13:47.275" endtime="20250531 04:13:47.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.282" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:13:47.281" endtime="20250531 04:13:47.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.282" endtime="20250531 04:13:47.282"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.275" endtime="20250531 04:13:47.282"/>
</kw>
<msg timestamp="20250531 04:13:47.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.275" endtime="20250531 04:13:47.282"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.275" endtime="20250531 04:13:47.283"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.285" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.295" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.284" endtime="20250531 04:13:47.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.296" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.296" endtime="20250531 04:13:47.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.296" endtime="20250531 04:13:47.297"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.283" endtime="20250531 04:13:47.297"/>
</kw>
<msg timestamp="20250531 04:13:47.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.283" endtime="20250531 04:13:47.297"/>
</kw>
<msg timestamp="20250531 04:13:47.297" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.283" endtime="20250531 04:13:47.297"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.297" endtime="20250531 04:13:47.297"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.297" endtime="20250531 04:13:47.297"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.298" endtime="20250531 04:13:47.298"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.297" endtime="20250531 04:13:47.298"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.297" endtime="20250531 04:13:47.298"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.283" endtime="20250531 04:13:47.298"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:13:47.298" endtime="20250531 04:13:47.298"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.298" endtime="20250531 04:13:47.298"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.302" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.310" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.300" endtime="20250531 04:13:47.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.311" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.310" endtime="20250531 04:13:47.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.311" endtime="20250531 04:13:47.311"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.299" endtime="20250531 04:13:47.312"/>
</kw>
<msg timestamp="20250531 04:13:47.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.299" endtime="20250531 04:13:47.312"/>
</kw>
<msg timestamp="20250531 04:13:47.312" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.299" endtime="20250531 04:13:47.312"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.312" endtime="20250531 04:13:47.312"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.312" endtime="20250531 04:13:47.312"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.313" endtime="20250531 04:13:47.313"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.313" endtime="20250531 04:13:47.313"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.312" endtime="20250531 04:13:47.313"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.299" endtime="20250531 04:13:47.313"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:13:47.313" endtime="20250531 04:13:47.313"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.313" endtime="20250531 04:13:47.314"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.316" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.325" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.315" endtime="20250531 04:13:47.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.326" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.326" endtime="20250531 04:13:47.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.326" endtime="20250531 04:13:47.327"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.314" endtime="20250531 04:13:47.327"/>
</kw>
<msg timestamp="20250531 04:13:47.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.314" endtime="20250531 04:13:47.327"/>
</kw>
<msg timestamp="20250531 04:13:47.327" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.314" endtime="20250531 04:13:47.327"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.328" endtime="20250531 04:13:47.328"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.327" endtime="20250531 04:13:47.328"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.328" endtime="20250531 04:13:47.328"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.328" endtime="20250531 04:13:47.328"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.327" endtime="20250531 04:13:47.328"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.314" endtime="20250531 04:13:47.328"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:13:47.329" endtime="20250531 04:13:47.329"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.329" endtime="20250531 04:13:47.329"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.333" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.343" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.330" endtime="20250531 04:13:47.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.344" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.343" endtime="20250531 04:13:47.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.344" endtime="20250531 04:13:47.344"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.330" endtime="20250531 04:13:47.344"/>
</kw>
<msg timestamp="20250531 04:13:47.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.330" endtime="20250531 04:13:47.344"/>
</kw>
<msg timestamp="20250531 04:13:47.344" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.330" endtime="20250531 04:13:47.344"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.345" endtime="20250531 04:13:47.345"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.345" endtime="20250531 04:13:47.345"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.345" endtime="20250531 04:13:47.345"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.345" endtime="20250531 04:13:47.345"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.345" endtime="20250531 04:13:47.345"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.329" endtime="20250531 04:13:47.345"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.274" endtime="20250531 04:13:47.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:13:47.274" endtime="20250531 04:13:47.346"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.350" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.354" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:13:47.348" endtime="20250531 04:13:47.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.355" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:13:47.354" endtime="20250531 04:13:47.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.355" endtime="20250531 04:13:47.355"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.347" endtime="20250531 04:13:47.355"/>
</kw>
<msg timestamp="20250531 04:13:47.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.347" endtime="20250531 04:13:47.355"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.347" endtime="20250531 04:13:47.356"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.359" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.372" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.357" endtime="20250531 04:13:47.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.373" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.372" endtime="20250531 04:13:47.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.373" endtime="20250531 04:13:47.374"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.356" endtime="20250531 04:13:47.374"/>
</kw>
<msg timestamp="20250531 04:13:47.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.356" endtime="20250531 04:13:47.374"/>
</kw>
<msg timestamp="20250531 04:13:47.374" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.356" endtime="20250531 04:13:47.374"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.374" endtime="20250531 04:13:47.374"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.374" endtime="20250531 04:13:47.375"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.375" endtime="20250531 04:13:47.375"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.375" endtime="20250531 04:13:47.375"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.374" endtime="20250531 04:13:47.375"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.356" endtime="20250531 04:13:47.375"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:13:47.375" endtime="20250531 04:13:47.376"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.375" endtime="20250531 04:13:47.376"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.379" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.388" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.377" endtime="20250531 04:13:47.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.388" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.388" endtime="20250531 04:13:47.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.388" endtime="20250531 04:13:47.389"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.376" endtime="20250531 04:13:47.389"/>
</kw>
<msg timestamp="20250531 04:13:47.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.376" endtime="20250531 04:13:47.389"/>
</kw>
<msg timestamp="20250531 04:13:47.389" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.376" endtime="20250531 04:13:47.389"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.390" endtime="20250531 04:13:47.390"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.389" endtime="20250531 04:13:47.390"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.390" endtime="20250531 04:13:47.390"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.390" endtime="20250531 04:13:47.390"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.389" endtime="20250531 04:13:47.390"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.376" endtime="20250531 04:13:47.390"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:13:47.391" endtime="20250531 04:13:47.391"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.390" endtime="20250531 04:13:47.391"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.394" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.402" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.392" endtime="20250531 04:13:47.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.403" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.402" endtime="20250531 04:13:47.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.403" endtime="20250531 04:13:47.403"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.392" endtime="20250531 04:13:47.403"/>
</kw>
<msg timestamp="20250531 04:13:47.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.391" endtime="20250531 04:13:47.403"/>
</kw>
<msg timestamp="20250531 04:13:47.403" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.391" endtime="20250531 04:13:47.403"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.404" endtime="20250531 04:13:47.404"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.404" endtime="20250531 04:13:47.404"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.404" endtime="20250531 04:13:47.404"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.404" endtime="20250531 04:13:47.404"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.404" endtime="20250531 04:13:47.404"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.391" endtime="20250531 04:13:47.404"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:13:47.405" endtime="20250531 04:13:47.405"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.404" endtime="20250531 04:13:47.405"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.408" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.416" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.406" endtime="20250531 04:13:47.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.416" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:13:47.416" endtime="20250531 04:13:47.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.416" endtime="20250531 04:13:47.417"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.406" endtime="20250531 04:13:47.417"/>
</kw>
<msg timestamp="20250531 04:13:47.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.406" endtime="20250531 04:13:47.417"/>
</kw>
<msg timestamp="20250531 04:13:47.417" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:13:47.405" endtime="20250531 04:13:47.417"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.417" endtime="20250531 04:13:47.417"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:13:47.417" endtime="20250531 04:13:47.417"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:13:47.418" endtime="20250531 04:13:47.418"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.418" endtime="20250531 04:13:47.418"/>
</branch>
<status status="PASS" starttime="20250531 04:13:47.417" endtime="20250531 04:13:47.418"/>
</if>
<status status="PASS" starttime="20250531 04:13:47.405" endtime="20250531 04:13:47.418"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.347" endtime="20250531 04:13:47.418"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:13:47.346" endtime="20250531 04:13:47.418"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:47.422" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:47.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:47.430" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250531 04:13:47.421" endtime="20250531 04:13:47.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:47.431" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250531 04:13:47.431" endtime="20250531 04:13:47.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:47.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:47.431" endtime="20250531 04:13:47.432"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.420" endtime="20250531 04:13:47.432"/>
</kw>
<msg timestamp="20250531 04:13:47.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:47.420" endtime="20250531 04:13:47.432"/>
</kw>
<msg timestamp="20250531 04:13:47.432" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250531 04:13:47.420" endtime="20250531 04:13:47.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250531 04:13:47.432" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250531 04:13:47.432" endtime="20250531 04:13:47.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:47.433" endtime="20250531 04:13:47.433"/>
</kw>
<status status="FAIL" starttime="20250531 04:13:47.420" endtime="20250531 04:13:47.433"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:13:57.437" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:13:57.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:13:57.448" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250531 04:13:57.435" endtime="20250531 04:13:57.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:13:57.448" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250531 04:13:57.448" endtime="20250531 04:13:57.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:13:57.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:13:57.448" endtime="20250531 04:13:57.449"/>
</kw>
<status status="PASS" starttime="20250531 04:13:57.435" endtime="20250531 04:13:57.449"/>
</kw>
<msg timestamp="20250531 04:13:57.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:13:57.434" endtime="20250531 04:13:57.449"/>
</kw>
<msg timestamp="20250531 04:13:57.449" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250531 04:13:57.434" endtime="20250531 04:13:57.449"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250531 04:13:57.450" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250531 04:13:57.449" endtime="20250531 04:13:57.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:13:57.450" endtime="20250531 04:13:57.450"/>
</kw>
<status status="FAIL" starttime="20250531 04:13:57.433" endtime="20250531 04:13:57.450"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:14:07.454" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:14:07.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:14:07.463" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250531 04:14:07.452" endtime="20250531 04:14:07.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:14:07.464" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250531 04:14:07.464" endtime="20250531 04:14:07.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:14:07.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:14:07.464" endtime="20250531 04:14:07.465"/>
</kw>
<status status="PASS" starttime="20250531 04:14:07.451" endtime="20250531 04:14:07.465"/>
</kw>
<msg timestamp="20250531 04:14:07.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:14:07.451" endtime="20250531 04:14:07.465"/>
</kw>
<msg timestamp="20250531 04:14:07.465" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250531 04:14:07.451" endtime="20250531 04:14:07.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250531 04:14:07.465" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250531 04:14:07.465" endtime="20250531 04:14:07.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:14:07.466" endtime="20250531 04:14:07.466"/>
</kw>
<status status="FAIL" starttime="20250531 04:14:07.450" endtime="20250531 04:14:07.466"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:14:17.470" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:14:17.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:14:17.486" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20250531 04:14:17.468" endtime="20250531 04:14:17.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:14:17.487" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.486" endtime="20250531 04:14:17.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:14:17.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:14:17.487" endtime="20250531 04:14:17.487"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.467" endtime="20250531 04:14:17.488"/>
</kw>
<msg timestamp="20250531 04:14:17.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:14:17.467" endtime="20250531 04:14:17.488"/>
</kw>
<msg timestamp="20250531 04:14:17.488" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20250531 04:14:17.467" endtime="20250531 04:14:17.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.488" endtime="20250531 04:14:17.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.488" endtime="20250531 04:14:17.489"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.466" endtime="20250531 04:14:17.489"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.419" endtime="20250531 04:14:17.489"/>
</kw>
<status status="PASS" starttime="20250531 04:13:47.419" endtime="20250531 04:14:17.489"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:13:47.418" endtime="20250531 04:14:17.489"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:14:17.493" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kqakx 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:14:17.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:14:17.516" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-kqakx","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250531 04:14:17.491" endtime="20250531 04:14:17.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:14:17.517" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-kqakx","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1748664814773,"modificationTime":1748664814773,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-kqakx"},"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.516" endtime="20250531 04:14:17.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:14:17.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:14:17.517" endtime="20250531 04:14:17.517"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.491" endtime="20250531 04:14:17.517"/>
</kw>
<msg timestamp="20250531 04:14:17.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:14:17.491" endtime="20250531 04:14:17.517"/>
</kw>
<msg timestamp="20250531 04:14:17.517" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-kqakx","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250531 04:14:17.491" endtime="20250531 04:14:17.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.518" endtime="20250531 04:14:17.518"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.518" endtime="20250531 04:14:17.518"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.490" endtime="20250531 04:14:17.518"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.490" endtime="20250531 04:14:17.518"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.490" endtime="20250531 04:14:17.518"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:14:17.489" endtime="20250531 04:14:17.518"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:14:17.523" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kqakx/buc-henbq 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:14:17.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:14:17.545" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-henbq","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250531 04:14:17.521" endtime="20250531 04:14:17.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:14:17.546" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-henbq","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1748664817723,"modificationTime":1748664817723,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-kqakx","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"LEGACY","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.546" endtime="20250531 04:14:17.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:14:17.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:14:17.547" endtime="20250531 04:14:17.547"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.521" endtime="20250531 04:14:17.547"/>
</kw>
<msg timestamp="20250531 04:14:17.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:14:17.521" endtime="20250531 04:14:17.547"/>
</kw>
<msg timestamp="20250531 04:14:17.547" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-henbq","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250531 04:14:17.520" endtime="20250531 04:14:17.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.547" endtime="20250531 04:14:17.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.548" endtime="20250531 04:14:17.548"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.520" endtime="20250531 04:14:17.548"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.520" endtime="20250531 04:14:17.548"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.519" endtime="20250531 04:14:17.548"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:14:17.519" endtime="20250531 04:14:17.548"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:14:17.554" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kqakx/buc-henbq/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:14:17.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:14:17.595" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250531 04:14:17.551" endtime="20250531 04:14:17.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:14:17.596" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1748664820569,"modificationTime":1748664822261,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-kqakx","bucketName":"buc-henbq","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}],"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}]],"locationListCount":1,"multipartKey":false}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.596" endtime="20250531 04:14:17.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:14:17.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:14:17.597" endtime="20250531 04:14:17.597"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.551" endtime="20250531 04:14:17.597"/>
</kw>
<msg timestamp="20250531 04:14:17.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:14:17.551" endtime="20250531 04:14:17.597"/>
</kw>
<msg timestamp="20250531 04:14:17.597" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250531 04:14:17.550" endtime="20250531 04:14:17.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.597" endtime="20250531 04:14:17.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.598" endtime="20250531 04:14:17.598"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.550" endtime="20250531 04:14:17.598"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.550" endtime="20250531 04:14:17.598"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.549" endtime="20250531 04:14:17.598"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:14:17.549" endtime="20250531 04:14:17.598"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:14:17.603" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kqakx/buc-henbq/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:14:17.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:14:17.616" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250531 04:14:17.601" endtime="20250531 04:14:17.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:14:17.617" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":[]},"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.616" endtime="20250531 04:14:17.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:14:17.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:14:17.617" endtime="20250531 04:14:17.617"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.601" endtime="20250531 04:14:17.617"/>
</kw>
<msg timestamp="20250531 04:14:17.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:14:17.601" endtime="20250531 04:14:17.617"/>
</kw>
<msg timestamp="20250531 04:14:17.618" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250531 04:14:17.600" endtime="20250531 04:14:17.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.618" endtime="20250531 04:14:17.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.618" endtime="20250531 04:14:17.618"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.600" endtime="20250531 04:14:17.618"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.600" endtime="20250531 04:14:17.618"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.599" endtime="20250531 04:14:17.618"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.599" endtime="20250531 04:14:17.618"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:14:17.619" endtime="20250531 04:14:17.619"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:14:17.599" endtime="20250531 04:14:17.619"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:14:17.624" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-kqakx/buc-henbq&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:14:17.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:14:17.636" level="INFO">${output} = {"status":"OK","path":"/vol-kqakx/buc-henbq","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-kqakx/buc-henbq/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250531 04:14:17.622" endtime="20250531 04:14:17.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:14:17.637" level="INFO">{"status":"OK","path":"/vol-kqakx/buc-henbq","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-kqakx/buc-henbq/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20250531 04:14:17.636" endtime="20250531 04:14:17.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:14:17.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:14:17.637" endtime="20250531 04:14:17.637"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.621" endtime="20250531 04:14:17.637"/>
</kw>
<msg timestamp="20250531 04:14:17.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:14:17.621" endtime="20250531 04:14:17.637"/>
</kw>
<msg timestamp="20250531 04:14:17.637" level="INFO">${result} = {"status":"OK","path":"/vol-kqakx/buc-henbq","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-kqakx/buc-henbq/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250531 04:14:17.621" endtime="20250531 04:14:17.637"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.638" endtime="20250531 04:14:17.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.638" endtime="20250531 04:14:17.638"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.621" endtime="20250531 04:14:17.638"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.620" endtime="20250531 04:14:17.638"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.620" endtime="20250531 04:14:17.638"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:14:17.619" endtime="20250531 04:14:17.638"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:14:17.643" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-kqakx 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:14:17.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:14:17.652" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.641" endtime="20250531 04:14:17.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:14:17.653" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.653" endtime="20250531 04:14:17.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:14:17.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:14:17.653" endtime="20250531 04:14:17.654"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.641" endtime="20250531 04:14:17.654"/>
</kw>
<msg timestamp="20250531 04:14:17.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:14:17.640" endtime="20250531 04:14:17.654"/>
</kw>
<msg timestamp="20250531 04:14:17.654" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.640" endtime="20250531 04:14:17.654"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.654" endtime="20250531 04:14:17.654"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.654" endtime="20250531 04:14:17.655"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.640" endtime="20250531 04:14:17.655"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.640" endtime="20250531 04:14:17.655"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.639" endtime="20250531 04:14:17.655"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:14:17.639" endtime="20250531 04:14:17.655"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:14:17.659" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-kqakx/buc-henbq 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:14:17.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:14:17.668" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.657" endtime="20250531 04:14:17.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:14:17.669" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.668" endtime="20250531 04:14:17.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:14:17.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:14:17.669" endtime="20250531 04:14:17.669"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.657" endtime="20250531 04:14:17.669"/>
</kw>
<msg timestamp="20250531 04:14:17.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:14:17.657" endtime="20250531 04:14:17.669"/>
</kw>
<msg timestamp="20250531 04:14:17.670" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.657" endtime="20250531 04:14:17.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.670" endtime="20250531 04:14:17.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.670" endtime="20250531 04:14:17.670"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.656" endtime="20250531 04:14:17.670"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.656" endtime="20250531 04:14:17.670"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.656" endtime="20250531 04:14:17.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:14:17.655" endtime="20250531 04:14:17.671"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:14:17.675" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:14:17.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:14:17.683" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.673" endtime="20250531 04:14:17.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:14:17.684" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.683" endtime="20250531 04:14:17.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:14:17.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:14:17.684" endtime="20250531 04:14:17.685"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.673" endtime="20250531 04:14:17.685"/>
</kw>
<msg timestamp="20250531 04:14:17.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:14:17.673" endtime="20250531 04:14:17.685"/>
</kw>
<msg timestamp="20250531 04:14:17.685" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:14:17.672" endtime="20250531 04:14:17.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.685" endtime="20250531 04:14:17.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:14:17.685" endtime="20250531 04:14:17.686"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.672" endtime="20250531 04:14:17.686"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.672" endtime="20250531 04:14:17.686"/>
</kw>
<status status="PASS" starttime="20250531 04:14:17.671" endtime="20250531 04:14:17.686"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:14:17.671" endtime="20250531 04:14:17.686"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" starttime="20250531 04:13:29.886" endtime="20250531 04:14:17.687"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
