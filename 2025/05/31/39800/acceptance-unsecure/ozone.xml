<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250531 04:32:23.253" rpa="false" schemaversion="4">
<suite id="s1" name="ozone">
<suite id="s1-s1" name="Lib" source="/opt/hadoop/smoketest/lib">
<suite id="s1-s1-s1" name="Fs Tests" source="/opt/hadoop/smoketest/lib/fs_tests.robot">
<test id="s1-s1-s1-t1" name="Format o3fs URL without path" line="22">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.476" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250531 04:15:12.475" endtime="20250531 04:15:12.476"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.476" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250531 04:15:12.476" endtime="20250531 04:15:12.476"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.475" endtime="20250531 04:15:12.476"/>
</kw>
<msg timestamp="20250531 04:15:12.476" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250531 04:15:12.474" endtime="20250531 04:15:12.476"/>
</kw>
<msg timestamp="20250531 04:15:12.476" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20250531 04:15:12.473" endtime="20250531 04:15:12.476"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.476" endtime="20250531 04:15:12.477"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.473" endtime="20250531 04:15:12.477"/>
</test>
<test id="s1-s1-s1-t2" name="Format o3fs URL with path" line="26">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.479" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250531 04:15:12.479" endtime="20250531 04:15:12.479"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.479" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250531 04:15:12.479" endtime="20250531 04:15:12.479"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.478" endtime="20250531 04:15:12.479"/>
</kw>
<msg timestamp="20250531 04:15:12.479" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250531 04:15:12.478" endtime="20250531 04:15:12.479"/>
</kw>
<msg timestamp="20250531 04:15:12.480" level="INFO">${result} = o3fs://bucket1.vol1.om/dir/file</msg>
<status status="PASS" starttime="20250531 04:15:12.477" endtime="20250531 04:15:12.480"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.480" endtime="20250531 04:15:12.480"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.477" endtime="20250531 04:15:12.480"/>
</test>
<test id="s1-s1-s1-t3" name="Format o3fs URL with OM" line="30">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>omservice</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.482" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250531 04:15:12.482" endtime="20250531 04:15:12.482"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.482" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20250531 04:15:12.482" endtime="20250531 04:15:12.482"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.481" endtime="20250531 04:15:12.482"/>
</kw>
<msg timestamp="20250531 04:15:12.482" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20250531 04:15:12.481" endtime="20250531 04:15:12.482"/>
</kw>
<msg timestamp="20250531 04:15:12.483" level="INFO">${result} = o3fs://bucket1.vol1.omservice/dir/file</msg>
<status status="PASS" starttime="20250531 04:15:12.480" endtime="20250531 04:15:12.483"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.omservice/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.483" endtime="20250531 04:15:12.483"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.480" endtime="20250531 04:15:12.483"/>
</test>
<test id="s1-s1-s1-t4" name="Format ofs URL without path" line="35">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.485" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250531 04:15:12.485" endtime="20250531 04:15:12.485"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.486" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250531 04:15:12.485" endtime="20250531 04:15:12.486"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.485" endtime="20250531 04:15:12.486"/>
</kw>
<msg timestamp="20250531 04:15:12.486" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250531 04:15:12.484" endtime="20250531 04:15:12.486"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250531 04:15:12.486" endtime="20250531 04:15:12.487"/>
</kw>
<msg timestamp="20250531 04:15:12.487" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20250531 04:15:12.486" endtime="20250531 04:15:12.487"/>
</kw>
<msg timestamp="20250531 04:15:12.487" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20250531 04:15:12.483" endtime="20250531 04:15:12.487"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.487" endtime="20250531 04:15:12.487"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.483" endtime="20250531 04:15:12.487"/>
</test>
<test id="s1-s1-s1-t5" name="Format ofs URL with path" line="39">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.489" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250531 04:15:12.489" endtime="20250531 04:15:12.489"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.490" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250531 04:15:12.489" endtime="20250531 04:15:12.490"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.489" endtime="20250531 04:15:12.490"/>
</kw>
<msg timestamp="20250531 04:15:12.490" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250531 04:15:12.488" endtime="20250531 04:15:12.490"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.491" level="INFO">${first} = d</msg>
<status status="PASS" starttime="20250531 04:15:12.491" endtime="20250531 04:15:12.491"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.491" level="INFO">${result} = /dir/file</msg>
<status status="PASS" starttime="20250531 04:15:12.491" endtime="20250531 04:15:12.491"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.491" endtime="20250531 04:15:12.492"/>
</kw>
<msg timestamp="20250531 04:15:12.492" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" starttime="20250531 04:15:12.490" endtime="20250531 04:15:12.492"/>
</kw>
<msg timestamp="20250531 04:15:12.492" level="INFO">${result} = ofs://om/vol1/bucket1/dir/file</msg>
<status status="PASS" starttime="20250531 04:15:12.488" endtime="20250531 04:15:12.492"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.492" endtime="20250531 04:15:12.492"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.488" endtime="20250531 04:15:12.492"/>
</test>
<test id="s1-s1-s1-t6" name="Format ofs URL with OM" line="43">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>om:1234</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.494" level="INFO">${last} = 4</msg>
<status status="PASS" starttime="20250531 04:15:12.494" endtime="20250531 04:15:12.494"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.494" level="INFO">${result} = om:1234/</msg>
<status status="PASS" starttime="20250531 04:15:12.494" endtime="20250531 04:15:12.494"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.494" endtime="20250531 04:15:12.495"/>
</kw>
<msg timestamp="20250531 04:15:12.495" level="INFO">${om_with_trailing} = om:1234/</msg>
<status status="PASS" starttime="20250531 04:15:12.493" endtime="20250531 04:15:12.495"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.496" level="INFO">${first} = d</msg>
<status status="PASS" starttime="20250531 04:15:12.495" endtime="20250531 04:15:12.496"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.496" level="INFO">${result} = /dir/file</msg>
<status status="PASS" starttime="20250531 04:15:12.496" endtime="20250531 04:15:12.496"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.495" endtime="20250531 04:15:12.496"/>
</kw>
<msg timestamp="20250531 04:15:12.496" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" starttime="20250531 04:15:12.495" endtime="20250531 04:15:12.496"/>
</kw>
<msg timestamp="20250531 04:15:12.496" level="INFO">${result} = ofs://om:1234/vol1/bucket1/dir/file</msg>
<status status="PASS" starttime="20250531 04:15:12.493" endtime="20250531 04:15:12.496"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om:1234/vol1/bucket1/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.497" endtime="20250531 04:15:12.497"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.492" endtime="20250531 04:15:12.497"/>
</test>
<test id="s1-s1-s1-t7" name="Format FS URL with ofs scheme" line="48">
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>ofs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.500" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250531 04:15:12.500" endtime="20250531 04:15:12.500"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.500" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250531 04:15:12.500" endtime="20250531 04:15:12.500"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.499" endtime="20250531 04:15:12.500"/>
</kw>
<msg timestamp="20250531 04:15:12.500" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250531 04:15:12.499" endtime="20250531 04:15:12.500"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250531 04:15:12.501" endtime="20250531 04:15:12.501"/>
</kw>
<msg timestamp="20250531 04:15:12.501" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20250531 04:15:12.500" endtime="20250531 04:15:12.501"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.498" endtime="20250531 04:15:12.502"/>
</kw>
<msg timestamp="20250531 04:15:12.502" level="INFO">${url} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20250531 04:15:12.498" endtime="20250531 04:15:12.502"/>
</kw>
<msg timestamp="20250531 04:15:12.502" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20250531 04:15:12.497" endtime="20250531 04:15:12.502"/>
</kw>
<kw name="Format ofs URL" library="fs">
<var>${expected}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.503" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250531 04:15:12.503" endtime="20250531 04:15:12.504"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.504" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250531 04:15:12.504" endtime="20250531 04:15:12.504"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.503" endtime="20250531 04:15:12.504"/>
</kw>
<msg timestamp="20250531 04:15:12.504" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250531 04:15:12.502" endtime="20250531 04:15:12.504"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250531 04:15:12.505" endtime="20250531 04:15:12.505"/>
</kw>
<msg timestamp="20250531 04:15:12.505" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20250531 04:15:12.504" endtime="20250531 04:15:12.505"/>
</kw>
<msg timestamp="20250531 04:15:12.505" level="INFO">${expected} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20250531 04:15:12.502" endtime="20250531 04:15:12.505"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.505" endtime="20250531 04:15:12.506"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.497" endtime="20250531 04:15:12.506"/>
</test>
<test id="s1-s1-s1-t8" name="Format FS URL with o3fs scheme" line="53">
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>o3fs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.509" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250531 04:15:12.508" endtime="20250531 04:15:12.509"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.509" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250531 04:15:12.509" endtime="20250531 04:15:12.509"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.508" endtime="20250531 04:15:12.509"/>
</kw>
<msg timestamp="20250531 04:15:12.509" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250531 04:15:12.508" endtime="20250531 04:15:12.509"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.507" endtime="20250531 04:15:12.509"/>
</kw>
<msg timestamp="20250531 04:15:12.509" level="INFO">${url} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20250531 04:15:12.507" endtime="20250531 04:15:12.509"/>
</kw>
<msg timestamp="20250531 04:15:12.510" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20250531 04:15:12.506" endtime="20250531 04:15:12.510"/>
</kw>
<kw name="Format o3fs URL" library="fs">
<var>${expected}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.511" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250531 04:15:12.511" endtime="20250531 04:15:12.511"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.512" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250531 04:15:12.511" endtime="20250531 04:15:12.512"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.511" endtime="20250531 04:15:12.512"/>
</kw>
<msg timestamp="20250531 04:15:12.512" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250531 04:15:12.510" endtime="20250531 04:15:12.512"/>
</kw>
<msg timestamp="20250531 04:15:12.512" level="INFO">${expected} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20250531 04:15:12.510" endtime="20250531 04:15:12.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.512" endtime="20250531 04:15:12.512"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.506" endtime="20250531 04:15:12.512"/>
</test>
<test id="s1-s1-s1-t9" name="Format FS URL with unsupported scheme" line="58">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<var>${result}</var>
<arg>*</arg>
<arg>Format FS URL</arg>
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Format FS URL" library="fs">
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20250531 04:15:12.514" level="FAIL">Unsupported FS scheme: http</msg>
<status status="FAIL" starttime="20250531 04:15:12.514" endtime="20250531 04:15:12.514"/>
</kw>
<status status="FAIL" starttime="20250531 04:15:12.514" endtime="20250531 04:15:12.514"/>
</kw>
<status status="FAIL" starttime="20250531 04:15:12.513" endtime="20250531 04:15:12.515"/>
</kw>
<msg timestamp="20250531 04:15:12.515" level="INFO">${result} = Unsupported FS scheme: http</msg>
<status status="PASS" starttime="20250531 04:15:12.513" endtime="20250531 04:15:12.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>http</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:15:12.515" endtime="20250531 04:15:12.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>nsupported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:15:12.515" endtime="20250531 04:15:12.515"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.513" endtime="20250531 04:15:12.515"/>
</test>
<status status="PASS" starttime="20250531 04:15:12.464" endtime="20250531 04:15:12.516"/>
</suite>
<suite id="s1-s1-s2" name="Os Tests" source="/opt/hadoop/smoketest/lib/os_tests.robot">
<test id="s1-s1-s2-t1" name="Execute" line="22">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>echo 42</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:12.530" level="INFO">Running command 'echo 42 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:12.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:15:12.532" level="INFO">${output} = 42</msg>
<status status="PASS" starttime="20250531 04:15:12.528" endtime="20250531 04:15:12.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:12.533" level="INFO">42</msg>
<status status="PASS" starttime="20250531 04:15:12.532" endtime="20250531 04:15:12.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:12.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:15:12.533" endtime="20250531 04:15:12.533"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.528" endtime="20250531 04:15:12.533"/>
</kw>
<msg timestamp="20250531 04:15:12.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:12.528" endtime="20250531 04:15:12.533"/>
</kw>
<msg timestamp="20250531 04:15:12.533" level="INFO">${output} = 42</msg>
<status status="PASS" starttime="20250531 04:15:12.528" endtime="20250531 04:15:12.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>42</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.533" endtime="20250531 04:15:12.534"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.527" endtime="20250531 04:15:12.534"/>
</test>
<test id="s1-s1-s2-t2" name="Execute failing command" line="26">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*</arg>
<arg>Execute</arg>
<arg>false</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Execute" library="os">
<arg>false</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:12.537" level="INFO">Running command 'false 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:12.538" level="INFO">${rc} = 1</msg>
<msg timestamp="20250531 04:15:12.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:15:12.535" endtime="20250531 04:15:12.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:12.539" level="INFO"/>
<status status="PASS" starttime="20250531 04:15:12.539" endtime="20250531 04:15:12.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:12.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250531 04:15:12.540" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20250531 04:15:12.539" endtime="20250531 04:15:12.540"/>
</kw>
<status status="FAIL" starttime="20250531 04:15:12.535" endtime="20250531 04:15:12.540"/>
</kw>
<msg timestamp="20250531 04:15:12.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250531 04:15:12.535" endtime="20250531 04:15:12.540"/>
</kw>
<status status="FAIL" starttime="20250531 04:15:12.535" endtime="20250531 04:15:12.540"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.534" endtime="20250531 04:15:12.540"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.534" endtime="20250531 04:15:12.540"/>
</test>
<test id="s1-s1-s2-t3" name="Execute And Ignore Error" line="29">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>echo 123 &amp;&amp; false</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:12.543" level="INFO">Running command 'echo 123 &amp;&amp; false 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:12.544" level="INFO">${rc} = 1</msg>
<msg timestamp="20250531 04:15:12.544" level="INFO">${output} = 123</msg>
<status status="PASS" starttime="20250531 04:15:12.541" endtime="20250531 04:15:12.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:12.545" level="INFO">123</msg>
<status status="PASS" starttime="20250531 04:15:12.545" endtime="20250531 04:15:12.545"/>
</kw>
<msg timestamp="20250531 04:15:12.545" level="INFO">${output} = 123</msg>
<status status="PASS" starttime="20250531 04:15:12.541" endtime="20250531 04:15:12.545"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>123</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.545" endtime="20250531 04:15:12.545"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.540" endtime="20250531 04:15:12.545"/>
</test>
<test id="s1-s1-s2-t4" name="Execute and checkrc" line="33">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>echo failure &amp;&amp; exit 1</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:12.548" level="INFO">Running command 'echo failure &amp;&amp; exit 1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:12.550" level="INFO">${rc} = 1</msg>
<msg timestamp="20250531 04:15:12.550" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20250531 04:15:12.546" endtime="20250531 04:15:12.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:12.550" level="INFO">failure</msg>
<status status="PASS" starttime="20250531 04:15:12.550" endtime="20250531 04:15:12.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:12.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:15:12.550" endtime="20250531 04:15:12.551"/>
</kw>
<msg timestamp="20250531 04:15:12.551" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20250531 04:15:12.546" endtime="20250531 04:15:12.551"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>failure</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.551" endtime="20250531 04:15:12.551"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.546" endtime="20250531 04:15:12.551"/>
</test>
<test id="s1-s1-s2-t5" name="Execute and checkrc RC mismatch" line="37">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*</arg>
<arg>Execute and checkrc</arg>
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Execute and checkrc" library="os">
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:12.554" level="INFO">Running command 'echo failure &amp;&amp; exit 3 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:12.556" level="INFO">${rc} = 3</msg>
<msg timestamp="20250531 04:15:12.556" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20250531 04:15:12.552" endtime="20250531 04:15:12.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:12.556" level="INFO">failure</msg>
<status status="PASS" starttime="20250531 04:15:12.556" endtime="20250531 04:15:12.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:12.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250531 04:15:12.557" level="FAIL">3 != 1</msg>
<status status="FAIL" starttime="20250531 04:15:12.556" endtime="20250531 04:15:12.557"/>
</kw>
<status status="FAIL" starttime="20250531 04:15:12.552" endtime="20250531 04:15:12.557"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.552" endtime="20250531 04:15:12.557"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.552" endtime="20250531 04:15:12.557"/>
</test>
<status status="PASS" starttime="20250531 04:15:12.516" endtime="20250531 04:15:12.558"/>
</suite>
<suite id="s1-s1-s3" name="String Tests" source="/opt/hadoop/smoketest/lib/string_tests.robot">
<test id="s1-s1-s3-t1" name="Ensure Leading without Leading" line="22">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>/</arg>
<arg>a/b</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.561" level="INFO">${first} = a</msg>
<status status="PASS" starttime="20250531 04:15:12.561" endtime="20250531 04:15:12.561"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.562" level="INFO">${result} = /a/b</msg>
<status status="PASS" starttime="20250531 04:15:12.561" endtime="20250531 04:15:12.562"/>
</kw>
<msg timestamp="20250531 04:15:12.562" level="INFO">${result} = /a/b</msg>
<status status="PASS" starttime="20250531 04:15:12.561" endtime="20250531 04:15:12.562"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>/a/b</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.562" endtime="20250531 04:15:12.562"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.560" endtime="20250531 04:15:12.562"/>
</test>
<test id="s1-s1-s3-t2" name="Ensure Leading with Leading" line="26">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>_</arg>
<arg>_a_b_c</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.563" level="INFO">${first} = _</msg>
<status status="PASS" starttime="20250531 04:15:12.563" endtime="20250531 04:15:12.563"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.564" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" starttime="20250531 04:15:12.563" endtime="20250531 04:15:12.564"/>
</kw>
<msg timestamp="20250531 04:15:12.564" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" starttime="20250531 04:15:12.563" endtime="20250531 04:15:12.564"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>_a_b_c</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.564" endtime="20250531 04:15:12.564"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.563" endtime="20250531 04:15:12.564"/>
</test>
<test id="s1-s1-s3-t3" name="Ensure Leading for empty" line="30">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>|</arg>
<arg>${EMPTY}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.566" level="INFO">${first} = </msg>
<status status="PASS" starttime="20250531 04:15:12.566" endtime="20250531 04:15:12.566"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.566" level="INFO">${result} = |</msg>
<status status="PASS" starttime="20250531 04:15:12.566" endtime="20250531 04:15:12.566"/>
</kw>
<msg timestamp="20250531 04:15:12.566" level="INFO">${result} = |</msg>
<status status="PASS" starttime="20250531 04:15:12.565" endtime="20250531 04:15:12.566"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>|</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.566" endtime="20250531 04:15:12.567"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.565" endtime="20250531 04:15:12.567"/>
</test>
<test id="s1-s1-s3-t4" name="Ensure Trailing without Trailing" line="35">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>.</arg>
<arg>x.y.z</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.568" level="INFO">${last} = z</msg>
<status status="PASS" starttime="20250531 04:15:12.568" endtime="20250531 04:15:12.568"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.568" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" starttime="20250531 04:15:12.568" endtime="20250531 04:15:12.568"/>
</kw>
<msg timestamp="20250531 04:15:12.568" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" starttime="20250531 04:15:12.567" endtime="20250531 04:15:12.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>x.y.z.</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.568" endtime="20250531 04:15:12.569"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.567" endtime="20250531 04:15:12.569"/>
</test>
<test id="s1-s1-s3-t5" name="Ensure Trailing with Trailing" line="39">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>x</arg>
<arg>axbxcx</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.570" level="INFO">${last} = x</msg>
<status status="PASS" starttime="20250531 04:15:12.570" endtime="20250531 04:15:12.570"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.570" level="INFO">${result} = axbxcx</msg>
<status status="PASS" starttime="20250531 04:15:12.570" endtime="20250531 04:15:12.570"/>
</kw>
<msg timestamp="20250531 04:15:12.570" level="INFO">${result} = axbxcx</msg>
<status status="PASS" starttime="20250531 04:15:12.569" endtime="20250531 04:15:12.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>axbxcx</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.570" endtime="20250531 04:15:12.570"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.569" endtime="20250531 04:15:12.571"/>
</test>
<test id="s1-s1-s3-t6" name="Ensure Trailing for empty" line="43">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>=</arg>
<arg>${EMPTY}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250531 04:15:12.572" level="INFO">${last} = </msg>
<status status="PASS" starttime="20250531 04:15:12.572" endtime="20250531 04:15:12.572"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:12.572" level="INFO">${result} = =</msg>
<status status="PASS" starttime="20250531 04:15:12.572" endtime="20250531 04:15:12.572"/>
</kw>
<msg timestamp="20250531 04:15:12.572" level="INFO">${result} = =</msg>
<status status="PASS" starttime="20250531 04:15:12.571" endtime="20250531 04:15:12.572"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>=</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:12.573" endtime="20250531 04:15:12.573"/>
</kw>
<status status="PASS" starttime="20250531 04:15:12.571" endtime="20250531 04:15:12.573"/>
</test>
<status status="PASS" starttime="20250531 04:15:12.558" endtime="20250531 04:15:12.573"/>
</suite>
<status status="PASS" starttime="20250531 04:15:12.447" endtime="20250531 04:15:12.574"/>
</suite>
<suite id="s1-s2" name="Ozone-Lib" source="/opt/hadoop/smoketest/ozone-lib">
<suite id="s1-s2-s1" name="Shell Tests" source="/opt/hadoop/smoketest/ozone-lib/shell_tests.robot">
<test id="s1-s2-s1-t1" name="Bucket Exists should not if No Such Volume" line="27">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/no-such-volume/any-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:13.108" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/no-such-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:18.036" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:15:18.036" level="INFO">${output} = VOLUME_NOT_FOUND Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20250531 04:15:13.106" endtime="20250531 04:15:18.036"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250531 04:15:18.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:18.037" endtime="20250531 04:15:18.037"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250531 04:15:18.037" endtime="20250531 04:15:18.037"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250531 04:15:18.037" endtime="20250531 04:15:18.037"/>
</kw>
<msg timestamp="20250531 04:15:18.038" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250531 04:15:13.106" endtime="20250531 04:15:18.038"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:18.038" endtime="20250531 04:15:18.038"/>
</kw>
<status status="PASS" starttime="20250531 04:15:13.105" endtime="20250531 04:15:18.038"/>
</test>
<test id="s1-s2-s1-t2" name="Bucket Exists should not if No Such Bucket" line="31">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:18.041" level="INFO">Running command 'ozone sh volume create o3://om/vol1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:21.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:15:21.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:15:18.039" endtime="20250531 04:15:21.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:21.102" level="INFO"/>
<status status="PASS" starttime="20250531 04:15:21.102" endtime="20250531 04:15:21.102"/>
</kw>
<status status="PASS" starttime="20250531 04:15:18.039" endtime="20250531 04:15:21.102"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/no-such-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:21.106" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:23.875" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:15:23.876" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found: vol1/no-such-bucket</msg>
<status status="PASS" starttime="20250531 04:15:21.103" endtime="20250531 04:15:23.876"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250531 04:15:23.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:23.876" endtime="20250531 04:15:23.877"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250531 04:15:23.877" endtime="20250531 04:15:23.877"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250531 04:15:23.877" endtime="20250531 04:15:23.877"/>
</kw>
<msg timestamp="20250531 04:15:23.877" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250531 04:15:21.102" endtime="20250531 04:15:23.877"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:23.877" endtime="20250531 04:15:23.878"/>
</kw>
<status status="PASS" starttime="20250531 04:15:18.038" endtime="20250531 04:15:23.878"/>
</test>
<test id="s1-s2-s1-t3" name="Bucket Exists" line="36">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/vol1/bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:23.881" level="INFO">Running command 'ozone sh bucket create o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:26.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:15:26.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:15:23.879" endtime="20250531 04:15:26.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:26.673" level="INFO"/>
<status status="PASS" starttime="20250531 04:15:26.673" endtime="20250531 04:15:26.673"/>
</kw>
<status status="PASS" starttime="20250531 04:15:23.878" endtime="20250531 04:15:26.673"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:26.676" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:29.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:15:29.773" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTim...</msg>
<status status="PASS" starttime="20250531 04:15:26.674" endtime="20250531 04:15:29.773"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:15:29.773" endtime="20250531 04:15:29.774"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:15:29.774" endtime="20250531 04:15:29.774"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:15:29.774" endtime="20250531 04:15:29.775"/>
</kw>
<msg timestamp="20250531 04:15:29.775" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250531 04:15:26.673" endtime="20250531 04:15:29.775"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${TRUE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:29.775" endtime="20250531 04:15:29.775"/>
</kw>
<status status="PASS" starttime="20250531 04:15:23.878" endtime="20250531 04:15:29.775"/>
</test>
<test id="s1-s2-s1-t4" name="Bucket Exists should not if No Such OM service" line="41">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://no-such-host/any-volume/any-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:29.779" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://no-such-host/any-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:31.040" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:15:31.041" level="INFO">${output} = Cannot resolve OM host no-such-host in the URI</msg>
<status status="PASS" starttime="20250531 04:15:29.776" endtime="20250531 04:15:31.041"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250531 04:15:31.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:31.041" endtime="20250531 04:15:31.042"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250531 04:15:31.042" endtime="20250531 04:15:31.042"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250531 04:15:31.042" endtime="20250531 04:15:31.042"/>
</kw>
<msg timestamp="20250531 04:15:31.042" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250531 04:15:29.776" endtime="20250531 04:15:31.042"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:31.042" endtime="20250531 04:15:31.043"/>
</kw>
<status status="PASS" starttime="20250531 04:15:29.776" endtime="20250531 04:15:31.043"/>
</test>
<test id="s1-s2-s1-t5" name="Key Should Match Local File" line="46">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put o3://${OM_SERVICE_ID}/vol1/bucket/passwd /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:31.046" level="INFO">Running command 'ozone sh key put o3://om/vol1/bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:36.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:15:36.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:15:31.044" endtime="20250531 04:15:36.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:36.235" level="INFO"/>
<status status="PASS" starttime="20250531 04:15:36.235" endtime="20250531 04:15:36.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:36.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:15:36.235" endtime="20250531 04:15:36.236"/>
</kw>
<status status="PASS" starttime="20250531 04:15:31.044" endtime="20250531 04:15:36.236"/>
</kw>
<msg timestamp="20250531 04:15:36.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:31.044" endtime="20250531 04:15:36.236"/>
</kw>
<status status="PASS" starttime="20250531 04:15:31.043" endtime="20250531 04:15:36.236"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:15:36.237" level="INFO">${postfix} = 31786</msg>
<status status="PASS" starttime="20250531 04:15:36.237" endtime="20250531 04:15:36.237"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250531 04:15:36.238" level="INFO">${tmpfile} = /tmp/tempkey-31786</msg>
<status status="PASS" starttime="20250531 04:15:36.237" endtime="20250531 04:15:36.238"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:36.240" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-31786 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:40.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:15:40.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:15:36.238" endtime="20250531 04:15:40.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:40.876" level="INFO"/>
<status status="PASS" starttime="20250531 04:15:40.875" endtime="20250531 04:15:40.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:40.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:15:40.876" endtime="20250531 04:15:40.876"/>
</kw>
<status status="PASS" starttime="20250531 04:15:36.238" endtime="20250531 04:15:40.876"/>
</kw>
<msg timestamp="20250531 04:15:40.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:36.238" endtime="20250531 04:15:40.876"/>
</kw>
<status status="PASS" starttime="20250531 04:15:36.238" endtime="20250531 04:15:40.876"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250531 04:15:40.879" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-31786 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:40.881" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250531 04:15:40.877" endtime="20250531 04:15:40.881"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:40.884" level="INFO">Running command 'rm -f /tmp/tempkey-31786 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:40.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:15:40.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:15:40.882" endtime="20250531 04:15:40.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:40.888" level="INFO"/>
<status status="PASS" starttime="20250531 04:15:40.887" endtime="20250531 04:15:40.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:40.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:15:40.888" endtime="20250531 04:15:40.888"/>
</kw>
<status status="PASS" starttime="20250531 04:15:40.882" endtime="20250531 04:15:40.888"/>
</kw>
<msg timestamp="20250531 04:15:40.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:40.882" endtime="20250531 04:15:40.888"/>
</kw>
<status status="PASS" starttime="20250531 04:15:40.881" endtime="20250531 04:15:40.888"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:40.889" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250531 04:15:40.888" endtime="20250531 04:15:40.889"/>
</kw>
<msg timestamp="20250531 04:15:40.889" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250531 04:15:36.236" endtime="20250531 04:15:40.889"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:15:40.889" endtime="20250531 04:15:40.889"/>
</kw>
<status status="PASS" starttime="20250531 04:15:36.236" endtime="20250531 04:15:40.889"/>
</kw>
<status status="PASS" starttime="20250531 04:15:31.043" endtime="20250531 04:15:40.889"/>
</test>
<test id="s1-s2-s1-t6" name="Compare Key With Local File with Different File" line="50">
<kw name="Create Random File KB" library="os">
<var>${random_file}</var>
<arg>42</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Get Random Filename" library="os">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:15:40.892" level="INFO">${postfix} = bhjnnxbkvr</msg>
<status status="PASS" starttime="20250531 04:15:40.892" endtime="20250531 04:15:40.892"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempfile-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250531 04:15:40.893" level="INFO">${tmpfile} = /tmp/tempfile-bhjnnxbkvr</msg>
<status status="PASS" starttime="20250531 04:15:40.892" endtime="20250531 04:15:40.893"/>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${tmpfile}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20250531 04:15:40.893" level="INFO" html="true">File '&lt;a href="file:///tmp/tempfile-bhjnnxbkvr"&gt;/tmp/tempfile-bhjnnxbkvr&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250531 04:15:40.893" endtime="20250531 04:15:40.893"/>
</kw>
<status status="PASS" starttime="20250531 04:15:40.892" endtime="20250531 04:15:40.893"/>
</kw>
<msg timestamp="20250531 04:15:40.893" level="INFO">${path} = /tmp/tempfile-bhjnnxbkvr</msg>
<status status="PASS" starttime="20250531 04:15:40.891" endtime="20250531 04:15:40.893"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:40.896" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/tempfile-bhjnnxbkvr bs=1024 count=42 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:40.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:15:40.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:15:40.894" endtime="20250531 04:15:40.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:40.900" level="INFO"/>
<status status="PASS" starttime="20250531 04:15:40.899" endtime="20250531 04:15:40.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:40.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:15:40.900" endtime="20250531 04:15:40.900"/>
</kw>
<status status="PASS" starttime="20250531 04:15:40.894" endtime="20250531 04:15:40.900"/>
</kw>
<msg timestamp="20250531 04:15:40.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:40.894" endtime="20250531 04:15:40.900"/>
</kw>
<status status="PASS" starttime="20250531 04:15:40.893" endtime="20250531 04:15:40.900"/>
</kw>
<msg timestamp="20250531 04:15:40.901" level="INFO">${path} = /tmp/tempfile-bhjnnxbkvr</msg>
<status status="PASS" starttime="20250531 04:15:40.891" endtime="20250531 04:15:40.901"/>
</kw>
<msg timestamp="20250531 04:15:40.901" level="INFO">${random_file} = /tmp/tempfile-bhjnnxbkvr</msg>
<status status="PASS" starttime="20250531 04:15:40.890" endtime="20250531 04:15:40.901"/>
</kw>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>${random_file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:15:40.901" level="INFO">${postfix} = 55346</msg>
<status status="PASS" starttime="20250531 04:15:40.901" endtime="20250531 04:15:40.902"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250531 04:15:40.902" level="INFO">${tmpfile} = /tmp/tempkey-55346</msg>
<status status="PASS" starttime="20250531 04:15:40.902" endtime="20250531 04:15:40.902"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:40.904" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-55346 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:45.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:15:45.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:15:40.903" endtime="20250531 04:15:45.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:45.023" level="INFO"/>
<status status="PASS" starttime="20250531 04:15:45.023" endtime="20250531 04:15:45.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:45.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:15:45.023" endtime="20250531 04:15:45.023"/>
</kw>
<status status="PASS" starttime="20250531 04:15:40.902" endtime="20250531 04:15:45.024"/>
</kw>
<msg timestamp="20250531 04:15:45.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:40.902" endtime="20250531 04:15:45.024"/>
</kw>
<status status="PASS" starttime="20250531 04:15:40.902" endtime="20250531 04:15:45.024"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250531 04:15:45.026" level="INFO">Running command 'diff -q /tmp/tempfile-bhjnnxbkvr /tmp/tempkey-55346 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:45.029" level="INFO">${rc} = 1</msg>
<status status="PASS" starttime="20250531 04:15:45.024" endtime="20250531 04:15:45.029"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:45.032" level="INFO">Running command 'rm -f /tmp/tempkey-55346 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:45.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:15:45.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:15:45.030" endtime="20250531 04:15:45.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:45.036" level="INFO"/>
<status status="PASS" starttime="20250531 04:15:45.035" endtime="20250531 04:15:45.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:45.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:15:45.036" endtime="20250531 04:15:45.036"/>
</kw>
<status status="PASS" starttime="20250531 04:15:45.030" endtime="20250531 04:15:45.036"/>
</kw>
<msg timestamp="20250531 04:15:45.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:45.029" endtime="20250531 04:15:45.036"/>
</kw>
<status status="PASS" starttime="20250531 04:15:45.029" endtime="20250531 04:15:45.036"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:45.037" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20250531 04:15:45.036" endtime="20250531 04:15:45.037"/>
</kw>
<msg timestamp="20250531 04:15:45.037" level="INFO">${matches} = False</msg>
<status status="PASS" starttime="20250531 04:15:40.901" endtime="20250531 04:15:45.037"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${matches}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:45.037" endtime="20250531 04:15:45.037"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${random_file}</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250531 04:15:45.038" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-bhjnnxbkvr"&gt;/tmp/tempfile-bhjnnxbkvr&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250531 04:15:45.038" endtime="20250531 04:15:45.038"/>
</kw>
<status status="PASS" starttime="20250531 04:15:40.890" endtime="20250531 04:15:45.038"/>
</test>
<test id="s1-s2-s1-t7" name="Compare Key With Local File if File Does Not Exist" line="56">
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/no-such-file</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:15:45.039" level="INFO">${postfix} = 78067</msg>
<status status="PASS" starttime="20250531 04:15:45.039" endtime="20250531 04:15:45.039"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250531 04:15:45.040" level="INFO">${tmpfile} = /tmp/tempkey-78067</msg>
<status status="PASS" starttime="20250531 04:15:45.039" endtime="20250531 04:15:45.040"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:45.043" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-78067 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:49.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:15:49.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:15:45.041" endtime="20250531 04:15:49.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:49.139" level="INFO"/>
<status status="PASS" starttime="20250531 04:15:49.138" endtime="20250531 04:15:49.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:49.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:15:49.139" endtime="20250531 04:15:49.139"/>
</kw>
<status status="PASS" starttime="20250531 04:15:45.040" endtime="20250531 04:15:49.139"/>
</kw>
<msg timestamp="20250531 04:15:49.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:45.040" endtime="20250531 04:15:49.139"/>
</kw>
<status status="PASS" starttime="20250531 04:15:45.040" endtime="20250531 04:15:49.139"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250531 04:15:49.142" level="INFO">Running command 'diff -q /no-such-file /tmp/tempkey-78067 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:49.144" level="INFO">${rc} = 2</msg>
<status status="PASS" starttime="20250531 04:15:49.140" endtime="20250531 04:15:49.144"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:49.147" level="INFO">Running command 'rm -f /tmp/tempkey-78067 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:49.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:15:49.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:15:49.146" endtime="20250531 04:15:49.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:49.151" level="INFO"/>
<status status="PASS" starttime="20250531 04:15:49.151" endtime="20250531 04:15:49.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:49.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:15:49.151" endtime="20250531 04:15:49.151"/>
</kw>
<status status="PASS" starttime="20250531 04:15:49.145" endtime="20250531 04:15:49.151"/>
</kw>
<msg timestamp="20250531 04:15:49.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:49.145" endtime="20250531 04:15:49.152"/>
</kw>
<status status="PASS" starttime="20250531 04:15:49.145" endtime="20250531 04:15:49.152"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:15:49.152" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20250531 04:15:49.152" endtime="20250531 04:15:49.152"/>
</kw>
<msg timestamp="20250531 04:15:49.152" level="INFO">${matches} = False</msg>
<status status="PASS" starttime="20250531 04:15:45.039" endtime="20250531 04:15:49.152"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${matches}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:15:49.152" endtime="20250531 04:15:49.152"/>
</kw>
<status status="PASS" starttime="20250531 04:15:45.038" endtime="20250531 04:15:49.153"/>
</test>
<test id="s1-s2-s1-t8" name="Rejects Put Key With Zero Expected Generation" line="60">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh key put --expectedGeneration 0 o3://${OM_SERVICE_ID}/vol1/bucket/passwd /etc/passwd</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:49.156" level="INFO">Running command 'ozone sh key put --expectedGeneration 0 o3://om/vol1/bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:52.135" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:15:52.135" level="INFO">${output} = expectedGeneration must be positive, but was 0</msg>
<status status="PASS" starttime="20250531 04:15:49.154" endtime="20250531 04:15:52.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:52.136" level="INFO">expectedGeneration must be positive, but was 0</msg>
<status status="PASS" starttime="20250531 04:15:52.136" endtime="20250531 04:15:52.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:52.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:15:52.136" endtime="20250531 04:15:52.136"/>
</kw>
<msg timestamp="20250531 04:15:52.137" level="INFO">${output} = expectedGeneration must be positive, but was 0</msg>
<status status="PASS" starttime="20250531 04:15:49.153" endtime="20250531 04:15:52.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>must be positive</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:15:52.137" endtime="20250531 04:15:52.137"/>
</kw>
<status status="PASS" starttime="20250531 04:15:49.153" endtime="20250531 04:15:52.137"/>
</test>
<test id="s1-s2-s1-t9" name="Rejects Put Key With Negative Expected Generation" line="64">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh key put --expectedGeneration -1 o3://${OM_SERVICE_ID}/vol1/bucket/passwd /etc/passwd</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:52.140" level="INFO">Running command 'ozone sh key put --expectedGeneration -1 o3://om/vol1/bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:55.608" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:15:55.608" level="INFO">${output} = expectedGeneration must be positive, but was -1</msg>
<status status="PASS" starttime="20250531 04:15:52.138" endtime="20250531 04:15:55.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:55.609" level="INFO">expectedGeneration must be positive, but was -1</msg>
<status status="PASS" starttime="20250531 04:15:55.609" endtime="20250531 04:15:55.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:55.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:15:55.609" endtime="20250531 04:15:55.610"/>
</kw>
<msg timestamp="20250531 04:15:55.610" level="INFO">${output} = expectedGeneration must be positive, but was -1</msg>
<status status="PASS" starttime="20250531 04:15:52.138" endtime="20250531 04:15:55.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>must be positive</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:15:55.610" endtime="20250531 04:15:55.610"/>
</kw>
<status status="PASS" starttime="20250531 04:15:52.137" endtime="20250531 04:15:55.611"/>
</test>
<status status="PASS" starttime="20250531 04:15:13.083" endtime="20250531 04:15:55.612"/>
</suite>
<status status="PASS" starttime="20250531 04:15:13.066" endtime="20250531 04:15:55.616"/>
</suite>
<suite id="s1-s3" name="Auditparser" source="/opt/hadoop/smoketest/auditparser">
<suite id="s1-s3-s1" name="Auditparser" source="/opt/hadoop/smoketest/auditparser/auditparser.robot">
<test id="s1-s3-s1-t1" name="Testing audit parser" line="40">
<kw name="Create data" type="SETUP">
<kw name="Freon OMBG" library="freon">
<arg>prefix=auditparser</arg>
<arg>n=${buckets}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:56.163" level="INFO">Running command 'ozone freon ombg  -t 1 -n5 -p auditparser  2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:15:59.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:15:59.926" level="INFO">${output} = 2025-05-31 04:15:57,480 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:15:57,638 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:15:56.161" endtime="20250531 04:15:59.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:15:59.927" level="INFO">2025-05-31 04:15:57,480 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:15:57,638 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-05-31 04:15:57,638 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-05-31 04:15:57,793 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 5
2025-05-31 04:15:57,846 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 5)
2025-05-31 04:15:58,847 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 5)
2025-05-31 04:15:59,847 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (5 out of 5)
2025-05-31 04:15:59,859 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=5, min=7.538958, max=15.447669, mean=9.328191600000002, stddev=3.0674124646861953, median=7.804457, p75=8.185438, p95=15.447669, p98=15.447669, p99=15.447669, p999=15.447669, mean_rate=7.008109331394427, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-05-31 04:15:59,859 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-05-31 04:15:59,859 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-05-31 04:15:59,860 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 5</msg>
<status status="PASS" starttime="20250531 04:15:59.926" endtime="20250531 04:15:59.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:15:59.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:15:59.927" endtime="20250531 04:15:59.927"/>
</kw>
<status status="PASS" starttime="20250531 04:15:56.161" endtime="20250531 04:15:59.927"/>
</kw>
<msg timestamp="20250531 04:15:59.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:56.161" endtime="20250531 04:15:59.928"/>
</kw>
<msg timestamp="20250531 04:15:59.928" level="INFO">${result} = 2025-05-31 04:15:57,480 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:15:57,638 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:15:56.160" endtime="20250531 04:15:59.928"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:15:59.928" endtime="20250531 04:15:59.928"/>
</kw>
<status status="PASS" starttime="20250531 04:15:56.160" endtime="20250531 04:15:59.928"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=auditparser</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:15:59.932" level="INFO">Running command 'ozone freon ockg  -t 1 -n100 -p auditparser  2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:09.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:09.079" level="INFO">${output} = 2025-05-31 04:16:01,263 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:16:01,428 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:15:59.930" endtime="20250531 04:16:09.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:09.080" level="INFO">2025-05-31 04:16:01,263 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:16:01,428 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-05-31 04:16:01,428 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-05-31 04:16:01,599 [main] INFO freon.BaseFreonGenerator: Executing test with prefix auditparser and number-of-tests 100
2025-05-31 04:16:01,652 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-05-31 04:16:02,652 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-05-31 04:16:03,014 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-05-31 04:16:03,157 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-05-31 04:16:03,655 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-05-31 04:16:04,657 [Thread-5] INFO freon.ProgressBar: Progress: 13.00 % (13 out of 100)
2025-05-31 04:16:05,658 [Thread-5] INFO freon.ProgressBar: Progress: 34.00 % (34 out of 100)
2025-05-31 04:16:06,659 [Thread-5] INFO freon.ProgressBar: Progress: 59.00 % (59 out of 100)
2025-05-31 04:16:07,660 [Thread-5] INFO freon.ProgressBar: Progress: 86.00 % (86 out of 100)
2025-05-31 04:16:08,660 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-05-31 04:16:08,687 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=27.816346, max=871.246489, mean=50.271178451090684, stddev=81.4674209692829, median=39.207177, p75=45.763636, p95=63.912332, p98=71.48875, p99=75.825615, p999=871.246489, mean_rate=17.694401700343676, m1=19.4, m5=19.4, m15=19.4, rate_unit=events/second, duration_unit=milliseconds
2025-05-31 04:16:08,687 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2025-05-31 04:16:08,687 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-05-31 04:16:08,687 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250531 04:16:09.079" endtime="20250531 04:16:09.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:09.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:09.080" endtime="20250531 04:16:09.080"/>
</kw>
<status status="PASS" starttime="20250531 04:15:59.930" endtime="20250531 04:16:09.080"/>
</kw>
<msg timestamp="20250531 04:16:09.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:15:59.930" endtime="20250531 04:16:09.081"/>
</kw>
<msg timestamp="20250531 04:16:09.081" level="INFO">${result} = 2025-05-31 04:16:01,263 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:16:01,428 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:15:59.929" endtime="20250531 04:16:09.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:09.081" endtime="20250531 04:16:09.081"/>
</kw>
<status status="PASS" starttime="20250531 04:15:59.928" endtime="20250531 04:16:09.081"/>
</kw>
<status status="PASS" starttime="20250531 04:15:56.159" endtime="20250531 04:16:09.081"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${logdir}</var>
<arg>OZONE_LOG_DIR</arg>
<arg>/var/log/ozone</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20250531 04:16:09.082" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" starttime="20250531 04:16:09.081" endtime="20250531 04:16:09.082"/>
</kw>
<kw name="Execute" library="os">
<var>${logfile}</var>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:09.085" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:09.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:09.089" level="INFO">${output} = om-audit-da4cbd76fc3f.log</msg>
<status status="PASS" starttime="20250531 04:16:09.083" endtime="20250531 04:16:09.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:09.089" level="INFO">om-audit-da4cbd76fc3f.log</msg>
<status status="PASS" starttime="20250531 04:16:09.089" endtime="20250531 04:16:09.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:09.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:09.089" endtime="20250531 04:16:09.090"/>
</kw>
<status status="PASS" starttime="20250531 04:16:09.082" endtime="20250531 04:16:09.090"/>
</kw>
<msg timestamp="20250531 04:16:09.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:09.082" endtime="20250531 04:16:09.090"/>
</kw>
<msg timestamp="20250531 04:16:09.090" level="INFO">${logfile} = om-audit-da4cbd76fc3f.log</msg>
<status status="PASS" starttime="20250531 04:16:09.082" endtime="20250531 04:16:09.090"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone debug auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:09.093" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" load "/var/log/hadoop/om-audit-da4cbd76fc3f.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:11.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:11.310" level="INFO">${output} = /var/log/hadoop/om-audit-da4cbd76fc3f.log has been loaded successfully</msg>
<status status="PASS" starttime="20250531 04:16:09.091" endtime="20250531 04:16:11.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:11.311" level="INFO">/var/log/hadoop/om-audit-da4cbd76fc3f.log has been loaded successfully</msg>
<status status="PASS" starttime="20250531 04:16:11.311" endtime="20250531 04:16:11.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:11.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:11.311" endtime="20250531 04:16:11.312"/>
</kw>
<status status="PASS" starttime="20250531 04:16:09.091" endtime="20250531 04:16:11.312"/>
</kw>
<msg timestamp="20250531 04:16:11.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:09.091" endtime="20250531 04:16:11.312"/>
</kw>
<status status="PASS" starttime="20250531 04:16:09.090" endtime="20250531 04:16:11.312"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone debug auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:11.315" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:12.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:12.783" level="INFO">${output} = READ_BUCKET	111	
ALLOCATE_KEY	101	
COMMIT_KEY	101	
GET_SERVICE_LIST	14	
READ_VOLUME	14	
</msg>
<status status="PASS" starttime="20250531 04:16:11.313" endtime="20250531 04:16:12.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:12.784" level="INFO">READ_BUCKET	111	
ALLOCATE_KEY	101	
COMMIT_KEY	101	
GET_SERVICE_LIST	14	
READ_VOLUME	14	
</msg>
<status status="PASS" starttime="20250531 04:16:12.783" endtime="20250531 04:16:12.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:12.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:12.784" endtime="20250531 04:16:12.784"/>
</kw>
<status status="PASS" starttime="20250531 04:16:11.313" endtime="20250531 04:16:12.785"/>
</kw>
<msg timestamp="20250531 04:16:12.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:11.313" endtime="20250531 04:16:12.785"/>
</kw>
<msg timestamp="20250531 04:16:12.785" level="INFO">${result} = READ_BUCKET	111	
ALLOCATE_KEY	101	
COMMIT_KEY	101	
GET_SERVICE_LIST	14	
READ_VOLUME	14	
</msg>
<status status="PASS" starttime="20250531 04:16:11.312" endtime="20250531 04:16:12.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:12.785" endtime="20250531 04:16:12.785"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone debug auditparser "${auditworkdir}/audit.db" template top5users</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:12.788" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:14.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:14.280" level="INFO">${output} = hadoop	352	
</msg>
<status status="PASS" starttime="20250531 04:16:12.786" endtime="20250531 04:16:14.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:14.281" level="INFO">hadoop	352	
</msg>
<status status="PASS" starttime="20250531 04:16:14.281" endtime="20250531 04:16:14.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:14.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:14.281" endtime="20250531 04:16:14.282"/>
</kw>
<status status="PASS" starttime="20250531 04:16:12.786" endtime="20250531 04:16:14.282"/>
</kw>
<msg timestamp="20250531 04:16:14.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:12.786" endtime="20250531 04:16:14.282"/>
</kw>
<msg timestamp="20250531 04:16:14.282" level="INFO">${result} = hadoop	352	
</msg>
<status status="PASS" starttime="20250531 04:16:12.785" endtime="20250531 04:16:14.282"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:16:14.282" endtime="20250531 04:16:14.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${user}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:14.282" endtime="20250531 04:16:14.283"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone debug auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:14.286" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:15.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:15.840" level="INFO">${output} = 1	
</msg>
<status status="PASS" starttime="20250531 04:16:14.284" endtime="20250531 04:16:15.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:15.841" level="INFO">1	
</msg>
<status status="PASS" starttime="20250531 04:16:15.841" endtime="20250531 04:16:15.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:15.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:15.841" endtime="20250531 04:16:15.842"/>
</kw>
<status status="PASS" starttime="20250531 04:16:14.283" endtime="20250531 04:16:15.842"/>
</kw>
<msg timestamp="20250531 04:16:15.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:14.283" endtime="20250531 04:16:15.842"/>
</kw>
<msg timestamp="20250531 04:16:15.842" level="INFO">${result} = 1	
</msg>
<status status="PASS" starttime="20250531 04:16:14.283" endtime="20250531 04:16:15.842"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${result}</var>
<arg>${result}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20250531 04:16:15.842" level="INFO">${result} = 1.0</msg>
<status status="PASS" starttime="20250531 04:16:15.842" endtime="20250531 04:16:15.842"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${result}&gt;=1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:16:15.842" endtime="20250531 04:16:15.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone debug auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:15.846" level="INFO">Running command 'ozone debug auditparser "/tmp/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:17.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:17.294" level="INFO">${output} = 7	
</msg>
<status status="PASS" starttime="20250531 04:16:15.844" endtime="20250531 04:16:17.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:17.295" level="INFO">7	
</msg>
<status status="PASS" starttime="20250531 04:16:17.295" endtime="20250531 04:16:17.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:17.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:17.295" endtime="20250531 04:16:17.296"/>
</kw>
<status status="PASS" starttime="20250531 04:16:15.844" endtime="20250531 04:16:17.296"/>
</kw>
<msg timestamp="20250531 04:16:17.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:15.843" endtime="20250531 04:16:17.296"/>
</kw>
<msg timestamp="20250531 04:16:17.296" level="INFO">${result} = 7	
</msg>
<status status="PASS" starttime="20250531 04:16:15.843" endtime="20250531 04:16:17.296"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${result}</var>
<arg>${result}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20250531 04:16:17.297" level="INFO">${result} = 7.0</msg>
<status status="PASS" starttime="20250531 04:16:17.296" endtime="20250531 04:16:17.297"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${result}&gt;=${buckets}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:16:17.297" endtime="20250531 04:16:17.297"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:15:56.159" endtime="20250531 04:16:17.297"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250531 04:15:56.135" endtime="20250531 04:16:17.298"/>
</suite>
<status status="PASS" starttime="20250531 04:15:56.119" endtime="20250531 04:16:17.299"/>
</suite>
<suite id="s1-s4" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s4-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s4-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:16:17.849" endtime="20250531 04:16:17.849"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:17.853" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:17.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:17.897" level="INFO">${output} = HTTP/1.1 200 OK
Date: Sat, 31 May 2025 04:16:17 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 12 Mar 2025 22:12:52 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20250531 04:16:17.850" endtime="20250531 04:16:17.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:17.898" level="INFO">HTTP/1.1 200 OK
Date: Sat, 31 May 2025 04:16:17 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 12 Mar 2025 22:12:52 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20250531 04:16:17.897" endtime="20250531 04:16:17.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:17.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:17.898" endtime="20250531 04:16:17.899"/>
</kw>
<status status="PASS" starttime="20250531 04:16:17.850" endtime="20250531 04:16:17.899"/>
</kw>
<msg timestamp="20250531 04:16:17.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:17.850" endtime="20250531 04:16:17.899"/>
</kw>
<msg timestamp="20250531 04:16:17.899" level="INFO">${result} = HTTP/1.1 200 OK
Date: Sat, 31 May 2025 04:16:17 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 12 Mar 2025 22:12:52 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20250531 04:16:17.849" endtime="20250531 04:16:17.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:17.899" endtime="20250531 04:16:17.899"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:16:17.849" endtime="20250531 04:16:17.900"/>
</test>
<test id="s1-s4-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:16:17.901" endtime="20250531 04:16:17.901"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:16:17.901" level="INFO">${random} = hJqqXNtOQz</msg>
<status status="PASS" starttime="20250531 04:16:17.901" endtime="20250531 04:16:17.901"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:17.907" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p hJqqXNtOQz  2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:23.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:23.067" level="INFO">${output} = 2025-05-31 04:16:19,189 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:16:19,351 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:16:17.903" endtime="20250531 04:16:23.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:23.067" level="INFO">2025-05-31 04:16:19,189 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:16:19,351 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-05-31 04:16:19,351 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-05-31 04:16:19,532 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hJqqXNtOQz and number-of-tests 1
2025-05-31 04:16:19,593 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-05-31 04:16:20,599 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-05-31 04:16:21,201 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-05-31 04:16:21,599 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-05-31 04:16:22,600 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-05-31 04:16:22,637 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=972.301977, max=972.301977, mean=972.301977, stddev=0.0, median=972.301977, p75=972.301977, p95=972.301977, p98=972.301977, p99=972.301977, p999=972.301977, mean_rate=0.6355052682948242, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-05-31 04:16:22,639 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-05-31 04:16:22,639 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-05-31 04:16:22,639 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250531 04:16:23.067" endtime="20250531 04:16:23.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:23.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:23.068" endtime="20250531 04:16:23.068"/>
</kw>
<status status="PASS" starttime="20250531 04:16:17.903" endtime="20250531 04:16:23.068"/>
</kw>
<msg timestamp="20250531 04:16:23.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:17.903" endtime="20250531 04:16:23.068"/>
</kw>
<msg timestamp="20250531 04:16:23.068" level="INFO">${result} = 2025-05-31 04:16:19,189 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:16:19,351 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:16:17.902" endtime="20250531 04:16:23.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:23.069" endtime="20250531 04:16:23.069"/>
</kw>
<status status="PASS" starttime="20250531 04:16:17.902" endtime="20250531 04:16:23.069"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:23.073" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p hJqqXNtOQz  2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:28.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:28.308" level="INFO">${output} = 2025-05-31 04:16:24,488 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:16:24,653 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:16:23.071" endtime="20250531 04:16:28.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:28.309" level="INFO">2025-05-31 04:16:24,488 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:16:24,653 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-05-31 04:16:24,654 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-05-31 04:16:24,842 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hJqqXNtOQz and number-of-tests 1
2025-05-31 04:16:24,908 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-05-31 04:16:25,908 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-05-31 04:16:26,405 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-05-31 04:16:26,909 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-05-31 04:16:27,909 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-05-31 04:16:27,925 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=14.867353, max=14.867353, mean=14.867353, stddev=0.0, median=14.867353, p75=14.867353, p95=14.867353, p98=14.867353, p99=14.867353, p999=14.867353, mean_rate=1.1175576967407213, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-05-31 04:16:27,926 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-05-31 04:16:27,926 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-05-31 04:16:27,926 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250531 04:16:28.308" endtime="20250531 04:16:28.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:28.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:28.309" endtime="20250531 04:16:28.309"/>
</kw>
<status status="PASS" starttime="20250531 04:16:23.070" endtime="20250531 04:16:28.310"/>
</kw>
<msg timestamp="20250531 04:16:28.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:23.070" endtime="20250531 04:16:28.310"/>
</kw>
<msg timestamp="20250531 04:16:28.310" level="INFO">${result} = 2025-05-31 04:16:24,488 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:16:24,653 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:16:23.070" endtime="20250531 04:16:28.310"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:28.310" endtime="20250531 04:16:28.310"/>
</kw>
<status status="PASS" starttime="20250531 04:16:23.069" endtime="20250531 04:16:28.310"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:16:17.900" endtime="20250531 04:16:28.311"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250531 04:16:17.825" endtime="20250531 04:16:28.311"/>
</suite>
<suite id="s1-s4-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s4-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:28.318" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:29.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:29.341" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250531 04:16:28.316" endtime="20250531 04:16:29.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:29.342" level="INFO">om</msg>
<status status="PASS" starttime="20250531 04:16:29.342" endtime="20250531 04:16:29.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:29.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:29.342" endtime="20250531 04:16:29.343"/>
</kw>
<status status="PASS" starttime="20250531 04:16:28.316" endtime="20250531 04:16:29.343"/>
</kw>
<msg timestamp="20250531 04:16:29.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:28.316" endtime="20250531 04:16:29.343"/>
</kw>
<msg timestamp="20250531 04:16:29.343" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250531 04:16:28.315" endtime="20250531 04:16:29.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:29.343" endtime="20250531 04:16:29.343"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:29.346" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:30.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:30.367" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250531 04:16:29.344" endtime="20250531 04:16:30.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:30.368" level="INFO">om</msg>
<status status="PASS" starttime="20250531 04:16:30.368" endtime="20250531 04:16:30.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:30.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:30.368" endtime="20250531 04:16:30.369"/>
</kw>
<status status="PASS" starttime="20250531 04:16:29.344" endtime="20250531 04:16:30.369"/>
</kw>
<msg timestamp="20250531 04:16:30.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:29.344" endtime="20250531 04:16:30.369"/>
</kw>
<msg timestamp="20250531 04:16:30.369" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250531 04:16:29.344" endtime="20250531 04:16:30.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:30.369" endtime="20250531 04:16:30.369"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:16:28.315" endtime="20250531 04:16:30.370"/>
</test>
<test id="s1-s4-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:30.374" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:31.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:31.414" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250531 04:16:30.371" endtime="20250531 04:16:31.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:31.415" level="INFO">scm</msg>
<status status="PASS" starttime="20250531 04:16:31.415" endtime="20250531 04:16:31.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:31.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:31.415" endtime="20250531 04:16:31.416"/>
</kw>
<status status="PASS" starttime="20250531 04:16:30.371" endtime="20250531 04:16:31.416"/>
</kw>
<msg timestamp="20250531 04:16:31.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:30.371" endtime="20250531 04:16:31.416"/>
</kw>
<msg timestamp="20250531 04:16:31.416" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20250531 04:16:30.371" endtime="20250531 04:16:31.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:31.416" endtime="20250531 04:16:31.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:31.419" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:32.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:32.418" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250531 04:16:31.417" endtime="20250531 04:16:32.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:32.418" level="INFO">scm</msg>
<status status="PASS" starttime="20250531 04:16:32.418" endtime="20250531 04:16:32.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:32.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:32.419" endtime="20250531 04:16:32.419"/>
</kw>
<status status="PASS" starttime="20250531 04:16:31.417" endtime="20250531 04:16:32.419"/>
</kw>
<msg timestamp="20250531 04:16:32.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:31.417" endtime="20250531 04:16:32.419"/>
</kw>
<msg timestamp="20250531 04:16:32.419" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20250531 04:16:31.416" endtime="20250531 04:16:32.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:32.419" endtime="20250531 04:16:32.420"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:16:30.370" endtime="20250531 04:16:32.420"/>
</test>
<test id="s1-s4-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:32.423" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:33.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:33.306" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250531 04:16:32.421" endtime="20250531 04:16:33.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:33.307" level="INFO">om</msg>
<status status="PASS" starttime="20250531 04:16:33.306" endtime="20250531 04:16:33.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:33.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:33.307" endtime="20250531 04:16:33.307"/>
</kw>
<status status="PASS" starttime="20250531 04:16:32.421" endtime="20250531 04:16:33.307"/>
</kw>
<msg timestamp="20250531 04:16:33.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:32.421" endtime="20250531 04:16:33.307"/>
</kw>
<msg timestamp="20250531 04:16:33.308" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250531 04:16:32.421" endtime="20250531 04:16:33.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:33.308" endtime="20250531 04:16:33.308"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:33.308" endtime="20250531 04:16:33.308"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:33.311" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:34.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:34.191" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250531 04:16:33.309" endtime="20250531 04:16:34.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:34.192" level="INFO">om</msg>
<status status="PASS" starttime="20250531 04:16:34.192" endtime="20250531 04:16:34.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:34.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:34.192" endtime="20250531 04:16:34.193"/>
</kw>
<status status="PASS" starttime="20250531 04:16:33.309" endtime="20250531 04:16:34.193"/>
</kw>
<msg timestamp="20250531 04:16:34.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:33.309" endtime="20250531 04:16:34.193"/>
</kw>
<msg timestamp="20250531 04:16:34.193" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250531 04:16:33.308" endtime="20250531 04:16:34.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:34.193" endtime="20250531 04:16:34.193"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:34.193" endtime="20250531 04:16:34.194"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:16:32.420" endtime="20250531 04:16:34.194"/>
</test>
<test id="s1-s4-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:34.197" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:35.089" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:16:35.089" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250531 04:16:34.195" endtime="20250531 04:16:35.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:35.090" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250531 04:16:35.089" endtime="20250531 04:16:35.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:35.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:35.090" endtime="20250531 04:16:35.090"/>
</kw>
<msg timestamp="20250531 04:16:35.091" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250531 04:16:34.195" endtime="20250531 04:16:35.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:35.091" endtime="20250531 04:16:35.091"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:35.094" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:36.002" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:16:36.002" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250531 04:16:35.091" endtime="20250531 04:16:36.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:36.003" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250531 04:16:36.003" endtime="20250531 04:16:36.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:36.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:36.003" endtime="20250531 04:16:36.004"/>
</kw>
<msg timestamp="20250531 04:16:36.004" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250531 04:16:35.091" endtime="20250531 04:16:36.004"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:36.004" endtime="20250531 04:16:36.005"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:16:34.194" endtime="20250531 04:16:36.005"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20250531 04:16:28.312" endtime="20250531 04:16:36.006"/>
</suite>
<suite id="s1-s4-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:16:36.024" level="INFO">${random} = 27795</msg>
<status status="PASS" starttime="20250531 04:16:36.024" endtime="20250531 04:16:36.024"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250531 04:16:36.025" level="INFO">${source} = 27795-source</msg>
<status status="PASS" starttime="20250531 04:16:36.024" endtime="20250531 04:16:36.026"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250531 04:16:36.027" level="INFO">${target} = 27795-target</msg>
<status status="PASS" starttime="20250531 04:16:36.026" endtime="20250531 04:16:36.027"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>volume create ${source}</arg>
<arg>volume create ${target}</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250531 04:16:36.027" level="INFO">${cmd} = volume create 27795-source' --execute 'volume create 27795-target</msg>
<status status="PASS" starttime="20250531 04:16:36.027" endtime="20250531 04:16:36.027"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:36.031" level="INFO">Running command 'ozone sh --execute 'volume create 27795-source' --execute 'volume create 27795-target' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:39.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:39.018" level="INFO">${output} = volume create 27795-source
volume create 27795-target</msg>
<status status="PASS" starttime="20250531 04:16:36.028" endtime="20250531 04:16:39.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:39.019" level="INFO">volume create 27795-source
volume create 27795-target</msg>
<status status="PASS" starttime="20250531 04:16:39.019" endtime="20250531 04:16:39.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:39.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:39.019" endtime="20250531 04:16:39.019"/>
</kw>
<status status="PASS" starttime="20250531 04:16:36.028" endtime="20250531 04:16:39.020"/>
</kw>
<msg timestamp="20250531 04:16:39.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:36.027" endtime="20250531 04:16:39.020"/>
</kw>
<status status="PASS" starttime="20250531 04:16:36.027" endtime="20250531 04:16:39.020"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:16:39.020" endtime="20250531 04:16:39.020"/>
</kw>
<status status="PASS" starttime="20250531 04:16:36.024" endtime="20250531 04:16:39.020"/>
</kw>
<test id="s1-s4-s3-t1" name="Link to non-existent bucket" line="91">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:16:39.021" endtime="20250531 04:16:39.021"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:39.024" level="INFO">Running command 'ozone sh bucket link 27795-source/no-such-bucket 27795-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:42.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:42.002" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:16:39.022" endtime="20250531 04:16:42.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:42.003" level="INFO"/>
<status status="PASS" starttime="20250531 04:16:42.002" endtime="20250531 04:16:42.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:42.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:42.003" endtime="20250531 04:16:42.004"/>
</kw>
<status status="PASS" starttime="20250531 04:16:39.022" endtime="20250531 04:16:42.004"/>
</kw>
<msg timestamp="20250531 04:16:42.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:39.022" endtime="20250531 04:16:42.004"/>
</kw>
<status status="PASS" starttime="20250531 04:16:39.021" endtime="20250531 04:16:42.004"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:42.007" level="INFO">Running command 'ozone sh key list 27795-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:44.881" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:16:44.881" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found: 27795-source/no-such-bucket</msg>
<status status="PASS" starttime="20250531 04:16:42.004" endtime="20250531 04:16:44.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:44.882" level="INFO">BUCKET_NOT_FOUND Bucket not found: 27795-source/no-such-bucket</msg>
<status status="PASS" starttime="20250531 04:16:44.881" endtime="20250531 04:16:44.882"/>
</kw>
<msg timestamp="20250531 04:16:44.882" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found: 27795-source/no-such-bucket</msg>
<status status="PASS" starttime="20250531 04:16:42.004" endtime="20250531 04:16:44.882"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:16:44.882" endtime="20250531 04:16:44.882"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:16:39.020" endtime="20250531 04:16:44.882"/>
</test>
<test id="s1-s4-s3-t2" name="Key create passthrough" line="96">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:16:44.883" endtime="20250531 04:16:44.884"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket link ${source}/bucket1 ${target}/link1</arg>
<arg>bucket create ${source}/bucket1</arg>
<arg>key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250531 04:16:44.884" level="INFO">${cmd} = bucket link 27795-source/bucket1 27795-target/link1' --execute 'bucket create 27795-source/bucket1' --execute 'key put 27795-target/link1/key1 /etc/passwd</msg>
<status status="PASS" starttime="20250531 04:16:44.884" endtime="20250531 04:16:44.884"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:44.887" level="INFO">Running command 'ozone sh --execute 'bucket link 27795-source/bucket1 27795-target/link1' --execute 'bucket create 27795-source/bucket1' --execute 'key put 27795-target/link1/key1 /etc/passwd' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:49.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:49.413" level="INFO">${output} = bucket link 27795-source/bucket1 27795-target/link1
bucket create 27795-source/bucket1
key put 27795-target/link1/key1 /etc/passwd</msg>
<status status="PASS" starttime="20250531 04:16:44.885" endtime="20250531 04:16:49.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:49.414" level="INFO">bucket link 27795-source/bucket1 27795-target/link1
bucket create 27795-source/bucket1
key put 27795-target/link1/key1 /etc/passwd</msg>
<status status="PASS" starttime="20250531 04:16:49.413" endtime="20250531 04:16:49.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:49.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:49.414" endtime="20250531 04:16:49.414"/>
</kw>
<status status="PASS" starttime="20250531 04:16:44.885" endtime="20250531 04:16:49.414"/>
</kw>
<msg timestamp="20250531 04:16:49.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:44.885" endtime="20250531 04:16:49.414"/>
</kw>
<status status="PASS" starttime="20250531 04:16:44.884" endtime="20250531 04:16:49.414"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:16:49.416" level="INFO">${postfix} = 14941</msg>
<status status="PASS" starttime="20250531 04:16:49.415" endtime="20250531 04:16:49.416"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250531 04:16:49.416" level="INFO">${tmpfile} = /tmp/tempkey-14941</msg>
<status status="PASS" starttime="20250531 04:16:49.416" endtime="20250531 04:16:49.416"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:49.419" level="INFO">Running command 'ozone sh key get 27795-target/link1/key1 /tmp/tempkey-14941 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:53.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:53.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:16:49.417" endtime="20250531 04:16:53.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:53.604" level="INFO"/>
<status status="PASS" starttime="20250531 04:16:53.603" endtime="20250531 04:16:53.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:53.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:53.604" endtime="20250531 04:16:53.604"/>
</kw>
<status status="PASS" starttime="20250531 04:16:49.417" endtime="20250531 04:16:53.604"/>
</kw>
<msg timestamp="20250531 04:16:53.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:49.416" endtime="20250531 04:16:53.604"/>
</kw>
<status status="PASS" starttime="20250531 04:16:49.416" endtime="20250531 04:16:53.604"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250531 04:16:53.607" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-14941 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:53.609" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250531 04:16:53.605" endtime="20250531 04:16:53.609"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:53.613" level="INFO">Running command 'rm -f /tmp/tempkey-14941 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:53.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:53.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:16:53.611" endtime="20250531 04:16:53.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:53.617" level="INFO"/>
<status status="PASS" starttime="20250531 04:16:53.616" endtime="20250531 04:16:53.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:53.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:53.617" endtime="20250531 04:16:53.617"/>
</kw>
<status status="PASS" starttime="20250531 04:16:53.610" endtime="20250531 04:16:53.617"/>
</kw>
<msg timestamp="20250531 04:16:53.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:53.610" endtime="20250531 04:16:53.617"/>
</kw>
<status status="PASS" starttime="20250531 04:16:53.610" endtime="20250531 04:16:53.617"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:16:53.618" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250531 04:16:53.618" endtime="20250531 04:16:53.618"/>
</kw>
<msg timestamp="20250531 04:16:53.618" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250531 04:16:49.415" endtime="20250531 04:16:53.618"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:16:53.618" endtime="20250531 04:16:53.618"/>
</kw>
<status status="PASS" starttime="20250531 04:16:49.415" endtime="20250531 04:16:53.618"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:16:44.883" endtime="20250531 04:16:53.619"/>
</test>
<test id="s1-s4-s3-t3" name="Key read passthrough" line="102">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:16:53.619" endtime="20250531 04:16:53.620"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:53.622" level="INFO">Running command 'ozone sh key put 27795-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:16:58.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:16:58.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:16:53.620" endtime="20250531 04:16:58.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:16:58.213" level="INFO"/>
<status status="PASS" starttime="20250531 04:16:58.212" endtime="20250531 04:16:58.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:16:58.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:16:58.213" endtime="20250531 04:16:58.213"/>
</kw>
<status status="PASS" starttime="20250531 04:16:53.620" endtime="20250531 04:16:58.213"/>
</kw>
<msg timestamp="20250531 04:16:58.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:53.620" endtime="20250531 04:16:58.213"/>
</kw>
<status status="PASS" starttime="20250531 04:16:53.620" endtime="20250531 04:16:58.213"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:16:58.215" level="INFO">${postfix} = 56222</msg>
<status status="PASS" starttime="20250531 04:16:58.214" endtime="20250531 04:16:58.215"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250531 04:16:58.215" level="INFO">${tmpfile} = /tmp/tempkey-56222</msg>
<status status="PASS" starttime="20250531 04:16:58.215" endtime="20250531 04:16:58.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:16:58.218" level="INFO">Running command 'ozone sh key get 27795-source/bucket1/key2 /tmp/tempkey-56222 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:02.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:02.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:16:58.216" endtime="20250531 04:17:02.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:02.471" level="INFO"/>
<status status="PASS" starttime="20250531 04:17:02.471" endtime="20250531 04:17:02.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:02.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:02.471" endtime="20250531 04:17:02.471"/>
</kw>
<status status="PASS" starttime="20250531 04:16:58.216" endtime="20250531 04:17:02.472"/>
</kw>
<msg timestamp="20250531 04:17:02.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:16:58.215" endtime="20250531 04:17:02.472"/>
</kw>
<status status="PASS" starttime="20250531 04:16:58.215" endtime="20250531 04:17:02.472"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250531 04:17:02.474" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-56222 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:02.477" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250531 04:17:02.472" endtime="20250531 04:17:02.477"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:02.480" level="INFO">Running command 'rm -f /tmp/tempkey-56222 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:02.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:02.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:17:02.478" endtime="20250531 04:17:02.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:02.484" level="INFO"/>
<status status="PASS" starttime="20250531 04:17:02.483" endtime="20250531 04:17:02.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:02.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:02.484" endtime="20250531 04:17:02.484"/>
</kw>
<status status="PASS" starttime="20250531 04:17:02.478" endtime="20250531 04:17:02.484"/>
</kw>
<msg timestamp="20250531 04:17:02.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:02.477" endtime="20250531 04:17:02.485"/>
</kw>
<status status="PASS" starttime="20250531 04:17:02.477" endtime="20250531 04:17:02.485"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:17:02.485" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250531 04:17:02.485" endtime="20250531 04:17:02.485"/>
</kw>
<msg timestamp="20250531 04:17:02.485" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250531 04:16:58.214" endtime="20250531 04:17:02.485"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:17:02.485" endtime="20250531 04:17:02.486"/>
</kw>
<status status="PASS" starttime="20250531 04:16:58.214" endtime="20250531 04:17:02.486"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:16:53.619" endtime="20250531 04:17:02.486"/>
</test>
<test id="s1-s4-s3-t4" name="Key list passthrough" line="106">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:17:02.487" endtime="20250531 04:17:02.487"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:02.489" level="INFO">Running command 'ozone sh key list 27795-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:05.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:05.669" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20250531 04:17:02.488" endtime="20250531 04:17:05.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:05.670" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20250531 04:17:05.670" endtime="20250531 04:17:05.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:05.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:05.670" endtime="20250531 04:17:05.671"/>
</kw>
<status status="PASS" starttime="20250531 04:17:02.487" endtime="20250531 04:17:05.671"/>
</kw>
<msg timestamp="20250531 04:17:05.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:02.487" endtime="20250531 04:17:05.671"/>
</kw>
<msg timestamp="20250531 04:17:05.671" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20250531 04:17:02.487" endtime="20250531 04:17:05.671"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:05.674" level="INFO">Running command 'ozone sh key list 27795-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:08.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:08.843" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20250531 04:17:05.672" endtime="20250531 04:17:08.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:08.844" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20250531 04:17:08.844" endtime="20250531 04:17:08.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:08.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:08.844" endtime="20250531 04:17:08.845"/>
</kw>
<status status="PASS" starttime="20250531 04:17:05.672" endtime="20250531 04:17:08.845"/>
</kw>
<msg timestamp="20250531 04:17:08.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:05.672" endtime="20250531 04:17:08.845"/>
</kw>
<msg timestamp="20250531 04:17:08.845" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20250531 04:17:05.671" endtime="20250531 04:17:08.845"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:17:08.845" endtime="20250531 04:17:08.845"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:17:08.845" endtime="20250531 04:17:08.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:17:08.846" endtime="20250531 04:17:08.846"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:17:02.486" endtime="20250531 04:17:08.846"/>
</test>
<test id="s1-s4-s3-t5" name="Key delete passthrough" line="113">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:17:08.847" endtime="20250531 04:17:08.847"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:08.850" level="INFO">Running command 'ozone sh key delete 27795-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:11.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:11.876" level="INFO">${output} = Key moved inside Trash: /.Trash/hadoop/Current/key2 </msg>
<status status="PASS" starttime="20250531 04:17:08.848" endtime="20250531 04:17:11.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:11.877" level="INFO">Key moved inside Trash: /.Trash/hadoop/Current/key2 </msg>
<status status="PASS" starttime="20250531 04:17:11.877" endtime="20250531 04:17:11.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:11.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:11.878" endtime="20250531 04:17:11.878"/>
</kw>
<status status="PASS" starttime="20250531 04:17:08.848" endtime="20250531 04:17:11.878"/>
</kw>
<msg timestamp="20250531 04:17:11.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:08.848" endtime="20250531 04:17:11.878"/>
</kw>
<status status="PASS" starttime="20250531 04:17:08.848" endtime="20250531 04:17:11.878"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket1keys}</var>
<arg>ozone sh key list ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:11.882" level="INFO">Running command 'ozone sh key list 27795-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:15.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:15.024" level="INFO">${output} = [ {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:17:11.743Z",
  "modificationTime" : "20...</msg>
<status status="PASS" starttime="20250531 04:17:11.880" endtime="20250531 04:17:15.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:15.025" level="INFO">[ {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:17:11.743Z",
  "modificationTime" : "2025-05-31T04:17:11.743Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:17:11.743Z",
  "modificationTime" : "2025-05-31T04:17:11.743Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:17:11.743Z",
  "modificationTime" : "2025-05-31T04:17:11.760Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/Current/key2",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-05-31T04:16:56.670Z",
  "modificationTime" : "2025-05-31T04:16:57.785Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "hadoop",
  "dataSize" : 1062,
  "creationTime" : "2025-05-31T04:16:47.899Z",
  "modificationTime" : "2025-05-31T04:16:48.998Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250531 04:17:15.024" endtime="20250531 04:17:15.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:15.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:15.025" endtime="20250531 04:17:15.025"/>
</kw>
<status status="PASS" starttime="20250531 04:17:11.879" endtime="20250531 04:17:15.025"/>
</kw>
<msg timestamp="20250531 04:17:15.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:11.879" endtime="20250531 04:17:15.026"/>
</kw>
<msg timestamp="20250531 04:17:15.026" level="INFO">${bucket1keys} = [ {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:17:11.743Z",
  "modificationTime" : "20...</msg>
<status status="PASS" starttime="20250531 04:17:11.878" endtime="20250531 04:17:15.026"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:15.029" level="INFO">Running command 'echo '[ {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:17:11.743Z",
  "modificationTime" : "2025-05-31T04:17:11.743Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:17:11.743Z",
  "modificationTime" : "2025-05-31T04:17:11.743Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:17:11.743Z",
  "modificationTime" : "2025-05-31T04:17:11.760Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/Current/key2",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-05-31T04:16:56.670Z",
  "modificationTime" : "2025-05-31T04:16:57.785Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "hadoop",
  "dataSize" : 1062,
  "creationTime" : "2025-05-31T04:16:47.899Z",
  "modificationTime" : "2025-05-31T04:16:48.998Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash")) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:15.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:15.034" level="INFO">${output} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/key2</msg>
<status status="PASS" starttime="20250531 04:17:15.027" endtime="20250531 04:17:15.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:15.035" level="INFO">.Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/key2</msg>
<status status="PASS" starttime="20250531 04:17:15.034" endtime="20250531 04:17:15.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:15.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:15.035" endtime="20250531 04:17:15.035"/>
</kw>
<status status="PASS" starttime="20250531 04:17:15.026" endtime="20250531 04:17:15.035"/>
</kw>
<msg timestamp="20250531 04:17:15.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:15.026" endtime="20250531 04:17:15.036"/>
</kw>
<msg timestamp="20250531 04:17:15.036" level="INFO">${source_list} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/key2</msg>
<status status="PASS" starttime="20250531 04:17:15.026" endtime="20250531 04:17:15.036"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${source_list}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250531 04:17:15.036" endtime="20250531 04:17:15.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:17:15.036" endtime="20250531 04:17:15.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:15.039" level="INFO">Running command 'echo '[ {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:17:11.743Z",
  "modificationTime" : "2025-05-31T04:17:11.743Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:17:11.743Z",
  "modificationTime" : "2025-05-31T04:17:11.743Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:17:11.743Z",
  "modificationTime" : "2025-05-31T04:17:11.760Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/Current/key2",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-05-31T04:16:56.670Z",
  "modificationTime" : "2025-05-31T04:16:57.785Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "27795-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "hadoop",
  "dataSize" : 1062,
  "creationTime" : "2025-05-31T04:16:47.899Z",
  "modificationTime" : "2025-05-31T04:16:48.998Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:15.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:15.044" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250531 04:17:15.037" endtime="20250531 04:17:15.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:15.045" level="INFO">key1</msg>
<status status="PASS" starttime="20250531 04:17:15.045" endtime="20250531 04:17:15.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:15.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:15.045" endtime="20250531 04:17:15.046"/>
</kw>
<status status="PASS" starttime="20250531 04:17:15.037" endtime="20250531 04:17:15.046"/>
</kw>
<msg timestamp="20250531 04:17:15.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:15.037" endtime="20250531 04:17:15.046"/>
</kw>
<msg timestamp="20250531 04:17:15.046" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20250531 04:17:15.036" endtime="20250531 04:17:15.046"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:17:15.046" endtime="20250531 04:17:15.046"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:17:08.847" endtime="20250531 04:17:15.047"/>
</test>
<test id="s1-s4-s3-t6" name="Bucket list contains links" line="122">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:17:15.047" endtime="20250531 04:17:15.048"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:15.051" level="INFO">Running command 'ozone sh bucket list 27795-target 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:18.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:18.073" level="INFO">${output} = [ {
  "volumeName" : "27795-target",
  "name" : "dangling-link",
  "sourceVolume" : "27795-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-05-31T04:16:41.907Z",
  "modificationT...</msg>
<status status="PASS" starttime="20250531 04:17:15.049" endtime="20250531 04:17:18.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:18.074" level="INFO">[ {
  "volumeName" : "27795-target",
  "name" : "dangling-link",
  "sourceVolume" : "27795-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-05-31T04:16:41.907Z",
  "modificationTime" : "2025-05-31T04:16:41.907Z",
  "owner" : "hadoop",
  "link" : true
}, {
  "volumeName" : "27795-target",
  "name" : "link1",
  "sourceVolume" : "27795-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-05-31T04:16:47.812Z",
  "modificationTime" : "2025-05-31T04:16:47.812Z",
  "owner" : "hadoop",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20250531 04:17:18.073" endtime="20250531 04:17:18.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:18.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:18.074" endtime="20250531 04:17:18.074"/>
</kw>
<status status="PASS" starttime="20250531 04:17:15.048" endtime="20250531 04:17:18.074"/>
</kw>
<msg timestamp="20250531 04:17:18.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:15.048" endtime="20250531 04:17:18.074"/>
</kw>
<msg timestamp="20250531 04:17:18.075" level="INFO">${result} = [ {
  "volumeName" : "27795-target",
  "name" : "dangling-link",
  "sourceVolume" : "27795-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-05-31T04:16:41.907Z",
  "modificationT...</msg>
<status status="PASS" starttime="20250531 04:17:15.048" endtime="20250531 04:17:18.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:17:18.075" endtime="20250531 04:17:18.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:17:18.075" endtime="20250531 04:17:18.075"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:17:15.047" endtime="20250531 04:17:18.075"/>
</test>
<test id="s1-s4-s3-t7" name="Bucket info shows source" line="127">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:17:18.076" endtime="20250531 04:17:18.077"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:18.080" level="INFO">Running command 'ozone sh bucket info 27795-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:21.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:21.216" level="INFO">${output} = {
  "volumeName" : "27795-target",
  "name" : "link1",
  "sourceVolume" : "27795-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-05-31T04:16:47.812Z",
  "modificationTime" : "2025-05-3...</msg>
<status status="PASS" starttime="20250531 04:17:18.078" endtime="20250531 04:17:21.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:21.217" level="INFO">{
  "volumeName" : "27795-target",
  "name" : "link1",
  "sourceVolume" : "27795-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-05-31T04:16:47.812Z",
  "modificationTime" : "2025-05-31T04:16:47.812Z",
  "owner" : "hadoop",
  "link" : true
}</msg>
<status status="PASS" starttime="20250531 04:17:21.217" endtime="20250531 04:17:21.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:21.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:21.218" endtime="20250531 04:17:21.218"/>
</kw>
<status status="PASS" starttime="20250531 04:17:18.077" endtime="20250531 04:17:21.218"/>
</kw>
<msg timestamp="20250531 04:17:21.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:18.077" endtime="20250531 04:17:21.218"/>
</kw>
<msg timestamp="20250531 04:17:21.218" level="INFO">${result} = {
  "volumeName" : "27795-target",
  "name" : "link1",
  "sourceVolume" : "27795-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-05-31T04:16:47.812Z",
  "modificationTime" : "2025-05-3...</msg>
<status status="PASS" starttime="20250531 04:17:18.077" endtime="20250531 04:17:21.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:17:21.218" endtime="20250531 04:17:21.219"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:17:21.219" endtime="20250531 04:17:21.219"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:17:21.219" endtime="20250531 04:17:21.219"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:17:21.219" endtime="20250531 04:17:21.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:17:21.220" endtime="20250531 04:17:21.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:17:21.220" endtime="20250531 04:17:21.220"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:17:21.220" endtime="20250531 04:17:21.220"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:17:18.076" endtime="20250531 04:17:21.221"/>
</test>
<test id="s1-s4-s3-t8" name="Source and target bucket have different ACLs" line="137">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:17:21.222" endtime="20250531 04:17:21.222"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:21.225" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 27795-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:24.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:24.099" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:17:21.223" endtime="20250531 04:17:24.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:24.100" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:17:24.100" endtime="20250531 04:17:24.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:24.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:24.100" endtime="20250531 04:17:24.101"/>
</kw>
<status status="PASS" starttime="20250531 04:17:21.222" endtime="20250531 04:17:24.101"/>
</kw>
<msg timestamp="20250531 04:17:24.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:21.222" endtime="20250531 04:17:24.101"/>
</kw>
<status status="PASS" starttime="20250531 04:17:21.222" endtime="20250531 04:17:24.101"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:24.105" level="INFO">Running command 'ozone sh bucket getacl 27795-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:27.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:27.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:17:24.103" endtime="20250531 04:17:27.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:27.135" level="INFO"/>
<status status="PASS" starttime="20250531 04:17:27.134" endtime="20250531 04:17:27.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:27.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:27.135" endtime="20250531 04:17:27.135"/>
</kw>
<status status="PASS" starttime="20250531 04:17:24.103" endtime="20250531 04:17:27.136"/>
</kw>
<msg timestamp="20250531 04:17:27.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:24.103" endtime="20250531 04:17:27.136"/>
</kw>
<msg timestamp="20250531 04:17:27.136" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250531 04:17:24.102" endtime="20250531 04:17:27.136"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:17:27.136" endtime="20250531 04:17:27.136"/>
</kw>
<status status="PASS" starttime="20250531 04:17:24.101" endtime="20250531 04:17:27.136"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source=false</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:27.141" level="INFO">Running command 'ozone sh bucket getacl --source=false 27795-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:30.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:30.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:17:27.139" endtime="20250531 04:17:30.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:30.105" level="INFO"/>
<status status="PASS" starttime="20250531 04:17:30.104" endtime="20250531 04:17:30.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:30.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:30.105" endtime="20250531 04:17:30.105"/>
</kw>
<status status="PASS" starttime="20250531 04:17:27.138" endtime="20250531 04:17:30.106"/>
</kw>
<msg timestamp="20250531 04:17:30.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:27.138" endtime="20250531 04:17:30.106"/>
</kw>
<msg timestamp="20250531 04:17:30.106" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250531 04:17:27.137" endtime="20250531 04:17:30.106"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:17:30.106" endtime="20250531 04:17:30.106"/>
</kw>
<status status="PASS" starttime="20250531 04:17:27.136" endtime="20250531 04:17:30.107"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:30.110" level="INFO">Running command 'ozone sh bucket getacl --source 27795-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:33.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:33.081" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:17:30.108" endtime="20250531 04:17:33.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:33.082" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:17:33.081" endtime="20250531 04:17:33.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:33.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:33.082" endtime="20250531 04:17:33.082"/>
</kw>
<status status="PASS" starttime="20250531 04:17:30.108" endtime="20250531 04:17:33.082"/>
</kw>
<msg timestamp="20250531 04:17:33.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:30.108" endtime="20250531 04:17:33.082"/>
</kw>
<msg timestamp="20250531 04:17:33.082" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:17:30.107" endtime="20250531 04:17:33.083"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:17:33.083" endtime="20250531 04:17:33.083"/>
</kw>
<status status="PASS" starttime="20250531 04:17:30.107" endtime="20250531 04:17:33.083"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:33.086" level="INFO">Running command 'ozone sh bucket getacl 27795-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:35.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:35.938" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:17:33.084" endtime="20250531 04:17:35.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:35.939" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:17:35.939" endtime="20250531 04:17:35.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:35.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:35.939" endtime="20250531 04:17:35.940"/>
</kw>
<status status="PASS" starttime="20250531 04:17:33.084" endtime="20250531 04:17:35.940"/>
</kw>
<msg timestamp="20250531 04:17:35.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:33.084" endtime="20250531 04:17:35.940"/>
</kw>
<msg timestamp="20250531 04:17:35.940" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:17:33.083" endtime="20250531 04:17:35.940"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:17:35.940" endtime="20250531 04:17:35.940"/>
</kw>
<status status="PASS" starttime="20250531 04:17:33.083" endtime="20250531 04:17:35.940"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket removeacl --acl user:user1:y ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:35.945" level="INFO">Running command 'ozone sh bucket removeacl --acl user:user1:y 27795-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:38.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:38.844" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:17:35.942" endtime="20250531 04:17:38.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:38.845" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:17:38.845" endtime="20250531 04:17:38.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:38.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:38.845" endtime="20250531 04:17:38.846"/>
</kw>
<status status="PASS" starttime="20250531 04:17:35.941" endtime="20250531 04:17:38.846"/>
</kw>
<msg timestamp="20250531 04:17:38.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:35.941" endtime="20250531 04:17:38.846"/>
</kw>
<status status="PASS" starttime="20250531 04:17:35.941" endtime="20250531 04:17:38.846"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:38.850" level="INFO">Running command 'ozone sh bucket getacl 27795-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:41.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:41.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:17:38.848" endtime="20250531 04:17:41.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:41.870" level="INFO"/>
<status status="PASS" starttime="20250531 04:17:41.870" endtime="20250531 04:17:41.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:41.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:41.870" endtime="20250531 04:17:41.871"/>
</kw>
<status status="PASS" starttime="20250531 04:17:38.848" endtime="20250531 04:17:41.871"/>
</kw>
<msg timestamp="20250531 04:17:41.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:38.847" endtime="20250531 04:17:41.871"/>
</kw>
<msg timestamp="20250531 04:17:41.871" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250531 04:17:38.847" endtime="20250531 04:17:41.871"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:17:41.871" endtime="20250531 04:17:41.871"/>
</kw>
<status status="PASS" starttime="20250531 04:17:38.846" endtime="20250531 04:17:41.872"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:41.875" level="INFO">Running command 'ozone sh bucket getacl --source 27795-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:44.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:44.921" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:17:41.873" endtime="20250531 04:17:44.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:44.922" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:17:44.921" endtime="20250531 04:17:44.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:44.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:44.922" endtime="20250531 04:17:44.922"/>
</kw>
<status status="PASS" starttime="20250531 04:17:41.873" endtime="20250531 04:17:44.922"/>
</kw>
<msg timestamp="20250531 04:17:44.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:41.873" endtime="20250531 04:17:44.923"/>
</kw>
<msg timestamp="20250531 04:17:44.923" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:17:41.872" endtime="20250531 04:17:44.923"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:17:44.923" endtime="20250531 04:17:44.923"/>
</kw>
<status status="PASS" starttime="20250531 04:17:41.872" endtime="20250531 04:17:44.923"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setacl --acl user:user1:rw ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:44.926" level="INFO">Running command 'ozone sh bucket setacl --acl user:user1:rw 27795-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:47.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:47.665" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:17:44.924" endtime="20250531 04:17:47.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:47.666" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:17:47.665" endtime="20250531 04:17:47.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:47.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:47.666" endtime="20250531 04:17:47.666"/>
</kw>
<status status="PASS" starttime="20250531 04:17:44.924" endtime="20250531 04:17:47.666"/>
</kw>
<msg timestamp="20250531 04:17:47.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:44.924" endtime="20250531 04:17:47.666"/>
</kw>
<status status="PASS" starttime="20250531 04:17:44.923" endtime="20250531 04:17:47.667"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:47.671" level="INFO">Running command 'ozone sh bucket getacl 27795-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:50.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:50.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:17:47.669" endtime="20250531 04:17:50.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:50.606" level="INFO"/>
<status status="PASS" starttime="20250531 04:17:50.605" endtime="20250531 04:17:50.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:50.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:50.606" endtime="20250531 04:17:50.606"/>
</kw>
<status status="PASS" starttime="20250531 04:17:47.668" endtime="20250531 04:17:50.606"/>
</kw>
<msg timestamp="20250531 04:17:50.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:47.668" endtime="20250531 04:17:50.607"/>
</kw>
<msg timestamp="20250531 04:17:50.607" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250531 04:17:47.667" endtime="20250531 04:17:50.607"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:17:50.607" endtime="20250531 04:17:50.607"/>
</kw>
<status status="PASS" starttime="20250531 04:17:47.667" endtime="20250531 04:17:50.607"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:50.611" level="INFO">Running command 'ozone sh bucket getacl --source 27795-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:53.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:53.653" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250531 04:17:50.609" endtime="20250531 04:17:53.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:53.654" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250531 04:17:53.654" endtime="20250531 04:17:53.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:53.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:53.654" endtime="20250531 04:17:53.655"/>
</kw>
<status status="PASS" starttime="20250531 04:17:50.608" endtime="20250531 04:17:53.655"/>
</kw>
<msg timestamp="20250531 04:17:53.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:50.608" endtime="20250531 04:17:53.655"/>
</kw>
<msg timestamp="20250531 04:17:53.655" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250531 04:17:50.608" endtime="20250531 04:17:53.655"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:17:53.655" endtime="20250531 04:17:53.655"/>
</kw>
<status status="PASS" starttime="20250531 04:17:50.607" endtime="20250531 04:17:53.655"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:53.658" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 27795-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:56.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:56.708" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:17:53.656" endtime="20250531 04:17:56.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:56.708" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:17:56.708" endtime="20250531 04:17:56.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:56.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:56.709" endtime="20250531 04:17:56.709"/>
</kw>
<status status="PASS" starttime="20250531 04:17:53.656" endtime="20250531 04:17:56.709"/>
</kw>
<msg timestamp="20250531 04:17:56.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:53.656" endtime="20250531 04:17:56.709"/>
</kw>
<status status="PASS" starttime="20250531 04:17:53.656" endtime="20250531 04:17:56.709"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:56.713" level="INFO">Running command 'ozone sh bucket getacl 27795-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:17:59.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:17:59.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:17:56.711" endtime="20250531 04:17:59.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:17:59.798" level="INFO"/>
<status status="PASS" starttime="20250531 04:17:59.797" endtime="20250531 04:17:59.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:17:59.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:17:59.798" endtime="20250531 04:17:59.798"/>
</kw>
<status status="PASS" starttime="20250531 04:17:56.711" endtime="20250531 04:17:59.798"/>
</kw>
<msg timestamp="20250531 04:17:59.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:56.711" endtime="20250531 04:17:59.798"/>
</kw>
<msg timestamp="20250531 04:17:59.799" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250531 04:17:56.710" endtime="20250531 04:17:59.799"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:17:59.799" endtime="20250531 04:17:59.799"/>
</kw>
<status status="PASS" starttime="20250531 04:17:56.710" endtime="20250531 04:17:59.799"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:17:59.803" level="INFO">Running command 'ozone sh bucket getacl --source 27795-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:02.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:02.875" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250531 04:17:59.801" endtime="20250531 04:18:02.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:02.876" level="INFO">READ</msg>
<status status="PASS" starttime="20250531 04:18:02.875" endtime="20250531 04:18:02.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:02.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:02.876" endtime="20250531 04:18:02.876"/>
</kw>
<status status="PASS" starttime="20250531 04:17:59.801" endtime="20250531 04:18:02.877"/>
</kw>
<msg timestamp="20250531 04:18:02.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:17:59.800" endtime="20250531 04:18:02.877"/>
</kw>
<msg timestamp="20250531 04:18:02.877" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250531 04:17:59.800" endtime="20250531 04:18:02.877"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:18:02.877" endtime="20250531 04:18:02.877"/>
</kw>
<status status="PASS" starttime="20250531 04:17:59.799" endtime="20250531 04:18:02.877"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:17:21.221" endtime="20250531 04:18:02.877"/>
</test>
<test id="s1-s4-s3-t9" name="Source and target key have same ACLs" line="156">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:18:02.878" endtime="20250531 04:18:02.879"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl user:user1:rwxy ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:02.882" level="INFO">Running command 'ozone sh key addacl --acl user:user1:rwxy 27795-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:05.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:05.875" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:18:02.880" endtime="20250531 04:18:05.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:05.876" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:18:05.875" endtime="20250531 04:18:05.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:05.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:05.876" endtime="20250531 04:18:05.876"/>
</kw>
<status status="PASS" starttime="20250531 04:18:02.879" endtime="20250531 04:18:05.877"/>
</kw>
<msg timestamp="20250531 04:18:05.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:02.879" endtime="20250531 04:18:05.877"/>
</kw>
<status status="PASS" starttime="20250531 04:18:02.879" endtime="20250531 04:18:05.877"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:05.881" level="INFO">Running command 'ozone sh key getacl 27795-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:08.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:08.736" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:18:05.878" endtime="20250531 04:18:08.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:08.737" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:18:08.736" endtime="20250531 04:18:08.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:08.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:08.737" endtime="20250531 04:18:08.737"/>
</kw>
<status status="PASS" starttime="20250531 04:18:05.878" endtime="20250531 04:18:08.737"/>
</kw>
<msg timestamp="20250531 04:18:08.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:05.878" endtime="20250531 04:18:08.737"/>
</kw>
<msg timestamp="20250531 04:18:08.738" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:18:05.877" endtime="20250531 04:18:08.738"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:18:08.738" endtime="20250531 04:18:08.738"/>
</kw>
<status status="PASS" starttime="20250531 04:18:05.877" endtime="20250531 04:18:08.738"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:08.742" level="INFO">Running command 'ozone sh key getacl 27795-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:11.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:11.772" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:18:08.740" endtime="20250531 04:18:11.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:11.773" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:18:11.773" endtime="20250531 04:18:11.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:11.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:11.773" endtime="20250531 04:18:11.774"/>
</kw>
<status status="PASS" starttime="20250531 04:18:08.739" endtime="20250531 04:18:11.774"/>
</kw>
<msg timestamp="20250531 04:18:11.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:08.739" endtime="20250531 04:18:11.774"/>
</kw>
<msg timestamp="20250531 04:18:11.774" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:18:08.739" endtime="20250531 04:18:11.774"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:18:11.774" endtime="20250531 04:18:11.775"/>
</kw>
<status status="PASS" starttime="20250531 04:18:08.738" endtime="20250531 04:18:11.775"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key removeacl --acl user:user1:y ${target}/link1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:11.778" level="INFO">Running command 'ozone sh key removeacl --acl user:user1:y 27795-target/link1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:14.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:14.703" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:18:11.776" endtime="20250531 04:18:14.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:14.704" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:18:14.703" endtime="20250531 04:18:14.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:14.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:14.704" endtime="20250531 04:18:14.705"/>
</kw>
<status status="PASS" starttime="20250531 04:18:11.775" endtime="20250531 04:18:14.705"/>
</kw>
<msg timestamp="20250531 04:18:14.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:11.775" endtime="20250531 04:18:14.705"/>
</kw>
<status status="PASS" starttime="20250531 04:18:11.775" endtime="20250531 04:18:14.705"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:14.709" level="INFO">Running command 'ozone sh key getacl 27795-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:17.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:17.760" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:18:14.706" endtime="20250531 04:18:17.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:17.761" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:18:17.761" endtime="20250531 04:18:17.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:17.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:17.761" endtime="20250531 04:18:17.762"/>
</kw>
<status status="PASS" starttime="20250531 04:18:14.706" endtime="20250531 04:18:17.762"/>
</kw>
<msg timestamp="20250531 04:18:17.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:14.706" endtime="20250531 04:18:17.762"/>
</kw>
<msg timestamp="20250531 04:18:17.762" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:18:14.705" endtime="20250531 04:18:17.762"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:18:17.762" endtime="20250531 04:18:17.762"/>
</kw>
<status status="PASS" starttime="20250531 04:18:14.705" endtime="20250531 04:18:17.763"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:17.766" level="INFO">Running command 'ozone sh key getacl 27795-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:20.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:20.813" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:18:17.764" endtime="20250531 04:18:20.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:20.814" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:18:20.813" endtime="20250531 04:18:20.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:20.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:20.814" endtime="20250531 04:18:20.814"/>
</kw>
<status status="PASS" starttime="20250531 04:18:17.764" endtime="20250531 04:18:20.814"/>
</kw>
<msg timestamp="20250531 04:18:20.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:17.764" endtime="20250531 04:18:20.815"/>
</kw>
<msg timestamp="20250531 04:18:20.815" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:18:17.763" endtime="20250531 04:18:20.815"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:18:20.815" endtime="20250531 04:18:20.815"/>
</kw>
<status status="PASS" starttime="20250531 04:18:17.763" endtime="20250531 04:18:20.815"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key setacl --acl user:user1:rw ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:20.819" level="INFO">Running command 'ozone sh key setacl --acl user:user1:rw 27795-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:23.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:23.526" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:18:20.817" endtime="20250531 04:18:23.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:23.527" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:18:23.526" endtime="20250531 04:18:23.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:23.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:23.527" endtime="20250531 04:18:23.527"/>
</kw>
<status status="PASS" starttime="20250531 04:18:20.816" endtime="20250531 04:18:23.527"/>
</kw>
<msg timestamp="20250531 04:18:23.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:20.816" endtime="20250531 04:18:23.527"/>
</kw>
<status status="PASS" starttime="20250531 04:18:20.815" endtime="20250531 04:18:23.528"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:23.531" level="INFO">Running command 'ozone sh key getacl 27795-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:26.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:26.625" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250531 04:18:23.529" endtime="20250531 04:18:26.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:26.626" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250531 04:18:26.625" endtime="20250531 04:18:26.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:26.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:26.626" endtime="20250531 04:18:26.626"/>
</kw>
<status status="PASS" starttime="20250531 04:18:23.529" endtime="20250531 04:18:26.626"/>
</kw>
<msg timestamp="20250531 04:18:26.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:23.529" endtime="20250531 04:18:26.626"/>
</kw>
<msg timestamp="20250531 04:18:26.627" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250531 04:18:23.528" endtime="20250531 04:18:26.627"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:18:26.627" endtime="20250531 04:18:26.627"/>
</kw>
<status status="PASS" starttime="20250531 04:18:23.528" endtime="20250531 04:18:26.627"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:26.631" level="INFO">Running command 'ozone sh key getacl 27795-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:29.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:29.616" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250531 04:18:26.629" endtime="20250531 04:18:29.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:29.617" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250531 04:18:29.616" endtime="20250531 04:18:29.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:29.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:29.617" endtime="20250531 04:18:29.617"/>
</kw>
<status status="PASS" starttime="20250531 04:18:26.628" endtime="20250531 04:18:29.618"/>
</kw>
<msg timestamp="20250531 04:18:29.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:26.628" endtime="20250531 04:18:29.618"/>
</kw>
<msg timestamp="20250531 04:18:29.618" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250531 04:18:26.628" endtime="20250531 04:18:29.618"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:18:29.618" endtime="20250531 04:18:29.618"/>
</kw>
<status status="PASS" starttime="20250531 04:18:26.627" endtime="20250531 04:18:29.618"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl group:group2:r ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:29.622" level="INFO">Running command 'ozone sh key addacl --acl group:group2:r 27795-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:32.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:32.487" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:18:29.619" endtime="20250531 04:18:32.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:32.488" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:18:32.487" endtime="20250531 04:18:32.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:32.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:32.488" endtime="20250531 04:18:32.488"/>
</kw>
<status status="PASS" starttime="20250531 04:18:29.619" endtime="20250531 04:18:32.489"/>
</kw>
<msg timestamp="20250531 04:18:32.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:29.619" endtime="20250531 04:18:32.489"/>
</kw>
<status status="PASS" starttime="20250531 04:18:29.619" endtime="20250531 04:18:32.489"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:32.493" level="INFO">Running command 'ozone sh key getacl 27795-target/link1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:35.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:35.531" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250531 04:18:32.491" endtime="20250531 04:18:35.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:35.532" level="INFO">READ</msg>
<status status="PASS" starttime="20250531 04:18:35.531" endtime="20250531 04:18:35.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:35.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:35.532" endtime="20250531 04:18:35.532"/>
</kw>
<status status="PASS" starttime="20250531 04:18:32.490" endtime="20250531 04:18:35.532"/>
</kw>
<msg timestamp="20250531 04:18:35.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:32.490" endtime="20250531 04:18:35.533"/>
</kw>
<msg timestamp="20250531 04:18:35.533" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250531 04:18:32.489" endtime="20250531 04:18:35.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:18:35.533" endtime="20250531 04:18:35.533"/>
</kw>
<status status="PASS" starttime="20250531 04:18:32.489" endtime="20250531 04:18:35.533"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:35.537" level="INFO">Running command 'ozone sh key getacl 27795-source/bucket1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:38.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:38.581" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250531 04:18:35.534" endtime="20250531 04:18:38.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:38.582" level="INFO">READ</msg>
<status status="PASS" starttime="20250531 04:18:38.581" endtime="20250531 04:18:38.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:38.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:38.582" endtime="20250531 04:18:38.582"/>
</kw>
<status status="PASS" starttime="20250531 04:18:35.534" endtime="20250531 04:18:38.582"/>
</kw>
<msg timestamp="20250531 04:18:38.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:35.534" endtime="20250531 04:18:38.582"/>
</kw>
<msg timestamp="20250531 04:18:38.582" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250531 04:18:35.534" endtime="20250531 04:18:38.582"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:18:38.583" endtime="20250531 04:18:38.583"/>
</kw>
<status status="PASS" starttime="20250531 04:18:35.533" endtime="20250531 04:18:38.583"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:18:02.878" endtime="20250531 04:18:38.583"/>
</test>
<test id="s1-s4-s3-t10" name="Source and target prefix have same ACLs" line="171">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:18:38.584" endtime="20250531 04:18:38.584"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl --acl user:user1:rwxy ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:38.587" level="INFO">Running command 'ozone sh prefix addacl --acl user:user1:rwxy 27795-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:41.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:41.480" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:18:38.585" endtime="20250531 04:18:41.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:41.481" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:18:41.481" endtime="20250531 04:18:41.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:41.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:41.481" endtime="20250531 04:18:41.482"/>
</kw>
<status status="PASS" starttime="20250531 04:18:38.585" endtime="20250531 04:18:41.482"/>
</kw>
<msg timestamp="20250531 04:18:41.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:38.585" endtime="20250531 04:18:41.482"/>
</kw>
<status status="PASS" starttime="20250531 04:18:38.584" endtime="20250531 04:18:41.482"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:41.486" level="INFO">Running command 'ozone sh prefix getacl 27795-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:44.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:44.380" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:18:41.483" endtime="20250531 04:18:44.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:44.381" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:18:44.380" endtime="20250531 04:18:44.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:44.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:44.381" endtime="20250531 04:18:44.381"/>
</kw>
<status status="PASS" starttime="20250531 04:18:41.483" endtime="20250531 04:18:44.381"/>
</kw>
<msg timestamp="20250531 04:18:44.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:41.483" endtime="20250531 04:18:44.381"/>
</kw>
<msg timestamp="20250531 04:18:44.381" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:18:41.482" endtime="20250531 04:18:44.381"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:18:44.382" endtime="20250531 04:18:44.382"/>
</kw>
<status status="PASS" starttime="20250531 04:18:41.482" endtime="20250531 04:18:44.382"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:44.386" level="INFO">Running command 'ozone sh prefix getacl 27795-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:47.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:47.539" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:18:44.383" endtime="20250531 04:18:47.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:47.540" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:18:47.539" endtime="20250531 04:18:47.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:47.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:47.540" endtime="20250531 04:18:47.540"/>
</kw>
<status status="PASS" starttime="20250531 04:18:44.383" endtime="20250531 04:18:47.541"/>
</kw>
<msg timestamp="20250531 04:18:47.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:44.383" endtime="20250531 04:18:47.541"/>
</kw>
<msg timestamp="20250531 04:18:47.541" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250531 04:18:44.382" endtime="20250531 04:18:47.541"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:18:47.541" endtime="20250531 04:18:47.541"/>
</kw>
<status status="PASS" starttime="20250531 04:18:44.382" endtime="20250531 04:18:47.541"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix removeacl --acl user:user1:y ${target}/link1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:47.545" level="INFO">Running command 'ozone sh prefix removeacl --acl user:user1:y 27795-target/link1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:50.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:50.440" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:18:47.542" endtime="20250531 04:18:50.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:50.441" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:18:50.440" endtime="20250531 04:18:50.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:50.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:50.441" endtime="20250531 04:18:50.442"/>
</kw>
<status status="PASS" starttime="20250531 04:18:47.542" endtime="20250531 04:18:50.442"/>
</kw>
<msg timestamp="20250531 04:18:50.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:47.542" endtime="20250531 04:18:50.442"/>
</kw>
<status status="PASS" starttime="20250531 04:18:47.541" endtime="20250531 04:18:50.442"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:50.446" level="INFO">Running command 'ozone sh prefix getacl 27795-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:53.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:53.383" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:18:50.444" endtime="20250531 04:18:53.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:53.384" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:18:53.383" endtime="20250531 04:18:53.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:53.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:53.384" endtime="20250531 04:18:53.384"/>
</kw>
<status status="PASS" starttime="20250531 04:18:50.443" endtime="20250531 04:18:53.385"/>
</kw>
<msg timestamp="20250531 04:18:53.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:50.443" endtime="20250531 04:18:53.385"/>
</kw>
<msg timestamp="20250531 04:18:53.385" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:18:50.443" endtime="20250531 04:18:53.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:18:53.385" endtime="20250531 04:18:53.385"/>
</kw>
<status status="PASS" starttime="20250531 04:18:50.442" endtime="20250531 04:18:53.385"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:53.389" level="INFO">Running command 'ozone sh prefix getacl 27795-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:56.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:56.611" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:18:53.387" endtime="20250531 04:18:56.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:56.612" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:18:56.611" endtime="20250531 04:18:56.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:56.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:56.612" endtime="20250531 04:18:56.613"/>
</kw>
<status status="PASS" starttime="20250531 04:18:53.387" endtime="20250531 04:18:56.613"/>
</kw>
<msg timestamp="20250531 04:18:56.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:53.386" endtime="20250531 04:18:56.613"/>
</kw>
<msg timestamp="20250531 04:18:56.613" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250531 04:18:53.386" endtime="20250531 04:18:56.613"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:18:56.613" endtime="20250531 04:18:56.614"/>
</kw>
<status status="PASS" starttime="20250531 04:18:53.385" endtime="20250531 04:18:56.614"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix setacl --acl user:user1:rw ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:56.620" level="INFO">Running command 'ozone sh prefix setacl --acl user:user1:rw 27795-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:18:59.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:18:59.485" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:18:56.616" endtime="20250531 04:18:59.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:18:59.486" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:18:59.485" endtime="20250531 04:18:59.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:18:59.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:18:59.486" endtime="20250531 04:18:59.486"/>
</kw>
<status status="PASS" starttime="20250531 04:18:56.615" endtime="20250531 04:18:59.487"/>
</kw>
<msg timestamp="20250531 04:18:59.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:56.615" endtime="20250531 04:18:59.487"/>
</kw>
<status status="PASS" starttime="20250531 04:18:56.614" endtime="20250531 04:18:59.487"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:18:59.490" level="INFO">Running command 'ozone sh prefix getacl 27795-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:02.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:02.592" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250531 04:18:59.488" endtime="20250531 04:19:02.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:02.593" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250531 04:19:02.593" endtime="20250531 04:19:02.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:02.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:02.594" endtime="20250531 04:19:02.594"/>
</kw>
<status status="PASS" starttime="20250531 04:18:59.488" endtime="20250531 04:19:02.594"/>
</kw>
<msg timestamp="20250531 04:19:02.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:18:59.488" endtime="20250531 04:19:02.594"/>
</kw>
<msg timestamp="20250531 04:19:02.594" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250531 04:18:59.487" endtime="20250531 04:19:02.594"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:19:02.594" endtime="20250531 04:19:02.595"/>
</kw>
<status status="PASS" starttime="20250531 04:18:59.487" endtime="20250531 04:19:02.595"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:02.598" level="INFO">Running command 'ozone sh prefix getacl 27795-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:05.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:05.566" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250531 04:19:02.596" endtime="20250531 04:19:05.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:05.567" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250531 04:19:05.566" endtime="20250531 04:19:05.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:05.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:05.567" endtime="20250531 04:19:05.567"/>
</kw>
<status status="PASS" starttime="20250531 04:19:02.596" endtime="20250531 04:19:05.568"/>
</kw>
<msg timestamp="20250531 04:19:05.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:02.596" endtime="20250531 04:19:05.568"/>
</kw>
<msg timestamp="20250531 04:19:05.568" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250531 04:19:02.595" endtime="20250531 04:19:05.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:19:05.568" endtime="20250531 04:19:05.568"/>
</kw>
<status status="PASS" starttime="20250531 04:19:02.595" endtime="20250531 04:19:05.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl --acl group:group2:r ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:05.572" level="INFO">Running command 'ozone sh prefix addacl --acl group:group2:r 27795-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:08.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:08.311" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:19:05.570" endtime="20250531 04:19:08.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:08.312" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:19:08.311" endtime="20250531 04:19:08.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:08.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:08.312" endtime="20250531 04:19:08.312"/>
</kw>
<status status="PASS" starttime="20250531 04:19:05.569" endtime="20250531 04:19:08.312"/>
</kw>
<msg timestamp="20250531 04:19:08.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:05.569" endtime="20250531 04:19:08.312"/>
</kw>
<status status="PASS" starttime="20250531 04:19:05.568" endtime="20250531 04:19:08.312"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:08.316" level="INFO">Running command 'ozone sh prefix getacl 27795-target/link1/prefix1/ | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:11.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:11.354" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250531 04:19:08.314" endtime="20250531 04:19:11.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:11.355" level="INFO">READ</msg>
<status status="PASS" starttime="20250531 04:19:11.354" endtime="20250531 04:19:11.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:11.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:11.355" endtime="20250531 04:19:11.355"/>
</kw>
<status status="PASS" starttime="20250531 04:19:08.314" endtime="20250531 04:19:11.355"/>
</kw>
<msg timestamp="20250531 04:19:11.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:08.313" endtime="20250531 04:19:11.356"/>
</kw>
<msg timestamp="20250531 04:19:11.356" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250531 04:19:08.313" endtime="20250531 04:19:11.356"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:19:11.356" endtime="20250531 04:19:11.356"/>
</kw>
<status status="PASS" starttime="20250531 04:19:08.313" endtime="20250531 04:19:11.356"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:11.360" level="INFO">Running command 'ozone sh prefix getacl 27795-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:14.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:14.353" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250531 04:19:11.358" endtime="20250531 04:19:14.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:14.354" level="INFO">READ</msg>
<status status="PASS" starttime="20250531 04:19:14.354" endtime="20250531 04:19:14.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:14.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:14.354" endtime="20250531 04:19:14.355"/>
</kw>
<status status="PASS" starttime="20250531 04:19:11.357" endtime="20250531 04:19:14.355"/>
</kw>
<msg timestamp="20250531 04:19:14.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:11.357" endtime="20250531 04:19:14.355"/>
</kw>
<msg timestamp="20250531 04:19:14.355" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250531 04:19:11.357" endtime="20250531 04:19:14.355"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:19:14.355" endtime="20250531 04:19:14.355"/>
</kw>
<status status="PASS" starttime="20250531 04:19:11.356" endtime="20250531 04:19:14.355"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:18:38.583" endtime="20250531 04:19:14.356"/>
</test>
<test id="s1-s4-s3-t11" name="Buckets and links share namespace" line="186">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:19:14.357" endtime="20250531 04:19:14.357"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:14.360" level="INFO">Running command 'ozone sh bucket link 27795-source/bucket2 27795-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:17.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:17.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:19:14.358" endtime="20250531 04:19:17.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:17.204" level="INFO"/>
<status status="PASS" starttime="20250531 04:19:17.203" endtime="20250531 04:19:17.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:17.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:17.204" endtime="20250531 04:19:17.204"/>
</kw>
<status status="PASS" starttime="20250531 04:19:14.357" endtime="20250531 04:19:17.204"/>
</kw>
<msg timestamp="20250531 04:19:17.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:14.357" endtime="20250531 04:19:17.205"/>
</kw>
<status status="PASS" starttime="20250531 04:19:14.357" endtime="20250531 04:19:17.205"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:17.207" level="INFO">Running command 'ozone sh bucket create 27795-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:20.025" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:19:20.025" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250531 04:19:17.205" endtime="20250531 04:19:20.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:20.026" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250531 04:19:20.026" endtime="20250531 04:19:20.026"/>
</kw>
<msg timestamp="20250531 04:19:20.027" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250531 04:19:17.205" endtime="20250531 04:19:20.027"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:19:20.027" endtime="20250531 04:19:20.027"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:20.030" level="INFO">Running command 'ozone sh bucket create 27795-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:22.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:22.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:19:20.028" endtime="20250531 04:19:22.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:22.816" level="INFO"/>
<status status="PASS" starttime="20250531 04:19:22.816" endtime="20250531 04:19:22.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:22.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:22.816" endtime="20250531 04:19:22.817"/>
</kw>
<status status="PASS" starttime="20250531 04:19:20.028" endtime="20250531 04:19:22.817"/>
</kw>
<msg timestamp="20250531 04:19:22.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:20.027" endtime="20250531 04:19:22.817"/>
</kw>
<status status="PASS" starttime="20250531 04:19:20.027" endtime="20250531 04:19:22.817"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:22.820" level="INFO">Running command 'ozone sh bucket link 27795-source/bucket1 27795-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:25.665" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:19:25.665" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250531 04:19:22.818" endtime="20250531 04:19:25.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:25.666" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250531 04:19:25.666" endtime="20250531 04:19:25.666"/>
</kw>
<msg timestamp="20250531 04:19:25.666" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250531 04:19:22.817" endtime="20250531 04:19:25.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:19:25.667" endtime="20250531 04:19:25.667"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:19:14.356" endtime="20250531 04:19:25.667"/>
</test>
<test id="s1-s4-s3-t12" name="Can follow link with read access" line="195">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:19:25.668" endtime="20250531 04:19:25.668"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:19:25.668" endtime="20250531 04:19:25.669"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:19:25.668" endtime="20250531 04:19:25.669"/>
</test>
<test id="s1-s4-s3-t13" name="Cannot follow link without read access" line="198">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:19:25.669" endtime="20250531 04:19:25.670"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:19:25.670" endtime="20250531 04:19:25.670"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:19:25.669" endtime="20250531 04:19:25.670"/>
</test>
<test id="s1-s4-s3-t14" name="ACL verified on source and target bucket" line="201">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:19:25.671" endtime="20250531 04:19:25.671"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source and target bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:19:25.671" endtime="20250531 04:19:25.671"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:19:25.670" endtime="20250531 04:19:25.671"/>
</test>
<test id="s1-s4-s3-t15" name="Loop in link chain is detected" line="204">
<kw name="Create link loop" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:19:25.672" endtime="20250531 04:19:25.672"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket link ${target}/loop1 ${target}/loop2</arg>
<arg>bucket link ${target}/loop2 ${target}/loop3</arg>
<arg>bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250531 04:19:25.673" level="INFO">${cmd} = bucket link 27795-target/loop1 27795-target/loop2' --execute 'bucket link 27795-target/loop2 27795-target/loop3' --execute 'bucket link 27795-target/loop3 27795-target/loop1</msg>
<status status="PASS" starttime="20250531 04:19:25.673" endtime="20250531 04:19:25.673"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:25.676" level="INFO">Running command 'ozone sh --execute 'bucket link 27795-target/loop1 27795-target/loop2' --execute 'bucket link 27795-target/loop2 27795-target/loop3' --execute 'bucket link 27795-target/loop3 27795-target/loop1' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:28.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:28.819" level="INFO">${output} = bucket link 27795-target/loop1 27795-target/loop2
bucket link 27795-target/loop2 27795-target/loop3
bucket link 27795-target/loop3 27795-target/loop1</msg>
<status status="PASS" starttime="20250531 04:19:25.673" endtime="20250531 04:19:28.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:28.820" level="INFO">bucket link 27795-target/loop1 27795-target/loop2
bucket link 27795-target/loop2 27795-target/loop3
bucket link 27795-target/loop3 27795-target/loop1</msg>
<status status="PASS" starttime="20250531 04:19:28.820" endtime="20250531 04:19:28.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:28.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:28.820" endtime="20250531 04:19:28.821"/>
</kw>
<status status="PASS" starttime="20250531 04:19:25.673" endtime="20250531 04:19:28.821"/>
</kw>
<msg timestamp="20250531 04:19:28.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:25.673" endtime="20250531 04:19:28.821"/>
</kw>
<status status="PASS" starttime="20250531 04:19:25.672" endtime="20250531 04:19:28.821"/>
</kw>
<status status="PASS" starttime="20250531 04:19:25.672" endtime="20250531 04:19:28.821"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:28.824" level="INFO">Running command 'ozone sh key list 27795-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:31.684" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:19:31.684" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20250531 04:19:28.822" endtime="20250531 04:19:31.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:31.685" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20250531 04:19:31.685" endtime="20250531 04:19:31.685"/>
</kw>
<msg timestamp="20250531 04:19:31.686" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20250531 04:19:28.821" endtime="20250531 04:19:31.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:19:31.686" endtime="20250531 04:19:31.686"/>
</kw>
<kw name="Delete link loop" type="TEARDOWN">
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket delete ${target}/loop1</arg>
<arg>bucket delete ${target}/loop2</arg>
<arg>bucket delete ${target}/loop3</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250531 04:19:31.687" level="INFO">${cmd} = bucket delete 27795-target/loop1' --execute 'bucket delete 27795-target/loop2' --execute 'bucket delete 27795-target/loop3</msg>
<status status="PASS" starttime="20250531 04:19:31.687" endtime="20250531 04:19:31.687"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:31.690" level="INFO">Running command 'ozone sh --execute 'bucket delete 27795-target/loop1' --execute 'bucket delete 27795-target/loop2' --execute 'bucket delete 27795-target/loop3' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:34.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:34.852" level="INFO">${output} = bucket delete 27795-target/loop1
Bucket loop1 is deleted
bucket delete 27795-target/loop2
Bucket loop2 is deleted
bucket delete 27795-target/loop3
Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20250531 04:19:31.688" endtime="20250531 04:19:34.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:34.853" level="INFO">bucket delete 27795-target/loop1
Bucket loop1 is deleted
bucket delete 27795-target/loop2
Bucket loop2 is deleted
bucket delete 27795-target/loop3
Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20250531 04:19:34.852" endtime="20250531 04:19:34.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:34.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:34.853" endtime="20250531 04:19:34.853"/>
</kw>
<status status="PASS" starttime="20250531 04:19:31.687" endtime="20250531 04:19:34.853"/>
</kw>
<msg timestamp="20250531 04:19:34.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:31.687" endtime="20250531 04:19:34.853"/>
</kw>
<status status="PASS" starttime="20250531 04:19:31.686" endtime="20250531 04:19:34.854"/>
</kw>
<status status="PASS" starttime="20250531 04:19:31.686" endtime="20250531 04:19:34.854"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:19:25.671" endtime="20250531 04:19:34.854"/>
</test>
<test id="s1-s4-s3-t16" name="Multiple links to same bucket are allowed" line="210">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:19:34.855" endtime="20250531 04:19:34.855"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket link ${source}/bucket1 ${target}/link3</arg>
<arg>key put ${target}/link3/key3 /etc/group</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250531 04:19:34.856" level="INFO">${cmd} = bucket link 27795-source/bucket1 27795-target/link3' --execute 'key put 27795-target/link3/key3 /etc/group</msg>
<status status="PASS" starttime="20250531 04:19:34.855" endtime="20250531 04:19:34.856"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:34.859" level="INFO">Running command 'ozone sh --execute 'bucket link 27795-source/bucket1 27795-target/link3' --execute 'key put 27795-target/link3/key3 /etc/group' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:39.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:39.612" level="INFO">${output} = bucket link 27795-source/bucket1 27795-target/link3
key put 27795-target/link3/key3 /etc/group</msg>
<status status="PASS" starttime="20250531 04:19:34.856" endtime="20250531 04:19:39.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:39.613" level="INFO">bucket link 27795-source/bucket1 27795-target/link3
key put 27795-target/link3/key3 /etc/group</msg>
<status status="PASS" starttime="20250531 04:19:39.612" endtime="20250531 04:19:39.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:39.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:39.613" endtime="20250531 04:19:39.613"/>
</kw>
<status status="PASS" starttime="20250531 04:19:34.856" endtime="20250531 04:19:39.613"/>
</kw>
<msg timestamp="20250531 04:19:39.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:34.856" endtime="20250531 04:19:39.613"/>
</kw>
<status status="PASS" starttime="20250531 04:19:34.855" endtime="20250531 04:19:39.613"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:19:39.615" level="INFO">${postfix} = 35522</msg>
<status status="PASS" starttime="20250531 04:19:39.614" endtime="20250531 04:19:39.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250531 04:19:39.615" level="INFO">${tmpfile} = /tmp/tempkey-35522</msg>
<status status="PASS" starttime="20250531 04:19:39.615" endtime="20250531 04:19:39.615"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:39.618" level="INFO">Running command 'ozone sh key get 27795-target/link1/key3 /tmp/tempkey-35522 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:43.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:43.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:19:39.616" endtime="20250531 04:19:43.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:43.859" level="INFO"/>
<status status="PASS" starttime="20250531 04:19:43.859" endtime="20250531 04:19:43.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:43.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:43.860" endtime="20250531 04:19:43.860"/>
</kw>
<status status="PASS" starttime="20250531 04:19:39.616" endtime="20250531 04:19:43.860"/>
</kw>
<msg timestamp="20250531 04:19:43.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:39.615" endtime="20250531 04:19:43.860"/>
</kw>
<status status="PASS" starttime="20250531 04:19:39.615" endtime="20250531 04:19:43.860"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250531 04:19:43.863" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-35522 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:43.865" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250531 04:19:43.860" endtime="20250531 04:19:43.865"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:43.869" level="INFO">Running command 'rm -f /tmp/tempkey-35522 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:43.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:43.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:19:43.867" endtime="20250531 04:19:43.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:43.873" level="INFO"/>
<status status="PASS" starttime="20250531 04:19:43.872" endtime="20250531 04:19:43.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:43.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:43.873" endtime="20250531 04:19:43.873"/>
</kw>
<status status="PASS" starttime="20250531 04:19:43.866" endtime="20250531 04:19:43.873"/>
</kw>
<msg timestamp="20250531 04:19:43.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:43.866" endtime="20250531 04:19:43.873"/>
</kw>
<status status="PASS" starttime="20250531 04:19:43.866" endtime="20250531 04:19:43.874"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250531 04:19:43.874" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250531 04:19:43.874" endtime="20250531 04:19:43.874"/>
</kw>
<msg timestamp="20250531 04:19:43.874" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250531 04:19:39.614" endtime="20250531 04:19:43.874"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:19:43.874" endtime="20250531 04:19:43.874"/>
</kw>
<status status="PASS" starttime="20250531 04:19:39.614" endtime="20250531 04:19:43.874"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:19:34.854" endtime="20250531 04:19:43.875"/>
</test>
<test id="s1-s4-s3-t17" name="Source bucket not affected by deleting link" line="215">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:19:43.876" endtime="20250531 04:19:43.876"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:43.879" level="INFO">Running command 'ozone sh bucket delete 27795-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:46.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:46.811" level="INFO">${output} = Bucket link1 is deleted</msg>
<status status="PASS" starttime="20250531 04:19:43.877" endtime="20250531 04:19:46.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:46.812" level="INFO">Bucket link1 is deleted</msg>
<status status="PASS" starttime="20250531 04:19:46.811" endtime="20250531 04:19:46.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:46.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:46.812" endtime="20250531 04:19:46.812"/>
</kw>
<status status="PASS" starttime="20250531 04:19:43.876" endtime="20250531 04:19:46.812"/>
</kw>
<msg timestamp="20250531 04:19:46.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:43.876" endtime="20250531 04:19:46.812"/>
</kw>
<status status="PASS" starttime="20250531 04:19:43.876" endtime="20250531 04:19:46.812"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:46.816" level="INFO">Running command 'ozone sh bucket list 27795-target 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:49.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:49.854" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "27795-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "...</msg>
<status status="PASS" starttime="20250531 04:19:46.813" endtime="20250531 04:19:49.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:49.855" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "27795-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2025-05-31T04:19:22.712Z",
  "modificationTime" : "2025-05-31T04:19:22.712Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}, {
  "volumeName" : "27795-target",
  "name" : "dangling-link",
  "sourceVolume" : "27795-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-05-31T04:16:41.907Z",
  "modificationTime" : "2025-05-31T04:16:41.907Z",
  "owner" : "hadoop",
  "link" : true
}, {
  "volumeName" : "27795-target",
  "name" : "link2",
  "sourceVolume" : "27795-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2025-05-31T04:19:17.080Z",
  "modificationTime" : "2025-05-31T04:19:17.080Z",
  "owner" : "hadoop",
  "link" : true
}, {
  "volumeName" : "27795-target",
  "name" : "link3",
  "sourceVolume" : "27795-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-05-31T04:19:37.947Z",
  "modificationTime" : "2025-05-31T04:19:37.947Z",
  "owner" : "hadoop",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20250531 04:19:49.854" endtime="20250531 04:19:49.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:49.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:49.855" endtime="20250531 04:19:49.855"/>
</kw>
<status status="PASS" starttime="20250531 04:19:46.813" endtime="20250531 04:19:49.855"/>
</kw>
<msg timestamp="20250531 04:19:49.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:46.813" endtime="20250531 04:19:49.856"/>
</kw>
<msg timestamp="20250531 04:19:49.856" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "27795-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "...</msg>
<status status="PASS" starttime="20250531 04:19:46.813" endtime="20250531 04:19:49.856"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:19:49.856" endtime="20250531 04:19:49.856"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:49.860" level="INFO">Running command 'ozone sh key list 27795-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:53.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:53.106" level="INFO">${output} = .Trash/
.Trash/hadoop/
key1
key3</msg>
<status status="PASS" starttime="20250531 04:19:49.857" endtime="20250531 04:19:53.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:53.107" level="INFO">.Trash/
.Trash/hadoop/
key1
key3</msg>
<status status="PASS" starttime="20250531 04:19:53.107" endtime="20250531 04:19:53.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:53.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:53.107" endtime="20250531 04:19:53.108"/>
</kw>
<status status="PASS" starttime="20250531 04:19:49.857" endtime="20250531 04:19:53.108"/>
</kw>
<msg timestamp="20250531 04:19:53.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:49.857" endtime="20250531 04:19:53.108"/>
</kw>
<msg timestamp="20250531 04:19:53.108" level="INFO">${source_list} = .Trash/
.Trash/hadoop/
key1
key3</msg>
<status status="PASS" starttime="20250531 04:19:49.856" endtime="20250531 04:19:53.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:19:53.108" endtime="20250531 04:19:53.108"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:19:43.875" endtime="20250531 04:19:53.109"/>
</test>
<test id="s1-s4-s3-t18" name="Setting bucket property on link not allowed" line="222">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:19:53.110" endtime="20250531 04:19:53.110"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:53.113" level="INFO">Running command 'ozone sh bucket link 27795-source/bucket1 27795-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:56.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:19:56.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:19:53.111" endtime="20250531 04:19:56.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:56.240" level="INFO"/>
<status status="PASS" starttime="20250531 04:19:56.239" endtime="20250531 04:19:56.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:19:56.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:19:56.240" endtime="20250531 04:19:56.240"/>
</kw>
<status status="PASS" starttime="20250531 04:19:53.110" endtime="20250531 04:19:56.240"/>
</kw>
<msg timestamp="20250531 04:19:56.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:53.110" endtime="20250531 04:19:56.240"/>
</kw>
<status status="PASS" starttime="20250531 04:19:53.110" endtime="20250531 04:19:56.240"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:56.243" level="INFO">Running command 'ozone sh bucket setquota 27795-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:19:59.223" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:19:59.223" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20250531 04:19:56.241" endtime="20250531 04:19:59.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:19:59.224" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20250531 04:19:59.223" endtime="20250531 04:19:59.224"/>
</kw>
<msg timestamp="20250531 04:19:59.224" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20250531 04:19:56.240" endtime="20250531 04:19:59.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:19:59.224" endtime="20250531 04:19:59.224"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:19:59.228" level="INFO">Running command 'ozone sh bucket info 27795-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:02.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:02.333" level="INFO">${output} = {
  "volumeName" : "27795-target",
  "name" : "link4",
  "sourceVolume" : "27795-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-05-31T04:19:56.136Z",
  "modificationTime" : "2025-05-3...</msg>
<status status="PASS" starttime="20250531 04:19:59.225" endtime="20250531 04:20:02.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:02.334" level="INFO">{
  "volumeName" : "27795-target",
  "name" : "link4",
  "sourceVolume" : "27795-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-05-31T04:19:56.136Z",
  "modificationTime" : "2025-05-31T04:19:56.136Z",
  "owner" : "hadoop",
  "link" : true
}</msg>
<status status="PASS" starttime="20250531 04:20:02.333" endtime="20250531 04:20:02.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:02.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:02.334" endtime="20250531 04:20:02.334"/>
</kw>
<status status="PASS" starttime="20250531 04:19:59.225" endtime="20250531 04:20:02.335"/>
</kw>
<msg timestamp="20250531 04:20:02.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:19:59.225" endtime="20250531 04:20:02.335"/>
</kw>
<msg timestamp="20250531 04:20:02.335" level="INFO">${result} = {
  "volumeName" : "27795-target",
  "name" : "link4",
  "sourceVolume" : "27795-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-05-31T04:19:56.136Z",
  "modificationTime" : "2025-05-3...</msg>
<status status="PASS" starttime="20250531 04:19:59.224" endtime="20250531 04:20:02.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:20:02.335" endtime="20250531 04:20:02.335"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250531 04:19:53.109" endtime="20250531 04:20:02.335"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20250531 04:16:36.008" endtime="20250531 04:20:02.337"/>
</suite>
<suite id="s1-s4-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:20:02.368" level="INFO">${random} = 89303</msg>
<status status="PASS" starttime="20250531 04:20:02.368" endtime="20250531 04:20:02.368"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250531 04:20:02.368" level="INFO">${prefix} = 89303</msg>
<status status="PASS" starttime="20250531 04:20:02.368" endtime="20250531 04:20:02.368"/>
</kw>
<status status="PASS" starttime="20250531 04:20:02.368" endtime="20250531 04:20:02.369"/>
</kw>
<test id="s1-s4-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:02.373" level="INFO">Running command 'ozone sh volume info /89303-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:05.133" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:20:05.133" level="INFO">${output} = VOLUME_NOT_FOUND Volume 89303-without-scheme is not found</msg>
<status status="PASS" starttime="20250531 04:20:02.370" endtime="20250531 04:20:05.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:05.134" level="INFO">VOLUME_NOT_FOUND Volume 89303-without-scheme is not found</msg>
<status status="PASS" starttime="20250531 04:20:05.134" endtime="20250531 04:20:05.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:05.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:05.134" endtime="20250531 04:20:05.135"/>
</kw>
<msg timestamp="20250531 04:20:05.135" level="INFO">${result} = VOLUME_NOT_FOUND Volume 89303-without-scheme is not found</msg>
<status status="PASS" starttime="20250531 04:20:02.370" endtime="20250531 04:20:05.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:20:05.135" endtime="20250531 04:20:05.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:05.139" level="INFO">Running command 'ozone sh volume create /89303-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:08.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:08.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:20:05.136" endtime="20250531 04:20:08.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:08.028" level="INFO"/>
<status status="PASS" starttime="20250531 04:20:08.027" endtime="20250531 04:20:08.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:08.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:08.028" endtime="20250531 04:20:08.028"/>
</kw>
<status status="PASS" starttime="20250531 04:20:05.136" endtime="20250531 04:20:08.028"/>
</kw>
<msg timestamp="20250531 04:20:08.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:05.136" endtime="20250531 04:20:08.028"/>
</kw>
<msg timestamp="20250531 04:20:08.029" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:20:05.135" endtime="20250531 04:20:08.029"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250531 04:20:08.029" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250531 04:20:08.029" endtime="20250531 04:20:08.029"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:08.032" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="89303-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:10.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:10.984" level="INFO">${output} = {
  "metadata": {},
  "name": "89303-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2...</msg>
<status status="PASS" starttime="20250531 04:20:08.030" endtime="20250531 04:20:10.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:10.985" level="INFO">{
  "metadata": {},
  "name": "89303-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2025-05-31T04:20:07.921Z",
  "modificationTime": "2025-05-31T04:20:07.921Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ],
      "aclSet": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "READ",
        "LIST"
      ],
      "aclSet": [
        "READ",
        "LIST"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20250531 04:20:10.985" endtime="20250531 04:20:10.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:10.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:10.985" endtime="20250531 04:20:10.986"/>
</kw>
<status status="PASS" starttime="20250531 04:20:08.030" endtime="20250531 04:20:10.986"/>
</kw>
<msg timestamp="20250531 04:20:10.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:08.030" endtime="20250531 04:20:10.986"/>
</kw>
<msg timestamp="20250531 04:20:10.986" level="INFO">${result} = {
  "metadata": {},
  "name": "89303-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2...</msg>
<status status="PASS" starttime="20250531 04:20:08.029" endtime="20250531 04:20:10.986"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:20:10.986" endtime="20250531 04:20:10.987"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:10.990" level="INFO">Running command 'ozone sh volume setquota /89303-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:14.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:14.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:20:10.988" endtime="20250531 04:20:14.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:14.099" level="INFO"/>
<status status="PASS" starttime="20250531 04:20:14.099" endtime="20250531 04:20:14.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:14.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:14.099" endtime="20250531 04:20:14.100"/>
</kw>
<status status="PASS" starttime="20250531 04:20:10.987" endtime="20250531 04:20:14.100"/>
</kw>
<msg timestamp="20250531 04:20:14.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:10.987" endtime="20250531 04:20:14.100"/>
</kw>
<status status="PASS" starttime="20250531 04:20:10.987" endtime="20250531 04:20:14.100"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:14.103" level="INFO">Running command 'ozone sh volume info /89303-without-scheme | jq -r '. | select(.name=="89303-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:17.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:17.404" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250531 04:20:14.101" endtime="20250531 04:20:17.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:17.405" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250531 04:20:17.404" endtime="20250531 04:20:17.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:17.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:17.405" endtime="20250531 04:20:17.405"/>
</kw>
<status status="PASS" starttime="20250531 04:20:14.101" endtime="20250531 04:20:17.405"/>
</kw>
<msg timestamp="20250531 04:20:17.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:14.101" endtime="20250531 04:20:17.406"/>
</kw>
<msg timestamp="20250531 04:20:17.406" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250531 04:20:14.100" endtime="20250531 04:20:17.406"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:20:17.406" endtime="20250531 04:20:17.406"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:17.410" level="INFO">Running command 'ozone sh bucket create /89303-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:20.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:20.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:20:17.407" endtime="20250531 04:20:20.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:20.374" level="INFO"/>
<status status="PASS" starttime="20250531 04:20:20.373" endtime="20250531 04:20:20.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:20.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:20.374" endtime="20250531 04:20:20.375"/>
</kw>
<status status="PASS" starttime="20250531 04:20:17.407" endtime="20250531 04:20:20.375"/>
</kw>
<msg timestamp="20250531 04:20:20.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:17.407" endtime="20250531 04:20:20.376"/>
</kw>
<msg timestamp="20250531 04:20:20.376" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:20:17.406" endtime="20250531 04:20:20.376"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250531 04:20:20.377" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250531 04:20:20.376" endtime="20250531 04:20:20.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:20.380" level="INFO">Running command 'ozone sh bucket info /89303-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250531 04:20:23.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:23.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:20:20.378" endtime="20250531 04:20:23.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:23.502" level="INFO"/>
<status status="PASS" starttime="20250531 04:20:23.501" endtime="20250531 04:20:23.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:23.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:23.502" endtime="20250531 04:20:23.502"/>
</kw>
<status status="PASS" starttime="20250531 04:20:20.378" endtime="20250531 04:20:23.502"/>
</kw>
<msg timestamp="20250531 04:20:23.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:20.378" endtime="20250531 04:20:23.503"/>
</kw>
<status status="PASS" starttime="20250531 04:20:20.377" endtime="20250531 04:20:23.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:23.506" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:23.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:23.511" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20250531 04:20:23.504" endtime="20250531 04:20:23.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:23.512" level="INFO">DISK</msg>
<status status="PASS" starttime="20250531 04:20:23.511" endtime="20250531 04:20:23.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:23.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:23.512" endtime="20250531 04:20:23.512"/>
</kw>
<status status="PASS" starttime="20250531 04:20:23.503" endtime="20250531 04:20:23.512"/>
</kw>
<msg timestamp="20250531 04:20:23.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:23.503" endtime="20250531 04:20:23.513"/>
</kw>
<msg timestamp="20250531 04:20:23.513" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20250531 04:20:23.503" endtime="20250531 04:20:23.513"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:20:23.513" endtime="20250531 04:20:23.513"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:23.516" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:23.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:23.521" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250531 04:20:23.514" endtime="20250531 04:20:23.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:23.522" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250531 04:20:23.521" endtime="20250531 04:20:23.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:23.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:23.522" endtime="20250531 04:20:23.522"/>
</kw>
<status status="PASS" starttime="20250531 04:20:23.514" endtime="20250531 04:20:23.522"/>
</kw>
<msg timestamp="20250531 04:20:23.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:23.514" endtime="20250531 04:20:23.523"/>
</kw>
<msg timestamp="20250531 04:20:23.523" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250531 04:20:23.513" endtime="20250531 04:20:23.523"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:20:23.523" endtime="20250531 04:20:23.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:23.526" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:23.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:23.531" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20250531 04:20:23.524" endtime="20250531 04:20:23.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:23.532" level="INFO">100</msg>
<status status="PASS" starttime="20250531 04:20:23.531" endtime="20250531 04:20:23.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:23.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:23.532" endtime="20250531 04:20:23.532"/>
</kw>
<status status="PASS" starttime="20250531 04:20:23.524" endtime="20250531 04:20:23.532"/>
</kw>
<msg timestamp="20250531 04:20:23.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:23.523" endtime="20250531 04:20:23.532"/>
</kw>
<msg timestamp="20250531 04:20:23.532" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20250531 04:20:23.523" endtime="20250531 04:20:23.532"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:20:23.533" endtime="20250531 04:20:23.533"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:23.536" level="INFO">Running command 'ozone sh bucket setquota /89303-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:26.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:26.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:20:23.534" endtime="20250531 04:20:26.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:26.527" level="INFO"/>
<status status="PASS" starttime="20250531 04:20:26.527" endtime="20250531 04:20:26.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:26.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:26.527" endtime="20250531 04:20:26.528"/>
</kw>
<status status="PASS" starttime="20250531 04:20:23.533" endtime="20250531 04:20:26.528"/>
</kw>
<msg timestamp="20250531 04:20:26.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:23.533" endtime="20250531 04:20:26.528"/>
</kw>
<status status="PASS" starttime="20250531 04:20:23.533" endtime="20250531 04:20:26.528"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:26.531" level="INFO">Running command 'ozone sh bucket info /89303-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250531 04:20:29.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:29.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:20:26.529" endtime="20250531 04:20:29.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:29.593" level="INFO"/>
<status status="PASS" starttime="20250531 04:20:29.592" endtime="20250531 04:20:29.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:29.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:29.593" endtime="20250531 04:20:29.593"/>
</kw>
<status status="PASS" starttime="20250531 04:20:26.529" endtime="20250531 04:20:29.593"/>
</kw>
<msg timestamp="20250531 04:20:29.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:26.529" endtime="20250531 04:20:29.593"/>
</kw>
<status status="PASS" starttime="20250531 04:20:26.528" endtime="20250531 04:20:29.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:29.597" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:29.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:29.603" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20250531 04:20:29.595" endtime="20250531 04:20:29.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:29.603" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20250531 04:20:29.603" endtime="20250531 04:20:29.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:29.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:29.604" endtime="20250531 04:20:29.604"/>
</kw>
<status status="PASS" starttime="20250531 04:20:29.594" endtime="20250531 04:20:29.604"/>
</kw>
<msg timestamp="20250531 04:20:29.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:29.594" endtime="20250531 04:20:29.604"/>
</kw>
<msg timestamp="20250531 04:20:29.604" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20250531 04:20:29.594" endtime="20250531 04:20:29.604"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:20:29.604" endtime="20250531 04:20:29.605"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:29.608" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:29.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:29.614" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20250531 04:20:29.606" endtime="20250531 04:20:29.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:29.615" level="INFO">1000</msg>
<status status="PASS" starttime="20250531 04:20:29.614" endtime="20250531 04:20:29.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:29.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:29.615" endtime="20250531 04:20:29.615"/>
</kw>
<status status="PASS" starttime="20250531 04:20:29.605" endtime="20250531 04:20:29.616"/>
</kw>
<msg timestamp="20250531 04:20:29.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:29.605" endtime="20250531 04:20:29.616"/>
</kw>
<msg timestamp="20250531 04:20:29.616" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20250531 04:20:29.605" endtime="20250531 04:20:29.616"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:20:29.616" endtime="20250531 04:20:29.616"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:29.620" level="INFO">Running command 'ozone sh bucket list /89303-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:32.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:32.706" level="INFO">${output} = 89303-without-scheme</msg>
<status status="PASS" starttime="20250531 04:20:29.617" endtime="20250531 04:20:32.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:32.707" level="INFO">89303-without-scheme</msg>
<status status="PASS" starttime="20250531 04:20:32.706" endtime="20250531 04:20:32.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:32.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:32.707" endtime="20250531 04:20:32.707"/>
</kw>
<status status="PASS" starttime="20250531 04:20:29.617" endtime="20250531 04:20:32.707"/>
</kw>
<msg timestamp="20250531 04:20:32.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:29.617" endtime="20250531 04:20:32.708"/>
</kw>
<msg timestamp="20250531 04:20:32.708" level="INFO">${result} = 89303-without-scheme</msg>
<status status="PASS" starttime="20250531 04:20:29.616" endtime="20250531 04:20:32.708"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:20:32.708" endtime="20250531 04:20:32.708"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:32.712" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:32.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:32.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:20:32.710" endtime="20250531 04:20:32.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:32.716" level="INFO"/>
<status status="PASS" starttime="20250531 04:20:32.715" endtime="20250531 04:20:32.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:32.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:32.716" endtime="20250531 04:20:32.716"/>
</kw>
<status status="PASS" starttime="20250531 04:20:32.709" endtime="20250531 04:20:32.716"/>
</kw>
<msg timestamp="20250531 04:20:32.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:32.709" endtime="20250531 04:20:32.716"/>
</kw>
<status status="PASS" starttime="20250531 04:20:32.709" endtime="20250531 04:20:32.716"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<arg>key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250531 04:20:32.718" level="INFO">${cmd} = key put /89303-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get /89303-without-scheme/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS /89303-without-scheme/bb1/key1_RATIS /op...</msg>
<status status="PASS" starttime="20250531 04:20:32.717" endtime="20250531 04:20:32.718"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:32.720" level="INFO">Running command 'ozone sh --execute 'key put /89303-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get /89303-without-scheme/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS /89303-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt' --execute 'key get /89303-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS' --execute 'key cp /89303-without-scheme/bb1 key1 key1-copy' --execute 'key get /89303-without-scheme/bb1/key1-copy /tmp/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:37.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:37.526" level="INFO">${output} = key put /89303-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt
key get /89303-without-scheme/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS /89303-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt
key ...</msg>
<status status="PASS" starttime="20250531 04:20:32.718" endtime="20250531 04:20:37.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:37.527" level="INFO">key put /89303-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt
key get /89303-without-scheme/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS /89303-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt
key get /89303-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS
key cp /89303-without-scheme/bb1 key1 key1-copy
key get /89303-without-scheme/bb1/key1-copy /tmp/key1-copy</msg>
<status status="PASS" starttime="20250531 04:20:37.526" endtime="20250531 04:20:37.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:37.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:37.527" endtime="20250531 04:20:37.528"/>
</kw>
<status status="PASS" starttime="20250531 04:20:32.718" endtime="20250531 04:20:37.528"/>
</kw>
<msg timestamp="20250531 04:20:37.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:32.718" endtime="20250531 04:20:37.528"/>
</kw>
<status status="PASS" starttime="20250531 04:20:32.716" endtime="20250531 04:20:37.528"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:37.531" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:37.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:37.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:20:37.529" endtime="20250531 04:20:37.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:37.534" level="INFO"/>
<status status="PASS" starttime="20250531 04:20:37.534" endtime="20250531 04:20:37.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:37.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:37.534" endtime="20250531 04:20:37.535"/>
</kw>
<status status="PASS" starttime="20250531 04:20:37.528" endtime="20250531 04:20:37.535"/>
</kw>
<msg timestamp="20250531 04:20:37.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:37.528" endtime="20250531 04:20:37.535"/>
</kw>
<status status="PASS" starttime="20250531 04:20:37.528" endtime="20250531 04:20:37.535"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:37.538" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:37.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:37.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:20:37.536" endtime="20250531 04:20:37.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:37.541" level="INFO"/>
<status status="PASS" starttime="20250531 04:20:37.540" endtime="20250531 04:20:37.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:37.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:37.541" endtime="20250531 04:20:37.541"/>
</kw>
<status status="PASS" starttime="20250531 04:20:37.536" endtime="20250531 04:20:37.541"/>
</kw>
<msg timestamp="20250531 04:20:37.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:37.535" endtime="20250531 04:20:37.542"/>
</kw>
<status status="PASS" starttime="20250531 04:20:37.535" endtime="20250531 04:20:37.542"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:37.544" level="INFO">Running command 'ozone sh key info /89303-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:40.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:40.552" level="INFO">${output} = {
  "volumeName": "89303-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:20:36.940Z",
  "modificationTime": "...</msg>
<status status="PASS" starttime="20250531 04:20:37.543" endtime="20250531 04:20:40.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:40.553" level="INFO">{
  "volumeName": "89303-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:20:36.940Z",
  "modificationTime": "2025-05-31T04:20:36.978Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600107,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 525,
  "file": true
}</msg>
<status status="PASS" starttime="20250531 04:20:40.552" endtime="20250531 04:20:40.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:40.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:40.554" endtime="20250531 04:20:40.554"/>
</kw>
<status status="PASS" starttime="20250531 04:20:37.542" endtime="20250531 04:20:40.554"/>
</kw>
<msg timestamp="20250531 04:20:40.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:37.542" endtime="20250531 04:20:40.555"/>
</kw>
<msg timestamp="20250531 04:20:40.555" level="INFO">${result} = {
  "volumeName": "89303-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:20:36.940Z",
  "modificationTime": "...</msg>
<status status="PASS" starttime="20250531 04:20:37.542" endtime="20250531 04:20:40.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:20:40.555" endtime="20250531 04:20:40.555"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:40.559" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:40.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:40.562" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:20:40.556" endtime="20250531 04:20:40.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:40.562" level="INFO"/>
<status status="PASS" starttime="20250531 04:20:40.562" endtime="20250531 04:20:40.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:40.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:40.562" endtime="20250531 04:20:40.563"/>
</kw>
<status status="PASS" starttime="20250531 04:20:40.556" endtime="20250531 04:20:40.563"/>
</kw>
<msg timestamp="20250531 04:20:40.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:40.556" endtime="20250531 04:20:40.563"/>
</kw>
<status status="PASS" starttime="20250531 04:20:40.555" endtime="20250531 04:20:40.563"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:40.565" level="INFO">Running command 'ozone sh key get /89303-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:43.392" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:20:43.392" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250531 04:20:40.564" endtime="20250531 04:20:43.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:43.393" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250531 04:20:43.393" endtime="20250531 04:20:43.393"/>
</kw>
<msg timestamp="20250531 04:20:43.394" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250531 04:20:40.563" endtime="20250531 04:20:43.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:20:43.394" endtime="20250531 04:20:43.394"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:43.397" level="INFO">Running command 'ozone sh key get --force /89303-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:47.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:47.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:20:43.395" endtime="20250531 04:20:47.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:47.571" level="INFO"/>
<status status="PASS" starttime="20250531 04:20:47.571" endtime="20250531 04:20:47.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:47.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:47.572" endtime="20250531 04:20:47.572"/>
</kw>
<status status="PASS" starttime="20250531 04:20:43.395" endtime="20250531 04:20:47.572"/>
</kw>
<msg timestamp="20250531 04:20:47.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:43.394" endtime="20250531 04:20:47.572"/>
</kw>
<msg timestamp="20250531 04:20:47.572" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:20:43.394" endtime="20250531 04:20:47.572"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:20:47.572" endtime="20250531 04:20:47.573"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 sample.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:47.575" level="INFO">Running command 'ozone sh key put /89303-without-scheme/bb1/key1 sample.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:50.347" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:20:50.347" level="INFO">${output} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250531 04:20:47.573" endtime="20250531 04:20:50.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:50.348" level="INFO">Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250531 04:20:50.348" endtime="20250531 04:20:50.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:50.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:50.349" endtime="20250531 04:20:50.349"/>
</kw>
<msg timestamp="20250531 04:20:50.349" level="INFO">${result} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250531 04:20:47.573" endtime="20250531 04:20:50.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File not found: sample.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:20:50.349" endtime="20250531 04:20:50.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:50.353" level="INFO">Running command 'ozone sh key info /89303-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:53.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:53.538" level="INFO">${output} = {
  "volumeName": "89303-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:20:35.622Z",
  "modificationTime": "2025-0...</msg>
<status status="PASS" starttime="20250531 04:20:50.351" endtime="20250531 04:20:53.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:53.539" level="INFO">{
  "volumeName": "89303-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:20:35.622Z",
  "modificationTime": "2025-05-31T04:20:36.723Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600106,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 521,
  "file": true
}</msg>
<status status="PASS" starttime="20250531 04:20:53.538" endtime="20250531 04:20:53.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:53.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:53.539" endtime="20250531 04:20:53.539"/>
</kw>
<status status="PASS" starttime="20250531 04:20:50.350" endtime="20250531 04:20:53.539"/>
</kw>
<msg timestamp="20250531 04:20:53.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:50.350" endtime="20250531 04:20:53.539"/>
</kw>
<msg timestamp="20250531 04:20:53.540" level="INFO">${result} = {
  "volumeName": "89303-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:20:35.622Z",
  "modificationTime": "2025-0...</msg>
<status status="PASS" starttime="20250531 04:20:50.349" endtime="20250531 04:20:53.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:20:53.540" endtime="20250531 04:20:53.540"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:20:53.540" endtime="20250531 04:20:53.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:53.543" level="INFO">Running command 'ozone sh key list /89303-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:56.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:56.635" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250531 04:20:53.541" endtime="20250531 04:20:56.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:56.636" level="INFO">key1</msg>
<status status="PASS" starttime="20250531 04:20:56.636" endtime="20250531 04:20:56.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:56.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:56.636" endtime="20250531 04:20:56.637"/>
</kw>
<status status="PASS" starttime="20250531 04:20:53.541" endtime="20250531 04:20:56.637"/>
</kw>
<msg timestamp="20250531 04:20:56.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:53.541" endtime="20250531 04:20:56.637"/>
</kw>
<msg timestamp="20250531 04:20:56.637" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20250531 04:20:53.540" endtime="20250531 04:20:56.637"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:20:56.637" endtime="20250531 04:20:56.638"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:56.641" level="INFO">Running command 'ozone sh key rename /89303-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:20:59.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:20:59.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:20:56.639" endtime="20250531 04:20:59.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:20:59.728" level="INFO"/>
<status status="PASS" starttime="20250531 04:20:59.727" endtime="20250531 04:20:59.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:20:59.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:20:59.728" endtime="20250531 04:20:59.728"/>
</kw>
<status status="PASS" starttime="20250531 04:20:56.638" endtime="20250531 04:20:59.728"/>
</kw>
<msg timestamp="20250531 04:20:59.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:56.638" endtime="20250531 04:20:59.728"/>
</kw>
<status status="PASS" starttime="20250531 04:20:56.638" endtime="20250531 04:20:59.728"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:20:59.732" level="INFO">Running command 'ozone sh key list /89303-without-scheme/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:02.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:02.730" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20250531 04:20:59.729" endtime="20250531 04:21:02.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:02.731" level="INFO">key2</msg>
<status status="PASS" starttime="20250531 04:21:02.730" endtime="20250531 04:21:02.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:02.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:02.731" endtime="20250531 04:21:02.731"/>
</kw>
<status status="PASS" starttime="20250531 04:20:59.729" endtime="20250531 04:21:02.731"/>
</kw>
<msg timestamp="20250531 04:21:02.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:20:59.729" endtime="20250531 04:21:02.732"/>
</kw>
<msg timestamp="20250531 04:21:02.732" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20250531 04:20:59.728" endtime="20250531 04:21:02.732"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:21:02.732" endtime="20250531 04:21:02.732"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250531 04:21:02.733" level="INFO">${cmd} = key delete /89303-without-scheme/bb1/key2' --execute 'key delete /89303-without-scheme/bb1/key1_RATIS' --execute 'key delete /89303-without-scheme/bb1/key1-copy</msg>
<status status="PASS" starttime="20250531 04:21:02.733" endtime="20250531 04:21:02.733"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:02.736" level="INFO">Running command 'ozone sh --execute 'key delete /89303-without-scheme/bb1/key2' --execute 'key delete /89303-without-scheme/bb1/key1_RATIS' --execute 'key delete /89303-without-scheme/bb1/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:06.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:06.069" level="INFO">${output} = key delete /89303-without-scheme/bb1/key2
Key moved inside Trash: /.Trash/hadoop/Current/key2 
key delete /89303-without-scheme/bb1/key1_RATIS
Key moved inside Trash: /.Trash/hadoop/Current/key1_RATIS...</msg>
<status status="PASS" starttime="20250531 04:21:02.734" endtime="20250531 04:21:06.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:06.070" level="INFO">key delete /89303-without-scheme/bb1/key2
Key moved inside Trash: /.Trash/hadoop/Current/key2 
key delete /89303-without-scheme/bb1/key1_RATIS
Key moved inside Trash: /.Trash/hadoop/Current/key1_RATIS 
key delete /89303-without-scheme/bb1/key1-copy
Key moved inside Trash: /.Trash/hadoop/Current/key1-copy </msg>
<status status="PASS" starttime="20250531 04:21:06.070" endtime="20250531 04:21:06.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:06.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:06.070" endtime="20250531 04:21:06.071"/>
</kw>
<status status="PASS" starttime="20250531 04:21:02.733" endtime="20250531 04:21:06.071"/>
</kw>
<msg timestamp="20250531 04:21:06.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:02.733" endtime="20250531 04:21:06.071"/>
</kw>
<status status="PASS" starttime="20250531 04:21:02.732" endtime="20250531 04:21:06.071"/>
</kw>
<status status="PASS" starttime="20250531 04:20:32.708" endtime="20250531 04:21:06.071"/>
</kw>
<status status="PASS" starttime="20250531 04:20:32.708" endtime="20250531 04:21:06.071"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:06.075" level="INFO">Running command 'ozone sh volume clrquota --space-quota /89303-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:08.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:08.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:21:06.072" endtime="20250531 04:21:08.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:08.975" level="INFO"/>
<status status="PASS" starttime="20250531 04:21:08.975" endtime="20250531 04:21:08.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:08.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:08.975" endtime="20250531 04:21:08.976"/>
</kw>
<status status="PASS" starttime="20250531 04:21:06.072" endtime="20250531 04:21:08.976"/>
</kw>
<msg timestamp="20250531 04:21:08.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:06.072" endtime="20250531 04:21:08.976"/>
</kw>
<status status="PASS" starttime="20250531 04:21:06.071" endtime="20250531 04:21:08.976"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:08.979" level="INFO">Running command 'ozone sh volume info /89303-without-scheme | jq -r '. | select(.name=="89303-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:12.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:12.197" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:21:08.977" endtime="20250531 04:21:12.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:12.198" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:21:12.197" endtime="20250531 04:21:12.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:12.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:12.198" endtime="20250531 04:21:12.198"/>
</kw>
<status status="PASS" starttime="20250531 04:21:08.977" endtime="20250531 04:21:12.198"/>
</kw>
<msg timestamp="20250531 04:21:12.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:08.977" endtime="20250531 04:21:12.199"/>
</kw>
<msg timestamp="20250531 04:21:12.199" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:21:08.976" endtime="20250531 04:21:12.199"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:21:12.199" endtime="20250531 04:21:12.199"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:12.203" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /89303-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:14.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:14.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:21:12.200" endtime="20250531 04:21:14.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:14.894" level="INFO"/>
<status status="PASS" starttime="20250531 04:21:14.893" endtime="20250531 04:21:14.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:14.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:14.894" endtime="20250531 04:21:14.894"/>
</kw>
<status status="PASS" starttime="20250531 04:21:12.200" endtime="20250531 04:21:14.894"/>
</kw>
<msg timestamp="20250531 04:21:14.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:12.200" endtime="20250531 04:21:14.895"/>
</kw>
<status status="PASS" starttime="20250531 04:21:12.199" endtime="20250531 04:21:14.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:14.898" level="INFO">Running command 'ozone sh volume info /89303-without-scheme | jq -r '. | select(.name=="89303-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:18.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:18.004" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:21:14.896" endtime="20250531 04:21:18.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:18.005" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:21:18.004" endtime="20250531 04:21:18.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:18.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:18.005" endtime="20250531 04:21:18.005"/>
</kw>
<status status="PASS" starttime="20250531 04:21:14.895" endtime="20250531 04:21:18.005"/>
</kw>
<msg timestamp="20250531 04:21:18.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:14.895" endtime="20250531 04:21:18.006"/>
</kw>
<msg timestamp="20250531 04:21:18.006" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:21:14.895" endtime="20250531 04:21:18.006"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:21:18.006" endtime="20250531 04:21:18.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:18.009" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /89303-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:20.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:20.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:21:18.007" endtime="20250531 04:21:20.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:20.906" level="INFO"/>
<status status="PASS" starttime="20250531 04:21:20.905" endtime="20250531 04:21:20.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:20.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:20.906" endtime="20250531 04:21:20.906"/>
</kw>
<status status="PASS" starttime="20250531 04:21:18.007" endtime="20250531 04:21:20.907"/>
</kw>
<msg timestamp="20250531 04:21:20.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:18.007" endtime="20250531 04:21:20.907"/>
</kw>
<status status="PASS" starttime="20250531 04:21:18.006" endtime="20250531 04:21:20.907"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:20.911" level="INFO">Running command 'ozone sh bucket info /89303-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:24.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:24.075" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:21:20.908" endtime="20250531 04:21:24.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:24.075" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:21:24.075" endtime="20250531 04:21:24.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:24.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:24.076" endtime="20250531 04:21:24.076"/>
</kw>
<status status="PASS" starttime="20250531 04:21:20.908" endtime="20250531 04:21:24.076"/>
</kw>
<msg timestamp="20250531 04:21:24.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:20.908" endtime="20250531 04:21:24.076"/>
</kw>
<msg timestamp="20250531 04:21:24.076" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:21:20.907" endtime="20250531 04:21:24.076"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:21:24.077" endtime="20250531 04:21:24.077"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:24.080" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /89303-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:26.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:26.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:21:24.078" endtime="20250531 04:21:26.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:26.950" level="INFO"/>
<status status="PASS" starttime="20250531 04:21:26.950" endtime="20250531 04:21:26.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:26.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:26.950" endtime="20250531 04:21:26.951"/>
</kw>
<status status="PASS" starttime="20250531 04:21:24.078" endtime="20250531 04:21:26.951"/>
</kw>
<msg timestamp="20250531 04:21:26.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:24.077" endtime="20250531 04:21:26.951"/>
</kw>
<status status="PASS" starttime="20250531 04:21:24.077" endtime="20250531 04:21:26.951"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:26.954" level="INFO">Running command 'ozone sh bucket info /89303-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:30.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:30.023" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:21:26.952" endtime="20250531 04:21:30.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:30.024" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:21:30.024" endtime="20250531 04:21:30.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:30.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:30.025" endtime="20250531 04:21:30.025"/>
</kw>
<status status="PASS" starttime="20250531 04:21:26.952" endtime="20250531 04:21:30.025"/>
</kw>
<msg timestamp="20250531 04:21:30.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:26.952" endtime="20250531 04:21:30.025"/>
</kw>
<msg timestamp="20250531 04:21:30.025" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:21:26.951" endtime="20250531 04:21:30.025"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:21:30.025" endtime="20250531 04:21:30.026"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:30.029" level="INFO">Running command 'ozone sh bucket delete -r --yes /89303-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:33.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:33.252" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250531 04:21:30.027" endtime="20250531 04:21:33.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:33.253" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250531 04:21:33.252" endtime="20250531 04:21:33.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:33.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:33.253" endtime="20250531 04:21:33.253"/>
</kw>
<status status="PASS" starttime="20250531 04:21:30.026" endtime="20250531 04:21:33.253"/>
</kw>
<msg timestamp="20250531 04:21:33.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:30.026" endtime="20250531 04:21:33.254"/>
</kw>
<status status="PASS" starttime="20250531 04:21:30.026" endtime="20250531 04:21:33.254"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:33.257" level="INFO">Running command 'ozone sh volume delete /89303-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:36.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:36.135" level="INFO">${output} = Volume 89303-without-scheme is deleted</msg>
<status status="PASS" starttime="20250531 04:21:33.255" endtime="20250531 04:21:36.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:36.136" level="INFO">Volume 89303-without-scheme is deleted</msg>
<status status="PASS" starttime="20250531 04:21:36.136" endtime="20250531 04:21:36.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:36.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:36.136" endtime="20250531 04:21:36.137"/>
</kw>
<status status="PASS" starttime="20250531 04:21:33.254" endtime="20250531 04:21:36.137"/>
</kw>
<msg timestamp="20250531 04:21:36.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:33.254" endtime="20250531 04:21:36.137"/>
</kw>
<status status="PASS" starttime="20250531 04:21:33.254" endtime="20250531 04:21:36.137"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:36.140" level="INFO">Running command 'ozone sh volume create /89303-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:38.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:38.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:21:36.138" endtime="20250531 04:21:38.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:38.945" level="INFO"/>
<status status="PASS" starttime="20250531 04:21:38.945" endtime="20250531 04:21:38.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:38.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:38.945" endtime="20250531 04:21:38.946"/>
</kw>
<status status="PASS" starttime="20250531 04:21:36.138" endtime="20250531 04:21:38.946"/>
</kw>
<msg timestamp="20250531 04:21:38.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:36.138" endtime="20250531 04:21:38.946"/>
</kw>
<status status="PASS" starttime="20250531 04:21:36.137" endtime="20250531 04:21:38.946"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:38.950" level="INFO">Running command 'ozone sh volume info /89303-without-scheme &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250531 04:21:42.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:42.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:21:38.948" endtime="20250531 04:21:42.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:42.023" level="INFO"/>
<status status="PASS" starttime="20250531 04:21:42.022" endtime="20250531 04:21:42.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:42.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:42.023" endtime="20250531 04:21:42.023"/>
</kw>
<status status="PASS" starttime="20250531 04:21:38.947" endtime="20250531 04:21:42.024"/>
</kw>
<msg timestamp="20250531 04:21:42.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:38.947" endtime="20250531 04:21:42.024"/>
</kw>
<status status="PASS" starttime="20250531 04:21:38.946" endtime="20250531 04:21:42.024"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:42.027" level="INFO">Running command 'jq -r '. | select(.name=="89303-without-scheme") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:42.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:42.032" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:21:42.025" endtime="20250531 04:21:42.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:42.032" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:21:42.032" endtime="20250531 04:21:42.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:42.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:42.033" endtime="20250531 04:21:42.033"/>
</kw>
<status status="PASS" starttime="20250531 04:21:42.024" endtime="20250531 04:21:42.033"/>
</kw>
<msg timestamp="20250531 04:21:42.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:42.024" endtime="20250531 04:21:42.033"/>
</kw>
<msg timestamp="20250531 04:21:42.033" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:21:42.024" endtime="20250531 04:21:42.033"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:21:42.033" endtime="20250531 04:21:42.034"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:42.036" level="INFO">Running command 'jq -r '. | select(.name=="89303-without-scheme") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:42.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:42.041" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:21:42.035" endtime="20250531 04:21:42.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:42.042" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:21:42.041" endtime="20250531 04:21:42.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:42.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:42.042" endtime="20250531 04:21:42.042"/>
</kw>
<status status="PASS" starttime="20250531 04:21:42.034" endtime="20250531 04:21:42.042"/>
</kw>
<msg timestamp="20250531 04:21:42.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:42.034" endtime="20250531 04:21:42.043"/>
</kw>
<msg timestamp="20250531 04:21:42.043" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:21:42.034" endtime="20250531 04:21:42.043"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:21:42.043" endtime="20250531 04:21:42.043"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:42.046" level="INFO">Running command 'ozone sh bucket create /89303-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:44.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:44.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:21:42.044" endtime="20250531 04:21:44.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:44.937" level="INFO"/>
<status status="PASS" starttime="20250531 04:21:44.936" endtime="20250531 04:21:44.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:44.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:44.937" endtime="20250531 04:21:44.938"/>
</kw>
<status status="PASS" starttime="20250531 04:21:42.044" endtime="20250531 04:21:44.938"/>
</kw>
<msg timestamp="20250531 04:21:44.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:42.044" endtime="20250531 04:21:44.938"/>
</kw>
<status status="PASS" starttime="20250531 04:21:42.043" endtime="20250531 04:21:44.938"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:44.942" level="INFO">Running command 'ozone sh bucket info /89303-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250531 04:21:48.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:48.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:21:44.939" endtime="20250531 04:21:48.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:48.037" level="INFO"/>
<status status="PASS" starttime="20250531 04:21:48.036" endtime="20250531 04:21:48.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:48.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:48.037" endtime="20250531 04:21:48.037"/>
</kw>
<status status="PASS" starttime="20250531 04:21:44.939" endtime="20250531 04:21:48.037"/>
</kw>
<msg timestamp="20250531 04:21:48.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:44.939" endtime="20250531 04:21:48.037"/>
</kw>
<status status="PASS" starttime="20250531 04:21:44.938" endtime="20250531 04:21:48.038"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:48.041" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:48.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:48.045" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:21:48.039" endtime="20250531 04:21:48.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:48.046" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:21:48.046" endtime="20250531 04:21:48.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:48.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:48.046" endtime="20250531 04:21:48.047"/>
</kw>
<status status="PASS" starttime="20250531 04:21:48.038" endtime="20250531 04:21:48.047"/>
</kw>
<msg timestamp="20250531 04:21:48.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:48.038" endtime="20250531 04:21:48.047"/>
</kw>
<msg timestamp="20250531 04:21:48.047" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:21:48.038" endtime="20250531 04:21:48.047"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:21:48.047" endtime="20250531 04:21:48.047"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:48.050" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:48.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:48.055" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:21:48.048" endtime="20250531 04:21:48.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:48.055" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:21:48.055" endtime="20250531 04:21:48.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:48.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:48.056" endtime="20250531 04:21:48.056"/>
</kw>
<status status="PASS" starttime="20250531 04:21:48.048" endtime="20250531 04:21:48.056"/>
</kw>
<msg timestamp="20250531 04:21:48.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:48.048" endtime="20250531 04:21:48.056"/>
</kw>
<msg timestamp="20250531 04:21:48.056" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:21:48.047" endtime="20250531 04:21:48.056"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:21:48.056" endtime="20250531 04:21:48.057"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:48.059" level="INFO">Running command 'ozone sh bucket delete /89303-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:50.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:50.907" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250531 04:21:48.058" endtime="20250531 04:21:50.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:50.908" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250531 04:21:50.907" endtime="20250531 04:21:50.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:50.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:50.908" endtime="20250531 04:21:50.908"/>
</kw>
<status status="PASS" starttime="20250531 04:21:48.057" endtime="20250531 04:21:50.909"/>
</kw>
<msg timestamp="20250531 04:21:50.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:48.057" endtime="20250531 04:21:50.909"/>
</kw>
<status status="PASS" starttime="20250531 04:21:48.057" endtime="20250531 04:21:50.909"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:50.912" level="INFO">Running command 'ozone sh volume delete /89303-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:53.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:53.863" level="INFO">${output} = Volume 89303-without-scheme is deleted</msg>
<status status="PASS" starttime="20250531 04:21:50.910" endtime="20250531 04:21:53.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:53.864" level="INFO">Volume 89303-without-scheme is deleted</msg>
<status status="PASS" starttime="20250531 04:21:53.863" endtime="20250531 04:21:53.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:53.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:53.864" endtime="20250531 04:21:53.864"/>
</kw>
<status status="PASS" starttime="20250531 04:21:50.910" endtime="20250531 04:21:53.865"/>
</kw>
<msg timestamp="20250531 04:21:53.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:50.909" endtime="20250531 04:21:53.865"/>
</kw>
<status status="PASS" starttime="20250531 04:21:50.909" endtime="20250531 04:21:53.865"/>
</kw>
<status status="PASS" starttime="20250531 04:20:02.369" endtime="20250531 04:21:53.865"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250531 04:20:02.369" endtime="20250531 04:21:53.865"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20250531 04:20:02.339" endtime="20250531 04:21:53.866"/>
</suite>
<suite id="s1-s4-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:21:53.873" level="INFO">${random} = 17991</msg>
<status status="PASS" starttime="20250531 04:21:53.873" endtime="20250531 04:21:53.873"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250531 04:21:53.873" level="INFO">${prefix} = 17991</msg>
<status status="PASS" starttime="20250531 04:21:53.873" endtime="20250531 04:21:53.873"/>
</kw>
<status status="PASS" starttime="20250531 04:21:53.873" endtime="20250531 04:21:53.874"/>
</kw>
<test id="s1-s4-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:21:53.874" endtime="20250531 04:21:53.874"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:53.877" level="INFO">Running command 'ozone sh volume info o3://om:9862/17991-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:56.637" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:21:56.637" level="INFO">${output} = VOLUME_NOT_FOUND Volume 17991-with-host is not found</msg>
<status status="PASS" starttime="20250531 04:21:53.875" endtime="20250531 04:21:56.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:56.638" level="INFO">VOLUME_NOT_FOUND Volume 17991-with-host is not found</msg>
<status status="PASS" starttime="20250531 04:21:56.638" endtime="20250531 04:21:56.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:56.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:56.638" endtime="20250531 04:21:56.639"/>
</kw>
<msg timestamp="20250531 04:21:56.639" level="INFO">${result} = VOLUME_NOT_FOUND Volume 17991-with-host is not found</msg>
<status status="PASS" starttime="20250531 04:21:53.875" endtime="20250531 04:21:56.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:21:56.639" endtime="20250531 04:21:56.639"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:56.643" level="INFO">Running command 'ozone sh volume create o3://om:9862/17991-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:21:59.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:21:59.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:21:56.641" endtime="20250531 04:21:59.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:21:59.511" level="INFO"/>
<status status="PASS" starttime="20250531 04:21:59.510" endtime="20250531 04:21:59.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:21:59.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:21:59.511" endtime="20250531 04:21:59.511"/>
</kw>
<status status="PASS" starttime="20250531 04:21:56.640" endtime="20250531 04:21:59.511"/>
</kw>
<msg timestamp="20250531 04:21:59.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:56.640" endtime="20250531 04:21:59.512"/>
</kw>
<msg timestamp="20250531 04:21:59.512" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:21:56.639" endtime="20250531 04:21:59.512"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250531 04:21:59.512" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250531 04:21:59.512" endtime="20250531 04:21:59.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:21:59.516" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="17991-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:02.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:02.734" level="INFO">${output} = {
  "metadata": {},
  "name": "17991-with-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2025-0...</msg>
<status status="PASS" starttime="20250531 04:21:59.513" endtime="20250531 04:22:02.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:02.735" level="INFO">{
  "metadata": {},
  "name": "17991-with-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2025-05-31T04:21:59.398Z",
  "modificationTime": "2025-05-31T04:21:59.398Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ],
      "aclSet": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "READ",
        "LIST"
      ],
      "aclSet": [
        "READ",
        "LIST"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20250531 04:22:02.735" endtime="20250531 04:22:02.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:02.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:02.736" endtime="20250531 04:22:02.736"/>
</kw>
<status status="PASS" starttime="20250531 04:21:59.513" endtime="20250531 04:22:02.736"/>
</kw>
<msg timestamp="20250531 04:22:02.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:21:59.513" endtime="20250531 04:22:02.736"/>
</kw>
<msg timestamp="20250531 04:22:02.736" level="INFO">${result} = {
  "metadata": {},
  "name": "17991-with-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2025-0...</msg>
<status status="PASS" starttime="20250531 04:21:59.512" endtime="20250531 04:22:02.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:22:02.736" endtime="20250531 04:22:02.737"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:02.740" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/17991-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:05.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:05.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:22:02.738" endtime="20250531 04:22:05.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:05.627" level="INFO"/>
<status status="PASS" starttime="20250531 04:22:05.627" endtime="20250531 04:22:05.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:05.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:05.627" endtime="20250531 04:22:05.628"/>
</kw>
<status status="PASS" starttime="20250531 04:22:02.737" endtime="20250531 04:22:05.628"/>
</kw>
<msg timestamp="20250531 04:22:05.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:02.737" endtime="20250531 04:22:05.628"/>
</kw>
<status status="PASS" starttime="20250531 04:22:02.737" endtime="20250531 04:22:05.628"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:05.631" level="INFO">Running command 'ozone sh volume info o3://om:9862/17991-with-host | jq -r '. | select(.name=="17991-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:08.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:08.651" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250531 04:22:05.629" endtime="20250531 04:22:08.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:08.652" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250531 04:22:08.651" endtime="20250531 04:22:08.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:08.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:08.652" endtime="20250531 04:22:08.652"/>
</kw>
<status status="PASS" starttime="20250531 04:22:05.629" endtime="20250531 04:22:08.653"/>
</kw>
<msg timestamp="20250531 04:22:08.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:05.629" endtime="20250531 04:22:08.653"/>
</kw>
<msg timestamp="20250531 04:22:08.653" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250531 04:22:05.628" endtime="20250531 04:22:08.653"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:22:08.653" endtime="20250531 04:22:08.653"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:08.657" level="INFO">Running command 'ozone sh bucket create o3://om:9862/17991-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:11.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:11.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:22:08.654" endtime="20250531 04:22:11.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:11.604" level="INFO"/>
<status status="PASS" starttime="20250531 04:22:11.603" endtime="20250531 04:22:11.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:11.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:11.604" endtime="20250531 04:22:11.604"/>
</kw>
<status status="PASS" starttime="20250531 04:22:08.654" endtime="20250531 04:22:11.605"/>
</kw>
<msg timestamp="20250531 04:22:11.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:08.654" endtime="20250531 04:22:11.605"/>
</kw>
<msg timestamp="20250531 04:22:11.605" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:22:08.653" endtime="20250531 04:22:11.605"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250531 04:22:11.605" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250531 04:22:11.605" endtime="20250531 04:22:11.605"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:11.608" level="INFO">Running command 'ozone sh bucket info o3://om:9862/17991-with-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250531 04:22:14.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:14.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:22:11.606" endtime="20250531 04:22:14.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:14.763" level="INFO"/>
<status status="PASS" starttime="20250531 04:22:14.762" endtime="20250531 04:22:14.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:14.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:14.763" endtime="20250531 04:22:14.763"/>
</kw>
<status status="PASS" starttime="20250531 04:22:11.606" endtime="20250531 04:22:14.763"/>
</kw>
<msg timestamp="20250531 04:22:14.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:11.606" endtime="20250531 04:22:14.763"/>
</kw>
<status status="PASS" starttime="20250531 04:22:11.605" endtime="20250531 04:22:14.763"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:14.767" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:14.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:14.771" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20250531 04:22:14.764" endtime="20250531 04:22:14.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:14.772" level="INFO">DISK</msg>
<status status="PASS" starttime="20250531 04:22:14.772" endtime="20250531 04:22:14.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:14.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:14.772" endtime="20250531 04:22:14.773"/>
</kw>
<status status="PASS" starttime="20250531 04:22:14.764" endtime="20250531 04:22:14.773"/>
</kw>
<msg timestamp="20250531 04:22:14.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:14.764" endtime="20250531 04:22:14.773"/>
</kw>
<msg timestamp="20250531 04:22:14.773" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20250531 04:22:14.763" endtime="20250531 04:22:14.773"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:22:14.773" endtime="20250531 04:22:14.774"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:14.777" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:14.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:14.781" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250531 04:22:14.775" endtime="20250531 04:22:14.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:14.782" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250531 04:22:14.782" endtime="20250531 04:22:14.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:14.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:14.782" endtime="20250531 04:22:14.783"/>
</kw>
<status status="PASS" starttime="20250531 04:22:14.774" endtime="20250531 04:22:14.783"/>
</kw>
<msg timestamp="20250531 04:22:14.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:14.774" endtime="20250531 04:22:14.783"/>
</kw>
<msg timestamp="20250531 04:22:14.783" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250531 04:22:14.774" endtime="20250531 04:22:14.783"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:22:14.783" endtime="20250531 04:22:14.783"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:14.786" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:14.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:14.791" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20250531 04:22:14.784" endtime="20250531 04:22:14.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:14.792" level="INFO">100</msg>
<status status="PASS" starttime="20250531 04:22:14.791" endtime="20250531 04:22:14.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:14.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:14.792" endtime="20250531 04:22:14.792"/>
</kw>
<status status="PASS" starttime="20250531 04:22:14.784" endtime="20250531 04:22:14.793"/>
</kw>
<msg timestamp="20250531 04:22:14.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:14.784" endtime="20250531 04:22:14.793"/>
</kw>
<msg timestamp="20250531 04:22:14.793" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20250531 04:22:14.784" endtime="20250531 04:22:14.793"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:22:14.793" endtime="20250531 04:22:14.793"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:14.796" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/17991-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:17.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:17.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:22:14.794" endtime="20250531 04:22:17.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:17.695" level="INFO"/>
<status status="PASS" starttime="20250531 04:22:17.694" endtime="20250531 04:22:17.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:17.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:17.695" endtime="20250531 04:22:17.696"/>
</kw>
<status status="PASS" starttime="20250531 04:22:14.794" endtime="20250531 04:22:17.696"/>
</kw>
<msg timestamp="20250531 04:22:17.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:14.794" endtime="20250531 04:22:17.696"/>
</kw>
<status status="PASS" starttime="20250531 04:22:14.793" endtime="20250531 04:22:17.696"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:17.699" level="INFO">Running command 'ozone sh bucket info o3://om:9862/17991-with-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250531 04:22:20.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:20.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:22:17.697" endtime="20250531 04:22:20.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:20.652" level="INFO"/>
<status status="PASS" starttime="20250531 04:22:20.651" endtime="20250531 04:22:20.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:20.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:20.652" endtime="20250531 04:22:20.652"/>
</kw>
<status status="PASS" starttime="20250531 04:22:17.697" endtime="20250531 04:22:20.653"/>
</kw>
<msg timestamp="20250531 04:22:20.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:17.697" endtime="20250531 04:22:20.653"/>
</kw>
<status status="PASS" starttime="20250531 04:22:17.696" endtime="20250531 04:22:20.653"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:20.656" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:20.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:20.661" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20250531 04:22:20.654" endtime="20250531 04:22:20.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:20.662" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20250531 04:22:20.661" endtime="20250531 04:22:20.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:20.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:20.662" endtime="20250531 04:22:20.662"/>
</kw>
<status status="PASS" starttime="20250531 04:22:20.654" endtime="20250531 04:22:20.662"/>
</kw>
<msg timestamp="20250531 04:22:20.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:20.653" endtime="20250531 04:22:20.663"/>
</kw>
<msg timestamp="20250531 04:22:20.663" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20250531 04:22:20.653" endtime="20250531 04:22:20.663"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:22:20.663" endtime="20250531 04:22:20.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:20.666" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:20.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:20.670" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20250531 04:22:20.664" endtime="20250531 04:22:20.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:20.671" level="INFO">1000</msg>
<status status="PASS" starttime="20250531 04:22:20.671" endtime="20250531 04:22:20.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:20.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:20.671" endtime="20250531 04:22:20.672"/>
</kw>
<status status="PASS" starttime="20250531 04:22:20.664" endtime="20250531 04:22:20.672"/>
</kw>
<msg timestamp="20250531 04:22:20.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:20.664" endtime="20250531 04:22:20.672"/>
</kw>
<msg timestamp="20250531 04:22:20.672" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20250531 04:22:20.663" endtime="20250531 04:22:20.672"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:22:20.672" endtime="20250531 04:22:20.672"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:20.675" level="INFO">Running command 'ozone sh bucket list o3://om:9862/17991-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:23.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:23.791" level="INFO">${output} = 17991-with-host</msg>
<status status="PASS" starttime="20250531 04:22:20.673" endtime="20250531 04:22:23.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:23.792" level="INFO">17991-with-host</msg>
<status status="PASS" starttime="20250531 04:22:23.791" endtime="20250531 04:22:23.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:23.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:23.792" endtime="20250531 04:22:23.792"/>
</kw>
<status status="PASS" starttime="20250531 04:22:20.673" endtime="20250531 04:22:23.793"/>
</kw>
<msg timestamp="20250531 04:22:23.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:20.673" endtime="20250531 04:22:23.793"/>
</kw>
<msg timestamp="20250531 04:22:23.793" level="INFO">${result} = 17991-with-host</msg>
<status status="PASS" starttime="20250531 04:22:20.672" endtime="20250531 04:22:23.793"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:22:23.793" endtime="20250531 04:22:23.793"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:23.797" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:23.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:23.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:22:23.795" endtime="20250531 04:22:23.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:23.801" level="INFO"/>
<status status="PASS" starttime="20250531 04:22:23.801" endtime="20250531 04:22:23.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:23.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:23.801" endtime="20250531 04:22:23.802"/>
</kw>
<status status="PASS" starttime="20250531 04:22:23.794" endtime="20250531 04:22:23.802"/>
</kw>
<msg timestamp="20250531 04:22:23.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:23.794" endtime="20250531 04:22:23.802"/>
</kw>
<status status="PASS" starttime="20250531 04:22:23.794" endtime="20250531 04:22:23.802"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<arg>key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250531 04:22:23.803" level="INFO">${cmd} = key put o3://om:9862/17991-with-host/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get o3://om:9862/17991-with-host/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS o3://om:9862/17991-with-ho...</msg>
<status status="PASS" starttime="20250531 04:22:23.803" endtime="20250531 04:22:23.803"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:23.806" level="INFO">Running command 'ozone sh --execute 'key put o3://om:9862/17991-with-host/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get o3://om:9862/17991-with-host/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS o3://om:9862/17991-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt' --execute 'key get o3://om:9862/17991-with-host/bb1/key1_RATIS /tmp/key1_RATIS' --execute 'key cp o3://om:9862/17991-with-host/bb1 key1 key1-copy' --execute 'key get o3://om:9862/17991-with-host/bb1/key1-copy /tmp/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:28.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:28.580" level="INFO">${output} = key put o3://om:9862/17991-with-host/bb1/key1 /opt/hadoop/NOTICE.txt
key get o3://om:9862/17991-with-host/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS o3://om:9862/17991-with-host/bb1/key1_RATIS /opt/h...</msg>
<status status="PASS" starttime="20250531 04:22:23.804" endtime="20250531 04:22:28.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:28.581" level="INFO">key put o3://om:9862/17991-with-host/bb1/key1 /opt/hadoop/NOTICE.txt
key get o3://om:9862/17991-with-host/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS o3://om:9862/17991-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt
key get o3://om:9862/17991-with-host/bb1/key1_RATIS /tmp/key1_RATIS
key cp o3://om:9862/17991-with-host/bb1 key1 key1-copy
key get o3://om:9862/17991-with-host/bb1/key1-copy /tmp/key1-copy</msg>
<status status="PASS" starttime="20250531 04:22:28.581" endtime="20250531 04:22:28.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:28.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:28.581" endtime="20250531 04:22:28.582"/>
</kw>
<status status="PASS" starttime="20250531 04:22:23.803" endtime="20250531 04:22:28.582"/>
</kw>
<msg timestamp="20250531 04:22:28.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:23.803" endtime="20250531 04:22:28.582"/>
</kw>
<status status="PASS" starttime="20250531 04:22:23.802" endtime="20250531 04:22:28.582"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:28.585" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:28.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:28.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:22:28.583" endtime="20250531 04:22:28.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:28.589" level="INFO"/>
<status status="PASS" starttime="20250531 04:22:28.588" endtime="20250531 04:22:28.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:28.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:28.589" endtime="20250531 04:22:28.589"/>
</kw>
<status status="PASS" starttime="20250531 04:22:28.583" endtime="20250531 04:22:28.589"/>
</kw>
<msg timestamp="20250531 04:22:28.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:28.583" endtime="20250531 04:22:28.590"/>
</kw>
<status status="PASS" starttime="20250531 04:22:28.582" endtime="20250531 04:22:28.590"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:28.593" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:28.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:28.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:22:28.591" endtime="20250531 04:22:28.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:28.596" level="INFO"/>
<status status="PASS" starttime="20250531 04:22:28.596" endtime="20250531 04:22:28.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:28.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:28.596" endtime="20250531 04:22:28.596"/>
</kw>
<status status="PASS" starttime="20250531 04:22:28.590" endtime="20250531 04:22:28.597"/>
</kw>
<msg timestamp="20250531 04:22:28.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:28.590" endtime="20250531 04:22:28.597"/>
</kw>
<status status="PASS" starttime="20250531 04:22:28.590" endtime="20250531 04:22:28.597"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:28.600" level="INFO">Running command 'ozone sh key info o3://om:9862/17991-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:31.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:31.729" level="INFO">${output} = {
  "volumeName": "17991-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:22:27.961Z",
  "modificationTime": "2025-...</msg>
<status status="PASS" starttime="20250531 04:22:28.598" endtime="20250531 04:22:31.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:31.730" level="INFO">{
  "volumeName": "17991-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:22:27.961Z",
  "modificationTime": "2025-05-31T04:22:28.004Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600110,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 579,
  "file": true
}</msg>
<status status="PASS" starttime="20250531 04:22:31.729" endtime="20250531 04:22:31.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:31.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:31.730" endtime="20250531 04:22:31.730"/>
</kw>
<status status="PASS" starttime="20250531 04:22:28.598" endtime="20250531 04:22:31.731"/>
</kw>
<msg timestamp="20250531 04:22:31.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:28.598" endtime="20250531 04:22:31.731"/>
</kw>
<msg timestamp="20250531 04:22:31.731" level="INFO">${result} = {
  "volumeName": "17991-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:22:27.961Z",
  "modificationTime": "2025-...</msg>
<status status="PASS" starttime="20250531 04:22:28.597" endtime="20250531 04:22:31.731"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:22:31.731" endtime="20250531 04:22:31.731"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:31.734" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:31.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:31.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:22:31.732" endtime="20250531 04:22:31.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:31.738" level="INFO"/>
<status status="PASS" starttime="20250531 04:22:31.737" endtime="20250531 04:22:31.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:31.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:31.738" endtime="20250531 04:22:31.738"/>
</kw>
<status status="PASS" starttime="20250531 04:22:31.732" endtime="20250531 04:22:31.738"/>
</kw>
<msg timestamp="20250531 04:22:31.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:31.732" endtime="20250531 04:22:31.738"/>
</kw>
<status status="PASS" starttime="20250531 04:22:31.731" endtime="20250531 04:22:31.739"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:31.741" level="INFO">Running command 'ozone sh key get o3://om:9862/17991-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:34.524" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:22:34.524" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250531 04:22:31.739" endtime="20250531 04:22:34.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:34.525" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250531 04:22:34.524" endtime="20250531 04:22:34.525"/>
</kw>
<msg timestamp="20250531 04:22:34.525" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250531 04:22:31.739" endtime="20250531 04:22:34.525"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:22:34.525" endtime="20250531 04:22:34.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:34.529" level="INFO">Running command 'ozone sh key get --force o3://om:9862/17991-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:38.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:38.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:22:34.527" endtime="20250531 04:22:38.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:38.705" level="INFO"/>
<status status="PASS" starttime="20250531 04:22:38.705" endtime="20250531 04:22:38.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:38.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:38.706" endtime="20250531 04:22:38.706"/>
</kw>
<status status="PASS" starttime="20250531 04:22:34.526" endtime="20250531 04:22:38.706"/>
</kw>
<msg timestamp="20250531 04:22:38.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:34.526" endtime="20250531 04:22:38.706"/>
</kw>
<msg timestamp="20250531 04:22:38.706" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:22:34.526" endtime="20250531 04:22:38.706"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:22:38.706" endtime="20250531 04:22:38.707"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 sample.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:38.709" level="INFO">Running command 'ozone sh key put o3://om:9862/17991-with-host/bb1/key1 sample.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:41.566" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:22:41.566" level="INFO">${output} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250531 04:22:38.707" endtime="20250531 04:22:41.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:41.567" level="INFO">Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250531 04:22:41.566" endtime="20250531 04:22:41.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:41.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:41.567" endtime="20250531 04:22:41.567"/>
</kw>
<msg timestamp="20250531 04:22:41.567" level="INFO">${result} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250531 04:22:38.707" endtime="20250531 04:22:41.567"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File not found: sample.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:22:41.568" endtime="20250531 04:22:41.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:41.571" level="INFO">Running command 'ozone sh key info o3://om:9862/17991-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:44.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:44.722" level="INFO">${output} = {
  "volumeName": "17991-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:22:26.659Z",
  "modificationTime": "2025-05-31T...</msg>
<status status="PASS" starttime="20250531 04:22:41.569" endtime="20250531 04:22:44.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:44.723" level="INFO">{
  "volumeName": "17991-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:22:26.659Z",
  "modificationTime": "2025-05-31T04:22:27.727Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600109,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 575,
  "file": true
}</msg>
<status status="PASS" starttime="20250531 04:22:44.722" endtime="20250531 04:22:44.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:44.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:44.723" endtime="20250531 04:22:44.723"/>
</kw>
<status status="PASS" starttime="20250531 04:22:41.569" endtime="20250531 04:22:44.724"/>
</kw>
<msg timestamp="20250531 04:22:44.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:41.568" endtime="20250531 04:22:44.724"/>
</kw>
<msg timestamp="20250531 04:22:44.724" level="INFO">${result} = {
  "volumeName": "17991-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:22:26.659Z",
  "modificationTime": "2025-05-31T...</msg>
<status status="PASS" starttime="20250531 04:22:41.568" endtime="20250531 04:22:44.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:22:44.724" endtime="20250531 04:22:44.724"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:22:44.724" endtime="20250531 04:22:44.725"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:44.728" level="INFO">Running command 'ozone sh key list o3://om:9862/17991-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:47.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:47.947" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250531 04:22:44.726" endtime="20250531 04:22:47.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:47.947" level="INFO">key1</msg>
<status status="PASS" starttime="20250531 04:22:47.947" endtime="20250531 04:22:47.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:47.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:47.948" endtime="20250531 04:22:47.948"/>
</kw>
<status status="PASS" starttime="20250531 04:22:44.725" endtime="20250531 04:22:47.948"/>
</kw>
<msg timestamp="20250531 04:22:47.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:44.725" endtime="20250531 04:22:47.948"/>
</kw>
<msg timestamp="20250531 04:22:47.948" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20250531 04:22:44.725" endtime="20250531 04:22:47.948"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:22:47.948" endtime="20250531 04:22:47.949"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:47.952" level="INFO">Running command 'ozone sh key rename o3://om:9862/17991-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:50.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:50.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:22:47.950" endtime="20250531 04:22:50.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:50.801" level="INFO"/>
<status status="PASS" starttime="20250531 04:22:50.800" endtime="20250531 04:22:50.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:50.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:50.801" endtime="20250531 04:22:50.801"/>
</kw>
<status status="PASS" starttime="20250531 04:22:47.949" endtime="20250531 04:22:50.801"/>
</kw>
<msg timestamp="20250531 04:22:50.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:47.949" endtime="20250531 04:22:50.801"/>
</kw>
<status status="PASS" starttime="20250531 04:22:47.949" endtime="20250531 04:22:50.801"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:50.805" level="INFO">Running command 'ozone sh key list o3://om:9862/17991-with-host/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:53.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:53.871" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20250531 04:22:50.803" endtime="20250531 04:22:53.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:53.872" level="INFO">key2</msg>
<status status="PASS" starttime="20250531 04:22:53.872" endtime="20250531 04:22:53.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:53.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:53.873" endtime="20250531 04:22:53.873"/>
</kw>
<status status="PASS" starttime="20250531 04:22:50.802" endtime="20250531 04:22:53.873"/>
</kw>
<msg timestamp="20250531 04:22:53.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:50.802" endtime="20250531 04:22:53.873"/>
</kw>
<msg timestamp="20250531 04:22:53.873" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20250531 04:22:50.802" endtime="20250531 04:22:53.873"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:22:53.873" endtime="20250531 04:22:53.874"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250531 04:22:53.875" level="INFO">${cmd} = key delete o3://om:9862/17991-with-host/bb1/key2' --execute 'key delete o3://om:9862/17991-with-host/bb1/key1_RATIS' --execute 'key delete o3://om:9862/17991-with-host/bb1/key1-copy</msg>
<status status="PASS" starttime="20250531 04:22:53.875" endtime="20250531 04:22:53.875"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:53.878" level="INFO">Running command 'ozone sh --execute 'key delete o3://om:9862/17991-with-host/bb1/key2' --execute 'key delete o3://om:9862/17991-with-host/bb1/key1_RATIS' --execute 'key delete o3://om:9862/17991-with-host/bb1/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:57.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:57.124" level="INFO">${output} = key delete o3://om:9862/17991-with-host/bb1/key2
Key moved inside Trash: /.Trash/hadoop/Current/key2 
key delete o3://om:9862/17991-with-host/bb1/key1_RATIS
Key moved inside Trash: /.Trash/hadoop/Curr...</msg>
<status status="PASS" starttime="20250531 04:22:53.875" endtime="20250531 04:22:57.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:57.125" level="INFO">key delete o3://om:9862/17991-with-host/bb1/key2
Key moved inside Trash: /.Trash/hadoop/Current/key2 
key delete o3://om:9862/17991-with-host/bb1/key1_RATIS
Key moved inside Trash: /.Trash/hadoop/Current/key1_RATIS 
key delete o3://om:9862/17991-with-host/bb1/key1-copy
Key moved inside Trash: /.Trash/hadoop/Current/key1-copy </msg>
<status status="PASS" starttime="20250531 04:22:57.124" endtime="20250531 04:22:57.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:57.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:57.125" endtime="20250531 04:22:57.125"/>
</kw>
<status status="PASS" starttime="20250531 04:22:53.875" endtime="20250531 04:22:57.125"/>
</kw>
<msg timestamp="20250531 04:22:57.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:53.875" endtime="20250531 04:22:57.125"/>
</kw>
<status status="PASS" starttime="20250531 04:22:53.874" endtime="20250531 04:22:57.125"/>
</kw>
<status status="PASS" starttime="20250531 04:22:23.794" endtime="20250531 04:22:57.126"/>
</kw>
<status status="PASS" starttime="20250531 04:22:23.793" endtime="20250531 04:22:57.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:57.129" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/17991-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:22:59.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:22:59.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:22:57.127" endtime="20250531 04:22:59.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:22:59.916" level="INFO"/>
<status status="PASS" starttime="20250531 04:22:59.916" endtime="20250531 04:22:59.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:22:59.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:22:59.916" endtime="20250531 04:22:59.917"/>
</kw>
<status status="PASS" starttime="20250531 04:22:57.127" endtime="20250531 04:22:59.917"/>
</kw>
<msg timestamp="20250531 04:22:59.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:57.126" endtime="20250531 04:22:59.917"/>
</kw>
<status status="PASS" starttime="20250531 04:22:57.126" endtime="20250531 04:22:59.917"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:22:59.921" level="INFO">Running command 'ozone sh volume info o3://om:9862/17991-with-host | jq -r '. | select(.name=="17991-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:02.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:02.928" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:22:59.918" endtime="20250531 04:23:02.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:02.929" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:23:02.929" endtime="20250531 04:23:02.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:02.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:02.929" endtime="20250531 04:23:02.929"/>
</kw>
<status status="PASS" starttime="20250531 04:22:59.918" endtime="20250531 04:23:02.930"/>
</kw>
<msg timestamp="20250531 04:23:02.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:22:59.918" endtime="20250531 04:23:02.930"/>
</kw>
<msg timestamp="20250531 04:23:02.930" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:22:59.917" endtime="20250531 04:23:02.930"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:23:02.930" endtime="20250531 04:23:02.930"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:02.934" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/17991-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:05.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:05.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:23:02.931" endtime="20250531 04:23:05.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:05.928" level="INFO"/>
<status status="PASS" starttime="20250531 04:23:05.928" endtime="20250531 04:23:05.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:05.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:05.929" endtime="20250531 04:23:05.929"/>
</kw>
<status status="PASS" starttime="20250531 04:23:02.931" endtime="20250531 04:23:05.929"/>
</kw>
<msg timestamp="20250531 04:23:05.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:02.931" endtime="20250531 04:23:05.930"/>
</kw>
<status status="PASS" starttime="20250531 04:23:02.930" endtime="20250531 04:23:05.930"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:05.933" level="INFO">Running command 'ozone sh volume info o3://om:9862/17991-with-host | jq -r '. | select(.name=="17991-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:08.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:08.996" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:23:05.931" endtime="20250531 04:23:08.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:08.997" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:23:08.997" endtime="20250531 04:23:08.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:08.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:08.997" endtime="20250531 04:23:08.998"/>
</kw>
<status status="PASS" starttime="20250531 04:23:05.930" endtime="20250531 04:23:08.998"/>
</kw>
<msg timestamp="20250531 04:23:08.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:05.930" endtime="20250531 04:23:08.998"/>
</kw>
<msg timestamp="20250531 04:23:08.998" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:23:05.930" endtime="20250531 04:23:08.998"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:23:08.998" endtime="20250531 04:23:08.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:09.002" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/17991-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:11.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:11.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:23:08.999" endtime="20250531 04:23:11.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:11.911" level="INFO"/>
<status status="PASS" starttime="20250531 04:23:11.911" endtime="20250531 04:23:11.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:11.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:11.911" endtime="20250531 04:23:11.912"/>
</kw>
<status status="PASS" starttime="20250531 04:23:08.999" endtime="20250531 04:23:11.912"/>
</kw>
<msg timestamp="20250531 04:23:11.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:08.999" endtime="20250531 04:23:11.912"/>
</kw>
<status status="PASS" starttime="20250531 04:23:08.998" endtime="20250531 04:23:11.912"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:11.916" level="INFO">Running command 'ozone sh bucket info o3://om:9862/17991-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:14.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:14.964" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:23:11.913" endtime="20250531 04:23:14.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:14.965" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:23:14.965" endtime="20250531 04:23:14.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:14.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:14.966" endtime="20250531 04:23:14.966"/>
</kw>
<status status="PASS" starttime="20250531 04:23:11.913" endtime="20250531 04:23:14.966"/>
</kw>
<msg timestamp="20250531 04:23:14.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:11.913" endtime="20250531 04:23:14.966"/>
</kw>
<msg timestamp="20250531 04:23:14.966" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:23:11.912" endtime="20250531 04:23:14.966"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:23:14.966" endtime="20250531 04:23:14.967"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:14.970" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/17991-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:17.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:17.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:23:14.968" endtime="20250531 04:23:17.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:17.811" level="INFO"/>
<status status="PASS" starttime="20250531 04:23:17.810" endtime="20250531 04:23:17.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:17.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:17.811" endtime="20250531 04:23:17.811"/>
</kw>
<status status="PASS" starttime="20250531 04:23:14.967" endtime="20250531 04:23:17.812"/>
</kw>
<msg timestamp="20250531 04:23:17.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:14.967" endtime="20250531 04:23:17.812"/>
</kw>
<status status="PASS" starttime="20250531 04:23:14.967" endtime="20250531 04:23:17.812"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:17.815" level="INFO">Running command 'ozone sh bucket info o3://om:9862/17991-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:20.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:20.909" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:23:17.813" endtime="20250531 04:23:20.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:20.910" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:23:20.909" endtime="20250531 04:23:20.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:20.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:20.910" endtime="20250531 04:23:20.910"/>
</kw>
<status status="PASS" starttime="20250531 04:23:17.813" endtime="20250531 04:23:20.910"/>
</kw>
<msg timestamp="20250531 04:23:20.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:17.812" endtime="20250531 04:23:20.910"/>
</kw>
<msg timestamp="20250531 04:23:20.911" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:23:17.812" endtime="20250531 04:23:20.911"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:23:20.911" endtime="20250531 04:23:20.911"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:20.914" level="INFO">Running command 'ozone sh bucket delete -r --yes o3://om:9862/17991-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:23.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:23.964" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250531 04:23:20.912" endtime="20250531 04:23:23.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:23.965" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250531 04:23:23.964" endtime="20250531 04:23:23.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:23.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:23.965" endtime="20250531 04:23:23.965"/>
</kw>
<status status="PASS" starttime="20250531 04:23:20.912" endtime="20250531 04:23:23.965"/>
</kw>
<msg timestamp="20250531 04:23:23.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:20.912" endtime="20250531 04:23:23.965"/>
</kw>
<status status="PASS" starttime="20250531 04:23:20.911" endtime="20250531 04:23:23.965"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:23.969" level="INFO">Running command 'ozone sh volume delete o3://om:9862/17991-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:26.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:26.938" level="INFO">${output} = Volume 17991-with-host is deleted</msg>
<status status="PASS" starttime="20250531 04:23:23.967" endtime="20250531 04:23:26.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:26.939" level="INFO">Volume 17991-with-host is deleted</msg>
<status status="PASS" starttime="20250531 04:23:26.938" endtime="20250531 04:23:26.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:26.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:26.939" endtime="20250531 04:23:26.940"/>
</kw>
<status status="PASS" starttime="20250531 04:23:23.966" endtime="20250531 04:23:26.940"/>
</kw>
<msg timestamp="20250531 04:23:26.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:23.966" endtime="20250531 04:23:26.940"/>
</kw>
<status status="PASS" starttime="20250531 04:23:23.966" endtime="20250531 04:23:26.940"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:26.943" level="INFO">Running command 'ozone sh volume create o3://om:9862/17991-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:29.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:29.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:23:26.941" endtime="20250531 04:23:29.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:29.915" level="INFO"/>
<status status="PASS" starttime="20250531 04:23:29.914" endtime="20250531 04:23:29.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:29.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:29.915" endtime="20250531 04:23:29.915"/>
</kw>
<status status="PASS" starttime="20250531 04:23:26.941" endtime="20250531 04:23:29.916"/>
</kw>
<msg timestamp="20250531 04:23:29.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:26.940" endtime="20250531 04:23:29.916"/>
</kw>
<status status="PASS" starttime="20250531 04:23:26.940" endtime="20250531 04:23:29.916"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:29.920" level="INFO">Running command 'ozone sh volume info o3://om:9862/17991-with-host &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250531 04:23:32.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:32.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:23:29.918" endtime="20250531 04:23:32.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:32.878" level="INFO"/>
<status status="PASS" starttime="20250531 04:23:32.878" endtime="20250531 04:23:32.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:32.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:32.878" endtime="20250531 04:23:32.879"/>
</kw>
<status status="PASS" starttime="20250531 04:23:29.917" endtime="20250531 04:23:32.879"/>
</kw>
<msg timestamp="20250531 04:23:32.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:29.916" endtime="20250531 04:23:32.879"/>
</kw>
<status status="PASS" starttime="20250531 04:23:29.916" endtime="20250531 04:23:32.879"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:32.882" level="INFO">Running command 'jq -r '. | select(.name=="17991-with-host") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:32.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:32.887" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:23:32.880" endtime="20250531 04:23:32.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:32.888" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:23:32.887" endtime="20250531 04:23:32.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:32.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:32.888" endtime="20250531 04:23:32.888"/>
</kw>
<status status="PASS" starttime="20250531 04:23:32.880" endtime="20250531 04:23:32.888"/>
</kw>
<msg timestamp="20250531 04:23:32.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:32.880" endtime="20250531 04:23:32.888"/>
</kw>
<msg timestamp="20250531 04:23:32.888" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:23:32.879" endtime="20250531 04:23:32.888"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:23:32.889" endtime="20250531 04:23:32.889"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:32.892" level="INFO">Running command 'jq -r '. | select(.name=="17991-with-host") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:32.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:32.896" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:23:32.890" endtime="20250531 04:23:32.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:32.897" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:23:32.897" endtime="20250531 04:23:32.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:32.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:32.897" endtime="20250531 04:23:32.897"/>
</kw>
<status status="PASS" starttime="20250531 04:23:32.890" endtime="20250531 04:23:32.898"/>
</kw>
<msg timestamp="20250531 04:23:32.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:32.889" endtime="20250531 04:23:32.898"/>
</kw>
<msg timestamp="20250531 04:23:32.898" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:23:32.889" endtime="20250531 04:23:32.898"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:23:32.898" endtime="20250531 04:23:32.898"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:32.901" level="INFO">Running command 'ozone sh bucket create o3://om:9862/17991-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:35.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:35.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:23:32.899" endtime="20250531 04:23:35.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:35.779" level="INFO"/>
<status status="PASS" starttime="20250531 04:23:35.779" endtime="20250531 04:23:35.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:35.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:35.779" endtime="20250531 04:23:35.780"/>
</kw>
<status status="PASS" starttime="20250531 04:23:32.899" endtime="20250531 04:23:35.780"/>
</kw>
<msg timestamp="20250531 04:23:35.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:32.899" endtime="20250531 04:23:35.780"/>
</kw>
<status status="PASS" starttime="20250531 04:23:32.898" endtime="20250531 04:23:35.780"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:35.783" level="INFO">Running command 'ozone sh bucket info o3://om:9862/17991-with-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250531 04:23:38.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:38.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:23:35.781" endtime="20250531 04:23:38.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:38.895" level="INFO"/>
<status status="PASS" starttime="20250531 04:23:38.894" endtime="20250531 04:23:38.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:38.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:38.895" endtime="20250531 04:23:38.895"/>
</kw>
<status status="PASS" starttime="20250531 04:23:35.781" endtime="20250531 04:23:38.895"/>
</kw>
<msg timestamp="20250531 04:23:38.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:35.781" endtime="20250531 04:23:38.895"/>
</kw>
<status status="PASS" starttime="20250531 04:23:35.780" endtime="20250531 04:23:38.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:38.899" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:38.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:38.903" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:23:38.896" endtime="20250531 04:23:38.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:38.904" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:23:38.904" endtime="20250531 04:23:38.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:38.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:38.904" endtime="20250531 04:23:38.904"/>
</kw>
<status status="PASS" starttime="20250531 04:23:38.896" endtime="20250531 04:23:38.905"/>
</kw>
<msg timestamp="20250531 04:23:38.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:38.896" endtime="20250531 04:23:38.905"/>
</kw>
<msg timestamp="20250531 04:23:38.905" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:23:38.896" endtime="20250531 04:23:38.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:23:38.905" endtime="20250531 04:23:38.905"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:38.908" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:38.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:38.913" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:23:38.906" endtime="20250531 04:23:38.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:38.913" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:23:38.913" endtime="20250531 04:23:38.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:38.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:38.914" endtime="20250531 04:23:38.914"/>
</kw>
<status status="PASS" starttime="20250531 04:23:38.906" endtime="20250531 04:23:38.914"/>
</kw>
<msg timestamp="20250531 04:23:38.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:38.906" endtime="20250531 04:23:38.914"/>
</kw>
<msg timestamp="20250531 04:23:38.914" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:23:38.905" endtime="20250531 04:23:38.914"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:23:38.914" endtime="20250531 04:23:38.915"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:38.918" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/17991-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:41.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:41.804" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250531 04:23:38.916" endtime="20250531 04:23:41.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:41.805" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250531 04:23:41.805" endtime="20250531 04:23:41.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:41.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:41.805" endtime="20250531 04:23:41.806"/>
</kw>
<status status="PASS" starttime="20250531 04:23:38.915" endtime="20250531 04:23:41.806"/>
</kw>
<msg timestamp="20250531 04:23:41.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:38.915" endtime="20250531 04:23:41.806"/>
</kw>
<status status="PASS" starttime="20250531 04:23:38.915" endtime="20250531 04:23:41.806"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:41.810" level="INFO">Running command 'ozone sh volume delete o3://om:9862/17991-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:44.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:44.699" level="INFO">${output} = Volume 17991-with-host is deleted</msg>
<status status="PASS" starttime="20250531 04:23:41.807" endtime="20250531 04:23:44.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:44.700" level="INFO">Volume 17991-with-host is deleted</msg>
<status status="PASS" starttime="20250531 04:23:44.700" endtime="20250531 04:23:44.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:44.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:44.700" endtime="20250531 04:23:44.701"/>
</kw>
<status status="PASS" starttime="20250531 04:23:41.807" endtime="20250531 04:23:44.701"/>
</kw>
<msg timestamp="20250531 04:23:44.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:23:41.807" endtime="20250531 04:23:44.701"/>
</kw>
<status status="PASS" starttime="20250531 04:23:41.806" endtime="20250531 04:23:44.701"/>
</kw>
<status status="PASS" starttime="20250531 04:21:53.874" endtime="20250531 04:23:44.701"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250531 04:21:53.874" endtime="20250531 04:23:44.701"/>
</test>
<test id="s1-s4-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:23:44.702" endtime="20250531 04:23:44.703"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 1.5GB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:44.705" level="INFO">Running command 'ozone sh volume create o3://om:9862/17991-with-errors --space-quota 1.5GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:47.521" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:23:47.521" level="INFO">${output} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250531 04:23:44.703" endtime="20250531 04:23:47.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:47.522" level="INFO">1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250531 04:23:47.521" endtime="20250531 04:23:47.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:47.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:47.522" endtime="20250531 04:23:47.522"/>
</kw>
<msg timestamp="20250531 04:23:47.522" level="INFO">${result} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250531 04:23:44.703" endtime="20250531 04:23:47.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5GB is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:23:47.523" endtime="20250531 04:23:47.523"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:47.525" level="INFO">Running command 'ozone sh volume create o3://om:9862/17991-with-errors --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:50.335" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:23:50.336" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250531 04:23:47.523" endtime="20250531 04:23:50.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:50.336" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250531 04:23:50.336" endtime="20250531 04:23:50.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:50.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:50.337" endtime="20250531 04:23:50.337"/>
</kw>
<msg timestamp="20250531 04:23:50.337" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250531 04:23:47.523" endtime="20250531 04:23:50.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:23:50.337" endtime="20250531 04:23:50.338"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:50.340" level="INFO">Running command 'ozone sh volume create o3://om:9862/17991-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:53.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:23:53.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:23:50.338" endtime="20250531 04:23:53.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:53.179" level="INFO"/>
<status status="PASS" starttime="20250531 04:23:53.179" endtime="20250531 04:23:53.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:53.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:53.179" endtime="20250531 04:23:53.180"/>
</kw>
<status status="PASS" starttime="20250531 04:23:50.338" endtime="20250531 04:23:53.180"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:53.183" level="INFO">Running command 'ozone sh bucket create o3://om:9862/17991-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:56.081" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:23:56.082" level="INFO">${output} = INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20250531 04:23:53.180" endtime="20250531 04:23:56.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:56.083" level="INFO">INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20250531 04:23:56.082" endtime="20250531 04:23:56.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:56.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:56.083" endtime="20250531 04:23:56.083"/>
</kw>
<msg timestamp="20250531 04:23:56.083" level="INFO">${result} = INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20250531 04:23:53.180" endtime="20250531 04:23:56.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:23:56.083" endtime="20250531 04:23:56.084"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --space-quota 1.5GB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:56.086" level="INFO">Running command 'ozone sh bucket create o3://om:9862/17991-with-errors/bucket1 --space-quota 1.5GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:23:58.996" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:23:58.996" level="INFO">${output} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250531 04:23:56.084" endtime="20250531 04:23:58.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:23:58.997" level="INFO">1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250531 04:23:58.996" endtime="20250531 04:23:58.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:23:58.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:23:58.997" endtime="20250531 04:23:58.997"/>
</kw>
<msg timestamp="20250531 04:23:58.998" level="INFO">${result} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250531 04:23:56.084" endtime="20250531 04:23:58.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5GB is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:23:58.998" endtime="20250531 04:23:58.998"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:23:59.001" level="INFO">Running command 'ozone sh bucket create o3://om:9862/17991-with-errors/bucket1 --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:01.798" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:24:01.798" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250531 04:23:58.999" endtime="20250531 04:24:01.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:01.799" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250531 04:24:01.799" endtime="20250531 04:24:01.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:01.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:01.799" endtime="20250531 04:24:01.800"/>
</kw>
<msg timestamp="20250531 04:24:01.800" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250531 04:23:58.998" endtime="20250531 04:24:01.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:24:01.800" endtime="20250531 04:24:01.800"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:01.803" level="INFO">Running command 'ozone sh bucket create o3://om:9862/17991-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:02.920" level="INFO">${rc} = 2</msg>
<msg timestamp="20250531 04:24:02.920" level="INFO">${output} = Invalid value for option '--layout': cannot convert 'Invalid' to BucketLayout (java.lang.IllegalArgumentException: Unknown bucket layout: Invalid)
Usage: ozone sh bucket create [-ghV] [--verbose] [-k=...</msg>
<status status="PASS" starttime="20250531 04:24:01.801" endtime="20250531 04:24:02.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:02.921" level="INFO">Invalid value for option '--layout': cannot convert 'Invalid' to BucketLayout (java.lang.IllegalArgumentException: Unknown bucket layout: Invalid)
Usage: ozone sh bucket create [-ghV] [--verbose] [-k=&lt;bekName&gt;]
                              [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the bucket (format: volume/bucket).
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: fso (for file system
                             optimized buckets FILE_SYSTEM_OPTIMIZED), obs (for
                             object store optimized OBJECT_STORE) and legacy
                             (LEGACY is Deprecated)
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.
      --verbose            More verbose output. Show the stack trace of the
                             errors.</msg>
<status status="PASS" starttime="20250531 04:24:02.921" endtime="20250531 04:24:02.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:02.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:02.922" endtime="20250531 04:24:02.922"/>
</kw>
<msg timestamp="20250531 04:24:02.922" level="INFO">${result} = Invalid value for option '--layout': cannot convert 'Invalid' to BucketLayout (java.lang.IllegalArgumentException: Unknown bucket layout: Invalid)
Usage: ozone sh bucket create [-ghV] [--verbose] [-k=...</msg>
<status status="PASS" starttime="20250531 04:24:01.800" endtime="20250531 04:24:02.922"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:24:02.922" endtime="20250531 04:24:02.923"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:02.926" level="INFO">Running command 'ozone sh bucket create o3://om:9862/17991-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:05.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:24:05.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:24:02.923" endtime="20250531 04:24:05.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:05.858" level="INFO"/>
<status status="PASS" starttime="20250531 04:24:05.857" endtime="20250531 04:24:05.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:05.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:05.858" endtime="20250531 04:24:05.858"/>
</kw>
<status status="PASS" starttime="20250531 04:24:02.923" endtime="20250531 04:24:05.858"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:05.861" level="INFO">Running command 'ozone sh key info o3://om:9862/17991-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:08.766" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:24:08.766" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20250531 04:24:05.859" endtime="20250531 04:24:08.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:08.767" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20250531 04:24:08.766" endtime="20250531 04:24:08.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:08.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:08.767" endtime="20250531 04:24:08.767"/>
</kw>
<msg timestamp="20250531 04:24:08.768" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20250531 04:24:05.858" endtime="20250531 04:24:08.768"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:24:08.768" endtime="20250531 04:24:08.768"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:08.771" level="INFO">Running command 'ozone sh key put o3://om:9862/17991-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:09.862" level="INFO">${rc} = 2</msg>
<msg timestamp="20250531 04:24:09.862" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20250531 04:24:08.768" endtime="20250531 04:24:09.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:09.863" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--type'. No enum constant org.apache.hadoop.hdds.client.ReplicationType.invalid. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [--verbose]
                        [--expectedGeneration=&lt;expectedGeneration&gt;]
                        [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt; &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the key (format: volume/bucket/key).
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
      --expectedGeneration=&lt;expectedGeneration&gt;
                   Store key only if it already exists and its generation
                     matches the value provided
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.
      --verbose    More verbose output. Show the stack trace of the errors.</msg>
<status status="PASS" starttime="20250531 04:24:09.863" endtime="20250531 04:24:09.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:09.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:09.863" endtime="20250531 04:24:09.864"/>
</kw>
<msg timestamp="20250531 04:24:09.864" level="INFO">${result} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20250531 04:24:08.768" endtime="20250531 04:24:09.864"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${volume}/bucket1 --space-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:09.867" level="INFO">Running command 'ozone sh bucket setquota 17991-with-errors/bucket1 --space-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:12.681" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:24:12.681" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250531 04:24:09.864" endtime="20250531 04:24:12.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:12.682" level="INFO">1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250531 04:24:12.681" endtime="20250531 04:24:12.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:12.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:12.682" endtime="20250531 04:24:12.682"/>
</kw>
<msg timestamp="20250531 04:24:12.682" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250531 04:24:09.864" endtime="20250531 04:24:12.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:24:12.683" endtime="20250531 04:24:12.683"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${volume}/bucket1 --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:12.686" level="INFO">Running command 'ozone sh bucket setquota 17991-with-errors/bucket1 --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:15.590" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:24:15.590" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250531 04:24:12.683" endtime="20250531 04:24:15.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:15.591" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250531 04:24:15.590" endtime="20250531 04:24:15.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:15.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:15.591" endtime="20250531 04:24:15.591"/>
</kw>
<msg timestamp="20250531 04:24:15.591" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250531 04:24:12.683" endtime="20250531 04:24:15.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:24:15.592" endtime="20250531 04:24:15.592"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:15.595" level="INFO">Running command 'ozone sh volume setquota 17991-with-errors --space-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:18.353" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:24:18.353" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250531 04:24:15.593" endtime="20250531 04:24:18.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:18.354" level="INFO">1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250531 04:24:18.353" endtime="20250531 04:24:18.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:18.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:18.354" endtime="20250531 04:24:18.354"/>
</kw>
<msg timestamp="20250531 04:24:18.354" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250531 04:24:15.592" endtime="20250531 04:24:18.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:24:18.354" endtime="20250531 04:24:18.355"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:18.357" level="INFO">Running command 'ozone sh volume setquota 17991-with-errors --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:21.150" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:24:21.150" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250531 04:24:18.355" endtime="20250531 04:24:21.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:21.151" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250531 04:24:21.150" endtime="20250531 04:24:21.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:21.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:21.151" endtime="20250531 04:24:21.151"/>
</kw>
<msg timestamp="20250531 04:24:21.151" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250531 04:24:18.355" endtime="20250531 04:24:21.151"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:24:21.151" endtime="20250531 04:24:21.152"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket setquota ${volume}/bucket1 --space-quota 2KB</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:21.155" level="INFO">Running command 'ozone sh bucket setquota 17991-with-errors/bucket1 --space-quota 2KB 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:24.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:24:24.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:24:21.152" endtime="20250531 04:24:24.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:24.077" level="INFO"/>
<status status="PASS" starttime="20250531 04:24:24.077" endtime="20250531 04:24:24.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:24.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:24.078" endtime="20250531 04:24:24.078"/>
</kw>
<status status="PASS" starttime="20250531 04:24:21.152" endtime="20250531 04:24:24.078"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:24.081" level="INFO">Running command 'ozone sh key put 17991-with-errors/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:26.950" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:24:26.950" level="INFO">${output} = QUOTA_EXCEEDED The DiskSpace quota of bucket:bucket1 exceeded quotaInBytes: 2048 Bytes but diskspace consumed: 3145728 Bytes.</msg>
<status status="PASS" starttime="20250531 04:24:24.079" endtime="20250531 04:24:26.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:26.951" level="INFO">QUOTA_EXCEEDED The DiskSpace quota of bucket:bucket1 exceeded quotaInBytes: 2048 Bytes but diskspace consumed: 3145728 Bytes.</msg>
<status status="PASS" starttime="20250531 04:24:26.951" endtime="20250531 04:24:26.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:26.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:26.951" endtime="20250531 04:24:26.952"/>
</kw>
<msg timestamp="20250531 04:24:26.952" level="INFO">${result} = QUOTA_EXCEEDED The DiskSpace quota of bucket:bucket1 exceeded quotaInBytes: 2048 Bytes but diskspace consumed: 3145728 Bytes.</msg>
<status status="PASS" starttime="20250531 04:24:24.078" endtime="20250531 04:24:26.952"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_EXCEEDED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:24:26.952" endtime="20250531 04:24:26.952"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1KB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:26.955" level="INFO">Running command 'ozone sh volume setquota 17991-with-errors --space-quota 1KB 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:29.734" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:24:29.734" level="INFO">${output} = QUOTA_EXCEEDED Total buckets quota in this volume should not be greater than volume quota : the total space quota is:2048. But the volume space quota is:1024</msg>
<status status="PASS" starttime="20250531 04:24:26.953" endtime="20250531 04:24:29.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:29.735" level="INFO">QUOTA_EXCEEDED Total buckets quota in this volume should not be greater than volume quota : the total space quota is:2048. But the volume space quota is:1024</msg>
<status status="PASS" starttime="20250531 04:24:29.735" endtime="20250531 04:24:29.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:29.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:29.736" endtime="20250531 04:24:29.736"/>
</kw>
<msg timestamp="20250531 04:24:29.736" level="INFO">${result} = QUOTA_EXCEEDED Total buckets quota in this volume should not be greater than volume quota : the total space quota is:2048. But the volume space quota is:1024</msg>
<status status="PASS" starttime="20250531 04:24:26.952" endtime="20250531 04:24:29.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_EXCEEDED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:24:29.736" endtime="20250531 04:24:29.736"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket clrquota ${volume}/bucket1 --space-quota</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:29.739" level="INFO">Running command 'ozone sh bucket clrquota 17991-with-errors/bucket1 --space-quota 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:32.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:24:32.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:24:29.737" endtime="20250531 04:24:32.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:32.532" level="INFO"/>
<status status="PASS" starttime="20250531 04:24:32.532" endtime="20250531 04:24:32.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:32.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:32.532" endtime="20250531 04:24:32.533"/>
</kw>
<status status="PASS" starttime="20250531 04:24:29.736" endtime="20250531 04:24:32.533"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1GB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:32.536" level="INFO">Running command 'ozone sh volume setquota 17991-with-errors --space-quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:35.467" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:24:35.467" level="INFO">${output} = QUOTA_ERROR Can not set volume space quota on volume as some of buckets in this volume have no quota set.</msg>
<status status="PASS" starttime="20250531 04:24:32.534" endtime="20250531 04:24:35.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:35.468" level="INFO">QUOTA_ERROR Can not set volume space quota on volume as some of buckets in this volume have no quota set.</msg>
<status status="PASS" starttime="20250531 04:24:35.468" endtime="20250531 04:24:35.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:35.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:35.468" endtime="20250531 04:24:35.469"/>
</kw>
<msg timestamp="20250531 04:24:35.469" level="INFO">${result} = QUOTA_ERROR Can not set volume space quota on volume as some of buckets in this volume have no quota set.</msg>
<status status="PASS" starttime="20250531 04:24:32.533" endtime="20250531 04:24:35.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_ERROR</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:24:35.469" endtime="20250531 04:24:35.469"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:35.473" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/17991-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:38.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:24:38.307" level="INFO">${output} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250531 04:24:35.470" endtime="20250531 04:24:38.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:38.308" level="INFO">Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250531 04:24:38.308" endtime="20250531 04:24:38.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:38.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:38.309" endtime="20250531 04:24:38.309"/>
</kw>
<status status="PASS" starttime="20250531 04:24:35.470" endtime="20250531 04:24:38.309"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume setquota ${volume} --space-quota 1GB</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:38.312" level="INFO">Running command 'ozone sh volume setquota 17991-with-errors --space-quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:41.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:24:41.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:24:38.310" endtime="20250531 04:24:41.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:41.168" level="INFO"/>
<status status="PASS" starttime="20250531 04:24:41.168" endtime="20250531 04:24:41.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:41.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:41.168" endtime="20250531 04:24:41.169"/>
</kw>
<status status="PASS" starttime="20250531 04:24:38.309" endtime="20250531 04:24:41.169"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:41.172" level="INFO">Running command 'ozone sh bucket create o3://om:9862/17991-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:44.185" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:24:44.185" level="INFO">${output} = QUOTA_ERROR Bucket space quota in this volume should be set as volume space quota is already set.</msg>
<status status="PASS" starttime="20250531 04:24:41.169" endtime="20250531 04:24:44.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:44.186" level="INFO">QUOTA_ERROR Bucket space quota in this volume should be set as volume space quota is already set.</msg>
<status status="PASS" starttime="20250531 04:24:44.186" endtime="20250531 04:24:44.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:44.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:44.187" endtime="20250531 04:24:44.187"/>
</kw>
<msg timestamp="20250531 04:24:44.187" level="INFO">${result} = QUOTA_ERROR Bucket space quota in this volume should be set as volume space quota is already set.</msg>
<status status="PASS" starttime="20250531 04:24:41.169" endtime="20250531 04:24:44.187"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_ERROR</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:24:44.187" endtime="20250531 04:24:44.188"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:44.191" level="INFO">Running command 'ozone sh volume delete o3://om:9862/17991-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:47.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:24:47.012" level="INFO">${output} = Volume 17991-with-errors is deleted</msg>
<status status="PASS" starttime="20250531 04:24:44.188" endtime="20250531 04:24:47.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:47.013" level="INFO">Volume 17991-with-errors is deleted</msg>
<status status="PASS" starttime="20250531 04:24:47.012" endtime="20250531 04:24:47.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:47.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:47.013" endtime="20250531 04:24:47.013"/>
</kw>
<status status="PASS" starttime="20250531 04:24:44.188" endtime="20250531 04:24:47.013"/>
</kw>
<status status="PASS" starttime="20250531 04:23:44.703" endtime="20250531 04:24:47.013"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250531 04:23:44.702" endtime="20250531 04:24:47.014"/>
</test>
<test id="s1-s4-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:24:47.015" endtime="20250531 04:24:47.015"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:47.018" level="INFO">Running command 'ozone sh volume create o3://om:9862/17991-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:49.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:24:49.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:24:47.016" endtime="20250531 04:24:49.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:49.758" level="INFO"/>
<status status="PASS" starttime="20250531 04:24:49.757" endtime="20250531 04:24:49.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:49.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:49.758" endtime="20250531 04:24:49.758"/>
</kw>
<status status="PASS" starttime="20250531 04:24:47.016" endtime="20250531 04:24:49.758"/>
</kw>
<msg timestamp="20250531 04:24:49.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:24:47.016" endtime="20250531 04:24:49.758"/>
</kw>
<status status="PASS" starttime="20250531 04:24:47.015" endtime="20250531 04:24:49.758"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:49.762" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/17991-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:52.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:24:52.813" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:24:49.759" endtime="20250531 04:24:52.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:52.814" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:24:52.813" endtime="20250531 04:24:52.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:52.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:52.814" endtime="20250531 04:24:52.814"/>
</kw>
<status status="PASS" starttime="20250531 04:24:49.759" endtime="20250531 04:24:52.814"/>
</kw>
<msg timestamp="20250531 04:24:52.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:24:49.759" endtime="20250531 04:24:52.815"/>
</kw>
<msg timestamp="20250531 04:24:52.815" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:24:49.759" endtime="20250531 04:24:52.815"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:52.818" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
} ]' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:52.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:24:52.823" level="INFO">${output} = hadoop</msg>
<status status="PASS" starttime="20250531 04:24:52.816" endtime="20250531 04:24:52.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:52.824" level="INFO">hadoop</msg>
<status status="PASS" starttime="20250531 04:24:52.823" endtime="20250531 04:24:52.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:52.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:52.824" endtime="20250531 04:24:52.824"/>
</kw>
<status status="PASS" starttime="20250531 04:24:52.815" endtime="20250531 04:24:52.824"/>
</kw>
<msg timestamp="20250531 04:24:52.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:24:52.815" endtime="20250531 04:24:52.824"/>
</kw>
<msg timestamp="20250531 04:24:52.825" level="INFO">${acl_check} = hadoop</msg>
<status status="PASS" starttime="20250531 04:24:52.815" endtime="20250531 04:24:52.825"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${acl_check}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250531 04:24:52.825" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20250531 04:24:52.825" endtime="20250531 04:24:52.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:52.828" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/17991-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:55.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:24:55.715" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20250531 04:24:52.826" endtime="20250531 04:24:55.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:55.716" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20250531 04:24:55.716" endtime="20250531 04:24:55.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:55.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:55.716" endtime="20250531 04:24:55.717"/>
</kw>
<status status="PASS" starttime="20250531 04:24:52.826" endtime="20250531 04:24:55.717"/>
</kw>
<msg timestamp="20250531 04:24:55.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:24:52.825" endtime="20250531 04:24:55.717"/>
</kw>
<msg timestamp="20250531 04:24:55.717" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20250531 04:24:52.825" endtime="20250531 04:24:55.717"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:55.720" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/17991-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:58.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:24:58.796" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:24:55.718" endtime="20250531 04:24:58.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:58.797" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:24:58.796" endtime="20250531 04:24:58.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:58.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:58.797" endtime="20250531 04:24:58.797"/>
</kw>
<status status="PASS" starttime="20250531 04:24:55.718" endtime="20250531 04:24:58.797"/>
</kw>
<msg timestamp="20250531 04:24:58.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:24:55.717" endtime="20250531 04:24:58.797"/>
</kw>
<msg timestamp="20250531 04:24:58.798" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:24:55.717" endtime="20250531 04:24:58.798"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:58.801" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:24:58.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:24:58.806" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:24:58.799" endtime="20250531 04:24:58.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:24:58.807" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:24:58.807" endtime="20250531 04:24:58.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:24:58.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:24:58.807" endtime="20250531 04:24:58.808"/>
</kw>
<status status="PASS" starttime="20250531 04:24:58.798" endtime="20250531 04:24:58.808"/>
</kw>
<msg timestamp="20250531 04:24:58.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:24:58.798" endtime="20250531 04:24:58.808"/>
</kw>
<msg timestamp="20250531 04:24:58.808" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:24:58.798" endtime="20250531 04:24:58.808"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:24:58.808" endtime="20250531 04:24:58.808"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:24:58.811" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/17991-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:01.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:01.581" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:24:58.809" endtime="20250531 04:25:01.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:01.582" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:25:01.581" endtime="20250531 04:25:01.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:01.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:01.582" endtime="20250531 04:25:01.582"/>
</kw>
<status status="PASS" starttime="20250531 04:24:58.809" endtime="20250531 04:25:01.582"/>
</kw>
<msg timestamp="20250531 04:25:01.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:24:58.809" endtime="20250531 04:25:01.582"/>
</kw>
<msg timestamp="20250531 04:25:01.583" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:24:58.808" endtime="20250531 04:25:01.583"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:01.586" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/17991-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:04.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:04.627" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:25:01.584" endtime="20250531 04:25:04.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:04.628" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:25:04.627" endtime="20250531 04:25:04.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:04.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:04.628" endtime="20250531 04:25:04.628"/>
</kw>
<status status="PASS" starttime="20250531 04:25:01.583" endtime="20250531 04:25:04.628"/>
</kw>
<msg timestamp="20250531 04:25:04.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:01.583" endtime="20250531 04:25:04.628"/>
</kw>
<msg timestamp="20250531 04:25:04.629" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:25:01.583" endtime="20250531 04:25:04.629"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:04.632" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:04.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:04.637" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:04.630" endtime="20250531 04:25:04.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:04.638" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:25:04.638" endtime="20250531 04:25:04.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:04.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:04.638" endtime="20250531 04:25:04.639"/>
</kw>
<status status="PASS" starttime="20250531 04:25:04.630" endtime="20250531 04:25:04.639"/>
</kw>
<msg timestamp="20250531 04:25:04.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:04.629" endtime="20250531 04:25:04.639"/>
</kw>
<msg timestamp="20250531 04:25:04.639" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:04.629" endtime="20250531 04:25:04.639"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:25:04.639" endtime="20250531 04:25:04.639"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:04.642" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/17991-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:07.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:07.477" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:25:04.640" endtime="20250531 04:25:07.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:07.478" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:25:07.477" endtime="20250531 04:25:07.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:07.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:07.478" endtime="20250531 04:25:07.478"/>
</kw>
<status status="PASS" starttime="20250531 04:25:04.640" endtime="20250531 04:25:07.478"/>
</kw>
<msg timestamp="20250531 04:25:07.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:04.640" endtime="20250531 04:25:07.479"/>
</kw>
<msg timestamp="20250531 04:25:07.479" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:25:04.639" endtime="20250531 04:25:07.479"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:07.482" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/17991-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:10.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:10.512" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250531 04:25:07.480" endtime="20250531 04:25:10.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:10.513" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:25:10.512" endtime="20250531 04:25:10.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:10.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:10.513" endtime="20250531 04:25:10.513"/>
</kw>
<status status="PASS" starttime="20250531 04:25:07.479" endtime="20250531 04:25:10.514"/>
</kw>
<msg timestamp="20250531 04:25:10.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:07.479" endtime="20250531 04:25:10.514"/>
</kw>
<msg timestamp="20250531 04:25:10.514" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250531 04:25:07.479" endtime="20250531 04:25:10.514"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:10.517" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:10.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:10.522" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:10.515" endtime="20250531 04:25:10.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:10.523" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:25:10.523" endtime="20250531 04:25:10.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:10.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:10.523" endtime="20250531 04:25:10.523"/>
</kw>
<status status="PASS" starttime="20250531 04:25:10.515" endtime="20250531 04:25:10.523"/>
</kw>
<msg timestamp="20250531 04:25:10.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:10.514" endtime="20250531 04:25:10.524"/>
</kw>
<msg timestamp="20250531 04:25:10.524" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:10.514" endtime="20250531 04:25:10.524"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:25:10.524" endtime="20250531 04:25:10.524"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:10.527" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:10.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:10.532" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:10.525" endtime="20250531 04:25:10.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:10.533" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:25:10.532" endtime="20250531 04:25:10.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:10.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:10.533" endtime="20250531 04:25:10.533"/>
</kw>
<status status="PASS" starttime="20250531 04:25:10.525" endtime="20250531 04:25:10.533"/>
</kw>
<msg timestamp="20250531 04:25:10.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:10.525" endtime="20250531 04:25:10.534"/>
</kw>
<msg timestamp="20250531 04:25:10.534" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:10.524" endtime="20250531 04:25:10.534"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:25:10.534" endtime="20250531 04:25:10.534"/>
</kw>
<status status="PASS" starttime="20250531 04:24:47.015" endtime="20250531 04:25:10.534"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250531 04:24:47.014" endtime="20250531 04:25:10.534"/>
</test>
<test id="s1-s4-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:25:10.535" endtime="20250531 04:25:10.535"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:10.538" level="INFO">Running command 'ozone sh bucket create o3://om:9862/17991-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:13.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:13.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:25:10.536" endtime="20250531 04:25:13.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:13.292" level="INFO"/>
<status status="PASS" starttime="20250531 04:25:13.291" endtime="20250531 04:25:13.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:13.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:13.292" endtime="20250531 04:25:13.292"/>
</kw>
<status status="PASS" starttime="20250531 04:25:10.536" endtime="20250531 04:25:13.292"/>
</kw>
<msg timestamp="20250531 04:25:13.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:10.536" endtime="20250531 04:25:13.292"/>
</kw>
<status status="PASS" starttime="20250531 04:25:10.536" endtime="20250531 04:25:13.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:13.296" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/17991-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:16.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:16.471" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:25:13.293" endtime="20250531 04:25:16.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:16.472" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:25:16.471" endtime="20250531 04:25:16.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:16.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:16.472" endtime="20250531 04:25:16.472"/>
</kw>
<status status="PASS" starttime="20250531 04:25:13.293" endtime="20250531 04:25:16.472"/>
</kw>
<msg timestamp="20250531 04:25:16.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:13.293" endtime="20250531 04:25:16.473"/>
</kw>
<msg timestamp="20250531 04:25:16.473" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:25:13.292" endtime="20250531 04:25:16.473"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:16.476" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:16.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:16.481" level="INFO">${output} = hadoop</msg>
<status status="PASS" starttime="20250531 04:25:16.474" endtime="20250531 04:25:16.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:16.482" level="INFO">hadoop</msg>
<status status="PASS" starttime="20250531 04:25:16.481" endtime="20250531 04:25:16.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:16.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:16.482" endtime="20250531 04:25:16.482"/>
</kw>
<status status="PASS" starttime="20250531 04:25:16.473" endtime="20250531 04:25:16.482"/>
</kw>
<msg timestamp="20250531 04:25:16.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:16.473" endtime="20250531 04:25:16.482"/>
</kw>
<msg timestamp="20250531 04:25:16.483" level="INFO">${acl_check} = hadoop</msg>
<status status="PASS" starttime="20250531 04:25:16.473" endtime="20250531 04:25:16.483"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${acl_check}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250531 04:25:16.483" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20250531 04:25:16.483" endtime="20250531 04:25:16.483"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:16.486" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/17991-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:19.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:19.289" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20250531 04:25:16.484" endtime="20250531 04:25:19.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:19.290" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20250531 04:25:19.289" endtime="20250531 04:25:19.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:19.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:19.290" endtime="20250531 04:25:19.290"/>
</kw>
<status status="PASS" starttime="20250531 04:25:16.484" endtime="20250531 04:25:19.291"/>
</kw>
<msg timestamp="20250531 04:25:19.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:16.483" endtime="20250531 04:25:19.291"/>
</kw>
<msg timestamp="20250531 04:25:19.291" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20250531 04:25:16.483" endtime="20250531 04:25:19.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:19.294" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/17991-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:22.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:22.367" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" :...</msg>
<status status="PASS" starttime="20250531 04:25:19.292" endtime="20250531 04:25:22.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:22.368" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "LIST" ],
  "aclList" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:25:22.368" endtime="20250531 04:25:22.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:22.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:22.368" endtime="20250531 04:25:22.369"/>
</kw>
<status status="PASS" starttime="20250531 04:25:19.292" endtime="20250531 04:25:22.369"/>
</kw>
<msg timestamp="20250531 04:25:22.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:19.291" endtime="20250531 04:25:22.369"/>
</kw>
<msg timestamp="20250531 04:25:22.369" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" :...</msg>
<status status="PASS" starttime="20250531 04:25:19.291" endtime="20250531 04:25:22.369"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:22.372" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "LIST" ],
  "aclList" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:22.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:22.378" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:22.370" endtime="20250531 04:25:22.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:22.378" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:25:22.378" endtime="20250531 04:25:22.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:22.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:22.378" endtime="20250531 04:25:22.379"/>
</kw>
<status status="PASS" starttime="20250531 04:25:22.370" endtime="20250531 04:25:22.379"/>
</kw>
<msg timestamp="20250531 04:25:22.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:22.370" endtime="20250531 04:25:22.379"/>
</kw>
<msg timestamp="20250531 04:25:22.379" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:22.369" endtime="20250531 04:25:22.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:25:22.379" endtime="20250531 04:25:22.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:22.382" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/17991-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:25.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:25.066" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:25:22.380" endtime="20250531 04:25:25.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:25.067" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:25:25.066" endtime="20250531 04:25:25.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:25.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:25.067" endtime="20250531 04:25:25.067"/>
</kw>
<status status="PASS" starttime="20250531 04:25:22.380" endtime="20250531 04:25:25.067"/>
</kw>
<msg timestamp="20250531 04:25:25.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:22.380" endtime="20250531 04:25:25.067"/>
</kw>
<msg timestamp="20250531 04:25:25.068" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:25:22.380" endtime="20250531 04:25:25.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:25.071" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/17991-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:28.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:28.139" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:25:25.069" endtime="20250531 04:25:28.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:28.140" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ],
  "aclSet" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:25:28.140" endtime="20250531 04:25:28.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:28.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:28.141" endtime="20250531 04:25:28.141"/>
</kw>
<status status="PASS" starttime="20250531 04:25:25.068" endtime="20250531 04:25:28.141"/>
</kw>
<msg timestamp="20250531 04:25:28.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:25.068" endtime="20250531 04:25:28.141"/>
</kw>
<msg timestamp="20250531 04:25:28.141" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:25:25.068" endtime="20250531 04:25:28.141"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:28.145" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ],
  "aclSet" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:28.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:28.150" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:28.143" endtime="20250531 04:25:28.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:28.151" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:25:28.150" endtime="20250531 04:25:28.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:28.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:28.151" endtime="20250531 04:25:28.151"/>
</kw>
<status status="PASS" starttime="20250531 04:25:28.142" endtime="20250531 04:25:28.151"/>
</kw>
<msg timestamp="20250531 04:25:28.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:28.142" endtime="20250531 04:25:28.151"/>
</kw>
<msg timestamp="20250531 04:25:28.151" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:28.141" endtime="20250531 04:25:28.151"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:25:28.151" endtime="20250531 04:25:28.152"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:28.155" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/17991-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:30.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:30.980" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:25:28.153" endtime="20250531 04:25:30.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:30.981" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:25:30.980" endtime="20250531 04:25:30.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:30.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:30.981" endtime="20250531 04:25:30.981"/>
</kw>
<status status="PASS" starttime="20250531 04:25:28.152" endtime="20250531 04:25:30.981"/>
</kw>
<msg timestamp="20250531 04:25:30.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:28.152" endtime="20250531 04:25:30.982"/>
</kw>
<msg timestamp="20250531 04:25:30.982" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:25:28.152" endtime="20250531 04:25:30.982"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:30.985" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/17991-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:33.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:33.925" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "t...</msg>
<status status="PASS" starttime="20250531 04:25:30.983" endtime="20250531 04:25:33.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:33.926" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:25:33.925" endtime="20250531 04:25:33.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:33.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:33.926" endtime="20250531 04:25:33.926"/>
</kw>
<status status="PASS" starttime="20250531 04:25:30.982" endtime="20250531 04:25:33.926"/>
</kw>
<msg timestamp="20250531 04:25:33.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:30.982" endtime="20250531 04:25:33.927"/>
</kw>
<msg timestamp="20250531 04:25:33.927" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "t...</msg>
<status status="PASS" starttime="20250531 04:25:30.982" endtime="20250531 04:25:33.927"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:33.930" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:33.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:33.935" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:33.928" endtime="20250531 04:25:33.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:33.936" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:25:33.936" endtime="20250531 04:25:33.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:33.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:33.936" endtime="20250531 04:25:33.936"/>
</kw>
<status status="PASS" starttime="20250531 04:25:33.928" endtime="20250531 04:25:33.937"/>
</kw>
<msg timestamp="20250531 04:25:33.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:33.927" endtime="20250531 04:25:33.937"/>
</kw>
<msg timestamp="20250531 04:25:33.937" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:33.927" endtime="20250531 04:25:33.937"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:25:33.937" endtime="20250531 04:25:33.937"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:33.940" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:33.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:33.946" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:33.938" endtime="20250531 04:25:33.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:33.946" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:25:33.946" endtime="20250531 04:25:33.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:33.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:33.947" endtime="20250531 04:25:33.947"/>
</kw>
<status status="PASS" starttime="20250531 04:25:33.938" endtime="20250531 04:25:33.947"/>
</kw>
<msg timestamp="20250531 04:25:33.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:33.938" endtime="20250531 04:25:33.947"/>
</kw>
<msg timestamp="20250531 04:25:33.947" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:33.937" endtime="20250531 04:25:33.947"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:25:33.947" endtime="20250531 04:25:33.948"/>
</kw>
<status status="PASS" starttime="20250531 04:25:10.535" endtime="20250531 04:25:33.948"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250531 04:25:10.535" endtime="20250531 04:25:33.948"/>
</test>
<test id="s1-s4-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:25:33.949" endtime="20250531 04:25:33.949"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:33.952" level="INFO">Running command 'ozone sh key put o3://om:9862/17991-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:38.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:38.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:25:33.950" endtime="20250531 04:25:38.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:38.368" level="INFO"/>
<status status="PASS" starttime="20250531 04:25:38.368" endtime="20250531 04:25:38.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:38.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:38.369" endtime="20250531 04:25:38.369"/>
</kw>
<status status="PASS" starttime="20250531 04:25:33.950" endtime="20250531 04:25:38.369"/>
</kw>
<msg timestamp="20250531 04:25:38.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:33.950" endtime="20250531 04:25:38.369"/>
</kw>
<status status="PASS" starttime="20250531 04:25:33.949" endtime="20250531 04:25:38.369"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:38.372" level="INFO">Running command 'ozone sh key getacl o3://om:9862/17991-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:41.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:41.368" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:25:38.370" endtime="20250531 04:25:41.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:41.369" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:25:41.369" endtime="20250531 04:25:41.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:41.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:41.369" endtime="20250531 04:25:41.370"/>
</kw>
<status status="PASS" starttime="20250531 04:25:38.370" endtime="20250531 04:25:41.370"/>
</kw>
<msg timestamp="20250531 04:25:41.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:38.370" endtime="20250531 04:25:41.370"/>
</kw>
<msg timestamp="20250531 04:25:41.370" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:25:38.369" endtime="20250531 04:25:41.370"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:41.374" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:41.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:41.379" level="INFO">${output} = hadoop</msg>
<status status="PASS" starttime="20250531 04:25:41.371" endtime="20250531 04:25:41.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:41.379" level="INFO">hadoop</msg>
<status status="PASS" starttime="20250531 04:25:41.379" endtime="20250531 04:25:41.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:41.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:41.379" endtime="20250531 04:25:41.380"/>
</kw>
<status status="PASS" starttime="20250531 04:25:41.371" endtime="20250531 04:25:41.380"/>
</kw>
<msg timestamp="20250531 04:25:41.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:41.371" endtime="20250531 04:25:41.380"/>
</kw>
<msg timestamp="20250531 04:25:41.380" level="INFO">${acl_check} = hadoop</msg>
<status status="PASS" starttime="20250531 04:25:41.370" endtime="20250531 04:25:41.380"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${acl_check}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250531 04:25:41.380" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20250531 04:25:41.380" endtime="20250531 04:25:41.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:41.384" level="INFO">Running command 'ozone sh key addacl o3://om:9862/17991-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:44.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:44.306" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:25:41.382" endtime="20250531 04:25:44.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:44.307" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:25:44.306" endtime="20250531 04:25:44.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:44.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:44.307" endtime="20250531 04:25:44.307"/>
</kw>
<status status="PASS" starttime="20250531 04:25:41.381" endtime="20250531 04:25:44.308"/>
</kw>
<msg timestamp="20250531 04:25:44.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:41.381" endtime="20250531 04:25:44.308"/>
</kw>
<msg timestamp="20250531 04:25:44.308" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250531 04:25:41.381" endtime="20250531 04:25:44.308"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:44.311" level="INFO">Running command 'ozone sh key getacl o3://om:9862/17991-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:47.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:47.292" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:25:44.309" endtime="20250531 04:25:47.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:47.293" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:25:47.293" endtime="20250531 04:25:47.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:47.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:47.293" endtime="20250531 04:25:47.294"/>
</kw>
<status status="PASS" starttime="20250531 04:25:44.309" endtime="20250531 04:25:47.294"/>
</kw>
<msg timestamp="20250531 04:25:47.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:44.308" endtime="20250531 04:25:47.294"/>
</kw>
<msg timestamp="20250531 04:25:47.294" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:25:44.308" endtime="20250531 04:25:47.294"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:47.297" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:47.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:47.303" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:47.295" endtime="20250531 04:25:47.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:47.303" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:25:47.303" endtime="20250531 04:25:47.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:47.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:47.303" endtime="20250531 04:25:47.304"/>
</kw>
<status status="PASS" starttime="20250531 04:25:47.295" endtime="20250531 04:25:47.304"/>
</kw>
<msg timestamp="20250531 04:25:47.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:47.295" endtime="20250531 04:25:47.304"/>
</kw>
<msg timestamp="20250531 04:25:47.304" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:47.294" endtime="20250531 04:25:47.304"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:25:47.304" endtime="20250531 04:25:47.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:47.308" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/17991-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:50.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:50.092" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:25:47.306" endtime="20250531 04:25:50.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:50.093" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:25:50.093" endtime="20250531 04:25:50.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:50.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:50.093" endtime="20250531 04:25:50.094"/>
</kw>
<status status="PASS" starttime="20250531 04:25:47.305" endtime="20250531 04:25:50.094"/>
</kw>
<msg timestamp="20250531 04:25:50.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:47.305" endtime="20250531 04:25:50.094"/>
</kw>
<msg timestamp="20250531 04:25:50.094" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250531 04:25:47.305" endtime="20250531 04:25:50.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:50.097" level="INFO">Running command 'ozone sh key getacl o3://om:9862/17991-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:53.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:53.064" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:25:50.095" endtime="20250531 04:25:53.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:53.065" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ],
  "aclSet" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:25:53.064" endtime="20250531 04:25:53.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:53.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:53.065" endtime="20250531 04:25:53.065"/>
</kw>
<status status="PASS" starttime="20250531 04:25:50.095" endtime="20250531 04:25:53.066"/>
</kw>
<msg timestamp="20250531 04:25:53.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:50.095" endtime="20250531 04:25:53.066"/>
</kw>
<msg timestamp="20250531 04:25:53.066" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" ...</msg>
<status status="PASS" starttime="20250531 04:25:50.094" endtime="20250531 04:25:53.066"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:53.069" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ],
  "aclSet" : [ "READ", "WRITE" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:53.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:53.074" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:53.067" endtime="20250531 04:25:53.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:53.075" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:25:53.075" endtime="20250531 04:25:53.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:53.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:53.075" endtime="20250531 04:25:53.076"/>
</kw>
<status status="PASS" starttime="20250531 04:25:53.067" endtime="20250531 04:25:53.076"/>
</kw>
<msg timestamp="20250531 04:25:53.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:53.066" endtime="20250531 04:25:53.076"/>
</kw>
<msg timestamp="20250531 04:25:53.076" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:53.066" endtime="20250531 04:25:53.076"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:25:53.076" endtime="20250531 04:25:53.076"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:53.079" level="INFO">Running command 'ozone sh key setacl o3://om:9862/17991-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:55.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:55.883" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:25:53.077" endtime="20250531 04:25:55.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:55.884" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:25:55.884" endtime="20250531 04:25:55.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:55.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:55.884" endtime="20250531 04:25:55.885"/>
</kw>
<status status="PASS" starttime="20250531 04:25:53.077" endtime="20250531 04:25:55.885"/>
</kw>
<msg timestamp="20250531 04:25:55.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:53.077" endtime="20250531 04:25:55.885"/>
</kw>
<msg timestamp="20250531 04:25:55.885" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:25:53.076" endtime="20250531 04:25:55.885"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:55.888" level="INFO">Running command 'ozone sh key getacl o3://om:9862/17991-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:58.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:58.969" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "t...</msg>
<status status="PASS" starttime="20250531 04:25:55.886" endtime="20250531 04:25:58.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:58.970" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:25:58.970" endtime="20250531 04:25:58.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:58.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:58.970" endtime="20250531 04:25:58.971"/>
</kw>
<status status="PASS" starttime="20250531 04:25:55.886" endtime="20250531 04:25:58.971"/>
</kw>
<msg timestamp="20250531 04:25:58.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:55.886" endtime="20250531 04:25:58.971"/>
</kw>
<msg timestamp="20250531 04:25:58.971" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "t...</msg>
<status status="PASS" starttime="20250531 04:25:55.885" endtime="20250531 04:25:58.971"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:58.974" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:58.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:58.979" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:58.972" endtime="20250531 04:25:58.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:58.980" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:25:58.980" endtime="20250531 04:25:58.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:58.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:58.980" endtime="20250531 04:25:58.981"/>
</kw>
<status status="PASS" starttime="20250531 04:25:58.972" endtime="20250531 04:25:58.981"/>
</kw>
<msg timestamp="20250531 04:25:58.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:58.972" endtime="20250531 04:25:58.981"/>
</kw>
<msg timestamp="20250531 04:25:58.981" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:58.971" endtime="20250531 04:25:58.981"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:25:58.981" endtime="20250531 04:25:58.981"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:58.984" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:25:58.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:25:58.989" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:58.982" endtime="20250531 04:25:58.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:25:58.990" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:25:58.989" endtime="20250531 04:25:58.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:25:58.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:25:58.990" endtime="20250531 04:25:58.990"/>
</kw>
<status status="PASS" starttime="20250531 04:25:58.982" endtime="20250531 04:25:58.990"/>
</kw>
<msg timestamp="20250531 04:25:58.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:58.982" endtime="20250531 04:25:58.991"/>
</kw>
<msg timestamp="20250531 04:25:58.991" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:25:58.981" endtime="20250531 04:25:58.991"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:25:58.991" endtime="20250531 04:25:58.991"/>
</kw>
<status status="PASS" starttime="20250531 04:25:33.949" endtime="20250531 04:25:58.991"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250531 04:25:33.948" endtime="20250531 04:25:58.991"/>
</test>
<test id="s1-s4-s5-t6" name="Test native authorizer" line="42">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:25:58.992" endtime="20250531 04:25:58.992"/>
</kw>
<kw name="Test native authorizer" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250531 04:25:58.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:58.993" endtime="20250531 04:25:58.993"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a group:root:a</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.993" endtime="20250531 04:25:58.993"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.993" endtime="20250531 04:25:58.993"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250531 04:25:58.993" endtime="20250531 04:25:58.993"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.993" endtime="20250531 04:25:58.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:25:58.994" endtime="20250531 04:25:58.994"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.994" endtime="20250531 04:25:58.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:25:58.994" endtime="20250531 04:25:58.994"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:xy</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.994" endtime="20250531 04:25:58.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:25:58.994" endtime="20250531 04:25:58.994"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.994" endtime="20250531 04:25:58.994"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250531 04:25:58.994" endtime="20250531 04:25:58.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:xyrw</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.994" endtime="20250531 04:25:58.994"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.995" endtime="20250531 04:25:58.995"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250531 04:25:58.995" endtime="20250531 04:25:58.995"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.995" endtime="20250531 04:25:58.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:25:58.995" endtime="20250531 04:25:58.995"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:l</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.995" endtime="20250531 04:25:58.995"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.995" endtime="20250531 04:25:58.995"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.995" endtime="20250531 04:25:58.995"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.995" endtime="20250531 04:25:58.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:25:58.995" endtime="20250531 04:25:58.995"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.995" endtime="20250531 04:25:58.996"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250531 04:25:58.996" endtime="20250531 04:25:58.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:testuser2:a</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.996" endtime="20250531 04:25:58.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.996" endtime="20250531 04:25:58.996"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.996" endtime="20250531 04:25:58.996"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250531 04:25:58.996" endtime="20250531 04:25:58.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.996" endtime="20250531 04:25:58.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.996" endtime="20250531 04:25:58.996"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250531 04:25:58.996" endtime="20250531 04:25:58.996"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250531 04:25:58.996" endtime="20250531 04:25:58.996"/>
</kw>
<status status="PASS" starttime="20250531 04:25:58.992" endtime="20250531 04:25:58.996"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250531 04:25:58.992" endtime="20250531 04:25:58.997"/>
</test>
<test id="s1-s4-s5-t7" name="RpcClient prefix acls" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:25:58.997" endtime="20250531 04:25:58.997"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:25:59.001" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/17991-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:01.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:01.872" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20250531 04:25:58.999" endtime="20250531 04:26:01.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:01.873" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20250531 04:26:01.873" endtime="20250531 04:26:01.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:01.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:01.873" endtime="20250531 04:26:01.874"/>
</kw>
<status status="PASS" starttime="20250531 04:25:58.998" endtime="20250531 04:26:01.874"/>
</kw>
<msg timestamp="20250531 04:26:01.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:25:58.998" endtime="20250531 04:26:01.874"/>
</kw>
<status status="PASS" starttime="20250531 04:25:58.998" endtime="20250531 04:26:01.874"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:01.877" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/17991-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:04.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:04.873" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250531 04:26:01.875" endtime="20250531 04:26:04.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:04.874" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:26:04.873" endtime="20250531 04:26:04.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:04.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:04.875" endtime="20250531 04:26:04.875"/>
</kw>
<status status="PASS" starttime="20250531 04:26:01.875" endtime="20250531 04:26:04.875"/>
</kw>
<msg timestamp="20250531 04:26:04.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:01.875" endtime="20250531 04:26:04.875"/>
</kw>
<msg timestamp="20250531 04:26:04.875" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250531 04:26:01.874" endtime="20250531 04:26:04.875"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:04.878" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:04.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:04.883" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:26:04.876" endtime="20250531 04:26:04.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:04.884" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:26:04.884" endtime="20250531 04:26:04.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:04.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:04.884" endtime="20250531 04:26:04.884"/>
</kw>
<status status="PASS" starttime="20250531 04:26:04.876" endtime="20250531 04:26:04.885"/>
</kw>
<msg timestamp="20250531 04:26:04.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:04.876" endtime="20250531 04:26:04.885"/>
</kw>
<msg timestamp="20250531 04:26:04.885" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:26:04.875" endtime="20250531 04:26:04.885"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:26:04.885" endtime="20250531 04:26:04.885"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:04.888" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/17991-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:07.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:07.639" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20250531 04:26:04.886" endtime="20250531 04:26:07.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:07.640" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20250531 04:26:07.639" endtime="20250531 04:26:07.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:07.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:07.640" endtime="20250531 04:26:07.640"/>
</kw>
<status status="PASS" starttime="20250531 04:26:04.886" endtime="20250531 04:26:07.640"/>
</kw>
<msg timestamp="20250531 04:26:07.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:04.886" endtime="20250531 04:26:07.640"/>
</kw>
<msg timestamp="20250531 04:26:07.640" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20250531 04:26:04.885" endtime="20250531 04:26:07.640"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:07.644" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/17991-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:10.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:10.696" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250531 04:26:07.642" endtime="20250531 04:26:10.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:10.697" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:26:10.696" endtime="20250531 04:26:10.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:10.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:10.697" endtime="20250531 04:26:10.697"/>
</kw>
<status status="PASS" starttime="20250531 04:26:07.641" endtime="20250531 04:26:10.697"/>
</kw>
<msg timestamp="20250531 04:26:10.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:07.641" endtime="20250531 04:26:10.697"/>
</kw>
<msg timestamp="20250531 04:26:10.697" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250531 04:26:07.641" endtime="20250531 04:26:10.698"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:10.701" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:10.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:10.706" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:26:10.699" endtime="20250531 04:26:10.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:10.707" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:26:10.706" endtime="20250531 04:26:10.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:10.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:10.707" endtime="20250531 04:26:10.707"/>
</kw>
<status status="PASS" starttime="20250531 04:26:10.698" endtime="20250531 04:26:10.707"/>
</kw>
<msg timestamp="20250531 04:26:10.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:10.698" endtime="20250531 04:26:10.707"/>
</kw>
<msg timestamp="20250531 04:26:10.707" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:26:10.698" endtime="20250531 04:26:10.707"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:26:10.707" endtime="20250531 04:26:10.708"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:10.711" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/17991-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:13.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:13.636" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:26:10.709" endtime="20250531 04:26:13.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:13.637" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:26:13.636" endtime="20250531 04:26:13.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:13.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:13.637" endtime="20250531 04:26:13.637"/>
</kw>
<status status="PASS" starttime="20250531 04:26:10.709" endtime="20250531 04:26:13.638"/>
</kw>
<msg timestamp="20250531 04:26:13.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:10.708" endtime="20250531 04:26:13.638"/>
</kw>
<msg timestamp="20250531 04:26:13.638" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250531 04:26:10.708" endtime="20250531 04:26:13.638"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:13.641" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/17991-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:16.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:16.614" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250531 04:26:13.639" endtime="20250531 04:26:16.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:16.615" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:26:16.614" endtime="20250531 04:26:16.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:16.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:16.615" endtime="20250531 04:26:16.615"/>
</kw>
<status status="PASS" starttime="20250531 04:26:13.639" endtime="20250531 04:26:16.615"/>
</kw>
<msg timestamp="20250531 04:26:16.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:13.638" endtime="20250531 04:26:16.616"/>
</kw>
<msg timestamp="20250531 04:26:16.616" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250531 04:26:13.638" endtime="20250531 04:26:16.616"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:16.619" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:16.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:16.624" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:26:16.617" endtime="20250531 04:26:16.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:16.625" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:26:16.625" endtime="20250531 04:26:16.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:16.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:16.625" endtime="20250531 04:26:16.625"/>
</kw>
<status status="PASS" starttime="20250531 04:26:16.617" endtime="20250531 04:26:16.626"/>
</kw>
<msg timestamp="20250531 04:26:16.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:16.616" endtime="20250531 04:26:16.626"/>
</kw>
<msg timestamp="20250531 04:26:16.626" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:26:16.616" endtime="20250531 04:26:16.626"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:26:16.626" endtime="20250531 04:26:16.626"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:16.629" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:16.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:16.634" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:26:16.627" endtime="20250531 04:26:16.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:16.635" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:26:16.634" endtime="20250531 04:26:16.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:16.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:16.635" endtime="20250531 04:26:16.635"/>
</kw>
<status status="PASS" starttime="20250531 04:26:16.627" endtime="20250531 04:26:16.635"/>
</kw>
<msg timestamp="20250531 04:26:16.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:16.627" endtime="20250531 04:26:16.635"/>
</kw>
<msg timestamp="20250531 04:26:16.635" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:26:16.626" endtime="20250531 04:26:16.635"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:26:16.636" endtime="20250531 04:26:16.636"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:16.639" level="INFO">Running command 'ozone sh key put o3://om:9862/17991-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:20.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:20.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:26:16.637" endtime="20250531 04:26:20.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:20.847" level="INFO"/>
<status status="PASS" starttime="20250531 04:26:20.846" endtime="20250531 04:26:20.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:20.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:20.847" endtime="20250531 04:26:20.847"/>
</kw>
<status status="PASS" starttime="20250531 04:26:16.637" endtime="20250531 04:26:20.847"/>
</kw>
<msg timestamp="20250531 04:26:20.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:16.636" endtime="20250531 04:26:20.847"/>
</kw>
<status status="PASS" starttime="20250531 04:26:16.636" endtime="20250531 04:26:20.847"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:20.851" level="INFO">Running command 'ozone sh key getacl o3://om:9862/17991-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:23.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:23.864" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" :...</msg>
<status status="PASS" starttime="20250531 04:26:20.848" endtime="20250531 04:26:23.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:23.865" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "LIST" ],
  "aclList" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250531 04:26:23.864" endtime="20250531 04:26:23.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:23.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:23.865" endtime="20250531 04:26:23.865"/>
</kw>
<status status="PASS" starttime="20250531 04:26:20.848" endtime="20250531 04:26:23.865"/>
</kw>
<msg timestamp="20250531 04:26:23.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:20.848" endtime="20250531 04:26:23.865"/>
</kw>
<msg timestamp="20250531 04:26:23.866" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" :...</msg>
<status status="PASS" starttime="20250531 04:26:20.848" endtime="20250531 04:26:23.866"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:23.869" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "LIST" ],
  "aclList" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:23.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:23.874" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:26:23.867" endtime="20250531 04:26:23.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:23.875" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:26:23.874" endtime="20250531 04:26:23.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:23.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:23.875" endtime="20250531 04:26:23.875"/>
</kw>
<status status="PASS" starttime="20250531 04:26:23.866" endtime="20250531 04:26:23.875"/>
</kw>
<msg timestamp="20250531 04:26:23.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:23.866" endtime="20250531 04:26:23.875"/>
</kw>
<msg timestamp="20250531 04:26:23.876" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:26:23.866" endtime="20250531 04:26:23.876"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:26:23.876" endtime="20250531 04:26:23.876"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:23.879" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "LIST" ],
  "aclList" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:23.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:23.884" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250531 04:26:23.877" endtime="20250531 04:26:23.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:23.884" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250531 04:26:23.884" endtime="20250531 04:26:23.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:23.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:23.884" endtime="20250531 04:26:23.885"/>
</kw>
<status status="PASS" starttime="20250531 04:26:23.877" endtime="20250531 04:26:23.885"/>
</kw>
<msg timestamp="20250531 04:26:23.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:23.876" endtime="20250531 04:26:23.885"/>
</kw>
<msg timestamp="20250531 04:26:23.885" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250531 04:26:23.876" endtime="20250531 04:26:23.885"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:26:23.885" endtime="20250531 04:26:23.885"/>
</kw>
<status status="PASS" starttime="20250531 04:25:58.998" endtime="20250531 04:26:23.886"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250531 04:25:58.997" endtime="20250531 04:26:23.886"/>
</test>
<test id="s1-s4-s5-t8" name="RpcClient without host" line="48">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:26:23.887" endtime="20250531 04:26:23.887"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:23.890" level="INFO">Running command 'ozone sh volume info o3:///17991-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:26.626" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:26:26.626" level="INFO">${output} = VOLUME_NOT_FOUND Volume 17991-without-host is not found</msg>
<status status="PASS" starttime="20250531 04:26:23.888" endtime="20250531 04:26:26.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:26.627" level="INFO">VOLUME_NOT_FOUND Volume 17991-without-host is not found</msg>
<status status="PASS" starttime="20250531 04:26:26.626" endtime="20250531 04:26:26.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:26.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:26.627" endtime="20250531 04:26:26.627"/>
</kw>
<msg timestamp="20250531 04:26:26.627" level="INFO">${result} = VOLUME_NOT_FOUND Volume 17991-without-host is not found</msg>
<status status="PASS" starttime="20250531 04:26:23.888" endtime="20250531 04:26:26.628"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:26:26.628" endtime="20250531 04:26:26.628"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:26.631" level="INFO">Running command 'ozone sh volume create o3:///17991-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:29.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:29.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:26:26.629" endtime="20250531 04:26:29.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:29.463" level="INFO"/>
<status status="PASS" starttime="20250531 04:26:29.463" endtime="20250531 04:26:29.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:29.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:29.463" endtime="20250531 04:26:29.464"/>
</kw>
<status status="PASS" starttime="20250531 04:26:26.629" endtime="20250531 04:26:29.464"/>
</kw>
<msg timestamp="20250531 04:26:29.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:26.629" endtime="20250531 04:26:29.464"/>
</kw>
<msg timestamp="20250531 04:26:29.464" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:26:26.628" endtime="20250531 04:26:29.464"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250531 04:26:29.464" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250531 04:26:29.464" endtime="20250531 04:26:29.464"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:29.468" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="17991-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:32.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:32.364" level="INFO">${output} = {
  "metadata": {},
  "name": "17991-without-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20250531 04:26:29.466" endtime="20250531 04:26:32.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:32.365" level="INFO">{
  "metadata": {},
  "name": "17991-without-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2025-05-31T04:26:29.388Z",
  "modificationTime": "2025-05-31T04:26:29.388Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ],
      "aclSet": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "READ",
        "LIST"
      ],
      "aclSet": [
        "READ",
        "LIST"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20250531 04:26:32.364" endtime="20250531 04:26:32.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:32.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:32.365" endtime="20250531 04:26:32.365"/>
</kw>
<status status="PASS" starttime="20250531 04:26:29.465" endtime="20250531 04:26:32.365"/>
</kw>
<msg timestamp="20250531 04:26:32.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:29.465" endtime="20250531 04:26:32.365"/>
</kw>
<msg timestamp="20250531 04:26:32.365" level="INFO">${result} = {
  "metadata": {},
  "name": "17991-without-host",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20250531 04:26:29.465" endtime="20250531 04:26:32.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:26:32.366" endtime="20250531 04:26:32.366"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:32.369" level="INFO">Running command 'ozone sh volume setquota o3:///17991-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:35.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:35.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:26:32.367" endtime="20250531 04:26:35.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:35.041" level="INFO"/>
<status status="PASS" starttime="20250531 04:26:35.040" endtime="20250531 04:26:35.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:35.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:35.041" endtime="20250531 04:26:35.041"/>
</kw>
<status status="PASS" starttime="20250531 04:26:32.367" endtime="20250531 04:26:35.041"/>
</kw>
<msg timestamp="20250531 04:26:35.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:32.366" endtime="20250531 04:26:35.041"/>
</kw>
<status status="PASS" starttime="20250531 04:26:32.366" endtime="20250531 04:26:35.041"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:35.045" level="INFO">Running command 'ozone sh volume info o3:///17991-without-host | jq -r '. | select(.name=="17991-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:38.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:38.073" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250531 04:26:35.043" endtime="20250531 04:26:38.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:38.074" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250531 04:26:38.074" endtime="20250531 04:26:38.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:38.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:38.074" endtime="20250531 04:26:38.075"/>
</kw>
<status status="PASS" starttime="20250531 04:26:35.042" endtime="20250531 04:26:38.075"/>
</kw>
<msg timestamp="20250531 04:26:38.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:35.042" endtime="20250531 04:26:38.075"/>
</kw>
<msg timestamp="20250531 04:26:38.075" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250531 04:26:35.041" endtime="20250531 04:26:38.075"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:26:38.075" endtime="20250531 04:26:38.075"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:38.079" level="INFO">Running command 'ozone sh bucket create o3:///17991-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:40.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:40.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:26:38.077" endtime="20250531 04:26:40.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:40.893" level="INFO"/>
<status status="PASS" starttime="20250531 04:26:40.892" endtime="20250531 04:26:40.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:40.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:40.893" endtime="20250531 04:26:40.893"/>
</kw>
<status status="PASS" starttime="20250531 04:26:38.076" endtime="20250531 04:26:40.893"/>
</kw>
<msg timestamp="20250531 04:26:40.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:38.076" endtime="20250531 04:26:40.893"/>
</kw>
<msg timestamp="20250531 04:26:40.893" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:26:38.076" endtime="20250531 04:26:40.893"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250531 04:26:40.894" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250531 04:26:40.893" endtime="20250531 04:26:40.894"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:40.897" level="INFO">Running command 'ozone sh bucket info o3:///17991-without-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250531 04:26:43.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:43.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:26:40.895" endtime="20250531 04:26:43.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:43.905" level="INFO"/>
<status status="PASS" starttime="20250531 04:26:43.905" endtime="20250531 04:26:43.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:43.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:43.906" endtime="20250531 04:26:43.906"/>
</kw>
<status status="PASS" starttime="20250531 04:26:40.894" endtime="20250531 04:26:43.906"/>
</kw>
<msg timestamp="20250531 04:26:43.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:40.894" endtime="20250531 04:26:43.906"/>
</kw>
<status status="PASS" starttime="20250531 04:26:40.894" endtime="20250531 04:26:43.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:43.910" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:43.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:43.914" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20250531 04:26:43.907" endtime="20250531 04:26:43.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:43.915" level="INFO">DISK</msg>
<status status="PASS" starttime="20250531 04:26:43.915" endtime="20250531 04:26:43.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:43.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:43.915" endtime="20250531 04:26:43.915"/>
</kw>
<status status="PASS" starttime="20250531 04:26:43.907" endtime="20250531 04:26:43.916"/>
</kw>
<msg timestamp="20250531 04:26:43.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:43.907" endtime="20250531 04:26:43.916"/>
</kw>
<msg timestamp="20250531 04:26:43.916" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20250531 04:26:43.906" endtime="20250531 04:26:43.916"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:26:43.916" endtime="20250531 04:26:43.916"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:43.919" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:43.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:43.923" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250531 04:26:43.917" endtime="20250531 04:26:43.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:43.924" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250531 04:26:43.924" endtime="20250531 04:26:43.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:43.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:43.924" endtime="20250531 04:26:43.924"/>
</kw>
<status status="PASS" starttime="20250531 04:26:43.917" endtime="20250531 04:26:43.925"/>
</kw>
<msg timestamp="20250531 04:26:43.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:43.917" endtime="20250531 04:26:43.925"/>
</kw>
<msg timestamp="20250531 04:26:43.925" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250531 04:26:43.916" endtime="20250531 04:26:43.925"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:26:43.925" endtime="20250531 04:26:43.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:43.928" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:43.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:43.932" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20250531 04:26:43.926" endtime="20250531 04:26:43.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:43.933" level="INFO">100</msg>
<status status="PASS" starttime="20250531 04:26:43.933" endtime="20250531 04:26:43.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:43.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:43.933" endtime="20250531 04:26:43.934"/>
</kw>
<status status="PASS" starttime="20250531 04:26:43.926" endtime="20250531 04:26:43.934"/>
</kw>
<msg timestamp="20250531 04:26:43.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:43.926" endtime="20250531 04:26:43.934"/>
</kw>
<msg timestamp="20250531 04:26:43.934" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20250531 04:26:43.925" endtime="20250531 04:26:43.934"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:26:43.934" endtime="20250531 04:26:43.934"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:43.937" level="INFO">Running command 'ozone sh bucket setquota o3:///17991-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:46.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:46.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:26:43.935" endtime="20250531 04:26:46.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:46.759" level="INFO"/>
<status status="PASS" starttime="20250531 04:26:46.759" endtime="20250531 04:26:46.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:46.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:46.760" endtime="20250531 04:26:46.760"/>
</kw>
<status status="PASS" starttime="20250531 04:26:43.935" endtime="20250531 04:26:46.760"/>
</kw>
<msg timestamp="20250531 04:26:46.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:43.935" endtime="20250531 04:26:46.760"/>
</kw>
<status status="PASS" starttime="20250531 04:26:43.934" endtime="20250531 04:26:46.760"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:46.763" level="INFO">Running command 'ozone sh bucket info o3:///17991-without-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250531 04:26:49.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:49.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:26:46.761" endtime="20250531 04:26:49.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:49.676" level="INFO"/>
<status status="PASS" starttime="20250531 04:26:49.675" endtime="20250531 04:26:49.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:49.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:49.676" endtime="20250531 04:26:49.676"/>
</kw>
<status status="PASS" starttime="20250531 04:26:46.761" endtime="20250531 04:26:49.676"/>
</kw>
<msg timestamp="20250531 04:26:49.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:46.761" endtime="20250531 04:26:49.676"/>
</kw>
<status status="PASS" starttime="20250531 04:26:46.760" endtime="20250531 04:26:49.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:49.680" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:49.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:49.684" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20250531 04:26:49.678" endtime="20250531 04:26:49.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:49.685" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20250531 04:26:49.685" endtime="20250531 04:26:49.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:49.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:49.685" endtime="20250531 04:26:49.686"/>
</kw>
<status status="PASS" starttime="20250531 04:26:49.677" endtime="20250531 04:26:49.686"/>
</kw>
<msg timestamp="20250531 04:26:49.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:49.677" endtime="20250531 04:26:49.686"/>
</kw>
<msg timestamp="20250531 04:26:49.686" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20250531 04:26:49.677" endtime="20250531 04:26:49.686"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:26:49.686" endtime="20250531 04:26:49.686"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:49.689" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:49.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:49.693" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20250531 04:26:49.687" endtime="20250531 04:26:49.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:49.694" level="INFO">1000</msg>
<status status="PASS" starttime="20250531 04:26:49.694" endtime="20250531 04:26:49.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:49.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:49.694" endtime="20250531 04:26:49.695"/>
</kw>
<status status="PASS" starttime="20250531 04:26:49.687" endtime="20250531 04:26:49.695"/>
</kw>
<msg timestamp="20250531 04:26:49.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:49.687" endtime="20250531 04:26:49.695"/>
</kw>
<msg timestamp="20250531 04:26:49.695" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20250531 04:26:49.686" endtime="20250531 04:26:49.695"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:26:49.695" endtime="20250531 04:26:49.696"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:49.698" level="INFO">Running command 'ozone sh bucket list o3:///17991-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:52.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:52.766" level="INFO">${output} = 17991-without-host</msg>
<status status="PASS" starttime="20250531 04:26:49.697" endtime="20250531 04:26:52.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:52.767" level="INFO">17991-without-host</msg>
<status status="PASS" starttime="20250531 04:26:52.767" endtime="20250531 04:26:52.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:52.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:52.767" endtime="20250531 04:26:52.768"/>
</kw>
<status status="PASS" starttime="20250531 04:26:49.696" endtime="20250531 04:26:52.768"/>
</kw>
<msg timestamp="20250531 04:26:52.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:49.696" endtime="20250531 04:26:52.768"/>
</kw>
<msg timestamp="20250531 04:26:52.768" level="INFO">${result} = 17991-without-host</msg>
<status status="PASS" starttime="20250531 04:26:49.696" endtime="20250531 04:26:52.768"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:26:52.768" endtime="20250531 04:26:52.769"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:52.772" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:52.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:52.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:26:52.770" endtime="20250531 04:26:52.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:52.776" level="INFO"/>
<status status="PASS" starttime="20250531 04:26:52.776" endtime="20250531 04:26:52.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:52.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:52.777" endtime="20250531 04:26:52.777"/>
</kw>
<status status="PASS" starttime="20250531 04:26:52.770" endtime="20250531 04:26:52.777"/>
</kw>
<msg timestamp="20250531 04:26:52.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:52.770" endtime="20250531 04:26:52.777"/>
</kw>
<status status="PASS" starttime="20250531 04:26:52.769" endtime="20250531 04:26:52.777"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<arg>key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250531 04:26:52.778" level="INFO">${cmd} = key put o3:///17991-without-host/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get o3:///17991-without-host/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS o3:///17991-without-host/bb1/key1_...</msg>
<status status="PASS" starttime="20250531 04:26:52.778" endtime="20250531 04:26:52.778"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:52.781" level="INFO">Running command 'ozone sh --execute 'key put o3:///17991-without-host/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get o3:///17991-without-host/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS o3:///17991-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt' --execute 'key get o3:///17991-without-host/bb1/key1_RATIS /tmp/key1_RATIS' --execute 'key cp o3:///17991-without-host/bb1 key1 key1-copy' --execute 'key get o3:///17991-without-host/bb1/key1-copy /tmp/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:57.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:57.389" level="INFO">${output} = key put o3:///17991-without-host/bb1/key1 /opt/hadoop/NOTICE.txt
key get o3:///17991-without-host/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS o3:///17991-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE...</msg>
<status status="PASS" starttime="20250531 04:26:52.779" endtime="20250531 04:26:57.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:57.389" level="INFO">key put o3:///17991-without-host/bb1/key1 /opt/hadoop/NOTICE.txt
key get o3:///17991-without-host/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS o3:///17991-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt
key get o3:///17991-without-host/bb1/key1_RATIS /tmp/key1_RATIS
key cp o3:///17991-without-host/bb1 key1 key1-copy
key get o3:///17991-without-host/bb1/key1-copy /tmp/key1-copy</msg>
<status status="PASS" starttime="20250531 04:26:57.389" endtime="20250531 04:26:57.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:57.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:57.390" endtime="20250531 04:26:57.390"/>
</kw>
<status status="PASS" starttime="20250531 04:26:52.779" endtime="20250531 04:26:57.390"/>
</kw>
<msg timestamp="20250531 04:26:57.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:52.779" endtime="20250531 04:26:57.390"/>
</kw>
<status status="PASS" starttime="20250531 04:26:52.777" endtime="20250531 04:26:57.390"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:57.393" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:57.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:57.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:26:57.391" endtime="20250531 04:26:57.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:57.397" level="INFO"/>
<status status="PASS" starttime="20250531 04:26:57.396" endtime="20250531 04:26:57.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:57.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:57.397" endtime="20250531 04:26:57.397"/>
</kw>
<status status="PASS" starttime="20250531 04:26:57.391" endtime="20250531 04:26:57.397"/>
</kw>
<msg timestamp="20250531 04:26:57.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:57.391" endtime="20250531 04:26:57.397"/>
</kw>
<status status="PASS" starttime="20250531 04:26:57.390" endtime="20250531 04:26:57.398"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:57.400" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:26:57.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:26:57.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:26:57.398" endtime="20250531 04:26:57.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:26:57.403" level="INFO"/>
<status status="PASS" starttime="20250531 04:26:57.403" endtime="20250531 04:26:57.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:26:57.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:26:57.403" endtime="20250531 04:26:57.404"/>
</kw>
<status status="PASS" starttime="20250531 04:26:57.398" endtime="20250531 04:26:57.404"/>
</kw>
<msg timestamp="20250531 04:26:57.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:57.398" endtime="20250531 04:26:57.404"/>
</kw>
<status status="PASS" starttime="20250531 04:26:57.398" endtime="20250531 04:26:57.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:26:57.407" level="INFO">Running command 'ozone sh key info o3:///17991-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:00.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:00.683" level="INFO">${output} = {
  "volumeName": "17991-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:26:56.813Z",
  "modificationTime": "20...</msg>
<status status="PASS" starttime="20250531 04:26:57.405" endtime="20250531 04:27:00.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:00.684" level="INFO">{
  "volumeName": "17991-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:26:56.813Z",
  "modificationTime": "2025-05-31T04:26:56.851Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600116,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 693,
  "file": true
}</msg>
<status status="PASS" starttime="20250531 04:27:00.683" endtime="20250531 04:27:00.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:00.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:00.684" endtime="20250531 04:27:00.684"/>
</kw>
<status status="PASS" starttime="20250531 04:26:57.405" endtime="20250531 04:27:00.684"/>
</kw>
<msg timestamp="20250531 04:27:00.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:26:57.405" endtime="20250531 04:27:00.685"/>
</kw>
<msg timestamp="20250531 04:27:00.685" level="INFO">${result} = {
  "volumeName": "17991-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:26:56.813Z",
  "modificationTime": "20...</msg>
<status status="PASS" starttime="20250531 04:26:57.404" endtime="20250531 04:27:00.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:27:00.685" endtime="20250531 04:27:00.685"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:00.688" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:00.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:00.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:27:00.686" endtime="20250531 04:27:00.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:00.692" level="INFO"/>
<status status="PASS" starttime="20250531 04:27:00.691" endtime="20250531 04:27:00.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:00.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:00.692" endtime="20250531 04:27:00.692"/>
</kw>
<status status="PASS" starttime="20250531 04:27:00.686" endtime="20250531 04:27:00.692"/>
</kw>
<msg timestamp="20250531 04:27:00.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:00.685" endtime="20250531 04:27:00.692"/>
</kw>
<status status="PASS" starttime="20250531 04:27:00.685" endtime="20250531 04:27:00.692"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:00.695" level="INFO">Running command 'ozone sh key get o3:///17991-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:03.472" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:27:03.472" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250531 04:27:00.693" endtime="20250531 04:27:03.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:03.473" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250531 04:27:03.473" endtime="20250531 04:27:03.473"/>
</kw>
<msg timestamp="20250531 04:27:03.473" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250531 04:27:00.692" endtime="20250531 04:27:03.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:27:03.473" endtime="20250531 04:27:03.474"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:03.477" level="INFO">Running command 'ozone sh key get --force o3:///17991-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:07.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:07.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:27:03.475" endtime="20250531 04:27:07.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:07.661" level="INFO"/>
<status status="PASS" starttime="20250531 04:27:07.661" endtime="20250531 04:27:07.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:07.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:07.661" endtime="20250531 04:27:07.662"/>
</kw>
<status status="PASS" starttime="20250531 04:27:03.474" endtime="20250531 04:27:07.662"/>
</kw>
<msg timestamp="20250531 04:27:07.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:03.474" endtime="20250531 04:27:07.662"/>
</kw>
<msg timestamp="20250531 04:27:07.662" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:27:03.474" endtime="20250531 04:27:07.662"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:27:07.662" endtime="20250531 04:27:07.662"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 sample.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:07.665" level="INFO">Running command 'ozone sh key put o3:///17991-without-host/bb1/key1 sample.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:10.491" level="INFO">${rc} = 255</msg>
<msg timestamp="20250531 04:27:10.491" level="INFO">${output} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250531 04:27:07.663" endtime="20250531 04:27:10.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:10.492" level="INFO">Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250531 04:27:10.491" endtime="20250531 04:27:10.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:10.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:10.492" endtime="20250531 04:27:10.492"/>
</kw>
<msg timestamp="20250531 04:27:10.492" level="INFO">${result} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250531 04:27:07.663" endtime="20250531 04:27:10.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File not found: sample.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:27:10.493" endtime="20250531 04:27:10.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:10.496" level="INFO">Running command 'ozone sh key info o3:///17991-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:13.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:13.455" level="INFO">${output} = {
  "volumeName": "17991-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:26:55.574Z",
  "modificationTime": "2025-05-...</msg>
<status status="PASS" starttime="20250531 04:27:10.494" endtime="20250531 04:27:13.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:13.456" level="INFO">{
  "volumeName": "17991-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:26:55.574Z",
  "modificationTime": "2025-05-31T04:26:56.578Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600115,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 689,
  "file": true
}</msg>
<status status="PASS" starttime="20250531 04:27:13.455" endtime="20250531 04:27:13.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:13.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:13.456" endtime="20250531 04:27:13.456"/>
</kw>
<status status="PASS" starttime="20250531 04:27:10.494" endtime="20250531 04:27:13.456"/>
</kw>
<msg timestamp="20250531 04:27:13.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:10.493" endtime="20250531 04:27:13.456"/>
</kw>
<msg timestamp="20250531 04:27:13.457" level="INFO">${result} = {
  "volumeName": "17991-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-05-31T04:26:55.574Z",
  "modificationTime": "2025-05-...</msg>
<status status="PASS" starttime="20250531 04:27:10.493" endtime="20250531 04:27:13.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:27:13.457" endtime="20250531 04:27:13.457"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:27:13.457" endtime="20250531 04:27:13.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:13.461" level="INFO">Running command 'ozone sh key list o3:///17991-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:16.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:16.391" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250531 04:27:13.458" endtime="20250531 04:27:16.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:16.392" level="INFO">key1</msg>
<status status="PASS" starttime="20250531 04:27:16.392" endtime="20250531 04:27:16.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:16.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:16.392" endtime="20250531 04:27:16.393"/>
</kw>
<status status="PASS" starttime="20250531 04:27:13.458" endtime="20250531 04:27:16.393"/>
</kw>
<msg timestamp="20250531 04:27:16.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:13.458" endtime="20250531 04:27:16.393"/>
</kw>
<msg timestamp="20250531 04:27:16.393" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20250531 04:27:13.457" endtime="20250531 04:27:16.393"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:27:16.393" endtime="20250531 04:27:16.393"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:16.397" level="INFO">Running command 'ozone sh key rename o3:///17991-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:19.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:19.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:27:16.394" endtime="20250531 04:27:19.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:19.222" level="INFO"/>
<status status="PASS" starttime="20250531 04:27:19.222" endtime="20250531 04:27:19.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:19.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:19.223" endtime="20250531 04:27:19.223"/>
</kw>
<status status="PASS" starttime="20250531 04:27:16.394" endtime="20250531 04:27:19.223"/>
</kw>
<msg timestamp="20250531 04:27:19.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:16.394" endtime="20250531 04:27:19.223"/>
</kw>
<status status="PASS" starttime="20250531 04:27:16.393" endtime="20250531 04:27:19.223"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:19.227" level="INFO">Running command 'ozone sh key list o3:///17991-without-host/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:22.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:22.178" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20250531 04:27:19.224" endtime="20250531 04:27:22.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:22.178" level="INFO">key2</msg>
<status status="PASS" starttime="20250531 04:27:22.178" endtime="20250531 04:27:22.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:22.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:22.179" endtime="20250531 04:27:22.179"/>
</kw>
<status status="PASS" starttime="20250531 04:27:19.224" endtime="20250531 04:27:22.179"/>
</kw>
<msg timestamp="20250531 04:27:22.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:19.224" endtime="20250531 04:27:22.179"/>
</kw>
<msg timestamp="20250531 04:27:22.179" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20250531 04:27:19.223" endtime="20250531 04:27:22.179"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:27:22.179" endtime="20250531 04:27:22.180"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250531 04:27:22.181" level="INFO">${cmd} = key delete o3:///17991-without-host/bb1/key2' --execute 'key delete o3:///17991-without-host/bb1/key1_RATIS' --execute 'key delete o3:///17991-without-host/bb1/key1-copy</msg>
<status status="PASS" starttime="20250531 04:27:22.180" endtime="20250531 04:27:22.181"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:22.184" level="INFO">Running command 'ozone sh --execute 'key delete o3:///17991-without-host/bb1/key2' --execute 'key delete o3:///17991-without-host/bb1/key1_RATIS' --execute 'key delete o3:///17991-without-host/bb1/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:25.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:25.284" level="INFO">${output} = key delete o3:///17991-without-host/bb1/key2
Key moved inside Trash: /.Trash/hadoop/Current/key2 
key delete o3:///17991-without-host/bb1/key1_RATIS
Key moved inside Trash: /.Trash/hadoop/Current/key1...</msg>
<status status="PASS" starttime="20250531 04:27:22.181" endtime="20250531 04:27:25.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:25.285" level="INFO">key delete o3:///17991-without-host/bb1/key2
Key moved inside Trash: /.Trash/hadoop/Current/key2 
key delete o3:///17991-without-host/bb1/key1_RATIS
Key moved inside Trash: /.Trash/hadoop/Current/key1_RATIS 
key delete o3:///17991-without-host/bb1/key1-copy
Key moved inside Trash: /.Trash/hadoop/Current/key1-copy </msg>
<status status="PASS" starttime="20250531 04:27:25.285" endtime="20250531 04:27:25.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:25.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:25.286" endtime="20250531 04:27:25.286"/>
</kw>
<status status="PASS" starttime="20250531 04:27:22.181" endtime="20250531 04:27:25.286"/>
</kw>
<msg timestamp="20250531 04:27:25.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:22.181" endtime="20250531 04:27:25.286"/>
</kw>
<status status="PASS" starttime="20250531 04:27:22.180" endtime="20250531 04:27:25.286"/>
</kw>
<status status="PASS" starttime="20250531 04:26:52.769" endtime="20250531 04:27:25.286"/>
</kw>
<status status="PASS" starttime="20250531 04:26:52.769" endtime="20250531 04:27:25.287"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:25.290" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///17991-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:28.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:28.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:27:25.288" endtime="20250531 04:27:28.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:28.080" level="INFO"/>
<status status="PASS" starttime="20250531 04:27:28.079" endtime="20250531 04:27:28.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:28.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:28.080" endtime="20250531 04:27:28.080"/>
</kw>
<status status="PASS" starttime="20250531 04:27:25.287" endtime="20250531 04:27:28.081"/>
</kw>
<msg timestamp="20250531 04:27:28.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:25.287" endtime="20250531 04:27:28.081"/>
</kw>
<status status="PASS" starttime="20250531 04:27:25.287" endtime="20250531 04:27:28.081"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:28.084" level="INFO">Running command 'ozone sh volume info o3:///17991-without-host | jq -r '. | select(.name=="17991-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:31.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:31.183" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:27:28.082" endtime="20250531 04:27:31.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:31.184" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:27:31.184" endtime="20250531 04:27:31.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:31.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:31.184" endtime="20250531 04:27:31.184"/>
</kw>
<status status="PASS" starttime="20250531 04:27:28.082" endtime="20250531 04:27:31.185"/>
</kw>
<msg timestamp="20250531 04:27:31.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:28.082" endtime="20250531 04:27:31.185"/>
</kw>
<msg timestamp="20250531 04:27:31.185" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:27:28.081" endtime="20250531 04:27:31.185"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:27:31.185" endtime="20250531 04:27:31.185"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:31.189" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///17991-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:33.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:33.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:27:31.187" endtime="20250531 04:27:33.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:33.908" level="INFO"/>
<status status="PASS" starttime="20250531 04:27:33.908" endtime="20250531 04:27:33.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:33.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:33.908" endtime="20250531 04:27:33.909"/>
</kw>
<status status="PASS" starttime="20250531 04:27:31.186" endtime="20250531 04:27:33.909"/>
</kw>
<msg timestamp="20250531 04:27:33.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:31.186" endtime="20250531 04:27:33.909"/>
</kw>
<status status="PASS" starttime="20250531 04:27:31.185" endtime="20250531 04:27:33.909"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:33.912" level="INFO">Running command 'ozone sh volume info o3:///17991-without-host | jq -r '. | select(.name=="17991-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:37.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:37.085" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:27:33.910" endtime="20250531 04:27:37.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:37.086" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:27:37.085" endtime="20250531 04:27:37.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:37.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:37.086" endtime="20250531 04:27:37.086"/>
</kw>
<status status="PASS" starttime="20250531 04:27:33.910" endtime="20250531 04:27:37.086"/>
</kw>
<msg timestamp="20250531 04:27:37.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:33.910" endtime="20250531 04:27:37.087"/>
</kw>
<msg timestamp="20250531 04:27:37.087" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:27:33.909" endtime="20250531 04:27:37.087"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:27:37.087" endtime="20250531 04:27:37.087"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:37.091" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///17991-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:39.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:39.926" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:27:37.088" endtime="20250531 04:27:39.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:39.927" level="INFO"/>
<status status="PASS" starttime="20250531 04:27:39.927" endtime="20250531 04:27:39.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:39.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:39.928" endtime="20250531 04:27:39.928"/>
</kw>
<status status="PASS" starttime="20250531 04:27:37.088" endtime="20250531 04:27:39.928"/>
</kw>
<msg timestamp="20250531 04:27:39.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:37.088" endtime="20250531 04:27:39.928"/>
</kw>
<status status="PASS" starttime="20250531 04:27:37.087" endtime="20250531 04:27:39.928"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:39.932" level="INFO">Running command 'ozone sh bucket info o3:///17991-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:42.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:42.992" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:27:39.929" endtime="20250531 04:27:42.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:42.993" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:27:42.992" endtime="20250531 04:27:42.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:42.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:42.993" endtime="20250531 04:27:42.993"/>
</kw>
<status status="PASS" starttime="20250531 04:27:39.929" endtime="20250531 04:27:42.993"/>
</kw>
<msg timestamp="20250531 04:27:42.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:39.929" endtime="20250531 04:27:42.993"/>
</kw>
<msg timestamp="20250531 04:27:42.993" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:27:39.928" endtime="20250531 04:27:42.993"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:27:42.994" endtime="20250531 04:27:42.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:42.997" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///17991-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:45.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:45.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:27:42.995" endtime="20250531 04:27:45.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:45.884" level="INFO"/>
<status status="PASS" starttime="20250531 04:27:45.884" endtime="20250531 04:27:45.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:45.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:45.884" endtime="20250531 04:27:45.885"/>
</kw>
<status status="PASS" starttime="20250531 04:27:42.995" endtime="20250531 04:27:45.885"/>
</kw>
<msg timestamp="20250531 04:27:45.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:42.994" endtime="20250531 04:27:45.885"/>
</kw>
<status status="PASS" starttime="20250531 04:27:42.994" endtime="20250531 04:27:45.885"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:45.888" level="INFO">Running command 'ozone sh bucket info o3:///17991-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:48.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:48.931" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:27:45.886" endtime="20250531 04:27:48.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:48.932" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:27:48.931" endtime="20250531 04:27:48.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:48.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:48.932" endtime="20250531 04:27:48.932"/>
</kw>
<status status="PASS" starttime="20250531 04:27:45.886" endtime="20250531 04:27:48.932"/>
</kw>
<msg timestamp="20250531 04:27:48.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:45.886" endtime="20250531 04:27:48.933"/>
</kw>
<msg timestamp="20250531 04:27:48.933" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:27:45.885" endtime="20250531 04:27:48.933"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:27:48.933" endtime="20250531 04:27:48.933"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:48.936" level="INFO">Running command 'ozone sh bucket delete -r --yes o3:///17991-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:52.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:52.002" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250531 04:27:48.934" endtime="20250531 04:27:52.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:52.003" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250531 04:27:52.002" endtime="20250531 04:27:52.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:52.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:52.003" endtime="20250531 04:27:52.003"/>
</kw>
<status status="PASS" starttime="20250531 04:27:48.934" endtime="20250531 04:27:52.003"/>
</kw>
<msg timestamp="20250531 04:27:52.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:48.934" endtime="20250531 04:27:52.004"/>
</kw>
<status status="PASS" starttime="20250531 04:27:48.933" endtime="20250531 04:27:52.004"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:52.007" level="INFO">Running command 'ozone sh volume delete o3:///17991-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:54.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:54.739" level="INFO">${output} = Volume 17991-without-host is deleted</msg>
<status status="PASS" starttime="20250531 04:27:52.005" endtime="20250531 04:27:54.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:54.740" level="INFO">Volume 17991-without-host is deleted</msg>
<status status="PASS" starttime="20250531 04:27:54.739" endtime="20250531 04:27:54.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:54.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:54.740" endtime="20250531 04:27:54.740"/>
</kw>
<status status="PASS" starttime="20250531 04:27:52.004" endtime="20250531 04:27:54.741"/>
</kw>
<msg timestamp="20250531 04:27:54.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:52.004" endtime="20250531 04:27:54.741"/>
</kw>
<status status="PASS" starttime="20250531 04:27:52.004" endtime="20250531 04:27:54.741"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:54.744" level="INFO">Running command 'ozone sh volume create o3:///17991-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:27:57.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:27:57.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:27:54.742" endtime="20250531 04:27:57.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:27:57.499" level="INFO"/>
<status status="PASS" starttime="20250531 04:27:57.498" endtime="20250531 04:27:57.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:27:57.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:27:57.499" endtime="20250531 04:27:57.499"/>
</kw>
<status status="PASS" starttime="20250531 04:27:54.742" endtime="20250531 04:27:57.500"/>
</kw>
<msg timestamp="20250531 04:27:57.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:54.741" endtime="20250531 04:27:57.500"/>
</kw>
<status status="PASS" starttime="20250531 04:27:54.741" endtime="20250531 04:27:57.500"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:27:57.503" level="INFO">Running command 'ozone sh volume info o3:///17991-without-host &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250531 04:28:00.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:00.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:27:57.501" endtime="20250531 04:28:00.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:00.512" level="INFO"/>
<status status="PASS" starttime="20250531 04:28:00.512" endtime="20250531 04:28:00.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:00.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:00.512" endtime="20250531 04:28:00.513"/>
</kw>
<status status="PASS" starttime="20250531 04:27:57.501" endtime="20250531 04:28:00.513"/>
</kw>
<msg timestamp="20250531 04:28:00.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:27:57.500" endtime="20250531 04:28:00.513"/>
</kw>
<status status="PASS" starttime="20250531 04:27:57.500" endtime="20250531 04:28:00.513"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:00.516" level="INFO">Running command 'jq -r '. | select(.name=="17991-without-host") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:00.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:00.521" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:28:00.514" endtime="20250531 04:28:00.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:00.522" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:28:00.521" endtime="20250531 04:28:00.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:00.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:00.522" endtime="20250531 04:28:00.522"/>
</kw>
<status status="PASS" starttime="20250531 04:28:00.514" endtime="20250531 04:28:00.522"/>
</kw>
<msg timestamp="20250531 04:28:00.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:00.514" endtime="20250531 04:28:00.522"/>
</kw>
<msg timestamp="20250531 04:28:00.523" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:28:00.513" endtime="20250531 04:28:00.523"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:28:00.523" endtime="20250531 04:28:00.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:00.526" level="INFO">Running command 'jq -r '. | select(.name=="17991-without-host") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:00.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:00.530" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:28:00.524" endtime="20250531 04:28:00.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:00.531" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:28:00.530" endtime="20250531 04:28:00.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:00.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:00.531" endtime="20250531 04:28:00.531"/>
</kw>
<status status="PASS" starttime="20250531 04:28:00.524" endtime="20250531 04:28:00.531"/>
</kw>
<msg timestamp="20250531 04:28:00.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:00.523" endtime="20250531 04:28:00.531"/>
</kw>
<msg timestamp="20250531 04:28:00.531" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:28:00.523" endtime="20250531 04:28:00.531"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:28:00.532" endtime="20250531 04:28:00.532"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:00.535" level="INFO">Running command 'ozone sh bucket create o3:///17991-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:03.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:03.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:28:00.533" endtime="20250531 04:28:03.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:03.336" level="INFO"/>
<status status="PASS" starttime="20250531 04:28:03.335" endtime="20250531 04:28:03.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:03.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:03.336" endtime="20250531 04:28:03.336"/>
</kw>
<status status="PASS" starttime="20250531 04:28:00.532" endtime="20250531 04:28:03.337"/>
</kw>
<msg timestamp="20250531 04:28:03.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:00.532" endtime="20250531 04:28:03.337"/>
</kw>
<status status="PASS" starttime="20250531 04:28:00.532" endtime="20250531 04:28:03.337"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:03.340" level="INFO">Running command 'ozone sh bucket info o3:///17991-without-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250531 04:28:06.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:06.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:28:03.338" endtime="20250531 04:28:06.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:06.301" level="INFO"/>
<status status="PASS" starttime="20250531 04:28:06.301" endtime="20250531 04:28:06.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:06.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:06.301" endtime="20250531 04:28:06.302"/>
</kw>
<status status="PASS" starttime="20250531 04:28:03.338" endtime="20250531 04:28:06.302"/>
</kw>
<msg timestamp="20250531 04:28:06.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:03.337" endtime="20250531 04:28:06.302"/>
</kw>
<status status="PASS" starttime="20250531 04:28:03.337" endtime="20250531 04:28:06.302"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:06.305" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:06.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:06.310" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:28:06.303" endtime="20250531 04:28:06.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:06.310" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:28:06.310" endtime="20250531 04:28:06.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:06.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:06.311" endtime="20250531 04:28:06.311"/>
</kw>
<status status="PASS" starttime="20250531 04:28:06.303" endtime="20250531 04:28:06.311"/>
</kw>
<msg timestamp="20250531 04:28:06.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:06.303" endtime="20250531 04:28:06.311"/>
</kw>
<msg timestamp="20250531 04:28:06.311" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:28:06.302" endtime="20250531 04:28:06.311"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:28:06.311" endtime="20250531 04:28:06.312"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:06.314" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:06.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:06.319" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250531 04:28:06.313" endtime="20250531 04:28:06.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:06.319" level="INFO">-1</msg>
<status status="PASS" starttime="20250531 04:28:06.319" endtime="20250531 04:28:06.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:06.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:06.319" endtime="20250531 04:28:06.320"/>
</kw>
<status status="PASS" starttime="20250531 04:28:06.312" endtime="20250531 04:28:06.320"/>
</kw>
<msg timestamp="20250531 04:28:06.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:06.312" endtime="20250531 04:28:06.320"/>
</kw>
<msg timestamp="20250531 04:28:06.320" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250531 04:28:06.312" endtime="20250531 04:28:06.320"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:28:06.320" endtime="20250531 04:28:06.320"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:06.323" level="INFO">Running command 'ozone sh bucket delete o3:///17991-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:09.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:09.085" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250531 04:28:06.321" endtime="20250531 04:28:09.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:09.086" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250531 04:28:09.086" endtime="20250531 04:28:09.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:09.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:09.086" endtime="20250531 04:28:09.087"/>
</kw>
<status status="PASS" starttime="20250531 04:28:06.321" endtime="20250531 04:28:09.087"/>
</kw>
<msg timestamp="20250531 04:28:09.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:06.321" endtime="20250531 04:28:09.087"/>
</kw>
<status status="PASS" starttime="20250531 04:28:06.321" endtime="20250531 04:28:09.087"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:09.090" level="INFO">Running command 'ozone sh volume delete o3:///17991-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:11.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:11.859" level="INFO">${output} = Volume 17991-without-host is deleted</msg>
<status status="PASS" starttime="20250531 04:28:09.088" endtime="20250531 04:28:11.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:11.860" level="INFO">Volume 17991-without-host is deleted</msg>
<status status="PASS" starttime="20250531 04:28:11.859" endtime="20250531 04:28:11.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:11.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:11.860" endtime="20250531 04:28:11.861"/>
</kw>
<status status="PASS" starttime="20250531 04:28:09.088" endtime="20250531 04:28:11.861"/>
</kw>
<msg timestamp="20250531 04:28:11.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:09.088" endtime="20250531 04:28:11.861"/>
</kw>
<status status="PASS" starttime="20250531 04:28:09.087" endtime="20250531 04:28:11.861"/>
</kw>
<status status="PASS" starttime="20250531 04:26:23.887" endtime="20250531 04:28:11.861"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250531 04:26:23.886" endtime="20250531 04:28:11.861"/>
</test>
<test id="s1-s4-s5-t9" name="RpcClient Delete key" line="51">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:28:11.862" endtime="20250531 04:28:11.863"/>
</kw>
<kw name="Test Delete key with Trash" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-del</arg>
<kw name="Ozone Shell Batch" library="shell">
<arg>volume create ${protocol}${server}/${volume}</arg>
<arg>bucket create ${protocol}${server}/${volume}/bfso --layout FILE_SYSTEM_OPTIMIZED</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/bfso/key3 /opt/hadoop/NOTICE.txt</arg>
<arg>key delete ${protocol}${server}/${volume}/bfso/key3</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250531 04:28:11.864" level="INFO">${cmd} = volume create o3://om:9862/17991-with-del' --execute 'bucket create o3://om:9862/17991-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED' --execute 'key put -t RATIS o3://om:9862/17991-with-del/bfso/key3 /...</msg>
<status status="PASS" starttime="20250531 04:28:11.863" endtime="20250531 04:28:11.864"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:11.866" level="INFO">Running command 'ozone sh --execute 'volume create o3://om:9862/17991-with-del' --execute 'bucket create o3://om:9862/17991-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED' --execute 'key put -t RATIS o3://om:9862/17991-with-del/bfso/key3 /opt/hadoop/NOTICE.txt' --execute 'key delete o3://om:9862/17991-with-del/bfso/key3' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:16.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:16.443" level="INFO">${output} = volume create o3://om:9862/17991-with-del
bucket create o3://om:9862/17991-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED
key put -t RATIS o3://om:9862/17991-with-del/bfso/key3 /opt/hadoop/NOTICE.txt
ke...</msg>
<status status="PASS" starttime="20250531 04:28:11.864" endtime="20250531 04:28:16.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:16.444" level="INFO">volume create o3://om:9862/17991-with-del
bucket create o3://om:9862/17991-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED
key put -t RATIS o3://om:9862/17991-with-del/bfso/key3 /opt/hadoop/NOTICE.txt
key delete o3://om:9862/17991-with-del/bfso/key3
Key moved inside Trash: /.Trash/hadoop/Current/key3 </msg>
<status status="PASS" starttime="20250531 04:28:16.443" endtime="20250531 04:28:16.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:16.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:16.444" endtime="20250531 04:28:16.444"/>
</kw>
<status status="PASS" starttime="20250531 04:28:11.864" endtime="20250531 04:28:16.444"/>
</kw>
<msg timestamp="20250531 04:28:16.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:11.864" endtime="20250531 04:28:16.445"/>
</kw>
<status status="PASS" starttime="20250531 04:28:11.863" endtime="20250531 04:28:16.445"/>
</kw>
<kw name="Execute" library="os">
<var>${fsokey}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bfso</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:16.448" level="INFO">Running command 'ozone sh key list o3://om:9862/17991-with-del/bfso 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:19.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:19.598" level="INFO">${output} = [ {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:28:16.030Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20250531 04:28:16.446" endtime="20250531 04:28:19.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:19.599" level="INFO">[ {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:28:16.030Z",
  "modificationTime" : "2025-05-31T04:28:16.030Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/hadoop/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:28:16.030Z",
  "modificationTime" : "2025-05-31T04:28:16.030Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/hadoop/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:28:16.030Z",
  "modificationTime" : "2025-05-31T04:28:16.037Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/hadoop/Current/key3",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-05-31T04:28:14.814Z",
  "modificationTime" : "2025-05-31T04:28:15.936Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250531 04:28:19.598" endtime="20250531 04:28:19.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:19.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:19.599" endtime="20250531 04:28:19.599"/>
</kw>
<status status="PASS" starttime="20250531 04:28:16.445" endtime="20250531 04:28:19.599"/>
</kw>
<msg timestamp="20250531 04:28:19.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:16.445" endtime="20250531 04:28:19.600"/>
</kw>
<msg timestamp="20250531 04:28:19.600" level="INFO">${fsokey} = [ {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:28:16.030Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20250531 04:28:16.445" endtime="20250531 04:28:19.600"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${fsokey}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:19.603" level="INFO">Running command 'echo '[ {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:28:16.030Z",
  "modificationTime" : "2025-05-31T04:28:16.030Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/hadoop/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:28:16.030Z",
  "modificationTime" : "2025-05-31T04:28:16.030Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/hadoop/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:28:16.030Z",
  "modificationTime" : "2025-05-31T04:28:16.037Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/hadoop/Current/key3",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-05-31T04:28:14.814Z",
  "modificationTime" : "2025-05-31T04:28:15.936Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash")) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:19.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:19.608" level="INFO">${output} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/key3</msg>
<status status="PASS" starttime="20250531 04:28:19.601" endtime="20250531 04:28:19.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:19.609" level="INFO">.Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/key3</msg>
<status status="PASS" starttime="20250531 04:28:19.608" endtime="20250531 04:28:19.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:19.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:19.609" endtime="20250531 04:28:19.609"/>
</kw>
<status status="PASS" starttime="20250531 04:28:19.600" endtime="20250531 04:28:19.609"/>
</kw>
<msg timestamp="20250531 04:28:19.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:19.600" endtime="20250531 04:28:19.609"/>
</kw>
<msg timestamp="20250531 04:28:19.610" level="INFO">${result} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/key3</msg>
<status status="PASS" starttime="20250531 04:28:19.600" endtime="20250531 04:28:19.610"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250531 04:28:19.610" endtime="20250531 04:28:19.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:28:19.610" endtime="20250531 04:28:19.610"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${fsokey}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:19.613" level="INFO">Running command 'echo '[ {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:28:16.030Z",
  "modificationTime" : "2025-05-31T04:28:16.030Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/hadoop/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:28:16.030Z",
  "modificationTime" : "2025-05-31T04:28:16.030Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/hadoop/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-05-31T04:28:16.030Z",
  "modificationTime" : "2025-05-31T04:28:16.037Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "17991-with-del",
  "bucketName" : "bfso",
  "name" : ".Trash/hadoop/Current/key3",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-05-31T04:28:14.814Z",
  "modificationTime" : "2025-05-31T04:28:15.936Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:19.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:19.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:28:19.611" endtime="20250531 04:28:19.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:19.619" level="INFO"/>
<status status="PASS" starttime="20250531 04:28:19.618" endtime="20250531 04:28:19.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:19.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:19.619" endtime="20250531 04:28:19.619"/>
</kw>
<status status="PASS" starttime="20250531 04:28:19.611" endtime="20250531 04:28:19.619"/>
</kw>
<msg timestamp="20250531 04:28:19.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:19.611" endtime="20250531 04:28:19.619"/>
</kw>
<msg timestamp="20250531 04:28:19.619" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:28:19.610" endtime="20250531 04:28:19.619"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key3</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:28:19.620" endtime="20250531 04:28:19.620"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket create ${protocol}${server}/${volume}/obsbkt --layout OBJECT_STORE</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/obsbkt/key2 /opt/hadoop/NOTICE.txt</arg>
<arg>key delete ${protocol}${server}/${volume}/obsbkt/key2</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250531 04:28:19.621" level="INFO">${cmd} = bucket create o3://om:9862/17991-with-del/obsbkt --layout OBJECT_STORE' --execute 'key put -t RATIS o3://om:9862/17991-with-del/obsbkt/key2 /opt/hadoop/NOTICE.txt' --execute 'key delete o3://om:9862/1...</msg>
<status status="PASS" starttime="20250531 04:28:19.620" endtime="20250531 04:28:19.621"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:19.623" level="INFO">Running command 'ozone sh --execute 'bucket create o3://om:9862/17991-with-del/obsbkt --layout OBJECT_STORE' --execute 'key put -t RATIS o3://om:9862/17991-with-del/obsbkt/key2 /opt/hadoop/NOTICE.txt' --execute 'key delete o3://om:9862/17991-with-del/obsbkt/key2' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:24.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:24.339" level="INFO">${output} = bucket create o3://om:9862/17991-with-del/obsbkt --layout OBJECT_STORE
key put -t RATIS o3://om:9862/17991-with-del/obsbkt/key2 /opt/hadoop/NOTICE.txt
key delete o3://om:9862/17991-with-del/obsbkt/key...</msg>
<status status="PASS" starttime="20250531 04:28:19.621" endtime="20250531 04:28:24.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:24.340" level="INFO">bucket create o3://om:9862/17991-with-del/obsbkt --layout OBJECT_STORE
key put -t RATIS o3://om:9862/17991-with-del/obsbkt/key2 /opt/hadoop/NOTICE.txt
key delete o3://om:9862/17991-with-del/obsbkt/key2</msg>
<status status="PASS" starttime="20250531 04:28:24.339" endtime="20250531 04:28:24.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:24.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:24.340" endtime="20250531 04:28:24.340"/>
</kw>
<status status="PASS" starttime="20250531 04:28:19.621" endtime="20250531 04:28:24.341"/>
</kw>
<msg timestamp="20250531 04:28:24.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:19.621" endtime="20250531 04:28:24.341"/>
</kw>
<status status="PASS" starttime="20250531 04:28:19.620" endtime="20250531 04:28:24.341"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/obsbkt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:24.344" level="INFO">Running command 'ozone sh key list o3://om:9862/17991-with-del/obsbkt 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:27.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:27.491" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20250531 04:28:24.342" endtime="20250531 04:28:27.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:27.492" level="INFO">[ ]</msg>
<status status="PASS" starttime="20250531 04:28:27.492" endtime="20250531 04:28:27.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:27.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:27.492" endtime="20250531 04:28:27.493"/>
</kw>
<status status="PASS" starttime="20250531 04:28:24.342" endtime="20250531 04:28:27.493"/>
</kw>
<msg timestamp="20250531 04:28:27.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:24.341" endtime="20250531 04:28:27.493"/>
</kw>
<msg timestamp="20250531 04:28:27.493" level="INFO">${result} = [ ]</msg>
<status status="PASS" starttime="20250531 04:28:24.341" endtime="20250531 04:28:27.493"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:28:27.493" endtime="20250531 04:28:27.493"/>
</kw>
<status status="PASS" starttime="20250531 04:28:11.863" endtime="20250531 04:28:27.493"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250531 04:28:11.862" endtime="20250531 04:28:27.494"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20250531 04:21:53.867" endtime="20250531 04:28:27.494"/>
</suite>
<suite id="s1-s4-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s4-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:28:27.502" endtime="20250531 04:28:27.502"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:28:27.503" level="INFO">${random} = 1PHSu0Fy4y</msg>
<status status="PASS" starttime="20250531 04:28:27.503" endtime="20250531 04:28:27.503"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:27.506" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 1PHSu0Fy4y --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:32.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:32.630" level="INFO">${output} = 2025-05-31 04:28:28,798 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:28:28,953 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:28:27.504" endtime="20250531 04:28:32.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:32.631" level="INFO">2025-05-31 04:28:28,798 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:28:28,953 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-05-31 04:28:28,954 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-05-31 04:28:29,145 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 1PHSu0Fy4y and number-of-tests 1
2025-05-31 04:28:29,209 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-05-31 04:28:30,210 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-05-31 04:28:30,879 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-05-31 04:28:31,211 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-05-31 04:28:32,211 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-05-31 04:28:32,234 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=924.176578, max=924.176578, mean=924.176578, stddev=0.0, median=924.176578, p75=924.176578, p95=924.176578, p98=924.176578, p99=924.176578, p999=924.176578, mean_rate=0.666991378969012, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-05-31 04:28:32,234 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-05-31 04:28:32,234 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-05-31 04:28:32,234 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250531 04:28:32.631" endtime="20250531 04:28:32.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:32.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:32.631" endtime="20250531 04:28:32.632"/>
</kw>
<status status="PASS" starttime="20250531 04:28:27.504" endtime="20250531 04:28:32.632"/>
</kw>
<msg timestamp="20250531 04:28:32.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:27.504" endtime="20250531 04:28:32.632"/>
</kw>
<msg timestamp="20250531 04:28:32.632" level="INFO">${result} = 2025-05-31 04:28:28,798 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:28:28,953 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:28:27.503" endtime="20250531 04:28:32.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:28:32.632" endtime="20250531 04:28:32.632"/>
</kw>
<status status="PASS" starttime="20250531 04:28:27.503" endtime="20250531 04:28:32.633"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:32.637" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 1PHSu0Fy4y  2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:37.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:37.710" level="INFO">${output} = 2025-05-31 04:28:33,928 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:28:34,083 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:28:32.635" endtime="20250531 04:28:37.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:37.711" level="INFO">2025-05-31 04:28:33,928 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:28:34,083 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-05-31 04:28:34,083 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-05-31 04:28:34,244 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 1PHSu0Fy4y and number-of-tests 1
2025-05-31 04:28:34,306 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-05-31 04:28:35,307 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-05-31 04:28:35,836 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-05-31 04:28:36,314 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-05-31 04:28:37,314 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-05-31 04:28:37,330 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=14.090786, max=14.090786, mean=14.090786, stddev=0.0, median=14.090786, p75=14.090786, p95=14.090786, p98=14.090786, p99=14.090786, p999=14.090786, mean_rate=1.161978241137078, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-05-31 04:28:37,330 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-05-31 04:28:37,330 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-05-31 04:28:37,331 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250531 04:28:37.711" endtime="20250531 04:28:37.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:37.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:37.712" endtime="20250531 04:28:37.712"/>
</kw>
<status status="PASS" starttime="20250531 04:28:32.634" endtime="20250531 04:28:37.712"/>
</kw>
<msg timestamp="20250531 04:28:37.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:32.634" endtime="20250531 04:28:37.712"/>
</kw>
<msg timestamp="20250531 04:28:37.712" level="INFO">${result} = 2025-05-31 04:28:33,928 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:28:34,083 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:28:32.634" endtime="20250531 04:28:37.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:28:37.712" endtime="20250531 04:28:37.713"/>
</kw>
<status status="PASS" starttime="20250531 04:28:32.633" endtime="20250531 04:28:37.713"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:28:27.502" endtime="20250531 04:28:37.713"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20250531 04:28:27.496" endtime="20250531 04:28:37.713"/>
</suite>
<status status="PASS" starttime="20250531 04:16:17.808" endtime="20250531 04:28:37.716"/>
</suite>
<suite id="s1-s5" name="Gdpr" source="/opt/hadoop/smoketest/gdpr">
<suite id="s1-s5-s1" name="Gdpr" source="/opt/hadoop/smoketest/gdpr/gdpr.robot">
<kw name="Generate volume" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:28:38.263" level="INFO">${random} = ruiig</msg>
<status status="PASS" starttime="20250531 04:28:38.262" endtime="20250531 04:28:38.263"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250531 04:28:38.263" level="INFO">${volume} = ruiig</msg>
<status status="PASS" starttime="20250531 04:28:38.263" endtime="20250531 04:28:38.263"/>
</kw>
<status status="PASS" starttime="20250531 04:28:38.262" endtime="20250531 04:28:38.263"/>
</kw>
<test id="s1-s5-s1-t1" name="Test GDPR disabled" line="34">
<kw name="Test GDPR(disabled) without explicit options">
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:38.267" level="INFO">Running command 'ozone sh volume create /ruiig --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:40.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:40.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:28:38.265" endtime="20250531 04:28:40.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:40.940" level="INFO"/>
<status status="PASS" starttime="20250531 04:28:40.939" endtime="20250531 04:28:40.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:40.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:40.940" endtime="20250531 04:28:40.940"/>
</kw>
<status status="PASS" starttime="20250531 04:28:38.264" endtime="20250531 04:28:40.940"/>
</kw>
<msg timestamp="20250531 04:28:40.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:38.264" endtime="20250531 04:28:40.940"/>
</kw>
<status status="PASS" starttime="20250531 04:28:38.264" endtime="20250531 04:28:40.940"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/mybucket1 --space-quota 1TB</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:40.944" level="INFO">Running command 'ozone sh bucket create /ruiig/mybucket1 --space-quota 1TB 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:43.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:43.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:28:40.941" endtime="20250531 04:28:43.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:43.767" level="INFO"/>
<status status="PASS" starttime="20250531 04:28:43.766" endtime="20250531 04:28:43.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:43.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:43.767" endtime="20250531 04:28:43.767"/>
</kw>
<status status="PASS" starttime="20250531 04:28:40.941" endtime="20250531 04:28:43.768"/>
</kw>
<msg timestamp="20250531 04:28:43.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:40.941" endtime="20250531 04:28:43.768"/>
</kw>
<status status="PASS" starttime="20250531 04:28:40.941" endtime="20250531 04:28:43.768"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/mybucket1 | jq -r '. | select(.name=="mybucket1") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:43.771" level="INFO">Running command 'ozone sh bucket info /ruiig/mybucket1 | jq -r '. | select(.name=="mybucket1") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:46.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:46.769" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20250531 04:28:43.769" endtime="20250531 04:28:46.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:46.769" level="INFO">null</msg>
<status status="PASS" starttime="20250531 04:28:46.769" endtime="20250531 04:28:46.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:46.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:46.770" endtime="20250531 04:28:46.770"/>
</kw>
<status status="PASS" starttime="20250531 04:28:43.769" endtime="20250531 04:28:46.770"/>
</kw>
<msg timestamp="20250531 04:28:46.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:43.768" endtime="20250531 04:28:46.770"/>
</kw>
<msg timestamp="20250531 04:28:46.770" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20250531 04:28:43.768" endtime="20250531 04:28:46.770"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:28:46.770" endtime="20250531 04:28:46.771"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/mybucket1/mykey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:46.774" level="INFO">Running command 'ozone sh key put /ruiig/mybucket1/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:51.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:51.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:28:46.772" endtime="20250531 04:28:51.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:51.149" level="INFO"/>
<status status="PASS" starttime="20250531 04:28:51.148" endtime="20250531 04:28:51.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:51.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:51.149" endtime="20250531 04:28:51.149"/>
</kw>
<status status="PASS" starttime="20250531 04:28:46.771" endtime="20250531 04:28:51.149"/>
</kw>
<msg timestamp="20250531 04:28:51.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:46.771" endtime="20250531 04:28:51.150"/>
</kw>
<status status="PASS" starttime="20250531 04:28:46.771" endtime="20250531 04:28:51.150"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:51.153" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:51.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:51.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:28:51.151" endtime="20250531 04:28:51.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:51.157" level="INFO"/>
<status status="PASS" starttime="20250531 04:28:51.157" endtime="20250531 04:28:51.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:51.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:51.157" endtime="20250531 04:28:51.157"/>
</kw>
<status status="PASS" starttime="20250531 04:28:51.150" endtime="20250531 04:28:51.158"/>
</kw>
<msg timestamp="20250531 04:28:51.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:51.150" endtime="20250531 04:28:51.158"/>
</kw>
<status status="PASS" starttime="20250531 04:28:51.150" endtime="20250531 04:28:51.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket1/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:51.161" level="INFO">Running command 'ozone sh key info /ruiig/mybucket1/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:54.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:54.453" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20250531 04:28:51.159" endtime="20250531 04:28:54.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:54.454" level="INFO">null</msg>
<status status="PASS" starttime="20250531 04:28:54.453" endtime="20250531 04:28:54.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:54.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:54.454" endtime="20250531 04:28:54.454"/>
</kw>
<status status="PASS" starttime="20250531 04:28:51.158" endtime="20250531 04:28:54.454"/>
</kw>
<msg timestamp="20250531 04:28:54.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:51.158" endtime="20250531 04:28:54.454"/>
</kw>
<msg timestamp="20250531 04:28:54.455" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20250531 04:28:51.158" endtime="20250531 04:28:54.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:28:54.455" endtime="20250531 04:28:54.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket1/mykey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:54.458" level="INFO">Running command 'ozone sh key delete /ruiig/mybucket1/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:28:57.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:28:57.311" level="INFO">${output} = Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20250531 04:28:54.456" endtime="20250531 04:28:57.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:28:57.312" level="INFO">Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20250531 04:28:57.311" endtime="20250531 04:28:57.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:28:57.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:28:57.312" endtime="20250531 04:28:57.312"/>
</kw>
<status status="PASS" starttime="20250531 04:28:54.456" endtime="20250531 04:28:57.313"/>
</kw>
<msg timestamp="20250531 04:28:57.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:54.455" endtime="20250531 04:28:57.313"/>
</kw>
<status status="PASS" starttime="20250531 04:28:54.455" endtime="20250531 04:28:57.313"/>
</kw>
<status status="PASS" starttime="20250531 04:28:38.264" endtime="20250531 04:28:57.313"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:28:38.263" endtime="20250531 04:28:57.313"/>
</test>
<test id="s1-s5-s1-t2" name="Test GDPR --enforcegdpr=true" line="37">
<kw name="Test GDPR with --enforcegdpr=true">
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --enforcegdpr=true /${volume}/mybucket2 --space-quota 1TB</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:28:57.317" level="INFO">Running command 'ozone sh bucket create --enforcegdpr=true /ruiig/mybucket2 --space-quota 1TB 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:00.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:00.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:28:57.315" endtime="20250531 04:29:00.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:00.103" level="INFO"/>
<status status="PASS" starttime="20250531 04:29:00.103" endtime="20250531 04:29:00.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:00.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:00.103" endtime="20250531 04:29:00.104"/>
</kw>
<status status="PASS" starttime="20250531 04:28:57.315" endtime="20250531 04:29:00.104"/>
</kw>
<msg timestamp="20250531 04:29:00.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:28:57.315" endtime="20250531 04:29:00.104"/>
</kw>
<status status="PASS" starttime="20250531 04:28:57.314" endtime="20250531 04:29:00.104"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/mybucket2 | jq -r '. | select(.name=="mybucket2") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:00.107" level="INFO">Running command 'ozone sh bucket info /ruiig/mybucket2 | jq -r '. | select(.name=="mybucket2") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:03.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:03.101" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250531 04:29:00.105" endtime="20250531 04:29:03.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:03.102" level="INFO">true</msg>
<status status="PASS" starttime="20250531 04:29:03.102" endtime="20250531 04:29:03.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:03.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:03.102" endtime="20250531 04:29:03.103"/>
</kw>
<status status="PASS" starttime="20250531 04:29:00.105" endtime="20250531 04:29:03.103"/>
</kw>
<msg timestamp="20250531 04:29:03.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:00.105" endtime="20250531 04:29:03.103"/>
</kw>
<msg timestamp="20250531 04:29:03.103" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20250531 04:29:00.104" endtime="20250531 04:29:03.103"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:29:03.103" endtime="20250531 04:29:03.104"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/mybucket2/mykey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:03.107" level="INFO">Running command 'ozone sh key put /ruiig/mybucket2/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:07.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:07.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:29:03.105" endtime="20250531 04:29:07.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:07.271" level="INFO"/>
<status status="PASS" starttime="20250531 04:29:07.270" endtime="20250531 04:29:07.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:07.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:07.271" endtime="20250531 04:29:07.271"/>
</kw>
<status status="PASS" starttime="20250531 04:29:03.104" endtime="20250531 04:29:07.271"/>
</kw>
<msg timestamp="20250531 04:29:07.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:03.104" endtime="20250531 04:29:07.271"/>
</kw>
<status status="PASS" starttime="20250531 04:29:03.104" endtime="20250531 04:29:07.272"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:07.275" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:07.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:07.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:29:07.273" endtime="20250531 04:29:07.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:07.279" level="INFO"/>
<status status="PASS" starttime="20250531 04:29:07.279" endtime="20250531 04:29:07.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:07.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:07.279" endtime="20250531 04:29:07.280"/>
</kw>
<status status="PASS" starttime="20250531 04:29:07.272" endtime="20250531 04:29:07.280"/>
</kw>
<msg timestamp="20250531 04:29:07.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:07.272" endtime="20250531 04:29:07.280"/>
</kw>
<status status="PASS" starttime="20250531 04:29:07.272" endtime="20250531 04:29:07.280"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket2/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:07.283" level="INFO">Running command 'ozone sh key info /ruiig/mybucket2/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:10.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:10.402" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250531 04:29:07.281" endtime="20250531 04:29:10.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:10.403" level="INFO">true</msg>
<status status="PASS" starttime="20250531 04:29:10.403" endtime="20250531 04:29:10.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:10.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:10.403" endtime="20250531 04:29:10.404"/>
</kw>
<status status="PASS" starttime="20250531 04:29:07.281" endtime="20250531 04:29:10.404"/>
</kw>
<msg timestamp="20250531 04:29:10.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:07.281" endtime="20250531 04:29:10.404"/>
</kw>
<msg timestamp="20250531 04:29:10.404" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20250531 04:29:07.280" endtime="20250531 04:29:10.404"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:29:10.404" endtime="20250531 04:29:10.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket2/mykey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:10.407" level="INFO">Running command 'ozone sh key delete /ruiig/mybucket2/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:13.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:13.444" level="INFO">${output} = Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20250531 04:29:10.405" endtime="20250531 04:29:13.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:13.445" level="INFO">Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20250531 04:29:13.444" endtime="20250531 04:29:13.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:13.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:13.445" endtime="20250531 04:29:13.445"/>
</kw>
<status status="PASS" starttime="20250531 04:29:10.405" endtime="20250531 04:29:13.445"/>
</kw>
<msg timestamp="20250531 04:29:13.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:10.405" endtime="20250531 04:29:13.446"/>
</kw>
<status status="PASS" starttime="20250531 04:29:10.404" endtime="20250531 04:29:13.446"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put --stream /${volume}/mybucket2/myStreamKey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:13.449" level="INFO">Running command 'ozone sh key put --stream /ruiig/mybucket2/myStreamKey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:20.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:20.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:29:13.447" endtime="20250531 04:29:20.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:20.660" level="INFO"/>
<status status="PASS" starttime="20250531 04:29:20.660" endtime="20250531 04:29:20.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:20.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:20.661" endtime="20250531 04:29:20.661"/>
</kw>
<status status="PASS" starttime="20250531 04:29:13.446" endtime="20250531 04:29:20.661"/>
</kw>
<msg timestamp="20250531 04:29:20.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:13.446" endtime="20250531 04:29:20.661"/>
</kw>
<status status="PASS" starttime="20250531 04:29:13.446" endtime="20250531 04:29:20.661"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:20.665" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:20.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:20.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:29:20.662" endtime="20250531 04:29:20.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:20.669" level="INFO"/>
<status status="PASS" starttime="20250531 04:29:20.668" endtime="20250531 04:29:20.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:20.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:20.669" endtime="20250531 04:29:20.669"/>
</kw>
<status status="PASS" starttime="20250531 04:29:20.662" endtime="20250531 04:29:20.669"/>
</kw>
<msg timestamp="20250531 04:29:20.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:20.662" endtime="20250531 04:29:20.669"/>
</kw>
<status status="PASS" starttime="20250531 04:29:20.661" endtime="20250531 04:29:20.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket2/myStreamKey | jq -r '. | select(.name=="myStreamKey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:20.672" level="INFO">Running command 'ozone sh key info /ruiig/mybucket2/myStreamKey | jq -r '. | select(.name=="myStreamKey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:23.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:23.855" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250531 04:29:20.670" endtime="20250531 04:29:23.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:23.856" level="INFO">true</msg>
<status status="PASS" starttime="20250531 04:29:23.856" endtime="20250531 04:29:23.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:23.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:23.856" endtime="20250531 04:29:23.857"/>
</kw>
<status status="PASS" starttime="20250531 04:29:20.670" endtime="20250531 04:29:23.857"/>
</kw>
<msg timestamp="20250531 04:29:23.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:20.670" endtime="20250531 04:29:23.857"/>
</kw>
<msg timestamp="20250531 04:29:23.857" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20250531 04:29:20.669" endtime="20250531 04:29:23.857"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:29:23.857" endtime="20250531 04:29:23.857"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket2/myStreamKey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:23.860" level="INFO">Running command 'ozone sh key delete /ruiig/mybucket2/myStreamKey 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:26.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:26.762" level="INFO">${output} = Key moved inside Trash: /.Trash/hadoop/Current/myStreamKey </msg>
<status status="PASS" starttime="20250531 04:29:23.858" endtime="20250531 04:29:26.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:26.762" level="INFO">Key moved inside Trash: /.Trash/hadoop/Current/myStreamKey </msg>
<status status="PASS" starttime="20250531 04:29:26.762" endtime="20250531 04:29:26.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:26.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:26.763" endtime="20250531 04:29:26.763"/>
</kw>
<status status="PASS" starttime="20250531 04:29:23.858" endtime="20250531 04:29:26.763"/>
</kw>
<msg timestamp="20250531 04:29:26.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:23.858" endtime="20250531 04:29:26.763"/>
</kw>
<status status="PASS" starttime="20250531 04:29:23.857" endtime="20250531 04:29:26.763"/>
</kw>
<status status="PASS" starttime="20250531 04:28:57.314" endtime="20250531 04:29:26.763"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:28:57.313" endtime="20250531 04:29:26.764"/>
</test>
<test id="s1-s5-s1-t3" name="Test GDPR -g=true" line="40">
<kw name="Test GDPR with -g=true">
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -g=true /${volume}/mybucket3 --space-quota 1TB</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:26.768" level="INFO">Running command 'ozone sh bucket create -g=true /ruiig/mybucket3 --space-quota 1TB 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:29.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:29.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:29:26.765" endtime="20250531 04:29:29.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:29.551" level="INFO"/>
<status status="PASS" starttime="20250531 04:29:29.551" endtime="20250531 04:29:29.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:29.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:29.551" endtime="20250531 04:29:29.552"/>
</kw>
<status status="PASS" starttime="20250531 04:29:26.765" endtime="20250531 04:29:29.552"/>
</kw>
<msg timestamp="20250531 04:29:29.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:26.765" endtime="20250531 04:29:29.552"/>
</kw>
<status status="PASS" starttime="20250531 04:29:26.765" endtime="20250531 04:29:29.552"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/mybucket3 | jq -r '. | select(.name=="mybucket3") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:29.555" level="INFO">Running command 'ozone sh bucket info /ruiig/mybucket3 | jq -r '. | select(.name=="mybucket3") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:32.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:32.749" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250531 04:29:29.553" endtime="20250531 04:29:32.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:32.750" level="INFO">true</msg>
<status status="PASS" starttime="20250531 04:29:32.750" endtime="20250531 04:29:32.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:32.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:32.751" endtime="20250531 04:29:32.751"/>
</kw>
<status status="PASS" starttime="20250531 04:29:29.553" endtime="20250531 04:29:32.751"/>
</kw>
<msg timestamp="20250531 04:29:32.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:29.552" endtime="20250531 04:29:32.751"/>
</kw>
<msg timestamp="20250531 04:29:32.751" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20250531 04:29:29.552" endtime="20250531 04:29:32.751"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:29:32.752" endtime="20250531 04:29:32.752"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/mybucket3/mykey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:32.755" level="INFO">Running command 'ozone sh key put /ruiig/mybucket3/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:37.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:37.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:29:32.753" endtime="20250531 04:29:37.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:37.076" level="INFO"/>
<status status="PASS" starttime="20250531 04:29:37.076" endtime="20250531 04:29:37.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:37.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:37.076" endtime="20250531 04:29:37.077"/>
</kw>
<status status="PASS" starttime="20250531 04:29:32.753" endtime="20250531 04:29:37.077"/>
</kw>
<msg timestamp="20250531 04:29:37.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:32.752" endtime="20250531 04:29:37.077"/>
</kw>
<status status="PASS" starttime="20250531 04:29:32.752" endtime="20250531 04:29:37.077"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:37.080" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:37.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:37.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:29:37.078" endtime="20250531 04:29:37.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:37.084" level="INFO"/>
<status status="PASS" starttime="20250531 04:29:37.083" endtime="20250531 04:29:37.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:37.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:37.084" endtime="20250531 04:29:37.084"/>
</kw>
<status status="PASS" starttime="20250531 04:29:37.077" endtime="20250531 04:29:37.084"/>
</kw>
<msg timestamp="20250531 04:29:37.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:37.077" endtime="20250531 04:29:37.084"/>
</kw>
<status status="PASS" starttime="20250531 04:29:37.077" endtime="20250531 04:29:37.085"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket3/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:37.087" level="INFO">Running command 'ozone sh key info /ruiig/mybucket3/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:40.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:40.223" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250531 04:29:37.085" endtime="20250531 04:29:40.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:40.224" level="INFO">true</msg>
<status status="PASS" starttime="20250531 04:29:40.223" endtime="20250531 04:29:40.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:40.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:40.224" endtime="20250531 04:29:40.224"/>
</kw>
<status status="PASS" starttime="20250531 04:29:37.085" endtime="20250531 04:29:40.224"/>
</kw>
<msg timestamp="20250531 04:29:40.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:37.085" endtime="20250531 04:29:40.224"/>
</kw>
<msg timestamp="20250531 04:29:40.225" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20250531 04:29:37.085" endtime="20250531 04:29:40.225"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:29:40.225" endtime="20250531 04:29:40.225"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket3/mykey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:40.228" level="INFO">Running command 'ozone sh key delete /ruiig/mybucket3/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:43.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:43.115" level="INFO">${output} = Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20250531 04:29:40.226" endtime="20250531 04:29:43.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:43.116" level="INFO">Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20250531 04:29:43.115" endtime="20250531 04:29:43.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:43.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:43.116" endtime="20250531 04:29:43.117"/>
</kw>
<status status="PASS" starttime="20250531 04:29:40.226" endtime="20250531 04:29:43.117"/>
</kw>
<msg timestamp="20250531 04:29:43.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:40.225" endtime="20250531 04:29:43.117"/>
</kw>
<status status="PASS" starttime="20250531 04:29:40.225" endtime="20250531 04:29:43.117"/>
</kw>
<status status="PASS" starttime="20250531 04:29:26.764" endtime="20250531 04:29:43.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:29:26.764" endtime="20250531 04:29:43.117"/>
</test>
<test id="s1-s5-s1-t4" name="Test GDPR -g=false" line="43">
<kw name="Test GDPR with -g=false">
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/mybucket4 --space-quota 1TB</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:43.122" level="INFO">Running command 'ozone sh bucket create /ruiig/mybucket4 --space-quota 1TB 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:45.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:45.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:29:43.119" endtime="20250531 04:29:45.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:45.934" level="INFO"/>
<status status="PASS" starttime="20250531 04:29:45.933" endtime="20250531 04:29:45.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:45.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:45.934" endtime="20250531 04:29:45.934"/>
</kw>
<status status="PASS" starttime="20250531 04:29:43.119" endtime="20250531 04:29:45.935"/>
</kw>
<msg timestamp="20250531 04:29:45.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:43.119" endtime="20250531 04:29:45.935"/>
</kw>
<status status="PASS" starttime="20250531 04:29:43.118" endtime="20250531 04:29:45.935"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/mybucket4 | jq -r '. | select(.name=="mybucket4") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:45.938" level="INFO">Running command 'ozone sh bucket info /ruiig/mybucket4 | jq -r '. | select(.name=="mybucket4") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:48.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:48.989" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20250531 04:29:45.936" endtime="20250531 04:29:48.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:48.990" level="INFO">null</msg>
<status status="PASS" starttime="20250531 04:29:48.990" endtime="20250531 04:29:48.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:48.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:48.990" endtime="20250531 04:29:48.991"/>
</kw>
<status status="PASS" starttime="20250531 04:29:45.935" endtime="20250531 04:29:48.991"/>
</kw>
<msg timestamp="20250531 04:29:48.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:45.935" endtime="20250531 04:29:48.991"/>
</kw>
<msg timestamp="20250531 04:29:48.991" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20250531 04:29:45.935" endtime="20250531 04:29:48.991"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:29:48.991" endtime="20250531 04:29:48.992"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/mybucket4/mykey /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:48.995" level="INFO">Running command 'ozone sh key put /ruiig/mybucket4/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:53.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:53.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:29:48.992" endtime="20250531 04:29:53.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:53.198" level="INFO"/>
<status status="PASS" starttime="20250531 04:29:53.197" endtime="20250531 04:29:53.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:53.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:53.198" endtime="20250531 04:29:53.198"/>
</kw>
<status status="PASS" starttime="20250531 04:29:48.992" endtime="20250531 04:29:53.198"/>
</kw>
<msg timestamp="20250531 04:29:53.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:48.992" endtime="20250531 04:29:53.199"/>
</kw>
<status status="PASS" starttime="20250531 04:29:48.992" endtime="20250531 04:29:53.199"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:53.202" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:53.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:53.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:29:53.200" endtime="20250531 04:29:53.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:53.206" level="INFO"/>
<status status="PASS" starttime="20250531 04:29:53.206" endtime="20250531 04:29:53.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:53.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:53.206" endtime="20250531 04:29:53.206"/>
</kw>
<status status="PASS" starttime="20250531 04:29:53.199" endtime="20250531 04:29:53.206"/>
</kw>
<msg timestamp="20250531 04:29:53.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:53.199" endtime="20250531 04:29:53.207"/>
</kw>
<status status="PASS" starttime="20250531 04:29:53.199" endtime="20250531 04:29:53.207"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume}/mybucket4/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:53.209" level="INFO">Running command 'ozone sh key info /ruiig/mybucket4/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:56.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:56.394" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20250531 04:29:53.208" endtime="20250531 04:29:56.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:56.395" level="INFO">null</msg>
<status status="PASS" starttime="20250531 04:29:56.395" endtime="20250531 04:29:56.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:56.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:56.395" endtime="20250531 04:29:56.396"/>
</kw>
<status status="PASS" starttime="20250531 04:29:53.207" endtime="20250531 04:29:56.396"/>
</kw>
<msg timestamp="20250531 04:29:56.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:53.207" endtime="20250531 04:29:56.396"/>
</kw>
<msg timestamp="20250531 04:29:56.396" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20250531 04:29:53.207" endtime="20250531 04:29:56.396"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250531 04:29:56.396" endtime="20250531 04:29:56.396"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete /${volume}/mybucket4/mykey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:56.399" level="INFO">Running command 'ozone sh key delete /ruiig/mybucket4/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:29:59.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:29:59.377" level="INFO">${output} = Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20250531 04:29:56.397" endtime="20250531 04:29:59.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:29:59.378" level="INFO">Key moved inside Trash: /.Trash/hadoop/Current/mykey </msg>
<status status="PASS" starttime="20250531 04:29:59.377" endtime="20250531 04:29:59.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:29:59.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:29:59.378" endtime="20250531 04:29:59.378"/>
</kw>
<status status="PASS" starttime="20250531 04:29:56.397" endtime="20250531 04:29:59.378"/>
</kw>
<msg timestamp="20250531 04:29:59.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:56.397" endtime="20250531 04:29:59.379"/>
</kw>
<status status="PASS" starttime="20250531 04:29:56.396" endtime="20250531 04:29:59.379"/>
</kw>
<status status="PASS" starttime="20250531 04:29:43.118" endtime="20250531 04:29:59.379"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:29:43.118" endtime="20250531 04:29:59.379"/>
</test>
<doc>Smoketest Ozone GDPR Feature</doc>
<status status="PASS" starttime="20250531 04:28:38.242" endtime="20250531 04:29:59.380"/>
</suite>
<status status="PASS" starttime="20250531 04:28:38.222" endtime="20250531 04:29:59.381"/>
</suite>
<suite id="s1-s6" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s6-t1" name="Token Test" line="85">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Unsecure Cluster">
<kw name="Get Token in Unsecure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token get -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:29:59.896" level="INFO">Running command 'ozone sh token get -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:01.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:01.419" level="INFO">${output} = Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250531 04:29:59.894" endtime="20250531 04:30:01.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:01.420" level="INFO">Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250531 04:30:01.420" endtime="20250531 04:30:01.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:01.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:01.420" endtime="20250531 04:30:01.421"/>
</kw>
<status status="PASS" starttime="20250531 04:29:59.893" endtime="20250531 04:30:01.421"/>
</kw>
<msg timestamp="20250531 04:30:01.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:29:59.893" endtime="20250531 04:30:01.421"/>
</kw>
<msg timestamp="20250531 04:30:01.421" level="INFO">${output} = Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250531 04:29:59.893" endtime="20250531 04:30:01.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ozone sh token get</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:30:01.421" endtime="20250531 04:30:01.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>only when security is enabled</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:30:01.422" endtime="20250531 04:30:01.422"/>
</kw>
<status status="PASS" starttime="20250531 04:29:59.893" endtime="20250531 04:30:01.422"/>
</kw>
<kw name="Renew Token in Unsecure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:01.425" level="INFO">Running command 'ozone sh token renew -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:02.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:02.965" level="INFO">${output} = Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250531 04:30:01.423" endtime="20250531 04:30:02.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:02.966" level="INFO">Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250531 04:30:02.966" endtime="20250531 04:30:02.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:02.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:02.966" endtime="20250531 04:30:02.967"/>
</kw>
<status status="PASS" starttime="20250531 04:30:01.423" endtime="20250531 04:30:02.967"/>
</kw>
<msg timestamp="20250531 04:30:02.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:01.423" endtime="20250531 04:30:02.967"/>
</kw>
<msg timestamp="20250531 04:30:02.967" level="INFO">${output} = Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250531 04:30:01.422" endtime="20250531 04:30:02.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ozone sh token renew</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:30:02.967" endtime="20250531 04:30:02.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>only when security is enabled</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:30:02.967" endtime="20250531 04:30:02.968"/>
</kw>
<status status="PASS" starttime="20250531 04:30:01.422" endtime="20250531 04:30:02.968"/>
</kw>
<kw name="Cancel Token in Unsecure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:02.971" level="INFO">Running command 'ozone sh token cancel -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:04.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:04.569" level="INFO">${output} = Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250531 04:30:02.969" endtime="20250531 04:30:04.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:04.570" level="INFO">Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250531 04:30:04.569" endtime="20250531 04:30:04.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:04.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:04.570" endtime="20250531 04:30:04.570"/>
</kw>
<status status="PASS" starttime="20250531 04:30:02.969" endtime="20250531 04:30:04.570"/>
</kw>
<msg timestamp="20250531 04:30:04.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:02.968" endtime="20250531 04:30:04.570"/>
</kw>
<msg timestamp="20250531 04:30:04.571" level="INFO">${output} = Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20250531 04:30:02.968" endtime="20250531 04:30:04.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ozone sh token cancel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:30:04.571" endtime="20250531 04:30:04.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>only when security is enabled</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:30:04.571" endtime="20250531 04:30:04.571"/>
</kw>
<status status="PASS" starttime="20250531 04:30:02.968" endtime="20250531 04:30:04.571"/>
</kw>
<status status="PASS" starttime="20250531 04:29:59.893" endtime="20250531 04:30:04.571"/>
</kw>
<status status="PASS" starttime="20250531 04:29:59.892" endtime="20250531 04:30:04.571"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:30:04.572" endtime="20250531 04:30:04.572"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:04.575" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:05.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:05.706" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20250531 04:30:04.573" endtime="20250531 04:30:05.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:05.707" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20250531 04:30:05.706" endtime="20250531 04:30:05.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:05.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:05.707" endtime="20250531 04:30:05.707"/>
</kw>
<status status="PASS" starttime="20250531 04:30:04.573" endtime="20250531 04:30:05.707"/>
</kw>
<msg timestamp="20250531 04:30:05.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:04.572" endtime="20250531 04:30:05.708"/>
</kw>
<msg timestamp="20250531 04:30:05.708" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20250531 04:30:04.572" endtime="20250531 04:30:05.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:30:05.708" endtime="20250531 04:30:05.708"/>
</kw>
<status status="PASS" starttime="20250531 04:30:04.572" endtime="20250531 04:30:05.708"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:29:59.892" endtime="20250531 04:30:05.708"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20250531 04:29:59.858" endtime="20250531 04:30:05.709"/>
</suite>
<suite id="s1-s7" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s7-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s7-s1-t1" name="Check if Recon picks up OM data" line="72">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:06.245" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:09.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:09.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:30:06.243" endtime="20250531 04:30:09.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:09.046" level="INFO"/>
<status status="PASS" starttime="20250531 04:30:09.046" endtime="20250531 04:30:09.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:09.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:09.046" endtime="20250531 04:30:09.047"/>
</kw>
<status status="PASS" starttime="20250531 04:30:06.243" endtime="20250531 04:30:09.047"/>
</kw>
<msg timestamp="20250531 04:30:09.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:06.242" endtime="20250531 04:30:09.047"/>
</kw>
<status status="PASS" starttime="20250531 04:30:06.242" endtime="20250531 04:30:09.047"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:09.050" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:11.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:11.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:30:09.048" endtime="20250531 04:30:11.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:11.924" level="INFO"/>
<status status="PASS" starttime="20250531 04:30:11.923" endtime="20250531 04:30:11.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:11.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:11.924" endtime="20250531 04:30:11.925"/>
</kw>
<status status="PASS" starttime="20250531 04:30:09.048" endtime="20250531 04:30:11.925"/>
</kw>
<msg timestamp="20250531 04:30:11.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:09.048" endtime="20250531 04:30:11.925"/>
</kw>
<status status="PASS" starttime="20250531 04:30:09.047" endtime="20250531 04:30:11.925"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:11.929" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:17.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:17.014" level="INFO">${output} = 2025-05-31 04:30:13,212 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:30:13,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:30:11.926" endtime="20250531 04:30:17.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:17.015" level="INFO">2025-05-31 04:30:13,212 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:30:13,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-05-31 04:30:13,369 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-05-31 04:30:13,529 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2025-05-31 04:30:13,582 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2025-05-31 04:30:14,583 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2025-05-31 04:30:15,122 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-05-31 04:30:15,583 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2025-05-31 04:30:16,584 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2025-05-31 04:30:16,608 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=27.581106, max=884.616561, mean=120.61114701381837, stddev=253.44129264687393, median=34.932749, p75=42.502549, p95=884.616561, p98=884.616561, p99=884.616561, p999=884.616561, mean_rate=6.140050850071405, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-05-31 04:30:16,609 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-05-31 04:30:16,609 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-05-31 04:30:16,609 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20250531 04:30:17.014" endtime="20250531 04:30:17.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:17.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:17.015" endtime="20250531 04:30:17.015"/>
</kw>
<status status="PASS" starttime="20250531 04:30:11.926" endtime="20250531 04:30:17.015"/>
</kw>
<msg timestamp="20250531 04:30:17.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:11.926" endtime="20250531 04:30:17.015"/>
</kw>
<msg timestamp="20250531 04:30:17.016" level="INFO">${result} = 2025-05-31 04:30:13,212 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:30:13,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:30:11.925" endtime="20250531 04:30:17.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:30:17.016" endtime="20250531 04:30:17.016"/>
</kw>
<status status="PASS" starttime="20250531 04:30:11.925" endtime="20250531 04:30:17.016"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:30:17.017" endtime="20250531 04:30:17.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:17.020" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:17.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:17.127" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":120,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:17.018" endtime="20250531 04:30:17.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:17.128" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":120,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:17.128" endtime="20250531 04:30:17.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:17.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:17.128" endtime="20250531 04:30:17.129"/>
</kw>
<status status="PASS" starttime="20250531 04:30:17.018" endtime="20250531 04:30:17.129"/>
</kw>
<msg timestamp="20250531 04:30:17.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:17.018" endtime="20250531 04:30:17.129"/>
</kw>
<msg timestamp="20250531 04:30:17.129" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":120,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:17.017" endtime="20250531 04:30:17.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:30:17.129" endtime="20250531 04:30:17.129"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:17.133" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:17.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:17.154" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},...</msg>
<status status="PASS" starttime="20250531 04:30:17.130" endtime="20250531 04:30:17.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:17.155" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"27795-source","bucket":"bucket1","fileSize":16384,"count":0},{"volume":"27795-source","bucket":"bucket1","fileSize":1024,"count":1},{"volume":"89303-without-scheme","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-acls","bucket":"bb1","fileSize":16384,"count":2},{"volume":"17991-without-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-del","bucket":"bfso","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket1","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket2","fileSize":16384,"count":2},{"volume":"ruiig","bucket":"mybucket3","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket4","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20250531 04:30:17.154" endtime="20250531 04:30:17.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:17.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:17.155" endtime="20250531 04:30:17.155"/>
</kw>
<status status="PASS" starttime="20250531 04:30:17.130" endtime="20250531 04:30:17.156"/>
</kw>
<msg timestamp="20250531 04:30:17.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:17.130" endtime="20250531 04:30:17.156"/>
</kw>
<msg timestamp="20250531 04:30:17.156" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},...</msg>
<status status="PASS" starttime="20250531 04:30:17.130" endtime="20250531 04:30:17.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250531 04:30:17.156" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"27795-source","bucket":"bucket1","fileSize":16384,"count":0},{"volume":"27795-source","bucket":"bucket1","fileSize":1024,"count":1},{"volume":"89303-without-scheme","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-acls","bucket":"bb1","fileSize":16384,"count":2},{"volume":"17991-without-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-del","bucket":"bfso","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket1","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket2","fileSize":16384,"count":2},{"volume":"ruiig","bucket":"mybucket3","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket4","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20250531 04:30:17.156" endtime="20250531 04:30:17.157"/>
</kw>
<status status="FAIL" starttime="20250531 04:30:17.017" endtime="20250531 04:30:17.157"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:30:27.158" endtime="20250531 04:30:27.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:27.162" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:27.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:27.173" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":120,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:27.159" endtime="20250531 04:30:27.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:27.173" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":120,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:27.173" endtime="20250531 04:30:27.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:27.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:27.174" endtime="20250531 04:30:27.174"/>
</kw>
<status status="PASS" starttime="20250531 04:30:27.159" endtime="20250531 04:30:27.174"/>
</kw>
<msg timestamp="20250531 04:30:27.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:27.159" endtime="20250531 04:30:27.174"/>
</kw>
<msg timestamp="20250531 04:30:27.174" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":120,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:27.158" endtime="20250531 04:30:27.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:30:27.174" endtime="20250531 04:30:27.175"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:27.177" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:27.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:27.188" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},...</msg>
<status status="PASS" starttime="20250531 04:30:27.176" endtime="20250531 04:30:27.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:27.189" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"27795-source","bucket":"bucket1","fileSize":16384,"count":0},{"volume":"27795-source","bucket":"bucket1","fileSize":1024,"count":1},{"volume":"89303-without-scheme","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-acls","bucket":"bb1","fileSize":16384,"count":2},{"volume":"17991-without-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-del","bucket":"bfso","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket1","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket2","fileSize":16384,"count":2},{"volume":"ruiig","bucket":"mybucket3","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket4","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20250531 04:30:27.188" endtime="20250531 04:30:27.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:27.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:27.189" endtime="20250531 04:30:27.189"/>
</kw>
<status status="PASS" starttime="20250531 04:30:27.175" endtime="20250531 04:30:27.189"/>
</kw>
<msg timestamp="20250531 04:30:27.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:27.175" endtime="20250531 04:30:27.190"/>
</kw>
<msg timestamp="20250531 04:30:27.190" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},...</msg>
<status status="PASS" starttime="20250531 04:30:27.175" endtime="20250531 04:30:27.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250531 04:30:27.190" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"27795-source","bucket":"bucket1","fileSize":16384,"count":0},{"volume":"27795-source","bucket":"bucket1","fileSize":1024,"count":1},{"volume":"89303-without-scheme","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-acls","bucket":"bb1","fileSize":16384,"count":2},{"volume":"17991-without-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-del","bucket":"bfso","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket1","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket2","fileSize":16384,"count":2},{"volume":"ruiig","bucket":"mybucket3","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket4","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20250531 04:30:27.190" endtime="20250531 04:30:27.190"/>
</kw>
<status status="FAIL" starttime="20250531 04:30:27.157" endtime="20250531 04:30:27.191"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:30:37.191" endtime="20250531 04:30:37.192"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:37.195" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:37.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:37.205" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":121,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:37.193" endtime="20250531 04:30:37.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:37.206" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":121,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:37.205" endtime="20250531 04:30:37.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:37.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:37.206" endtime="20250531 04:30:37.206"/>
</kw>
<status status="PASS" starttime="20250531 04:30:37.192" endtime="20250531 04:30:37.206"/>
</kw>
<msg timestamp="20250531 04:30:37.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:37.192" endtime="20250531 04:30:37.206"/>
</kw>
<msg timestamp="20250531 04:30:37.207" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":121,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:37.192" endtime="20250531 04:30:37.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:30:37.207" endtime="20250531 04:30:37.207"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:37.210" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:37.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:37.219" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},...</msg>
<status status="PASS" starttime="20250531 04:30:37.208" endtime="20250531 04:30:37.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:37.219" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"27795-source","bucket":"bucket1","fileSize":16384,"count":0},{"volume":"27795-source","bucket":"bucket1","fileSize":1024,"count":1},{"volume":"89303-without-scheme","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-acls","bucket":"bb1","fileSize":16384,"count":2},{"volume":"17991-without-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-del","bucket":"bfso","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket1","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket2","fileSize":16384,"count":2},{"volume":"ruiig","bucket":"mybucket3","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket4","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20250531 04:30:37.219" endtime="20250531 04:30:37.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:37.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:37.220" endtime="20250531 04:30:37.220"/>
</kw>
<status status="PASS" starttime="20250531 04:30:37.207" endtime="20250531 04:30:37.220"/>
</kw>
<msg timestamp="20250531 04:30:37.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:37.207" endtime="20250531 04:30:37.220"/>
</kw>
<msg timestamp="20250531 04:30:37.221" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},...</msg>
<status status="PASS" starttime="20250531 04:30:37.207" endtime="20250531 04:30:37.221"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250531 04:30:37.221" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"27795-source","bucket":"bucket1","fileSize":16384,"count":0},{"volume":"27795-source","bucket":"bucket1","fileSize":1024,"count":1},{"volume":"89303-without-scheme","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-acls","bucket":"bb1","fileSize":16384,"count":2},{"volume":"17991-without-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-del","bucket":"bfso","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket1","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket2","fileSize":16384,"count":2},{"volume":"ruiig","bucket":"mybucket3","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket4","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20250531 04:30:37.221" endtime="20250531 04:30:37.221"/>
</kw>
<status status="FAIL" starttime="20250531 04:30:37.191" endtime="20250531 04:30:37.221"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:30:47.222" endtime="20250531 04:30:47.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:47.226" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:47.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:47.235" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":121,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:47.223" endtime="20250531 04:30:47.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:47.236" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":121,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:47.236" endtime="20250531 04:30:47.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:47.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:47.237" endtime="20250531 04:30:47.237"/>
</kw>
<status status="PASS" starttime="20250531 04:30:47.223" endtime="20250531 04:30:47.237"/>
</kw>
<msg timestamp="20250531 04:30:47.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:47.223" endtime="20250531 04:30:47.237"/>
</kw>
<msg timestamp="20250531 04:30:47.237" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":121,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:47.222" endtime="20250531 04:30:47.237"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:30:47.237" endtime="20250531 04:30:47.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:47.241" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:47.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:47.250" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},...</msg>
<status status="PASS" starttime="20250531 04:30:47.238" endtime="20250531 04:30:47.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:47.251" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"27795-source","bucket":"bucket1","fileSize":16384,"count":0},{"volume":"27795-source","bucket":"bucket1","fileSize":1024,"count":1},{"volume":"89303-without-scheme","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-acls","bucket":"bb1","fileSize":16384,"count":2},{"volume":"17991-without-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-del","bucket":"bfso","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket1","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket2","fileSize":16384,"count":2},{"volume":"ruiig","bucket":"mybucket3","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket4","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20250531 04:30:47.251" endtime="20250531 04:30:47.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:47.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:47.251" endtime="20250531 04:30:47.252"/>
</kw>
<status status="PASS" starttime="20250531 04:30:47.238" endtime="20250531 04:30:47.252"/>
</kw>
<msg timestamp="20250531 04:30:47.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:47.238" endtime="20250531 04:30:47.252"/>
</kw>
<msg timestamp="20250531 04:30:47.252" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},...</msg>
<status status="PASS" starttime="20250531 04:30:47.238" endtime="20250531 04:30:47.252"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250531 04:30:47.252" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"27795-source","bucket":"bucket1","fileSize":16384,"count":0},{"volume":"27795-source","bucket":"bucket1","fileSize":1024,"count":1},{"volume":"89303-without-scheme","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-acls","bucket":"bb1","fileSize":16384,"count":2},{"volume":"17991-without-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-del","bucket":"bfso","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket1","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket2","fileSize":16384,"count":2},{"volume":"ruiig","bucket":"mybucket3","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket4","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20250531 04:30:47.252" endtime="20250531 04:30:47.253"/>
</kw>
<status status="FAIL" starttime="20250531 04:30:47.222" endtime="20250531 04:30:47.253"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:30:57.254" endtime="20250531 04:30:57.254"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:57.257" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:57.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:57.267" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":121,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:57.255" endtime="20250531 04:30:57.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:57.268" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":121,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:57.268" endtime="20250531 04:30:57.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:57.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:57.268" endtime="20250531 04:30:57.269"/>
</kw>
<status status="PASS" starttime="20250531 04:30:57.254" endtime="20250531 04:30:57.269"/>
</kw>
<msg timestamp="20250531 04:30:57.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:57.254" endtime="20250531 04:30:57.269"/>
</kw>
<msg timestamp="20250531 04:30:57.269" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":121,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:30:57.254" endtime="20250531 04:30:57.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:30:57.269" endtime="20250531 04:30:57.270"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:30:57.272" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:30:57.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:30:57.281" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},...</msg>
<status status="PASS" starttime="20250531 04:30:57.270" endtime="20250531 04:30:57.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:30:57.282" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"27795-source","bucket":"bucket1","fileSize":16384,"count":0},{"volume":"27795-source","bucket":"bucket1","fileSize":1024,"count":1},{"volume":"89303-without-scheme","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-acls","bucket":"bb1","fileSize":16384,"count":2},{"volume":"17991-without-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-del","bucket":"bfso","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket1","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket2","fileSize":16384,"count":2},{"volume":"ruiig","bucket":"mybucket3","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket4","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20250531 04:30:57.282" endtime="20250531 04:30:57.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:30:57.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:30:57.282" endtime="20250531 04:30:57.283"/>
</kw>
<status status="PASS" starttime="20250531 04:30:57.270" endtime="20250531 04:30:57.283"/>
</kw>
<msg timestamp="20250531 04:30:57.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:30:57.270" endtime="20250531 04:30:57.283"/>
</kw>
<msg timestamp="20250531 04:30:57.283" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},...</msg>
<status status="PASS" starttime="20250531 04:30:57.270" endtime="20250531 04:30:57.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250531 04:30:57.284" level="FAIL">'[{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"27795-source","bucket":"bucket1","fileSize":16384,"count":0},{"volume":"27795-source","bucket":"bucket1","fileSize":1024,"count":1},{"volume":"89303-without-scheme","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-acls","bucket":"bb1","fileSize":16384,"count":2},{"volume":"17991-without-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-del","bucket":"bfso","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket1","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket2","fileSize":16384,"count":2},{"volume":"ruiig","bucket":"mybucket3","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket4","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20250531 04:30:57.283" endtime="20250531 04:30:57.284"/>
</kw>
<status status="FAIL" starttime="20250531 04:30:57.253" endtime="20250531 04:30:57.284"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:07.285" endtime="20250531 04:31:07.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.288" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.298" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":133,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:31:07.286" endtime="20250531 04:31:07.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.299" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":133,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:31:07.298" endtime="20250531 04:31:07.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.299" endtime="20250531 04:31:07.299"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.286" endtime="20250531 04:31:07.299"/>
</kw>
<msg timestamp="20250531 04:31:07.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.286" endtime="20250531 04:31:07.299"/>
</kw>
<msg timestamp="20250531 04:31:07.299" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":133,"pipelines":null},{"ContainerID":2,"NumberOfKeys":1,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20250531 04:31:07.285" endtime="20250531 04:31:07.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.300" endtime="20250531 04:31:07.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.303" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.312" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},...</msg>
<status status="PASS" starttime="20250531 04:31:07.301" endtime="20250531 04:31:07.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.313" level="INFO">[{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},{"volume":"27795-source","bucket":"bucket1","fileSize":16384,"count":0},{"volume":"27795-source","bucket":"bucket1","fileSize":1024,"count":1},{"volume":"89303-without-scheme","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-acls","bucket":"bb1","fileSize":16384,"count":2},{"volume":"17991-without-host","bucket":"bb1","fileSize":16384,"count":0},{"volume":"17991-with-del","bucket":"bfso","fileSize":16384,"count":0},{"volume":"ruiig","bucket":"mybucket1","fileSize":16384,"count":0},{"volume":"ruiig","bucket":"mybucket2","fileSize":16384,"count":2},{"volume":"ruiig","bucket":"mybucket3","fileSize":16384,"count":1},{"volume":"ruiig","bucket":"mybucket4","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20250531 04:31:07.312" endtime="20250531 04:31:07.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.313" endtime="20250531 04:31:07.314"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.300" endtime="20250531 04:31:07.314"/>
</kw>
<msg timestamp="20250531 04:31:07.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.300" endtime="20250531 04:31:07.314"/>
</kw>
<msg timestamp="20250531 04:31:07.314" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket","fileSize":2048,"count":1},{"volume":"27795-source","bucket":"bucket1","fileSize":2048,"count":1},{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":102},...</msg>
<status status="PASS" starttime="20250531 04:31:07.300" endtime="20250531 04:31:07.314"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.314" endtime="20250531 04:31:07.314"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.284" endtime="20250531 04:31:07.314"/>
</kw>
<status status="PASS" starttime="20250531 04:30:17.016" endtime="20250531 04:31:07.314"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if the listKeys api responds OK</arg>
<arg>recon</arg>
<arg>api</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if the listKeys api responds OK">
<arg>recon</arg>
<arg>api</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:07.315" endtime="20250531 04:31:07.315"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/keys/listKeys?startPrefix=/${volume}/${bucket}&amp;limit=1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.318" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/keys/listKeys?startPrefix=/recon/api&amp;limit=1000 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.346" level="INFO">${output} = {"status":"OK","path":"/recon/api","replicatedDataSize":30750,"unReplicatedDataSize":10250,"lastKey":"/recon/api/ockg/9","keys":[{"volumeName":"recon","bucketName":"api","keyName":"ockg/0","parentId":...</msg>
<status status="PASS" starttime="20250531 04:31:07.316" endtime="20250531 04:31:07.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.346" level="INFO">{"status":"OK","path":"/recon/api","replicatedDataSize":30750,"unReplicatedDataSize":10250,"lastKey":"/recon/api/ockg/9","keys":[{"volumeName":"recon","bucketName":"api","keyName":"ockg/0","parentId":0,"key":"/recon/api/ockg/0","path":"recon/api/ockg/0","replicatedSize":3075,"replicationInfo":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"isKey":true,"size":1025,"creationTime":1748665814995,"modificationTime":1748665815862},{"volumeName":"recon","bucketName":"api","keyName":"ockg/1","parentId":0,"key":"/recon/api/ockg/1","path":"recon/api/ockg/1","replicatedSize":3075,"replicationInfo":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"isKey":true,"size":1025,"creationTime":1748665815869,"modificationTime":1748665815899},{"volumeName":"recon","bucketName":"api","keyName":"ockg/2","parentId":0,"key":"/recon/api/ockg/2","path":"recon/api/ockg/2","replicatedSize":3075,"replicationInfo":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"isKey":true,"size":1025,"creationTime":1748665815907,"modificationTime":1748665815940},{"volumeName":"recon","bucketName":"api","keyName":"ockg/3","parentId":0,"key":"/recon/api/ockg/3","path":"recon/api/ockg/3","replicatedSize":3075,"replicationInfo":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"isKey":true,"size":1025,"creationTime":1748665815948,"modificationTime":1748665815974},{"volumeName":"recon","bucketName":"api","keyName":"ockg/4","parentId":0,"key":"/recon/api/ockg/4","path":"recon/api/ockg/4","replicatedSize":3075,"replicationInfo":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"isKey":true,"size":1025,"creationTime":1748665815982,"modificationTime":1748665816019},{"volumeName":"recon","bucketName":"api","keyName":"ockg/5","parentId":0,"key":"/recon/api/ockg/5","path":"recon/api/ockg/5","replicatedSize":3075,"replicationInfo":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"isKey":true,"size":1025,"creationTime":1748665816027,"modificationTime":1748665816058},{"volumeName":"recon","bucketName":"api","keyName":"ockg/6","parentId":0,"key":"/recon/api/ockg/6","path":"recon/api/ockg/6","replicatedSize":3075,"replicationInfo":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"isKey":true,"size":1025,"creationTime":1748665816063,"modificationTime":1748665816092},{"volumeName":"recon","bucketName":"api","keyName":"ockg/7","parentId":0,"key":"/recon/api/ockg/7","path":"recon/api/ockg/7","replicatedSize":3075,"replicationInfo":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"isKey":true,"size":1025,"creationTime":1748665816098,"modificationTime":1748665816118},{"volumeName":"recon","bucketName":"api","keyName":"ockg/8","parentId":0,"key":"/recon/api/ockg/8","path":"recon/api/ockg/8","replicatedSize":3075,"replicationInfo":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"isKey":true,"size":1025,"creationTime":1748665816126,"modificationTime":1748665816160},{"volumeName":"recon","bucketName":"api","keyName":"ockg/9","parentId":0,"key":"/recon/api/ockg/9","path":"recon/api/ockg/9","replicatedSize":3075,"replicationInfo":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"isKey":true,"size":1025,"creationTime":1748665816168,"modificationTime":1748665816194}]}</msg>
<status status="PASS" starttime="20250531 04:31:07.346" endtime="20250531 04:31:07.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.347" endtime="20250531 04:31:07.347"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.316" endtime="20250531 04:31:07.347"/>
</kw>
<msg timestamp="20250531 04:31:07.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.316" endtime="20250531 04:31:07.347"/>
</kw>
<msg timestamp="20250531 04:31:07.347" level="INFO">${result} = {"status":"OK","path":"/recon/api","replicatedDataSize":30750,"unReplicatedDataSize":10250,"lastKey":"/recon/api/ockg/9","keys":[{"volumeName":"recon","bucketName":"api","keyName":"ockg/0","parentId":...</msg>
<status status="PASS" starttime="20250531 04:31:07.315" endtime="20250531 04:31:07.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"OK"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.347" endtime="20250531 04:31:07.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"keys"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.348" endtime="20250531 04:31:07.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${volume}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.348" endtime="20250531 04:31:07.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${bucket}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.348" endtime="20250531 04:31:07.349"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.315" endtime="20250531 04:31:07.349"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.315" endtime="20250531 04:31:07.349"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:30:06.242" endtime="20250531 04:31:07.349"/>
</test>
<test id="s1-s7-s1-t2" name="Check if Recon picks up DN heartbeats" line="83">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.353" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.378" level="INFO">${output} = {"totalCount":3,"datanodes":[{"uuid":"526e2d40-3ec9-44fd-bc60-a703acd16749","hostname":"ozone-datanode-1.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1748665866582,"storageR...</msg>
<status status="PASS" starttime="20250531 04:31:07.351" endtime="20250531 04:31:07.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.379" level="INFO">{"totalCount":3,"datanodes":[{"uuid":"526e2d40-3ec9-44fd-bc60-a703acd16749","hostname":"ozone-datanode-1.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1748665866582,"storageReport":{"capacity":76879465972,"used":1363454,"remaining":22310391808,"committed":2146124290},"pipelines":[{"pipelineID":"f4adfb1c-58f6-4ee8-8d2d-e1a5501f7998","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-datanode-1.ozone_default"},{"pipelineID":"adb25138-6c7f-4064-8161-036ef000c92a","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-datanode-1.ozone_default"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"2.1.0-SNAPSHOT","setupTime":1748664874164,"revision":"3bfb7affaf860ae0957fea2b2058ab50a85f571d","layoutVersion":8,"networkLocation":"/default-rack"},{"uuid":"8f586065-24de-4cdf-b939-c27c2622de8c","hostname":"ozone-datanode-2.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1748665865567,"storageReport":{"capacity":76879465972,"used":1353214,"remaining":22310391808,"committed":1072392706},"pipelines":[{"pipelineID":"f4adfb1c-58f6-4ee8-8d2d-e1a5501f7998","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-datanode-1.ozone_default"},{"pipelineID":"e03cbc28-4efd-45b8-bc92-8cf72d0ea49d","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-datanode-2.ozone_default"}],"containers":1,"openContainers":1,"leaderCount":1,"version":"2.1.0-SNAPSHOT","setupTime":1748664875142,"revision":"3bfb7affaf860ae0957fea2b2058ab50a85f571d","layoutVersion":8,"networkLocation":"/default-rack"},{"uuid":"b971e0e8-290a-4bf1-91c9-adf5d158aede","hostname":"ozone-datanode-3.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1748665865559,"storageReport":{"capacity":76879465972,"used":1353214,"remaining":22310391808,"committed":1072392706},"pipelines":[{"pipelineID":"f4adfb1c-58f6-4ee8-8d2d-e1a5501f7998","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-datanode-1.ozone_default"},{"pipelineID":"7e9ac445-3c44-45fb-ba2d-673caca478b9","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-datanode-3.ozone_default"}],"containers":1,"openContainers":1,"leaderCount":1,"version":"2.1.0-SNAPSHOT","setupTime":1748664874982,"revision":"3bfb7affaf860ae0957fea2b2058ab50a85f571d","layoutVersion":8,"networkLocation":"/default-rack"}]}</msg>
<status status="PASS" starttime="20250531 04:31:07.379" endtime="20250531 04:31:07.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.380" endtime="20250531 04:31:07.380"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.350" endtime="20250531 04:31:07.380"/>
</kw>
<msg timestamp="20250531 04:31:07.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.350" endtime="20250531 04:31:07.380"/>
</kw>
<msg timestamp="20250531 04:31:07.380" level="INFO">${result} = {"totalCount":3,"datanodes":[{"uuid":"526e2d40-3ec9-44fd-bc60-a703acd16749","hostname":"ozone-datanode-1.ozone_default","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1748665866582,"storageR...</msg>
<status status="PASS" starttime="20250531 04:31:07.350" endtime="20250531 04:31:07.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.381" endtime="20250531 04:31:07.381"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]1</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250531 04:31:07.381" endtime="20250531 04:31:07.382"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]2</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250531 04:31:07.382" endtime="20250531 04:31:07.382"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]3</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250531 04:31:07.382" endtime="20250531 04:31:07.383"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.386" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.418" level="INFO">${output} = {"totalCount":4,"pipelines":[{"pipelineId":"f4adfb1c-58f6-4ee8-8d2d-e1a5501f7998","status":"OPEN","leaderNode":"ozone-datanode-1.ozone_default","datanodes":[{"level":3,"parent":null,"cost":0,"id":{"uu...</msg>
<status status="PASS" starttime="20250531 04:31:07.384" endtime="20250531 04:31:07.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.418" level="INFO">{"totalCount":4,"pipelines":[{"pipelineId":"f4adfb1c-58f6-4ee8-8d2d-e1a5501f7998","status":"OPEN","leaderNode":"ozone-datanode-1.ozone_default","datanodes":[{"level":3,"parent":null,"cost":0,"id":{"uuid":"8f586065-24de-4cdf-b939-c27c2622de8c","id":"8f586065-24de-4cdf-b939-c27c2622de8c","byteString":{"validUtf8":true,"empty":false}},"ipAddress":"172.18.0.8","hostName":"ozone-datanode-2.ozone_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":2,"uuid":"8f586065-24de-4cdf-b939-c27c2622de8c","uuidString":"8f586065-24de-4cdf-b939-c27c2622de8c","decommissioned":false,"ratisPort":{"name":"RATIS","value":9858},"hostNameAsByteString":{"string":"ozone-datanode-2.ozone_default","bytes":{"validUtf8":true,"empty":false}},"ipAddressAsByteString":{"string":"172.18.0.8","bytes":{"validUtf8":true,"empty":false}},"restPort":null,"standalonePort":{"name":"STANDALONE","value":9859},"maintenance":false,"networkName":"8f586065-24de-4cdf-b939-c27c2622de8c","networkLocation":"/default-rack","networkFullPath":"/default-rack/8f586065-24de-4cdf-b939-c27c2622de8c","numOfLeaves":1,"networkLocationAsByteString":{"string":"/default-rack","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"8f586065-24de-4cdf-b939-c27c2622de8c","bytes":{"validUtf8":true,"empty":false}}},{"level":3,"parent":null,"cost":0,"id":{"uuid":"b971e0e8-290a-4bf1-91c9-adf5d158aede","id":"b971e0e8-290a-4bf1-91c9-adf5d158aede","byteString":{"validUtf8":true,"empty":false}},"ipAddress":"172.18.0.9","hostName":"ozone-datanode-3.ozone_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":2,"uuid":"b971e0e8-290a-4bf1-91c9-adf5d158aede","uuidString":"b971e0e8-290a-4bf1-91c9-adf5d158aede","decommissioned":false,"ratisPort":{"name":"RATIS","value":9858},"hostNameAsByteString":{"string":"ozone-datanode-3.ozone_default","bytes":{"validUtf8":true,"empty":false}},"ipAddressAsByteString":{"string":"172.18.0.9","bytes":{"validUtf8":true,"empty":false}},"restPort":null,"standalonePort":{"name":"STANDALONE","value":9859},"maintenance":false,"networkName":"b971e0e8-290a-4bf1-91c9-adf5d158aede","networkLocation":"/default-rack","networkFullPath":"/default-rack/b971e0e8-290a-4bf1-91c9-adf5d158aede","numOfLeaves":1,"networkLocationAsByteString":{"string":"/default-rack","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"b971e0e8-290a-4bf1-91c9-adf5d158aede","bytes":{"validUtf8":true,"empty":false}}},{"level":3,"parent":null,"cost":0,"id":{"uuid":"526e2d40-3ec9-44fd-bc60-a703acd16749","id":"526e2d40-3ec9-44fd-bc60-a703acd16749","byteString":{"validUtf8":true,"empty":false}},"ipAddress":"172.18.0.3","hostName":"ozone-datanode-1.ozone_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":2,"uuid":"526e2d40-3ec9-44fd-bc60-a703acd16749","uuidString":"526e2d40-3ec9-44fd-bc60-a703acd16749","decommissioned":false,"ratisPort":{"name":"RATIS","value":9858},"hostNameAsByteString":{"string":"ozone-datanode-1.ozone_default","bytes":{"validUtf8":true,"empty":false}},"ipAddressAsByteString":{"string":"172.18.0.3","bytes":{"validUtf8":true,"empty":false}},"restPort":null,"standalonePort":{"name":"STANDALONE","value":9859},"maintenance":false,"networkName":"526e2d40-3ec9-44fd-bc60-a703acd16749","networkLocation":"/default-rack","networkFullPath":"/default-rack/526e2d40-3ec9-44fd-bc60-a703acd16749","numOfLeaves":1,"networkLocationAsByteString":{"string":"/default-rack","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"526e2d40-3ec9-44fd-bc60-a703acd16749","bytes":{"validUtf8":true,"empty":false}}}],"lastLeaderElection":0,"duration":963679,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"adb25138-6c7f-4064-8161-036ef000c92a","status":"OPEN","leaderNode":"ozone-datanode-1.ozone_default","datanodes":[{"level":3,"parent":null,"cost":0,"id":{"uuid":"526e2d40-3ec9-44fd-bc60-a703acd16749","id":"526e2d40-3ec9-44fd-bc60-a703acd16749","byteString":{"validUtf8":true,"empty":false}},"ipAddress":"172.18.0.3","hostName":"ozone-datanode-1.ozone_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":2,"uuid":"526e2d40-3ec9-44fd-bc60-a703acd16749","uuidString":"526e2d40-3ec9-44fd-bc60-a703acd16749","decommissioned":false,"ratisPort":{"name":"RATIS","value":9858},"hostNameAsByteString":{"string":"ozone-datanode-1.ozone_default","bytes":{"validUtf8":true,"empty":false}},"ipAddressAsByteString":{"string":"172.18.0.3","bytes":{"validUtf8":true,"empty":false}},"restPort":null,"standalonePort":{"name":"STANDALONE","value":9859},"maintenance":false,"networkName":"526e2d40-3ec9-44fd-bc60-a703acd16749","networkLocation":"/default-rack","networkFullPath":"/default-rack/526e2d40-3ec9-44fd-bc60-a703acd16749","numOfLeaves":1,"networkLocationAsByteString":{"string":"/default-rack","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"526e2d40-3ec9-44fd-bc60-a703acd16749","bytes":{"validUtf8":true,"empty":false}}}],"lastLeaderElection":0,"duration":963653,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":1},{"pipelineId":"e03cbc28-4efd-45b8-bc92-8cf72d0ea49d","status":"OPEN","leaderNode":"ozone-datanode-2.ozone_default","datanodes":[{"level":3,"parent":null,"cost":0,"id":{"uuid":"8f586065-24de-4cdf-b939-c27c2622de8c","id":"8f586065-24de-4cdf-b939-c27c2622de8c","byteString":{"validUtf8":true,"empty":false}},"ipAddress":"172.18.0.8","hostName":"ozone-datanode-2.ozone_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":2,"uuid":"8f586065-24de-4cdf-b939-c27c2622de8c","uuidString":"8f586065-24de-4cdf-b939-c27c2622de8c","decommissioned":false,"ratisPort":{"name":"RATIS","value":9858},"hostNameAsByteString":{"string":"ozone-datanode-2.ozone_default","bytes":{"validUtf8":true,"empty":false}},"ipAddressAsByteString":{"string":"172.18.0.8","bytes":{"validUtf8":true,"empty":false}},"restPort":null,"standalonePort":{"name":"STANDALONE","value":9859},"maintenance":false,"networkName":"8f586065-24de-4cdf-b939-c27c2622de8c","networkLocation":"/default-rack","networkFullPath":"/default-rack/8f586065-24de-4cdf-b939-c27c2622de8c","numOfLeaves":1,"networkLocationAsByteString":{"string":"/default-rack","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"8f586065-24de-4cdf-b939-c27c2622de8c","bytes":{"validUtf8":true,"empty":false}}}],"lastLeaderElection":0,"duration":964034,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"7e9ac445-3c44-45fb-ba2d-673caca478b9","status":"OPEN","leaderNode":"ozone-datanode-3.ozone_default","datanodes":[{"level":3,"parent":null,"cost":0,"id":{"uuid":"b971e0e8-290a-4bf1-91c9-adf5d158aede","id":"b971e0e8-290a-4bf1-91c9-adf5d158aede","byteString":{"validUtf8":true,"empty":false}},"ipAddress":"172.18.0.9","hostName":"ozone-datanode-3.ozone_default","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":19864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"RATIS_DATASTREAM","value":9855},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":2,"uuid":"b971e0e8-290a-4bf1-91c9-adf5d158aede","uuidString":"b971e0e8-290a-4bf1-91c9-adf5d158aede","decommissioned":false,"ratisPort":{"name":"RATIS","value":9858},"hostNameAsByteString":{"string":"ozone-datanode-3.ozone_default","bytes":{"validUtf8":true,"empty":false}},"ipAddressAsByteString":{"string":"172.18.0.9","bytes":{"validUtf8":true,"empty":false}},"restPort":null,"standalonePort":{"name":"STANDALONE","value":9859},"maintenance":false,"networkName":"b971e0e8-290a-4bf1-91c9-adf5d158aede","networkLocation":"/default-rack","networkFullPath":"/default-rack/b971e0e8-290a-4bf1-91c9-adf5d158aede","numOfLeaves":1,"networkLocationAsByteString":{"string":"/default-rack","bytes":{"validUtf8":true,"empty":false}},"networkNameAsByteString":{"string":"b971e0e8-290a-4bf1-91c9-adf5d158aede","bytes":{"validUtf8":true,"empty":false}}}],"lastLeaderElection":0,"duration":963635,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20250531 04:31:07.418" endtime="20250531 04:31:07.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.419" endtime="20250531 04:31:07.419"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.383" endtime="20250531 04:31:07.419"/>
</kw>
<msg timestamp="20250531 04:31:07.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.383" endtime="20250531 04:31:07.419"/>
</kw>
<msg timestamp="20250531 04:31:07.420" level="INFO">${result} = {"totalCount":4,"pipelines":[{"pipelineId":"f4adfb1c-58f6-4ee8-8d2d-e1a5501f7998","status":"OPEN","leaderNode":"ozone-datanode-1.ozone_default","datanodes":[{"level":3,"parent":null,"cost":0,"id":{"uu...</msg>
<status status="PASS" starttime="20250531 04:31:07.383" endtime="20250531 04:31:07.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.420" endtime="20250531 04:31:07.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.420" endtime="20250531 04:31:07.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.420" endtime="20250531 04:31:07.421"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]1</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250531 04:31:07.421" endtime="20250531 04:31:07.421"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]2</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250531 04:31:07.421" endtime="20250531 04:31:07.421"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode[-_]3</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250531 04:31:07.421" endtime="20250531 04:31:07.421"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.425" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.449" level="INFO">${output} = {"deletedDirs":0,"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":230638397916,"used":4069882,"remaining":66931175424,"committed":4290909702},"containers":2,"missingCo...</msg>
<status status="PASS" starttime="20250531 04:31:07.422" endtime="20250531 04:31:07.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.450" level="INFO">{"deletedDirs":0,"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":230638397916,"used":4069882,"remaining":66931175424,"committed":4290909702},"containers":2,"missingContainers":0,"openContainers":2,"deletedContainers":0,"volumes":8,"buckets":21,"keys":121,"keysPendingDeletion":2,"scmServiceId":null,"omServiceId":null}</msg>
<status status="PASS" starttime="20250531 04:31:07.450" endtime="20250531 04:31:07.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.450" endtime="20250531 04:31:07.451"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.422" endtime="20250531 04:31:07.451"/>
</kw>
<msg timestamp="20250531 04:31:07.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.422" endtime="20250531 04:31:07.451"/>
</kw>
<msg timestamp="20250531 04:31:07.451" level="INFO">${result} = {"deletedDirs":0,"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":230638397916,"used":4069882,"remaining":66931175424,"committed":4290909702},"containers":2,"missingCo...</msg>
<status status="PASS" starttime="20250531 04:31:07.422" endtime="20250531 04:31:07.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.451" endtime="20250531 04:31:07.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.452" endtime="20250531 04:31:07.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.452" endtime="20250531 04:31:07.452"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.455" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.469" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"526e2d40-3ec9-44fd-bc60-a703acd16749","datanodeHost":"ozone-datanode-1.ozone_default","firstSeenTime":1748664935422,"lastSeenTime":1748665836583,"lastBcsId":523,"stat...</msg>
<status status="PASS" starttime="20250531 04:31:07.453" endtime="20250531 04:31:07.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.470" level="INFO">[{"containerId":1,"datanodeUuid":"526e2d40-3ec9-44fd-bc60-a703acd16749","datanodeHost":"ozone-datanode-1.ozone_default","firstSeenTime":1748664935422,"lastSeenTime":1748665836583,"lastBcsId":523,"state":"OPEN"},{"containerId":1,"datanodeUuid":"8f586065-24de-4cdf-b939-c27c2622de8c","datanodeHost":"ozone-datanode-2.ozone_default","firstSeenTime":1748664935546,"lastSeenTime":1748665865567,"lastBcsId":523,"state":"OPEN"},{"containerId":1,"datanodeUuid":"b971e0e8-290a-4bf1-91c9-adf5d158aede","datanodeHost":"ozone-datanode-3.ozone_default","firstSeenTime":1748664935536,"lastSeenTime":1748665825559,"lastBcsId":523,"state":"OPEN"}]</msg>
<status status="PASS" starttime="20250531 04:31:07.469" endtime="20250531 04:31:07.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.470" endtime="20250531 04:31:07.470"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.453" endtime="20250531 04:31:07.470"/>
</kw>
<msg timestamp="20250531 04:31:07.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.453" endtime="20250531 04:31:07.470"/>
</kw>
<msg timestamp="20250531 04:31:07.471" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"526e2d40-3ec9-44fd-bc60-a703acd16749","datanodeHost":"ozone-datanode-1.ozone_default","firstSeenTime":1748664935422,"lastSeenTime":1748665836583,"lastBcsId":523,"stat...</msg>
<status status="PASS" starttime="20250531 04:31:07.452" endtime="20250531 04:31:07.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.471" endtime="20250531 04:31:07.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:07.349" endtime="20250531 04:31:07.471"/>
</test>
<test id="s1-s7-s1-t3" name="Check if Recon Web UI is up" line="106">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:07.472" endtime="20250531 04:31:07.472"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.476" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.487" level="INFO">${output} = &lt;!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding...</msg>
<status status="PASS" starttime="20250531 04:31:07.473" endtime="20250531 04:31:07.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.488" level="INFO">&lt;!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
  --&gt;
  &lt;!DOCTYPE html&gt;
  &lt;html lang="en"&gt;
    &lt;head&gt;
      &lt;!---
        Vite is missing global field unlike webpack
        We are manually declaring to fix this
      --&gt;
      &lt;script&gt;
        var global = global || window;
      &lt;/script&gt;
      &lt;meta charset="utf-8" /&gt;
      &lt;link rel="shortcut icon" href="/favicon.ico" /&gt;
      &lt;meta name="viewport" content="width=device-width, initial-scale=1" /&gt;
      &lt;meta name="theme-color" content="#000000" /&gt;
      &lt;!--
        manifest.json provides metadata used when your web app is installed on a
        user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
      --&gt;
      &lt;link rel="manifest" href="/manifest.json" /&gt;
      &lt;!--
        Notice the use of %PUBLIC_URL% in the tags above.
        It will be replaced with the URL of the `public` folder during the build.
        Only files inside the `public` folder can be referenced from the HTML.
  
        Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
        work correctly both with client-side routing and a non-root public URL.
        Learn how to configure a non-root public URL by running `npm run build`.
      --&gt;
  
      &lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500" /&gt;
      &lt;title&gt;Ozone Recon&lt;/title&gt;
      &lt;script type="module" crossorigin src="/static/js/index-da618873.js"&gt;&lt;/script&gt;
      &lt;link rel="modulepreload" crossorigin href="/static/js/vendor-4ae33da8.js"&gt;
      &lt;link rel="stylesheet" href="/static/css/index-b83a08bf.css"&gt;
    &lt;/head&gt;
    &lt;body&gt;
      &lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;
      &lt;div id="root"&gt;&lt;/div&gt;
      
    &lt;/body&gt;
  &lt;/html&gt;
  </msg>
<status status="PASS" starttime="20250531 04:31:07.487" endtime="20250531 04:31:07.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.488" endtime="20250531 04:31:07.488"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.473" endtime="20250531 04:31:07.488"/>
</kw>
<msg timestamp="20250531 04:31:07.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.473" endtime="20250531 04:31:07.488"/>
</kw>
<msg timestamp="20250531 04:31:07.489" level="INFO">${result} = &lt;!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding...</msg>
<status status="PASS" starttime="20250531 04:31:07.472" endtime="20250531 04:31:07.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.489" endtime="20250531 04:31:07.489"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:07.471" endtime="20250531 04:31:07.489"/>
</test>
<test id="s1-s7-s1-t4" name="Check web UI access" line="111">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.493" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.497" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:07.491" endtime="20250531 04:31:07.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.497" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:07.497" endtime="20250531 04:31:07.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.497" endtime="20250531 04:31:07.498"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.490" endtime="20250531 04:31:07.498"/>
</kw>
<msg timestamp="20250531 04:31:07.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.490" endtime="20250531 04:31:07.498"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.490" endtime="20250531 04:31:07.498"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.501" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.509" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.499" endtime="20250531 04:31:07.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.509" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:07.509" endtime="20250531 04:31:07.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.510" endtime="20250531 04:31:07.510"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.499" endtime="20250531 04:31:07.510"/>
</kw>
<msg timestamp="20250531 04:31:07.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.499" endtime="20250531 04:31:07.510"/>
</kw>
<msg timestamp="20250531 04:31:07.510" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.499" endtime="20250531 04:31:07.510"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:07.511" endtime="20250531 04:31:07.511"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:07.510" endtime="20250531 04:31:07.511"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.511" endtime="20250531 04:31:07.511"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.511" endtime="20250531 04:31:07.511"/>
</branch>
<status status="PASS" starttime="20250531 04:31:07.510" endtime="20250531 04:31:07.511"/>
</if>
<status status="PASS" starttime="20250531 04:31:07.498" endtime="20250531 04:31:07.511"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:07.512" endtime="20250531 04:31:07.512"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.511" endtime="20250531 04:31:07.512"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.515" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.522" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.513" endtime="20250531 04:31:07.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.523" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:07.523" endtime="20250531 04:31:07.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.523" endtime="20250531 04:31:07.524"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.513" endtime="20250531 04:31:07.524"/>
</kw>
<msg timestamp="20250531 04:31:07.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.512" endtime="20250531 04:31:07.524"/>
</kw>
<msg timestamp="20250531 04:31:07.524" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.512" endtime="20250531 04:31:07.524"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:07.524" endtime="20250531 04:31:07.524"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:07.524" endtime="20250531 04:31:07.524"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.524" endtime="20250531 04:31:07.525"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.524" endtime="20250531 04:31:07.525"/>
</branch>
<status status="PASS" starttime="20250531 04:31:07.524" endtime="20250531 04:31:07.525"/>
</if>
<status status="PASS" starttime="20250531 04:31:07.512" endtime="20250531 04:31:07.525"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:07.489" endtime="20250531 04:31:07.525"/>
</test>
<test id="s1-s7-s1-t5" name="Check admin only api access" line="119">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.528" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.532" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:07.526" endtime="20250531 04:31:07.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.533" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:07.532" endtime="20250531 04:31:07.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.533" endtime="20250531 04:31:07.533"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.526" endtime="20250531 04:31:07.533"/>
</kw>
<msg timestamp="20250531 04:31:07.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.526" endtime="20250531 04:31:07.534"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.526" endtime="20250531 04:31:07.534"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.537" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.545" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.535" endtime="20250531 04:31:07.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.546" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:07.546" endtime="20250531 04:31:07.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.546" endtime="20250531 04:31:07.546"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.534" endtime="20250531 04:31:07.547"/>
</kw>
<msg timestamp="20250531 04:31:07.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.534" endtime="20250531 04:31:07.547"/>
</kw>
<msg timestamp="20250531 04:31:07.547" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.534" endtime="20250531 04:31:07.547"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:07.547" endtime="20250531 04:31:07.547"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:07.547" endtime="20250531 04:31:07.547"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.547" endtime="20250531 04:31:07.548"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.547" endtime="20250531 04:31:07.548"/>
</branch>
<status status="PASS" starttime="20250531 04:31:07.547" endtime="20250531 04:31:07.548"/>
</if>
<status status="PASS" starttime="20250531 04:31:07.534" endtime="20250531 04:31:07.548"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:07.548" endtime="20250531 04:31:07.548"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.548" endtime="20250531 04:31:07.548"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.551" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.560" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.549" endtime="20250531 04:31:07.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.561" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:07.560" endtime="20250531 04:31:07.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.561" endtime="20250531 04:31:07.562"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.549" endtime="20250531 04:31:07.562"/>
</kw>
<msg timestamp="20250531 04:31:07.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.549" endtime="20250531 04:31:07.562"/>
</kw>
<msg timestamp="20250531 04:31:07.562" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.549" endtime="20250531 04:31:07.562"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:07.562" endtime="20250531 04:31:07.562"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:07.562" endtime="20250531 04:31:07.562"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.562" endtime="20250531 04:31:07.563"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.562" endtime="20250531 04:31:07.563"/>
</branch>
<status status="PASS" starttime="20250531 04:31:07.562" endtime="20250531 04:31:07.563"/>
</if>
<status status="PASS" starttime="20250531 04:31:07.548" endtime="20250531 04:31:07.563"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:07.563" endtime="20250531 04:31:07.563"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.563" endtime="20250531 04:31:07.563"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.566" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.574" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.564" endtime="20250531 04:31:07.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.575" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:07.574" endtime="20250531 04:31:07.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.575" endtime="20250531 04:31:07.575"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.564" endtime="20250531 04:31:07.575"/>
</kw>
<msg timestamp="20250531 04:31:07.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.564" endtime="20250531 04:31:07.575"/>
</kw>
<msg timestamp="20250531 04:31:07.576" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.564" endtime="20250531 04:31:07.576"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:07.576" endtime="20250531 04:31:07.576"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:07.576" endtime="20250531 04:31:07.576"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.576" endtime="20250531 04:31:07.576"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.576" endtime="20250531 04:31:07.576"/>
</branch>
<status status="PASS" starttime="20250531 04:31:07.576" endtime="20250531 04:31:07.576"/>
</if>
<status status="PASS" starttime="20250531 04:31:07.563" endtime="20250531 04:31:07.576"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:07.577" endtime="20250531 04:31:07.577"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.577" endtime="20250531 04:31:07.577"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.580" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.589" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.578" endtime="20250531 04:31:07.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.589" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:07.589" endtime="20250531 04:31:07.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.590" endtime="20250531 04:31:07.590"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.578" endtime="20250531 04:31:07.590"/>
</kw>
<msg timestamp="20250531 04:31:07.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.578" endtime="20250531 04:31:07.590"/>
</kw>
<msg timestamp="20250531 04:31:07.590" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.577" endtime="20250531 04:31:07.590"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:07.591" endtime="20250531 04:31:07.591"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:07.591" endtime="20250531 04:31:07.591"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.591" endtime="20250531 04:31:07.591"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.591" endtime="20250531 04:31:07.591"/>
</branch>
<status status="PASS" starttime="20250531 04:31:07.590" endtime="20250531 04:31:07.591"/>
</if>
<status status="PASS" starttime="20250531 04:31:07.577" endtime="20250531 04:31:07.591"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:07.525" endtime="20250531 04:31:07.591"/>
</test>
<test id="s1-s7-s1-t6" name="Check unhealthy, (admin) api access" line="132">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.595" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.599" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:07.593" endtime="20250531 04:31:07.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.600" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:07.600" endtime="20250531 04:31:07.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.600" endtime="20250531 04:31:07.601"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.593" endtime="20250531 04:31:07.601"/>
</kw>
<msg timestamp="20250531 04:31:07.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.593" endtime="20250531 04:31:07.601"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.592" endtime="20250531 04:31:07.601"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.604" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.626" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.602" endtime="20250531 04:31:07.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.627" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:07.626" endtime="20250531 04:31:07.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.627" endtime="20250531 04:31:07.627"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.602" endtime="20250531 04:31:07.628"/>
</kw>
<msg timestamp="20250531 04:31:07.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.602" endtime="20250531 04:31:07.628"/>
</kw>
<msg timestamp="20250531 04:31:07.628" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.601" endtime="20250531 04:31:07.628"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:07.628" endtime="20250531 04:31:07.628"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:07.628" endtime="20250531 04:31:07.628"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.628" endtime="20250531 04:31:07.629"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.628" endtime="20250531 04:31:07.629"/>
</branch>
<status status="PASS" starttime="20250531 04:31:07.628" endtime="20250531 04:31:07.629"/>
</if>
<status status="PASS" starttime="20250531 04:31:07.601" endtime="20250531 04:31:07.629"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:07.629" endtime="20250531 04:31:07.629"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.629" endtime="20250531 04:31:07.629"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.633" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.643" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.631" endtime="20250531 04:31:07.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.643" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:07.643" endtime="20250531 04:31:07.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.644" endtime="20250531 04:31:07.644"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.630" endtime="20250531 04:31:07.644"/>
</kw>
<msg timestamp="20250531 04:31:07.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.630" endtime="20250531 04:31:07.644"/>
</kw>
<msg timestamp="20250531 04:31:07.644" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.630" endtime="20250531 04:31:07.644"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:07.645" endtime="20250531 04:31:07.645"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:07.644" endtime="20250531 04:31:07.645"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.645" endtime="20250531 04:31:07.645"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.645" endtime="20250531 04:31:07.645"/>
</branch>
<status status="PASS" starttime="20250531 04:31:07.644" endtime="20250531 04:31:07.645"/>
</if>
<status status="PASS" starttime="20250531 04:31:07.629" endtime="20250531 04:31:07.645"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:07.645" endtime="20250531 04:31:07.646"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.645" endtime="20250531 04:31:07.646"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.649" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.658" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.647" endtime="20250531 04:31:07.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.658" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:07.658" endtime="20250531 04:31:07.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.658" endtime="20250531 04:31:07.659"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.647" endtime="20250531 04:31:07.659"/>
</kw>
<msg timestamp="20250531 04:31:07.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.646" endtime="20250531 04:31:07.659"/>
</kw>
<msg timestamp="20250531 04:31:07.659" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.646" endtime="20250531 04:31:07.659"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:07.659" endtime="20250531 04:31:07.659"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:07.659" endtime="20250531 04:31:07.660"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.660" endtime="20250531 04:31:07.660"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.660" endtime="20250531 04:31:07.660"/>
</branch>
<status status="PASS" starttime="20250531 04:31:07.659" endtime="20250531 04:31:07.660"/>
</if>
<status status="PASS" starttime="20250531 04:31:07.646" endtime="20250531 04:31:07.660"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:07.660" endtime="20250531 04:31:07.661"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.660" endtime="20250531 04:31:07.661"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.664" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.672" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.662" endtime="20250531 04:31:07.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.673" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:07.673" endtime="20250531 04:31:07.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.673" endtime="20250531 04:31:07.674"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.661" endtime="20250531 04:31:07.674"/>
</kw>
<msg timestamp="20250531 04:31:07.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.661" endtime="20250531 04:31:07.674"/>
</kw>
<msg timestamp="20250531 04:31:07.674" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.661" endtime="20250531 04:31:07.674"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:07.674" endtime="20250531 04:31:07.674"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:07.674" endtime="20250531 04:31:07.674"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.675" endtime="20250531 04:31:07.675"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.674" endtime="20250531 04:31:07.675"/>
</branch>
<status status="PASS" starttime="20250531 04:31:07.674" endtime="20250531 04:31:07.675"/>
</if>
<status status="PASS" starttime="20250531 04:31:07.661" endtime="20250531 04:31:07.675"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:07.592" endtime="20250531 04:31:07.675"/>
</test>
<test id="s1-s7-s1-t7" name="Check normal api access" line="145">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.679" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.682" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:07.677" endtime="20250531 04:31:07.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.683" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:07.683" endtime="20250531 04:31:07.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.683" endtime="20250531 04:31:07.684"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.676" endtime="20250531 04:31:07.684"/>
</kw>
<msg timestamp="20250531 04:31:07.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.676" endtime="20250531 04:31:07.684"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.676" endtime="20250531 04:31:07.684"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.687" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.698" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.685" endtime="20250531 04:31:07.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.699" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:07.698" endtime="20250531 04:31:07.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.699" endtime="20250531 04:31:07.699"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.685" endtime="20250531 04:31:07.699"/>
</kw>
<msg timestamp="20250531 04:31:07.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.685" endtime="20250531 04:31:07.699"/>
</kw>
<msg timestamp="20250531 04:31:07.699" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.684" endtime="20250531 04:31:07.699"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:07.700" endtime="20250531 04:31:07.700"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:07.699" endtime="20250531 04:31:07.700"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.700" endtime="20250531 04:31:07.700"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.700" endtime="20250531 04:31:07.700"/>
</branch>
<status status="PASS" starttime="20250531 04:31:07.699" endtime="20250531 04:31:07.700"/>
</if>
<status status="PASS" starttime="20250531 04:31:07.684" endtime="20250531 04:31:07.700"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:07.701" endtime="20250531 04:31:07.701"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.700" endtime="20250531 04:31:07.701"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.704" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.715" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.702" endtime="20250531 04:31:07.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.716" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:07.716" endtime="20250531 04:31:07.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.716" endtime="20250531 04:31:07.717"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.702" endtime="20250531 04:31:07.717"/>
</kw>
<msg timestamp="20250531 04:31:07.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.702" endtime="20250531 04:31:07.717"/>
</kw>
<msg timestamp="20250531 04:31:07.717" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:07.701" endtime="20250531 04:31:07.717"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:07.718" endtime="20250531 04:31:07.718"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:07.718" endtime="20250531 04:31:07.718"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:07.718" endtime="20250531 04:31:07.718"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.718" endtime="20250531 04:31:07.718"/>
</branch>
<status status="PASS" starttime="20250531 04:31:07.717" endtime="20250531 04:31:07.718"/>
</if>
<status status="PASS" starttime="20250531 04:31:07.701" endtime="20250531 04:31:07.718"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:07.675" endtime="20250531 04:31:07.719"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20250531 04:30:06.217" endtime="20250531 04:31:07.720"/>
</suite>
<suite id="s1-s7-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s7-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.731" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:07.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:07.735" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:07.729" endtime="20250531 04:31:07.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:07.736" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:07.736" endtime="20250531 04:31:07.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:07.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:07.736" endtime="20250531 04:31:07.736"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.728" endtime="20250531 04:31:07.737"/>
</kw>
<msg timestamp="20250531 04:31:07.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.728" endtime="20250531 04:31:07.737"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.728" endtime="20250531 04:31:07.737"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:07.737" endtime="20250531 04:31:07.737"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.737" endtime="20250531 04:31:07.737"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:31:07.738" level="INFO">${random} = ktlzs</msg>
<status status="PASS" starttime="20250531 04:31:07.738" endtime="20250531 04:31:07.738"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250531 04:31:07.738" level="INFO">${VOLUME} = vol-ktlzs</msg>
<status status="PASS" starttime="20250531 04:31:07.738" endtime="20250531 04:31:07.738"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:07.741" level="INFO">Running command 'ozone sh volume create /vol-ktlzs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:10.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:10.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:31:07.739" endtime="20250531 04:31:10.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:10.586" level="INFO"/>
<status status="PASS" starttime="20250531 04:31:10.586" endtime="20250531 04:31:10.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:10.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:10.586" endtime="20250531 04:31:10.587"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.739" endtime="20250531 04:31:10.587"/>
</kw>
<msg timestamp="20250531 04:31:10.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:07.739" endtime="20250531 04:31:10.587"/>
</kw>
<msg timestamp="20250531 04:31:10.587" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:31:07.738" endtime="20250531 04:31:10.587"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:10.588" endtime="20250531 04:31:10.588"/>
</kw>
<status status="PASS" starttime="20250531 04:31:07.737" endtime="20250531 04:31:10.588"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:07.728" endtime="20250531 04:31:10.588"/>
</test>
<test id="s1-s7-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250531 04:31:10.589" level="INFO">${random} = sfvpz</msg>
<status status="PASS" starttime="20250531 04:31:10.589" endtime="20250531 04:31:10.589"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250531 04:31:10.590" level="INFO">${BUCKET} = buc-sfvpz</msg>
<status status="PASS" starttime="20250531 04:31:10.590" endtime="20250531 04:31:10.590"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:10.593" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-ktlzs/buc-sfvpz 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:13.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:13.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:31:10.591" endtime="20250531 04:31:13.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:13.276" level="INFO"/>
<status status="PASS" starttime="20250531 04:31:13.275" endtime="20250531 04:31:13.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:13.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:13.276" endtime="20250531 04:31:13.276"/>
</kw>
<status status="PASS" starttime="20250531 04:31:10.590" endtime="20250531 04:31:13.276"/>
</kw>
<msg timestamp="20250531 04:31:13.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:10.590" endtime="20250531 04:31:13.276"/>
</kw>
<msg timestamp="20250531 04:31:13.276" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:31:10.590" endtime="20250531 04:31:13.276"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:13.277" endtime="20250531 04:31:13.277"/>
</kw>
<status status="PASS" starttime="20250531 04:31:10.589" endtime="20250531 04:31:13.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:10.588" endtime="20250531 04:31:13.277"/>
</test>
<test id="s1-s7-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:13.281" level="INFO">Running command 'ozone sh key put /vol-ktlzs/buc-sfvpz/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:17.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:17.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:31:13.279" endtime="20250531 04:31:17.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:17.523" level="INFO"/>
<status status="PASS" starttime="20250531 04:31:17.523" endtime="20250531 04:31:17.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:17.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:17.523" endtime="20250531 04:31:17.524"/>
</kw>
<status status="PASS" starttime="20250531 04:31:13.279" endtime="20250531 04:31:17.524"/>
</kw>
<msg timestamp="20250531 04:31:17.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:13.279" endtime="20250531 04:31:17.524"/>
</kw>
<msg timestamp="20250531 04:31:17.524" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:31:13.278" endtime="20250531 04:31:17.524"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:17.524" endtime="20250531 04:31:17.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:17.528" level="INFO">Running command 'ozone sh key put /vol-ktlzs/buc-sfvpz/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:21.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:21.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250531 04:31:17.526" endtime="20250531 04:31:21.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:21.886" level="INFO"/>
<status status="PASS" starttime="20250531 04:31:21.885" endtime="20250531 04:31:21.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:21.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:21.886" endtime="20250531 04:31:21.886"/>
</kw>
<status status="PASS" starttime="20250531 04:31:17.525" endtime="20250531 04:31:21.886"/>
</kw>
<msg timestamp="20250531 04:31:21.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:17.525" endtime="20250531 04:31:21.886"/>
</kw>
<msg timestamp="20250531 04:31:21.887" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250531 04:31:17.525" endtime="20250531 04:31:21.887"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:21.887" endtime="20250531 04:31:21.887"/>
</kw>
<status status="PASS" starttime="20250531 04:31:13.278" endtime="20250531 04:31:21.887"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:13.277" endtime="20250531 04:31:21.887"/>
</test>
<test id="s1-s7-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:21.892" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:21.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:21.897" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:21.890" endtime="20250531 04:31:21.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:21.898" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:21.898" endtime="20250531 04:31:21.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:21.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:21.898" endtime="20250531 04:31:21.899"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.889" endtime="20250531 04:31:21.899"/>
</kw>
<msg timestamp="20250531 04:31:21.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:21.889" endtime="20250531 04:31:21.899"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.889" endtime="20250531 04:31:21.899"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:21.903" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:21.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:21.931" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:21.901" endtime="20250531 04:31:21.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:21.932" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:21.931" endtime="20250531 04:31:21.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:21.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:21.932" endtime="20250531 04:31:21.932"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.900" endtime="20250531 04:31:21.932"/>
</kw>
<msg timestamp="20250531 04:31:21.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:21.900" endtime="20250531 04:31:21.932"/>
</kw>
<msg timestamp="20250531 04:31:21.933" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:21.900" endtime="20250531 04:31:21.933"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:21.933" endtime="20250531 04:31:21.933"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:21.933" endtime="20250531 04:31:21.933"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:21.933" endtime="20250531 04:31:21.933"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.933" endtime="20250531 04:31:21.933"/>
</branch>
<status status="PASS" starttime="20250531 04:31:21.933" endtime="20250531 04:31:21.934"/>
</if>
<status status="PASS" starttime="20250531 04:31:21.899" endtime="20250531 04:31:21.934"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:21.934" endtime="20250531 04:31:21.934"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.934" endtime="20250531 04:31:21.934"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:21.938" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:21.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:21.951" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:21.936" endtime="20250531 04:31:21.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:21.952" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:21.952" endtime="20250531 04:31:21.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:21.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:21.952" endtime="20250531 04:31:21.953"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.935" endtime="20250531 04:31:21.953"/>
</kw>
<msg timestamp="20250531 04:31:21.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:21.935" endtime="20250531 04:31:21.953"/>
</kw>
<msg timestamp="20250531 04:31:21.953" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:21.935" endtime="20250531 04:31:21.953"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:21.953" endtime="20250531 04:31:21.954"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:21.953" endtime="20250531 04:31:21.954"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:21.954" endtime="20250531 04:31:21.954"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.954" endtime="20250531 04:31:21.954"/>
</branch>
<status status="PASS" starttime="20250531 04:31:21.953" endtime="20250531 04:31:21.954"/>
</if>
<status status="PASS" starttime="20250531 04:31:21.934" endtime="20250531 04:31:21.954"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:21.954" endtime="20250531 04:31:21.955"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.954" endtime="20250531 04:31:21.955"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:21.958" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:21.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:21.970" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:21.956" endtime="20250531 04:31:21.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:21.971" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:21.971" endtime="20250531 04:31:21.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:21.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:21.971" endtime="20250531 04:31:21.972"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.956" endtime="20250531 04:31:21.972"/>
</kw>
<msg timestamp="20250531 04:31:21.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:21.955" endtime="20250531 04:31:21.972"/>
</kw>
<msg timestamp="20250531 04:31:21.972" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:21.955" endtime="20250531 04:31:21.972"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:21.972" endtime="20250531 04:31:21.972"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:21.972" endtime="20250531 04:31:21.972"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:21.973" endtime="20250531 04:31:21.973"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.972" endtime="20250531 04:31:21.973"/>
</branch>
<status status="PASS" starttime="20250531 04:31:21.972" endtime="20250531 04:31:21.973"/>
</if>
<status status="PASS" starttime="20250531 04:31:21.955" endtime="20250531 04:31:21.973"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:21.973" endtime="20250531 04:31:21.974"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.973" endtime="20250531 04:31:21.974"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:21.977" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:21.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:21.990" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:21.975" endtime="20250531 04:31:21.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:21.991" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:21.991" endtime="20250531 04:31:21.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:21.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:21.991" endtime="20250531 04:31:21.992"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.974" endtime="20250531 04:31:21.992"/>
</kw>
<msg timestamp="20250531 04:31:21.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:21.974" endtime="20250531 04:31:21.992"/>
</kw>
<msg timestamp="20250531 04:31:21.992" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:21.974" endtime="20250531 04:31:21.992"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:21.992" endtime="20250531 04:31:21.992"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:21.992" endtime="20250531 04:31:21.992"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:21.993" endtime="20250531 04:31:21.993"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.992" endtime="20250531 04:31:21.993"/>
</branch>
<status status="PASS" starttime="20250531 04:31:21.992" endtime="20250531 04:31:21.993"/>
</if>
<status status="PASS" starttime="20250531 04:31:21.974" endtime="20250531 04:31:21.993"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.888" endtime="20250531 04:31:21.993"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:21.888" endtime="20250531 04:31:21.993"/>
</test>
<test id="s1-s7-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:21.997" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.001" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:21.995" endtime="20250531 04:31:22.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.002" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:22.002" endtime="20250531 04:31:22.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.002" endtime="20250531 04:31:22.003"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.995" endtime="20250531 04:31:22.003"/>
</kw>
<msg timestamp="20250531 04:31:22.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:21.994" endtime="20250531 04:31:22.003"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.994" endtime="20250531 04:31:22.003"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.006" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.027" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.004" endtime="20250531 04:31:22.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.028" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:22.028" endtime="20250531 04:31:22.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.028" endtime="20250531 04:31:22.029"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.004" endtime="20250531 04:31:22.029"/>
</kw>
<msg timestamp="20250531 04:31:22.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.004" endtime="20250531 04:31:22.029"/>
</kw>
<msg timestamp="20250531 04:31:22.029" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.003" endtime="20250531 04:31:22.029"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:22.029" endtime="20250531 04:31:22.029"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:22.029" endtime="20250531 04:31:22.029"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.029" endtime="20250531 04:31:22.030"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.029" endtime="20250531 04:31:22.030"/>
</branch>
<status status="PASS" starttime="20250531 04:31:22.029" endtime="20250531 04:31:22.030"/>
</if>
<status status="PASS" starttime="20250531 04:31:22.003" endtime="20250531 04:31:22.030"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:22.030" endtime="20250531 04:31:22.030"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.030" endtime="20250531 04:31:22.030"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.034" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.048" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.031" endtime="20250531 04:31:22.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.049" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:22.049" endtime="20250531 04:31:22.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.049" endtime="20250531 04:31:22.050"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.031" endtime="20250531 04:31:22.050"/>
</kw>
<msg timestamp="20250531 04:31:22.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.031" endtime="20250531 04:31:22.050"/>
</kw>
<msg timestamp="20250531 04:31:22.050" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.031" endtime="20250531 04:31:22.050"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:22.050" endtime="20250531 04:31:22.050"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:22.050" endtime="20250531 04:31:22.050"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.051" endtime="20250531 04:31:22.051"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.051" endtime="20250531 04:31:22.051"/>
</branch>
<status status="PASS" starttime="20250531 04:31:22.050" endtime="20250531 04:31:22.051"/>
</if>
<status status="PASS" starttime="20250531 04:31:22.030" endtime="20250531 04:31:22.051"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:22.051" endtime="20250531 04:31:22.052"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.051" endtime="20250531 04:31:22.052"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.055" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.068" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.053" endtime="20250531 04:31:22.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.069" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:22.068" endtime="20250531 04:31:22.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.069" endtime="20250531 04:31:22.069"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.052" endtime="20250531 04:31:22.069"/>
</kw>
<msg timestamp="20250531 04:31:22.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.052" endtime="20250531 04:31:22.069"/>
</kw>
<msg timestamp="20250531 04:31:22.069" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.052" endtime="20250531 04:31:22.069"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:22.070" endtime="20250531 04:31:22.070"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:22.070" endtime="20250531 04:31:22.070"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.070" endtime="20250531 04:31:22.070"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.070" endtime="20250531 04:31:22.070"/>
</branch>
<status status="PASS" starttime="20250531 04:31:22.070" endtime="20250531 04:31:22.070"/>
</if>
<status status="PASS" starttime="20250531 04:31:22.052" endtime="20250531 04:31:22.070"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:22.071" endtime="20250531 04:31:22.071"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.070" endtime="20250531 04:31:22.071"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.074" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.086" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.072" endtime="20250531 04:31:22.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.087" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:22.087" endtime="20250531 04:31:22.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.087" endtime="20250531 04:31:22.088"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.072" endtime="20250531 04:31:22.088"/>
</kw>
<msg timestamp="20250531 04:31:22.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.072" endtime="20250531 04:31:22.088"/>
</kw>
<msg timestamp="20250531 04:31:22.088" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.071" endtime="20250531 04:31:22.088"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:22.089" endtime="20250531 04:31:22.089"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:22.088" endtime="20250531 04:31:22.089"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.089" endtime="20250531 04:31:22.089"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.089" endtime="20250531 04:31:22.089"/>
</branch>
<status status="PASS" starttime="20250531 04:31:22.088" endtime="20250531 04:31:22.089"/>
</if>
<status status="PASS" starttime="20250531 04:31:22.071" endtime="20250531 04:31:22.089"/>
</kw>
<status status="PASS" starttime="20250531 04:31:21.994" endtime="20250531 04:31:22.089"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:21.993" endtime="20250531 04:31:22.089"/>
</test>
<test id="s1-s7-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.093" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.098" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:22.091" endtime="20250531 04:31:22.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.098" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:22.098" endtime="20250531 04:31:22.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.098" endtime="20250531 04:31:22.099"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.091" endtime="20250531 04:31:22.099"/>
</kw>
<msg timestamp="20250531 04:31:22.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.091" endtime="20250531 04:31:22.099"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.091" endtime="20250531 04:31:22.099"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.103" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.141" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.101" endtime="20250531 04:31:22.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.142" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:22.142" endtime="20250531 04:31:22.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.143" endtime="20250531 04:31:22.143"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.100" endtime="20250531 04:31:22.143"/>
</kw>
<msg timestamp="20250531 04:31:22.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.100" endtime="20250531 04:31:22.143"/>
</kw>
<msg timestamp="20250531 04:31:22.143" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.099" endtime="20250531 04:31:22.144"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:22.144" endtime="20250531 04:31:22.144"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:22.144" endtime="20250531 04:31:22.144"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.144" endtime="20250531 04:31:22.145"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.144" endtime="20250531 04:31:22.145"/>
</branch>
<status status="PASS" starttime="20250531 04:31:22.144" endtime="20250531 04:31:22.145"/>
</if>
<status status="PASS" starttime="20250531 04:31:22.099" endtime="20250531 04:31:22.145"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:22.145" endtime="20250531 04:31:22.145"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.145" endtime="20250531 04:31:22.146"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.149" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.179" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.147" endtime="20250531 04:31:22.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.180" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:22.179" endtime="20250531 04:31:22.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.180" endtime="20250531 04:31:22.181"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.147" endtime="20250531 04:31:22.181"/>
</kw>
<msg timestamp="20250531 04:31:22.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.146" endtime="20250531 04:31:22.181"/>
</kw>
<msg timestamp="20250531 04:31:22.181" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.146" endtime="20250531 04:31:22.181"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:22.181" endtime="20250531 04:31:22.181"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:22.181" endtime="20250531 04:31:22.181"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.181" endtime="20250531 04:31:22.182"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.181" endtime="20250531 04:31:22.182"/>
</branch>
<status status="PASS" starttime="20250531 04:31:22.181" endtime="20250531 04:31:22.182"/>
</if>
<status status="PASS" starttime="20250531 04:31:22.146" endtime="20250531 04:31:22.182"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:22.182" endtime="20250531 04:31:22.182"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.182" endtime="20250531 04:31:22.182"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.186" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.217" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.184" endtime="20250531 04:31:22.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.218" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:22.217" endtime="20250531 04:31:22.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.218" endtime="20250531 04:31:22.218"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.183" endtime="20250531 04:31:22.219"/>
</kw>
<msg timestamp="20250531 04:31:22.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.183" endtime="20250531 04:31:22.219"/>
</kw>
<msg timestamp="20250531 04:31:22.219" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.183" endtime="20250531 04:31:22.219"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:22.219" endtime="20250531 04:31:22.220"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:22.219" endtime="20250531 04:31:22.220"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.220" endtime="20250531 04:31:22.220"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.220" endtime="20250531 04:31:22.220"/>
</branch>
<status status="PASS" starttime="20250531 04:31:22.219" endtime="20250531 04:31:22.220"/>
</if>
<status status="PASS" starttime="20250531 04:31:22.183" endtime="20250531 04:31:22.220"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:22.221" endtime="20250531 04:31:22.221"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.220" endtime="20250531 04:31:22.221"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.225" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.256" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.223" endtime="20250531 04:31:22.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.258" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:22.257" endtime="20250531 04:31:22.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.258" endtime="20250531 04:31:22.258"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.222" endtime="20250531 04:31:22.259"/>
</kw>
<msg timestamp="20250531 04:31:22.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.222" endtime="20250531 04:31:22.259"/>
</kw>
<msg timestamp="20250531 04:31:22.259" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.221" endtime="20250531 04:31:22.259"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:22.259" endtime="20250531 04:31:22.260"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:22.259" endtime="20250531 04:31:22.260"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.260" endtime="20250531 04:31:22.260"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.260" endtime="20250531 04:31:22.260"/>
</branch>
<status status="PASS" starttime="20250531 04:31:22.259" endtime="20250531 04:31:22.260"/>
</if>
<status status="PASS" starttime="20250531 04:31:22.221" endtime="20250531 04:31:22.260"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.090" endtime="20250531 04:31:22.260"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:22.090" endtime="20250531 04:31:22.261"/>
</test>
<test id="s1-s7-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.266" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.270" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:22.263" endtime="20250531 04:31:22.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.271" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250531 04:31:22.271" endtime="20250531 04:31:22.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.271" endtime="20250531 04:31:22.271"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.263" endtime="20250531 04:31:22.272"/>
</kw>
<msg timestamp="20250531 04:31:22.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.262" endtime="20250531 04:31:22.272"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.262" endtime="20250531 04:31:22.272"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.275" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.290" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.273" endtime="20250531 04:31:22.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.291" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:22.291" endtime="20250531 04:31:22.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.291" endtime="20250531 04:31:22.292"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.273" endtime="20250531 04:31:22.292"/>
</kw>
<msg timestamp="20250531 04:31:22.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.273" endtime="20250531 04:31:22.292"/>
</kw>
<msg timestamp="20250531 04:31:22.292" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.272" endtime="20250531 04:31:22.292"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:22.293" endtime="20250531 04:31:22.293"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:22.292" endtime="20250531 04:31:22.293"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.293" endtime="20250531 04:31:22.293"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.293" endtime="20250531 04:31:22.293"/>
</branch>
<status status="PASS" starttime="20250531 04:31:22.292" endtime="20250531 04:31:22.293"/>
</if>
<status status="PASS" starttime="20250531 04:31:22.272" endtime="20250531 04:31:22.293"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:22.294" endtime="20250531 04:31:22.294"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.293" endtime="20250531 04:31:22.294"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.298" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.309" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.295" endtime="20250531 04:31:22.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.310" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:22.310" endtime="20250531 04:31:22.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.310" endtime="20250531 04:31:22.311"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.295" endtime="20250531 04:31:22.311"/>
</kw>
<msg timestamp="20250531 04:31:22.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.294" endtime="20250531 04:31:22.311"/>
</kw>
<msg timestamp="20250531 04:31:22.311" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.294" endtime="20250531 04:31:22.311"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:22.312" endtime="20250531 04:31:22.312"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:22.311" endtime="20250531 04:31:22.312"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.312" endtime="20250531 04:31:22.312"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.312" endtime="20250531 04:31:22.312"/>
</branch>
<status status="PASS" starttime="20250531 04:31:22.311" endtime="20250531 04:31:22.312"/>
</if>
<status status="PASS" starttime="20250531 04:31:22.294" endtime="20250531 04:31:22.312"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:22.313" endtime="20250531 04:31:22.313"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.312" endtime="20250531 04:31:22.313"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.317" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.327" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.314" endtime="20250531 04:31:22.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.328" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:22.327" endtime="20250531 04:31:22.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.328" endtime="20250531 04:31:22.329"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.314" endtime="20250531 04:31:22.329"/>
</kw>
<msg timestamp="20250531 04:31:22.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.314" endtime="20250531 04:31:22.329"/>
</kw>
<msg timestamp="20250531 04:31:22.329" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.313" endtime="20250531 04:31:22.329"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:22.329" endtime="20250531 04:31:22.329"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:22.329" endtime="20250531 04:31:22.329"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.330" endtime="20250531 04:31:22.330"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.329" endtime="20250531 04:31:22.330"/>
</branch>
<status status="PASS" starttime="20250531 04:31:22.329" endtime="20250531 04:31:22.330"/>
</if>
<status status="PASS" starttime="20250531 04:31:22.313" endtime="20250531 04:31:22.330"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:31:22.330" endtime="20250531 04:31:22.330"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.330" endtime="20250531 04:31:22.330"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.334" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.345" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.332" endtime="20250531 04:31:22.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.345" level="INFO">200</msg>
<status status="PASS" starttime="20250531 04:31:22.345" endtime="20250531 04:31:22.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.346" endtime="20250531 04:31:22.346"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.331" endtime="20250531 04:31:22.346"/>
</kw>
<msg timestamp="20250531 04:31:22.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.331" endtime="20250531 04:31:22.346"/>
</kw>
<msg timestamp="20250531 04:31:22.346" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250531 04:31:22.331" endtime="20250531 04:31:22.346"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:22.347" endtime="20250531 04:31:22.347"/>
</kw>
<status status="NOT RUN" starttime="20250531 04:31:22.346" endtime="20250531 04:31:22.347"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.347" endtime="20250531 04:31:22.347"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.347" endtime="20250531 04:31:22.347"/>
</branch>
<status status="PASS" starttime="20250531 04:31:22.346" endtime="20250531 04:31:22.347"/>
</if>
<status status="PASS" starttime="20250531 04:31:22.331" endtime="20250531 04:31:22.347"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.262" endtime="20250531 04:31:22.347"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:22.261" endtime="20250531 04:31:22.347"/>
</test>
<test id="s1-s7-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.353" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.363" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":8,"numBucket":21,"numDir":17,"numKey":119},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creatio...</msg>
<status status="PASS" starttime="20250531 04:31:22.350" endtime="20250531 04:31:22.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.364" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":8,"numBucket":21,"numDir":17,"numKey":119},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:31:22.363" endtime="20250531 04:31:22.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.364" endtime="20250531 04:31:22.364"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.350" endtime="20250531 04:31:22.365"/>
</kw>
<msg timestamp="20250531 04:31:22.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.350" endtime="20250531 04:31:22.365"/>
</kw>
<msg timestamp="20250531 04:31:22.365" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":8,"numBucket":21,"numDir":17,"numKey":119},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creatio...</msg>
<status status="PASS" starttime="20250531 04:31:22.350" endtime="20250531 04:31:22.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.365" endtime="20250531 04:31:22.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:31:22.365" endtime="20250531 04:31:22.366"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.349" endtime="20250531 04:31:22.366"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.349" endtime="20250531 04:31:22.366"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.348" endtime="20250531 04:31:22.366"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:22.348" endtime="20250531 04:31:22.366"/>
</test>
<test id="s1-s7-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:22.371" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ktlzs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:22.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:22.380" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20250531 04:31:22.369" endtime="20250531 04:31:22.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:22.381" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20250531 04:31:22.381" endtime="20250531 04:31:22.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:22.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:22.382" endtime="20250531 04:31:22.382"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.368" endtime="20250531 04:31:22.382"/>
</kw>
<msg timestamp="20250531 04:31:22.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:22.368" endtime="20250531 04:31:22.382"/>
</kw>
<msg timestamp="20250531 04:31:22.382" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20250531 04:31:22.368" endtime="20250531 04:31:22.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250531 04:31:22.383" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250531 04:31:22.382" endtime="20250531 04:31:22.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:22.383" endtime="20250531 04:31:22.383"/>
</kw>
<status status="FAIL" starttime="20250531 04:31:22.368" endtime="20250531 04:31:22.383"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:32.387" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ktlzs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:32.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:32.397" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20250531 04:31:32.385" endtime="20250531 04:31:32.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:32.398" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20250531 04:31:32.397" endtime="20250531 04:31:32.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:32.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:32.398" endtime="20250531 04:31:32.398"/>
</kw>
<status status="PASS" starttime="20250531 04:31:32.385" endtime="20250531 04:31:32.398"/>
</kw>
<msg timestamp="20250531 04:31:32.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:32.384" endtime="20250531 04:31:32.398"/>
</kw>
<msg timestamp="20250531 04:31:32.399" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20250531 04:31:32.384" endtime="20250531 04:31:32.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250531 04:31:32.399" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250531 04:31:32.399" endtime="20250531 04:31:32.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:32.399" endtime="20250531 04:31:32.399"/>
</kw>
<status status="FAIL" starttime="20250531 04:31:32.383" endtime="20250531 04:31:32.399"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:42.403" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ktlzs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:42.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:42.413" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20250531 04:31:42.401" endtime="20250531 04:31:42.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:42.414" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20250531 04:31:42.413" endtime="20250531 04:31:42.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:42.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:42.414" endtime="20250531 04:31:42.414"/>
</kw>
<status status="PASS" starttime="20250531 04:31:42.401" endtime="20250531 04:31:42.414"/>
</kw>
<msg timestamp="20250531 04:31:42.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:42.401" endtime="20250531 04:31:42.414"/>
</kw>
<msg timestamp="20250531 04:31:42.414" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20250531 04:31:42.400" endtime="20250531 04:31:42.415"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250531 04:31:42.415" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250531 04:31:42.415" endtime="20250531 04:31:42.415"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:42.415" endtime="20250531 04:31:42.415"/>
</kw>
<status status="FAIL" starttime="20250531 04:31:42.400" endtime="20250531 04:31:42.415"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:31:52.419" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ktlzs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:31:52.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:31:52.429" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20250531 04:31:52.417" endtime="20250531 04:31:52.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:31:52.429" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20250531 04:31:52.429" endtime="20250531 04:31:52.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:31:52.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:31:52.430" endtime="20250531 04:31:52.430"/>
</kw>
<status status="PASS" starttime="20250531 04:31:52.417" endtime="20250531 04:31:52.430"/>
</kw>
<msg timestamp="20250531 04:31:52.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:31:52.416" endtime="20250531 04:31:52.430"/>
</kw>
<msg timestamp="20250531 04:31:52.430" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20250531 04:31:52.416" endtime="20250531 04:31:52.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250531 04:31:52.431" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250531 04:31:52.430" endtime="20250531 04:31:52.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250531 04:31:52.431" endtime="20250531 04:31:52.431"/>
</kw>
<status status="FAIL" starttime="20250531 04:31:52.416" endtime="20250531 04:31:52.431"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:02.435" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ktlzs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:02.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:02.452" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ktlzs","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250531 04:32:02.433" endtime="20250531 04:32:02.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:02.453" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ktlzs","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1748665870460,"modificationTime":1748665870460,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-ktlzs"},"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:32:02.453" endtime="20250531 04:32:02.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:02.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:02.453" endtime="20250531 04:32:02.454"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.433" endtime="20250531 04:32:02.454"/>
</kw>
<msg timestamp="20250531 04:32:02.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:02.433" endtime="20250531 04:32:02.454"/>
</kw>
<msg timestamp="20250531 04:32:02.454" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ktlzs","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250531 04:32:02.432" endtime="20250531 04:32:02.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.454" endtime="20250531 04:32:02.455"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.455" endtime="20250531 04:32:02.455"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.432" endtime="20250531 04:32:02.455"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.367" endtime="20250531 04:32:02.455"/>
</kw>
<status status="PASS" starttime="20250531 04:31:22.367" endtime="20250531 04:32:02.455"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:31:22.366" endtime="20250531 04:32:02.455"/>
</test>
<test id="s1-s7-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:02.460" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ktlzs/buc-sfvpz 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:02.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:02.475" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-sfvpz","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250531 04:32:02.458" endtime="20250531 04:32:02.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:02.475" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-sfvpz","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1748665873190,"modificationTime":1748665873190,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-ktlzs","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:32:02.475" endtime="20250531 04:32:02.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:02.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:02.476" endtime="20250531 04:32:02.476"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.457" endtime="20250531 04:32:02.476"/>
</kw>
<msg timestamp="20250531 04:32:02.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:02.457" endtime="20250531 04:32:02.476"/>
</kw>
<msg timestamp="20250531 04:32:02.476" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-sfvpz","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250531 04:32:02.457" endtime="20250531 04:32:02.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.476" endtime="20250531 04:32:02.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.477" endtime="20250531 04:32:02.477"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.457" endtime="20250531 04:32:02.477"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.457" endtime="20250531 04:32:02.477"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.456" endtime="20250531 04:32:02.477"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:32:02.456" endtime="20250531 04:32:02.477"/>
</test>
<test id="s1-s7-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:02.482" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ktlzs/buc-sfvpz/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:02.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:02.510" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250531 04:32:02.480" endtime="20250531 04:32:02.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:02.511" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1748665876060,"modificationTime":1748665877096,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-ktlzs","bucketName":"buc-sfvpz","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600136},"blockCommitSequenceId":527,"replicaIndex":null,"containerID":1,"localID":115816896921600136},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600136,"blockCommitSequenceId":527}]},"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600136},"blockCommitSequenceId":527,"replicaIndex":null,"containerID":1,"localID":115816896921600136},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600136,"blockCommitSequenceId":527}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600136},"blockCommitSequenceId":527,"replicaIndex":null,"containerID":1,"localID":115816896921600136},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600136,"blockCommitSequenceId":527}]],"locationListCount":1,"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600136},"blockCommitSequenceId":527,"replicaIndex":null,"containerID":1,"localID":115816896921600136},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600136,"blockCommitSequenceId":527}],"multipartKey":false}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:32:02.511" endtime="20250531 04:32:02.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:02.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:02.512" endtime="20250531 04:32:02.512"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.480" endtime="20250531 04:32:02.512"/>
</kw>
<msg timestamp="20250531 04:32:02.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:02.480" endtime="20250531 04:32:02.512"/>
</kw>
<msg timestamp="20250531 04:32:02.512" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250531 04:32:02.479" endtime="20250531 04:32:02.512"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.512" endtime="20250531 04:32:02.513"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.513" endtime="20250531 04:32:02.513"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.479" endtime="20250531 04:32:02.513"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.479" endtime="20250531 04:32:02.513"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.478" endtime="20250531 04:32:02.513"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:32:02.478" endtime="20250531 04:32:02.513"/>
</test>
<test id="s1-s7-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:32:02.514" endtime="20250531 04:32:02.514"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:02.519" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ktlzs/buc-sfvpz/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:02.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:02.529" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250531 04:32:02.516" endtime="20250531 04:32:02.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:02.530" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1748665880352,"modificationTime":1748665880352,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:32:02.530" endtime="20250531 04:32:02.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:02.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:02.530" endtime="20250531 04:32:02.531"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.516" endtime="20250531 04:32:02.531"/>
</kw>
<msg timestamp="20250531 04:32:02.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:02.516" endtime="20250531 04:32:02.531"/>
</kw>
<msg timestamp="20250531 04:32:02.531" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250531 04:32:02.516" endtime="20250531 04:32:02.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.531" endtime="20250531 04:32:02.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.531" endtime="20250531 04:32:02.532"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.515" endtime="20250531 04:32:02.532"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.515" endtime="20250531 04:32:02.532"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.515" endtime="20250531 04:32:02.532"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.515" endtime="20250531 04:32:02.532"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:32:02.514" endtime="20250531 04:32:02.532"/>
</test>
<test id="s1-s7-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:02.537" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-ktlzs/buc-sfvpz&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:02.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:02.546" level="INFO">${output} = {"status":"OK","path":"/vol-ktlzs/buc-sfvpz","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ktlzs/buc-sfvpz/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250531 04:32:02.535" endtime="20250531 04:32:02.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:02.546" level="INFO">{"status":"OK","path":"/vol-ktlzs/buc-sfvpz","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ktlzs/buc-sfvpz/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20250531 04:32:02.546" endtime="20250531 04:32:02.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:02.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:02.547" endtime="20250531 04:32:02.547"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.534" endtime="20250531 04:32:02.547"/>
</kw>
<msg timestamp="20250531 04:32:02.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:02.534" endtime="20250531 04:32:02.547"/>
</kw>
<msg timestamp="20250531 04:32:02.547" level="INFO">${result} = {"status":"OK","path":"/vol-ktlzs/buc-sfvpz","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ktlzs/buc-sfvpz/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250531 04:32:02.534" endtime="20250531 04:32:02.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.547" endtime="20250531 04:32:02.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.548" endtime="20250531 04:32:02.548"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.533" endtime="20250531 04:32:02.548"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.533" endtime="20250531 04:32:02.548"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.533" endtime="20250531 04:32:02.548"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:32:02.532" endtime="20250531 04:32:02.548"/>
</test>
<test id="s1-s7-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:02.554" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ktlzs 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:02.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:02.563" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:32:02.551" endtime="20250531 04:32:02.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:02.564" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:32:02.563" endtime="20250531 04:32:02.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:02.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:02.564" endtime="20250531 04:32:02.564"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.551" endtime="20250531 04:32:02.564"/>
</kw>
<msg timestamp="20250531 04:32:02.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:02.551" endtime="20250531 04:32:02.564"/>
</kw>
<msg timestamp="20250531 04:32:02.565" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:32:02.550" endtime="20250531 04:32:02.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.565" endtime="20250531 04:32:02.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.565" endtime="20250531 04:32:02.565"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.550" endtime="20250531 04:32:02.565"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.550" endtime="20250531 04:32:02.565"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.549" endtime="20250531 04:32:02.565"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:32:02.549" endtime="20250531 04:32:02.566"/>
</test>
<test id="s1-s7-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:02.570" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ktlzs/buc-sfvpz 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:02.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:02.579" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:32:02.568" endtime="20250531 04:32:02.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:02.579" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:32:02.579" endtime="20250531 04:32:02.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:02.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:02.579" endtime="20250531 04:32:02.580"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.568" endtime="20250531 04:32:02.580"/>
</kw>
<msg timestamp="20250531 04:32:02.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:02.568" endtime="20250531 04:32:02.580"/>
</kw>
<msg timestamp="20250531 04:32:02.580" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:32:02.567" endtime="20250531 04:32:02.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.580" endtime="20250531 04:32:02.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.580" endtime="20250531 04:32:02.581"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.567" endtime="20250531 04:32:02.581"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.567" endtime="20250531 04:32:02.581"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.566" endtime="20250531 04:32:02.581"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:32:02.566" endtime="20250531 04:32:02.581"/>
</test>
<test id="s1-s7-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:02.585" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:02.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:02.594" level="INFO">${output} = {"dist":[1,12,1,1,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:32:02.583" endtime="20250531 04:32:02.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:02.594" level="INFO">{"dist":[1,12,1,1,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:32:02.594" endtime="20250531 04:32:02.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:02.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:02.595" endtime="20250531 04:32:02.595"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.583" endtime="20250531 04:32:02.595"/>
</kw>
<msg timestamp="20250531 04:32:02.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:02.583" endtime="20250531 04:32:02.595"/>
</kw>
<msg timestamp="20250531 04:32:02.595" level="INFO">${result} = {"dist":[1,12,1,1,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250531 04:32:02.583" endtime="20250531 04:32:02.595"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.595" endtime="20250531 04:32:02.596"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:02.596" endtime="20250531 04:32:02.596"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.582" endtime="20250531 04:32:02.596"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.582" endtime="20250531 04:32:02.596"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.582" endtime="20250531 04:32:02.596"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:32:02.581" endtime="20250531 04:32:02.596"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20250531 04:31:07.721" endtime="20250531 04:32:02.597"/>
</suite>
<suite id="s1-s7-s3" name="Recon-Taskstatus" source="/opt/hadoop/smoketest/recon/recon-taskstatus.robot">
<test id="s1-s7-s3-t1" name="Prepopulate Data and Trigger OM DB Sync" line="55">
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250531 04:32:02.611" endtime="20250531 04:32:02.612"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.611" endtime="20250531 04:32:02.612"/>
</kw>
<kw name="Freon DFSG" library="freon">
<arg>n=100</arg>
<arg>path=${KEYPATH}</arg>
<arg>size=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dfsg -n ${n} --sync ${sync} -s ${size} --path ${path} --buffer ${buffer} --copy-buffer ${copy-buffer} -p ${prefix} -t ${threads} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:02.616" level="INFO">Running command 'ozone freon dfsg -n 100 --sync HSYNC -s 100 --path testvolume/testbucket/testkey --buffer 1024 --copy-buffer 1024 -p dfsg -t 1  2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:10.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:10.667" level="INFO">${output} = 2025-05-31 04:32:03,854 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:32:04,020 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:32:02.614" endtime="20250531 04:32:10.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:10.668" level="INFO">2025-05-31 04:32:03,854 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:32:04,020 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-05-31 04:32:04,020 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-05-31 04:32:04,206 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dfsg and number-of-tests 100
2025-05-31 04:32:04,279 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-05-31 04:32:04,322 [main] INFO freon.BaseFreonGenerator: Disabling FS cache: fs.ofs.impl.disable.cache
2025-05-31 04:32:05,280 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-05-31 04:32:05,653 [main] INFO rpc.RpcClient: Creating Volume: user, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-05-31 04:32:05,684 [main] INFO rpc.RpcClient: Creating Bucket: user/hadoop, with bucket layout FILE_SYSTEM_OPTIMIZED, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-05-31 04:32:05,885 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-05-31 04:32:06,280 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-05-31 04:32:07,281 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (20 out of 100)
2025-05-31 04:32:08,281 [Thread-5] INFO freon.ProgressBar: Progress: 54.00 % (54 out of 100)
2025-05-31 04:32:09,282 [Thread-5] INFO freon.ProgressBar: Progress: 83.00 % (83 out of 100)
2025-05-31 04:32:10,282 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-05-31 04:32:10,289 [shutdown-hook-0] INFO metrics: type=TIMER, name=file-create, count=100, min=19.754613, max=893.996531, mean=39.13406207947906, stddev=85.16935470900548, median=28.634511, p75=34.70958, p95=47.306681, p98=56.286474, p99=57.566871, p999=893.996531, mean_rate=21.917109311985094, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-05-31 04:32:10,289 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2025-05-31 04:32:10,289 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-05-31 04:32:10,289 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250531 04:32:10.667" endtime="20250531 04:32:10.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:10.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:10.668" endtime="20250531 04:32:10.668"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.613" endtime="20250531 04:32:10.668"/>
</kw>
<msg timestamp="20250531 04:32:10.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:02.613" endtime="20250531 04:32:10.668"/>
</kw>
<msg timestamp="20250531 04:32:10.669" level="INFO">${result} = 2025-05-31 04:32:03,854 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-05-31 04:32:04,020 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250531 04:32:02.613" endtime="20250531 04:32:10.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:10.669" endtime="20250531 04:32:10.669"/>
</kw>
<status status="PASS" starttime="20250531 04:32:02.612" endtime="20250531 04:32:10.669"/>
</kw>
<kw name="Sync OM Data">
<var>${result}</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Sending CURL request to ${TRIGGER_SYNC_ENDPOINT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250531 04:32:10.670" endtime="20250531 04:32:10.670"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${TRIGGER_SYNC_ENDPOINT}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:10.673" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/triggerdbsync/om 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:10.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:10.684" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250531 04:32:10.671" endtime="20250531 04:32:10.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:10.685" level="INFO">true</msg>
<status status="PASS" starttime="20250531 04:32:10.685" endtime="20250531 04:32:10.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:10.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:10.686" endtime="20250531 04:32:10.686"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.671" endtime="20250531 04:32:10.686"/>
</kw>
<msg timestamp="20250531 04:32:10.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:10.670" endtime="20250531 04:32:10.687"/>
</kw>
<msg timestamp="20250531 04:32:10.687" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20250531 04:32:10.670" endtime="20250531 04:32:10.687"/>
</kw>
<msg timestamp="20250531 04:32:10.687" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20250531 04:32:10.669" endtime="20250531 04:32:10.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250531 04:32:10.687" endtime="20250531 04:32:10.687"/>
</kw>
<doc>Use Freon to prepopulate the OM DB with data and trigger OM DB sync.</doc>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:32:02.611" endtime="20250531 04:32:10.688"/>
</test>
<test id="s1-s7-s3-t2" name="Validate Task Status After Sync" line="64">
<kw name="Fetch Task Status">
<var>${tasks}</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Sending CURL request to ${TASK_STATUS_ENDPOINT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250531 04:32:10.689" endtime="20250531 04:32:10.690"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -H "Accepts: application/json" --negotiate -u : -LSs ${TASK_STATUS_ENDPOINT}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:10.695" level="INFO">Running command 'curl -H "Accepts: application/json" --negotiate -u : -LSs http://recon:9888/api/v1/task/status 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:10.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:10.712" level="INFO">${output} = [{"taskName":"PipelineSyncTask","lastUpdatedTimestamp":1748665837956,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerHealthTask","lastUpdatedTimestamp":1...</msg>
<status status="PASS" starttime="20250531 04:32:10.691" endtime="20250531 04:32:10.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:10.714" level="INFO">[{"taskName":"PipelineSyncTask","lastUpdatedTimestamp":1748665837956,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerHealthTask","lastUpdatedTimestamp":1748665837950,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"OmSnapshotRequest","lastUpdatedTimestamp":1748664955141,"lastUpdatedSeqNumber":1529,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"OmDeltaRequest","lastUpdatedTimestamp":1748665930681,"lastUpdatedSeqNumber":1529,"lastTaskRunStatus":0,"isCurrentTaskRunning":1},{"taskName":"ContainerKeyMapperTaskFSO","lastUpdatedTimestamp":1748665918026,"lastUpdatedSeqNumber":1529,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"OmTableInsightTask","lastUpdatedTimestamp":1748665918050,"lastUpdatedSeqNumber":1529,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"NSSummaryTask","lastUpdatedTimestamp":1748665918052,"lastUpdatedSeqNumber":1529,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerKeyMapperTaskOBS","lastUpdatedTimestamp":1748665918053,"lastUpdatedSeqNumber":1529,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"FileSizeCountTaskOBS","lastUpdatedTimestamp":1748665918055,"lastUpdatedSeqNumber":1529,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"FileSizeCountTaskFSO","lastUpdatedTimestamp":1748665918061,"lastUpdatedSeqNumber":1529,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerSizeCountTask","lastUpdatedTimestamp":1748665897931,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0}]</msg>
<status status="PASS" starttime="20250531 04:32:10.713" endtime="20250531 04:32:10.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:10.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:10.714" endtime="20250531 04:32:10.715"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.690" endtime="20250531 04:32:10.715"/>
</kw>
<msg timestamp="20250531 04:32:10.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:10.690" endtime="20250531 04:32:10.715"/>
</kw>
<msg timestamp="20250531 04:32:10.715" level="INFO">${result} = [{"taskName":"PipelineSyncTask","lastUpdatedTimestamp":1748665837956,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerHealthTask","lastUpdatedTimestamp":1...</msg>
<status status="PASS" starttime="20250531 04:32:10.690" endtime="20250531 04:32:10.715"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${parsed_response}</var>
<arg>json.loads('''${result}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250531 04:32:10.716" level="INFO">${parsed_response} = [{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}, {'taskName': 'ContainerHealthTask', 'lastUpdated...</msg>
<status status="PASS" starttime="20250531 04:32:10.715" endtime="20250531 04:32:10.716"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${tasks}</var>
<arg>[task for task in ${parsed_response}]</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250531 04:32:10.717" level="INFO">${tasks} = [{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}, {'taskName': 'ContainerHealthTask', 'lastUpdated...</msg>
<status status="PASS" starttime="20250531 04:32:10.716" endtime="20250531 04:32:10.717"/>
</kw>
<msg timestamp="20250531 04:32:10.718" level="INFO">${tasks} = [{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}, {'taskName': 'ContainerHealthTask', 'lastUpdated...</msg>
<status status="PASS" starttime="20250531 04:32:10.689" endtime="20250531 04:32:10.718"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${tasks}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250531 04:32:10.718" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20250531 04:32:10.718" endtime="20250531 04:32:10.718"/>
</kw>
<for flavor="IN">
<var>${task}</var>
<value>@{tasks}</value>
<iter>
<var name="${task}">{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>taskName</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.719" endtime="20250531 04:32:10.720"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedSeqNumber</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.720" endtime="20250531 04:32:10.721"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedTimestamp</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.721" endtime="20250531 04:32:10.721"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>isCurrentTaskRunning</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.721" endtime="20250531 04:32:10.722"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastTaskRunStatus</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.722" endtime="20250531 04:32:10.722"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.719" endtime="20250531 04:32:10.722"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'ContainerHealthTask', 'lastUpdatedTimestamp': 1748665837950, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>taskName</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.722" endtime="20250531 04:32:10.723"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedSeqNumber</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.723" endtime="20250531 04:32:10.723"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedTimestamp</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.723" endtime="20250531 04:32:10.723"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>isCurrentTaskRunning</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.723" endtime="20250531 04:32:10.724"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastTaskRunStatus</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.724" endtime="20250531 04:32:10.724"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.722" endtime="20250531 04:32:10.724"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'OmSnapshotRequest', 'lastUpdatedTimestamp': 1748664955141, 'lastUpdatedSeqNumber': 1529, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>taskName</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.724" endtime="20250531 04:32:10.725"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedSeqNumber</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.725" endtime="20250531 04:32:10.725"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedTimestamp</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.725" endtime="20250531 04:32:10.725"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>isCurrentTaskRunning</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.725" endtime="20250531 04:32:10.726"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastTaskRunStatus</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.726" endtime="20250531 04:32:10.726"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.724" endtime="20250531 04:32:10.726"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'OmDeltaRequest', 'lastUpdatedTimestamp': 1748665930681, 'lastUpdatedSeqNumber': 1529, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 1}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>taskName</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.726" endtime="20250531 04:32:10.726"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedSeqNumber</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.727" endtime="20250531 04:32:10.727"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedTimestamp</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.727" endtime="20250531 04:32:10.727"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>isCurrentTaskRunning</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.727" endtime="20250531 04:32:10.728"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastTaskRunStatus</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.728" endtime="20250531 04:32:10.728"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.726" endtime="20250531 04:32:10.728"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'ContainerKeyMapperTaskFSO', 'lastUpdatedTimestamp': 1748665918026, 'lastUpdatedSeqNumber': 1529, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>taskName</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.728" endtime="20250531 04:32:10.729"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedSeqNumber</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.729" endtime="20250531 04:32:10.729"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedTimestamp</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.729" endtime="20250531 04:32:10.729"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>isCurrentTaskRunning</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.729" endtime="20250531 04:32:10.730"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastTaskRunStatus</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.730" endtime="20250531 04:32:10.730"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.728" endtime="20250531 04:32:10.730"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'OmTableInsightTask', 'lastUpdatedTimestamp': 1748665918050, 'lastUpdatedSeqNumber': 1529, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>taskName</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.730" endtime="20250531 04:32:10.731"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedSeqNumber</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.731" endtime="20250531 04:32:10.731"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedTimestamp</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.731" endtime="20250531 04:32:10.731"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>isCurrentTaskRunning</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.731" endtime="20250531 04:32:10.732"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastTaskRunStatus</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.732" endtime="20250531 04:32:10.732"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.730" endtime="20250531 04:32:10.732"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'NSSummaryTask', 'lastUpdatedTimestamp': 1748665918052, 'lastUpdatedSeqNumber': 1529, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>taskName</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.732" endtime="20250531 04:32:10.732"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedSeqNumber</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.733" endtime="20250531 04:32:10.733"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedTimestamp</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.733" endtime="20250531 04:32:10.733"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>isCurrentTaskRunning</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.733" endtime="20250531 04:32:10.734"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastTaskRunStatus</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.734" endtime="20250531 04:32:10.734"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.732" endtime="20250531 04:32:10.734"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'ContainerKeyMapperTaskOBS', 'lastUpdatedTimestamp': 1748665918053, 'lastUpdatedSeqNumber': 1529, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>taskName</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.734" endtime="20250531 04:32:10.734"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedSeqNumber</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.735" endtime="20250531 04:32:10.735"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedTimestamp</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.735" endtime="20250531 04:32:10.746"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>isCurrentTaskRunning</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.746" endtime="20250531 04:32:10.746"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastTaskRunStatus</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.747" endtime="20250531 04:32:10.747"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.734" endtime="20250531 04:32:10.747"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'FileSizeCountTaskOBS', 'lastUpdatedTimestamp': 1748665918055, 'lastUpdatedSeqNumber': 1529, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>taskName</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.747" endtime="20250531 04:32:10.747"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedSeqNumber</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.747" endtime="20250531 04:32:10.748"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedTimestamp</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.748" endtime="20250531 04:32:10.748"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>isCurrentTaskRunning</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.748" endtime="20250531 04:32:10.748"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastTaskRunStatus</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.749" endtime="20250531 04:32:10.749"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.747" endtime="20250531 04:32:10.749"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'FileSizeCountTaskFSO', 'lastUpdatedTimestamp': 1748665918061, 'lastUpdatedSeqNumber': 1529, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>taskName</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.749" endtime="20250531 04:32:10.749"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedSeqNumber</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.749" endtime="20250531 04:32:10.750"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedTimestamp</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.750" endtime="20250531 04:32:10.750"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>isCurrentTaskRunning</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.750" endtime="20250531 04:32:10.750"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastTaskRunStatus</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.750" endtime="20250531 04:32:10.751"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.749" endtime="20250531 04:32:10.751"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'ContainerSizeCountTask', 'lastUpdatedTimestamp': 1748665897931, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>taskName</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.751" endtime="20250531 04:32:10.751"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedSeqNumber</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.751" endtime="20250531 04:32:10.752"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastUpdatedTimestamp</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.752" endtime="20250531 04:32:10.752"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>isCurrentTaskRunning</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.752" endtime="20250531 04:32:10.752"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${task}</arg>
<arg>lastTaskRunStatus</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250531 04:32:10.753" endtime="20250531 04:32:10.753"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.751" endtime="20250531 04:32:10.753"/>
</iter>
<status status="PASS" starttime="20250531 04:32:10.718" endtime="20250531 04:32:10.753"/>
</for>
<doc>Validate that task status is updated after triggering the OM DB sync.</doc>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:32:10.688" endtime="20250531 04:32:10.753"/>
</test>
<test id="s1-s7-s3-t3" name="Validate Stats for Specific Task" line="78">
<kw name="Fetch Task Status">
<var>${tasks}</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Sending CURL request to ${TASK_STATUS_ENDPOINT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250531 04:32:10.754" endtime="20250531 04:32:10.754"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -H "Accepts: application/json" --negotiate -u : -LSs ${TASK_STATUS_ENDPOINT}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:10.758" level="INFO">Running command 'curl -H "Accepts: application/json" --negotiate -u : -LSs http://recon:9888/api/v1/task/status 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:10.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:10.773" level="INFO">${output} = [{"taskName":"PipelineSyncTask","lastUpdatedTimestamp":1748665837956,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerHealthTask","lastUpdatedTimestamp":1...</msg>
<status status="PASS" starttime="20250531 04:32:10.756" endtime="20250531 04:32:10.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:10.775" level="INFO">[{"taskName":"PipelineSyncTask","lastUpdatedTimestamp":1748665837956,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerHealthTask","lastUpdatedTimestamp":1748665837950,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"OmSnapshotRequest","lastUpdatedTimestamp":1748664955141,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"OmDeltaRequest","lastUpdatedTimestamp":1748665930720,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerKeyMapperTaskFSO","lastUpdatedTimestamp":1748665930734,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"OmTableInsightTask","lastUpdatedTimestamp":1748665930761,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"NSSummaryTask","lastUpdatedTimestamp":1748665930763,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerKeyMapperTaskOBS","lastUpdatedTimestamp":1748665930764,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"FileSizeCountTaskOBS","lastUpdatedTimestamp":1748665930765,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"FileSizeCountTaskFSO","lastUpdatedTimestamp":1748665930727,"lastUpdatedSeqNumber":1529,"lastTaskRunStatus":0,"isCurrentTaskRunning":1},{"taskName":"ContainerSizeCountTask","lastUpdatedTimestamp":1748665897931,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0}]</msg>
<status status="PASS" starttime="20250531 04:32:10.774" endtime="20250531 04:32:10.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:10.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:10.775" endtime="20250531 04:32:10.775"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.755" endtime="20250531 04:32:10.775"/>
</kw>
<msg timestamp="20250531 04:32:10.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:10.755" endtime="20250531 04:32:10.776"/>
</kw>
<msg timestamp="20250531 04:32:10.776" level="INFO">${result} = [{"taskName":"PipelineSyncTask","lastUpdatedTimestamp":1748665837956,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerHealthTask","lastUpdatedTimestamp":1...</msg>
<status status="PASS" starttime="20250531 04:32:10.755" endtime="20250531 04:32:10.776"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${parsed_response}</var>
<arg>json.loads('''${result}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250531 04:32:10.777" level="INFO">${parsed_response} = [{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}, {'taskName': 'ContainerHealthTask', 'lastUpdated...</msg>
<status status="PASS" starttime="20250531 04:32:10.776" endtime="20250531 04:32:10.777"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${tasks}</var>
<arg>[task for task in ${parsed_response}]</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250531 04:32:10.778" level="INFO">${tasks} = [{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}, {'taskName': 'ContainerHealthTask', 'lastUpdated...</msg>
<status status="PASS" starttime="20250531 04:32:10.777" endtime="20250531 04:32:10.778"/>
</kw>
<msg timestamp="20250531 04:32:10.778" level="INFO">${tasks} = [{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}, {'taskName': 'ContainerHealthTask', 'lastUpdated...</msg>
<status status="PASS" starttime="20250531 04:32:10.754" endtime="20250531 04:32:10.778"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${task_list}</var>
<arg>[task for task in ${tasks} if task["taskName"] == "${TASK_NAME_1}"]</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250531 04:32:10.779" level="INFO">${task_list} = [{'taskName': 'ContainerHealthTask', 'lastUpdatedTimestamp': 1748665837950, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}]</msg>
<status status="PASS" starttime="20250531 04:32:10.778" endtime="20250531 04:32:10.779"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_length}</var>
<arg>${task_list}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20250531 04:32:10.780" level="INFO">Length is 1</msg>
<msg timestamp="20250531 04:32:10.780" level="INFO">${list_length} = 1</msg>
<status status="PASS" starttime="20250531 04:32:10.779" endtime="20250531 04:32:10.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${list_length}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:10.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:10.780" endtime="20250531 04:32:10.780"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${task}</var>
<arg>${task_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250531 04:32:10.781" level="INFO">${task} = {'taskName': 'ContainerHealthTask', 'lastUpdatedTimestamp': 1748665837950, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</msg>
<status status="PASS" starttime="20250531 04:32:10.780" endtime="20250531 04:32:10.781"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedTimestamp"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.781" endtime="20250531 04:32:10.783"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedSeqNumber"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.783" endtime="20250531 04:32:10.784"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["isCurrentTaskRunning"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.784" endtime="20250531 04:32:10.786"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastTaskRunStatus"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.786" endtime="20250531 04:32:10.787"/>
</kw>
<doc>Validate response for a specific task after OM DB sync.</doc>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:32:10.753" endtime="20250531 04:32:10.787"/>
</test>
<test id="s1-s7-s3-t4" name="Validate All Tasks Updated After Sync" line="95">
<kw name="Fetch Task Status">
<var>${tasks}</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Sending CURL request to ${TASK_STATUS_ENDPOINT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250531 04:32:10.788" endtime="20250531 04:32:10.789"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -H "Accepts: application/json" --negotiate -u : -LSs ${TASK_STATUS_ENDPOINT}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:10.793" level="INFO">Running command 'curl -H "Accepts: application/json" --negotiate -u : -LSs http://recon:9888/api/v1/task/status 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:10.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:10.804" level="INFO">${output} = [{"taskName":"PipelineSyncTask","lastUpdatedTimestamp":1748665837956,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerHealthTask","lastUpdatedTimestamp":1...</msg>
<status status="PASS" starttime="20250531 04:32:10.790" endtime="20250531 04:32:10.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:10.805" level="INFO">[{"taskName":"PipelineSyncTask","lastUpdatedTimestamp":1748665837956,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerHealthTask","lastUpdatedTimestamp":1748665837950,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"OmSnapshotRequest","lastUpdatedTimestamp":1748664955141,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"OmDeltaRequest","lastUpdatedTimestamp":1748665930720,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerKeyMapperTaskFSO","lastUpdatedTimestamp":1748665930734,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"OmTableInsightTask","lastUpdatedTimestamp":1748665930761,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"NSSummaryTask","lastUpdatedTimestamp":1748665930763,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerKeyMapperTaskOBS","lastUpdatedTimestamp":1748665930764,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"FileSizeCountTaskOBS","lastUpdatedTimestamp":1748665930765,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"FileSizeCountTaskFSO","lastUpdatedTimestamp":1748665930769,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerSizeCountTask","lastUpdatedTimestamp":1748665897931,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0}]</msg>
<status status="PASS" starttime="20250531 04:32:10.805" endtime="20250531 04:32:10.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:10.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:10.805" endtime="20250531 04:32:10.806"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.790" endtime="20250531 04:32:10.806"/>
</kw>
<msg timestamp="20250531 04:32:10.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:10.790" endtime="20250531 04:32:10.806"/>
</kw>
<msg timestamp="20250531 04:32:10.806" level="INFO">${result} = [{"taskName":"PipelineSyncTask","lastUpdatedTimestamp":1748665837956,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerHealthTask","lastUpdatedTimestamp":1...</msg>
<status status="PASS" starttime="20250531 04:32:10.789" endtime="20250531 04:32:10.806"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${parsed_response}</var>
<arg>json.loads('''${result}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250531 04:32:10.807" level="INFO">${parsed_response} = [{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}, {'taskName': 'ContainerHealthTask', 'lastUpdated...</msg>
<status status="PASS" starttime="20250531 04:32:10.807" endtime="20250531 04:32:10.807"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${tasks}</var>
<arg>[task for task in ${parsed_response}]</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250531 04:32:10.808" level="INFO">${tasks} = [{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}, {'taskName': 'ContainerHealthTask', 'lastUpdated...</msg>
<status status="PASS" starttime="20250531 04:32:10.807" endtime="20250531 04:32:10.808"/>
</kw>
<msg timestamp="20250531 04:32:10.808" level="INFO">${tasks} = [{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}, {'taskName': 'ContainerHealthTask', 'lastUpdated...</msg>
<status status="PASS" starttime="20250531 04:32:10.788" endtime="20250531 04:32:10.808"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${tasks}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250531 04:32:10.809" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20250531 04:32:10.808" endtime="20250531 04:32:10.809"/>
</kw>
<for flavor="IN">
<var>${task}</var>
<value>@{tasks}</value>
<iter>
<var name="${task}">{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedTimestamp"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.809" endtime="20250531 04:32:10.810"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedSeqNumber"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.811" endtime="20250531 04:32:10.812"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.809" endtime="20250531 04:32:10.812"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'ContainerHealthTask', 'lastUpdatedTimestamp': 1748665837950, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedTimestamp"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.812" endtime="20250531 04:32:10.813"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedSeqNumber"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.814" endtime="20250531 04:32:10.815"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.812" endtime="20250531 04:32:10.815"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'OmSnapshotRequest', 'lastUpdatedTimestamp': 1748664955141, 'lastUpdatedSeqNumber': 2241, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedTimestamp"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.815" endtime="20250531 04:32:10.817"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedSeqNumber"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.817" endtime="20250531 04:32:10.818"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.815" endtime="20250531 04:32:10.818"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'OmDeltaRequest', 'lastUpdatedTimestamp': 1748665930720, 'lastUpdatedSeqNumber': 2241, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedTimestamp"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.818" endtime="20250531 04:32:10.820"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedSeqNumber"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.820" endtime="20250531 04:32:10.821"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.818" endtime="20250531 04:32:10.821"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'ContainerKeyMapperTaskFSO', 'lastUpdatedTimestamp': 1748665930734, 'lastUpdatedSeqNumber': 2241, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedTimestamp"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.821" endtime="20250531 04:32:10.822"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedSeqNumber"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.822" endtime="20250531 04:32:10.824"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.821" endtime="20250531 04:32:10.824"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'OmTableInsightTask', 'lastUpdatedTimestamp': 1748665930761, 'lastUpdatedSeqNumber': 2241, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedTimestamp"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.824" endtime="20250531 04:32:10.825"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedSeqNumber"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.825" endtime="20250531 04:32:10.826"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.824" endtime="20250531 04:32:10.826"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'NSSummaryTask', 'lastUpdatedTimestamp': 1748665930763, 'lastUpdatedSeqNumber': 2241, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedTimestamp"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.827" endtime="20250531 04:32:10.828"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedSeqNumber"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.828" endtime="20250531 04:32:10.829"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.827" endtime="20250531 04:32:10.829"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'ContainerKeyMapperTaskOBS', 'lastUpdatedTimestamp': 1748665930764, 'lastUpdatedSeqNumber': 2241, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedTimestamp"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.829" endtime="20250531 04:32:10.831"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedSeqNumber"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.831" endtime="20250531 04:32:10.832"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.829" endtime="20250531 04:32:10.832"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'FileSizeCountTaskOBS', 'lastUpdatedTimestamp': 1748665930765, 'lastUpdatedSeqNumber': 2241, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedTimestamp"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.832" endtime="20250531 04:32:10.834"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedSeqNumber"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.834" endtime="20250531 04:32:10.835"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.832" endtime="20250531 04:32:10.835"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'FileSizeCountTaskFSO', 'lastUpdatedTimestamp': 1748665930769, 'lastUpdatedSeqNumber': 2241, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedTimestamp"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.835" endtime="20250531 04:32:10.836"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedSeqNumber"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.836" endtime="20250531 04:32:10.838"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.835" endtime="20250531 04:32:10.838"/>
</iter>
<iter>
<var name="${task}">{'taskName': 'ContainerSizeCountTask', 'lastUpdatedTimestamp': 1748665897931, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedTimestamp"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.838" endtime="20250531 04:32:10.839"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${task["lastUpdatedSeqNumber"]}!=${None}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250531 04:32:10.839" endtime="20250531 04:32:10.840"/>
</kw>
<status status="PASS" starttime="20250531 04:32:10.838" endtime="20250531 04:32:10.840"/>
</iter>
<status status="PASS" starttime="20250531 04:32:10.809" endtime="20250531 04:32:10.841"/>
</for>
<doc>Ensure all tasks have been updated after an OM DB sync operation.</doc>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250531 04:32:10.788" endtime="20250531 04:32:10.841"/>
</test>
<test id="s1-s7-s3-t5" name="Validate Sequence number is updated after sync" line="106">
<kw name="Log To Console" library="BuiltIn">
<arg>Triggering OM DB sync for updates</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250531 04:32:10.842" endtime="20250531 04:32:10.842"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Wait for few seconds to let previous OM DB Sync thread to finish</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250531 04:32:10.842" endtime="20250531 04:32:10.842"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250531 04:32:12.843" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250531 04:32:10.843" endtime="20250531 04:32:12.843"/>
</kw>
<kw name="Sync OM Data">
<kw name="Log To Console" library="BuiltIn">
<arg>Sending CURL request to ${TRIGGER_SYNC_ENDPOINT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250531 04:32:12.844" endtime="20250531 04:32:12.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${TRIGGER_SYNC_ENDPOINT}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:12.847" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/triggerdbsync/om 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:12.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:12.857" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250531 04:32:12.845" endtime="20250531 04:32:12.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:12.858" level="INFO">true</msg>
<status status="PASS" starttime="20250531 04:32:12.858" endtime="20250531 04:32:12.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:12.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:12.858" endtime="20250531 04:32:12.859"/>
</kw>
<status status="PASS" starttime="20250531 04:32:12.845" endtime="20250531 04:32:12.859"/>
</kw>
<msg timestamp="20250531 04:32:12.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:12.845" endtime="20250531 04:32:12.859"/>
</kw>
<msg timestamp="20250531 04:32:12.859" level="INFO">${result} = true</msg>
<status status="PASS" starttime="20250531 04:32:12.844" endtime="20250531 04:32:12.859"/>
</kw>
<status status="PASS" starttime="20250531 04:32:12.843" endtime="20250531 04:32:12.859"/>
</kw>
<kw name="Fetch Task Status">
<var>${tasks}</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Sending CURL request to ${TASK_STATUS_ENDPOINT}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20250531 04:32:12.860" endtime="20250531 04:32:12.860"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -H "Accepts: application/json" --negotiate -u : -LSs ${TASK_STATUS_ENDPOINT}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250531 04:32:12.866" level="INFO">Running command 'curl -H "Accepts: application/json" --negotiate -u : -LSs http://recon:9888/api/v1/task/status 2&gt;&amp;1'.</msg>
<msg timestamp="20250531 04:32:12.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20250531 04:32:12.877" level="INFO">${output} = [{"taskName":"PipelineSyncTask","lastUpdatedTimestamp":1748665837956,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerHealthTask","lastUpdatedTimestamp":1...</msg>
<status status="PASS" starttime="20250531 04:32:12.861" endtime="20250531 04:32:12.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250531 04:32:12.879" level="INFO">[{"taskName":"PipelineSyncTask","lastUpdatedTimestamp":1748665837956,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerHealthTask","lastUpdatedTimestamp":1748665837950,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"OmSnapshotRequest","lastUpdatedTimestamp":1748664955141,"lastUpdatedSeqNumber":2246,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"OmDeltaRequest","lastUpdatedTimestamp":1748665932859,"lastUpdatedSeqNumber":2246,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerKeyMapperTaskFSO","lastUpdatedTimestamp":1748665932873,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":1},{"taskName":"OmTableInsightTask","lastUpdatedTimestamp":1748665930761,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"NSSummaryTask","lastUpdatedTimestamp":1748665930763,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerKeyMapperTaskOBS","lastUpdatedTimestamp":1748665930764,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"FileSizeCountTaskOBS","lastUpdatedTimestamp":1748665930765,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"FileSizeCountTaskFSO","lastUpdatedTimestamp":1748665930769,"lastUpdatedSeqNumber":2241,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerSizeCountTask","lastUpdatedTimestamp":1748665897931,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0}]</msg>
<status status="PASS" starttime="20250531 04:32:12.878" endtime="20250531 04:32:12.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:12.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:12.879" endtime="20250531 04:32:12.879"/>
</kw>
<status status="PASS" starttime="20250531 04:32:12.861" endtime="20250531 04:32:12.879"/>
</kw>
<msg timestamp="20250531 04:32:12.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250531 04:32:12.861" endtime="20250531 04:32:12.880"/>
</kw>
<msg timestamp="20250531 04:32:12.880" level="INFO">${result} = [{"taskName":"PipelineSyncTask","lastUpdatedTimestamp":1748665837956,"lastUpdatedSeqNumber":0,"lastTaskRunStatus":0,"isCurrentTaskRunning":0},{"taskName":"ContainerHealthTask","lastUpdatedTimestamp":1...</msg>
<status status="PASS" starttime="20250531 04:32:12.860" endtime="20250531 04:32:12.880"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${parsed_response}</var>
<arg>json.loads('''${result}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250531 04:32:12.881" level="INFO">${parsed_response} = [{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}, {'taskName': 'ContainerHealthTask', 'lastUpdated...</msg>
<status status="PASS" starttime="20250531 04:32:12.880" endtime="20250531 04:32:12.881"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${tasks}</var>
<arg>[task for task in ${parsed_response}]</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250531 04:32:12.882" level="INFO">${tasks} = [{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}, {'taskName': 'ContainerHealthTask', 'lastUpdated...</msg>
<status status="PASS" starttime="20250531 04:32:12.881" endtime="20250531 04:32:12.882"/>
</kw>
<msg timestamp="20250531 04:32:12.882" level="INFO">${tasks} = [{'taskName': 'PipelineSyncTask', 'lastUpdatedTimestamp': 1748665837956, 'lastUpdatedSeqNumber': 0, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}, {'taskName': 'ContainerHealthTask', 'lastUpdated...</msg>
<status status="PASS" starttime="20250531 04:32:12.859" endtime="20250531 04:32:12.882"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${tasks}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250531 04:32:12.883" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20250531 04:32:12.882" endtime="20250531 04:32:12.883"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${om_delta_task_list}</var>
<arg>[task for task in ${tasks} if task["taskName"] == "OmDeltaRequest"]</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250531 04:32:12.884" level="INFO">${om_delta_task_list} = [{'taskName': 'OmDeltaRequest', 'lastUpdatedTimestamp': 1748665932859, 'lastUpdatedSeqNumber': 2246, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}]</msg>
<status status="PASS" starttime="20250531 04:32:12.883" endtime="20250531 04:32:12.884"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_length}</var>
<arg>${om_delta_task_list}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20250531 04:32:12.884" level="INFO">Length is 1</msg>
<msg timestamp="20250531 04:32:12.885" level="INFO">${list_length} = 1</msg>
<status status="PASS" starttime="20250531 04:32:12.884" endtime="20250531 04:32:12.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${list_length}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:12.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250531 04:32:12.885" endtime="20250531 04:32:12.885"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${om_delta_task}</var>
<arg>${om_delta_task_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250531 04:32:12.886" level="INFO">${om_delta_task} = {'taskName': 'OmDeltaRequest', 'lastUpdatedTimestamp': 1748665932859, 'lastUpdatedSeqNumber': 2246, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</msg>
<status status="PASS" starttime="20250531 04:32:12.885" endtime="20250531 04:32:12.886"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${om_delta_task_seq_num}</var>
<arg>int(${om_delta_task["lastUpdatedSeqNumber"]})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250531 04:32:12.887" level="INFO">${om_delta_task_seq_num} = 2246</msg>
<status status="PASS" starttime="20250531 04:32:12.886" endtime="20250531 04:32:12.887"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${om_task_names}</var>
<arg>["NSSummaryTask", "ContainerKeyMapperTask", "FileSizeCountTask", "OmTableInsightTask"]</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250531 04:32:12.888" level="INFO">${om_task_names} = ['NSSummaryTask', 'ContainerKeyMapperTask', 'FileSizeCountTask', 'OmTableInsightTask']</msg>
<status status="PASS" starttime="20250531 04:32:12.888" endtime="20250531 04:32:12.888"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${om_tasks}</var>
<arg>[task for task in ${tasks} if task["taskName"] in ${om_task_names}]</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250531 04:32:12.889" level="INFO">${om_tasks} = [{'taskName': 'OmTableInsightTask', 'lastUpdatedTimestamp': 1748665930761, 'lastUpdatedSeqNumber': 2241, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}, {'taskName': 'NSSummaryTask', 'lastUpdatedT...</msg>
<status status="PASS" starttime="20250531 04:32:12.888" endtime="20250531 04:32:12.889"/>
</kw>
<for flavor="IN">
<var>${task}</var>
<value>@{om_tasks}</value>
<iter>
<var name="${task}">{'taskName': 'OmTableInsightTask', 'lastUpdatedTimestamp': 1748665930761, 'lastUpdatedSeqNumber': 2241, 'lastTaskRunStatus': 0, 'isCurrentTaskRunning': 0}</var>
<if>
<branch type="IF" condition="${task[&quot;isCurrentTaskRunning&quot;]} == 0">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${task["lastUpdatedSeqNumber"]}</arg>
<arg>${om_delta_task_seq_num}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250531 04:32:12.892" level="FAIL">2241 != 2246</msg>
<status status="FAIL" starttime="20250531 04:32:12.890" endtime="20250531 04:32:12.892"/>
</kw>
<status status="FAIL" starttime="20250531 04:32:12.890" endtime="20250531 04:32:12.892"/>
</branch>
<status status="FAIL" starttime="20250531 04:32:12.890" endtime="20250531 04:32:12.892"/>
</if>
<status status="FAIL" starttime="20250531 04:32:12.889" endtime="20250531 04:32:12.892"/>
</iter>
<status status="FAIL" starttime="20250531 04:32:12.889" endtime="20250531 04:32:12.892"/>
</for>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250531 04:32:10.841" endtime="20250531 04:32:12.892">2241 != 2246</status>
</test>
<doc>Test to validate the recon task status API works properly</doc>
<status status="FAIL" starttime="20250531 04:32:02.599" endtime="20250531 04:32:12.893"/>
</suite>
<status status="FAIL" starttime="20250531 04:30:06.201" endtime="20250531 04:32:12.896"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1017470"/>
</suite>
<statistics>
<total>
<stat pass="97" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="97" fail="1" skip="0" id="s1" name="ozone">ozone</stat>
<stat pass="20" fail="0" skip="0" id="s1-s1" name="Lib">ozone.Lib</stat>
<stat pass="9" fail="0" skip="0" id="s1-s1-s1" name="Fs Tests">ozone.Lib.Fs Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s2" name="Os Tests">ozone.Lib.Os Tests</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s3" name="String Tests">ozone.Lib.String Tests</stat>
<stat pass="9" fail="0" skip="0" id="s1-s2" name="Ozone-Lib">ozone.Ozone-Lib</stat>
<stat pass="9" fail="0" skip="0" id="s1-s2-s1" name="Shell Tests">ozone.Ozone-Lib.Shell Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Auditparser">ozone.Auditparser</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s1" name="Auditparser">ozone.Auditparser.Auditparser</stat>
<stat pass="35" fail="0" skip="0" id="s1-s4" name="Basic">ozone.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s1" name="Basic">ozone.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s4-s2" name="Getconf">ozone.Basic.Getconf</stat>
<stat pass="18" fail="0" skip="0" id="s1-s4-s3" name="Links">ozone.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s4" name="Ozone-Shell-Single">ozone.Basic.Ozone-Shell-Single</stat>
<stat pass="9" fail="0" skip="0" id="s1-s4-s5" name="Ozone-Shell">ozone.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s6" name="Single Node">ozone.Basic.Single Node</stat>
<stat pass="4" fail="0" skip="0" id="s1-s5" name="Gdpr">ozone.Gdpr</stat>
<stat pass="4" fail="0" skip="0" id="s1-s5-s1" name="Gdpr">ozone.Gdpr.Gdpr</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Ozone-Secure-Token">ozone.Ozone-Secure-Token</stat>
<stat pass="27" fail="1" skip="0" id="s1-s7" name="Recon">ozone.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s7-s1" name="Recon-Api">ozone.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s7-s2" name="Recon-Nssummary">ozone.Recon.Recon-Nssummary</stat>
<stat pass="4" fail="1" skip="0" id="s1-s7-s3" name="Recon-Taskstatus">ozone.Recon.Recon-Taskstatus</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
