<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250514 19:10:11.636" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:16.937" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:16.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:16.942" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250514 19:09:16.935" endtime="20250514 19:09:16.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:16.942" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250514 19:09:16.942" endtime="20250514 19:09:16.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:16.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:16.943" endtime="20250514 19:09:16.943"/>
</kw>
<status status="PASS" starttime="20250514 19:09:16.935" endtime="20250514 19:09:16.943"/>
</kw>
<msg timestamp="20250514 19:09:16.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:16.935" endtime="20250514 19:09:16.943"/>
</kw>
<status status="PASS" starttime="20250514 19:09:16.934" endtime="20250514 19:09:16.943"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:09:16.944" endtime="20250514 19:09:16.944"/>
</kw>
<status status="PASS" starttime="20250514 19:09:16.943" endtime="20250514 19:09:16.944"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250514 19:09:16.944" level="INFO">${random} = icojr</msg>
<status status="PASS" starttime="20250514 19:09:16.944" endtime="20250514 19:09:16.944"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250514 19:09:16.945" level="INFO">${VOLUME} = vol-icojr</msg>
<status status="PASS" starttime="20250514 19:09:16.945" endtime="20250514 19:09:16.945"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:16.947" level="INFO">Running command 'ozone sh volume create /vol-icojr 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:21.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:21.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250514 19:09:16.946" endtime="20250514 19:09:21.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:21.961" level="INFO"/>
<status status="PASS" starttime="20250514 19:09:21.960" endtime="20250514 19:09:21.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:21.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:21.961" endtime="20250514 19:09:21.961"/>
</kw>
<status status="PASS" starttime="20250514 19:09:16.945" endtime="20250514 19:09:21.962"/>
</kw>
<msg timestamp="20250514 19:09:21.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:16.945" endtime="20250514 19:09:21.962"/>
</kw>
<msg timestamp="20250514 19:09:21.962" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250514 19:09:16.945" endtime="20250514 19:09:21.962"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:21.962" endtime="20250514 19:09:21.962"/>
</kw>
<status status="PASS" starttime="20250514 19:09:16.944" endtime="20250514 19:09:21.962"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:09:16.934" endtime="20250514 19:09:21.962"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250514 19:09:21.964" level="INFO">${random} = ltipc</msg>
<status status="PASS" starttime="20250514 19:09:21.964" endtime="20250514 19:09:21.964"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250514 19:09:21.964" level="INFO">${BUCKET} = buc-ltipc</msg>
<status status="PASS" starttime="20250514 19:09:21.964" endtime="20250514 19:09:21.964"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:21.967" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-icojr/buc-ltipc 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:24.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:24.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250514 19:09:21.965" endtime="20250514 19:09:24.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:24.685" level="INFO"/>
<status status="PASS" starttime="20250514 19:09:24.684" endtime="20250514 19:09:24.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:24.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:24.685" endtime="20250514 19:09:24.686"/>
</kw>
<status status="PASS" starttime="20250514 19:09:21.965" endtime="20250514 19:09:24.686"/>
</kw>
<msg timestamp="20250514 19:09:24.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:21.965" endtime="20250514 19:09:24.686"/>
</kw>
<msg timestamp="20250514 19:09:24.686" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250514 19:09:21.964" endtime="20250514 19:09:24.686"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:24.686" endtime="20250514 19:09:24.686"/>
</kw>
<status status="PASS" starttime="20250514 19:09:21.963" endtime="20250514 19:09:24.686"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:09:21.963" endtime="20250514 19:09:24.687"/>
</test>
<test id="s1-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:24.691" level="INFO">Running command 'ozone sh key put /vol-icojr/buc-ltipc/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:29.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:29.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250514 19:09:24.689" endtime="20250514 19:09:29.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:29.642" level="INFO"/>
<status status="PASS" starttime="20250514 19:09:29.641" endtime="20250514 19:09:29.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:29.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:29.642" endtime="20250514 19:09:29.642"/>
</kw>
<status status="PASS" starttime="20250514 19:09:24.688" endtime="20250514 19:09:29.642"/>
</kw>
<msg timestamp="20250514 19:09:29.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:24.688" endtime="20250514 19:09:29.642"/>
</kw>
<msg timestamp="20250514 19:09:29.643" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250514 19:09:24.688" endtime="20250514 19:09:29.643"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:29.643" endtime="20250514 19:09:29.643"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:29.646" level="INFO">Running command 'ozone sh key put /vol-icojr/buc-ltipc/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250514 19:09:29.644" endtime="20250514 19:09:34.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.149" level="INFO"/>
<status status="PASS" starttime="20250514 19:09:34.148" endtime="20250514 19:09:34.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.149" endtime="20250514 19:09:34.149"/>
</kw>
<status status="PASS" starttime="20250514 19:09:29.644" endtime="20250514 19:09:34.149"/>
</kw>
<msg timestamp="20250514 19:09:34.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:29.643" endtime="20250514 19:09:34.149"/>
</kw>
<msg timestamp="20250514 19:09:34.150" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250514 19:09:29.643" endtime="20250514 19:09:34.150"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.150" endtime="20250514 19:09:34.150"/>
</kw>
<status status="PASS" starttime="20250514 19:09:24.687" endtime="20250514 19:09:34.150"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:09:24.687" endtime="20250514 19:09:34.150"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.154" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.158" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250514 19:09:34.152" endtime="20250514 19:09:34.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.159" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250514 19:09:34.158" endtime="20250514 19:09:34.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.159" endtime="20250514 19:09:34.159"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.152" endtime="20250514 19:09:34.159"/>
</kw>
<msg timestamp="20250514 19:09:34.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.151" endtime="20250514 19:09:34.159"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.151" endtime="20250514 19:09:34.160"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.163" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.269" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.161" endtime="20250514 19:09:34.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.270" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.270" endtime="20250514 19:09:34.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.271" endtime="20250514 19:09:34.271"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.161" endtime="20250514 19:09:34.271"/>
</kw>
<msg timestamp="20250514 19:09:34.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.160" endtime="20250514 19:09:34.272"/>
</kw>
<msg timestamp="20250514 19:09:34.272" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.160" endtime="20250514 19:09:34.272"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.272" endtime="20250514 19:09:34.272"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.272" endtime="20250514 19:09:34.272"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.273" endtime="20250514 19:09:34.273"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.272" endtime="20250514 19:09:34.273"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.272" endtime="20250514 19:09:34.273"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.160" endtime="20250514 19:09:34.273"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:09:34.274" endtime="20250514 19:09:34.274"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.273" endtime="20250514 19:09:34.274"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.279" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.289" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.276" endtime="20250514 19:09:34.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.290" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.290" endtime="20250514 19:09:34.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.290" endtime="20250514 19:09:34.291"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.275" endtime="20250514 19:09:34.291"/>
</kw>
<msg timestamp="20250514 19:09:34.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.275" endtime="20250514 19:09:34.291"/>
</kw>
<msg timestamp="20250514 19:09:34.291" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.275" endtime="20250514 19:09:34.291"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.291" endtime="20250514 19:09:34.291"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.291" endtime="20250514 19:09:34.291"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.291" endtime="20250514 19:09:34.292"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.291" endtime="20250514 19:09:34.292"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.291" endtime="20250514 19:09:34.292"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.274" endtime="20250514 19:09:34.292"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:09:34.292" endtime="20250514 19:09:34.292"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.292" endtime="20250514 19:09:34.292"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.295" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.304" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.294" endtime="20250514 19:09:34.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.305" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.304" endtime="20250514 19:09:34.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.305" endtime="20250514 19:09:34.305"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.293" endtime="20250514 19:09:34.305"/>
</kw>
<msg timestamp="20250514 19:09:34.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.293" endtime="20250514 19:09:34.305"/>
</kw>
<msg timestamp="20250514 19:09:34.305" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.293" endtime="20250514 19:09:34.305"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.306" endtime="20250514 19:09:34.306"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.306" endtime="20250514 19:09:34.306"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.306" endtime="20250514 19:09:34.306"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.306" endtime="20250514 19:09:34.306"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.306" endtime="20250514 19:09:34.306"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.292" endtime="20250514 19:09:34.306"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:09:34.307" endtime="20250514 19:09:34.307"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.306" endtime="20250514 19:09:34.307"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.310" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.319" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.308" endtime="20250514 19:09:34.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.320" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.319" endtime="20250514 19:09:34.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.320" endtime="20250514 19:09:34.320"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.308" endtime="20250514 19:09:34.320"/>
</kw>
<msg timestamp="20250514 19:09:34.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.308" endtime="20250514 19:09:34.320"/>
</kw>
<msg timestamp="20250514 19:09:34.320" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.307" endtime="20250514 19:09:34.320"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.321" endtime="20250514 19:09:34.321"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.320" endtime="20250514 19:09:34.321"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.321" endtime="20250514 19:09:34.321"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.321" endtime="20250514 19:09:34.321"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.320" endtime="20250514 19:09:34.321"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.307" endtime="20250514 19:09:34.321"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.151" endtime="20250514 19:09:34.321"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:09:34.150" endtime="20250514 19:09:34.321"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.325" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.329" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250514 19:09:34.323" endtime="20250514 19:09:34.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.330" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250514 19:09:34.329" endtime="20250514 19:09:34.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.330" endtime="20250514 19:09:34.330"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.323" endtime="20250514 19:09:34.330"/>
</kw>
<msg timestamp="20250514 19:09:34.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.323" endtime="20250514 19:09:34.330"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.323" endtime="20250514 19:09:34.331"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.334" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.348" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.332" endtime="20250514 19:09:34.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.349" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.349" endtime="20250514 19:09:34.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.350" endtime="20250514 19:09:34.350"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.331" endtime="20250514 19:09:34.350"/>
</kw>
<msg timestamp="20250514 19:09:34.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.331" endtime="20250514 19:09:34.350"/>
</kw>
<msg timestamp="20250514 19:09:34.350" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.331" endtime="20250514 19:09:34.350"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.351" endtime="20250514 19:09:34.351"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.351" endtime="20250514 19:09:34.351"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.351" endtime="20250514 19:09:34.351"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.351" endtime="20250514 19:09:34.351"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.351" endtime="20250514 19:09:34.351"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.331" endtime="20250514 19:09:34.351"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:09:34.352" endtime="20250514 19:09:34.352"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.352" endtime="20250514 19:09:34.352"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.356" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.365" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.354" endtime="20250514 19:09:34.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.366" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.366" endtime="20250514 19:09:34.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.366" endtime="20250514 19:09:34.367"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.353" endtime="20250514 19:09:34.367"/>
</kw>
<msg timestamp="20250514 19:09:34.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.353" endtime="20250514 19:09:34.367"/>
</kw>
<msg timestamp="20250514 19:09:34.367" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.352" endtime="20250514 19:09:34.367"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.367" endtime="20250514 19:09:34.367"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.367" endtime="20250514 19:09:34.367"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.368" endtime="20250514 19:09:34.368"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.367" endtime="20250514 19:09:34.368"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.367" endtime="20250514 19:09:34.368"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.352" endtime="20250514 19:09:34.368"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:09:34.368" endtime="20250514 19:09:34.368"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.368" endtime="20250514 19:09:34.369"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.371" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.379" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.370" endtime="20250514 19:09:34.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.380" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.380" endtime="20250514 19:09:34.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.380" endtime="20250514 19:09:34.380"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.369" endtime="20250514 19:09:34.380"/>
</kw>
<msg timestamp="20250514 19:09:34.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.369" endtime="20250514 19:09:34.381"/>
</kw>
<msg timestamp="20250514 19:09:34.381" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.369" endtime="20250514 19:09:34.381"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.381" endtime="20250514 19:09:34.381"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.381" endtime="20250514 19:09:34.381"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.381" endtime="20250514 19:09:34.381"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.381" endtime="20250514 19:09:34.381"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.381" endtime="20250514 19:09:34.381"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.369" endtime="20250514 19:09:34.382"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:09:34.382" endtime="20250514 19:09:34.382"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.382" endtime="20250514 19:09:34.382"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.385" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.393" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.383" endtime="20250514 19:09:34.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.393" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.393" endtime="20250514 19:09:34.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.393" endtime="20250514 19:09:34.394"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.383" endtime="20250514 19:09:34.394"/>
</kw>
<msg timestamp="20250514 19:09:34.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.383" endtime="20250514 19:09:34.394"/>
</kw>
<msg timestamp="20250514 19:09:34.394" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.382" endtime="20250514 19:09:34.394"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.395" endtime="20250514 19:09:34.395"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.394" endtime="20250514 19:09:34.395"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.395" endtime="20250514 19:09:34.395"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.395" endtime="20250514 19:09:34.395"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.394" endtime="20250514 19:09:34.395"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.382" endtime="20250514 19:09:34.395"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.322" endtime="20250514 19:09:34.395"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:09:34.322" endtime="20250514 19:09:34.395"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.399" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.403" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250514 19:09:34.397" endtime="20250514 19:09:34.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.404" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250514 19:09:34.403" endtime="20250514 19:09:34.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.404" endtime="20250514 19:09:34.404"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.397" endtime="20250514 19:09:34.404"/>
</kw>
<msg timestamp="20250514 19:09:34.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.397" endtime="20250514 19:09:34.404"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.396" endtime="20250514 19:09:34.404"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.407" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.418" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.405" endtime="20250514 19:09:34.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.419" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.418" endtime="20250514 19:09:34.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.419" endtime="20250514 19:09:34.419"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.405" endtime="20250514 19:09:34.419"/>
</kw>
<msg timestamp="20250514 19:09:34.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.405" endtime="20250514 19:09:34.419"/>
</kw>
<msg timestamp="20250514 19:09:34.419" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.405" endtime="20250514 19:09:34.419"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.420" endtime="20250514 19:09:34.420"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.420" endtime="20250514 19:09:34.420"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.420" endtime="20250514 19:09:34.420"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.420" endtime="20250514 19:09:34.420"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.420" endtime="20250514 19:09:34.420"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.404" endtime="20250514 19:09:34.420"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:09:34.421" endtime="20250514 19:09:34.421"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.420" endtime="20250514 19:09:34.421"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.424" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.432" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.422" endtime="20250514 19:09:34.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.433" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.432" endtime="20250514 19:09:34.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.433" endtime="20250514 19:09:34.433"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.422" endtime="20250514 19:09:34.433"/>
</kw>
<msg timestamp="20250514 19:09:34.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.422" endtime="20250514 19:09:34.434"/>
</kw>
<msg timestamp="20250514 19:09:34.434" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.421" endtime="20250514 19:09:34.434"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.434" endtime="20250514 19:09:34.434"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.434" endtime="20250514 19:09:34.434"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.434" endtime="20250514 19:09:34.434"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.434" endtime="20250514 19:09:34.434"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.434" endtime="20250514 19:09:34.434"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.421" endtime="20250514 19:09:34.435"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:09:34.435" endtime="20250514 19:09:34.435"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.435" endtime="20250514 19:09:34.435"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.438" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.446" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.436" endtime="20250514 19:09:34.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.446" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.446" endtime="20250514 19:09:34.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.447" endtime="20250514 19:09:34.447"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.436" endtime="20250514 19:09:34.447"/>
</kw>
<msg timestamp="20250514 19:09:34.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.436" endtime="20250514 19:09:34.447"/>
</kw>
<msg timestamp="20250514 19:09:34.447" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.435" endtime="20250514 19:09:34.447"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.448" endtime="20250514 19:09:34.448"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.447" endtime="20250514 19:09:34.448"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.448" endtime="20250514 19:09:34.448"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.448" endtime="20250514 19:09:34.448"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.447" endtime="20250514 19:09:34.448"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.435" endtime="20250514 19:09:34.448"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:09:34.448" endtime="20250514 19:09:34.449"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.448" endtime="20250514 19:09:34.449"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.452" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.460" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.450" endtime="20250514 19:09:34.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.461" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.460" endtime="20250514 19:09:34.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.461" endtime="20250514 19:09:34.461"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.449" endtime="20250514 19:09:34.461"/>
</kw>
<msg timestamp="20250514 19:09:34.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.449" endtime="20250514 19:09:34.461"/>
</kw>
<msg timestamp="20250514 19:09:34.462" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.449" endtime="20250514 19:09:34.462"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.462" endtime="20250514 19:09:34.462"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.462" endtime="20250514 19:09:34.462"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.462" endtime="20250514 19:09:34.462"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.462" endtime="20250514 19:09:34.462"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.462" endtime="20250514 19:09:34.462"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.449" endtime="20250514 19:09:34.462"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.396" endtime="20250514 19:09:34.463"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:09:34.396" endtime="20250514 19:09:34.463"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.467" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.471" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250514 19:09:34.465" endtime="20250514 19:09:34.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.471" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250514 19:09:34.471" endtime="20250514 19:09:34.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.471" endtime="20250514 19:09:34.472"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.464" endtime="20250514 19:09:34.472"/>
</kw>
<msg timestamp="20250514 19:09:34.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.464" endtime="20250514 19:09:34.472"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.464" endtime="20250514 19:09:34.472"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.475" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.488" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.473" endtime="20250514 19:09:34.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.489" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.489" endtime="20250514 19:09:34.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.489" endtime="20250514 19:09:34.490"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.473" endtime="20250514 19:09:34.490"/>
</kw>
<msg timestamp="20250514 19:09:34.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.473" endtime="20250514 19:09:34.490"/>
</kw>
<msg timestamp="20250514 19:09:34.490" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.473" endtime="20250514 19:09:34.490"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.490" endtime="20250514 19:09:34.490"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.490" endtime="20250514 19:09:34.490"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.491" endtime="20250514 19:09:34.491"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.490" endtime="20250514 19:09:34.491"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.490" endtime="20250514 19:09:34.491"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.472" endtime="20250514 19:09:34.491"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:09:34.491" endtime="20250514 19:09:34.491"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.491" endtime="20250514 19:09:34.491"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.494" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.503" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.492" endtime="20250514 19:09:34.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.504" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.503" endtime="20250514 19:09:34.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.504" endtime="20250514 19:09:34.504"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.492" endtime="20250514 19:09:34.504"/>
</kw>
<msg timestamp="20250514 19:09:34.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.492" endtime="20250514 19:09:34.504"/>
</kw>
<msg timestamp="20250514 19:09:34.504" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.492" endtime="20250514 19:09:34.504"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.505" endtime="20250514 19:09:34.505"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.505" endtime="20250514 19:09:34.505"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.505" endtime="20250514 19:09:34.505"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.505" endtime="20250514 19:09:34.505"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.505" endtime="20250514 19:09:34.505"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.492" endtime="20250514 19:09:34.505"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:09:34.506" endtime="20250514 19:09:34.506"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.505" endtime="20250514 19:09:34.506"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.509" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.517" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.507" endtime="20250514 19:09:34.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.518" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.517" endtime="20250514 19:09:34.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.518" endtime="20250514 19:09:34.518"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.507" endtime="20250514 19:09:34.518"/>
</kw>
<msg timestamp="20250514 19:09:34.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.507" endtime="20250514 19:09:34.518"/>
</kw>
<msg timestamp="20250514 19:09:34.518" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.506" endtime="20250514 19:09:34.518"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.519" endtime="20250514 19:09:34.519"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.519" endtime="20250514 19:09:34.519"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.519" endtime="20250514 19:09:34.519"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.519" endtime="20250514 19:09:34.519"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.519" endtime="20250514 19:09:34.519"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.506" endtime="20250514 19:09:34.519"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:09:34.520" endtime="20250514 19:09:34.520"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.519" endtime="20250514 19:09:34.520"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.523" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.531" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.521" endtime="20250514 19:09:34.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.531" level="INFO">200</msg>
<status status="PASS" starttime="20250514 19:09:34.531" endtime="20250514 19:09:34.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.531" endtime="20250514 19:09:34.532"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.521" endtime="20250514 19:09:34.532"/>
</kw>
<msg timestamp="20250514 19:09:34.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.520" endtime="20250514 19:09:34.532"/>
</kw>
<msg timestamp="20250514 19:09:34.532" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250514 19:09:34.520" endtime="20250514 19:09:34.532"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.533" endtime="20250514 19:09:34.533"/>
</kw>
<status status="NOT RUN" starttime="20250514 19:09:34.532" endtime="20250514 19:09:34.533"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:09:34.533" endtime="20250514 19:09:34.533"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.533" endtime="20250514 19:09:34.533"/>
</branch>
<status status="PASS" starttime="20250514 19:09:34.532" endtime="20250514 19:09:34.533"/>
</if>
<status status="PASS" starttime="20250514 19:09:34.520" endtime="20250514 19:09:34.533"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.463" endtime="20250514 19:09:34.533"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:09:34.463" endtime="20250514 19:09:34.533"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:34.537" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:34.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:34.545" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250514 19:09:34.536" endtime="20250514 19:09:34.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:34.546" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250514 19:09:34.546" endtime="20250514 19:09:34.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:34.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:34.546" endtime="20250514 19:09:34.547"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.535" endtime="20250514 19:09:34.547"/>
</kw>
<msg timestamp="20250514 19:09:34.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:34.535" endtime="20250514 19:09:34.547"/>
</kw>
<msg timestamp="20250514 19:09:34.547" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250514 19:09:34.535" endtime="20250514 19:09:34.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250514 19:09:34.547" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250514 19:09:34.547" endtime="20250514 19:09:34.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:34.548" endtime="20250514 19:09:34.548"/>
</kw>
<status status="FAIL" starttime="20250514 19:09:34.535" endtime="20250514 19:09:34.548"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:44.552" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:44.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:44.563" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250514 19:09:44.550" endtime="20250514 19:09:44.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:44.563" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250514 19:09:44.563" endtime="20250514 19:09:44.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:44.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:44.564" endtime="20250514 19:09:44.564"/>
</kw>
<status status="PASS" starttime="20250514 19:09:44.550" endtime="20250514 19:09:44.564"/>
</kw>
<msg timestamp="20250514 19:09:44.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:44.550" endtime="20250514 19:09:44.564"/>
</kw>
<msg timestamp="20250514 19:09:44.564" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250514 19:09:44.549" endtime="20250514 19:09:44.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250514 19:09:44.565" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250514 19:09:44.564" endtime="20250514 19:09:44.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:44.565" endtime="20250514 19:09:44.565"/>
</kw>
<status status="FAIL" starttime="20250514 19:09:44.549" endtime="20250514 19:09:44.565"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:09:54.569" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:09:54.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:09:54.579" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250514 19:09:54.567" endtime="20250514 19:09:54.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:09:54.580" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250514 19:09:54.579" endtime="20250514 19:09:54.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:09:54.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:09:54.580" endtime="20250514 19:09:54.580"/>
</kw>
<status status="PASS" starttime="20250514 19:09:54.567" endtime="20250514 19:09:54.580"/>
</kw>
<msg timestamp="20250514 19:09:54.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:09:54.566" endtime="20250514 19:09:54.580"/>
</kw>
<msg timestamp="20250514 19:09:54.580" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250514 19:09:54.566" endtime="20250514 19:09:54.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250514 19:09:54.581" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250514 19:09:54.581" endtime="20250514 19:09:54.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250514 19:09:54.581" endtime="20250514 19:09:54.581"/>
</kw>
<status status="FAIL" starttime="20250514 19:09:54.566" endtime="20250514 19:09:54.581"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:10:04.585" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:10:04.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:10:04.605" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20250514 19:10:04.583" endtime="20250514 19:10:04.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:10:04.606" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.605" endtime="20250514 19:10:04.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:10:04.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:10:04.606" endtime="20250514 19:10:04.606"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.583" endtime="20250514 19:10:04.606"/>
</kw>
<msg timestamp="20250514 19:10:04.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:10:04.582" endtime="20250514 19:10:04.607"/>
</kw>
<msg timestamp="20250514 19:10:04.607" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20250514 19:10:04.582" endtime="20250514 19:10:04.607"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.607" endtime="20250514 19:10:04.607"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.607" endtime="20250514 19:10:04.607"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.582" endtime="20250514 19:10:04.607"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.534" endtime="20250514 19:10:04.607"/>
</kw>
<status status="PASS" starttime="20250514 19:09:34.534" endtime="20250514 19:10:04.607"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:09:34.534" endtime="20250514 19:10:04.608"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:10:04.612" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-icojr 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:10:04.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:10:04.635" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-icojr","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250514 19:10:04.610" endtime="20250514 19:10:04.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:10:04.636" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-icojr","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1747249761737,"modificationTime":1747249761737,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-icojr"},"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.635" endtime="20250514 19:10:04.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:10:04.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:10:04.636" endtime="20250514 19:10:04.636"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.610" endtime="20250514 19:10:04.637"/>
</kw>
<msg timestamp="20250514 19:10:04.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:10:04.610" endtime="20250514 19:10:04.637"/>
</kw>
<msg timestamp="20250514 19:10:04.637" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-icojr","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250514 19:10:04.610" endtime="20250514 19:10:04.637"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.637" endtime="20250514 19:10:04.637"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.637" endtime="20250514 19:10:04.637"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.609" endtime="20250514 19:10:04.638"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.609" endtime="20250514 19:10:04.638"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.608" endtime="20250514 19:10:04.638"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:10:04.608" endtime="20250514 19:10:04.638"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:10:04.643" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-icojr/buc-ltipc 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:10:04.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:10:04.665" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ltipc","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250514 19:10:04.641" endtime="20250514 19:10:04.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:10:04.666" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ltipc","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1747249764574,"modificationTime":1747249764574,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-icojr","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"LEGACY","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.665" endtime="20250514 19:10:04.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:10:04.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:10:04.666" endtime="20250514 19:10:04.667"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.640" endtime="20250514 19:10:04.667"/>
</kw>
<msg timestamp="20250514 19:10:04.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:10:04.640" endtime="20250514 19:10:04.667"/>
</kw>
<msg timestamp="20250514 19:10:04.667" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-ltipc","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250514 19:10:04.640" endtime="20250514 19:10:04.667"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.667" endtime="20250514 19:10:04.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.668" endtime="20250514 19:10:04.668"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.639" endtime="20250514 19:10:04.668"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.639" endtime="20250514 19:10:04.668"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.639" endtime="20250514 19:10:04.668"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:10:04.638" endtime="20250514 19:10:04.669"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:10:04.674" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-icojr/buc-ltipc/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:10:04.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:10:04.714" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250514 19:10:04.672" endtime="20250514 19:10:04.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:10:04.715" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1747249767496,"modificationTime":1747249769105,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-icojr","bucketName":"buc-ltipc","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.714" endtime="20250514 19:10:04.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:10:04.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:10:04.715" endtime="20250514 19:10:04.715"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.671" endtime="20250514 19:10:04.715"/>
</kw>
<msg timestamp="20250514 19:10:04.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:10:04.671" endtime="20250514 19:10:04.715"/>
</kw>
<msg timestamp="20250514 19:10:04.715" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250514 19:10:04.671" endtime="20250514 19:10:04.715"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.716" endtime="20250514 19:10:04.716"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.716" endtime="20250514 19:10:04.716"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.671" endtime="20250514 19:10:04.716"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.670" endtime="20250514 19:10:04.716"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.670" endtime="20250514 19:10:04.716"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:10:04.669" endtime="20250514 19:10:04.716"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:10:04.721" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-icojr/buc-ltipc/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:10:04.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:10:04.734" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250514 19:10:04.719" endtime="20250514 19:10:04.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:10:04.734" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":[]},"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.734" endtime="20250514 19:10:04.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:10:04.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:10:04.735" endtime="20250514 19:10:04.735"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.719" endtime="20250514 19:10:04.735"/>
</kw>
<msg timestamp="20250514 19:10:04.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:10:04.719" endtime="20250514 19:10:04.735"/>
</kw>
<msg timestamp="20250514 19:10:04.735" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250514 19:10:04.718" endtime="20250514 19:10:04.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.735" endtime="20250514 19:10:04.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.736" endtime="20250514 19:10:04.736"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.718" endtime="20250514 19:10:04.736"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.718" endtime="20250514 19:10:04.736"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.718" endtime="20250514 19:10:04.736"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.717" endtime="20250514 19:10:04.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250514 19:10:04.736" endtime="20250514 19:10:04.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:10:04.717" endtime="20250514 19:10:04.736"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:10:04.741" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-icojr/buc-ltipc&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:10:04.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:10:04.753" level="INFO">${output} = {"status":"OK","path":"/vol-icojr/buc-ltipc","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-icojr/buc-ltipc/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250514 19:10:04.739" endtime="20250514 19:10:04.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:10:04.753" level="INFO">{"status":"OK","path":"/vol-icojr/buc-ltipc","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-icojr/buc-ltipc/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20250514 19:10:04.753" endtime="20250514 19:10:04.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:10:04.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:10:04.754" endtime="20250514 19:10:04.754"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.739" endtime="20250514 19:10:04.754"/>
</kw>
<msg timestamp="20250514 19:10:04.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:10:04.738" endtime="20250514 19:10:04.754"/>
</kw>
<msg timestamp="20250514 19:10:04.754" level="INFO">${result} = {"status":"OK","path":"/vol-icojr/buc-ltipc","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-icojr/buc-ltipc/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250514 19:10:04.738" endtime="20250514 19:10:04.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.754" endtime="20250514 19:10:04.755"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.755" endtime="20250514 19:10:04.755"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.738" endtime="20250514 19:10:04.755"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.738" endtime="20250514 19:10:04.755"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.737" endtime="20250514 19:10:04.755"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:10:04.737" endtime="20250514 19:10:04.755"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:10:04.760" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-icojr 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:10:04.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:10:04.770" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.758" endtime="20250514 19:10:04.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:10:04.771" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.770" endtime="20250514 19:10:04.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:10:04.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:10:04.771" endtime="20250514 19:10:04.771"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.758" endtime="20250514 19:10:04.771"/>
</kw>
<msg timestamp="20250514 19:10:04.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:10:04.757" endtime="20250514 19:10:04.771"/>
</kw>
<msg timestamp="20250514 19:10:04.771" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.757" endtime="20250514 19:10:04.771"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.772" endtime="20250514 19:10:04.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.772" endtime="20250514 19:10:04.772"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.757" endtime="20250514 19:10:04.772"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.757" endtime="20250514 19:10:04.772"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.756" endtime="20250514 19:10:04.772"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:10:04.756" endtime="20250514 19:10:04.772"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:10:04.777" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-icojr/buc-ltipc 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:10:04.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:10:04.787" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.775" endtime="20250514 19:10:04.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:10:04.788" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.787" endtime="20250514 19:10:04.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:10:04.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:10:04.788" endtime="20250514 19:10:04.789"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.775" endtime="20250514 19:10:04.789"/>
</kw>
<msg timestamp="20250514 19:10:04.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:10:04.774" endtime="20250514 19:10:04.789"/>
</kw>
<msg timestamp="20250514 19:10:04.789" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.774" endtime="20250514 19:10:04.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.789" endtime="20250514 19:10:04.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.790" endtime="20250514 19:10:04.790"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.774" endtime="20250514 19:10:04.790"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.774" endtime="20250514 19:10:04.790"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.773" endtime="20250514 19:10:04.790"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:10:04.773" endtime="20250514 19:10:04.791"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250514 19:10:04.798" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250514 19:10:04.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20250514 19:10:04.816" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.794" endtime="20250514 19:10:04.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250514 19:10:04.817" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.816" endtime="20250514 19:10:04.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250514 19:10:04.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250514 19:10:04.818" endtime="20250514 19:10:04.818"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.794" endtime="20250514 19:10:04.818"/>
</kw>
<msg timestamp="20250514 19:10:04.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250514 19:10:04.794" endtime="20250514 19:10:04.818"/>
</kw>
<msg timestamp="20250514 19:10:04.819" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250514 19:10:04.793" endtime="20250514 19:10:04.819"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.819" endtime="20250514 19:10:04.819"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250514 19:10:04.819" endtime="20250514 19:10:04.819"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.793" endtime="20250514 19:10:04.820"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.792" endtime="20250514 19:10:04.820"/>
</kw>
<status status="PASS" starttime="20250514 19:10:04.792" endtime="20250514 19:10:04.820"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250514 19:10:04.791" endtime="20250514 19:10:04.820"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" starttime="20250514 19:09:16.900" endtime="20250514 19:10:04.821"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
