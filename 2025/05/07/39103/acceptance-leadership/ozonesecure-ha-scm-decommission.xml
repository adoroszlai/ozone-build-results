<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250507 08:56:21.891" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-scm-decommission">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250507 08:54:06.594" endtime="20250507 08:54:06.595"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:54:06.598" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:54:06.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:54:06.602" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250507 08:54:06.596" endtime="20250507 08:54:06.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:54:06.603" level="INFO">scm</msg>
<status status="PASS" starttime="20250507 08:54:06.602" endtime="20250507 08:54:06.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:54:06.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:54:06.603" endtime="20250507 08:54:06.603"/>
</kw>
<status status="PASS" starttime="20250507 08:54:06.595" endtime="20250507 08:54:06.604"/>
</kw>
<msg timestamp="20250507 08:54:06.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:54:06.595" endtime="20250507 08:54:06.604"/>
</kw>
<msg timestamp="20250507 08:54:06.604" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250507 08:54:06.595" endtime="20250507 08:54:06.604"/>
</kw>
<msg timestamp="20250507 08:54:06.604" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250507 08:54:06.595" endtime="20250507 08:54:06.604"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250507 08:54:06.604" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250507 08:54:06.604" endtime="20250507 08:54:06.605"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:54:06.608" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:54:06.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:54:06.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 08:54:06.606" endtime="20250507 08:54:06.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:54:06.644" level="INFO"/>
<status status="PASS" starttime="20250507 08:54:06.644" endtime="20250507 08:54:06.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:54:06.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:54:06.645" endtime="20250507 08:54:06.645"/>
</kw>
<status status="PASS" starttime="20250507 08:54:06.605" endtime="20250507 08:54:06.645"/>
</kw>
<msg timestamp="20250507 08:54:06.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:54:06.605" endtime="20250507 08:54:06.645"/>
</kw>
<status status="PASS" starttime="20250507 08:54:06.605" endtime="20250507 08:54:06.645"/>
</kw>
<status status="PASS" starttime="20250507 08:54:06.605" endtime="20250507 08:54:06.645"/>
</kw>
<status status="PASS" starttime="20250507 08:54:06.594" endtime="20250507 08:54:06.645"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250507 08:54:06.593" endtime="20250507 08:54:06.646"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250507 08:54:06.558" endtime="20250507 08:54:06.646"/>
</suite>
<suite id="s1-s2" name="Primordial-Scm" source="/opt/hadoop/smoketest/scmha/primordial-scm.robot">
<test id="s1-s2-t1" name="Verify SCM Count" line="33">
<kw name="Get SCM Node Count">
<var>${scm_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:54:13.936" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:54:16.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:54:16.218" level="INFO">${output} = scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:LEADER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm4.org:9894:FOLLOWER:65ea7a57-4ee2-40cd-8b80-11dea46de...</msg>
<status status="PASS" starttime="20250507 08:54:13.933" endtime="20250507 08:54:16.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:54:16.219" level="INFO">scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:LEADER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm4.org:9894:FOLLOWER:65ea7a57-4ee2-40cd-8b80-11dea46de6da:172.25.0.220
scm3.org:9894:FOLLOWER:107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9:172.25.0.118</msg>
<status status="PASS" starttime="20250507 08:54:16.219" endtime="20250507 08:54:16.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:54:16.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:54:16.219" endtime="20250507 08:54:16.220"/>
</kw>
<status status="PASS" starttime="20250507 08:54:13.933" endtime="20250507 08:54:16.220"/>
</kw>
<msg timestamp="20250507 08:54:16.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:54:13.932" endtime="20250507 08:54:16.220"/>
</kw>
<msg timestamp="20250507 08:54:16.220" level="INFO">${result} = scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:LEADER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm4.org:9894:FOLLOWER:65ea7a57-4ee2-40cd-8b80-11dea46de...</msg>
<status status="PASS" starttime="20250507 08:54:13.932" endtime="20250507 08:54:16.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:54:16.221" level="INFO">scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:LEADER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm4.org:9894:FOLLOWER:65ea7a57-4ee2-40cd-8b80-11dea46de6da:172.25.0.220
scm3.org:9894:FOLLOWER:107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9:172.25.0.118</msg>
<status status="PASS" starttime="20250507 08:54:16.220" endtime="20250507 08:54:16.221"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${scm_count}</var>
<arg>${result}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20250507 08:54:16.221" level="INFO">4 lines</msg>
<msg timestamp="20250507 08:54:16.221" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20250507 08:54:16.221" endtime="20250507 08:54:16.221"/>
</kw>
<msg timestamp="20250507 08:54:16.221" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20250507 08:54:13.932" endtime="20250507 08:54:16.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count: ${scm_count}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:54:16.222" level="INFO">SCM Instance Count: 4</msg>
<status status="PASS" starttime="20250507 08:54:16.221" endtime="20250507 08:54:16.222"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${scm_count}</var>
<arg>${scm_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250507 08:54:16.222" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20250507 08:54:16.222" endtime="20250507 08:54:16.222"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>4</arg>
<arg>${scm_count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250507 08:54:16.222" endtime="20250507 08:54:16.222"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250507 08:54:13.931" endtime="20250507 08:54:16.222"/>
</test>
<test id="s1-s2-t2" name="Transfer Leader to SCM4" line="39">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:54:16.226" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:54:18.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:54:18.575" level="INFO">${output} = scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:LEADER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm4.org:9894:FOLLOWER:65ea7a57-4ee2-40cd-8b80-11dea46de...</msg>
<status status="PASS" starttime="20250507 08:54:16.224" endtime="20250507 08:54:18.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:54:18.576" level="INFO">scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:LEADER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm4.org:9894:FOLLOWER:65ea7a57-4ee2-40cd-8b80-11dea46de6da:172.25.0.220
scm3.org:9894:FOLLOWER:107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9:172.25.0.118</msg>
<status status="PASS" starttime="20250507 08:54:18.575" endtime="20250507 08:54:18.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:54:18.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:54:18.576" endtime="20250507 08:54:18.577"/>
</kw>
<status status="PASS" starttime="20250507 08:54:16.224" endtime="20250507 08:54:18.577"/>
</kw>
<msg timestamp="20250507 08:54:18.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:54:16.224" endtime="20250507 08:54:18.577"/>
</kw>
<msg timestamp="20250507 08:54:18.577" level="INFO">${result} = scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:LEADER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm4.org:9894:FOLLOWER:65ea7a57-4ee2-40cd-8b80-11dea46de...</msg>
<status status="PASS" starttime="20250507 08:54:16.223" endtime="20250507 08:54:18.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:54:18.578" level="INFO">scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:LEADER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm4.org:9894:FOLLOWER:65ea7a57-4ee2-40cd-8b80-11dea46de6da:172.25.0.220
scm3.org:9894:FOLLOWER:107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9:172.25.0.118</msg>
<status status="PASS" starttime="20250507 08:54:18.577" endtime="20250507 08:54:18.578"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_line}</var>
<arg>${result}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20250507 08:54:18.578" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20250507 08:54:18.578" level="INFO">${scm4_line} = scm4.org:9894:FOLLOWER:65ea7a57-4ee2-40cd-8b80-11dea46de6da:172.25.0.220</msg>
<status status="PASS" starttime="20250507 08:54:18.578" endtime="20250507 08:54:18.578"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_split}</var>
<arg>${scm4_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20250507 08:54:18.579" level="INFO">${scm4_split} = ['scm4.org', '9894', 'FOLLOWER', '65ea7a57-4ee2-40cd-8b80-11dea46de6da', '172.25.0.220']</msg>
<status status="PASS" starttime="20250507 08:54:18.578" endtime="20250507 08:54:18.579"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_uuid}</var>
<arg>${scm4_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20250507 08:54:18.579" level="INFO">${scm4_uuid} = 65ea7a57-4ee2-40cd-8b80-11dea46de6da</msg>
<status status="PASS" starttime="20250507 08:54:18.579" endtime="20250507 08:54:18.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${scm4_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:54:18.583" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 65ea7a57-4ee2-40cd-8b80-11dea46de6da 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:54:25.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:54:25.971" level="INFO">${output} = Transfer leadership successfully to 65ea7a57-4ee2-40cd-8b80-11dea46de6da.</msg>
<status status="PASS" starttime="20250507 08:54:18.581" endtime="20250507 08:54:25.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:54:25.972" level="INFO">Transfer leadership successfully to 65ea7a57-4ee2-40cd-8b80-11dea46de6da.</msg>
<status status="PASS" starttime="20250507 08:54:25.972" endtime="20250507 08:54:25.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:54:25.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:54:25.973" endtime="20250507 08:54:25.973"/>
</kw>
<status status="PASS" starttime="20250507 08:54:18.580" endtime="20250507 08:54:25.973"/>
</kw>
<msg timestamp="20250507 08:54:25.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:54:18.580" endtime="20250507 08:54:25.973"/>
</kw>
<msg timestamp="20250507 08:54:25.973" level="INFO">${result} = Transfer leadership successfully to 65ea7a57-4ee2-40cd-8b80-11dea46de6da.</msg>
<status status="PASS" starttime="20250507 08:54:18.580" endtime="20250507 08:54:25.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:54:25.974" level="INFO">Transfer leadership successfully to 65ea7a57-4ee2-40cd-8b80-11dea46de6da.</msg>
<status status="PASS" starttime="20250507 08:54:25.973" endtime="20250507 08:54:25.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 08:54:25.974" endtime="20250507 08:54:25.974"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250507 08:54:16.223" endtime="20250507 08:54:25.974"/>
</test>
<test id="s1-s2-t3" name="Verify SCM4 Certificate" line="50">
<kw name="Execute" library="os">
<var>${root_ca_output}</var>
<arg>ozone admin cert list -c 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:54:25.979" level="INFO">Running command 'ozone admin cert list -c 1 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:54:30.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:54:30.616" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(BatchSize=1, CertCount=1)
SerialNumber      Valid From              ...</msg>
<status status="PASS" starttime="20250507 08:54:25.976" endtime="20250507 08:54:30.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:54:30.617" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(BatchSize=1, CertCount=1)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Wed May 07 08:52:13 UTC 2025   Sat Jun 15 08:52:13 UTC 2030   CN=scm@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=1 CN=scm@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20250507 08:54:30.616" endtime="20250507 08:54:30.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:54:30.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:54:30.617" endtime="20250507 08:54:30.617"/>
</kw>
<status status="PASS" starttime="20250507 08:54:25.976" endtime="20250507 08:54:30.618"/>
</kw>
<msg timestamp="20250507 08:54:30.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:54:25.975" endtime="20250507 08:54:30.618"/>
</kw>
<msg timestamp="20250507 08:54:30.618" level="INFO">${root_ca_output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(BatchSize=1, CertCount=1)
SerialNumber      Valid From              ...</msg>
<status status="PASS" starttime="20250507 08:54:25.975" endtime="20250507 08:54:30.618"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${root_ca_cert}</var>
<arg>${root_ca_output}</arg>
<arg>scm1.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20250507 08:54:30.618" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20250507 08:54:30.618" level="INFO">${root_ca_cert} = 1                 Wed May 07 08:52:13 UTC 2025   Sat Jun 15 08:52:13 UTC 2030   CN=scm@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=1 CN=scm...</msg>
<status status="PASS" starttime="20250507 08:54:30.618" endtime="20250507 08:54:30.618"/>
</kw>
<kw name="Split String" library="String">
<var>${root_ca_cert_split}</var>
<arg>${root_ca_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20250507 08:54:30.619" level="INFO">${root_ca_cert_split} = ['1', 'Wed', 'May', '07', '08:52:13', 'UTC', '2025', 'Sat', 'Jun', '15', '08:52:13', 'UTC', '2030', 'CN=scm@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,...</msg>
<status status="PASS" starttime="20250507 08:54:30.619" endtime="20250507 08:54:30.619"/>
</kw>
<kw name="Strip String" library="String">
<var>${root_ca_cert_subject}</var>
<arg>${root_ca_cert_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20250507 08:54:30.620" level="INFO">${root_ca_cert_subject} = 07</msg>
<status status="PASS" starttime="20250507 08:54:30.619" endtime="20250507 08:54:30.620"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -c 1000000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:54:30.623" level="INFO">Running command 'ozone admin cert list -c 1000000 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:54:35.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:54:35.281" level="INFO">${output} = Certificate list:(BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                              ...</msg>
<status status="PASS" starttime="20250507 08:54:30.621" endtime="20250507 08:54:35.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:54:35.282" level="INFO">Certificate list:(BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Wed May 07 08:52:13 UTC 2025   Sat Jun 15 08:52:13 UTC 2030   CN=scm@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=1 CN=scm@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=1
2                 Wed May 07 08:52:14 UTC 2025   Sat Jun 15 08:52:14 UTC 2030   CN=scm-sub@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=2 CN=scm@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=1
3                 Wed May 07 08:52:33 UTC 2025   Thu May 07 08:52:33 UTC 2026   CN=recon@recon,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=3 CN=scm-sub@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=2
4                 Wed May 07 08:52:37 UTC 2025   Sat Jun 15 08:52:37 UTC 2030   CN=scm-sub@scm2.org,OU=ceee72ac-933e-4e12-9401-8055bab0b359,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=4 CN=scm@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=1
5                 Wed May 07 08:52:47 UTC 2025   Sat Jun 15 08:52:47 UTC 2030   CN=scm-sub@scm3.org,OU=107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=5 CN=scm@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=1
6                 Wed May 07 08:53:11 UTC 2025   Thu May 07 08:53:11 UTC 2026   CN=dn@136f6cd9bb14,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=6 CN=scm-sub@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=2
7                 Wed May 07 08:53:11 UTC 2025   Thu May 07 08:53:11 UTC 2026   CN=dn@d8c8182ae289,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=7 CN=scm-sub@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=2
8                 Wed May 07 08:53:13 UTC 2025   Thu May 07 08:53:13 UTC 2026   CN=dn@2f254468dfcf,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=8 CN=scm-sub@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=2
9                 Wed May 07 08:53:14 UTC 2025   Thu May 07 08:53:14 UTC 2026   CN=om3,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=9       CN=scm-sub@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=2
10                Wed May 07 08:53:15 UTC 2025   Thu May 07 08:53:15 UTC 2026   CN=om2,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=10      CN=scm-sub@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=2
11                Wed May 07 08:53:15 UTC 2025   Thu May 07 08:53:15 UTC 2026   CN=om1,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=11      CN=scm-sub@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=2
12                Wed May 07 08:53:59 UTC 2025   Sat Jun 15 08:53:59 UTC 2030   CN=scm-sub@scm4.org,OU=65ea7a57-4ee2-40cd-8b80-11dea46de6da,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=12 CN=scm@scm1.org,OU=96c32c81-94b3-476d-b23f-71b32d061dd5,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20250507 08:54:35.281" endtime="20250507 08:54:35.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:54:35.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:54:35.282" endtime="20250507 08:54:35.283"/>
</kw>
<status status="PASS" starttime="20250507 08:54:30.620" endtime="20250507 08:54:35.283"/>
</kw>
<msg timestamp="20250507 08:54:35.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:54:30.620" endtime="20250507 08:54:35.283"/>
</kw>
<msg timestamp="20250507 08:54:35.283" level="INFO">${output} = Certificate list:(BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                              ...</msg>
<status status="PASS" starttime="20250507 08:54:30.620" endtime="20250507 08:54:35.283"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_cert}</var>
<arg>${output}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20250507 08:54:35.284" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20250507 08:54:35.284" level="INFO">${scm4_cert} = 12                Wed May 07 08:53:59 UTC 2025   Sat Jun 15 08:53:59 UTC 2030   CN=scm-sub@scm4.org,OU=65ea7a57-4ee2-40cd-8b80-11dea46de6da,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4ac91,SERIALNUMBER=12 C...</msg>
<status status="PASS" starttime="20250507 08:54:35.284" endtime="20250507 08:54:35.284"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_cert_split}</var>
<arg>${scm4_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20250507 08:54:35.285" level="INFO">${scm4_cert_split} = ['12', 'Wed', 'May', '07', '08:53:59', 'UTC', '2025', 'Sat', 'Jun', '15', '08:53:59', 'UTC', '2030', 'CN=scm-sub@scm4.org,OU=65ea7a57-4ee2-40cd-8b80-11dea46de6da,O=CID-5d6f2168-dc19-4633-b5a4-a2f2c5e4...</msg>
<status status="PASS" starttime="20250507 08:54:35.284" endtime="20250507 08:54:35.285"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_cert_issuer}</var>
<arg>${scm4_cert_split[4]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20250507 08:54:35.286" level="INFO">${scm4_cert_issuer} = 08:53:59</msg>
<status status="PASS" starttime="20250507 08:54:35.285" endtime="20250507 08:54:35.286"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${scm4_cert_issuer}</arg>
<arg>${root_ca_cert_subject}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20250507 08:54:35.286" endtime="20250507 08:54:35.286"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250507 08:54:25.975" endtime="20250507 08:54:35.286"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250507 08:54:13.894" endtime="20250507 08:54:35.287"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250507 08:55:02.766" endtime="20250507 08:55:02.766"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:02.770" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:02.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:02.774" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250507 08:55:02.767" endtime="20250507 08:55:02.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:02.775" level="INFO">scm</msg>
<status status="PASS" starttime="20250507 08:55:02.774" endtime="20250507 08:55:02.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:02.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:02.775" endtime="20250507 08:55:02.775"/>
</kw>
<status status="PASS" starttime="20250507 08:55:02.767" endtime="20250507 08:55:02.775"/>
</kw>
<msg timestamp="20250507 08:55:02.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:02.767" endtime="20250507 08:55:02.776"/>
</kw>
<msg timestamp="20250507 08:55:02.776" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250507 08:55:02.767" endtime="20250507 08:55:02.776"/>
</kw>
<msg timestamp="20250507 08:55:02.776" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250507 08:55:02.766" endtime="20250507 08:55:02.776"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250507 08:55:02.776" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250507 08:55:02.776" endtime="20250507 08:55:02.776"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:02.780" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:02.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:02.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 08:55:02.777" endtime="20250507 08:55:02.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:02.819" level="INFO"/>
<status status="PASS" starttime="20250507 08:55:02.818" endtime="20250507 08:55:02.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:02.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:02.819" endtime="20250507 08:55:02.819"/>
</kw>
<status status="PASS" starttime="20250507 08:55:02.777" endtime="20250507 08:55:02.819"/>
</kw>
<msg timestamp="20250507 08:55:02.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:02.777" endtime="20250507 08:55:02.820"/>
</kw>
<status status="PASS" starttime="20250507 08:55:02.777" endtime="20250507 08:55:02.820"/>
</kw>
<status status="PASS" starttime="20250507 08:55:02.776" endtime="20250507 08:55:02.820"/>
</kw>
<status status="PASS" starttime="20250507 08:55:02.765" endtime="20250507 08:55:02.820"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250507 08:55:02.765" endtime="20250507 08:55:02.820"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250507 08:55:02.730" endtime="20250507 08:55:02.821"/>
</suite>
<suite id="s1-s4" name="Scm-Decommission" source="/opt/hadoop/smoketest/scmha/scm-decommission.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250507 08:55:10.162" endtime="20250507 08:55:10.162"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:10.166" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:10.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:10.170" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20250507 08:55:10.163" endtime="20250507 08:55:10.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:10.170" level="INFO">s3g</msg>
<status status="PASS" starttime="20250507 08:55:10.170" endtime="20250507 08:55:10.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:10.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:10.171" endtime="20250507 08:55:10.171"/>
</kw>
<status status="PASS" starttime="20250507 08:55:10.163" endtime="20250507 08:55:10.171"/>
</kw>
<msg timestamp="20250507 08:55:10.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:10.163" endtime="20250507 08:55:10.171"/>
</kw>
<msg timestamp="20250507 08:55:10.171" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20250507 08:55:10.163" endtime="20250507 08:55:10.171"/>
</kw>
<msg timestamp="20250507 08:55:10.172" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250507 08:55:10.162" endtime="20250507 08:55:10.172"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250507 08:55:10.172" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250507 08:55:10.172" endtime="20250507 08:55:10.172"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:10.175" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:10.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:10.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 08:55:10.173" endtime="20250507 08:55:10.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:10.297" level="INFO"/>
<status status="PASS" starttime="20250507 08:55:10.296" endtime="20250507 08:55:10.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:10.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:10.297" endtime="20250507 08:55:10.297"/>
</kw>
<status status="PASS" starttime="20250507 08:55:10.173" endtime="20250507 08:55:10.298"/>
</kw>
<msg timestamp="20250507 08:55:10.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:10.173" endtime="20250507 08:55:10.298"/>
</kw>
<status status="PASS" starttime="20250507 08:55:10.172" endtime="20250507 08:55:10.298"/>
</kw>
<status status="PASS" starttime="20250507 08:55:10.172" endtime="20250507 08:55:10.298"/>
</kw>
<status status="PASS" starttime="20250507 08:55:10.162" endtime="20250507 08:55:10.298"/>
</kw>
<status status="PASS" starttime="20250507 08:55:10.161" endtime="20250507 08:55:10.298"/>
</kw>
<test id="s1-s4-t1" name="Decommission SCM Primordial Node" line="66">
<kw name="Get Primordial SCM ID">
<var>${primordial_scm_id}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:10.302" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:14.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:14.042" level="INFO">${output} = scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm3.org:9894:LEADER:107d1c32-5bce-4e4b-8cfe-ec9c432f5...</msg>
<status status="PASS" starttime="20250507 08:55:10.300" endtime="20250507 08:55:14.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:14.043" level="INFO">scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm3.org:9894:LEADER:107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9:172.25.0.118</msg>
<status status="PASS" starttime="20250507 08:55:14.043" endtime="20250507 08:55:14.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:14.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:14.044" endtime="20250507 08:55:14.044"/>
</kw>
<status status="PASS" starttime="20250507 08:55:10.300" endtime="20250507 08:55:14.044"/>
</kw>
<msg timestamp="20250507 08:55:14.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:10.299" endtime="20250507 08:55:14.044"/>
</kw>
<msg timestamp="20250507 08:55:14.044" level="INFO">${result} = scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm3.org:9894:LEADER:107d1c32-5bce-4e4b-8cfe-ec9c432f5...</msg>
<status status="PASS" starttime="20250507 08:55:10.299" endtime="20250507 08:55:14.044"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${primordial_node}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:LEADER*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20250507 08:55:14.045" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20250507 08:55:14.045" level="INFO">${primordial_node} = scm3.org:9894:LEADER:107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9:172.25.0.118</msg>
<status status="PASS" starttime="20250507 08:55:14.045" endtime="20250507 08:55:14.045"/>
</kw>
<kw name="Split String" library="String">
<var>${primordial_split}</var>
<arg>${primordial_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20250507 08:55:14.046" level="INFO">${primordial_split} = ['scm3.org', '9894', 'LEADER', '107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9', '172.25.0.118']</msg>
<status status="PASS" starttime="20250507 08:55:14.045" endtime="20250507 08:55:14.046"/>
</kw>
<kw name="Strip String" library="String">
<var>${primordial_scmId}</var>
<arg>${primordial_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20250507 08:55:14.047" level="INFO">${primordial_scmId} = 107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9</msg>
<status status="PASS" starttime="20250507 08:55:14.046" endtime="20250507 08:55:14.047"/>
</kw>
<msg timestamp="20250507 08:55:14.047" level="INFO">${primordial_scm_id} = 107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9</msg>
<status status="PASS" starttime="20250507 08:55:10.299" endtime="20250507 08:55:14.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Primordial scm id : ${primordial_scm_id}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:14.047" level="INFO">Primordial scm id : 107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9</msg>
<status status="PASS" starttime="20250507 08:55:14.047" endtime="20250507 08:55:14.047"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${decomm_output}</var>
<arg>ozone admin scm decommission --nodeid=${primordial_scm_id}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:14.050" level="INFO">Running command 'ozone admin scm decommission --nodeid=107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:17.815" level="INFO">${rc} = 255</msg>
<msg timestamp="20250507 08:55:17.815" level="INFO">${output} = Error decommissioning Scm 107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9, Cannot remove current leader.</msg>
<status status="PASS" starttime="20250507 08:55:14.048" endtime="20250507 08:55:17.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:17.816" level="INFO">Error decommissioning Scm 107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9, Cannot remove current leader.</msg>
<status status="PASS" starttime="20250507 08:55:17.815" endtime="20250507 08:55:17.816"/>
</kw>
<msg timestamp="20250507 08:55:17.816" level="INFO">${decomm_output} = Error decommissioning Scm 107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9, Cannot remove current leader.</msg>
<status status="PASS" starttime="20250507 08:55:14.047" endtime="20250507 08:55:17.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${decomm_output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:17.816" level="INFO">Error decommissioning Scm 107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9, Cannot remove current leader.</msg>
<status status="PASS" starttime="20250507 08:55:17.816" endtime="20250507 08:55:17.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${decomm_output}</arg>
<arg>Cannot remove current leader</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 08:55:17.817" endtime="20250507 08:55:17.817"/>
</kw>
<kw name="Create volume bucket and put key">
<var>${md5sum}</var>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:17.821" level="INFO">Running command 'ozone sh volume create /decom-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:20.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:20.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 08:55:17.818" endtime="20250507 08:55:20.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:20.144" level="INFO"/>
<status status="PASS" starttime="20250507 08:55:20.142" endtime="20250507 08:55:20.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:20.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:20.145" endtime="20250507 08:55:20.147"/>
</kw>
<status status="PASS" starttime="20250507 08:55:17.818" endtime="20250507 08:55:20.147"/>
</kw>
<msg timestamp="20250507 08:55:20.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:17.818" endtime="20250507 08:55:20.147"/>
</kw>
<status status="PASS" starttime="20250507 08:55:17.817" endtime="20250507 08:55:20.147"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:20.156" level="INFO">Running command 'ozone sh bucket create /decom-volume/decom-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:22.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:22.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 08:55:20.151" endtime="20250507 08:55:22.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:22.468" level="INFO"/>
<status status="PASS" starttime="20250507 08:55:22.467" endtime="20250507 08:55:22.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:22.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:22.468" endtime="20250507 08:55:22.469"/>
</kw>
<status status="PASS" starttime="20250507 08:55:20.151" endtime="20250507 08:55:22.469"/>
</kw>
<msg timestamp="20250507 08:55:22.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:20.150" endtime="20250507 08:55:22.469"/>
</kw>
<status status="PASS" starttime="20250507 08:55:20.148" endtime="20250507 08:55:22.469"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>/tmp/${TESTFILE}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20250507 08:55:22.470" level="INFO" html="true">Created file '&lt;a href="file:///tmp/testfiledecomm"&gt;/tmp/testfiledecomm&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250507 08:55:22.469" endtime="20250507 08:55:22.470"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "This is a decommissioning test" &gt; /tmp/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:22.474" level="INFO">Running command 'echo "This is a decommissioning test" &gt; /tmp/testfiledecomm'.</msg>
<msg timestamp="20250507 08:55:22.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:22.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 08:55:22.471" endtime="20250507 08:55:22.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:22.476" level="INFO"/>
<status status="PASS" starttime="20250507 08:55:22.476" endtime="20250507 08:55:22.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:22.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:22.477" endtime="20250507 08:55:22.477"/>
</kw>
<status status="PASS" starttime="20250507 08:55:22.470" endtime="20250507 08:55:22.477"/>
</kw>
<msg timestamp="20250507 08:55:22.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:22.470" endtime="20250507 08:55:22.477"/>
</kw>
<status status="PASS" starttime="20250507 08:55:22.470" endtime="20250507 08:55:22.477"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum /tmp/${TESTFILE} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:22.481" level="INFO">Running command 'md5sum /tmp/testfiledecomm | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:22.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:22.487" level="INFO">${output} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20250507 08:55:22.479" endtime="20250507 08:55:22.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:22.488" level="INFO">ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20250507 08:55:22.487" endtime="20250507 08:55:22.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:22.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:22.488" endtime="20250507 08:55:22.488"/>
</kw>
<status status="PASS" starttime="20250507 08:55:22.478" endtime="20250507 08:55:22.488"/>
</kw>
<msg timestamp="20250507 08:55:22.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:22.478" endtime="20250507 08:55:22.488"/>
</kw>
<msg timestamp="20250507 08:55:22.489" level="INFO">${md5sum} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20250507 08:55:22.478" endtime="20250507 08:55:22.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${VOLUME}/${BUCKET}/${TESTFILE} /tmp/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:22.492" level="INFO">Running command 'ozone sh key put /decom-volume/decom-bucket/testfiledecomm /tmp/testfiledecomm 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:31.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:31.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 08:55:22.490" endtime="20250507 08:55:31.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:31.324" level="INFO"/>
<status status="PASS" starttime="20250507 08:55:31.324" endtime="20250507 08:55:31.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:31.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:31.324" endtime="20250507 08:55:31.325"/>
</kw>
<status status="PASS" starttime="20250507 08:55:22.489" endtime="20250507 08:55:31.325"/>
</kw>
<msg timestamp="20250507 08:55:31.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:22.489" endtime="20250507 08:55:31.325"/>
</kw>
<status status="PASS" starttime="20250507 08:55:22.489" endtime="20250507 08:55:31.325"/>
</kw>
<msg timestamp="20250507 08:55:31.325" level="INFO">${md5sum} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20250507 08:55:17.817" endtime="20250507 08:55:31.325"/>
</kw>
<kw name="Transfer Leader to non-primordial node Follower">
<var>${transfer_result}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:31.329" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:35.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:35.056" level="INFO">${output} = scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm3.org:9894:LEADER:107d1c32-5bce-4e4b-8cfe-ec9c432f5...</msg>
<status status="PASS" starttime="20250507 08:55:31.327" endtime="20250507 08:55:35.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:35.057" level="INFO">scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm3.org:9894:LEADER:107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9:172.25.0.118</msg>
<status status="PASS" starttime="20250507 08:55:35.057" endtime="20250507 08:55:35.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:35.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:35.058" endtime="20250507 08:55:35.058"/>
</kw>
<status status="PASS" starttime="20250507 08:55:31.326" endtime="20250507 08:55:35.058"/>
</kw>
<msg timestamp="20250507 08:55:35.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:31.326" endtime="20250507 08:55:35.058"/>
</kw>
<msg timestamp="20250507 08:55:35.058" level="INFO">${result} = scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm3.org:9894:LEADER:107d1c32-5bce-4e4b-8cfe-ec9c432f5...</msg>
<status status="PASS" starttime="20250507 08:55:31.326" endtime="20250507 08:55:35.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:35.059" level="INFO">scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm3.org:9894:LEADER:107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9:172.25.0.118</msg>
<status status="PASS" starttime="20250507 08:55:35.058" endtime="20250507 08:55:35.059"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${follower_nodes}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:FOLLOWER*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20250507 08:55:35.059" level="INFO">2 out of 3 lines matched</msg>
<msg timestamp="20250507 08:55:35.059" level="INFO">${follower_nodes} = scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116</msg>
<status status="PASS" starttime="20250507 08:55:35.059" endtime="20250507 08:55:35.060"/>
</kw>
<kw name="Get Line" library="String">
<var>${follower_node}</var>
<arg>${follower_nodes}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20250507 08:55:35.060" level="INFO">${follower_node} = scm2.org:9894:FOLLOWER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117</msg>
<status status="PASS" starttime="20250507 08:55:35.060" endtime="20250507 08:55:35.060"/>
</kw>
<kw name="Split String" library="String">
<var>${follower_split}</var>
<arg>${follower_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20250507 08:55:35.060" level="INFO">${follower_split} = ['scm2.org', '9894', 'FOLLOWER', 'ceee72ac-933e-4e12-9401-8055bab0b359', '172.25.0.117']</msg>
<status status="PASS" starttime="20250507 08:55:35.060" endtime="20250507 08:55:35.060"/>
</kw>
<kw name="Strip String" library="String">
<var>${follower_scmId}</var>
<arg>${follower_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20250507 08:55:35.061" level="INFO">${follower_scmId} = ceee72ac-933e-4e12-9401-8055bab0b359</msg>
<status status="PASS" starttime="20250507 08:55:35.060" endtime="20250507 08:55:35.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${follower_scmId}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:35.065" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n ceee72ac-933e-4e12-9401-8055bab0b359 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:51.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:51.627" level="INFO">${output} = Transfer leadership successfully to ceee72ac-933e-4e12-9401-8055bab0b359.</msg>
<status status="PASS" starttime="20250507 08:55:35.063" endtime="20250507 08:55:51.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:51.628" level="INFO">Transfer leadership successfully to ceee72ac-933e-4e12-9401-8055bab0b359.</msg>
<status status="PASS" starttime="20250507 08:55:51.628" endtime="20250507 08:55:51.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:51.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:51.628" endtime="20250507 08:55:51.629"/>
</kw>
<status status="PASS" starttime="20250507 08:55:35.062" endtime="20250507 08:55:51.629"/>
</kw>
<msg timestamp="20250507 08:55:51.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:35.062" endtime="20250507 08:55:51.629"/>
</kw>
<msg timestamp="20250507 08:55:51.629" level="INFO">${result} = Transfer leadership successfully to ceee72ac-933e-4e12-9401-8055bab0b359.</msg>
<status status="PASS" starttime="20250507 08:55:35.061" endtime="20250507 08:55:51.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:51.630" level="INFO">Transfer leadership successfully to ceee72ac-933e-4e12-9401-8055bab0b359.</msg>
<status status="PASS" starttime="20250507 08:55:51.629" endtime="20250507 08:55:51.630"/>
</kw>
<msg timestamp="20250507 08:55:51.630" level="INFO">${transfer_result} = Transfer leadership successfully to ceee72ac-933e-4e12-9401-8055bab0b359.</msg>
<status status="PASS" starttime="20250507 08:55:31.326" endtime="20250507 08:55:51.630"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${transfer_result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 08:55:51.630" endtime="20250507 08:55:51.630"/>
</kw>
<kw name="Get SCM Node count">
<var>${node_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:51.634" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:55.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:55.416" level="INFO">${output} = scm2.org:9894:LEADER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm3.org:9894:FOLLOWER:107d1c32-5bce-4e4b-8cfe-ec9c432f5...</msg>
<status status="PASS" starttime="20250507 08:55:51.631" endtime="20250507 08:55:55.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:55.417" level="INFO">scm2.org:9894:LEADER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm3.org:9894:FOLLOWER:107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9:172.25.0.118</msg>
<status status="PASS" starttime="20250507 08:55:55.417" endtime="20250507 08:55:55.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:55.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:55.417" endtime="20250507 08:55:55.418"/>
</kw>
<status status="PASS" starttime="20250507 08:55:51.631" endtime="20250507 08:55:55.418"/>
</kw>
<msg timestamp="20250507 08:55:55.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:51.631" endtime="20250507 08:55:55.418"/>
</kw>
<msg timestamp="20250507 08:55:55.418" level="INFO">${result} = scm2.org:9894:LEADER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm3.org:9894:FOLLOWER:107d1c32-5bce-4e4b-8cfe-ec9c432f5...</msg>
<status status="PASS" starttime="20250507 08:55:51.631" endtime="20250507 08:55:55.418"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20250507 08:55:55.419" level="INFO">3 out of 3 lines matched</msg>
<msg timestamp="20250507 08:55:55.419" level="INFO">${nodes_in_quorum} = scm2.org:9894:LEADER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116
scm3.org:9894:FOLLOWER:107d1c32-5bce-4e4b-8cfe-ec9c432f5...</msg>
<status status="PASS" starttime="20250507 08:55:55.418" endtime="20250507 08:55:55.419"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20250507 08:55:55.419" level="INFO">3 lines</msg>
<msg timestamp="20250507 08:55:55.419" level="INFO">${node_count} = 3</msg>
<status status="PASS" starttime="20250507 08:55:55.419" endtime="20250507 08:55:55.419"/>
</kw>
<msg timestamp="20250507 08:55:55.419" level="INFO">${node_count} = 3</msg>
<status status="PASS" starttime="20250507 08:55:51.630" endtime="20250507 08:55:55.420"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_pre}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250507 08:55:55.420" level="INFO">${node_count_pre} = 3</msg>
<status status="PASS" starttime="20250507 08:55:55.420" endtime="20250507 08:55:55.420"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${node_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250507 08:55:55.420" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20250507 08:55:55.420" endtime="20250507 08:55:55.420"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_expect}</var>
<arg>${n}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250507 08:55:55.421" level="INFO">${node_count_expect} = 2</msg>
<status status="PASS" starttime="20250507 08:55:55.420" endtime="20250507 08:55:55.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count before SCM Decommission: ${node_count_pre}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:55.421" level="INFO">SCM Instance Count before SCM Decommission: 3</msg>
<status status="PASS" starttime="20250507 08:55:55.421" endtime="20250507 08:55:55.421"/>
</kw>
<kw name="Execute" library="os">
<var>${decommission_res}</var>
<arg>ozone admin scm decommission --nodeid=${primordial_scm_id}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:55.424" level="INFO">Running command 'ozone admin scm decommission --nodeid=107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:55:59.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:55:59.152" level="INFO">${output} = Decommissioned Scm 107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9</msg>
<status status="PASS" starttime="20250507 08:55:55.422" endtime="20250507 08:55:59.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:59.153" level="INFO">Decommissioned Scm 107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9</msg>
<status status="PASS" starttime="20250507 08:55:59.153" endtime="20250507 08:55:59.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:55:59.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:55:59.153" endtime="20250507 08:55:59.154"/>
</kw>
<status status="PASS" starttime="20250507 08:55:55.422" endtime="20250507 08:55:59.154"/>
</kw>
<msg timestamp="20250507 08:55:59.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:55.422" endtime="20250507 08:55:59.154"/>
</kw>
<msg timestamp="20250507 08:55:59.154" level="INFO">${decommission_res} = Decommissioned Scm 107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9</msg>
<status status="PASS" starttime="20250507 08:55:55.421" endtime="20250507 08:55:59.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${decommission_res}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:55:59.154" level="INFO">Decommissioned Scm 107d1c32-5bce-4e4b-8cfe-ec9c432f5ec9</msg>
<status status="PASS" starttime="20250507 08:55:59.154" endtime="20250507 08:55:59.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${decommission_res}</arg>
<arg>Decommissioned</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 08:55:59.155" endtime="20250507 08:55:59.155"/>
</kw>
<kw name="Get SCM Node count">
<var>${node_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:55:59.159" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:56:03.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:56:03.026" level="INFO">${output} = scm2.org:9894:LEADER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116</msg>
<status status="PASS" starttime="20250507 08:55:59.156" endtime="20250507 08:56:03.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:56:03.027" level="INFO">scm2.org:9894:LEADER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116</msg>
<status status="PASS" starttime="20250507 08:56:03.027" endtime="20250507 08:56:03.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:56:03.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:56:03.028" endtime="20250507 08:56:03.028"/>
</kw>
<status status="PASS" starttime="20250507 08:55:59.156" endtime="20250507 08:56:03.028"/>
</kw>
<msg timestamp="20250507 08:56:03.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:55:59.156" endtime="20250507 08:56:03.028"/>
</kw>
<msg timestamp="20250507 08:56:03.028" level="INFO">${result} = scm2.org:9894:LEADER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116</msg>
<status status="PASS" starttime="20250507 08:55:59.155" endtime="20250507 08:56:03.028"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20250507 08:56:03.029" level="INFO">2 out of 2 lines matched</msg>
<msg timestamp="20250507 08:56:03.029" level="INFO">${nodes_in_quorum} = scm2.org:9894:LEADER:ceee72ac-933e-4e12-9401-8055bab0b359:172.25.0.117
scm1.org:9894:FOLLOWER:96c32c81-94b3-476d-b23f-71b32d061dd5:172.25.0.116</msg>
<status status="PASS" starttime="20250507 08:56:03.028" endtime="20250507 08:56:03.029"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20250507 08:56:03.029" level="INFO">2 lines</msg>
<msg timestamp="20250507 08:56:03.029" level="INFO">${node_count} = 2</msg>
<status status="PASS" starttime="20250507 08:56:03.029" endtime="20250507 08:56:03.029"/>
</kw>
<msg timestamp="20250507 08:56:03.029" level="INFO">${node_count} = 2</msg>
<status status="PASS" starttime="20250507 08:55:59.155" endtime="20250507 08:56:03.029"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_post}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250507 08:56:03.030" level="INFO">${node_count_post} = 2</msg>
<status status="PASS" starttime="20250507 08:56:03.029" endtime="20250507 08:56:03.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count after SCM Decommission: ${node_count_post}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:56:03.030" level="INFO">SCM Instance Count after SCM Decommission: 2</msg>
<status status="PASS" starttime="20250507 08:56:03.030" endtime="20250507 08:56:03.030"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${node_count_expect}</arg>
<arg>${node_count_post}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250507 08:56:03.030" endtime="20250507 08:56:03.031"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get /${VOLUME}/${BUCKET}/${TESTFILE} /tmp/getdecomfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:56:03.034" level="INFO">Running command 'ozone sh key get /decom-volume/decom-bucket/testfiledecomm /tmp/getdecomfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:56:11.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:56:11.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 08:56:03.032" endtime="20250507 08:56:11.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:56:11.024" level="INFO"/>
<status status="PASS" starttime="20250507 08:56:11.024" endtime="20250507 08:56:11.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:56:11.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:56:11.024" endtime="20250507 08:56:11.025"/>
</kw>
<status status="PASS" starttime="20250507 08:56:03.031" endtime="20250507 08:56:11.025"/>
</kw>
<msg timestamp="20250507 08:56:11.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:56:03.031" endtime="20250507 08:56:11.025"/>
</kw>
<status status="PASS" starttime="20250507 08:56:03.031" endtime="20250507 08:56:11.025"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum_new}</var>
<arg>md5sum /tmp/getdecomfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 08:56:11.028" level="INFO">Running command 'md5sum /tmp/getdecomfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 08:56:11.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 08:56:11.033" level="INFO">${output} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20250507 08:56:11.026" endtime="20250507 08:56:11.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 08:56:11.034" level="INFO">ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20250507 08:56:11.033" endtime="20250507 08:56:11.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 08:56:11.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 08:56:11.034" endtime="20250507 08:56:11.034"/>
</kw>
<status status="PASS" starttime="20250507 08:56:11.026" endtime="20250507 08:56:11.034"/>
</kw>
<msg timestamp="20250507 08:56:11.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 08:56:11.026" endtime="20250507 08:56:11.034"/>
</kw>
<msg timestamp="20250507 08:56:11.035" level="INFO">${md5sum_new} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20250507 08:56:11.025" endtime="20250507 08:56:11.035"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${md5sum_new}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250507 08:56:11.035" endtime="20250507 08:56:11.035"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250507 08:55:10.298" endtime="20250507 08:56:11.035"/>
</test>
<doc>Test Ozone SCM Decommissioning</doc>
<status status="PASS" starttime="20250507 08:55:10.124" endtime="20250507 08:56:11.036"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="82484"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" skip="0" id="s1" name="ozonesecure-ha-scm-decommission">ozonesecure-ha-scm-decommission</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Primordial-Scm">ozonesecure-ha-scm-decommission.Primordial-Scm</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Scm-Decommission">ozonesecure-ha-scm-decommission.Scm-Decommission</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
