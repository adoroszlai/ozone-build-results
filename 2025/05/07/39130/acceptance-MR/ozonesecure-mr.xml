<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250507 20:22:55.496" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250507 20:18:36.505" endtime="20250507 20:18:36.506"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:18:36.509" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:18:36.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:18:36.512" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250507 20:18:36.507" endtime="20250507 20:18:36.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:18:36.513" level="INFO">scm</msg>
<status status="PASS" starttime="20250507 20:18:36.512" endtime="20250507 20:18:36.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:18:36.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 20:18:36.513" endtime="20250507 20:18:36.513"/>
</kw>
<status status="PASS" starttime="20250507 20:18:36.506" endtime="20250507 20:18:36.513"/>
</kw>
<msg timestamp="20250507 20:18:36.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:18:36.506" endtime="20250507 20:18:36.513"/>
</kw>
<msg timestamp="20250507 20:18:36.514" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250507 20:18:36.506" endtime="20250507 20:18:36.514"/>
</kw>
<msg timestamp="20250507 20:18:36.514" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250507 20:18:36.506" endtime="20250507 20:18:36.514"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250507 20:18:36.514" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250507 20:18:36.514" endtime="20250507 20:18:36.514"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:18:36.517" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:18:36.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:18:36.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 20:18:36.515" endtime="20250507 20:18:36.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:18:36.537" level="INFO"/>
<status status="PASS" starttime="20250507 20:18:36.537" endtime="20250507 20:18:36.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:18:36.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 20:18:36.537" endtime="20250507 20:18:36.538"/>
</kw>
<status status="PASS" starttime="20250507 20:18:36.515" endtime="20250507 20:18:36.538"/>
</kw>
<msg timestamp="20250507 20:18:36.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:18:36.515" endtime="20250507 20:18:36.538"/>
</kw>
<status status="PASS" starttime="20250507 20:18:36.514" endtime="20250507 20:18:36.538"/>
</kw>
<status status="PASS" starttime="20250507 20:18:36.514" endtime="20250507 20:18:36.538"/>
</kw>
<status status="PASS" starttime="20250507 20:18:36.505" endtime="20250507 20:18:36.538"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250507 20:18:36.504" endtime="20250507 20:18:36.538"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250507 20:18:36.473" endtime="20250507 20:18:36.539"/>
</suite>
<suite id="s1-s2" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s2-t1" name="Create test volume, bucket and key" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:18:37.102" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:18:40.095" level="INFO">${rc} = 255</msg>
<msg timestamp="20250507 20:18:40.095" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20250507 20:18:37.100" endtime="20250507 20:18:40.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:18:40.096" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20250507 20:18:40.095" endtime="20250507 20:18:40.096"/>
</kw>
<msg timestamp="20250507 20:18:40.096" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20250507 20:18:37.099" endtime="20250507 20:18:40.096"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:18:40.100" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:18:43.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:18:43.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 20:18:40.098" endtime="20250507 20:18:43.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:18:43.092" level="INFO"/>
<status status="PASS" starttime="20250507 20:18:43.092" endtime="20250507 20:18:43.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:18:43.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 20:18:43.092" endtime="20250507 20:18:43.093"/>
</kw>
<status status="PASS" starttime="20250507 20:18:40.097" endtime="20250507 20:18:43.093"/>
</kw>
<msg timestamp="20250507 20:18:43.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:18:40.097" endtime="20250507 20:18:43.093"/>
</kw>
<msg timestamp="20250507 20:18:43.093" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250507 20:18:40.097" endtime="20250507 20:18:43.093"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:18:43.093" endtime="20250507 20:18:43.094"/>
</kw>
<status status="PASS" starttime="20250507 20:18:40.097" endtime="20250507 20:18:43.094"/>
</kw>
<status status="PASS" starttime="20250507 20:18:40.096" endtime="20250507 20:18:43.094"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --space-quota 1TB --layout fso</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:18:43.098" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --space-quota 1TB --layout fso 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:18:45.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:18:45.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 20:18:43.095" endtime="20250507 20:18:45.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:18:45.870" level="INFO"/>
<status status="PASS" starttime="20250507 20:18:45.870" endtime="20250507 20:18:45.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:18:45.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 20:18:45.870" endtime="20250507 20:18:45.871"/>
</kw>
<status status="PASS" starttime="20250507 20:18:43.095" endtime="20250507 20:18:45.871"/>
</kw>
<msg timestamp="20250507 20:18:45.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:18:43.095" endtime="20250507 20:18:45.871"/>
</kw>
<status status="PASS" starttime="20250507 20:18:43.095" endtime="20250507 20:18:45.871"/>
</kw>
<status status="PASS" starttime="20250507 20:18:43.094" endtime="20250507 20:18:45.871"/>
</kw>
<status status="PASS" starttime="20250507 20:18:43.094" endtime="20250507 20:18:45.871"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250507 20:18:45.871" endtime="20250507 20:18:45.872"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:18:45.875" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:18:49.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:18:49.119" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creatio...</msg>
<status status="PASS" starttime="20250507 20:18:45.873" endtime="20250507 20:18:49.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:18:49.120" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2025-05-07T20:18:45.765Z",
  "modificationTime" : "2025-05-07T20:18:45.765Z",
  "sourcePathExist" : true,
  "quotaInBytes" : 1099511627776,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20250507 20:18:49.119" endtime="20250507 20:18:49.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:18:49.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 20:18:49.120" endtime="20250507 20:18:49.120"/>
</kw>
<status status="PASS" starttime="20250507 20:18:45.872" endtime="20250507 20:18:49.120"/>
</kw>
<msg timestamp="20250507 20:18:49.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:18:45.872" endtime="20250507 20:18:49.120"/>
</kw>
<msg timestamp="20250507 20:18:49.120" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creatio...</msg>
<status status="PASS" starttime="20250507 20:18:45.872" endtime="20250507 20:18:49.120"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:18:49.121" endtime="20250507 20:18:49.121"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:18:49.123" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250507 20:18:49.123" endtime="20250507 20:18:49.123"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:18:49.124" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250507 20:18:49.123" endtime="20250507 20:18:49.124"/>
</kw>
<status status="PASS" starttime="20250507 20:18:49.123" endtime="20250507 20:18:49.124"/>
</kw>
<msg timestamp="20250507 20:18:49.124" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250507 20:18:49.122" endtime="20250507 20:18:49.124"/>
</kw>
<status status="PASS" starttime="20250507 20:18:49.122" endtime="20250507 20:18:49.124"/>
</kw>
<msg timestamp="20250507 20:18:49.124" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20250507 20:18:49.121" endtime="20250507 20:18:49.124"/>
</kw>
<msg timestamp="20250507 20:18:49.124" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20250507 20:18:49.121" endtime="20250507 20:18:49.124"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:18:49.127" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:18:52.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:18:52.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 20:18:49.125" endtime="20250507 20:18:52.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:18:52.082" level="INFO"/>
<status status="PASS" starttime="20250507 20:18:52.082" endtime="20250507 20:18:52.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:18:52.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 20:18:52.082" endtime="20250507 20:18:52.083"/>
</kw>
<status status="PASS" starttime="20250507 20:18:49.125" endtime="20250507 20:18:52.083"/>
</kw>
<msg timestamp="20250507 20:18:52.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:18:49.125" endtime="20250507 20:18:52.083"/>
</kw>
<status status="PASS" starttime="20250507 20:18:49.124" endtime="20250507 20:18:52.083"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:18:52.086" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:18:57.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:18:57.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 20:18:52.084" endtime="20250507 20:18:57.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:18:57.305" level="INFO"/>
<status status="PASS" starttime="20250507 20:18:57.304" endtime="20250507 20:18:57.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:18:57.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 20:18:57.305" endtime="20250507 20:18:57.305"/>
</kw>
<status status="PASS" starttime="20250507 20:18:52.084" endtime="20250507 20:18:57.305"/>
</kw>
<msg timestamp="20250507 20:18:57.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:18:52.083" endtime="20250507 20:18:57.306"/>
</kw>
<status status="PASS" starttime="20250507 20:18:52.083" endtime="20250507 20:18:57.306"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:18:57.309" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:01.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:01.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 20:18:57.307" endtime="20250507 20:19:01.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:01.984" level="INFO"/>
<status status="PASS" starttime="20250507 20:19:01.983" endtime="20250507 20:19:01.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:01.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:01.984" endtime="20250507 20:19:01.984"/>
</kw>
<status status="PASS" starttime="20250507 20:18:57.306" endtime="20250507 20:19:01.984"/>
</kw>
<msg timestamp="20250507 20:19:01.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:18:57.306" endtime="20250507 20:19:01.984"/>
</kw>
<status status="PASS" starttime="20250507 20:18:57.306" endtime="20250507 20:19:01.984"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:01.988" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:06.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:06.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 20:19:01.985" endtime="20250507 20:19:06.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:06.425" level="INFO"/>
<status status="PASS" starttime="20250507 20:19:06.425" endtime="20250507 20:19:06.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:06.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:06.426" endtime="20250507 20:19:06.426"/>
</kw>
<status status="PASS" starttime="20250507 20:19:01.985" endtime="20250507 20:19:06.426"/>
</kw>
<msg timestamp="20250507 20:19:06.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:01.985" endtime="20250507 20:19:06.427"/>
</kw>
<status status="PASS" starttime="20250507 20:19:01.985" endtime="20250507 20:19:06.427"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250507 20:18:37.099" endtime="20250507 20:19:06.427"/>
</test>
<test id="s1-s2-t2" name="Create user dir for hadoop" line="51">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:19:06.431" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250507 20:19:06.431" endtime="20250507 20:19:06.431"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:19:06.432" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250507 20:19:06.431" endtime="20250507 20:19:06.432"/>
</kw>
<status status="PASS" starttime="20250507 20:19:06.430" endtime="20250507 20:19:06.432"/>
</kw>
<msg timestamp="20250507 20:19:06.432" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250507 20:19:06.429" endtime="20250507 20:19:06.432"/>
</kw>
<status status="PASS" starttime="20250507 20:19:06.429" endtime="20250507 20:19:06.432"/>
</kw>
<msg timestamp="20250507 20:19:06.432" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20250507 20:19:06.428" endtime="20250507 20:19:06.432"/>
</kw>
<msg timestamp="20250507 20:19:06.432" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20250507 20:19:06.428" endtime="20250507 20:19:06.432"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:06.436" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:09.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:09.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 20:19:06.433" endtime="20250507 20:19:09.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:09.374" level="INFO"/>
<status status="PASS" starttime="20250507 20:19:09.373" endtime="20250507 20:19:09.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:09.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:09.374" endtime="20250507 20:19:09.374"/>
</kw>
<status status="PASS" starttime="20250507 20:19:06.433" endtime="20250507 20:19:09.375"/>
</kw>
<msg timestamp="20250507 20:19:09.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:06.433" endtime="20250507 20:19:09.375"/>
</kw>
<status status="PASS" starttime="20250507 20:19:06.432" endtime="20250507 20:19:09.375"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:09.378" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:12.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:12.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 20:19:09.376" endtime="20250507 20:19:12.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:12.276" level="INFO"/>
<status status="PASS" starttime="20250507 20:19:12.275" endtime="20250507 20:19:12.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:12.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:12.276" endtime="20250507 20:19:12.276"/>
</kw>
<status status="PASS" starttime="20250507 20:19:09.376" endtime="20250507 20:19:12.276"/>
</kw>
<msg timestamp="20250507 20:19:12.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:09.375" endtime="20250507 20:19:12.276"/>
</kw>
<status status="PASS" starttime="20250507 20:19:09.375" endtime="20250507 20:19:12.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250507 20:19:06.427" endtime="20250507 20:19:12.277"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20250507 20:18:37.062" endtime="20250507 20:19:12.278"/>
</suite>
<suite id="s1-s3" name="Kinit-Hadoop" source="/opt/ozone/smoketest/kinit-hadoop.robot">
<test id="s1-s3-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250507 20:19:13.680" endtime="20250507 20:19:13.680"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:13.683" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:13.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:13.687" level="INFO">${output} = rm</msg>
<status status="PASS" starttime="20250507 20:19:13.682" endtime="20250507 20:19:13.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:13.688" level="INFO">rm</msg>
<status status="PASS" starttime="20250507 20:19:13.688" endtime="20250507 20:19:13.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:13.689" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:13.688" endtime="20250507 20:19:13.689"/>
</kw>
<status status="PASS" starttime="20250507 20:19:13.681" endtime="20250507 20:19:13.689"/>
</kw>
<msg timestamp="20250507 20:19:13.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:13.681" endtime="20250507 20:19:13.689"/>
</kw>
<msg timestamp="20250507 20:19:13.689" level="INFO">${instance} = rm</msg>
<status status="PASS" starttime="20250507 20:19:13.681" endtime="20250507 20:19:13.689"/>
</kw>
<msg timestamp="20250507 20:19:13.690" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250507 20:19:13.680" endtime="20250507 20:19:13.690"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250507 20:19:13.690" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250507 20:19:13.690" endtime="20250507 20:19:13.690"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:13.694" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/hadoop.keytab hadoop/rm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:13.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:13.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 20:19:13.693" endtime="20250507 20:19:13.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:13.711" level="INFO"/>
<status status="PASS" starttime="20250507 20:19:13.710" endtime="20250507 20:19:13.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:13.711" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:13.711" endtime="20250507 20:19:13.711"/>
</kw>
<status status="PASS" starttime="20250507 20:19:13.692" endtime="20250507 20:19:13.712"/>
</kw>
<msg timestamp="20250507 20:19:13.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:13.692" endtime="20250507 20:19:13.712"/>
</kw>
<status status="PASS" starttime="20250507 20:19:13.690" endtime="20250507 20:19:13.712"/>
</kw>
<status status="PASS" starttime="20250507 20:19:13.690" endtime="20250507 20:19:13.712"/>
</kw>
<status status="PASS" starttime="20250507 20:19:13.680" endtime="20250507 20:19:13.712"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250507 20:19:13.679" endtime="20250507 20:19:13.712"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250507 20:19:13.641" endtime="20250507 20:19:13.713"/>
</suite>
<suite id="s1-s4" name="hadoop-2.10.2-hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:19:14.383" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250507 20:19:14.383" endtime="20250507 20:19:14.383"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:19:14.384" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250507 20:19:14.383" endtime="20250507 20:19:14.384"/>
</kw>
<status status="PASS" starttime="20250507 20:19:14.383" endtime="20250507 20:19:14.384"/>
</kw>
<msg timestamp="20250507 20:19:14.384" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250507 20:19:14.382" endtime="20250507 20:19:14.384"/>
</kw>
<status status="PASS" starttime="20250507 20:19:14.382" endtime="20250507 20:19:14.384"/>
</kw>
<msg timestamp="20250507 20:19:14.384" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20250507 20:19:14.381" endtime="20250507 20:19:14.384"/>
</kw>
<msg timestamp="20250507 20:19:14.385" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20250507 20:19:14.380" endtime="20250507 20:19:14.385"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250507 20:19:14.385" level="INFO">${random} = 43860</msg>
<status status="PASS" starttime="20250507 20:19:14.385" endtime="20250507 20:19:14.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:14.389" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-43860 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:20.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:20.186" level="INFO">${output} = 2025-05-07 20:19:17 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:18 INFO  MetricsConfig:115 - loaded propertie...</msg>
<status status="PASS" starttime="20250507 20:19:14.387" endtime="20250507 20:19:20.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:20.186" level="INFO">2025-05-07 20:19:17 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:18 INFO  MetricsConfig:115 - loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:19:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2025-05-07 20:19:18 INFO  NettyConfigKeys$DataStream:137 - setTlsConf GrpcTlsConfig0-</msg>
<status status="PASS" starttime="20250507 20:19:20.186" endtime="20250507 20:19:20.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:20.187" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:20.187" endtime="20250507 20:19:20.187"/>
</kw>
<status status="PASS" starttime="20250507 20:19:14.387" endtime="20250507 20:19:20.187"/>
</kw>
<msg timestamp="20250507 20:19:20.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:14.386" endtime="20250507 20:19:20.187"/>
</kw>
<msg timestamp="20250507 20:19:20.188" level="INFO">${result} = 2025-05-07 20:19:17 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:18 INFO  MetricsConfig:115 - loaded propertie...</msg>
<status status="PASS" starttime="20250507 20:19:14.386" endtime="20250507 20:19:20.188"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:19:20.188" endtime="20250507 20:19:20.188"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:20.190" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:22.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:22.239" level="INFO">${output} = 2025-05-07 20:19:21 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
Found 3 items
drwxrwxrwx   - testuser hadoop          0 2025-0...</msg>
<status status="PASS" starttime="20250507 20:19:20.189" endtime="20250507 20:19:22.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:22.241" level="INFO">2025-05-07 20:19:21 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
Found 3 items
drwxrwxrwx   - testuser hadoop          0 2025-05-07 20:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop   hadoop      15830 2025-05-07 20:19 o3fs://bucket1.volume1.om/ozone-43860
drwxrwxrwx   - testuser hadoop          0 2025-05-07 20:19 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20250507 20:19:22.240" endtime="20250507 20:19:22.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:22.241" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:22.241" endtime="20250507 20:19:22.241"/>
</kw>
<status status="PASS" starttime="20250507 20:19:20.189" endtime="20250507 20:19:22.241"/>
</kw>
<msg timestamp="20250507 20:19:22.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:20.189" endtime="20250507 20:19:22.242"/>
</kw>
<msg timestamp="20250507 20:19:22.242" level="INFO">${result} = 2025-05-07 20:19:21 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
Found 3 items
drwxrwxrwx   - testuser hadoop          0 2025-0...</msg>
<status status="PASS" starttime="20250507 20:19:20.188" endtime="20250507 20:19:22.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:19:22.242" endtime="20250507 20:19:22.242"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:22.245" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-43860 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:25.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:25.616" level="INFO">${output} = 2025-05-07 20:19:23 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:24 INFO  MetricsConfig:115 - loaded propertie...</msg>
<status status="PASS" starttime="20250507 20:19:22.243" endtime="20250507 20:19:25.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:25.617" level="INFO">2025-05-07 20:19:23 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:24 INFO  MetricsConfig:115 - loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:19:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
AWS Java SDK 1.11.271,
which has the following notices:
 * This software includes third party software subject to the following copyrights:
   - XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
   - PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'reload4j', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.reload4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://reload4j.qos.ch/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
reload4j 1.2.18.3,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Java Concurrency in Practice book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20250507 20:19:25.617" endtime="20250507 20:19:25.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:25.618" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:25.618" endtime="20250507 20:19:25.618"/>
</kw>
<status status="PASS" starttime="20250507 20:19:22.243" endtime="20250507 20:19:25.618"/>
</kw>
<msg timestamp="20250507 20:19:25.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:22.243" endtime="20250507 20:19:25.619"/>
</kw>
<msg timestamp="20250507 20:19:25.621" level="INFO">${result} = 2025-05-07 20:19:23 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:24 INFO  MetricsConfig:115 - loaded propertie...</msg>
<status status="PASS" starttime="20250507 20:19:22.242" endtime="20250507 20:19:25.621"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:19:25.621" endtime="20250507 20:19:25.621"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -checksum ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:25.624" level="INFO">Running command 'hdfs dfs -checksum o3fs://bucket1.volume1.om//ozone-43860 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:29.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:29.006" level="INFO">${output} = 2025-05-07 20:19:27 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:27 INFO  MetricsConfig:115 - loaded propertie...</msg>
<status status="PASS" starttime="20250507 20:19:25.622" endtime="20250507 20:19:29.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:29.007" level="INFO">2025-05-07 20:19:27 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:27 INFO  MetricsConfig:115 - loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:19:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
o3fs://bucket1.volume1.om/ozone-43860	COMPOSITE-CRC32	287e7e09</msg>
<status status="PASS" starttime="20250507 20:19:29.007" endtime="20250507 20:19:29.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:29.008" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:29.007" endtime="20250507 20:19:29.008"/>
</kw>
<status status="PASS" starttime="20250507 20:19:25.622" endtime="20250507 20:19:29.008"/>
</kw>
<msg timestamp="20250507 20:19:29.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:25.622" endtime="20250507 20:19:29.008"/>
</kw>
<msg timestamp="20250507 20:19:29.008" level="INFO">${result} = 2025-05-07 20:19:27 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:27 INFO  MetricsConfig:115 - loaded propertie...</msg>
<status status="PASS" starttime="20250507 20:19:25.621" endtime="20250507 20:19:29.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:19:29.008" endtime="20250507 20:19:29.009"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250507 20:19:14.380" endtime="20250507 20:19:29.009"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20250507 20:19:14.330" endtime="20250507 20:19:29.010"/>
</suite>
<suite id="s1-s5" name="hadoop-2.10.2-hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s5-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:19:29.479" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250507 20:19:29.479" endtime="20250507 20:19:29.480"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:19:29.480" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250507 20:19:29.480" endtime="20250507 20:19:29.480"/>
</kw>
<status status="PASS" starttime="20250507 20:19:29.479" endtime="20250507 20:19:29.480"/>
</kw>
<msg timestamp="20250507 20:19:29.480" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250507 20:19:29.479" endtime="20250507 20:19:29.480"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250507 20:19:29.481" endtime="20250507 20:19:29.481"/>
</kw>
<msg timestamp="20250507 20:19:29.481" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20250507 20:19:29.480" endtime="20250507 20:19:29.481"/>
</kw>
<status status="PASS" starttime="20250507 20:19:29.478" endtime="20250507 20:19:29.481"/>
</kw>
<msg timestamp="20250507 20:19:29.481" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20250507 20:19:29.478" endtime="20250507 20:19:29.481"/>
</kw>
<msg timestamp="20250507 20:19:29.482" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20250507 20:19:29.477" endtime="20250507 20:19:29.482"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250507 20:19:29.482" level="INFO">${random} = 13545</msg>
<status status="PASS" starttime="20250507 20:19:29.482" endtime="20250507 20:19:29.482"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:29.484" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-13545 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:33.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:33.175" level="INFO">${output} = 2025-05-07 20:19:31 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:31 INFO  MetricsConfig:115 - loaded propertie...</msg>
<status status="PASS" starttime="20250507 20:19:29.483" endtime="20250507 20:19:33.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:33.176" level="INFO">2025-05-07 20:19:31 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:31 INFO  MetricsConfig:115 - loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:19:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2025-05-07 20:19:31 INFO  NettyConfigKeys$DataStream:137 - setTlsConf GrpcTlsConfig0-</msg>
<status status="PASS" starttime="20250507 20:19:33.175" endtime="20250507 20:19:33.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:33.176" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:33.176" endtime="20250507 20:19:33.176"/>
</kw>
<status status="PASS" starttime="20250507 20:19:29.483" endtime="20250507 20:19:33.176"/>
</kw>
<msg timestamp="20250507 20:19:33.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:29.482" endtime="20250507 20:19:33.177"/>
</kw>
<msg timestamp="20250507 20:19:33.177" level="INFO">${result} = 2025-05-07 20:19:31 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:31 INFO  MetricsConfig:115 - loaded propertie...</msg>
<status status="PASS" starttime="20250507 20:19:29.482" endtime="20250507 20:19:33.177"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:19:33.177" endtime="20250507 20:19:33.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:33.180" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:35.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:35.042" level="INFO">${output} = 2025-05-07 20:19:34 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
Found 4 items
drwxrwxrwx   - testuser hadoop          0 2025-0...</msg>
<status status="PASS" starttime="20250507 20:19:33.178" endtime="20250507 20:19:35.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:35.043" level="INFO">2025-05-07 20:19:34 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
Found 4 items
drwxrwxrwx   - testuser hadoop          0 2025-05-07 20:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop   hadoop      15830 2025-05-07 20:19 ofs://om/volume1/bucket1/ozone-13545
-rw-rw-rw-   3 hadoop   hadoop      15830 2025-05-07 20:19 ofs://om/volume1/bucket1/ozone-43860
drwxrwxrwx   - testuser hadoop          0 2025-05-07 20:19 ofs://om/volume1/bucket1/user</msg>
<status status="PASS" starttime="20250507 20:19:35.043" endtime="20250507 20:19:35.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:35.044" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:35.043" endtime="20250507 20:19:35.044"/>
</kw>
<status status="PASS" starttime="20250507 20:19:33.178" endtime="20250507 20:19:35.044"/>
</kw>
<msg timestamp="20250507 20:19:35.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:33.178" endtime="20250507 20:19:35.044"/>
</kw>
<msg timestamp="20250507 20:19:35.044" level="INFO">${result} = 2025-05-07 20:19:34 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
Found 4 items
drwxrwxrwx   - testuser hadoop          0 2025-0...</msg>
<status status="PASS" starttime="20250507 20:19:33.177" endtime="20250507 20:19:35.044"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:19:35.044" endtime="20250507 20:19:35.045"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:35.047" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-13545 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:38.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:38.525" level="INFO">${output} = 2025-05-07 20:19:36 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:37 INFO  MetricsConfig:115 - loaded propertie...</msg>
<status status="PASS" starttime="20250507 20:19:35.046" endtime="20250507 20:19:38.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:38.526" level="INFO">2025-05-07 20:19:36 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:37 INFO  MetricsConfig:115 - loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:19:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
AWS Java SDK 1.11.271,
which has the following notices:
 * This software includes third party software subject to the following copyrights:
   - XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
   - PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'reload4j', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.reload4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://reload4j.qos.ch/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
reload4j 1.2.18.3,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Java Concurrency in Practice book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20250507 20:19:38.525" endtime="20250507 20:19:38.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:38.527" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:38.526" endtime="20250507 20:19:38.527"/>
</kw>
<status status="PASS" starttime="20250507 20:19:35.045" endtime="20250507 20:19:38.527"/>
</kw>
<msg timestamp="20250507 20:19:38.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:35.045" endtime="20250507 20:19:38.527"/>
</kw>
<msg timestamp="20250507 20:19:38.529" level="INFO">${result} = 2025-05-07 20:19:36 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:37 INFO  MetricsConfig:115 - loaded propertie...</msg>
<status status="PASS" starttime="20250507 20:19:35.045" endtime="20250507 20:19:38.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:19:38.530" endtime="20250507 20:19:38.530"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -checksum ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:38.532" level="INFO">Running command 'hdfs dfs -checksum ofs://om/volume1/bucket1/ozone-13545 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:41.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:41.873" level="INFO">${output} = 2025-05-07 20:19:40 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:40 INFO  MetricsConfig:115 - loaded propertie...</msg>
<status status="PASS" starttime="20250507 20:19:38.531" endtime="20250507 20:19:41.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:41.874" level="INFO">2025-05-07 20:19:40 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:40 INFO  MetricsConfig:115 - loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:19:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
ofs://om/volume1/bucket1/ozone-13545	COMPOSITE-CRC32	287e7e09</msg>
<status status="PASS" starttime="20250507 20:19:41.873" endtime="20250507 20:19:41.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:41.874" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:41.874" endtime="20250507 20:19:41.874"/>
</kw>
<status status="PASS" starttime="20250507 20:19:38.531" endtime="20250507 20:19:41.875"/>
</kw>
<msg timestamp="20250507 20:19:41.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:38.530" endtime="20250507 20:19:41.875"/>
</kw>
<msg timestamp="20250507 20:19:41.875" level="INFO">${result} = 2025-05-07 20:19:40 WARN  Configuration:1733 - No unit for ozone.client.server-defaults.validity.period.ms(3600000) assuming MILLISECONDS
2025-05-07 20:19:40 INFO  MetricsConfig:115 - loaded propertie...</msg>
<status status="PASS" starttime="20250507 20:19:38.530" endtime="20250507 20:19:41.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:19:41.875" endtime="20250507 20:19:41.875"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250507 20:19:29.476" endtime="20250507 20:19:41.876"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20250507 20:19:29.440" endtime="20250507 20:19:41.876"/>
</suite>
<suite id="s1-s6" name="Kinit-Hadoop" source="/opt/ozone/smoketest/kinit-hadoop.robot">
<test id="s1-s6-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250507 20:19:43.747" endtime="20250507 20:19:43.747"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:43.750" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:43.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:43.754" level="INFO">${output} = rm</msg>
<status status="PASS" starttime="20250507 20:19:43.749" endtime="20250507 20:19:43.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:43.755" level="INFO">rm</msg>
<status status="PASS" starttime="20250507 20:19:43.755" endtime="20250507 20:19:43.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:43.756" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:43.755" endtime="20250507 20:19:43.756"/>
</kw>
<status status="PASS" starttime="20250507 20:19:43.748" endtime="20250507 20:19:43.756"/>
</kw>
<msg timestamp="20250507 20:19:43.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:43.748" endtime="20250507 20:19:43.756"/>
</kw>
<msg timestamp="20250507 20:19:43.756" level="INFO">${instance} = rm</msg>
<status status="PASS" starttime="20250507 20:19:43.747" endtime="20250507 20:19:43.756"/>
</kw>
<msg timestamp="20250507 20:19:43.756" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250507 20:19:43.747" endtime="20250507 20:19:43.757"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250507 20:19:43.757" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250507 20:19:43.757" endtime="20250507 20:19:43.757"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:43.761" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/hadoop.keytab hadoop/rm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:43.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:43.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250507 20:19:43.759" endtime="20250507 20:19:43.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:43.895" level="INFO"/>
<status status="PASS" starttime="20250507 20:19:43.895" endtime="20250507 20:19:43.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:43.896" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:43.895" endtime="20250507 20:19:43.896"/>
</kw>
<status status="PASS" starttime="20250507 20:19:43.759" endtime="20250507 20:19:43.896"/>
</kw>
<msg timestamp="20250507 20:19:43.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:43.759" endtime="20250507 20:19:43.896"/>
</kw>
<status status="PASS" starttime="20250507 20:19:43.757" endtime="20250507 20:19:43.896"/>
</kw>
<status status="PASS" starttime="20250507 20:19:43.757" endtime="20250507 20:19:43.896"/>
</kw>
<status status="PASS" starttime="20250507 20:19:43.746" endtime="20250507 20:19:43.896"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250507 20:19:43.746" endtime="20250507 20:19:43.897"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250507 20:19:43.693" endtime="20250507 20:19:43.897"/>
</suite>
<suite id="s1-s7" name="hadoop-3.4.1-hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s7-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:19:44.555" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250507 20:19:44.554" endtime="20250507 20:19:44.555"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:19:44.556" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250507 20:19:44.555" endtime="20250507 20:19:44.556"/>
</kw>
<status status="PASS" starttime="20250507 20:19:44.554" endtime="20250507 20:19:44.556"/>
</kw>
<msg timestamp="20250507 20:19:44.556" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250507 20:19:44.554" endtime="20250507 20:19:44.556"/>
</kw>
<status status="PASS" starttime="20250507 20:19:44.553" endtime="20250507 20:19:44.556"/>
</kw>
<msg timestamp="20250507 20:19:44.556" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20250507 20:19:44.553" endtime="20250507 20:19:44.556"/>
</kw>
<msg timestamp="20250507 20:19:44.557" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20250507 20:19:44.552" endtime="20250507 20:19:44.557"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250507 20:19:44.557" level="INFO">${random} = 03699</msg>
<status status="PASS" starttime="20250507 20:19:44.557" endtime="20250507 20:19:44.557"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:44.560" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-03699 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:51.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:51.654" level="INFO">${output} = 2025-05-07 20:19:49 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:49 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025...</msg>
<status status="PASS" starttime="20250507 20:19:44.559" endtime="20250507 20:19:51.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:51.655" level="INFO">2025-05-07 20:19:49 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:49 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:19:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2025-05-07 20:19:49 INFO  NettyConfigKeys$DataStream:137 - setTlsConf GrpcTlsConfig0-</msg>
<status status="PASS" starttime="20250507 20:19:51.654" endtime="20250507 20:19:51.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:51.655" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:51.655" endtime="20250507 20:19:51.655"/>
</kw>
<status status="PASS" starttime="20250507 20:19:44.558" endtime="20250507 20:19:51.655"/>
</kw>
<msg timestamp="20250507 20:19:51.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:44.558" endtime="20250507 20:19:51.656"/>
</kw>
<msg timestamp="20250507 20:19:51.656" level="INFO">${result} = 2025-05-07 20:19:49 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:49 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025...</msg>
<status status="PASS" starttime="20250507 20:19:44.557" endtime="20250507 20:19:51.656"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:19:51.656" endtime="20250507 20:19:51.656"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:51.659" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:53.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:53.646" level="INFO">${output} = Found 5 items
drwxrwxrwx   - testuser hadoop          0 2025-05-07 20:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop   hadoop       1541 2025-05-07 20:19 o3fs://bucket1.volume1.om/ozone-0369...</msg>
<status status="PASS" starttime="20250507 20:19:51.657" endtime="20250507 20:19:53.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:53.647" level="INFO">Found 5 items
drwxrwxrwx   - testuser hadoop          0 2025-05-07 20:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop   hadoop       1541 2025-05-07 20:19 o3fs://bucket1.volume1.om/ozone-03699
-rw-rw-rw-   3 hadoop   hadoop      15830 2025-05-07 20:19 o3fs://bucket1.volume1.om/ozone-13545
-rw-rw-rw-   3 hadoop   hadoop      15830 2025-05-07 20:19 o3fs://bucket1.volume1.om/ozone-43860
drwxrwxrwx   - testuser hadoop          0 2025-05-07 20:19 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20250507 20:19:53.647" endtime="20250507 20:19:53.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:53.648" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:53.647" endtime="20250507 20:19:53.648"/>
</kw>
<status status="PASS" starttime="20250507 20:19:51.657" endtime="20250507 20:19:53.648"/>
</kw>
<msg timestamp="20250507 20:19:53.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:51.657" endtime="20250507 20:19:53.648"/>
</kw>
<msg timestamp="20250507 20:19:53.648" level="INFO">${result} = Found 5 items
drwxrwxrwx   - testuser hadoop          0 2025-05-07 20:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop   hadoop       1541 2025-05-07 20:19 o3fs://bucket1.volume1.om/ozone-0369...</msg>
<status status="PASS" starttime="20250507 20:19:51.656" endtime="20250507 20:19:53.648"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:19:53.649" endtime="20250507 20:19:53.649"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:53.651" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-03699 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:19:57.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:19:57.423" level="INFO">${output} = 2025-05-07 20:19:55 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025...</msg>
<status status="PASS" starttime="20250507 20:19:53.650" endtime="20250507 20:19:57.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:19:57.424" level="INFO">2025-05-07 20:19:55 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:19:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20250507 20:19:57.423" endtime="20250507 20:19:57.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:19:57.424" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:19:57.424" endtime="20250507 20:19:57.424"/>
</kw>
<status status="PASS" starttime="20250507 20:19:53.650" endtime="20250507 20:19:57.425"/>
</kw>
<msg timestamp="20250507 20:19:57.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:53.649" endtime="20250507 20:19:57.425"/>
</kw>
<msg timestamp="20250507 20:19:57.425" level="INFO">${result} = 2025-05-07 20:19:55 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025...</msg>
<status status="PASS" starttime="20250507 20:19:53.649" endtime="20250507 20:19:57.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:19:57.425" endtime="20250507 20:19:57.425"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -checksum ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:19:57.428" level="INFO">Running command 'hdfs dfs -checksum o3fs://bucket1.volume1.om//ozone-03699 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:20:01.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:20:01.115" level="INFO">${output} = 2025-05-07 20:19:59 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:59 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025...</msg>
<status status="PASS" starttime="20250507 20:19:57.427" endtime="20250507 20:20:01.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:20:01.116" level="INFO">2025-05-07 20:19:59 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:59 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:19:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
o3fs://bucket1.volume1.om/ozone-03699	COMPOSITE-CRC32	40e2561c</msg>
<status status="PASS" starttime="20250507 20:20:01.115" endtime="20250507 20:20:01.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:20:01.116" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:20:01.116" endtime="20250507 20:20:01.116"/>
</kw>
<status status="PASS" starttime="20250507 20:19:57.427" endtime="20250507 20:20:01.116"/>
</kw>
<msg timestamp="20250507 20:20:01.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:19:57.426" endtime="20250507 20:20:01.117"/>
</kw>
<msg timestamp="20250507 20:20:01.117" level="INFO">${result} = 2025-05-07 20:19:59 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:19:59 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025...</msg>
<status status="PASS" starttime="20250507 20:19:57.426" endtime="20250507 20:20:01.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:20:01.117" endtime="20250507 20:20:01.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250507 20:19:44.551" endtime="20250507 20:20:01.117"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20250507 20:19:44.500" endtime="20250507 20:20:01.118"/>
</suite>
<suite id="s1-s8" name="hadoop-3.4.1-mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s8-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:20:01.615" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:20:01.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:20:01.619" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:20:01.613" endtime="20250507 20:20:01.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:20:01.620" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:20:01.619" endtime="20250507 20:20:01.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:20:01.620" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:20:01.620" endtime="20250507 20:20:01.620"/>
</kw>
<status status="PASS" starttime="20250507 20:20:01.613" endtime="20250507 20:20:01.620"/>
</kw>
<msg timestamp="20250507 20:20:01.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:20:01.613" endtime="20250507 20:20:01.621"/>
</kw>
<msg timestamp="20250507 20:20:01.621" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:20:01.613" endtime="20250507 20:20:01.621"/>
</kw>
<msg timestamp="20250507 20:20:01.621" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:20:01.612" endtime="20250507 20:20:01.621"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:20:01.624" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250507 20:20:01.623" endtime="20250507 20:20:01.624"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:20:01.624" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250507 20:20:01.624" endtime="20250507 20:20:01.624"/>
</kw>
<status status="PASS" starttime="20250507 20:20:01.623" endtime="20250507 20:20:01.624"/>
</kw>
<msg timestamp="20250507 20:20:01.624" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250507 20:20:01.623" endtime="20250507 20:20:01.624"/>
</kw>
<status status="PASS" starttime="20250507 20:20:01.622" endtime="20250507 20:20:01.625"/>
</kw>
<msg timestamp="20250507 20:20:01.625" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20250507 20:20:01.622" endtime="20250507 20:20:01.625"/>
</kw>
<msg timestamp="20250507 20:20:01.625" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20250507 20:20:01.621" endtime="20250507 20:20:01.625"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:20:01.627" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:20:42.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:20:42.426" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2025-05-07 20:20:03 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:20:04 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20250507 20:20:01.626" endtime="20250507 20:20:42.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:20:42.427" level="INFO">Number of Maps  = 3
Samples per Map = 3
2025-05-07 20:20:03 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:20:04 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:20:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2025-05-07 20:20:04 INFO  NettyConfigKeys$DataStream:137 - setTlsConf GrpcTlsConfig0-
Wrote input for Map #0
Wrote input for Map #1
2025-05-07 20:20:05 INFO  NettyConfigKeys$DataStream:137 - setTlsConf GrpcTlsConfig1-
Wrote input for Map #2
Starting Job
2025-05-07 20:20:05 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.18.0.11:8032
2025-05-07 20:20:06 INFO  KMSClientProvider:1045 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1746649205985, maxDate=1747254005985, sequenceNumber=1, masterKeyId=2))
2025-05-07 20:20:06 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.18.0.6:9862, Ident: (OzoneToken owner=hadoop/rm@EXAMPLE.COM, renewer=rm, realUser=, issueDate=2025-05-07T20:20:05.661Z, maxDate=2025-05-14T20:20:05.661Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=f4a91b40-cd7a-4f70-8712-15b635722698)
2025-05-07 20:20:06 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1746649205985, maxDate=1747254005985, sequenceNumber=1, masterKeyId=2)
2025-05-07 20:20:06 INFO  FileInputFormat:302 - Total input files to process : 3
2025-05-07 20:20:06 INFO  JobSubmitter:203 - number of splits:3
2025-05-07 20:20:06 INFO  JobSubmitter:299 - Submitting tokens for job: job_1746649188336_0001
2025-05-07 20:20:06 INFO  JobSubmitter:300 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1746649205985, maxDate=1747254005985, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.18.0.6:9862, Ident: (OzoneToken owner=hadoop/rm@EXAMPLE.COM, renewer=rm, realUser=, issueDate=2025-05-07T20:20:05.661Z, maxDate=2025-05-14T20:20:05.661Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=f4a91b40-cd7a-4f70-8712-15b635722698)]
2025-05-07 20:20:07 INFO  Configuration:2898 - resource-types.xml not found
2025-05-07 20:20:07 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2025-05-07 20:20:08 INFO  YarnClientImpl:356 - Submitted application application_1746649188336_0001
2025-05-07 20:20:08 INFO  Job:1681 - The url to track the job: http://rm:8088/proxy/application_1746649188336_0001/
2025-05-07 20:20:08 INFO  Job:1726 - Running job: job_1746649188336_0001
2025-05-07 20:20:19 INFO  Job:1747 - Job job_1746649188336_0001 running in uber mode : false
2025-05-07 20:20:19 INFO  Job:1754 -  map 0% reduce 0%
2025-05-07 20:20:26 INFO  Job:1754 -  map 33% reduce 0%
2025-05-07 20:20:31 INFO  Job:1754 -  map 67% reduce 0%
2025-05-07 20:20:36 INFO  Job:1754 -  map 100% reduce 0%
2025-05-07 20:20:41 INFO  Job:1754 -  map 100% reduce 100%
2025-05-07 20:20:41 INFO  Job:1765 - Job job_1746649188336_0001 completed successfully
2025-05-07 20:20:41 INFO  Job:1772 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1246397
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43136
		Total time spent by all reduces in occupied slots (ms)=15764
		Total time spent by all map tasks (ms)=10784
		Total time spent by all reduce tasks (ms)=3941
		Total vcore-milliseconds taken by all map tasks=10784
		Total vcore-milliseconds taken by all reduce tasks=3941
		Total megabyte-milliseconds taken by all map tasks=44171264
		Total megabyte-milliseconds taken by all reduce tasks=16142336
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=392
		CPU time spent (ms)=8490
		Physical memory (bytes) snapshot=2012819456
		Virtual memory (bytes) snapshot=16256417792
		Total committed heap usage (bytes)=1901068288
		Peak Map Physical memory (bytes)=600285184
		Peak Map Virtual memory (bytes)=4063109120
		Peak Reduce Physical memory (bytes)=467259392
		Peak Reduce Virtual memory (bytes)=4070961152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.412 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20250507 20:20:42.427" endtime="20250507 20:20:42.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:20:42.428" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:20:42.428" endtime="20250507 20:20:42.428"/>
</kw>
<status status="PASS" starttime="20250507 20:20:01.626" endtime="20250507 20:20:42.428"/>
</kw>
<msg timestamp="20250507 20:20:42.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:20:01.625" endtime="20250507 20:20:42.428"/>
</kw>
<msg timestamp="20250507 20:20:42.429" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2025-05-07 20:20:03 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:20:04 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20250507 20:20:01.625" endtime="20250507 20:20:42.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:20:42.429" endtime="20250507 20:20:42.430"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:20:42.430" endtime="20250507 20:20:42.430"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250507 20:20:01.612" endtime="20250507 20:20:42.430"/>
</test>
<test id="s1-s8-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:20:42.434" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:20:42.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:20:42.438" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:20:42.432" endtime="20250507 20:20:42.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:20:42.438" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:20:42.438" endtime="20250507 20:20:42.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:20:42.439" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:20:42.438" endtime="20250507 20:20:42.439"/>
</kw>
<status status="PASS" starttime="20250507 20:20:42.432" endtime="20250507 20:20:42.439"/>
</kw>
<msg timestamp="20250507 20:20:42.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:20:42.432" endtime="20250507 20:20:42.439"/>
</kw>
<msg timestamp="20250507 20:20:42.439" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:20:42.431" endtime="20250507 20:20:42.439"/>
</kw>
<msg timestamp="20250507 20:20:42.440" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:20:42.431" endtime="20250507 20:20:42.440"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250507 20:20:42.440" level="INFO">${random} = cX0U2P5n</msg>
<status status="PASS" starttime="20250507 20:20:42.440" endtime="20250507 20:20:42.440"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:20:42.443" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250507 20:20:42.443" endtime="20250507 20:20:42.443"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:20:42.444" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250507 20:20:42.443" endtime="20250507 20:20:42.444"/>
</kw>
<status status="PASS" starttime="20250507 20:20:42.442" endtime="20250507 20:20:42.444"/>
</kw>
<msg timestamp="20250507 20:20:42.444" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250507 20:20:42.442" endtime="20250507 20:20:42.444"/>
</kw>
<status status="PASS" starttime="20250507 20:20:42.441" endtime="20250507 20:20:42.444"/>
</kw>
<msg timestamp="20250507 20:20:42.444" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20250507 20:20:42.441" endtime="20250507 20:20:42.444"/>
</kw>
<msg timestamp="20250507 20:20:42.444" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20250507 20:20:42.440" endtime="20250507 20:20:42.444"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:20:42.447" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250507 20:20:42.446" endtime="20250507 20:20:42.447"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:20:42.447" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250507 20:20:42.447" endtime="20250507 20:20:42.447"/>
</kw>
<status status="PASS" starttime="20250507 20:20:42.446" endtime="20250507 20:20:42.447"/>
</kw>
<msg timestamp="20250507 20:20:42.447" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250507 20:20:42.446" endtime="20250507 20:20:42.447"/>
</kw>
<status status="PASS" starttime="20250507 20:20:42.445" endtime="20250507 20:20:42.448"/>
</kw>
<msg timestamp="20250507 20:20:42.448" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20250507 20:20:42.445" endtime="20250507 20:20:42.448"/>
</kw>
<msg timestamp="20250507 20:20:42.448" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20250507 20:20:42.444" endtime="20250507 20:20:42.448"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:20:42.450" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250507 20:20:42.450" endtime="20250507 20:20:42.450"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:20:42.451" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250507 20:20:42.450" endtime="20250507 20:20:42.451"/>
</kw>
<status status="PASS" starttime="20250507 20:20:42.450" endtime="20250507 20:20:42.451"/>
</kw>
<msg timestamp="20250507 20:20:42.451" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250507 20:20:42.449" endtime="20250507 20:20:42.451"/>
</kw>
<status status="PASS" starttime="20250507 20:20:42.449" endtime="20250507 20:20:42.451"/>
</kw>
<msg timestamp="20250507 20:20:42.451" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-cX0U2P5n.txt</msg>
<status status="PASS" starttime="20250507 20:20:42.448" endtime="20250507 20:20:42.451"/>
</kw>
<msg timestamp="20250507 20:20:42.452" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-cX0U2P5n.txt</msg>
<status status="PASS" starttime="20250507 20:20:42.448" endtime="20250507 20:20:42.452"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:20:42.454" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-cX0U2P5n.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:21:18.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:21:18.663" level="INFO">${output} = 2025-05-07 20:20:44 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.18.0.11:8032
2025-05-07 20:20:45 INFO  KMSClientProvider:1045 - New token created: (Kind: kms-...</msg>
<status status="PASS" starttime="20250507 20:20:42.453" endtime="20250507 20:21:18.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:21:18.664" level="INFO">2025-05-07 20:20:44 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.18.0.11:8032
2025-05-07 20:20:45 INFO  KMSClientProvider:1045 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1746649244997, maxDate=1747254044997, sequenceNumber=2, masterKeyId=2))
2025-05-07 20:20:45 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.18.0.6:9862, Ident: (OzoneToken owner=hadoop/rm@EXAMPLE.COM, renewer=rm, realUser=, issueDate=2025-05-07T20:20:44.758Z, maxDate=2025-05-14T20:20:44.758Z, sequenceNumber=2, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=f4a91b40-cd7a-4f70-8712-15b635722698)
2025-05-07 20:20:45 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1746649244997, maxDate=1747254044997, sequenceNumber=2, masterKeyId=2)
2025-05-07 20:20:45 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2025-05-07 20:20:45 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:20:45 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:20:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2025-05-07 20:20:45 INFO  NettyConfigKeys$DataStream:137 - setTlsConf GrpcTlsConfig0-
2025-05-07 20:20:46 INFO  FileInputFormat:302 - Total input files to process : 3
2025-05-07 20:20:47 INFO  NettyConfigKeys$DataStream:137 - setTlsConf GrpcTlsConfig1-
2025-05-07 20:20:47 INFO  JobSubmitter:203 - number of splits:3
2025-05-07 20:20:47 INFO  JobSubmitter:299 - Submitting tokens for job: job_1746649188336_0002
2025-05-07 20:20:47 INFO  JobSubmitter:300 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1746649244997, maxDate=1747254044997, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.18.0.6:9862, Ident: (OzoneToken owner=hadoop/rm@EXAMPLE.COM, renewer=rm, realUser=, issueDate=2025-05-07T20:20:44.758Z, maxDate=2025-05-14T20:20:44.758Z, sequenceNumber=2, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=f4a91b40-cd7a-4f70-8712-15b635722698)]
2025-05-07 20:20:47 INFO  Configuration:2898 - resource-types.xml not found
2025-05-07 20:20:47 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2025-05-07 20:20:47 INFO  YarnClientImpl:356 - Submitted application application_1746649188336_0002
2025-05-07 20:20:47 INFO  Job:1681 - The url to track the job: http://rm:8088/proxy/application_1746649188336_0002/
2025-05-07 20:20:47 INFO  Job:1726 - Running job: job_1746649188336_0002
2025-05-07 20:20:55 INFO  Job:1747 - Job job_1746649188336_0002 running in uber mode : false
2025-05-07 20:20:55 INFO  Job:1754 -  map 0% reduce 0%
2025-05-07 20:21:02 INFO  Job:1754 -  map 33% reduce 0%
2025-05-07 20:21:08 INFO  Job:1754 -  map 67% reduce 0%
2025-05-07 20:21:13 INFO  Job:1754 -  map 100% reduce 0%
2025-05-07 20:21:18 INFO  Job:1754 -  map 100% reduce 100%
2025-05-07 20:21:18 INFO  Job:1765 - Job job_1746649188336_0002 completed successfully
2025-05-07 20:21:18 INFO  Job:1772 - Counters: 53
	File System Counters
		FILE: Number of bytes read=36192
		FILE: Number of bytes written=1317297
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=42341
		O3FS: Number of bytes written=26145
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43364
		Total time spent by all reduces in occupied slots (ms)=15648
		Total time spent by all map tasks (ms)=10841
		Total time spent by all reduce tasks (ms)=3912
		Total vcore-milliseconds taken by all map tasks=10841
		Total vcore-milliseconds taken by all reduce tasks=3912
		Total megabyte-milliseconds taken by all map tasks=44404736
		Total megabyte-milliseconds taken by all reduce tasks=16023552
	Map-Reduce Framework
		Map input records=1103
		Map output records=4454
		Map output bytes=57140
		Map output materialized bytes=36204
		Input split bytes=303
		Combine input records=4454
		Combine output records=1915
		Reduce input groups=1659
		Reduce shuffle bytes=36204
		Reduce input records=1915
		Reduce output records=1659
		Spilled Records=3830
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=399
		CPU time spent (ms)=8880
		Physical memory (bytes) snapshot=1885188096
		Virtual memory (bytes) snapshot=16231100416
		Total committed heap usage (bytes)=1802502144
		Peak Map Physical memory (bytes)=480051200
		Peak Map Virtual memory (bytes)=4060815360
		Peak Reduce Physical memory (bytes)=474312704
		Peak Reduce Virtual memory (bytes)=4068589568
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=42038
	File Output Format Counters 
		Bytes Written=26145</msg>
<status status="PASS" starttime="20250507 20:21:18.663" endtime="20250507 20:21:18.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:21:18.664" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:21:18.664" endtime="20250507 20:21:18.664"/>
</kw>
<status status="PASS" starttime="20250507 20:20:42.452" endtime="20250507 20:21:18.664"/>
</kw>
<msg timestamp="20250507 20:21:18.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:20:42.452" endtime="20250507 20:21:18.665"/>
</kw>
<msg timestamp="20250507 20:21:18.665" level="INFO">${output} = 2025-05-07 20:20:44 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.18.0.11:8032
2025-05-07 20:20:45 INFO  KMSClientProvider:1045 - New token created: (Kind: kms-...</msg>
<status status="PASS" starttime="20250507 20:20:42.452" endtime="20250507 20:21:18.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:21:18.666" endtime="20250507 20:21:18.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:21:18.666" endtime="20250507 20:21:18.666"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250507 20:20:42.431" endtime="20250507 20:21:18.666"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20250507 20:20:01.574" endtime="20250507 20:21:18.667"/>
</suite>
<suite id="s1-s9" name="hadoop-3.4.1-hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s9-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:21:19.133" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250507 20:21:19.133" endtime="20250507 20:21:19.133"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:21:19.134" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250507 20:21:19.133" endtime="20250507 20:21:19.134"/>
</kw>
<status status="PASS" starttime="20250507 20:21:19.132" endtime="20250507 20:21:19.134"/>
</kw>
<msg timestamp="20250507 20:21:19.134" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250507 20:21:19.132" endtime="20250507 20:21:19.134"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250507 20:21:19.134" endtime="20250507 20:21:19.135"/>
</kw>
<msg timestamp="20250507 20:21:19.135" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20250507 20:21:19.134" endtime="20250507 20:21:19.135"/>
</kw>
<status status="PASS" starttime="20250507 20:21:19.131" endtime="20250507 20:21:19.135"/>
</kw>
<msg timestamp="20250507 20:21:19.135" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20250507 20:21:19.131" endtime="20250507 20:21:19.135"/>
</kw>
<msg timestamp="20250507 20:21:19.135" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20250507 20:21:19.131" endtime="20250507 20:21:19.135"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250507 20:21:19.135" level="INFO">${random} = 64851</msg>
<status status="PASS" starttime="20250507 20:21:19.135" endtime="20250507 20:21:19.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:21:19.138" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-64851 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:21:23.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:21:23.020" level="INFO">${output} = 2025-05-07 20:21:21 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:21:21 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025...</msg>
<status status="PASS" starttime="20250507 20:21:19.136" endtime="20250507 20:21:23.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:21:23.021" level="INFO">2025-05-07 20:21:21 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:21:21 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:21:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2025-05-07 20:21:21 INFO  NettyConfigKeys$DataStream:137 - setTlsConf GrpcTlsConfig0-</msg>
<status status="PASS" starttime="20250507 20:21:23.021" endtime="20250507 20:21:23.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:21:23.022" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:21:23.022" endtime="20250507 20:21:23.022"/>
</kw>
<status status="PASS" starttime="20250507 20:21:19.136" endtime="20250507 20:21:23.022"/>
</kw>
<msg timestamp="20250507 20:21:23.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:21:19.136" endtime="20250507 20:21:23.022"/>
</kw>
<msg timestamp="20250507 20:21:23.023" level="INFO">${result} = 2025-05-07 20:21:21 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:21:21 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025...</msg>
<status status="PASS" starttime="20250507 20:21:19.136" endtime="20250507 20:21:23.023"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:21:23.023" endtime="20250507 20:21:23.023"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:21:23.026" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:21:25.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:21:25.120" level="INFO">${output} = Found 7 items
drwxrwxrwx   - testuser hadoop          0 2025-05-07 20:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop   hadoop       1541 2025-05-07 20:19 ofs://om/volume1/bucket1/ozone-03699
...</msg>
<status status="PASS" starttime="20250507 20:21:23.024" endtime="20250507 20:21:25.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:21:25.121" level="INFO">Found 7 items
drwxrwxrwx   - testuser hadoop          0 2025-05-07 20:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop   hadoop       1541 2025-05-07 20:19 ofs://om/volume1/bucket1/ozone-03699
-rw-rw-rw-   3 hadoop   hadoop      15830 2025-05-07 20:19 ofs://om/volume1/bucket1/ozone-13545
-rw-rw-rw-   3 hadoop   hadoop      15830 2025-05-07 20:19 ofs://om/volume1/bucket1/ozone-43860
-rw-rw-rw-   3 hadoop   hadoop       1541 2025-05-07 20:21 ofs://om/volume1/bucket1/ozone-64851
drwxrwxrwx   - testuser hadoop          0 2025-05-07 20:19 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop   hadoop          0 2025-05-07 20:21 ofs://om/volume1/bucket1/wordcount-cX0U2P5n.txt</msg>
<status status="PASS" starttime="20250507 20:21:25.121" endtime="20250507 20:21:25.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:21:25.122" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:21:25.121" endtime="20250507 20:21:25.122"/>
</kw>
<status status="PASS" starttime="20250507 20:21:23.024" endtime="20250507 20:21:25.122"/>
</kw>
<msg timestamp="20250507 20:21:25.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:21:23.024" endtime="20250507 20:21:25.122"/>
</kw>
<msg timestamp="20250507 20:21:25.122" level="INFO">${result} = Found 7 items
drwxrwxrwx   - testuser hadoop          0 2025-05-07 20:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop   hadoop       1541 2025-05-07 20:19 ofs://om/volume1/bucket1/ozone-03699
...</msg>
<status status="PASS" starttime="20250507 20:21:23.023" endtime="20250507 20:21:25.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:21:25.123" endtime="20250507 20:21:25.123"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:21:25.125" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-64851 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:21:28.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:21:28.744" level="INFO">${output} = 2025-05-07 20:21:27 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:21:27 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025...</msg>
<status status="PASS" starttime="20250507 20:21:25.124" endtime="20250507 20:21:28.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:21:28.745" level="INFO">2025-05-07 20:21:27 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:21:27 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:21:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20250507 20:21:28.745" endtime="20250507 20:21:28.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:21:28.746" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:21:28.745" endtime="20250507 20:21:28.746"/>
</kw>
<status status="PASS" starttime="20250507 20:21:25.124" endtime="20250507 20:21:28.746"/>
</kw>
<msg timestamp="20250507 20:21:28.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:21:25.124" endtime="20250507 20:21:28.746"/>
</kw>
<msg timestamp="20250507 20:21:28.747" level="INFO">${result} = 2025-05-07 20:21:27 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:21:27 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025...</msg>
<status status="PASS" starttime="20250507 20:21:25.123" endtime="20250507 20:21:28.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:21:28.747" endtime="20250507 20:21:28.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -checksum ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:21:28.750" level="INFO">Running command 'hdfs dfs -checksum ofs://om/volume1/bucket1/ozone-64851 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:21:32.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:21:32.438" level="INFO">${output} = 2025-05-07 20:21:30 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:21:30 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025...</msg>
<status status="PASS" starttime="20250507 20:21:28.748" endtime="20250507 20:21:32.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:21:32.439" level="INFO">2025-05-07 20:21:30 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:21:30 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:21:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
ofs://om/volume1/bucket1/ozone-64851	COMPOSITE-CRC32	40e2561c</msg>
<status status="PASS" starttime="20250507 20:21:32.439" endtime="20250507 20:21:32.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:21:32.440" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:21:32.439" endtime="20250507 20:21:32.440"/>
</kw>
<status status="PASS" starttime="20250507 20:21:28.748" endtime="20250507 20:21:32.440"/>
</kw>
<msg timestamp="20250507 20:21:32.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:21:28.748" endtime="20250507 20:21:32.440"/>
</kw>
<msg timestamp="20250507 20:21:32.440" level="INFO">${result} = 2025-05-07 20:21:30 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:21:30 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025...</msg>
<status status="PASS" starttime="20250507 20:21:28.747" endtime="20250507 20:21:32.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:21:32.440" endtime="20250507 20:21:32.441"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250507 20:21:19.130" endtime="20250507 20:21:32.441"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20250507 20:21:19.092" endtime="20250507 20:21:32.441"/>
</suite>
<suite id="s1-s10" name="hadoop-3.4.1-mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s10-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:21:32.915" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:21:32.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:21:32.919" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:21:32.914" endtime="20250507 20:21:32.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:21:32.920" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:21:32.919" endtime="20250507 20:21:32.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:21:32.920" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:21:32.920" endtime="20250507 20:21:32.920"/>
</kw>
<status status="PASS" starttime="20250507 20:21:32.913" endtime="20250507 20:21:32.920"/>
</kw>
<msg timestamp="20250507 20:21:32.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:21:32.913" endtime="20250507 20:21:32.921"/>
</kw>
<msg timestamp="20250507 20:21:32.921" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:21:32.913" endtime="20250507 20:21:32.921"/>
</kw>
<msg timestamp="20250507 20:21:32.921" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:21:32.912" endtime="20250507 20:21:32.921"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:21:32.924" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250507 20:21:32.923" endtime="20250507 20:21:32.924"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:21:32.924" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250507 20:21:32.924" endtime="20250507 20:21:32.924"/>
</kw>
<status status="PASS" starttime="20250507 20:21:32.923" endtime="20250507 20:21:32.924"/>
</kw>
<msg timestamp="20250507 20:21:32.924" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250507 20:21:32.923" endtime="20250507 20:21:32.924"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250507 20:21:32.925" endtime="20250507 20:21:32.925"/>
</kw>
<msg timestamp="20250507 20:21:32.925" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20250507 20:21:32.925" endtime="20250507 20:21:32.925"/>
</kw>
<status status="PASS" starttime="20250507 20:21:32.922" endtime="20250507 20:21:32.926"/>
</kw>
<msg timestamp="20250507 20:21:32.926" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20250507 20:21:32.922" endtime="20250507 20:21:32.926"/>
</kw>
<msg timestamp="20250507 20:21:32.926" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20250507 20:21:32.921" endtime="20250507 20:21:32.926"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:21:32.928" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:22:10.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:22:10.287" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2025-05-07 20:21:34 INFO  RpcClient:463 - Creating Volume: user, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-05-07 20:21:3...</msg>
<status status="PASS" starttime="20250507 20:21:32.927" endtime="20250507 20:22:10.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:22:10.288" level="INFO">Number of Maps  = 3
Samples per Map = 3
2025-05-07 20:21:34 INFO  RpcClient:463 - Creating Volume: user, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-05-07 20:21:34 INFO  RpcClient:688 - Creating Bucket: user/hadoop, with bucket layout FILE_SYSTEM_OPTIMIZED, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-05-07 20:21:35 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:21:35 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:21:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2025-05-07 20:21:35 INFO  NettyConfigKeys$DataStream:137 - setTlsConf GrpcTlsConfig0-
Wrote input for Map #0
2025-05-07 20:21:36 INFO  NettyConfigKeys$DataStream:137 - setTlsConf GrpcTlsConfig1-
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2025-05-07 20:21:36 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.18.0.11:8032
2025-05-07 20:21:37 INFO  KMSClientProvider:1045 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1746649296966, maxDate=1747254096966, sequenceNumber=3, masterKeyId=2))
2025-05-07 20:21:37 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.18.0.6:9862, Ident: (OzoneToken owner=hadoop/rm@EXAMPLE.COM, renewer=rm, realUser=, issueDate=2025-05-07T20:21:36.793Z, maxDate=2025-05-14T20:21:36.793Z, sequenceNumber=3, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=f4a91b40-cd7a-4f70-8712-15b635722698)
2025-05-07 20:21:37 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1746649296966, maxDate=1747254096966, sequenceNumber=3, masterKeyId=2)
2025-05-07 20:21:37 INFO  FileInputFormat:302 - Total input files to process : 3
2025-05-07 20:21:37 INFO  JobSubmitter:203 - number of splits:3
2025-05-07 20:21:37 INFO  JobSubmitter:299 - Submitting tokens for job: job_1746649188336_0003
2025-05-07 20:21:37 INFO  JobSubmitter:300 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1746649296966, maxDate=1747254096966, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.18.0.6:9862, Ident: (OzoneToken owner=hadoop/rm@EXAMPLE.COM, renewer=rm, realUser=, issueDate=2025-05-07T20:21:36.793Z, maxDate=2025-05-14T20:21:36.793Z, sequenceNumber=3, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=f4a91b40-cd7a-4f70-8712-15b635722698)]
2025-05-07 20:21:37 INFO  Configuration:2898 - resource-types.xml not found
2025-05-07 20:21:37 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2025-05-07 20:21:38 INFO  YarnClientImpl:356 - Submitted application application_1746649188336_0003
2025-05-07 20:21:38 INFO  Job:1681 - The url to track the job: http://rm:8088/proxy/application_1746649188336_0003/
2025-05-07 20:21:38 INFO  Job:1726 - Running job: job_1746649188336_0003
2025-05-07 20:21:45 INFO  Job:1747 - Job job_1746649188336_0003 running in uber mode : false
2025-05-07 20:21:45 INFO  Job:1754 -  map 0% reduce 0%
2025-05-07 20:21:52 INFO  Job:1754 -  map 33% reduce 0%
2025-05-07 20:21:58 INFO  Job:1754 -  map 67% reduce 0%
2025-05-07 20:22:03 INFO  Job:1754 -  map 100% reduce 0%
2025-05-07 20:22:08 INFO  Job:1754 -  map 100% reduce 100%
2025-05-07 20:22:09 INFO  Job:1765 - Job job_1746649188336_0003 completed successfully
2025-05-07 20:22:09 INFO  Job:1772 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1246193
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43404
		Total time spent by all reduces in occupied slots (ms)=15428
		Total time spent by all map tasks (ms)=10851
		Total time spent by all reduce tasks (ms)=3857
		Total vcore-milliseconds taken by all map tasks=10851
		Total vcore-milliseconds taken by all reduce tasks=3857
		Total megabyte-milliseconds taken by all map tasks=44445696
		Total megabyte-milliseconds taken by all reduce tasks=15798272
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=407
		CPU time spent (ms)=8690
		Physical memory (bytes) snapshot=1893036032
		Virtual memory (bytes) snapshot=16241360896
		Total committed heap usage (bytes)=1800929280
		Peak Map Physical memory (bytes)=478748672
		Peak Map Virtual memory (bytes)=4062507008
		Peak Reduce Physical memory (bytes)=468172800
		Peak Reduce Virtual memory (bytes)=4076314624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.135 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20250507 20:22:10.287" endtime="20250507 20:22:10.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:22:10.288" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:22:10.288" endtime="20250507 20:22:10.288"/>
</kw>
<status status="PASS" starttime="20250507 20:21:32.927" endtime="20250507 20:22:10.288"/>
</kw>
<msg timestamp="20250507 20:22:10.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:21:32.926" endtime="20250507 20:22:10.289"/>
</kw>
<msg timestamp="20250507 20:22:10.289" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2025-05-07 20:21:34 INFO  RpcClient:463 - Creating Volume: user, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-05-07 20:21:3...</msg>
<status status="PASS" starttime="20250507 20:21:32.926" endtime="20250507 20:22:10.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:22:10.290" endtime="20250507 20:22:10.290"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:22:10.290" endtime="20250507 20:22:10.290"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250507 20:21:32.912" endtime="20250507 20:22:10.290"/>
</test>
<test id="s1-s10-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:22:10.294" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:22:10.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:22:10.298" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:22:10.293" endtime="20250507 20:22:10.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:22:10.299" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:22:10.298" endtime="20250507 20:22:10.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:22:10.299" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:22:10.299" endtime="20250507 20:22:10.299"/>
</kw>
<status status="PASS" starttime="20250507 20:22:10.292" endtime="20250507 20:22:10.299"/>
</kw>
<msg timestamp="20250507 20:22:10.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:22:10.292" endtime="20250507 20:22:10.300"/>
</kw>
<msg timestamp="20250507 20:22:10.300" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:22:10.292" endtime="20250507 20:22:10.300"/>
</kw>
<msg timestamp="20250507 20:22:10.300" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar</msg>
<status status="PASS" starttime="20250507 20:22:10.291" endtime="20250507 20:22:10.300"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250507 20:22:10.300" level="INFO">${random} = ojWcoSTG</msg>
<status status="PASS" starttime="20250507 20:22:10.300" endtime="20250507 20:22:10.300"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:22:10.303" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250507 20:22:10.303" endtime="20250507 20:22:10.303"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:22:10.304" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250507 20:22:10.303" endtime="20250507 20:22:10.304"/>
</kw>
<status status="PASS" starttime="20250507 20:22:10.302" endtime="20250507 20:22:10.304"/>
</kw>
<msg timestamp="20250507 20:22:10.304" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250507 20:22:10.302" endtime="20250507 20:22:10.304"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250507 20:22:10.304" endtime="20250507 20:22:10.305"/>
</kw>
<msg timestamp="20250507 20:22:10.305" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20250507 20:22:10.304" endtime="20250507 20:22:10.305"/>
</kw>
<status status="PASS" starttime="20250507 20:22:10.302" endtime="20250507 20:22:10.305"/>
</kw>
<msg timestamp="20250507 20:22:10.305" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20250507 20:22:10.301" endtime="20250507 20:22:10.305"/>
</kw>
<msg timestamp="20250507 20:22:10.305" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20250507 20:22:10.301" endtime="20250507 20:22:10.305"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:22:10.308" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250507 20:22:10.307" endtime="20250507 20:22:10.308"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:22:10.308" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250507 20:22:10.308" endtime="20250507 20:22:10.308"/>
</kw>
<status status="PASS" starttime="20250507 20:22:10.307" endtime="20250507 20:22:10.308"/>
</kw>
<msg timestamp="20250507 20:22:10.309" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250507 20:22:10.307" endtime="20250507 20:22:10.309"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:22:10.310" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20250507 20:22:10.309" endtime="20250507 20:22:10.310"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:22:10.310" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20250507 20:22:10.310" endtime="20250507 20:22:10.310"/>
</kw>
<status status="PASS" starttime="20250507 20:22:10.309" endtime="20250507 20:22:10.311"/>
</kw>
<msg timestamp="20250507 20:22:10.311" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20250507 20:22:10.309" endtime="20250507 20:22:10.311"/>
</kw>
<status status="PASS" starttime="20250507 20:22:10.306" endtime="20250507 20:22:10.311"/>
</kw>
<msg timestamp="20250507 20:22:10.311" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20250507 20:22:10.306" endtime="20250507 20:22:10.311"/>
</kw>
<msg timestamp="20250507 20:22:10.311" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20250507 20:22:10.305" endtime="20250507 20:22:10.311"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:22:10.314" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250507 20:22:10.313" endtime="20250507 20:22:10.314"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:22:10.314" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250507 20:22:10.314" endtime="20250507 20:22:10.314"/>
</kw>
<status status="PASS" starttime="20250507 20:22:10.313" endtime="20250507 20:22:10.314"/>
</kw>
<msg timestamp="20250507 20:22:10.314" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250507 20:22:10.313" endtime="20250507 20:22:10.314"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250507 20:22:10.315" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20250507 20:22:10.315" endtime="20250507 20:22:10.315"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250507 20:22:10.316" level="INFO">${result} = /wordcount-ojWcoSTG.txt</msg>
<status status="PASS" starttime="20250507 20:22:10.316" endtime="20250507 20:22:10.316"/>
</kw>
<status status="PASS" starttime="20250507 20:22:10.315" endtime="20250507 20:22:10.316"/>
</kw>
<msg timestamp="20250507 20:22:10.316" level="INFO">${path_with_leading} = /wordcount-ojWcoSTG.txt</msg>
<status status="PASS" starttime="20250507 20:22:10.314" endtime="20250507 20:22:10.316"/>
</kw>
<status status="PASS" starttime="20250507 20:22:10.312" endtime="20250507 20:22:10.316"/>
</kw>
<msg timestamp="20250507 20:22:10.316" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-ojWcoSTG.txt</msg>
<status status="PASS" starttime="20250507 20:22:10.312" endtime="20250507 20:22:10.316"/>
</kw>
<msg timestamp="20250507 20:22:10.317" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-ojWcoSTG.txt</msg>
<status status="PASS" starttime="20250507 20:22:10.311" endtime="20250507 20:22:10.317"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250507 20:22:10.319" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.4.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-ojWcoSTG.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250507 20:22:48.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20250507 20:22:48.487" level="INFO">${output} = 2025-05-07 20:22:12 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.18.0.11:8032
2025-05-07 20:22:13 INFO  KMSClientProvider:1045 - New token created: (Kind: kms-...</msg>
<status status="PASS" starttime="20250507 20:22:10.318" endtime="20250507 20:22:48.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250507 20:22:48.488" level="INFO">2025-05-07 20:22:12 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.18.0.11:8032
2025-05-07 20:22:13 INFO  KMSClientProvider:1045 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1746649332846, maxDate=1747254132846, sequenceNumber=4, masterKeyId=2))
2025-05-07 20:22:13 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.18.0.6:9862, Ident: (OzoneToken owner=hadoop/rm@EXAMPLE.COM, renewer=rm, realUser=, issueDate=2025-05-07T20:22:12.591Z, maxDate=2025-05-14T20:22:12.591Z, sequenceNumber=4, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=f4a91b40-cd7a-4f70-8712-15b635722698)
2025-05-07 20:22:13 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1746649332846, maxDate=1747254132846, sequenceNumber=4, masterKeyId=2)
2025-05-07 20:22:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2025-05-07 20:22:13 INFO  MetricsConfig:122 - Loaded properties from hadoop-metrics2.properties
2025-05-07 20:22:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2025-05-07 20:22:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2025-05-07 20:22:13 INFO  NettyConfigKeys$DataStream:137 - setTlsConf GrpcTlsConfig0-
2025-05-07 20:22:14 INFO  FileInputFormat:302 - Total input files to process : 3
2025-05-07 20:22:14 INFO  NettyConfigKeys$DataStream:137 - setTlsConf GrpcTlsConfig1-
2025-05-07 20:22:15 INFO  JobSubmitter:203 - number of splits:3
2025-05-07 20:22:15 INFO  JobSubmitter:299 - Submitting tokens for job: job_1746649188336_0004
2025-05-07 20:22:15 INFO  JobSubmitter:300 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1746649332846, maxDate=1747254132846, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.18.0.6:9862, Ident: (OzoneToken owner=hadoop/rm@EXAMPLE.COM, renewer=rm, realUser=, issueDate=2025-05-07T20:22:12.591Z, maxDate=2025-05-14T20:22:12.591Z, sequenceNumber=4, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=f4a91b40-cd7a-4f70-8712-15b635722698)]
2025-05-07 20:22:15 INFO  Configuration:2898 - resource-types.xml not found
2025-05-07 20:22:15 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2025-05-07 20:22:15 INFO  YarnClientImpl:356 - Submitted application application_1746649188336_0004
2025-05-07 20:22:15 INFO  Job:1681 - The url to track the job: http://rm:8088/proxy/application_1746649188336_0004/
2025-05-07 20:22:15 INFO  Job:1726 - Running job: job_1746649188336_0004
2025-05-07 20:22:23 INFO  Job:1747 - Job job_1746649188336_0004 running in uber mode : false
2025-05-07 20:22:23 INFO  Job:1754 -  map 0% reduce 0%
2025-05-07 20:22:29 INFO  Job:1754 -  map 33% reduce 0%
2025-05-07 20:22:35 INFO  Job:1754 -  map 67% reduce 0%
2025-05-07 20:22:41 INFO  Job:1754 -  map 100% reduce 0%
2025-05-07 20:22:48 INFO  Job:1754 -  map 100% reduce 100%
2025-05-07 20:22:48 INFO  Job:1765 - Job job_1746649188336_0004 completed successfully
2025-05-07 20:22:48 INFO  Job:1772 - Counters: 53
	File System Counters
		FILE: Number of bytes read=36192
		FILE: Number of bytes written=1317213
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=42338
		OFS: Number of bytes written=26145
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44268
		Total time spent by all reduces in occupied slots (ms)=15716
		Total time spent by all map tasks (ms)=11067
		Total time spent by all reduce tasks (ms)=3929
		Total vcore-milliseconds taken by all map tasks=11067
		Total vcore-milliseconds taken by all reduce tasks=3929
		Total megabyte-milliseconds taken by all map tasks=45330432
		Total megabyte-milliseconds taken by all reduce tasks=16093184
	Map-Reduce Framework
		Map input records=1103
		Map output records=4454
		Map output bytes=57140
		Map output materialized bytes=36204
		Input split bytes=300
		Combine input records=4454
		Combine output records=1915
		Reduce input groups=1659
		Reduce shuffle bytes=36204
		Reduce input records=1915
		Reduce output records=1659
		Spilled Records=3830
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=417
		CPU time spent (ms)=9090
		Physical memory (bytes) snapshot=1904336896
		Virtual memory (bytes) snapshot=16212480000
		Total committed heap usage (bytes)=1806172160
		Peak Map Physical memory (bytes)=484622336
		Peak Map Virtual memory (bytes)=4052254720
		Peak Reduce Physical memory (bytes)=467763200
		Peak Reduce Virtual memory (bytes)=4056739840
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=42038
	File Output Format Counters 
		Bytes Written=26145</msg>
<status status="PASS" starttime="20250507 20:22:48.487" endtime="20250507 20:22:48.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250507 20:22:48.488" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20250507 20:22:48.488" endtime="20250507 20:22:48.488"/>
</kw>
<status status="PASS" starttime="20250507 20:22:10.317" endtime="20250507 20:22:48.488"/>
</kw>
<msg timestamp="20250507 20:22:48.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250507 20:22:10.317" endtime="20250507 20:22:48.489"/>
</kw>
<msg timestamp="20250507 20:22:48.489" level="INFO">${output} = 2025-05-07 20:22:12 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.18.0.11:8032
2025-05-07 20:22:13 INFO  KMSClientProvider:1045 - New token created: (Kind: kms-...</msg>
<status status="PASS" starttime="20250507 20:22:10.317" endtime="20250507 20:22:48.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:22:48.490" endtime="20250507 20:22:48.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250507 20:22:48.490" endtime="20250507 20:22:48.490"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250507 20:22:10.291" endtime="20250507 20:22:48.491"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20250507 20:21:32.875" endtime="20250507 20:22:48.491"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="245350"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="13" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-mr.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit-Hadoop">ozonesecure-mr.Kinit-Hadoop</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="hadoop-2.10.2-hadoopfs-o3fs">ozonesecure-mr.hadoop-2.10.2-hadoopfs-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="hadoop-2.10.2-hadoopfs-ofs">ozonesecure-mr.hadoop-2.10.2-hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Kinit-Hadoop">ozonesecure-mr.Kinit-Hadoop</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="hadoop-3.4.1-hadoopfs-o3fs">ozonesecure-mr.hadoop-3.4.1-hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s8" name="hadoop-3.4.1-mapreduce-o3fs">ozonesecure-mr.hadoop-3.4.1-mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="hadoop-3.4.1-hadoopfs-ofs">ozonesecure-mr.hadoop-3.4.1-hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s10" name="hadoop-3.4.1-mapreduce-ofs">ozonesecure-mr.hadoop-3.4.1-mapreduce-ofs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
