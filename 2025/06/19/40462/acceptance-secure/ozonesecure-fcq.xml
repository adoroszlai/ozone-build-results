<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250619 06:25:49.972" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-fcq" source="/opt/hadoop/smoketest/fcq/s3_om_fcq.robot">
<test id="s1-t1" name="Test setup headers" line="64">
<kw name="Setup headers">
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:25:02.438" endtime="20250619 06:25:02.439"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:02.442" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:02.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:02.445" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20250619 06:25:02.440" endtime="20250619 06:25:02.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:02.446" level="INFO">s3g</msg>
<status status="PASS" starttime="20250619 06:25:02.446" endtime="20250619 06:25:02.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:02.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:02.446" endtime="20250619 06:25:02.446"/>
</kw>
<status status="PASS" starttime="20250619 06:25:02.439" endtime="20250619 06:25:02.447"/>
</kw>
<msg timestamp="20250619 06:25:02.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:02.439" endtime="20250619 06:25:02.447"/>
</kw>
<msg timestamp="20250619 06:25:02.447" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20250619 06:25:02.439" endtime="20250619 06:25:02.447"/>
</kw>
<msg timestamp="20250619 06:25:02.447" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:25:02.439" endtime="20250619 06:25:02.447"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:25:02.447" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:25:02.447" endtime="20250619 06:25:02.447"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:02.450" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:02.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:02.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:25:02.448" endtime="20250619 06:25:02.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:02.517" level="INFO"/>
<status status="PASS" starttime="20250619 06:25:02.516" endtime="20250619 06:25:02.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:02.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:02.517" endtime="20250619 06:25:02.517"/>
</kw>
<status status="PASS" starttime="20250619 06:25:02.448" endtime="20250619 06:25:02.517"/>
</kw>
<msg timestamp="20250619 06:25:02.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:02.448" endtime="20250619 06:25:02.517"/>
</kw>
<status status="PASS" starttime="20250619 06:25:02.448" endtime="20250619 06:25:02.517"/>
</kw>
<status status="PASS" starttime="20250619 06:25:02.447" endtime="20250619 06:25:02.518"/>
</kw>
<status status="PASS" starttime="20250619 06:25:02.438" endtime="20250619 06:25:02.518"/>
</kw>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:02.520" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:05.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:05.597" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=dc59badf40e6465c67741b0b3600d897915bbd1014ff669c6422874152d32a2f</msg>
<status status="PASS" starttime="20250619 06:25:02.518" endtime="20250619 06:25:05.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:05.598" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=dc59badf40e6465c67741b0b3600d897915bbd1014ff669c6422874152d32a2f</msg>
<status status="PASS" starttime="20250619 06:25:05.597" endtime="20250619 06:25:05.598"/>
</kw>
<msg timestamp="20250619 06:25:05.598" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=dc59badf40e6465c67741b0b3600d897915bbd1014ff669c6422874152d32a2f</msg>
<status status="PASS" starttime="20250619 06:25:02.518" endtime="20250619 06:25:05.598"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250619 06:25:05.599" level="FAIL">'awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=dc59badf40e6465c67741b0b3600d897915bbd1014ff669c6422874152d32a2f' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20250619 06:25:05.598" endtime="20250619 06:25:05.599"/>
</kw>
<msg timestamp="20250619 06:25:05.599" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250619 06:25:05.598" endtime="20250619 06:25:05.599"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250619 06:25:05.599" endtime="20250619 06:25:05.599"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250619 06:25:05.599" endtime="20250619 06:25:05.600"/>
</kw>
<status status="NOT RUN" starttime="20250619 06:25:05.599" endtime="20250619 06:25:05.600"/>
</branch>
<status status="PASS" starttime="20250619 06:25:05.599" endtime="20250619 06:25:05.600"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250619 06:25:05.600" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250619 06:25:05.600" endtime="20250619 06:25:05.600"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250619 06:25:05.600" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250619 06:25:05.600" endtime="20250619 06:25:05.600"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250619 06:25:05.601" level="INFO">${secret} = ['dc59badf40e6465c67741b0b3600d897915bbd1014ff669c6422874152d32a2f']</msg>
<status status="PASS" starttime="20250619 06:25:05.601" endtime="20250619 06:25:05.601"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250619 06:25:05.602" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:25:05.601" endtime="20250619 06:25:05.602"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250619 06:25:05.602" level="INFO">${secret} = dc59badf40e6465c67741b0b3600d897915bbd1014ff669c6422874152d32a2f</msg>
<status status="PASS" starttime="20250619 06:25:05.602" endtime="20250619 06:25:05.602"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:05.605" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:05.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:05.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:25:05.603" endtime="20250619 06:25:05.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:05.976" level="INFO"/>
<status status="PASS" starttime="20250619 06:25:05.975" endtime="20250619 06:25:05.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:05.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:05.976" endtime="20250619 06:25:05.976"/>
</kw>
<status status="PASS" starttime="20250619 06:25:05.603" endtime="20250619 06:25:05.976"/>
</kw>
<msg timestamp="20250619 06:25:05.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:05.603" endtime="20250619 06:25:05.976"/>
</kw>
<status status="PASS" starttime="20250619 06:25:05.603" endtime="20250619 06:25:05.976"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:05.979" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:06.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:06.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:25:05.977" endtime="20250619 06:25:06.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:06.328" level="INFO"/>
<status status="PASS" starttime="20250619 06:25:06.328" endtime="20250619 06:25:06.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:06.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:06.328" endtime="20250619 06:25:06.329"/>
</kw>
<status status="PASS" starttime="20250619 06:25:05.977" endtime="20250619 06:25:06.329"/>
</kw>
<msg timestamp="20250619 06:25:06.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:05.977" endtime="20250619 06:25:06.329"/>
</kw>
<status status="PASS" starttime="20250619 06:25:05.976" endtime="20250619 06:25:06.329"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:06.332" level="INFO">Running command 'aws configure set aws_secret_access_key dc59badf40e6465c67741b0b3600d897915bbd1014ff669c6422874152d32a2f 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:06.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:06.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:25:06.330" endtime="20250619 06:25:06.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:06.675" level="INFO"/>
<status status="PASS" starttime="20250619 06:25:06.675" endtime="20250619 06:25:06.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:06.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:06.675" endtime="20250619 06:25:06.676"/>
</kw>
<status status="PASS" starttime="20250619 06:25:06.330" endtime="20250619 06:25:06.676"/>
</kw>
<msg timestamp="20250619 06:25:06.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:06.329" endtime="20250619 06:25:06.676"/>
</kw>
<status status="PASS" starttime="20250619 06:25:06.329" endtime="20250619 06:25:06.676"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:06.679" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:07.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:07.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:25:06.677" endtime="20250619 06:25:07.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:07.020" level="INFO"/>
<status status="PASS" starttime="20250619 06:25:07.019" endtime="20250619 06:25:07.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:07.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:07.020" endtime="20250619 06:25:07.020"/>
</kw>
<status status="PASS" starttime="20250619 06:25:06.677" endtime="20250619 06:25:07.020"/>
</kw>
<msg timestamp="20250619 06:25:07.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:06.676" endtime="20250619 06:25:07.020"/>
</kw>
<status status="PASS" starttime="20250619 06:25:06.676" endtime="20250619 06:25:07.021"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:07.024" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:07.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:07.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:25:07.021" endtime="20250619 06:25:07.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:07.377" level="INFO"/>
<status status="PASS" starttime="20250619 06:25:07.376" endtime="20250619 06:25:07.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:07.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:07.377" endtime="20250619 06:25:07.377"/>
</kw>
<status status="PASS" starttime="20250619 06:25:07.021" endtime="20250619 06:25:07.377"/>
</kw>
<msg timestamp="20250619 06:25:07.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:07.021" endtime="20250619 06:25:07.377"/>
</kw>
<status status="PASS" starttime="20250619 06:25:07.021" endtime="20250619 06:25:07.378"/>
</kw>
<status status="PASS" starttime="20250619 06:25:02.518" endtime="20250619 06:25:07.378"/>
</kw>
<status status="PASS" starttime="20250619 06:25:02.438" endtime="20250619 06:25:07.378"/>
</kw>
<status status="PASS" starttime="20250619 06:25:02.437" endtime="20250619 06:25:07.378"/>
</test>
<test id="s1-t2" name="Test setup credentials" line="67">
<kw name="Setup aws credentials">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:07.383" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:07.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:07.742" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:25:07.380" endtime="20250619 06:25:07.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:07.743" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:25:07.743" endtime="20250619 06:25:07.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:07.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:07.743" endtime="20250619 06:25:07.743"/>
</kw>
<status status="PASS" starttime="20250619 06:25:07.380" endtime="20250619 06:25:07.743"/>
</kw>
<msg timestamp="20250619 06:25:07.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:07.380" endtime="20250619 06:25:07.744"/>
</kw>
<msg timestamp="20250619 06:25:07.744" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:25:07.379" endtime="20250619 06:25:07.744"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:07.747" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:08.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:08.094" level="INFO">${output} = dc59badf40e6465c67741b0b3600d897915bbd1014ff669c6422874152d32a2f</msg>
<status status="PASS" starttime="20250619 06:25:07.745" endtime="20250619 06:25:08.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:08.094" level="INFO">dc59badf40e6465c67741b0b3600d897915bbd1014ff669c6422874152d32a2f</msg>
<status status="PASS" starttime="20250619 06:25:08.094" endtime="20250619 06:25:08.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:08.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:08.095" endtime="20250619 06:25:08.095"/>
</kw>
<status status="PASS" starttime="20250619 06:25:07.744" endtime="20250619 06:25:08.095"/>
</kw>
<msg timestamp="20250619 06:25:08.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:07.744" endtime="20250619 06:25:08.095"/>
</kw>
<msg timestamp="20250619 06:25:08.095" level="INFO">${secret} = dc59badf40e6465c67741b0b3600d897915bbd1014ff669c6422874152d32a2f</msg>
<status status="PASS" starttime="20250619 06:25:07.744" endtime="20250619 06:25:08.095"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250619 06:25:08.096" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'dc59badf40e6465c67741b0b3600d897915bbd1014ff669c6422874152d32a2f'.</msg>
<status status="PASS" starttime="20250619 06:25:08.095" endtime="20250619 06:25:08.096"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250619 06:25:08.096" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/s3g@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20250619 06:25:08.096" endtime="20250619 06:25:08.096"/>
</kw>
<status status="PASS" starttime="20250619 06:25:07.379" endtime="20250619 06:25:08.096"/>
</kw>
<status status="PASS" starttime="20250619 06:25:07.378" endtime="20250619 06:25:08.096"/>
</test>
<test id="s1-t3" name="Test create bucket 1" line="70">
<kw name="Setup bucket1">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket bucket1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:08.101" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:09.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:09.865" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket1"
}</msg>
<status status="PASS" starttime="20250619 06:25:08.099" endtime="20250619 06:25:09.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:09.865" level="INFO">{
    "Location": "http://s3g:9878/bucket1"
}</msg>
<status status="PASS" starttime="20250619 06:25:09.865" endtime="20250619 06:25:09.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:09.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:09.866" endtime="20250619 06:25:09.866"/>
</kw>
<status status="PASS" starttime="20250619 06:25:08.098" endtime="20250619 06:25:09.866"/>
</kw>
<msg timestamp="20250619 06:25:09.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:08.098" endtime="20250619 06:25:09.866"/>
</kw>
<msg timestamp="20250619 06:25:09.866" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket1"
}</msg>
<status status="PASS" starttime="20250619 06:25:08.098" endtime="20250619 06:25:09.866"/>
</kw>
<status status="PASS" starttime="20250619 06:25:08.097" endtime="20250619 06:25:09.866"/>
</kw>
<status status="PASS" starttime="20250619 06:25:08.097" endtime="20250619 06:25:09.866"/>
</kw>
<status status="PASS" starttime="20250619 06:25:08.097" endtime="20250619 06:25:09.867"/>
</test>
<test id="s1-t4" name="Test OM JMX endpoint" line="73">
<kw name="Verify endpoint is up">
<arg>${OM_JMX_ENDPOINT}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:25:09.868" endtime="20250619 06:25:09.868"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:09.871" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:09.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:09.875" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20250619 06:25:09.869" endtime="20250619 06:25:09.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:09.876" level="INFO">s3g</msg>
<status status="PASS" starttime="20250619 06:25:09.875" endtime="20250619 06:25:09.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:09.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:09.876" endtime="20250619 06:25:09.876"/>
</kw>
<status status="PASS" starttime="20250619 06:25:09.869" endtime="20250619 06:25:09.876"/>
</kw>
<msg timestamp="20250619 06:25:09.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:09.869" endtime="20250619 06:25:09.876"/>
</kw>
<msg timestamp="20250619 06:25:09.876" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20250619 06:25:09.869" endtime="20250619 06:25:09.876"/>
</kw>
<msg timestamp="20250619 06:25:09.877" level="INFO">${principal} = HTTP/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:25:09.868" endtime="20250619 06:25:09.877"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:09.880" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:09.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:09.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:25:09.878" endtime="20250619 06:25:09.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:09.958" level="INFO"/>
<status status="PASS" starttime="20250619 06:25:09.957" endtime="20250619 06:25:09.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:09.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:09.958" endtime="20250619 06:25:09.958"/>
</kw>
<status status="PASS" starttime="20250619 06:25:09.878" endtime="20250619 06:25:09.958"/>
</kw>
<msg timestamp="20250619 06:25:09.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:09.877" endtime="20250619 06:25:09.958"/>
</kw>
<status status="PASS" starttime="20250619 06:25:09.877" endtime="20250619 06:25:09.958"/>
</kw>
<status status="PASS" starttime="20250619 06:25:09.877" endtime="20250619 06:25:09.959"/>
</kw>
<status status="PASS" starttime="20250619 06:25:09.868" endtime="20250619 06:25:09.959"/>
</kw>
<status status="PASS" starttime="20250619 06:25:09.868" endtime="20250619 06:25:09.959"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:09.962" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:10.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:10.283" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
*   Trying 172.18.0.2:9874...
* Connected to om (172.18.0.2) port 9874 (#0)
* Server auth using Negotiate with user ''
...</msg>
<status status="PASS" starttime="20250619 06:25:09.960" endtime="20250619 06:25:10.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:10.284" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
*   Trying 172.18.0.2:9874...
* Connected to om (172.18.0.2) port 9874 (#0)
* Server auth using Negotiate with user ''
&gt; HEAD /jmx HTTP/1.1
&gt; Host: om:9874
&gt; Authorization: Negotiate YIICegYGKwYBBQUCoIICbjCCAmqgDTALBgkqhkiG9xIBAgKiggJXBIICU2CCAk8GCSqGSIb3EgECAgEAboICPjCCAjqgAwIBBaEDAgEOogcDBQAgAAAAo4IBT2GCAUswggFHoAMCAQWhDRsLRVhBTVBMRS5DT02iFTAToAMCAQOhDDAKGwRIVFRQGwJvbaOCARgwggEUoAMCARKhAwIBAaKCAQYEggEClUOw8aDqVmL9wFRFqBuNDMEzinU5tvMrrxdIe3dXKnlEOlPMZvphEkfaWv/52DrY4QGn1nZN1dMj5eHqFYKbEAC5zY3Y/msf06p+ocSqBelj1fp3+EpvGOWAQhG1gDwBJorLiMIOd9gDfZMGvwzd15nNeze3h402iAaVgWhrhnjfP413YBVUBpEfOybA6dC8EePZlK4Kq2U+wAvIZxYLlF2sxg6jow22EZW/kDrc8xUbzoX3vwIzM9WvXGIb5Ndf9/7VDWeae80L5RSdVgT4Tn/IkB0oYBeTEORCw12HxId1bLGoeCrR0fSXIP7x2TDGkdfz+xD6LcjKM9MfxXIEkz7DpIHRMIHOoAMCARKigcYEgcPU6RoM/FsBaHRQUtyTvNpHJuybgsPgGW/82iIXB/paCohCcFyYLaGaYe0h9sDklP5DRiTdWhRqD+FOMTjXngGvBK/D3GEL+vnOR8vKzxOO18Z0V05Nu4Q3ek1wZvBDYdgVDXNdz+gy04qLqcF6MS+zn4MNWIm+LztAo1SO3QceOT5OOoFaWCbEgIhQX9t/HEIzj4S0YCmygri+5s/Z24TL8FDqgE5KbB59rQo4yfatIEQp2sQZdlij9/ym5Wo+Cmrw5Bo=
&gt; User-Agent: curl/7.76.1
&gt; Accept: */*
&gt; 
* Mark bundle as not supporting multiuse
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 19 Jun 2025 06:25:10 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 19 Jun 2025 06:25:10 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGEMIGBoAMKAQChCwYJKoZIhvcSAQICom0Ea2BpBgkqhkiG9xIBAgICAG9aMFigAwIBBaEDAgEPokwwSqADAgESokMEQeW2G9/QcyD2M0EPHneTIp8IjXNb0ft3CFzO+2QRSVNgQML89r58DdKDWKq9v8vPUBKYcRUQXp2++ct7m8vOgLPD
&lt; Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1750350310037&amp;s=mk+sDrnaCx6HdPalBGhxV24WKVnq1F3mOfI6kaDBwSU="; Path=/; HttpOnly
&lt; Access-Control-Allow-Methods: GET
&lt; Access-Control-Allow-Origin: *
&lt; Content-Length: 414647
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 200 OK
Date: Thu, 19 Jun 2025 06:25:10 GMT
Cache-Control: no-cache
Expires: Thu, 19 Jun 2025 06:25:10 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate oYGEMIGBoAMKAQChCwYJKoZIhvcSAQICom0Ea2BpBgkqhkiG9xIBAgICAG9aMFigAwIBBaEDAgEPokwwSqADAgESokMEQeW2G9/QcyD2M0EPHneTIp8IjXNb0ft3CFzO+2QRSVNgQML89r58DdKDWKq9v8vPUBKYcRUQXp2++ct7m8vOgLPD
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1750350310037&amp;s=mk+sDrnaCx6HdPalBGhxV24WKVnq1F3mOfI6kaDBwSU="; Path=/; HttpOnly
Access-Control-Allow-Methods: GET
Access-Control-Allow-Origin: *
Content-Length: 414647
</msg>
<status status="PASS" starttime="20250619 06:25:10.283" endtime="20250619 06:25:10.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:10.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:10.284" endtime="20250619 06:25:10.285"/>
</kw>
<status status="PASS" starttime="20250619 06:25:09.959" endtime="20250619 06:25:10.285"/>
</kw>
<msg timestamp="20250619 06:25:10.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:09.959" endtime="20250619 06:25:10.285"/>
</kw>
<msg timestamp="20250619 06:25:10.286" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
*   Trying 172.18.0.2:9874...
* Connected to om (172.18.0.2) port 9874 (#0)
* Server auth using Negotiate with user ''
...</msg>
<status status="PASS" starttime="20250619 06:25:09.959" endtime="20250619 06:25:10.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200 OK</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:25:10.286" endtime="20250619 06:25:10.286"/>
</kw>
<status status="PASS" starttime="20250619 06:25:09.867" endtime="20250619 06:25:10.286"/>
</kw>
<status status="PASS" starttime="20250619 06:25:09.867" endtime="20250619 06:25:10.287"/>
</test>
<test id="s1-t5" name="Test metrics are registered" line="76">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${OM_JMX_ENDPOINT} | grep ${DECAY_RPC_SCHEDULER_METRICS_NAME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:10.293" level="INFO">Running command 'curl --negotiate -u : -LSs http://om:9874/jmx | grep DecayRpcSchedulerMetrics2.ipc.9862 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:10.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:10.394" level="INFO">${output} =     "name" : "Hadoop:service=OzoneManager,name=DecayRpcSchedulerMetrics2.ipc.9862",
    "modelerType" : "DecayRpcSchedulerMetrics2.ipc.9862",</msg>
<status status="PASS" starttime="20250619 06:25:10.290" endtime="20250619 06:25:10.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:10.395" level="INFO">    "name" : "Hadoop:service=OzoneManager,name=DecayRpcSchedulerMetrics2.ipc.9862",
    "modelerType" : "DecayRpcSchedulerMetrics2.ipc.9862",</msg>
<status status="PASS" starttime="20250619 06:25:10.394" endtime="20250619 06:25:10.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:10.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:10.395" endtime="20250619 06:25:10.396"/>
</kw>
<status status="PASS" starttime="20250619 06:25:10.290" endtime="20250619 06:25:10.396"/>
</kw>
<msg timestamp="20250619 06:25:10.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:10.288" endtime="20250619 06:25:10.396"/>
</kw>
<msg timestamp="20250619 06:25:10.396" level="INFO">${result} =     "name" : "Hadoop:service=OzoneManager,name=DecayRpcSchedulerMetrics2.ipc.9862",
    "modelerType" : "DecayRpcSchedulerMetrics2.ipc.9862",</msg>
<status status="PASS" starttime="20250619 06:25:10.288" endtime="20250619 06:25:10.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DECAY_RPC_SCHEDULER_METRICS_NAME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:25:10.397" endtime="20250619 06:25:10.397"/>
</kw>
<status status="PASS" starttime="20250619 06:25:10.287" endtime="20250619 06:25:10.397"/>
</test>
<test id="s1-t6" name="Run freon s3kg" line="80">
<kw name="Freon s3kg">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3kg -e ${S3_ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:10.404" level="INFO">Running command 'ozone freon s3kg -e http://s3g:9878 -t 10 -n 1000 -p s3bg  2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:42.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:42.474" level="INFO">${output} = 2025-06-19 06:25:11,854 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-19 06:25:12,014 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250619 06:25:10.401" endtime="20250619 06:25:42.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:42.475" level="INFO">2025-06-19 06:25:11,854 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-19 06:25:12,014 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-19 06:25:12,015 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-19 06:25:12,172 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg and number-of-tests 1000
2025-06-19 06:25:12,229 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2025-06-19 06:25:13,231 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2025-06-19 06:25:14,232 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2025-06-19 06:25:15,232 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2025-06-19 06:25:16,239 [Thread-5] INFO freon.ProgressBar: Progress: 1.90 % (19 out of 1000)
2025-06-19 06:25:17,239 [Thread-5] INFO freon.ProgressBar: Progress: 4.30 % (43 out of 1000)
2025-06-19 06:25:18,266 [Thread-5] INFO freon.ProgressBar: Progress: 6.70 % (67 out of 1000)
2025-06-19 06:25:19,267 [Thread-5] INFO freon.ProgressBar: Progress: 9.10 % (91 out of 1000)
2025-06-19 06:25:20,268 [Thread-5] INFO freon.ProgressBar: Progress: 11.70 % (117 out of 1000)
2025-06-19 06:25:21,283 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (144 out of 1000)
2025-06-19 06:25:22,284 [Thread-5] INFO freon.ProgressBar: Progress: 17.30 % (173 out of 1000)
2025-06-19 06:25:23,302 [Thread-5] INFO freon.ProgressBar: Progress: 20.30 % (203 out of 1000)
2025-06-19 06:25:24,304 [Thread-5] INFO freon.ProgressBar: Progress: 22.90 % (229 out of 1000)
2025-06-19 06:25:25,313 [Thread-5] INFO freon.ProgressBar: Progress: 25.90 % (259 out of 1000)
2025-06-19 06:25:26,319 [Thread-5] INFO freon.ProgressBar: Progress: 29.50 % (295 out of 1000)
2025-06-19 06:25:27,322 [Thread-5] INFO freon.ProgressBar: Progress: 33.00 % (330 out of 1000)
2025-06-19 06:25:28,324 [Thread-5] INFO freon.ProgressBar: Progress: 37.20 % (372 out of 1000)
2025-06-19 06:25:29,325 [Thread-5] INFO freon.ProgressBar: Progress: 41.10 % (411 out of 1000)
2025-06-19 06:25:30,330 [Thread-5] INFO freon.ProgressBar: Progress: 45.70 % (457 out of 1000)
2025-06-19 06:25:31,334 [Thread-5] INFO freon.ProgressBar: Progress: 49.70 % (497 out of 1000)
2025-06-19 06:25:32,341 [Thread-5] INFO freon.ProgressBar: Progress: 53.30 % (533 out of 1000)
2025-06-19 06:25:33,343 [Thread-5] INFO freon.ProgressBar: Progress: 57.60 % (576 out of 1000)
2025-06-19 06:25:34,350 [Thread-5] INFO freon.ProgressBar: Progress: 62.10 % (621 out of 1000)
2025-06-19 06:25:35,354 [Thread-5] INFO freon.ProgressBar: Progress: 66.40 % (664 out of 1000)
2025-06-19 06:25:36,365 [Thread-5] INFO freon.ProgressBar: Progress: 71.00 % (710 out of 1000)
2025-06-19 06:25:37,367 [Thread-5] INFO freon.ProgressBar: Progress: 75.80 % (758 out of 1000)
2025-06-19 06:25:38,371 [Thread-5] INFO freon.ProgressBar: Progress: 80.70 % (807 out of 1000)
2025-06-19 06:25:39,386 [Thread-5] INFO freon.ProgressBar: Progress: 85.70 % (857 out of 1000)
2025-06-19 06:25:40,389 [Thread-5] INFO freon.ProgressBar: Progress: 91.10 % (911 out of 1000)
2025-06-19 06:25:41,415 [Thread-5] INFO freon.ProgressBar: Progress: 96.40 % (964 out of 1000)
2025-06-19 06:25:42,415 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1000 out of 1000)
2025-06-19 06:25:42,428 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1000, min=109.99045, max=2771.684729, mean=278.4521545212289, stddev=236.8223684582083, median=237.816621, p75=303.210288, p95=432.467632, p98=486.891899, p99=560.667826, p999=2769.202641, mean_rate=33.82618275087118, m1=18.613116713841173, m5=13.007803011443139, m15=11.945984824588024, rate_unit=events/second, duration_unit=milliseconds
2025-06-19 06:25:42,429 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 30
2025-06-19 06:25:42,429 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-19 06:25:42,429 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1000</msg>
<status status="PASS" starttime="20250619 06:25:42.475" endtime="20250619 06:25:42.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:42.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:42.476" endtime="20250619 06:25:42.476"/>
</kw>
<status status="PASS" starttime="20250619 06:25:10.401" endtime="20250619 06:25:42.476"/>
</kw>
<msg timestamp="20250619 06:25:42.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:10.400" endtime="20250619 06:25:42.476"/>
</kw>
<msg timestamp="20250619 06:25:42.476" level="INFO">${result} = 2025-06-19 06:25:11,854 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-19 06:25:12,014 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250619 06:25:10.400" endtime="20250619 06:25:42.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:25:42.477" endtime="20250619 06:25:42.477"/>
</kw>
<status status="PASS" starttime="20250619 06:25:10.399" endtime="20250619 06:25:42.477"/>
</kw>
<status status="PASS" starttime="20250619 06:25:10.398" endtime="20250619 06:25:42.477"/>
</test>
<test id="s1-t7" name="Test caller from metrics" line="83">
<kw name="Check metrics caller">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${OM_JMX_ENDPOINT} | sed -n '/${DECAY_RPC_SCHEDULER_METRICS_NAME}/,/}/p' | grep 'Caller('</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:25:42.481" level="INFO">Running command 'curl --negotiate -u : -LSs http://om:9874/jmx | sed -n '/DecayRpcSchedulerMetrics2.ipc.9862/,/}/p' | grep 'Caller(' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:25:42.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:25:42.581" level="INFO">${output} =     "Caller(testuser/s3g@EXAMPLE.COM).Volume" : 4002,
    "Caller(testuser/s3g@EXAMPLE.COM).Priority" : 3,</msg>
<status status="PASS" starttime="20250619 06:25:42.479" endtime="20250619 06:25:42.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:25:42.582" level="INFO">    "Caller(testuser/s3g@EXAMPLE.COM).Volume" : 4002,
    "Caller(testuser/s3g@EXAMPLE.COM).Priority" : 3,</msg>
<status status="PASS" starttime="20250619 06:25:42.581" endtime="20250619 06:25:42.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:25:42.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:25:42.582" endtime="20250619 06:25:42.582"/>
</kw>
<status status="PASS" starttime="20250619 06:25:42.479" endtime="20250619 06:25:42.582"/>
</kw>
<msg timestamp="20250619 06:25:42.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:25:42.479" endtime="20250619 06:25:42.582"/>
</kw>
<msg timestamp="20250619 06:25:42.583" level="INFO">${result} =     "Caller(testuser/s3g@EXAMPLE.COM).Volume" : 4002,
    "Caller(testuser/s3g@EXAMPLE.COM).Priority" : 3,</msg>
<status status="PASS" starttime="20250619 06:25:42.478" endtime="20250619 06:25:42.583"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${TEST_USER}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:25:42.583" endtime="20250619 06:25:42.583"/>
</kw>
<status status="PASS" starttime="20250619 06:25:42.478" endtime="20250619 06:25:42.583"/>
</kw>
<status status="PASS" starttime="20250619 06:25:42.477" endtime="20250619 06:25:42.583"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250619 06:25:02.384" endtime="20250619 06:25:42.584"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="0" skip="0" id="s1" name="ozonesecure-fcq">ozonesecure-fcq</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
