<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250619 07:01:57.928" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:26:57.313" endtime="20250619 06:26:57.313"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:26:57.316" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:26:57.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:26:57.320" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:26:57.314" endtime="20250619 06:26:57.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:26:57.320" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:26:57.320" endtime="20250619 06:26:57.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:26:57.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:26:57.321" endtime="20250619 06:26:57.321"/>
</kw>
<status status="PASS" starttime="20250619 06:26:57.314" endtime="20250619 06:26:57.321"/>
</kw>
<msg timestamp="20250619 06:26:57.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:26:57.313" endtime="20250619 06:26:57.321"/>
</kw>
<msg timestamp="20250619 06:26:57.321" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:26:57.313" endtime="20250619 06:26:57.321"/>
</kw>
<msg timestamp="20250619 06:26:57.321" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:26:57.313" endtime="20250619 06:26:57.321"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:26:57.322" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:26:57.322" endtime="20250619 06:26:57.322"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:26:57.325" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:26:57.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:26:57.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:26:57.323" endtime="20250619 06:26:57.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:26:57.404" level="INFO"/>
<status status="PASS" starttime="20250619 06:26:57.404" endtime="20250619 06:26:57.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:26:57.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:26:57.405" endtime="20250619 06:26:57.405"/>
</kw>
<status status="PASS" starttime="20250619 06:26:57.323" endtime="20250619 06:26:57.405"/>
</kw>
<msg timestamp="20250619 06:26:57.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:26:57.323" endtime="20250619 06:26:57.405"/>
</kw>
<status status="PASS" starttime="20250619 06:26:57.322" endtime="20250619 06:26:57.405"/>
</kw>
<status status="PASS" starttime="20250619 06:26:57.322" endtime="20250619 06:26:57.405"/>
</kw>
<status status="PASS" starttime="20250619 06:26:57.312" endtime="20250619 06:26:57.405"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250619 06:26:57.312" endtime="20250619 06:26:57.405"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250619 06:26:57.278" endtime="20250619 06:26:57.406"/>
</suite>
<suite id="s1-s2" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s2-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s2-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:26:57.979" endtime="20250619 06:26:57.979"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:26:57.982" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:26:57.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:26:57.986" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:26:57.980" endtime="20250619 06:26:57.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:26:57.986" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:26:57.986" endtime="20250619 06:26:57.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:26:57.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:26:57.987" endtime="20250619 06:26:57.987"/>
</kw>
<status status="PASS" starttime="20250619 06:26:57.980" endtime="20250619 06:26:57.987"/>
</kw>
<msg timestamp="20250619 06:26:57.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:26:57.980" endtime="20250619 06:26:57.987"/>
</kw>
<msg timestamp="20250619 06:26:57.987" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:26:57.979" endtime="20250619 06:26:57.987"/>
</kw>
<msg timestamp="20250619 06:26:57.988" level="INFO">${principal} = HTTP/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:26:57.979" endtime="20250619 06:26:57.988"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:26:57.991" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:26:58.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:26:58.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:26:57.989" endtime="20250619 06:26:58.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:26:58.055" level="INFO"/>
<status status="PASS" starttime="20250619 06:26:58.054" endtime="20250619 06:26:58.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:26:58.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:26:58.055" endtime="20250619 06:26:58.055"/>
</kw>
<status status="PASS" starttime="20250619 06:26:57.988" endtime="20250619 06:26:58.055"/>
</kw>
<msg timestamp="20250619 06:26:58.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:26:57.988" endtime="20250619 06:26:58.055"/>
</kw>
<status status="PASS" starttime="20250619 06:26:57.988" endtime="20250619 06:26:58.055"/>
</kw>
<status status="PASS" starttime="20250619 06:26:57.988" endtime="20250619 06:26:58.055"/>
</kw>
<status status="PASS" starttime="20250619 06:26:57.979" endtime="20250619 06:26:58.056"/>
</kw>
<status status="PASS" starttime="20250619 06:26:57.978" endtime="20250619 06:26:58.056"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:26:58.059" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:26:58.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:26:58.161" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 19 Jun 2025 06:26:58 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcS...</msg>
<status status="PASS" starttime="20250619 06:26:58.057" endtime="20250619 06:26:58.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:26:58.162" level="INFO">HTTP/1.1 200 OK
Date: Thu, 19 Jun 2025 06:26:58 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQu8rWyF+np+Zjgeo9QspYuPnqAF+DVMmdupIc+RD0yLWsjpggVCfmp3CY0v3zUulZ10vzOmXsI2naEnLtBJZVr2Zcg==
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1750350418152&amp;s=FUtq2PO0FV26q6Nj1LEJk+642sGImrFxZIxZ+lxsglE="; Path=/; HttpOnly
Last-Modified: Wed, 12 Mar 2025 22:12:52 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20250619 06:26:58.161" endtime="20250619 06:26:58.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:26:58.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:26:58.162" endtime="20250619 06:26:58.163"/>
</kw>
<status status="PASS" starttime="20250619 06:26:58.056" endtime="20250619 06:26:58.163"/>
</kw>
<msg timestamp="20250619 06:26:58.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:26:58.056" endtime="20250619 06:26:58.163"/>
</kw>
<msg timestamp="20250619 06:26:58.163" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 19 Jun 2025 06:26:58 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcS...</msg>
<status status="PASS" starttime="20250619 06:26:58.056" endtime="20250619 06:26:58.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:26:58.163" endtime="20250619 06:26:58.164"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250619 06:26:57.978" endtime="20250619 06:26:58.164"/>
</test>
<test id="s1-s2-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:26:58.169" endtime="20250619 06:26:58.169"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:26:58.176" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:26:58.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:26:58.181" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:26:58.173" endtime="20250619 06:26:58.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:26:58.182" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:26:58.181" endtime="20250619 06:26:58.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:26:58.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:26:58.182" endtime="20250619 06:26:58.182"/>
</kw>
<status status="PASS" starttime="20250619 06:26:58.173" endtime="20250619 06:26:58.182"/>
</kw>
<msg timestamp="20250619 06:26:58.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:26:58.173" endtime="20250619 06:26:58.183"/>
</kw>
<msg timestamp="20250619 06:26:58.183" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:26:58.172" endtime="20250619 06:26:58.183"/>
</kw>
<msg timestamp="20250619 06:26:58.183" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:26:58.171" endtime="20250619 06:26:58.183"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:26:58.183" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:26:58.183" endtime="20250619 06:26:58.183"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:26:58.186" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:26:58.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:26:58.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:26:58.184" endtime="20250619 06:26:58.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:26:58.243" level="INFO"/>
<status status="PASS" starttime="20250619 06:26:58.242" endtime="20250619 06:26:58.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:26:58.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:26:58.243" endtime="20250619 06:26:58.243"/>
</kw>
<status status="PASS" starttime="20250619 06:26:58.184" endtime="20250619 06:26:58.243"/>
</kw>
<msg timestamp="20250619 06:26:58.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:26:58.184" endtime="20250619 06:26:58.243"/>
</kw>
<status status="PASS" starttime="20250619 06:26:58.184" endtime="20250619 06:26:58.244"/>
</kw>
<status status="PASS" starttime="20250619 06:26:58.183" endtime="20250619 06:26:58.244"/>
</kw>
<status status="PASS" starttime="20250619 06:26:58.168" endtime="20250619 06:26:58.244"/>
</kw>
<status status="PASS" starttime="20250619 06:26:58.168" endtime="20250619 06:26:58.244"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250619 06:26:58.244" level="INFO">${random} = Afy5kMU8bL</msg>
<status status="PASS" starttime="20250619 06:26:58.244" endtime="20250619 06:26:58.244"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:26:58.248" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p Afy5kMU8bL  2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:04.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:04.373" level="INFO">${output} = 2025-06-19 06:26:59,554 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-19 06:26:59,732 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250619 06:26:58.246" endtime="20250619 06:27:04.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:04.374" level="INFO">2025-06-19 06:26:59,554 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-19 06:26:59,732 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-19 06:26:59,732 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-19 06:26:59,912 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Afy5kMU8bL and number-of-tests 1
2025-06-19 06:26:59,964 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-19 06:27:00,964 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-19 06:27:01,794 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2025-06-19 06:27:01,920 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-06-19 06:27:01,964 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-19 06:27:02,161 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-19 06:27:02,231 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2025-06-19 06:27:02,965 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-19 06:27:03,966 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-06-19 06:27:03,988 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1632.099427, max=1632.099427, mean=1632.099427, stddev=0.0, median=1632.099427, p75=1632.099427, p95=1632.099427, p98=1632.099427, p99=1632.099427, p999=1632.099427, mean_rate=0.49108376095622236, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-19 06:27:03,988 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2025-06-19 06:27:03,988 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-19 06:27:03,989 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250619 06:27:04.374" endtime="20250619 06:27:04.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:04.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:04.374" endtime="20250619 06:27:04.375"/>
</kw>
<status status="PASS" starttime="20250619 06:26:58.246" endtime="20250619 06:27:04.375"/>
</kw>
<msg timestamp="20250619 06:27:04.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:26:58.245" endtime="20250619 06:27:04.375"/>
</kw>
<msg timestamp="20250619 06:27:04.375" level="INFO">${result} = 2025-06-19 06:26:59,554 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-19 06:26:59,732 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250619 06:26:58.245" endtime="20250619 06:27:04.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:04.375" endtime="20250619 06:27:04.376"/>
</kw>
<status status="PASS" starttime="20250619 06:26:58.244" endtime="20250619 06:27:04.376"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:04.380" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p Afy5kMU8bL  2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:10.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:10.480" level="INFO">${output} = 2025-06-19 06:27:05,649 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-19 06:27:05,815 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250619 06:27:04.378" endtime="20250619 06:27:10.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:10.481" level="INFO">2025-06-19 06:27:05,649 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-19 06:27:05,815 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-19 06:27:05,815 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-19 06:27:05,995 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Afy5kMU8bL and number-of-tests 1
2025-06-19 06:27:06,062 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-19 06:27:07,063 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-19 06:27:08,064 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-19 06:27:08,545 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-19 06:27:09,064 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-19 06:27:10,065 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-06-19 06:27:10,084 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=30.309838, max=30.309838, mean=30.309838, stddev=0.0, median=30.309838, p75=30.309838, p95=30.309838, p98=30.309838, p99=30.309838, p999=30.309838, mean_rate=1.8359441134866528, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-19 06:27:10,085 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2025-06-19 06:27:10,085 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-19 06:27:10,085 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250619 06:27:10.480" endtime="20250619 06:27:10.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:10.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:10.481" endtime="20250619 06:27:10.481"/>
</kw>
<status status="PASS" starttime="20250619 06:27:04.377" endtime="20250619 06:27:10.481"/>
</kw>
<msg timestamp="20250619 06:27:10.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:04.377" endtime="20250619 06:27:10.481"/>
</kw>
<msg timestamp="20250619 06:27:10.482" level="INFO">${result} = 2025-06-19 06:27:05,649 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-19 06:27:05,815 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250619 06:27:04.377" endtime="20250619 06:27:10.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:10.482" endtime="20250619 06:27:10.482"/>
</kw>
<status status="PASS" starttime="20250619 06:27:04.376" endtime="20250619 06:27:10.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250619 06:26:58.165" endtime="20250619 06:27:10.482"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250619 06:26:57.955" endtime="20250619 06:27:10.483"/>
</suite>
<suite id="s1-s2-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s2-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:10.490" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:11.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:11.512" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250619 06:27:10.488" endtime="20250619 06:27:11.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:11.512" level="INFO">om</msg>
<status status="PASS" starttime="20250619 06:27:11.512" endtime="20250619 06:27:11.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:11.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:11.513" endtime="20250619 06:27:11.513"/>
</kw>
<status status="PASS" starttime="20250619 06:27:10.488" endtime="20250619 06:27:11.513"/>
</kw>
<msg timestamp="20250619 06:27:11.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:10.487" endtime="20250619 06:27:11.513"/>
</kw>
<msg timestamp="20250619 06:27:11.513" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250619 06:27:10.487" endtime="20250619 06:27:11.513"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:11.513" endtime="20250619 06:27:11.514"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:11.517" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:12.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:12.557" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250619 06:27:11.515" endtime="20250619 06:27:12.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:12.558" level="INFO">om</msg>
<status status="PASS" starttime="20250619 06:27:12.558" endtime="20250619 06:27:12.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:12.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:12.558" endtime="20250619 06:27:12.559"/>
</kw>
<status status="PASS" starttime="20250619 06:27:11.514" endtime="20250619 06:27:12.559"/>
</kw>
<msg timestamp="20250619 06:27:12.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:11.514" endtime="20250619 06:27:12.559"/>
</kw>
<msg timestamp="20250619 06:27:12.559" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250619 06:27:11.514" endtime="20250619 06:27:12.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:12.559" endtime="20250619 06:27:12.560"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250619 06:27:10.487" endtime="20250619 06:27:12.560"/>
</test>
<test id="s1-s2-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:12.563" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:13.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:13.524" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:27:12.561" endtime="20250619 06:27:13.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:13.525" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:27:13.524" endtime="20250619 06:27:13.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:13.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:13.525" endtime="20250619 06:27:13.525"/>
</kw>
<status status="PASS" starttime="20250619 06:27:12.561" endtime="20250619 06:27:13.525"/>
</kw>
<msg timestamp="20250619 06:27:13.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:12.561" endtime="20250619 06:27:13.526"/>
</kw>
<msg timestamp="20250619 06:27:13.526" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20250619 06:27:12.561" endtime="20250619 06:27:13.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:13.526" endtime="20250619 06:27:13.526"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:13.529" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:14.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:14.502" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:27:13.527" endtime="20250619 06:27:14.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:14.503" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:27:14.503" endtime="20250619 06:27:14.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:14.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:14.503" endtime="20250619 06:27:14.504"/>
</kw>
<status status="PASS" starttime="20250619 06:27:13.527" endtime="20250619 06:27:14.504"/>
</kw>
<msg timestamp="20250619 06:27:14.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:13.527" endtime="20250619 06:27:14.504"/>
</kw>
<msg timestamp="20250619 06:27:14.504" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20250619 06:27:13.526" endtime="20250619 06:27:14.504"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:14.504" endtime="20250619 06:27:14.504"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250619 06:27:12.560" endtime="20250619 06:27:14.505"/>
</test>
<test id="s1-s2-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:14.508" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:15.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:15.395" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250619 06:27:14.506" endtime="20250619 06:27:15.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:15.396" level="INFO">om</msg>
<status status="PASS" starttime="20250619 06:27:15.396" endtime="20250619 06:27:15.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:15.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:15.397" endtime="20250619 06:27:15.397"/>
</kw>
<status status="PASS" starttime="20250619 06:27:14.506" endtime="20250619 06:27:15.397"/>
</kw>
<msg timestamp="20250619 06:27:15.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:14.506" endtime="20250619 06:27:15.397"/>
</kw>
<msg timestamp="20250619 06:27:15.397" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250619 06:27:14.505" endtime="20250619 06:27:15.397"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:15.397" endtime="20250619 06:27:15.398"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:15.398" endtime="20250619 06:27:15.398"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:15.402" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:16.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:16.288" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250619 06:27:15.400" endtime="20250619 06:27:16.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:16.288" level="INFO">om</msg>
<status status="PASS" starttime="20250619 06:27:16.288" endtime="20250619 06:27:16.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:16.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:16.289" endtime="20250619 06:27:16.289"/>
</kw>
<status status="PASS" starttime="20250619 06:27:15.399" endtime="20250619 06:27:16.289"/>
</kw>
<msg timestamp="20250619 06:27:16.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:15.398" endtime="20250619 06:27:16.289"/>
</kw>
<msg timestamp="20250619 06:27:16.289" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250619 06:27:15.398" endtime="20250619 06:27:16.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:16.290" endtime="20250619 06:27:16.290"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:16.290" endtime="20250619 06:27:16.290"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250619 06:27:14.505" endtime="20250619 06:27:16.290"/>
</test>
<test id="s1-s2-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:16.294" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:17.300" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:27:17.300" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250619 06:27:16.292" endtime="20250619 06:27:17.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:17.301" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250619 06:27:17.300" endtime="20250619 06:27:17.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:17.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:17.301" endtime="20250619 06:27:17.301"/>
</kw>
<msg timestamp="20250619 06:27:17.301" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250619 06:27:16.291" endtime="20250619 06:27:17.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:17.302" endtime="20250619 06:27:17.302"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:17.304" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:18.206" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:27:18.206" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250619 06:27:17.302" endtime="20250619 06:27:18.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:18.207" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250619 06:27:18.206" endtime="20250619 06:27:18.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:18.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:18.207" endtime="20250619 06:27:18.207"/>
</kw>
<msg timestamp="20250619 06:27:18.207" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250619 06:27:17.302" endtime="20250619 06:27:18.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:18.207" endtime="20250619 06:27:18.207"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250619 06:27:16.291" endtime="20250619 06:27:18.208"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20250619 06:27:10.484" endtime="20250619 06:27:18.208"/>
</suite>
<suite id="s1-s2-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250619 06:27:18.221" level="INFO">${random} = 19399</msg>
<status status="PASS" starttime="20250619 06:27:18.221" endtime="20250619 06:27:18.221"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:27:18.222" level="INFO">${source} = 19399-source</msg>
<status status="PASS" starttime="20250619 06:27:18.221" endtime="20250619 06:27:18.222"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:27:18.223" level="INFO">${target} = 19399-target</msg>
<status status="PASS" starttime="20250619 06:27:18.222" endtime="20250619 06:27:18.223"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>volume create ${source}</arg>
<arg>volume create ${target}</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250619 06:27:18.223" level="INFO">${cmd} = volume create 19399-source' --execute 'volume create 19399-target</msg>
<status status="PASS" starttime="20250619 06:27:18.223" endtime="20250619 06:27:18.223"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:18.226" level="INFO">Running command 'ozone sh --execute 'volume create 19399-source' --execute 'volume create 19399-target' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:21.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:21.385" level="INFO">${output} = volume create 19399-source
volume create 19399-target</msg>
<status status="PASS" starttime="20250619 06:27:18.224" endtime="20250619 06:27:21.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:21.386" level="INFO">volume create 19399-source
volume create 19399-target</msg>
<status status="PASS" starttime="20250619 06:27:21.385" endtime="20250619 06:27:21.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:21.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:21.386" endtime="20250619 06:27:21.386"/>
</kw>
<status status="PASS" starttime="20250619 06:27:18.224" endtime="20250619 06:27:21.386"/>
</kw>
<msg timestamp="20250619 06:27:21.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:18.223" endtime="20250619 06:27:21.387"/>
</kw>
<status status="PASS" starttime="20250619 06:27:18.223" endtime="20250619 06:27:21.387"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket create ${source}/readable-bucket</arg>
<arg>key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<arg>bucket create ${source}/unreadable-bucket</arg>
<arg>bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<arg>volume addacl --acl user:testuser2:r[DEFAULT] ${target}</arg>
<arg>bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<arg>bucket link ${source}/readable-bucket ${target}/readable-link2</arg>
<arg>volume addacl --acl user:testuser2:rl ${source}</arg>
<arg>bucket addacl --acl user:testuser2:rl ${source}/readable-bucket</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250619 06:27:21.388" level="INFO">${cmd} = bucket create 19399-source/readable-bucket' --execute 'key put 19399-source/readable-bucket/key-in-readable-bucket /etc/passwd' --execute 'bucket create 19399-source/unreadable-bucket' --execute 'buck...</msg>
<status status="PASS" starttime="20250619 06:27:21.388" endtime="20250619 06:27:21.388"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:21.391" level="INFO">Running command 'ozone sh --execute 'bucket create 19399-source/readable-bucket' --execute 'key put 19399-source/readable-bucket/key-in-readable-bucket /etc/passwd' --execute 'bucket create 19399-source/unreadable-bucket' --execute 'bucket link 19399-source/unreadable-bucket 19399-target/link-to-unreadable-bucket' --execute 'volume addacl --acl user:testuser2:r[DEFAULT] 19399-target' --execute 'bucket link 19399-source/readable-bucket 19399-target/readable-link' --execute 'bucket link 19399-source/readable-bucket 19399-target/readable-link2' --execute 'volume addacl --acl user:testuser2:rl 19399-source' --execute 'bucket addacl --acl user:testuser2:rl 19399-source/readable-bucket' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:26.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:26.528" level="INFO">${output} = bucket create 19399-source/readable-bucket
key put 19399-source/readable-bucket/key-in-readable-bucket /etc/passwd
bucket create 19399-source/unreadable-bucket
bucket link 19399-source/unreadable-buck...</msg>
<status status="PASS" starttime="20250619 06:27:21.389" endtime="20250619 06:27:26.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:26.528" level="INFO">bucket create 19399-source/readable-bucket
key put 19399-source/readable-bucket/key-in-readable-bucket /etc/passwd
bucket create 19399-source/unreadable-bucket
bucket link 19399-source/unreadable-bucket 19399-target/link-to-unreadable-bucket
volume addacl --acl user:testuser2:r[DEFAULT] 19399-target
ACL user:testuser2:r[DEFAULT] added successfully.
bucket link 19399-source/readable-bucket 19399-target/readable-link
bucket link 19399-source/readable-bucket 19399-target/readable-link2
volume addacl --acl user:testuser2:rl 19399-source
ACL user:testuser2:rl[ACCESS] added successfully.
bucket addacl --acl user:testuser2:rl 19399-source/readable-bucket
ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250619 06:27:26.528" endtime="20250619 06:27:26.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:26.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:26.528" endtime="20250619 06:27:26.529"/>
</kw>
<status status="PASS" starttime="20250619 06:27:21.388" endtime="20250619 06:27:26.529"/>
</kw>
<msg timestamp="20250619 06:27:26.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:21.388" endtime="20250619 06:27:26.529"/>
</kw>
<status status="PASS" starttime="20250619 06:27:21.387" endtime="20250619 06:27:26.529"/>
</kw>
<status status="PASS" starttime="20250619 06:27:21.387" endtime="20250619 06:27:26.529"/>
</kw>
<status status="PASS" starttime="20250619 06:27:21.387" endtime="20250619 06:27:26.529"/>
</kw>
<status status="PASS" starttime="20250619 06:27:18.221" endtime="20250619 06:27:26.529"/>
</kw>
<test id="s1-s2-s3-t1" name="Link to non-existent bucket" line="91">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:27:26.531" endtime="20250619 06:27:26.531"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:26.534" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:26.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:26.538" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:27:26.532" endtime="20250619 06:27:26.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:26.538" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:27:26.538" endtime="20250619 06:27:26.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:26.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:26.538" endtime="20250619 06:27:26.539"/>
</kw>
<status status="PASS" starttime="20250619 06:27:26.532" endtime="20250619 06:27:26.539"/>
</kw>
<msg timestamp="20250619 06:27:26.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:26.531" endtime="20250619 06:27:26.539"/>
</kw>
<msg timestamp="20250619 06:27:26.539" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:27:26.531" endtime="20250619 06:27:26.539"/>
</kw>
<msg timestamp="20250619 06:27:26.539" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:27:26.531" endtime="20250619 06:27:26.539"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:27:26.540" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:27:26.540" endtime="20250619 06:27:26.540"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:26.543" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:26.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:26.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:27:26.541" endtime="20250619 06:27:26.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:26.612" level="INFO"/>
<status status="PASS" starttime="20250619 06:27:26.612" endtime="20250619 06:27:26.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:26.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:26.612" endtime="20250619 06:27:26.613"/>
</kw>
<status status="PASS" starttime="20250619 06:27:26.541" endtime="20250619 06:27:26.613"/>
</kw>
<msg timestamp="20250619 06:27:26.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:26.540" endtime="20250619 06:27:26.613"/>
</kw>
<status status="PASS" starttime="20250619 06:27:26.540" endtime="20250619 06:27:26.613"/>
</kw>
<status status="PASS" starttime="20250619 06:27:26.540" endtime="20250619 06:27:26.613"/>
</kw>
<status status="PASS" starttime="20250619 06:27:26.530" endtime="20250619 06:27:26.613"/>
</kw>
<status status="PASS" starttime="20250619 06:27:26.530" endtime="20250619 06:27:26.613"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:26.616" level="INFO">Running command 'ozone sh bucket link 19399-source/no-such-bucket 19399-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:29.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:29.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:27:26.614" endtime="20250619 06:27:29.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:29.582" level="INFO"/>
<status status="PASS" starttime="20250619 06:27:29.581" endtime="20250619 06:27:29.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:29.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:29.582" endtime="20250619 06:27:29.582"/>
</kw>
<status status="PASS" starttime="20250619 06:27:26.614" endtime="20250619 06:27:29.582"/>
</kw>
<msg timestamp="20250619 06:27:29.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:26.614" endtime="20250619 06:27:29.583"/>
</kw>
<status status="PASS" starttime="20250619 06:27:26.613" endtime="20250619 06:27:29.583"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:29.585" level="INFO">Running command 'ozone sh key list 19399-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:32.569" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:27:32.569" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found: 19399-source/no-such-bucket</msg>
<status status="PASS" starttime="20250619 06:27:29.583" endtime="20250619 06:27:32.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:32.570" level="INFO">BUCKET_NOT_FOUND Bucket not found: 19399-source/no-such-bucket</msg>
<status status="PASS" starttime="20250619 06:27:32.569" endtime="20250619 06:27:32.570"/>
</kw>
<msg timestamp="20250619 06:27:32.570" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found: 19399-source/no-such-bucket</msg>
<status status="PASS" starttime="20250619 06:27:29.583" endtime="20250619 06:27:32.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:32.570" endtime="20250619 06:27:32.571"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:27:26.530" endtime="20250619 06:27:32.571"/>
</test>
<test id="s1-s2-s3-t2" name="Key create passthrough" line="96">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:27:32.573" endtime="20250619 06:27:32.574"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:32.578" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:32.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:32.581" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:27:32.575" endtime="20250619 06:27:32.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:32.582" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:27:32.582" endtime="20250619 06:27:32.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:32.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:32.582" endtime="20250619 06:27:32.583"/>
</kw>
<status status="PASS" starttime="20250619 06:27:32.575" endtime="20250619 06:27:32.583"/>
</kw>
<msg timestamp="20250619 06:27:32.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:32.575" endtime="20250619 06:27:32.583"/>
</kw>
<msg timestamp="20250619 06:27:32.583" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:27:32.574" endtime="20250619 06:27:32.583"/>
</kw>
<msg timestamp="20250619 06:27:32.583" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:27:32.574" endtime="20250619 06:27:32.583"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:27:32.584" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:27:32.583" endtime="20250619 06:27:32.584"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:32.587" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:32.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:32.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:27:32.585" endtime="20250619 06:27:32.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:32.624" level="INFO"/>
<status status="PASS" starttime="20250619 06:27:32.623" endtime="20250619 06:27:32.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:32.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:32.624" endtime="20250619 06:27:32.624"/>
</kw>
<status status="PASS" starttime="20250619 06:27:32.584" endtime="20250619 06:27:32.624"/>
</kw>
<msg timestamp="20250619 06:27:32.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:32.584" endtime="20250619 06:27:32.624"/>
</kw>
<status status="PASS" starttime="20250619 06:27:32.584" endtime="20250619 06:27:32.624"/>
</kw>
<status status="PASS" starttime="20250619 06:27:32.584" endtime="20250619 06:27:32.625"/>
</kw>
<status status="PASS" starttime="20250619 06:27:32.573" endtime="20250619 06:27:32.625"/>
</kw>
<status status="PASS" starttime="20250619 06:27:32.573" endtime="20250619 06:27:32.625"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket link ${source}/bucket1 ${target}/link1</arg>
<arg>bucket create ${source}/bucket1</arg>
<arg>key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250619 06:27:32.625" level="INFO">${cmd} = bucket link 19399-source/bucket1 19399-target/link1' --execute 'bucket create 19399-source/bucket1' --execute 'key put 19399-target/link1/key1 /etc/passwd</msg>
<status status="PASS" starttime="20250619 06:27:32.625" endtime="20250619 06:27:32.625"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:32.628" level="INFO">Running command 'ozone sh --execute 'bucket link 19399-source/bucket1 19399-target/link1' --execute 'bucket create 19399-source/bucket1' --execute 'key put 19399-target/link1/key1 /etc/passwd' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:37.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:37.613" level="INFO">${output} = bucket link 19399-source/bucket1 19399-target/link1
bucket create 19399-source/bucket1
key put 19399-target/link1/key1 /etc/passwd</msg>
<status status="PASS" starttime="20250619 06:27:32.626" endtime="20250619 06:27:37.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:37.614" level="INFO">bucket link 19399-source/bucket1 19399-target/link1
bucket create 19399-source/bucket1
key put 19399-target/link1/key1 /etc/passwd</msg>
<status status="PASS" starttime="20250619 06:27:37.614" endtime="20250619 06:27:37.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:37.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:37.614" endtime="20250619 06:27:37.615"/>
</kw>
<status status="PASS" starttime="20250619 06:27:32.626" endtime="20250619 06:27:37.615"/>
</kw>
<msg timestamp="20250619 06:27:37.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:32.626" endtime="20250619 06:27:37.615"/>
</kw>
<status status="PASS" starttime="20250619 06:27:32.625" endtime="20250619 06:27:37.615"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250619 06:27:37.616" level="INFO">${postfix} = 60172</msg>
<status status="PASS" starttime="20250619 06:27:37.616" endtime="20250619 06:27:37.616"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250619 06:27:37.617" level="INFO">${tmpfile} = /tmp/tempkey-60172</msg>
<status status="PASS" starttime="20250619 06:27:37.617" endtime="20250619 06:27:37.617"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:37.620" level="INFO">Running command 'ozone sh key get 19399-target/link1/key1 /tmp/tempkey-60172 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:42.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:42.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:27:37.618" endtime="20250619 06:27:42.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:42.430" level="INFO"/>
<status status="PASS" starttime="20250619 06:27:42.430" endtime="20250619 06:27:42.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:42.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:42.431" endtime="20250619 06:27:42.431"/>
</kw>
<status status="PASS" starttime="20250619 06:27:37.617" endtime="20250619 06:27:42.431"/>
</kw>
<msg timestamp="20250619 06:27:42.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:37.617" endtime="20250619 06:27:42.431"/>
</kw>
<status status="PASS" starttime="20250619 06:27:37.617" endtime="20250619 06:27:42.431"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250619 06:27:42.434" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-60172 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:42.436" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250619 06:27:42.431" endtime="20250619 06:27:42.436"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:42.440" level="INFO">Running command 'rm -f /tmp/tempkey-60172 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:42.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:42.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:27:42.438" endtime="20250619 06:27:42.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:42.444" level="INFO"/>
<status status="PASS" starttime="20250619 06:27:42.443" endtime="20250619 06:27:42.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:42.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:42.444" endtime="20250619 06:27:42.444"/>
</kw>
<status status="PASS" starttime="20250619 06:27:42.437" endtime="20250619 06:27:42.444"/>
</kw>
<msg timestamp="20250619 06:27:42.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:42.437" endtime="20250619 06:27:42.444"/>
</kw>
<status status="PASS" starttime="20250619 06:27:42.437" endtime="20250619 06:27:42.444"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250619 06:27:42.445" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250619 06:27:42.445" endtime="20250619 06:27:42.445"/>
</kw>
<msg timestamp="20250619 06:27:42.445" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250619 06:27:37.616" endtime="20250619 06:27:42.445"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250619 06:27:42.445" endtime="20250619 06:27:42.445"/>
</kw>
<status status="PASS" starttime="20250619 06:27:37.615" endtime="20250619 06:27:42.445"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:27:32.572" endtime="20250619 06:27:42.446"/>
</test>
<test id="s1-s2-s3-t3" name="Key read passthrough" line="102">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:27:42.447" endtime="20250619 06:27:42.447"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:42.450" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:42.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:42.454" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:27:42.448" endtime="20250619 06:27:42.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:42.454" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:27:42.454" endtime="20250619 06:27:42.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:42.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:42.454" endtime="20250619 06:27:42.455"/>
</kw>
<status status="PASS" starttime="20250619 06:27:42.448" endtime="20250619 06:27:42.455"/>
</kw>
<msg timestamp="20250619 06:27:42.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:42.448" endtime="20250619 06:27:42.455"/>
</kw>
<msg timestamp="20250619 06:27:42.455" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:27:42.447" endtime="20250619 06:27:42.455"/>
</kw>
<msg timestamp="20250619 06:27:42.455" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:27:42.447" endtime="20250619 06:27:42.455"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:27:42.456" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:27:42.455" endtime="20250619 06:27:42.456"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:42.459" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:42.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:42.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:27:42.457" endtime="20250619 06:27:42.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:42.474" level="INFO"/>
<status status="PASS" starttime="20250619 06:27:42.473" endtime="20250619 06:27:42.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:42.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:42.474" endtime="20250619 06:27:42.474"/>
</kw>
<status status="PASS" starttime="20250619 06:27:42.457" endtime="20250619 06:27:42.474"/>
</kw>
<msg timestamp="20250619 06:27:42.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:42.456" endtime="20250619 06:27:42.475"/>
</kw>
<status status="PASS" starttime="20250619 06:27:42.456" endtime="20250619 06:27:42.475"/>
</kw>
<status status="PASS" starttime="20250619 06:27:42.456" endtime="20250619 06:27:42.475"/>
</kw>
<status status="PASS" starttime="20250619 06:27:42.447" endtime="20250619 06:27:42.475"/>
</kw>
<status status="PASS" starttime="20250619 06:27:42.446" endtime="20250619 06:27:42.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:42.478" level="INFO">Running command 'ozone sh key put 19399-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:47.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:47.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:27:42.476" endtime="20250619 06:27:47.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:47.211" level="INFO"/>
<status status="PASS" starttime="20250619 06:27:47.210" endtime="20250619 06:27:47.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:47.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:47.211" endtime="20250619 06:27:47.212"/>
</kw>
<status status="PASS" starttime="20250619 06:27:42.475" endtime="20250619 06:27:47.212"/>
</kw>
<msg timestamp="20250619 06:27:47.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:42.475" endtime="20250619 06:27:47.212"/>
</kw>
<status status="PASS" starttime="20250619 06:27:42.475" endtime="20250619 06:27:47.212"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250619 06:27:47.213" level="INFO">${postfix} = 92238</msg>
<status status="PASS" starttime="20250619 06:27:47.213" endtime="20250619 06:27:47.213"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250619 06:27:47.213" level="INFO">${tmpfile} = /tmp/tempkey-92238</msg>
<status status="PASS" starttime="20250619 06:27:47.213" endtime="20250619 06:27:47.213"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:47.217" level="INFO">Running command 'ozone sh key get 19399-source/bucket1/key2 /tmp/tempkey-92238 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:51.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:51.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:27:47.214" endtime="20250619 06:27:51.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:51.787" level="INFO"/>
<status status="PASS" starttime="20250619 06:27:51.787" endtime="20250619 06:27:51.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:51.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:51.788" endtime="20250619 06:27:51.788"/>
</kw>
<status status="PASS" starttime="20250619 06:27:47.214" endtime="20250619 06:27:51.788"/>
</kw>
<msg timestamp="20250619 06:27:51.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:47.214" endtime="20250619 06:27:51.788"/>
</kw>
<status status="PASS" starttime="20250619 06:27:47.214" endtime="20250619 06:27:51.788"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250619 06:27:51.791" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-92238 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:51.794" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250619 06:27:51.788" endtime="20250619 06:27:51.794"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:51.797" level="INFO">Running command 'rm -f /tmp/tempkey-92238 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:51.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:51.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:27:51.795" endtime="20250619 06:27:51.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:51.801" level="INFO"/>
<status status="PASS" starttime="20250619 06:27:51.801" endtime="20250619 06:27:51.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:51.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:51.801" endtime="20250619 06:27:51.801"/>
</kw>
<status status="PASS" starttime="20250619 06:27:51.795" endtime="20250619 06:27:51.802"/>
</kw>
<msg timestamp="20250619 06:27:51.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:51.794" endtime="20250619 06:27:51.802"/>
</kw>
<status status="PASS" starttime="20250619 06:27:51.794" endtime="20250619 06:27:51.802"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250619 06:27:51.802" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250619 06:27:51.802" endtime="20250619 06:27:51.802"/>
</kw>
<msg timestamp="20250619 06:27:51.802" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250619 06:27:47.212" endtime="20250619 06:27:51.802"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250619 06:27:51.802" endtime="20250619 06:27:51.803"/>
</kw>
<status status="PASS" starttime="20250619 06:27:47.212" endtime="20250619 06:27:51.803"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:27:42.446" endtime="20250619 06:27:51.803"/>
</test>
<test id="s1-s2-s3-t4" name="Key list passthrough" line="106">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:27:51.804" endtime="20250619 06:27:51.805"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:51.808" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:51.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:51.811" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:27:51.806" endtime="20250619 06:27:51.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:51.812" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:27:51.811" endtime="20250619 06:27:51.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:51.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:51.812" endtime="20250619 06:27:51.812"/>
</kw>
<status status="PASS" starttime="20250619 06:27:51.805" endtime="20250619 06:27:51.812"/>
</kw>
<msg timestamp="20250619 06:27:51.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:51.805" endtime="20250619 06:27:51.813"/>
</kw>
<msg timestamp="20250619 06:27:51.813" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:27:51.805" endtime="20250619 06:27:51.813"/>
</kw>
<msg timestamp="20250619 06:27:51.813" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:27:51.805" endtime="20250619 06:27:51.813"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:27:51.813" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:27:51.813" endtime="20250619 06:27:51.813"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:51.816" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:51.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:51.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:27:51.814" endtime="20250619 06:27:51.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:51.832" level="INFO"/>
<status status="PASS" starttime="20250619 06:27:51.832" endtime="20250619 06:27:51.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:51.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:51.833" endtime="20250619 06:27:51.833"/>
</kw>
<status status="PASS" starttime="20250619 06:27:51.814" endtime="20250619 06:27:51.833"/>
</kw>
<msg timestamp="20250619 06:27:51.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:51.814" endtime="20250619 06:27:51.833"/>
</kw>
<status status="PASS" starttime="20250619 06:27:51.814" endtime="20250619 06:27:51.833"/>
</kw>
<status status="PASS" starttime="20250619 06:27:51.813" endtime="20250619 06:27:51.833"/>
</kw>
<status status="PASS" starttime="20250619 06:27:51.804" endtime="20250619 06:27:51.833"/>
</kw>
<status status="PASS" starttime="20250619 06:27:51.804" endtime="20250619 06:27:51.833"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:51.836" level="INFO">Running command 'ozone sh key list 19399-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:55.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:55.185" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20250619 06:27:51.834" endtime="20250619 06:27:55.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:55.186" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20250619 06:27:55.185" endtime="20250619 06:27:55.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:55.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:55.186" endtime="20250619 06:27:55.186"/>
</kw>
<status status="PASS" starttime="20250619 06:27:51.834" endtime="20250619 06:27:55.186"/>
</kw>
<msg timestamp="20250619 06:27:55.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:51.834" endtime="20250619 06:27:55.186"/>
</kw>
<msg timestamp="20250619 06:27:55.186" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20250619 06:27:51.833" endtime="20250619 06:27:55.186"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:55.189" level="INFO">Running command 'ozone sh key list 19399-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:58.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:58.378" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20250619 06:27:55.187" endtime="20250619 06:27:58.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:58.379" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20250619 06:27:58.378" endtime="20250619 06:27:58.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:58.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:58.379" endtime="20250619 06:27:58.379"/>
</kw>
<status status="PASS" starttime="20250619 06:27:55.187" endtime="20250619 06:27:58.379"/>
</kw>
<msg timestamp="20250619 06:27:58.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:55.187" endtime="20250619 06:27:58.379"/>
</kw>
<msg timestamp="20250619 06:27:58.379" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20250619 06:27:55.187" endtime="20250619 06:27:58.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:27:58.380" endtime="20250619 06:27:58.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:58.380" endtime="20250619 06:27:58.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:27:58.380" endtime="20250619 06:27:58.380"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:27:51.803" endtime="20250619 06:27:58.381"/>
</test>
<test id="s1-s2-s3-t5" name="Key delete passthrough" line="113">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:27:58.382" endtime="20250619 06:27:58.382"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:58.386" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:58.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:58.389" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:27:58.383" endtime="20250619 06:27:58.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:58.390" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:27:58.390" endtime="20250619 06:27:58.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:58.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:58.390" endtime="20250619 06:27:58.391"/>
</kw>
<status status="PASS" starttime="20250619 06:27:58.383" endtime="20250619 06:27:58.391"/>
</kw>
<msg timestamp="20250619 06:27:58.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:58.383" endtime="20250619 06:27:58.391"/>
</kw>
<msg timestamp="20250619 06:27:58.391" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:27:58.383" endtime="20250619 06:27:58.391"/>
</kw>
<msg timestamp="20250619 06:27:58.391" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:27:58.382" endtime="20250619 06:27:58.391"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:27:58.391" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:27:58.391" endtime="20250619 06:27:58.392"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:58.395" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:27:58.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:27:58.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:27:58.393" endtime="20250619 06:27:58.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:27:58.452" level="INFO"/>
<status status="PASS" starttime="20250619 06:27:58.451" endtime="20250619 06:27:58.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:27:58.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:27:58.452" endtime="20250619 06:27:58.452"/>
</kw>
<status status="PASS" starttime="20250619 06:27:58.392" endtime="20250619 06:27:58.453"/>
</kw>
<msg timestamp="20250619 06:27:58.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:58.392" endtime="20250619 06:27:58.453"/>
</kw>
<status status="PASS" starttime="20250619 06:27:58.392" endtime="20250619 06:27:58.453"/>
</kw>
<status status="PASS" starttime="20250619 06:27:58.392" endtime="20250619 06:27:58.453"/>
</kw>
<status status="PASS" starttime="20250619 06:27:58.382" endtime="20250619 06:27:58.453"/>
</kw>
<status status="PASS" starttime="20250619 06:27:58.381" endtime="20250619 06:27:58.453"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:27:58.456" level="INFO">Running command 'ozone sh key delete 19399-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:01.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:01.600" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20250619 06:27:58.454" endtime="20250619 06:28:01.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:01.601" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20250619 06:28:01.600" endtime="20250619 06:28:01.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:01.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:01.601" endtime="20250619 06:28:01.601"/>
</kw>
<status status="PASS" starttime="20250619 06:27:58.454" endtime="20250619 06:28:01.601"/>
</kw>
<msg timestamp="20250619 06:28:01.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:27:58.453" endtime="20250619 06:28:01.601"/>
</kw>
<status status="PASS" starttime="20250619 06:27:58.453" endtime="20250619 06:28:01.601"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket1keys}</var>
<arg>ozone sh key list ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:01.605" level="INFO">Running command 'ozone sh key list 19399-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:04.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:04.995" level="INFO">${output} = [ {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-06-19T06:28:01.488Z",
  "modificationTime" : "...</msg>
<status status="PASS" starttime="20250619 06:28:01.602" endtime="20250619 06:28:04.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:04.996" level="INFO">[ {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-06-19T06:28:01.488Z",
  "modificationTime" : "2025-06-19T06:28:01.488Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-06-19T06:28:01.488Z",
  "modificationTime" : "2025-06-19T06:28:01.488Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-06-19T06:28:01.488Z",
  "modificationTime" : "2025-06-19T06:28:01.500Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "owner" : "testuser",
  "dataSize" : 15892,
  "creationTime" : "2025-06-19T06:27:45.440Z",
  "modificationTime" : "2025-06-19T06:27:46.793Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-06-19T06:27:35.917Z",
  "modificationTime" : "2025-06-19T06:27:37.191Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250619 06:28:04.995" endtime="20250619 06:28:04.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:04.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:04.996" endtime="20250619 06:28:04.996"/>
</kw>
<status status="PASS" starttime="20250619 06:28:01.602" endtime="20250619 06:28:04.996"/>
</kw>
<msg timestamp="20250619 06:28:04.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:01.602" endtime="20250619 06:28:04.996"/>
</kw>
<msg timestamp="20250619 06:28:04.996" level="INFO">${bucket1keys} = [ {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-06-19T06:28:01.488Z",
  "modificationTime" : "...</msg>
<status status="PASS" starttime="20250619 06:28:01.601" endtime="20250619 06:28:04.997"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:05.000" level="INFO">Running command 'echo '[ {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-06-19T06:28:01.488Z",
  "modificationTime" : "2025-06-19T06:28:01.488Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-06-19T06:28:01.488Z",
  "modificationTime" : "2025-06-19T06:28:01.488Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-06-19T06:28:01.488Z",
  "modificationTime" : "2025-06-19T06:28:01.500Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "owner" : "testuser",
  "dataSize" : 15892,
  "creationTime" : "2025-06-19T06:27:45.440Z",
  "modificationTime" : "2025-06-19T06:27:46.793Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-06-19T06:27:35.917Z",
  "modificationTime" : "2025-06-19T06:27:37.191Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash")) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:05.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:05.005" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20250619 06:28:04.998" endtime="20250619 06:28:05.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:05.005" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20250619 06:28:05.005" endtime="20250619 06:28:05.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:05.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:05.006" endtime="20250619 06:28:05.006"/>
</kw>
<status status="PASS" starttime="20250619 06:28:04.997" endtime="20250619 06:28:05.006"/>
</kw>
<msg timestamp="20250619 06:28:05.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:04.997" endtime="20250619 06:28:05.006"/>
</kw>
<msg timestamp="20250619 06:28:05.006" level="INFO">${source_list} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20250619 06:28:04.997" endtime="20250619 06:28:05.006"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${source_list}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250619 06:28:05.007" endtime="20250619 06:28:05.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:28:05.007" endtime="20250619 06:28:05.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:05.010" level="INFO">Running command 'echo '[ {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-06-19T06:28:01.488Z",
  "modificationTime" : "2025-06-19T06:28:01.488Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2025-06-19T06:28:01.488Z",
  "modificationTime" : "2025-06-19T06:28:01.488Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-06-19T06:28:01.488Z",
  "modificationTime" : "2025-06-19T06:28:01.500Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "owner" : "testuser",
  "dataSize" : 15892,
  "creationTime" : "2025-06-19T06:27:45.440Z",
  "modificationTime" : "2025-06-19T06:27:46.793Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "19399-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-06-19T06:27:35.917Z",
  "modificationTime" : "2025-06-19T06:27:37.191Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:05.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:05.015" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250619 06:28:05.008" endtime="20250619 06:28:05.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:05.016" level="INFO">key1</msg>
<status status="PASS" starttime="20250619 06:28:05.015" endtime="20250619 06:28:05.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:05.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:05.016" endtime="20250619 06:28:05.016"/>
</kw>
<status status="PASS" starttime="20250619 06:28:05.008" endtime="20250619 06:28:05.016"/>
</kw>
<msg timestamp="20250619 06:28:05.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:05.008" endtime="20250619 06:28:05.017"/>
</kw>
<msg timestamp="20250619 06:28:05.017" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20250619 06:28:05.007" endtime="20250619 06:28:05.017"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:28:05.017" endtime="20250619 06:28:05.017"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:27:58.381" endtime="20250619 06:28:05.017"/>
</test>
<test id="s1-s2-s3-t6" name="Bucket list contains links" line="122">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:28:05.019" endtime="20250619 06:28:05.019"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:05.022" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:05.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:05.025" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:28:05.020" endtime="20250619 06:28:05.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:05.026" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:28:05.026" endtime="20250619 06:28:05.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:05.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:05.026" endtime="20250619 06:28:05.027"/>
</kw>
<status status="PASS" starttime="20250619 06:28:05.020" endtime="20250619 06:28:05.027"/>
</kw>
<msg timestamp="20250619 06:28:05.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:05.019" endtime="20250619 06:28:05.027"/>
</kw>
<msg timestamp="20250619 06:28:05.027" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:28:05.019" endtime="20250619 06:28:05.027"/>
</kw>
<msg timestamp="20250619 06:28:05.027" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:28:05.019" endtime="20250619 06:28:05.027"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:28:05.027" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:28:05.027" endtime="20250619 06:28:05.028"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:05.031" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:05.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:05.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:28:05.029" endtime="20250619 06:28:05.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:05.068" level="INFO"/>
<status status="PASS" starttime="20250619 06:28:05.068" endtime="20250619 06:28:05.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:05.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:05.068" endtime="20250619 06:28:05.069"/>
</kw>
<status status="PASS" starttime="20250619 06:28:05.028" endtime="20250619 06:28:05.069"/>
</kw>
<msg timestamp="20250619 06:28:05.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:05.028" endtime="20250619 06:28:05.069"/>
</kw>
<status status="PASS" starttime="20250619 06:28:05.028" endtime="20250619 06:28:05.069"/>
</kw>
<status status="PASS" starttime="20250619 06:28:05.028" endtime="20250619 06:28:05.069"/>
</kw>
<status status="PASS" starttime="20250619 06:28:05.018" endtime="20250619 06:28:05.069"/>
</kw>
<status status="PASS" starttime="20250619 06:28:05.018" endtime="20250619 06:28:05.069"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:05.072" level="INFO">Running command 'ozone sh bucket list 19399-target 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:08.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:08.370" level="INFO">${output} = [ {
  "volumeName" : "19399-target",
  "name" : "dangling-link",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-06-19T06:27:29.478Z",
  "modificationT...</msg>
<status status="PASS" starttime="20250619 06:28:05.070" endtime="20250619 06:28:08.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:08.371" level="INFO">[ {
  "volumeName" : "19399-target",
  "name" : "dangling-link",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-06-19T06:27:29.478Z",
  "modificationTime" : "2025-06-19T06:27:29.478Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "19399-target",
  "name" : "link-to-unreadable-bucket",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2025-06-19T06:27:25.960Z",
  "modificationTime" : "2025-06-19T06:27:25.960Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "19399-target",
  "name" : "link1",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-19T06:27:35.783Z",
  "modificationTime" : "2025-06-19T06:27:35.783Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "19399-target",
  "name" : "readable-link",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2025-06-19T06:27:26.042Z",
  "modificationTime" : "2025-06-19T06:27:26.042Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "19399-target",
  "name" : "readable-link2",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2025-06-19T06:27:26.081Z",
  "modificationTime" : "2025-06-19T06:27:26.081Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20250619 06:28:08.371" endtime="20250619 06:28:08.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:08.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:08.372" endtime="20250619 06:28:08.372"/>
</kw>
<status status="PASS" starttime="20250619 06:28:05.070" endtime="20250619 06:28:08.372"/>
</kw>
<msg timestamp="20250619 06:28:08.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:05.070" endtime="20250619 06:28:08.372"/>
</kw>
<msg timestamp="20250619 06:28:08.372" level="INFO">${result} = [ {
  "volumeName" : "19399-target",
  "name" : "dangling-link",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-06-19T06:27:29.478Z",
  "modificationT...</msg>
<status status="PASS" starttime="20250619 06:28:05.069" endtime="20250619 06:28:08.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:28:08.373" endtime="20250619 06:28:08.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:28:08.373" endtime="20250619 06:28:08.373"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:28:05.018" endtime="20250619 06:28:08.373"/>
</test>
<test id="s1-s2-s3-t7" name="Bucket info shows source" line="127">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:28:08.375" endtime="20250619 06:28:08.375"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:08.378" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:08.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:08.382" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:28:08.376" endtime="20250619 06:28:08.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:08.382" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:28:08.382" endtime="20250619 06:28:08.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:08.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:08.382" endtime="20250619 06:28:08.383"/>
</kw>
<status status="PASS" starttime="20250619 06:28:08.376" endtime="20250619 06:28:08.383"/>
</kw>
<msg timestamp="20250619 06:28:08.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:08.376" endtime="20250619 06:28:08.383"/>
</kw>
<msg timestamp="20250619 06:28:08.383" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:28:08.375" endtime="20250619 06:28:08.383"/>
</kw>
<msg timestamp="20250619 06:28:08.383" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:28:08.375" endtime="20250619 06:28:08.383"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:28:08.384" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:28:08.383" endtime="20250619 06:28:08.384"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:08.387" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:08.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:08.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:28:08.385" endtime="20250619 06:28:08.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:08.423" level="INFO"/>
<status status="PASS" starttime="20250619 06:28:08.422" endtime="20250619 06:28:08.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:08.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:08.423" endtime="20250619 06:28:08.423"/>
</kw>
<status status="PASS" starttime="20250619 06:28:08.384" endtime="20250619 06:28:08.424"/>
</kw>
<msg timestamp="20250619 06:28:08.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:08.384" endtime="20250619 06:28:08.424"/>
</kw>
<status status="PASS" starttime="20250619 06:28:08.384" endtime="20250619 06:28:08.424"/>
</kw>
<status status="PASS" starttime="20250619 06:28:08.384" endtime="20250619 06:28:08.424"/>
</kw>
<status status="PASS" starttime="20250619 06:28:08.374" endtime="20250619 06:28:08.424"/>
</kw>
<status status="PASS" starttime="20250619 06:28:08.374" endtime="20250619 06:28:08.424"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:08.428" level="INFO">Running command 'ozone sh bucket info 19399-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:11.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:11.744" level="INFO">${output} = {
  "volumeName" : "19399-target",
  "name" : "link1",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-19T06:27:35.783Z",
  "modificationTime" : "2025-06-1...</msg>
<status status="PASS" starttime="20250619 06:28:08.425" endtime="20250619 06:28:11.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:11.745" level="INFO">{
  "volumeName" : "19399-target",
  "name" : "link1",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-19T06:27:35.783Z",
  "modificationTime" : "2025-06-19T06:27:35.783Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20250619 06:28:11.744" endtime="20250619 06:28:11.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:11.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:11.745" endtime="20250619 06:28:11.746"/>
</kw>
<status status="PASS" starttime="20250619 06:28:08.425" endtime="20250619 06:28:11.746"/>
</kw>
<msg timestamp="20250619 06:28:11.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:08.425" endtime="20250619 06:28:11.746"/>
</kw>
<msg timestamp="20250619 06:28:11.746" level="INFO">${result} = {
  "volumeName" : "19399-target",
  "name" : "link1",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-19T06:27:35.783Z",
  "modificationTime" : "2025-06-1...</msg>
<status status="PASS" starttime="20250619 06:28:08.424" endtime="20250619 06:28:11.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:28:11.746" endtime="20250619 06:28:11.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:28:11.747" endtime="20250619 06:28:11.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:28:11.747" endtime="20250619 06:28:11.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:28:11.748" endtime="20250619 06:28:11.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:28:11.748" endtime="20250619 06:28:11.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:28:11.748" endtime="20250619 06:28:11.749"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:28:11.749" endtime="20250619 06:28:11.749"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:28:08.374" endtime="20250619 06:28:11.749"/>
</test>
<test id="s1-s2-s3-t8" name="Source and target bucket have different ACLs" line="137">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:28:11.751" endtime="20250619 06:28:11.751"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:11.754" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:11.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:11.758" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:28:11.752" endtime="20250619 06:28:11.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:11.758" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:28:11.758" endtime="20250619 06:28:11.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:11.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:11.758" endtime="20250619 06:28:11.759"/>
</kw>
<status status="PASS" starttime="20250619 06:28:11.752" endtime="20250619 06:28:11.759"/>
</kw>
<msg timestamp="20250619 06:28:11.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:11.751" endtime="20250619 06:28:11.759"/>
</kw>
<msg timestamp="20250619 06:28:11.759" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:28:11.751" endtime="20250619 06:28:11.759"/>
</kw>
<msg timestamp="20250619 06:28:11.759" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:28:11.751" endtime="20250619 06:28:11.759"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:28:11.760" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:28:11.759" endtime="20250619 06:28:11.760"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:11.763" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:11.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:11.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:28:11.761" endtime="20250619 06:28:11.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:11.799" level="INFO"/>
<status status="PASS" starttime="20250619 06:28:11.799" endtime="20250619 06:28:11.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:11.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:11.799" endtime="20250619 06:28:11.800"/>
</kw>
<status status="PASS" starttime="20250619 06:28:11.760" endtime="20250619 06:28:11.800"/>
</kw>
<msg timestamp="20250619 06:28:11.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:11.760" endtime="20250619 06:28:11.800"/>
</kw>
<status status="PASS" starttime="20250619 06:28:11.760" endtime="20250619 06:28:11.800"/>
</kw>
<status status="PASS" starttime="20250619 06:28:11.760" endtime="20250619 06:28:11.800"/>
</kw>
<status status="PASS" starttime="20250619 06:28:11.750" endtime="20250619 06:28:11.800"/>
</kw>
<status status="PASS" starttime="20250619 06:28:11.750" endtime="20250619 06:28:11.800"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:11.804" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 19399-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:14.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:14.765" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250619 06:28:11.801" endtime="20250619 06:28:14.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:14.766" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250619 06:28:14.765" endtime="20250619 06:28:14.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:14.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:14.766" endtime="20250619 06:28:14.766"/>
</kw>
<status status="PASS" starttime="20250619 06:28:11.801" endtime="20250619 06:28:14.767"/>
</kw>
<msg timestamp="20250619 06:28:14.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:11.801" endtime="20250619 06:28:14.767"/>
</kw>
<status status="PASS" starttime="20250619 06:28:11.800" endtime="20250619 06:28:14.767"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:14.771" level="INFO">Running command 'ozone sh bucket getacl 19399-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:18.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:18.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:28:14.769" endtime="20250619 06:28:18.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:18.058" level="INFO"/>
<status status="PASS" starttime="20250619 06:28:18.058" endtime="20250619 06:28:18.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:18.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:18.059" endtime="20250619 06:28:18.059"/>
</kw>
<status status="PASS" starttime="20250619 06:28:14.768" endtime="20250619 06:28:18.059"/>
</kw>
<msg timestamp="20250619 06:28:18.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:14.768" endtime="20250619 06:28:18.059"/>
</kw>
<msg timestamp="20250619 06:28:18.059" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250619 06:28:14.768" endtime="20250619 06:28:18.059"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:28:18.059" endtime="20250619 06:28:18.060"/>
</kw>
<status status="PASS" starttime="20250619 06:28:14.767" endtime="20250619 06:28:18.060"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source=false</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:18.064" level="INFO">Running command 'ozone sh bucket getacl --source=false 19399-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:21.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:21.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:28:18.062" endtime="20250619 06:28:21.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:21.306" level="INFO"/>
<status status="PASS" starttime="20250619 06:28:21.305" endtime="20250619 06:28:21.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:21.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:21.306" endtime="20250619 06:28:21.306"/>
</kw>
<status status="PASS" starttime="20250619 06:28:18.061" endtime="20250619 06:28:21.306"/>
</kw>
<msg timestamp="20250619 06:28:21.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:18.061" endtime="20250619 06:28:21.306"/>
</kw>
<msg timestamp="20250619 06:28:21.306" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250619 06:28:18.061" endtime="20250619 06:28:21.306"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:28:21.307" endtime="20250619 06:28:21.307"/>
</kw>
<status status="PASS" starttime="20250619 06:28:18.060" endtime="20250619 06:28:21.307"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:21.311" level="INFO">Running command 'ozone sh bucket getacl --source 19399-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:24.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:24.488" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:28:21.309" endtime="20250619 06:28:24.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:24.489" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:28:24.489" endtime="20250619 06:28:24.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:24.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:24.489" endtime="20250619 06:28:24.490"/>
</kw>
<status status="PASS" starttime="20250619 06:28:21.308" endtime="20250619 06:28:24.490"/>
</kw>
<msg timestamp="20250619 06:28:24.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:21.308" endtime="20250619 06:28:24.490"/>
</kw>
<msg timestamp="20250619 06:28:24.490" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:28:21.308" endtime="20250619 06:28:24.490"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:28:24.490" endtime="20250619 06:28:24.490"/>
</kw>
<status status="PASS" starttime="20250619 06:28:21.307" endtime="20250619 06:28:24.490"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:24.494" level="INFO">Running command 'ozone sh bucket getacl 19399-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:27.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:27.682" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:28:24.492" endtime="20250619 06:28:27.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:27.683" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:28:27.682" endtime="20250619 06:28:27.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:27.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:27.683" endtime="20250619 06:28:27.683"/>
</kw>
<status status="PASS" starttime="20250619 06:28:24.492" endtime="20250619 06:28:27.683"/>
</kw>
<msg timestamp="20250619 06:28:27.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:24.491" endtime="20250619 06:28:27.683"/>
</kw>
<msg timestamp="20250619 06:28:27.684" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:28:24.491" endtime="20250619 06:28:27.684"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:28:27.684" endtime="20250619 06:28:27.684"/>
</kw>
<status status="PASS" starttime="20250619 06:28:24.491" endtime="20250619 06:28:27.684"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket removeacl --acl user:user1:y ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:27.687" level="INFO">Running command 'ozone sh bucket removeacl --acl user:user1:y 19399-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:30.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:30.730" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250619 06:28:27.685" endtime="20250619 06:28:30.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:30.731" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250619 06:28:30.730" endtime="20250619 06:28:30.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:30.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:30.731" endtime="20250619 06:28:30.731"/>
</kw>
<status status="PASS" starttime="20250619 06:28:27.685" endtime="20250619 06:28:30.731"/>
</kw>
<msg timestamp="20250619 06:28:30.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:27.685" endtime="20250619 06:28:30.731"/>
</kw>
<status status="PASS" starttime="20250619 06:28:27.684" endtime="20250619 06:28:30.732"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:30.736" level="INFO">Running command 'ozone sh bucket getacl 19399-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:33.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:33.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:28:30.734" endtime="20250619 06:28:33.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:33.972" level="INFO"/>
<status status="PASS" starttime="20250619 06:28:33.971" endtime="20250619 06:28:33.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:33.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:33.972" endtime="20250619 06:28:33.972"/>
</kw>
<status status="PASS" starttime="20250619 06:28:30.733" endtime="20250619 06:28:33.972"/>
</kw>
<msg timestamp="20250619 06:28:33.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:30.733" endtime="20250619 06:28:33.972"/>
</kw>
<msg timestamp="20250619 06:28:33.973" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250619 06:28:30.733" endtime="20250619 06:28:33.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:28:33.973" endtime="20250619 06:28:33.973"/>
</kw>
<status status="PASS" starttime="20250619 06:28:30.732" endtime="20250619 06:28:33.973"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:33.977" level="INFO">Running command 'ozone sh bucket getacl --source 19399-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:37.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:37.091" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:28:33.975" endtime="20250619 06:28:37.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:37.092" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:28:37.091" endtime="20250619 06:28:37.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:37.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:37.092" endtime="20250619 06:28:37.092"/>
</kw>
<status status="PASS" starttime="20250619 06:28:33.974" endtime="20250619 06:28:37.092"/>
</kw>
<msg timestamp="20250619 06:28:37.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:33.974" endtime="20250619 06:28:37.093"/>
</kw>
<msg timestamp="20250619 06:28:37.093" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:28:33.974" endtime="20250619 06:28:37.093"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:28:37.093" endtime="20250619 06:28:37.093"/>
</kw>
<status status="PASS" starttime="20250619 06:28:33.973" endtime="20250619 06:28:37.093"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setacl --acl user:user1:rw ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:37.096" level="INFO">Running command 'ozone sh bucket setacl --acl user:user1:rw 19399-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:39.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:39.993" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250619 06:28:37.094" endtime="20250619 06:28:39.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:39.994" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250619 06:28:39.993" endtime="20250619 06:28:39.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:39.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:39.994" endtime="20250619 06:28:39.994"/>
</kw>
<status status="PASS" starttime="20250619 06:28:37.094" endtime="20250619 06:28:39.994"/>
</kw>
<msg timestamp="20250619 06:28:39.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:37.094" endtime="20250619 06:28:39.994"/>
</kw>
<status status="PASS" starttime="20250619 06:28:37.093" endtime="20250619 06:28:39.994"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:39.999" level="INFO">Running command 'ozone sh bucket getacl 19399-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:43.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:43.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:28:39.996" endtime="20250619 06:28:43.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:43.023" level="INFO"/>
<status status="PASS" starttime="20250619 06:28:43.022" endtime="20250619 06:28:43.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:43.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:43.023" endtime="20250619 06:28:43.023"/>
</kw>
<status status="PASS" starttime="20250619 06:28:39.996" endtime="20250619 06:28:43.024"/>
</kw>
<msg timestamp="20250619 06:28:43.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:39.996" endtime="20250619 06:28:43.024"/>
</kw>
<msg timestamp="20250619 06:28:43.024" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250619 06:28:39.995" endtime="20250619 06:28:43.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:28:43.024" endtime="20250619 06:28:43.024"/>
</kw>
<status status="PASS" starttime="20250619 06:28:39.995" endtime="20250619 06:28:43.024"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:43.028" level="INFO">Running command 'ozone sh bucket getacl --source 19399-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:46.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:46.116" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250619 06:28:43.026" endtime="20250619 06:28:46.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:46.117" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250619 06:28:46.117" endtime="20250619 06:28:46.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:46.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:46.117" endtime="20250619 06:28:46.118"/>
</kw>
<status status="PASS" starttime="20250619 06:28:43.025" endtime="20250619 06:28:46.118"/>
</kw>
<msg timestamp="20250619 06:28:46.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:43.025" endtime="20250619 06:28:46.118"/>
</kw>
<msg timestamp="20250619 06:28:46.118" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250619 06:28:43.025" endtime="20250619 06:28:46.118"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:28:46.118" endtime="20250619 06:28:46.118"/>
</kw>
<status status="PASS" starttime="20250619 06:28:43.024" endtime="20250619 06:28:46.118"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:46.122" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 19399-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:49.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:49.130" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250619 06:28:46.120" endtime="20250619 06:28:49.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:49.131" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250619 06:28:49.130" endtime="20250619 06:28:49.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:49.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:49.131" endtime="20250619 06:28:49.131"/>
</kw>
<status status="PASS" starttime="20250619 06:28:46.119" endtime="20250619 06:28:49.131"/>
</kw>
<msg timestamp="20250619 06:28:49.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:46.119" endtime="20250619 06:28:49.131"/>
</kw>
<status status="PASS" starttime="20250619 06:28:46.119" endtime="20250619 06:28:49.132"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:49.136" level="INFO">Running command 'ozone sh bucket getacl 19399-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:52.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:52.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:28:49.133" endtime="20250619 06:28:52.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:52.265" level="INFO"/>
<status status="PASS" starttime="20250619 06:28:52.264" endtime="20250619 06:28:52.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:52.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:52.265" endtime="20250619 06:28:52.265"/>
</kw>
<status status="PASS" starttime="20250619 06:28:49.133" endtime="20250619 06:28:52.265"/>
</kw>
<msg timestamp="20250619 06:28:52.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:49.133" endtime="20250619 06:28:52.266"/>
</kw>
<msg timestamp="20250619 06:28:52.266" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250619 06:28:49.132" endtime="20250619 06:28:52.266"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:28:52.266" endtime="20250619 06:28:52.266"/>
</kw>
<status status="PASS" starttime="20250619 06:28:49.132" endtime="20250619 06:28:52.266"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:52.270" level="INFO">Running command 'ozone sh bucket getacl --source 19399-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:55.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:55.591" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250619 06:28:52.268" endtime="20250619 06:28:55.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:55.592" level="INFO">READ</msg>
<status status="PASS" starttime="20250619 06:28:55.591" endtime="20250619 06:28:55.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:55.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:55.592" endtime="20250619 06:28:55.592"/>
</kw>
<status status="PASS" starttime="20250619 06:28:52.267" endtime="20250619 06:28:55.592"/>
</kw>
<msg timestamp="20250619 06:28:55.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:52.267" endtime="20250619 06:28:55.592"/>
</kw>
<msg timestamp="20250619 06:28:55.593" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250619 06:28:52.267" endtime="20250619 06:28:55.593"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:28:55.593" endtime="20250619 06:28:55.593"/>
</kw>
<status status="PASS" starttime="20250619 06:28:52.266" endtime="20250619 06:28:55.593"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:28:11.749" endtime="20250619 06:28:55.593"/>
</test>
<test id="s1-s2-s3-t9" name="Source and target key have same ACLs" line="156">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:28:55.595" endtime="20250619 06:28:55.595"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:55.598" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:55.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:55.602" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:28:55.596" endtime="20250619 06:28:55.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:55.602" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:28:55.602" endtime="20250619 06:28:55.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:55.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:55.603" endtime="20250619 06:28:55.603"/>
</kw>
<status status="PASS" starttime="20250619 06:28:55.596" endtime="20250619 06:28:55.603"/>
</kw>
<msg timestamp="20250619 06:28:55.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:55.595" endtime="20250619 06:28:55.603"/>
</kw>
<msg timestamp="20250619 06:28:55.603" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:28:55.595" endtime="20250619 06:28:55.603"/>
</kw>
<msg timestamp="20250619 06:28:55.604" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:28:55.595" endtime="20250619 06:28:55.604"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:28:55.604" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:28:55.604" endtime="20250619 06:28:55.604"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:55.607" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:55.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:55.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:28:55.605" endtime="20250619 06:28:55.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:55.623" level="INFO"/>
<status status="PASS" starttime="20250619 06:28:55.622" endtime="20250619 06:28:55.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:55.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:55.623" endtime="20250619 06:28:55.623"/>
</kw>
<status status="PASS" starttime="20250619 06:28:55.605" endtime="20250619 06:28:55.623"/>
</kw>
<msg timestamp="20250619 06:28:55.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:55.605" endtime="20250619 06:28:55.623"/>
</kw>
<status status="PASS" starttime="20250619 06:28:55.604" endtime="20250619 06:28:55.623"/>
</kw>
<status status="PASS" starttime="20250619 06:28:55.604" endtime="20250619 06:28:55.623"/>
</kw>
<status status="PASS" starttime="20250619 06:28:55.594" endtime="20250619 06:28:55.623"/>
</kw>
<status status="PASS" starttime="20250619 06:28:55.594" endtime="20250619 06:28:55.623"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl user:user1:rwxy ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:55.627" level="INFO">Running command 'ozone sh key addacl --acl user:user1:rwxy 19399-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:28:58.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:28:58.596" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250619 06:28:55.624" endtime="20250619 06:28:58.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:28:58.597" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250619 06:28:58.596" endtime="20250619 06:28:58.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:28:58.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:28:58.597" endtime="20250619 06:28:58.597"/>
</kw>
<status status="PASS" starttime="20250619 06:28:55.624" endtime="20250619 06:28:58.597"/>
</kw>
<msg timestamp="20250619 06:28:58.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:55.624" endtime="20250619 06:28:58.597"/>
</kw>
<status status="PASS" starttime="20250619 06:28:55.624" endtime="20250619 06:28:58.597"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:28:58.601" level="INFO">Running command 'ozone sh key getacl 19399-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:01.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:01.856" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:28:58.599" endtime="20250619 06:29:01.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:01.857" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:29:01.856" endtime="20250619 06:29:01.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:01.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:01.857" endtime="20250619 06:29:01.857"/>
</kw>
<status status="PASS" starttime="20250619 06:28:58.598" endtime="20250619 06:29:01.858"/>
</kw>
<msg timestamp="20250619 06:29:01.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:28:58.598" endtime="20250619 06:29:01.858"/>
</kw>
<msg timestamp="20250619 06:29:01.858" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:28:58.598" endtime="20250619 06:29:01.858"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:29:01.858" endtime="20250619 06:29:01.858"/>
</kw>
<status status="PASS" starttime="20250619 06:28:58.597" endtime="20250619 06:29:01.858"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:01.862" level="INFO">Running command 'ozone sh key getacl 19399-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:05.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:05.175" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:29:01.860" endtime="20250619 06:29:05.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:05.176" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:29:05.176" endtime="20250619 06:29:05.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:05.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:05.176" endtime="20250619 06:29:05.177"/>
</kw>
<status status="PASS" starttime="20250619 06:29:01.860" endtime="20250619 06:29:05.177"/>
</kw>
<msg timestamp="20250619 06:29:05.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:01.859" endtime="20250619 06:29:05.177"/>
</kw>
<msg timestamp="20250619 06:29:05.177" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:29:01.859" endtime="20250619 06:29:05.177"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:29:05.177" endtime="20250619 06:29:05.177"/>
</kw>
<status status="PASS" starttime="20250619 06:29:01.858" endtime="20250619 06:29:05.177"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key removeacl --acl user:user1:y ${target}/link1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:05.180" level="INFO">Running command 'ozone sh key removeacl --acl user:user1:y 19399-target/link1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:08.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:08.267" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250619 06:29:05.178" endtime="20250619 06:29:08.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:08.268" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250619 06:29:08.267" endtime="20250619 06:29:08.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:08.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:08.268" endtime="20250619 06:29:08.268"/>
</kw>
<status status="PASS" starttime="20250619 06:29:05.178" endtime="20250619 06:29:08.268"/>
</kw>
<msg timestamp="20250619 06:29:08.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:05.178" endtime="20250619 06:29:08.268"/>
</kw>
<status status="PASS" starttime="20250619 06:29:05.177" endtime="20250619 06:29:08.268"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:08.272" level="INFO">Running command 'ozone sh key getacl 19399-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:11.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:11.380" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:29:08.270" endtime="20250619 06:29:11.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:11.381" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:29:11.380" endtime="20250619 06:29:11.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:11.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:11.381" endtime="20250619 06:29:11.381"/>
</kw>
<status status="PASS" starttime="20250619 06:29:08.270" endtime="20250619 06:29:11.382"/>
</kw>
<msg timestamp="20250619 06:29:11.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:08.269" endtime="20250619 06:29:11.382"/>
</kw>
<msg timestamp="20250619 06:29:11.382" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:29:08.269" endtime="20250619 06:29:11.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:29:11.382" endtime="20250619 06:29:11.382"/>
</kw>
<status status="PASS" starttime="20250619 06:29:08.269" endtime="20250619 06:29:11.382"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:11.386" level="INFO">Running command 'ozone sh key getacl 19399-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:14.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:14.519" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:29:11.384" endtime="20250619 06:29:14.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:14.520" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:29:14.519" endtime="20250619 06:29:14.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:14.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:14.520" endtime="20250619 06:29:14.521"/>
</kw>
<status status="PASS" starttime="20250619 06:29:11.383" endtime="20250619 06:29:14.521"/>
</kw>
<msg timestamp="20250619 06:29:14.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:11.383" endtime="20250619 06:29:14.521"/>
</kw>
<msg timestamp="20250619 06:29:14.521" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:29:11.383" endtime="20250619 06:29:14.521"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:29:14.521" endtime="20250619 06:29:14.522"/>
</kw>
<status status="PASS" starttime="20250619 06:29:11.382" endtime="20250619 06:29:14.522"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key setacl --acl user:user1:rw ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:14.525" level="INFO">Running command 'ozone sh key setacl --acl user:user1:rw 19399-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:17.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:17.516" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250619 06:29:14.522" endtime="20250619 06:29:17.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:17.517" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250619 06:29:17.516" endtime="20250619 06:29:17.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:17.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:17.517" endtime="20250619 06:29:17.517"/>
</kw>
<status status="PASS" starttime="20250619 06:29:14.522" endtime="20250619 06:29:17.517"/>
</kw>
<msg timestamp="20250619 06:29:17.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:14.522" endtime="20250619 06:29:17.517"/>
</kw>
<status status="PASS" starttime="20250619 06:29:14.522" endtime="20250619 06:29:17.518"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:17.521" level="INFO">Running command 'ozone sh key getacl 19399-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:20.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:20.666" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250619 06:29:17.519" endtime="20250619 06:29:20.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:20.667" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250619 06:29:20.667" endtime="20250619 06:29:20.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:20.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:20.667" endtime="20250619 06:29:20.668"/>
</kw>
<status status="PASS" starttime="20250619 06:29:17.519" endtime="20250619 06:29:20.668"/>
</kw>
<msg timestamp="20250619 06:29:20.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:17.519" endtime="20250619 06:29:20.668"/>
</kw>
<msg timestamp="20250619 06:29:20.668" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250619 06:29:17.518" endtime="20250619 06:29:20.668"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:29:20.668" endtime="20250619 06:29:20.669"/>
</kw>
<status status="PASS" starttime="20250619 06:29:17.518" endtime="20250619 06:29:20.669"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:20.672" level="INFO">Running command 'ozone sh key getacl 19399-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:23.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:23.850" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250619 06:29:20.670" endtime="20250619 06:29:23.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:23.851" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250619 06:29:23.850" endtime="20250619 06:29:23.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:23.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:23.851" endtime="20250619 06:29:23.851"/>
</kw>
<status status="PASS" starttime="20250619 06:29:20.670" endtime="20250619 06:29:23.851"/>
</kw>
<msg timestamp="20250619 06:29:23.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:20.670" endtime="20250619 06:29:23.852"/>
</kw>
<msg timestamp="20250619 06:29:23.852" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250619 06:29:20.669" endtime="20250619 06:29:23.852"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:29:23.852" endtime="20250619 06:29:23.852"/>
</kw>
<status status="PASS" starttime="20250619 06:29:20.669" endtime="20250619 06:29:23.852"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl group:group2:r ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:23.856" level="INFO">Running command 'ozone sh key addacl --acl group:group2:r 19399-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:26.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:26.874" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250619 06:29:23.853" endtime="20250619 06:29:26.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:26.875" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250619 06:29:26.874" endtime="20250619 06:29:26.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:26.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:26.875" endtime="20250619 06:29:26.875"/>
</kw>
<status status="PASS" starttime="20250619 06:29:23.853" endtime="20250619 06:29:26.875"/>
</kw>
<msg timestamp="20250619 06:29:26.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:23.853" endtime="20250619 06:29:26.876"/>
</kw>
<status status="PASS" starttime="20250619 06:29:23.852" endtime="20250619 06:29:26.876"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:26.879" level="INFO">Running command 'ozone sh key getacl 19399-target/link1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:30.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:30.138" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250619 06:29:26.877" endtime="20250619 06:29:30.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:30.139" level="INFO">READ</msg>
<status status="PASS" starttime="20250619 06:29:30.138" endtime="20250619 06:29:30.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:30.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:30.139" endtime="20250619 06:29:30.139"/>
</kw>
<status status="PASS" starttime="20250619 06:29:26.877" endtime="20250619 06:29:30.140"/>
</kw>
<msg timestamp="20250619 06:29:30.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:26.877" endtime="20250619 06:29:30.140"/>
</kw>
<msg timestamp="20250619 06:29:30.140" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250619 06:29:26.876" endtime="20250619 06:29:30.140"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:29:30.140" endtime="20250619 06:29:30.140"/>
</kw>
<status status="PASS" starttime="20250619 06:29:26.876" endtime="20250619 06:29:30.140"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:30.144" level="INFO">Running command 'ozone sh key getacl 19399-source/bucket1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:33.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:33.454" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250619 06:29:30.142" endtime="20250619 06:29:33.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:33.455" level="INFO">READ</msg>
<status status="PASS" starttime="20250619 06:29:33.455" endtime="20250619 06:29:33.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:33.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:33.455" endtime="20250619 06:29:33.456"/>
</kw>
<status status="PASS" starttime="20250619 06:29:30.141" endtime="20250619 06:29:33.456"/>
</kw>
<msg timestamp="20250619 06:29:33.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:30.141" endtime="20250619 06:29:33.456"/>
</kw>
<msg timestamp="20250619 06:29:33.456" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250619 06:29:30.141" endtime="20250619 06:29:33.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:29:33.456" endtime="20250619 06:29:33.456"/>
</kw>
<status status="PASS" starttime="20250619 06:29:30.140" endtime="20250619 06:29:33.456"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:28:55.594" endtime="20250619 06:29:33.457"/>
</test>
<test id="s1-s2-s3-t10" name="Source and target prefix have same ACLs" line="171">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:29:33.458" endtime="20250619 06:29:33.458"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:33.462" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:33.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:33.465" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:29:33.460" endtime="20250619 06:29:33.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:33.466" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:29:33.466" endtime="20250619 06:29:33.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:33.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:33.466" endtime="20250619 06:29:33.466"/>
</kw>
<status status="PASS" starttime="20250619 06:29:33.459" endtime="20250619 06:29:33.467"/>
</kw>
<msg timestamp="20250619 06:29:33.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:33.459" endtime="20250619 06:29:33.467"/>
</kw>
<msg timestamp="20250619 06:29:33.467" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:29:33.459" endtime="20250619 06:29:33.467"/>
</kw>
<msg timestamp="20250619 06:29:33.467" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:29:33.458" endtime="20250619 06:29:33.467"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:29:33.467" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:29:33.467" endtime="20250619 06:29:33.467"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:33.470" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:33.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:33.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:29:33.468" endtime="20250619 06:29:33.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:33.488" level="INFO"/>
<status status="PASS" starttime="20250619 06:29:33.488" endtime="20250619 06:29:33.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:33.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:33.488" endtime="20250619 06:29:33.489"/>
</kw>
<status status="PASS" starttime="20250619 06:29:33.468" endtime="20250619 06:29:33.489"/>
</kw>
<msg timestamp="20250619 06:29:33.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:33.468" endtime="20250619 06:29:33.489"/>
</kw>
<status status="PASS" starttime="20250619 06:29:33.468" endtime="20250619 06:29:33.489"/>
</kw>
<status status="PASS" starttime="20250619 06:29:33.467" endtime="20250619 06:29:33.489"/>
</kw>
<status status="PASS" starttime="20250619 06:29:33.458" endtime="20250619 06:29:33.489"/>
</kw>
<status status="PASS" starttime="20250619 06:29:33.458" endtime="20250619 06:29:33.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl --acl user:user1:rwxy ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:33.492" level="INFO">Running command 'ozone sh prefix addacl --acl user:user1:rwxy 19399-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:36.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:36.452" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250619 06:29:33.490" endtime="20250619 06:29:36.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:36.453" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250619 06:29:36.452" endtime="20250619 06:29:36.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:36.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:36.453" endtime="20250619 06:29:36.453"/>
</kw>
<status status="PASS" starttime="20250619 06:29:33.490" endtime="20250619 06:29:36.453"/>
</kw>
<msg timestamp="20250619 06:29:36.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:33.490" endtime="20250619 06:29:36.453"/>
</kw>
<status status="PASS" starttime="20250619 06:29:33.489" endtime="20250619 06:29:36.453"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:36.457" level="INFO">Running command 'ozone sh prefix getacl 19399-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:39.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:39.551" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:29:36.455" endtime="20250619 06:29:39.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:39.552" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:29:39.552" endtime="20250619 06:29:39.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:39.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:39.552" endtime="20250619 06:29:39.553"/>
</kw>
<status status="PASS" starttime="20250619 06:29:36.455" endtime="20250619 06:29:39.553"/>
</kw>
<msg timestamp="20250619 06:29:39.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:36.454" endtime="20250619 06:29:39.553"/>
</kw>
<msg timestamp="20250619 06:29:39.553" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:29:36.454" endtime="20250619 06:29:39.553"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:29:39.553" endtime="20250619 06:29:39.553"/>
</kw>
<status status="PASS" starttime="20250619 06:29:36.454" endtime="20250619 06:29:39.554"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:39.557" level="INFO">Running command 'ozone sh prefix getacl 19399-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:42.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:42.712" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:29:39.555" endtime="20250619 06:29:42.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:42.713" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:29:42.712" endtime="20250619 06:29:42.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:42.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:42.713" endtime="20250619 06:29:42.713"/>
</kw>
<status status="PASS" starttime="20250619 06:29:39.555" endtime="20250619 06:29:42.713"/>
</kw>
<msg timestamp="20250619 06:29:42.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:39.555" endtime="20250619 06:29:42.713"/>
</kw>
<msg timestamp="20250619 06:29:42.714" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250619 06:29:39.554" endtime="20250619 06:29:42.714"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:29:42.714" endtime="20250619 06:29:42.714"/>
</kw>
<status status="PASS" starttime="20250619 06:29:39.554" endtime="20250619 06:29:42.714"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix removeacl --acl user:user1:y ${target}/link1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:42.717" level="INFO">Running command 'ozone sh prefix removeacl --acl user:user1:y 19399-target/link1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:45.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:45.726" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250619 06:29:42.715" endtime="20250619 06:29:45.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:45.727" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250619 06:29:45.726" endtime="20250619 06:29:45.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:45.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:45.727" endtime="20250619 06:29:45.727"/>
</kw>
<status status="PASS" starttime="20250619 06:29:42.715" endtime="20250619 06:29:45.727"/>
</kw>
<msg timestamp="20250619 06:29:45.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:42.715" endtime="20250619 06:29:45.728"/>
</kw>
<status status="PASS" starttime="20250619 06:29:42.714" endtime="20250619 06:29:45.728"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:45.731" level="INFO">Running command 'ozone sh prefix getacl 19399-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:48.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:48.876" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:29:45.729" endtime="20250619 06:29:48.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:48.877" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:29:48.877" endtime="20250619 06:29:48.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:48.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:48.877" endtime="20250619 06:29:48.878"/>
</kw>
<status status="PASS" starttime="20250619 06:29:45.729" endtime="20250619 06:29:48.878"/>
</kw>
<msg timestamp="20250619 06:29:48.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:45.729" endtime="20250619 06:29:48.878"/>
</kw>
<msg timestamp="20250619 06:29:48.878" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:29:45.728" endtime="20250619 06:29:48.878"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:29:48.878" endtime="20250619 06:29:48.879"/>
</kw>
<status status="PASS" starttime="20250619 06:29:45.728" endtime="20250619 06:29:48.879"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:48.882" level="INFO">Running command 'ozone sh prefix getacl 19399-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:52.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:52.097" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:29:48.880" endtime="20250619 06:29:52.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:52.097" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:29:52.097" endtime="20250619 06:29:52.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:52.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:52.098" endtime="20250619 06:29:52.098"/>
</kw>
<status status="PASS" starttime="20250619 06:29:48.880" endtime="20250619 06:29:52.098"/>
</kw>
<msg timestamp="20250619 06:29:52.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:48.880" endtime="20250619 06:29:52.098"/>
</kw>
<msg timestamp="20250619 06:29:52.098" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250619 06:29:48.879" endtime="20250619 06:29:52.098"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:29:52.098" endtime="20250619 06:29:52.099"/>
</kw>
<status status="PASS" starttime="20250619 06:29:48.879" endtime="20250619 06:29:52.099"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix setacl --acl user:user1:rw ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:52.102" level="INFO">Running command 'ozone sh prefix setacl --acl user:user1:rw 19399-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:55.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:55.021" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250619 06:29:52.100" endtime="20250619 06:29:55.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:55.022" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250619 06:29:55.022" endtime="20250619 06:29:55.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:55.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:55.022" endtime="20250619 06:29:55.023"/>
</kw>
<status status="PASS" starttime="20250619 06:29:52.099" endtime="20250619 06:29:55.023"/>
</kw>
<msg timestamp="20250619 06:29:55.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:52.099" endtime="20250619 06:29:55.023"/>
</kw>
<status status="PASS" starttime="20250619 06:29:52.099" endtime="20250619 06:29:55.023"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:55.026" level="INFO">Running command 'ozone sh prefix getacl 19399-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:29:58.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:29:58.156" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250619 06:29:55.024" endtime="20250619 06:29:58.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:29:58.157" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250619 06:29:58.157" endtime="20250619 06:29:58.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:29:58.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:29:58.157" endtime="20250619 06:29:58.158"/>
</kw>
<status status="PASS" starttime="20250619 06:29:55.024" endtime="20250619 06:29:58.158"/>
</kw>
<msg timestamp="20250619 06:29:58.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:55.024" endtime="20250619 06:29:58.158"/>
</kw>
<msg timestamp="20250619 06:29:58.158" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250619 06:29:55.023" endtime="20250619 06:29:58.158"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:29:58.158" endtime="20250619 06:29:58.159"/>
</kw>
<status status="PASS" starttime="20250619 06:29:55.023" endtime="20250619 06:29:58.159"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:29:58.162" level="INFO">Running command 'ozone sh prefix getacl 19399-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:01.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:01.278" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250619 06:29:58.160" endtime="20250619 06:30:01.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:01.279" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250619 06:30:01.278" endtime="20250619 06:30:01.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:01.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:01.279" endtime="20250619 06:30:01.280"/>
</kw>
<status status="PASS" starttime="20250619 06:29:58.160" endtime="20250619 06:30:01.280"/>
</kw>
<msg timestamp="20250619 06:30:01.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:29:58.160" endtime="20250619 06:30:01.280"/>
</kw>
<msg timestamp="20250619 06:30:01.280" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250619 06:29:58.159" endtime="20250619 06:30:01.280"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:30:01.280" endtime="20250619 06:30:01.280"/>
</kw>
<status status="PASS" starttime="20250619 06:29:58.159" endtime="20250619 06:30:01.280"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl --acl group:group2:r ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:01.283" level="INFO">Running command 'ozone sh prefix addacl --acl group:group2:r 19399-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:04.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:04.289" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250619 06:30:01.281" endtime="20250619 06:30:04.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:04.290" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250619 06:30:04.290" endtime="20250619 06:30:04.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:04.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:04.291" endtime="20250619 06:30:04.291"/>
</kw>
<status status="PASS" starttime="20250619 06:30:01.281" endtime="20250619 06:30:04.291"/>
</kw>
<msg timestamp="20250619 06:30:04.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:01.281" endtime="20250619 06:30:04.291"/>
</kw>
<status status="PASS" starttime="20250619 06:30:01.280" endtime="20250619 06:30:04.291"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:04.295" level="INFO">Running command 'ozone sh prefix getacl 19399-target/link1/prefix1/ | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:07.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:07.330" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250619 06:30:04.293" endtime="20250619 06:30:07.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:07.331" level="INFO">READ</msg>
<status status="PASS" starttime="20250619 06:30:07.331" endtime="20250619 06:30:07.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:07.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:07.331" endtime="20250619 06:30:07.332"/>
</kw>
<status status="PASS" starttime="20250619 06:30:04.293" endtime="20250619 06:30:07.332"/>
</kw>
<msg timestamp="20250619 06:30:07.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:04.292" endtime="20250619 06:30:07.332"/>
</kw>
<msg timestamp="20250619 06:30:07.332" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250619 06:30:04.292" endtime="20250619 06:30:07.332"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:30:07.332" endtime="20250619 06:30:07.333"/>
</kw>
<status status="PASS" starttime="20250619 06:30:04.291" endtime="20250619 06:30:07.333"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:07.336" level="INFO">Running command 'ozone sh prefix getacl 19399-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:10.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:10.570" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250619 06:30:07.334" endtime="20250619 06:30:10.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:10.571" level="INFO">READ</msg>
<status status="PASS" starttime="20250619 06:30:10.570" endtime="20250619 06:30:10.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:10.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:10.571" endtime="20250619 06:30:10.571"/>
</kw>
<status status="PASS" starttime="20250619 06:30:07.334" endtime="20250619 06:30:10.571"/>
</kw>
<msg timestamp="20250619 06:30:10.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:07.334" endtime="20250619 06:30:10.571"/>
</kw>
<msg timestamp="20250619 06:30:10.572" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250619 06:30:07.333" endtime="20250619 06:30:10.572"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:30:10.572" endtime="20250619 06:30:10.572"/>
</kw>
<status status="PASS" starttime="20250619 06:30:07.333" endtime="20250619 06:30:10.572"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:29:33.457" endtime="20250619 06:30:10.572"/>
</test>
<test id="s1-s2-s3-t11" name="Buckets and links share namespace" line="186">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:30:10.574" endtime="20250619 06:30:10.574"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:10.577" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:10.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:10.581" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:30:10.575" endtime="20250619 06:30:10.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:10.581" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:30:10.581" endtime="20250619 06:30:10.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:10.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:10.581" endtime="20250619 06:30:10.582"/>
</kw>
<status status="PASS" starttime="20250619 06:30:10.575" endtime="20250619 06:30:10.582"/>
</kw>
<msg timestamp="20250619 06:30:10.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:10.575" endtime="20250619 06:30:10.582"/>
</kw>
<msg timestamp="20250619 06:30:10.582" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:30:10.574" endtime="20250619 06:30:10.582"/>
</kw>
<msg timestamp="20250619 06:30:10.582" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:10.574" endtime="20250619 06:30:10.582"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:30:10.583" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:10.582" endtime="20250619 06:30:10.583"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:10.594" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:10.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:10.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:10.592" endtime="20250619 06:30:10.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:10.631" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:10.630" endtime="20250619 06:30:10.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:10.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:10.631" endtime="20250619 06:30:10.631"/>
</kw>
<status status="PASS" starttime="20250619 06:30:10.592" endtime="20250619 06:30:10.631"/>
</kw>
<msg timestamp="20250619 06:30:10.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:10.583" endtime="20250619 06:30:10.631"/>
</kw>
<status status="PASS" starttime="20250619 06:30:10.583" endtime="20250619 06:30:10.632"/>
</kw>
<status status="PASS" starttime="20250619 06:30:10.583" endtime="20250619 06:30:10.632"/>
</kw>
<status status="PASS" starttime="20250619 06:30:10.574" endtime="20250619 06:30:10.632"/>
</kw>
<status status="PASS" starttime="20250619 06:30:10.573" endtime="20250619 06:30:10.632"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:10.635" level="INFO">Running command 'ozone sh bucket link 19399-source/bucket2 19399-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:13.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:13.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:10.633" endtime="20250619 06:30:13.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:13.655" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:13.654" endtime="20250619 06:30:13.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:13.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:13.655" endtime="20250619 06:30:13.655"/>
</kw>
<status status="PASS" starttime="20250619 06:30:10.632" endtime="20250619 06:30:13.655"/>
</kw>
<msg timestamp="20250619 06:30:13.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:10.632" endtime="20250619 06:30:13.655"/>
</kw>
<status status="PASS" starttime="20250619 06:30:10.632" endtime="20250619 06:30:13.655"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:13.658" level="INFO">Running command 'ozone sh bucket create 19399-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:16.552" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:30:16.552" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250619 06:30:13.656" endtime="20250619 06:30:16.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:16.553" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250619 06:30:16.552" endtime="20250619 06:30:16.553"/>
</kw>
<msg timestamp="20250619 06:30:16.553" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250619 06:30:13.656" endtime="20250619 06:30:16.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:30:16.553" endtime="20250619 06:30:16.554"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:16.557" level="INFO">Running command 'ozone sh bucket create 19399-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:19.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:19.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:16.554" endtime="20250619 06:30:19.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:19.490" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:19.490" endtime="20250619 06:30:19.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:19.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:19.491" endtime="20250619 06:30:19.491"/>
</kw>
<status status="PASS" starttime="20250619 06:30:16.554" endtime="20250619 06:30:19.491"/>
</kw>
<msg timestamp="20250619 06:30:19.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:16.554" endtime="20250619 06:30:19.491"/>
</kw>
<status status="PASS" starttime="20250619 06:30:16.554" endtime="20250619 06:30:19.491"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:19.494" level="INFO">Running command 'ozone sh bucket link 19399-source/bucket1 19399-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:22.426" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:30:22.426" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250619 06:30:19.492" endtime="20250619 06:30:22.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:22.427" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250619 06:30:22.427" endtime="20250619 06:30:22.427"/>
</kw>
<msg timestamp="20250619 06:30:22.428" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250619 06:30:19.491" endtime="20250619 06:30:22.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:30:22.428" endtime="20250619 06:30:22.428"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:30:10.573" endtime="20250619 06:30:22.428"/>
</test>
<test id="s1-s2-s3-t12" name="Can follow link with read access" line="195">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:30:22.430" endtime="20250619 06:30:22.430"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:22.433" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:22.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:22.437" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:30:22.431" endtime="20250619 06:30:22.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:22.437" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:30:22.437" endtime="20250619 06:30:22.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:22.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:22.438" endtime="20250619 06:30:22.438"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.431" endtime="20250619 06:30:22.438"/>
</kw>
<msg timestamp="20250619 06:30:22.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:22.431" endtime="20250619 06:30:22.438"/>
</kw>
<msg timestamp="20250619 06:30:22.438" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:30:22.430" endtime="20250619 06:30:22.438"/>
</kw>
<msg timestamp="20250619 06:30:22.438" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:22.430" endtime="20250619 06:30:22.438"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:30:22.439" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:22.439" endtime="20250619 06:30:22.439"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:22.442" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:22.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:22.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:22.440" endtime="20250619 06:30:22.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:22.479" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:22.478" endtime="20250619 06:30:22.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:22.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:22.479" endtime="20250619 06:30:22.479"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.440" endtime="20250619 06:30:22.479"/>
</kw>
<msg timestamp="20250619 06:30:22.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:22.440" endtime="20250619 06:30:22.480"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.439" endtime="20250619 06:30:22.480"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.439" endtime="20250619 06:30:22.480"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.429" endtime="20250619 06:30:22.480"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.429" endtime="20250619 06:30:22.480"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:22.484" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:22.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:22.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:22.482" endtime="20250619 06:30:22.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:22.489" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:22.488" endtime="20250619 06:30:22.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:22.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:22.489" endtime="20250619 06:30:22.489"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.481" endtime="20250619 06:30:22.489"/>
</kw>
<msg timestamp="20250619 06:30:22.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:22.481" endtime="20250619 06:30:22.489"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.481" endtime="20250619 06:30:22.489"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:30:22.490" endtime="20250619 06:30:22.490"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:22.493" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:22.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:22.496" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:30:22.491" endtime="20250619 06:30:22.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:22.497" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:30:22.497" endtime="20250619 06:30:22.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:22.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:22.497" endtime="20250619 06:30:22.498"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.491" endtime="20250619 06:30:22.498"/>
</kw>
<msg timestamp="20250619 06:30:22.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:22.491" endtime="20250619 06:30:22.498"/>
</kw>
<msg timestamp="20250619 06:30:22.498" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:30:22.491" endtime="20250619 06:30:22.498"/>
</kw>
<msg timestamp="20250619 06:30:22.498" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:22.490" endtime="20250619 06:30:22.498"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:30:22.499" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:22.498" endtime="20250619 06:30:22.499"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:22.502" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:22.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:22.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:22.500" endtime="20250619 06:30:22.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:22.518" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:22.517" endtime="20250619 06:30:22.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:22.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:22.518" endtime="20250619 06:30:22.518"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.499" endtime="20250619 06:30:22.518"/>
</kw>
<msg timestamp="20250619 06:30:22.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:22.499" endtime="20250619 06:30:22.519"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.499" endtime="20250619 06:30:22.519"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.499" endtime="20250619 06:30:22.519"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.490" endtime="20250619 06:30:22.519"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.490" endtime="20250619 06:30:22.519"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:22.521" level="INFO">Running command 'ozone sh key list 19399-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:25.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:25.749" level="INFO">${output} = [ {
  "volumeName" : "19399-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-06-19T06:27:24.468Z"...</msg>
<status status="PASS" starttime="20250619 06:30:22.519" endtime="20250619 06:30:25.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:25.750" level="INFO">[ {
  "volumeName" : "19399-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-06-19T06:27:24.468Z",
  "modificationTime" : "2025-06-19T06:27:25.846Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250619 06:30:25.749" endtime="20250619 06:30:25.750"/>
</kw>
<msg timestamp="20250619 06:30:25.750" level="INFO">${result} = [ {
  "volumeName" : "19399-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-06-19T06:27:24.468Z"...</msg>
<status status="PASS" starttime="20250619 06:30:22.519" endtime="20250619 06:30:25.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:30:25.750" endtime="20250619 06:30:25.750"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:25.753" level="INFO">Running command 'ozone sh key list 19399-target/readable-link2 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:29.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:29.016" level="INFO">${output} = [ {
  "volumeName" : "19399-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-06-19T06:27:24.468Z"...</msg>
<status status="PASS" starttime="20250619 06:30:25.751" endtime="20250619 06:30:29.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:29.017" level="INFO">[ {
  "volumeName" : "19399-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-06-19T06:27:24.468Z",
  "modificationTime" : "2025-06-19T06:27:25.846Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250619 06:30:29.017" endtime="20250619 06:30:29.017"/>
</kw>
<msg timestamp="20250619 06:30:29.017" level="INFO">${result} = [ {
  "volumeName" : "19399-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1062,
  "creationTime" : "2025-06-19T06:27:24.468Z"...</msg>
<status status="PASS" starttime="20250619 06:30:25.751" endtime="20250619 06:30:29.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:30:29.018" endtime="20250619 06:30:29.018"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.480" endtime="20250619 06:30:29.018"/>
</kw>
<status status="PASS" starttime="20250619 06:30:22.480" endtime="20250619 06:30:29.018"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:30:22.429" endtime="20250619 06:30:29.018"/>
</test>
<test id="s1-s2-s3-t13" name="Cannot follow link without read access" line="198">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:30:29.020" endtime="20250619 06:30:29.020"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:29.023" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:29.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:29.027" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:30:29.021" endtime="20250619 06:30:29.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:29.028" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:30:29.027" endtime="20250619 06:30:29.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:29.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:29.028" endtime="20250619 06:30:29.028"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.021" endtime="20250619 06:30:29.028"/>
</kw>
<msg timestamp="20250619 06:30:29.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:29.021" endtime="20250619 06:30:29.028"/>
</kw>
<msg timestamp="20250619 06:30:29.029" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:30:29.021" endtime="20250619 06:30:29.029"/>
</kw>
<msg timestamp="20250619 06:30:29.029" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:29.020" endtime="20250619 06:30:29.029"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:30:29.029" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:29.029" endtime="20250619 06:30:29.029"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:29.032" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:29.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:29.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:29.030" endtime="20250619 06:30:29.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:29.094" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:29.093" endtime="20250619 06:30:29.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:29.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:29.094" endtime="20250619 06:30:29.094"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.030" endtime="20250619 06:30:29.094"/>
</kw>
<msg timestamp="20250619 06:30:29.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:29.030" endtime="20250619 06:30:29.095"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.029" endtime="20250619 06:30:29.095"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.029" endtime="20250619 06:30:29.095"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.019" endtime="20250619 06:30:29.095"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.019" endtime="20250619 06:30:29.095"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:29.099" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:29.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:29.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:29.096" endtime="20250619 06:30:29.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:29.104" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:29.104" endtime="20250619 06:30:29.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:29.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:29.104" endtime="20250619 06:30:29.105"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.096" endtime="20250619 06:30:29.105"/>
</kw>
<msg timestamp="20250619 06:30:29.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:29.096" endtime="20250619 06:30:29.105"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.096" endtime="20250619 06:30:29.105"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:30:29.106" endtime="20250619 06:30:29.106"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:29.109" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:29.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:29.113" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:30:29.107" endtime="20250619 06:30:29.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:29.113" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:30:29.113" endtime="20250619 06:30:29.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:29.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:29.114" endtime="20250619 06:30:29.114"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.107" endtime="20250619 06:30:29.114"/>
</kw>
<msg timestamp="20250619 06:30:29.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:29.107" endtime="20250619 06:30:29.114"/>
</kw>
<msg timestamp="20250619 06:30:29.114" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:30:29.106" endtime="20250619 06:30:29.114"/>
</kw>
<msg timestamp="20250619 06:30:29.115" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:29.106" endtime="20250619 06:30:29.115"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:30:29.115" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:29.115" endtime="20250619 06:30:29.115"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:29.118" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:29.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:29.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:29.116" endtime="20250619 06:30:29.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:29.134" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:29.133" endtime="20250619 06:30:29.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:29.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:29.134" endtime="20250619 06:30:29.134"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.116" endtime="20250619 06:30:29.134"/>
</kw>
<msg timestamp="20250619 06:30:29.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:29.116" endtime="20250619 06:30:29.134"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.115" endtime="20250619 06:30:29.135"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.115" endtime="20250619 06:30:29.135"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.105" endtime="20250619 06:30:29.135"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.105" endtime="20250619 06:30:29.135"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:29.137" level="INFO">Running command 'ozone sh key list 19399-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:32.104" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:30:32.104" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:19399-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20250619 06:30:29.135" endtime="20250619 06:30:32.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:32.105" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:19399-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20250619 06:30:32.104" endtime="20250619 06:30:32.105"/>
</kw>
<msg timestamp="20250619 06:30:32.105" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:19399-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20250619 06:30:29.135" endtime="20250619 06:30:32.105"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:30:32.105" endtime="20250619 06:30:32.105"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:32.108" level="INFO">Running command 'ozone sh key list 19399-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:35.145" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:30:35.145" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:19399-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20250619 06:30:32.106" endtime="20250619 06:30:35.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:35.146" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:19399-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20250619 06:30:35.145" endtime="20250619 06:30:35.146"/>
</kw>
<msg timestamp="20250619 06:30:35.146" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:19399-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20250619 06:30:32.105" endtime="20250619 06:30:35.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:30:35.146" endtime="20250619 06:30:35.147"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.095" endtime="20250619 06:30:35.147"/>
</kw>
<status status="PASS" starttime="20250619 06:30:29.095" endtime="20250619 06:30:35.147"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:30:29.019" endtime="20250619 06:30:35.147"/>
</test>
<test id="s1-s2-s3-t14" name="ACL verified on source and target bucket" line="201">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:30:35.149" endtime="20250619 06:30:35.149"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:35.152" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:35.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:35.156" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:30:35.150" endtime="20250619 06:30:35.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:35.156" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:30:35.156" endtime="20250619 06:30:35.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:35.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:35.156" endtime="20250619 06:30:35.157"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.150" endtime="20250619 06:30:35.157"/>
</kw>
<msg timestamp="20250619 06:30:35.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:35.150" endtime="20250619 06:30:35.157"/>
</kw>
<msg timestamp="20250619 06:30:35.157" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:30:35.149" endtime="20250619 06:30:35.157"/>
</kw>
<msg timestamp="20250619 06:30:35.157" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:35.149" endtime="20250619 06:30:35.157"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:30:35.158" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:35.157" endtime="20250619 06:30:35.158"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:35.161" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:35.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:35.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:35.159" endtime="20250619 06:30:35.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:35.176" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:35.176" endtime="20250619 06:30:35.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:35.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:35.176" endtime="20250619 06:30:35.176"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.158" endtime="20250619 06:30:35.177"/>
</kw>
<msg timestamp="20250619 06:30:35.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:35.158" endtime="20250619 06:30:35.177"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.158" endtime="20250619 06:30:35.177"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.158" endtime="20250619 06:30:35.177"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.148" endtime="20250619 06:30:35.177"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.148" endtime="20250619 06:30:35.177"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source and target bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source and target bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:35.181" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:35.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:35.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:35.178" endtime="20250619 06:30:35.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:35.185" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:35.185" endtime="20250619 06:30:35.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:35.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:35.186" endtime="20250619 06:30:35.186"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.178" endtime="20250619 06:30:35.186"/>
</kw>
<msg timestamp="20250619 06:30:35.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:35.178" endtime="20250619 06:30:35.186"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.178" endtime="20250619 06:30:35.186"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:30:35.187" endtime="20250619 06:30:35.187"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:35.190" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:35.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:35.194" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:30:35.188" endtime="20250619 06:30:35.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:35.194" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:30:35.194" endtime="20250619 06:30:35.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:35.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:35.194" endtime="20250619 06:30:35.195"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.188" endtime="20250619 06:30:35.195"/>
</kw>
<msg timestamp="20250619 06:30:35.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:35.188" endtime="20250619 06:30:35.195"/>
</kw>
<msg timestamp="20250619 06:30:35.195" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:30:35.187" endtime="20250619 06:30:35.195"/>
</kw>
<msg timestamp="20250619 06:30:35.195" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:35.187" endtime="20250619 06:30:35.195"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:30:35.196" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:35.195" endtime="20250619 06:30:35.196"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:35.199" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:35.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:35.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:35.197" endtime="20250619 06:30:35.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:35.214" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:35.213" endtime="20250619 06:30:35.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:35.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:35.214" endtime="20250619 06:30:35.214"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.196" endtime="20250619 06:30:35.214"/>
</kw>
<msg timestamp="20250619 06:30:35.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:35.196" endtime="20250619 06:30:35.215"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.196" endtime="20250619 06:30:35.215"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.196" endtime="20250619 06:30:35.215"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.186" endtime="20250619 06:30:35.215"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.186" endtime="20250619 06:30:35.215"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:35.218" level="INFO">Running command 'ozone sh bucket info 19399-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:38.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:38.378" level="INFO">${output} = {
  "volumeName" : "19399-target",
  "name" : "link-to-unreadable-bucket",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2025-06-19T06:27:25.960Z",
  "...</msg>
<status status="PASS" starttime="20250619 06:30:35.216" endtime="20250619 06:30:38.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:38.379" level="INFO">{
  "volumeName" : "19399-target",
  "name" : "link-to-unreadable-bucket",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2025-06-19T06:27:25.960Z",
  "modificationTime" : "2025-06-19T06:27:25.960Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20250619 06:30:38.378" endtime="20250619 06:30:38.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:38.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:38.379" endtime="20250619 06:30:38.379"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.215" endtime="20250619 06:30:38.379"/>
</kw>
<msg timestamp="20250619 06:30:38.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:35.215" endtime="20250619 06:30:38.379"/>
</kw>
<msg timestamp="20250619 06:30:38.379" level="INFO">${result} = {
  "volumeName" : "19399-target",
  "name" : "link-to-unreadable-bucket",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2025-06-19T06:27:25.960Z",
  "...</msg>
<status status="PASS" starttime="20250619 06:30:35.215" endtime="20250619 06:30:38.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:30:38.380" endtime="20250619 06:30:38.380"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:30:38.380" endtime="20250619 06:30:38.380"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:38.383" level="INFO">Running command 'ozone sh bucket info 19399-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:41.313" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:30:41.313" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:19399-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20250619 06:30:38.381" endtime="20250619 06:30:41.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:41.314" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:19399-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20250619 06:30:41.314" endtime="20250619 06:30:41.314"/>
</kw>
<msg timestamp="20250619 06:30:41.314" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:19399-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20250619 06:30:38.380" endtime="20250619 06:30:41.314"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:30:41.314" endtime="20250619 06:30:41.315"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.177" endtime="20250619 06:30:41.315"/>
</kw>
<status status="PASS" starttime="20250619 06:30:35.177" endtime="20250619 06:30:41.315"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:30:35.147" endtime="20250619 06:30:41.315"/>
</test>
<test id="s1-s2-s3-t15" name="Loop in link chain is detected" line="204">
<kw name="Create link loop" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:30:41.317" endtime="20250619 06:30:41.317"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:41.320" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:41.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:41.324" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:30:41.318" endtime="20250619 06:30:41.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:41.324" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:30:41.324" endtime="20250619 06:30:41.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:41.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:41.325" endtime="20250619 06:30:41.325"/>
</kw>
<status status="PASS" starttime="20250619 06:30:41.318" endtime="20250619 06:30:41.325"/>
</kw>
<msg timestamp="20250619 06:30:41.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:41.318" endtime="20250619 06:30:41.325"/>
</kw>
<msg timestamp="20250619 06:30:41.325" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:30:41.317" endtime="20250619 06:30:41.325"/>
</kw>
<msg timestamp="20250619 06:30:41.325" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:41.317" endtime="20250619 06:30:41.325"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:30:41.326" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:41.326" endtime="20250619 06:30:41.326"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:41.329" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:41.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:41.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:41.327" endtime="20250619 06:30:41.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:41.364" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:41.364" endtime="20250619 06:30:41.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:41.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:41.364" endtime="20250619 06:30:41.365"/>
</kw>
<status status="PASS" starttime="20250619 06:30:41.327" endtime="20250619 06:30:41.365"/>
</kw>
<msg timestamp="20250619 06:30:41.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:41.327" endtime="20250619 06:30:41.365"/>
</kw>
<status status="PASS" starttime="20250619 06:30:41.326" endtime="20250619 06:30:41.365"/>
</kw>
<status status="PASS" starttime="20250619 06:30:41.326" endtime="20250619 06:30:41.365"/>
</kw>
<status status="PASS" starttime="20250619 06:30:41.316" endtime="20250619 06:30:41.365"/>
</kw>
<status status="PASS" starttime="20250619 06:30:41.316" endtime="20250619 06:30:41.365"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket link ${target}/loop1 ${target}/loop2</arg>
<arg>bucket link ${target}/loop2 ${target}/loop3</arg>
<arg>bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250619 06:30:41.366" level="INFO">${cmd} = bucket link 19399-target/loop1 19399-target/loop2' --execute 'bucket link 19399-target/loop2 19399-target/loop3' --execute 'bucket link 19399-target/loop3 19399-target/loop1</msg>
<status status="PASS" starttime="20250619 06:30:41.366" endtime="20250619 06:30:41.366"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:41.369" level="INFO">Running command 'ozone sh --execute 'bucket link 19399-target/loop1 19399-target/loop2' --execute 'bucket link 19399-target/loop2 19399-target/loop3' --execute 'bucket link 19399-target/loop3 19399-target/loop1' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:44.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:44.679" level="INFO">${output} = bucket link 19399-target/loop1 19399-target/loop2
bucket link 19399-target/loop2 19399-target/loop3
bucket link 19399-target/loop3 19399-target/loop1</msg>
<status status="PASS" starttime="20250619 06:30:41.367" endtime="20250619 06:30:44.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:44.679" level="INFO">bucket link 19399-target/loop1 19399-target/loop2
bucket link 19399-target/loop2 19399-target/loop3
bucket link 19399-target/loop3 19399-target/loop1</msg>
<status status="PASS" starttime="20250619 06:30:44.679" endtime="20250619 06:30:44.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:44.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:44.680" endtime="20250619 06:30:44.680"/>
</kw>
<status status="PASS" starttime="20250619 06:30:41.367" endtime="20250619 06:30:44.680"/>
</kw>
<msg timestamp="20250619 06:30:44.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:41.366" endtime="20250619 06:30:44.680"/>
</kw>
<status status="PASS" starttime="20250619 06:30:41.365" endtime="20250619 06:30:44.680"/>
</kw>
<status status="PASS" starttime="20250619 06:30:41.316" endtime="20250619 06:30:44.680"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:44.683" level="INFO">Running command 'ozone sh key list 19399-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:47.616" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:30:47.616" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20250619 06:30:44.681" endtime="20250619 06:30:47.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:47.617" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20250619 06:30:47.617" endtime="20250619 06:30:47.617"/>
</kw>
<msg timestamp="20250619 06:30:47.618" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20250619 06:30:44.681" endtime="20250619 06:30:47.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:30:47.618" endtime="20250619 06:30:47.618"/>
</kw>
<kw name="Delete link loop" type="TEARDOWN">
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket delete ${target}/loop1</arg>
<arg>bucket delete ${target}/loop2</arg>
<arg>bucket delete ${target}/loop3</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250619 06:30:47.619" level="INFO">${cmd} = bucket delete 19399-target/loop1' --execute 'bucket delete 19399-target/loop2' --execute 'bucket delete 19399-target/loop3</msg>
<status status="PASS" starttime="20250619 06:30:47.619" endtime="20250619 06:30:47.619"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:47.622" level="INFO">Running command 'ozone sh --execute 'bucket delete 19399-target/loop1' --execute 'bucket delete 19399-target/loop2' --execute 'bucket delete 19399-target/loop3' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:50.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:50.849" level="INFO">${output} = bucket delete 19399-target/loop1
Bucket loop1 is deleted
bucket delete 19399-target/loop2
Bucket loop2 is deleted
bucket delete 19399-target/loop3
Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20250619 06:30:47.620" endtime="20250619 06:30:50.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:50.850" level="INFO">bucket delete 19399-target/loop1
Bucket loop1 is deleted
bucket delete 19399-target/loop2
Bucket loop2 is deleted
bucket delete 19399-target/loop3
Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20250619 06:30:50.850" endtime="20250619 06:30:50.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:50.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:50.850" endtime="20250619 06:30:50.850"/>
</kw>
<status status="PASS" starttime="20250619 06:30:47.620" endtime="20250619 06:30:50.851"/>
</kw>
<msg timestamp="20250619 06:30:50.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:47.619" endtime="20250619 06:30:50.851"/>
</kw>
<status status="PASS" starttime="20250619 06:30:47.619" endtime="20250619 06:30:50.851"/>
</kw>
<status status="PASS" starttime="20250619 06:30:47.618" endtime="20250619 06:30:50.851"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:30:41.315" endtime="20250619 06:30:50.851"/>
</test>
<test id="s1-s2-s3-t16" name="Multiple links to same bucket are allowed" line="210">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:30:50.853" endtime="20250619 06:30:50.853"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:50.856" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:50.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:50.860" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:30:50.854" endtime="20250619 06:30:50.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:50.861" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:30:50.860" endtime="20250619 06:30:50.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:50.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:50.861" endtime="20250619 06:30:50.861"/>
</kw>
<status status="PASS" starttime="20250619 06:30:50.854" endtime="20250619 06:30:50.861"/>
</kw>
<msg timestamp="20250619 06:30:50.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:50.854" endtime="20250619 06:30:50.861"/>
</kw>
<msg timestamp="20250619 06:30:50.862" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:30:50.853" endtime="20250619 06:30:50.862"/>
</kw>
<msg timestamp="20250619 06:30:50.862" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:50.853" endtime="20250619 06:30:50.862"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:30:50.862" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:30:50.862" endtime="20250619 06:30:50.862"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:50.865" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:50.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:50.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:50.863" endtime="20250619 06:30:50.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:50.882" level="INFO"/>
<status status="PASS" starttime="20250619 06:30:50.881" endtime="20250619 06:30:50.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:50.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:50.882" endtime="20250619 06:30:50.882"/>
</kw>
<status status="PASS" starttime="20250619 06:30:50.863" endtime="20250619 06:30:50.882"/>
</kw>
<msg timestamp="20250619 06:30:50.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:50.863" endtime="20250619 06:30:50.883"/>
</kw>
<status status="PASS" starttime="20250619 06:30:50.863" endtime="20250619 06:30:50.883"/>
</kw>
<status status="PASS" starttime="20250619 06:30:50.862" endtime="20250619 06:30:50.883"/>
</kw>
<status status="PASS" starttime="20250619 06:30:50.853" endtime="20250619 06:30:50.883"/>
</kw>
<status status="PASS" starttime="20250619 06:30:50.852" endtime="20250619 06:30:50.883"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket link ${source}/bucket1 ${target}/link3</arg>
<arg>key put ${target}/link3/key3 /etc/group</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250619 06:30:50.884" level="INFO">${cmd} = bucket link 19399-source/bucket1 19399-target/link3' --execute 'key put 19399-target/link3/key3 /etc/group</msg>
<status status="PASS" starttime="20250619 06:30:50.883" endtime="20250619 06:30:50.884"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:50.887" level="INFO">Running command 'ozone sh --execute 'bucket link 19399-source/bucket1 19399-target/link3' --execute 'key put 19399-target/link3/key3 /etc/group' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:30:55.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:30:55.812" level="INFO">${output} = bucket link 19399-source/bucket1 19399-target/link3
key put 19399-target/link3/key3 /etc/group</msg>
<status status="PASS" starttime="20250619 06:30:50.884" endtime="20250619 06:30:55.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:30:55.813" level="INFO">bucket link 19399-source/bucket1 19399-target/link3
key put 19399-target/link3/key3 /etc/group</msg>
<status status="PASS" starttime="20250619 06:30:55.812" endtime="20250619 06:30:55.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:30:55.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:30:55.813" endtime="20250619 06:30:55.813"/>
</kw>
<status status="PASS" starttime="20250619 06:30:50.884" endtime="20250619 06:30:55.814"/>
</kw>
<msg timestamp="20250619 06:30:55.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:50.884" endtime="20250619 06:30:55.814"/>
</kw>
<status status="PASS" starttime="20250619 06:30:50.883" endtime="20250619 06:30:55.814"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250619 06:30:55.815" level="INFO">${postfix} = 85061</msg>
<status status="PASS" starttime="20250619 06:30:55.815" endtime="20250619 06:30:55.815"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250619 06:30:55.815" level="INFO">${tmpfile} = /tmp/tempkey-85061</msg>
<status status="PASS" starttime="20250619 06:30:55.815" endtime="20250619 06:30:55.815"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:30:55.818" level="INFO">Running command 'ozone sh key get 19399-target/link1/key3 /tmp/tempkey-85061 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:00.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:00.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:30:55.816" endtime="20250619 06:31:00.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:00.207" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:00.206" endtime="20250619 06:31:00.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:00.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:00.207" endtime="20250619 06:31:00.207"/>
</kw>
<status status="PASS" starttime="20250619 06:30:55.816" endtime="20250619 06:31:00.207"/>
</kw>
<msg timestamp="20250619 06:31:00.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:30:55.816" endtime="20250619 06:31:00.208"/>
</kw>
<status status="PASS" starttime="20250619 06:30:55.815" endtime="20250619 06:31:00.208"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250619 06:31:00.210" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-85061 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:00.213" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250619 06:31:00.208" endtime="20250619 06:31:00.213"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:00.216" level="INFO">Running command 'rm -f /tmp/tempkey-85061 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:00.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:00.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:00.214" endtime="20250619 06:31:00.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:00.220" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:00.220" endtime="20250619 06:31:00.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:00.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:00.220" endtime="20250619 06:31:00.221"/>
</kw>
<status status="PASS" starttime="20250619 06:31:00.214" endtime="20250619 06:31:00.221"/>
</kw>
<msg timestamp="20250619 06:31:00.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:00.214" endtime="20250619 06:31:00.221"/>
</kw>
<status status="PASS" starttime="20250619 06:31:00.213" endtime="20250619 06:31:00.221"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250619 06:31:00.221" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250619 06:31:00.221" endtime="20250619 06:31:00.221"/>
</kw>
<msg timestamp="20250619 06:31:00.222" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250619 06:30:55.814" endtime="20250619 06:31:00.222"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250619 06:31:00.222" endtime="20250619 06:31:00.222"/>
</kw>
<status status="PASS" starttime="20250619 06:30:55.814" endtime="20250619 06:31:00.222"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:30:50.852" endtime="20250619 06:31:00.222"/>
</test>
<test id="s1-s2-s3-t17" name="Source bucket not affected by deleting link" line="215">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:31:00.224" endtime="20250619 06:31:00.224"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:00.227" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:00.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:00.230" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:31:00.225" endtime="20250619 06:31:00.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:00.231" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:31:00.231" endtime="20250619 06:31:00.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:00.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:00.231" endtime="20250619 06:31:00.232"/>
</kw>
<status status="PASS" starttime="20250619 06:31:00.225" endtime="20250619 06:31:00.232"/>
</kw>
<msg timestamp="20250619 06:31:00.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:00.224" endtime="20250619 06:31:00.232"/>
</kw>
<msg timestamp="20250619 06:31:00.232" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:31:00.224" endtime="20250619 06:31:00.232"/>
</kw>
<msg timestamp="20250619 06:31:00.232" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:31:00.224" endtime="20250619 06:31:00.232"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:31:00.233" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:31:00.232" endtime="20250619 06:31:00.233"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:00.236" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:00.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:00.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:00.234" endtime="20250619 06:31:00.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:00.253" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:00.252" endtime="20250619 06:31:00.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:00.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:00.253" endtime="20250619 06:31:00.253"/>
</kw>
<status status="PASS" starttime="20250619 06:31:00.234" endtime="20250619 06:31:00.253"/>
</kw>
<msg timestamp="20250619 06:31:00.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:00.233" endtime="20250619 06:31:00.254"/>
</kw>
<status status="PASS" starttime="20250619 06:31:00.233" endtime="20250619 06:31:00.254"/>
</kw>
<status status="PASS" starttime="20250619 06:31:00.233" endtime="20250619 06:31:00.254"/>
</kw>
<status status="PASS" starttime="20250619 06:31:00.223" endtime="20250619 06:31:00.254"/>
</kw>
<status status="PASS" starttime="20250619 06:31:00.223" endtime="20250619 06:31:00.254"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:00.257" level="INFO">Running command 'ozone sh bucket delete 19399-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:03.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:03.273" level="INFO">${output} = Bucket link1 is deleted</msg>
<status status="PASS" starttime="20250619 06:31:00.255" endtime="20250619 06:31:03.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:03.274" level="INFO">Bucket link1 is deleted</msg>
<status status="PASS" starttime="20250619 06:31:03.274" endtime="20250619 06:31:03.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:03.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:03.275" endtime="20250619 06:31:03.275"/>
</kw>
<status status="PASS" starttime="20250619 06:31:00.255" endtime="20250619 06:31:03.276"/>
</kw>
<msg timestamp="20250619 06:31:03.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:00.254" endtime="20250619 06:31:03.276"/>
</kw>
<status status="PASS" starttime="20250619 06:31:00.254" endtime="20250619 06:31:03.276"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:03.282" level="INFO">Running command 'ozone sh bucket list 19399-target 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:06.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:06.497" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "19399-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "...</msg>
<status status="PASS" starttime="20250619 06:31:03.278" endtime="20250619 06:31:06.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:06.498" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "19399-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2025-06-19T06:30:19.380Z",
  "modificationTime" : "2025-06-19T06:30:19.380Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "volumeName" : "19399-target",
  "name" : "dangling-link",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-06-19T06:27:29.478Z",
  "modificationTime" : "2025-06-19T06:27:29.478Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "19399-target",
  "name" : "link-to-unreadable-bucket",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2025-06-19T06:27:25.960Z",
  "modificationTime" : "2025-06-19T06:27:25.960Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "19399-target",
  "name" : "link2",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2025-06-19T06:30:13.542Z",
  "modificationTime" : "2025-06-19T06:30:13.542Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "19399-target",
  "name" : "link3",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-19T06:30:53.963Z",
  "modificationTime" : "2025-06-19T06:30:53.963Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "19399-target",
  "name" : "readable-link",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2025-06-19T06:27:26.042Z",
  "modificationTime" : "2025-06-19T06:27:26.042Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "19399-target",
  "name" : "readable-link2",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2025-06-19T06:27:26.081Z",
  "modificationTime" : "2025-06-19T06:27:26.081Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20250619 06:31:06.498" endtime="20250619 06:31:06.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:06.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:06.499" endtime="20250619 06:31:06.499"/>
</kw>
<status status="PASS" starttime="20250619 06:31:03.277" endtime="20250619 06:31:06.499"/>
</kw>
<msg timestamp="20250619 06:31:06.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:03.277" endtime="20250619 06:31:06.499"/>
</kw>
<msg timestamp="20250619 06:31:06.499" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "19399-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "...</msg>
<status status="PASS" starttime="20250619 06:31:03.276" endtime="20250619 06:31:06.499"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:31:06.500" endtime="20250619 06:31:06.500"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:06.503" level="INFO">Running command 'ozone sh key list 19399-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:10.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:10.006" level="INFO">${output} = .Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20250619 06:31:06.501" endtime="20250619 06:31:10.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:10.007" level="INFO">.Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20250619 06:31:10.007" endtime="20250619 06:31:10.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:10.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:10.007" endtime="20250619 06:31:10.008"/>
</kw>
<status status="PASS" starttime="20250619 06:31:06.500" endtime="20250619 06:31:10.008"/>
</kw>
<msg timestamp="20250619 06:31:10.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:06.500" endtime="20250619 06:31:10.008"/>
</kw>
<msg timestamp="20250619 06:31:10.008" level="INFO">${source_list} = .Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20250619 06:31:06.500" endtime="20250619 06:31:10.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:31:10.008" endtime="20250619 06:31:10.009"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:31:00.223" endtime="20250619 06:31:10.009"/>
</test>
<test id="s1-s2-s3-t18" name="Setting bucket property on link not allowed" line="222">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:31:10.010" endtime="20250619 06:31:10.011"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:10.014" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:10.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:10.017" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:31:10.012" endtime="20250619 06:31:10.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:10.018" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:31:10.018" endtime="20250619 06:31:10.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:10.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:10.018" endtime="20250619 06:31:10.019"/>
</kw>
<status status="PASS" starttime="20250619 06:31:10.011" endtime="20250619 06:31:10.019"/>
</kw>
<msg timestamp="20250619 06:31:10.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:10.011" endtime="20250619 06:31:10.019"/>
</kw>
<msg timestamp="20250619 06:31:10.019" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:31:10.011" endtime="20250619 06:31:10.019"/>
</kw>
<msg timestamp="20250619 06:31:10.019" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:31:10.011" endtime="20250619 06:31:10.019"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:31:10.020" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:31:10.019" endtime="20250619 06:31:10.020"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:10.023" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:10.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:10.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:10.021" endtime="20250619 06:31:10.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:10.039" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:10.039" endtime="20250619 06:31:10.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:10.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:10.039" endtime="20250619 06:31:10.040"/>
</kw>
<status status="PASS" starttime="20250619 06:31:10.020" endtime="20250619 06:31:10.040"/>
</kw>
<msg timestamp="20250619 06:31:10.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:10.020" endtime="20250619 06:31:10.040"/>
</kw>
<status status="PASS" starttime="20250619 06:31:10.020" endtime="20250619 06:31:10.040"/>
</kw>
<status status="PASS" starttime="20250619 06:31:10.020" endtime="20250619 06:31:10.040"/>
</kw>
<status status="PASS" starttime="20250619 06:31:10.010" endtime="20250619 06:31:10.040"/>
</kw>
<status status="PASS" starttime="20250619 06:31:10.010" endtime="20250619 06:31:10.040"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:10.043" level="INFO">Running command 'ozone sh bucket link 19399-source/bucket1 19399-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:13.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:13.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:10.041" endtime="20250619 06:31:13.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:13.044" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:13.044" endtime="20250619 06:31:13.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:13.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:13.044" endtime="20250619 06:31:13.045"/>
</kw>
<status status="PASS" starttime="20250619 06:31:10.041" endtime="20250619 06:31:13.045"/>
</kw>
<msg timestamp="20250619 06:31:13.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:10.041" endtime="20250619 06:31:13.046"/>
</kw>
<status status="PASS" starttime="20250619 06:31:10.040" endtime="20250619 06:31:13.046"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:13.048" level="INFO">Running command 'ozone sh bucket setquota 19399-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:16.054" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:31:16.054" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20250619 06:31:13.046" endtime="20250619 06:31:16.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:16.055" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20250619 06:31:16.054" endtime="20250619 06:31:16.055"/>
</kw>
<msg timestamp="20250619 06:31:16.055" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20250619 06:31:13.046" endtime="20250619 06:31:16.055"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:31:16.055" endtime="20250619 06:31:16.055"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:16.058" level="INFO">Running command 'ozone sh bucket info 19399-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:19.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:19.268" level="INFO">${output} = {
  "volumeName" : "19399-target",
  "name" : "link4",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-19T06:31:12.956Z",
  "modificationTime" : "2025-06-1...</msg>
<status status="PASS" starttime="20250619 06:31:16.056" endtime="20250619 06:31:19.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:19.269" level="INFO">{
  "volumeName" : "19399-target",
  "name" : "link4",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-19T06:31:12.956Z",
  "modificationTime" : "2025-06-19T06:31:12.956Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20250619 06:31:19.268" endtime="20250619 06:31:19.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:19.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:19.269" endtime="20250619 06:31:19.269"/>
</kw>
<status status="PASS" starttime="20250619 06:31:16.056" endtime="20250619 06:31:19.270"/>
</kw>
<msg timestamp="20250619 06:31:19.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:16.056" endtime="20250619 06:31:19.270"/>
</kw>
<msg timestamp="20250619 06:31:19.270" level="INFO">${result} = {
  "volumeName" : "19399-target",
  "name" : "link4",
  "sourceVolume" : "19399-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-19T06:31:12.956Z",
  "modificationTime" : "2025-06-1...</msg>
<status status="PASS" starttime="20250619 06:31:16.055" endtime="20250619 06:31:19.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:31:19.270" endtime="20250619 06:31:19.270"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250619 06:31:10.009" endtime="20250619 06:31:19.270"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20250619 06:27:18.210" endtime="20250619 06:31:19.272"/>
</suite>
<suite id="s1-s2-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250619 06:31:19.295" level="INFO">${random} = 49606</msg>
<status status="PASS" starttime="20250619 06:31:19.295" endtime="20250619 06:31:19.295"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:31:19.296" level="INFO">${prefix} = 49606</msg>
<status status="PASS" starttime="20250619 06:31:19.295" endtime="20250619 06:31:19.296"/>
</kw>
<status status="PASS" starttime="20250619 06:31:19.295" endtime="20250619 06:31:19.296"/>
</kw>
<test id="s1-s2-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:19.300" level="INFO">Running command 'ozone sh volume info /49606-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:22.347" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:31:22.348" level="INFO">${output} = VOLUME_NOT_FOUND Volume 49606-without-scheme is not found</msg>
<status status="PASS" starttime="20250619 06:31:19.298" endtime="20250619 06:31:22.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:22.348" level="INFO">VOLUME_NOT_FOUND Volume 49606-without-scheme is not found</msg>
<status status="PASS" starttime="20250619 06:31:22.348" endtime="20250619 06:31:22.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:22.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:22.349" endtime="20250619 06:31:22.349"/>
</kw>
<msg timestamp="20250619 06:31:22.349" level="INFO">${result} = VOLUME_NOT_FOUND Volume 49606-without-scheme is not found</msg>
<status status="PASS" starttime="20250619 06:31:19.297" endtime="20250619 06:31:22.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:31:22.349" endtime="20250619 06:31:22.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:22.353" level="INFO">Running command 'ozone sh volume create /49606-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:25.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:25.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:22.350" endtime="20250619 06:31:25.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:25.393" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:25.393" endtime="20250619 06:31:25.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:25.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:25.393" endtime="20250619 06:31:25.394"/>
</kw>
<status status="PASS" starttime="20250619 06:31:22.350" endtime="20250619 06:31:25.394"/>
</kw>
<msg timestamp="20250619 06:31:25.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:22.350" endtime="20250619 06:31:25.394"/>
</kw>
<msg timestamp="20250619 06:31:25.394" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250619 06:31:22.350" endtime="20250619 06:31:25.394"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250619 06:31:25.394" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250619 06:31:25.394" endtime="20250619 06:31:25.394"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:25.398" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="49606-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:28.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:28.619" level="INFO">${output} = {
  "metadata": {},
  "name": "49606-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20250619 06:31:25.396" endtime="20250619 06:31:28.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:28.620" level="INFO">{
  "metadata": {},
  "name": "49606-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2025-06-19T06:31:25.292Z",
  "modificationTime": "2025-06-19T06:31:25.292Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ],
      "aclSet": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "READ",
        "LIST"
      ],
      "aclSet": [
        "READ",
        "LIST"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20250619 06:31:28.619" endtime="20250619 06:31:28.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:28.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:28.620" endtime="20250619 06:31:28.620"/>
</kw>
<status status="PASS" starttime="20250619 06:31:25.395" endtime="20250619 06:31:28.621"/>
</kw>
<msg timestamp="20250619 06:31:28.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:25.395" endtime="20250619 06:31:28.621"/>
</kw>
<msg timestamp="20250619 06:31:28.621" level="INFO">${result} = {
  "metadata": {},
  "name": "49606-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20250619 06:31:25.395" endtime="20250619 06:31:28.621"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:31:28.621" endtime="20250619 06:31:28.621"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:28.624" level="INFO">Running command 'ozone sh volume setquota /49606-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:31.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:31.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:28.622" endtime="20250619 06:31:31.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:31.602" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:31.601" endtime="20250619 06:31:31.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:31.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:31.602" endtime="20250619 06:31:31.602"/>
</kw>
<status status="PASS" starttime="20250619 06:31:28.622" endtime="20250619 06:31:31.602"/>
</kw>
<msg timestamp="20250619 06:31:31.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:28.622" endtime="20250619 06:31:31.602"/>
</kw>
<status status="PASS" starttime="20250619 06:31:28.621" endtime="20250619 06:31:31.602"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:31.606" level="INFO">Running command 'ozone sh volume info /49606-without-scheme | jq -r '. | select(.name=="49606-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:34.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:34.928" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250619 06:31:31.603" endtime="20250619 06:31:34.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:34.929" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250619 06:31:34.929" endtime="20250619 06:31:34.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:34.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:34.930" endtime="20250619 06:31:34.930"/>
</kw>
<status status="PASS" starttime="20250619 06:31:31.603" endtime="20250619 06:31:34.930"/>
</kw>
<msg timestamp="20250619 06:31:34.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:31.603" endtime="20250619 06:31:34.930"/>
</kw>
<msg timestamp="20250619 06:31:34.930" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250619 06:31:31.602" endtime="20250619 06:31:34.930"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:31:34.930" endtime="20250619 06:31:34.931"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:34.934" level="INFO">Running command 'ozone sh bucket create /49606-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:37.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:37.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:34.932" endtime="20250619 06:31:37.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:37.959" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:37.958" endtime="20250619 06:31:37.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:37.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:37.959" endtime="20250619 06:31:37.960"/>
</kw>
<status status="PASS" starttime="20250619 06:31:34.931" endtime="20250619 06:31:37.960"/>
</kw>
<msg timestamp="20250619 06:31:37.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:34.931" endtime="20250619 06:31:37.960"/>
</kw>
<msg timestamp="20250619 06:31:37.960" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250619 06:31:34.931" endtime="20250619 06:31:37.960"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250619 06:31:37.960" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250619 06:31:37.960" endtime="20250619 06:31:37.961"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:37.964" level="INFO">Running command 'ozone sh bucket info /49606-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250619 06:31:41.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:41.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:37.961" endtime="20250619 06:31:41.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:41.105" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:41.104" endtime="20250619 06:31:41.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:41.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:41.105" endtime="20250619 06:31:41.105"/>
</kw>
<status status="PASS" starttime="20250619 06:31:37.961" endtime="20250619 06:31:41.105"/>
</kw>
<msg timestamp="20250619 06:31:41.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:37.961" endtime="20250619 06:31:41.105"/>
</kw>
<status status="PASS" starttime="20250619 06:31:37.961" endtime="20250619 06:31:41.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:41.108" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:41.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:41.113" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20250619 06:31:41.106" endtime="20250619 06:31:41.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:41.114" level="INFO">DISK</msg>
<status status="PASS" starttime="20250619 06:31:41.113" endtime="20250619 06:31:41.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:41.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:41.114" endtime="20250619 06:31:41.114"/>
</kw>
<status status="PASS" starttime="20250619 06:31:41.106" endtime="20250619 06:31:41.114"/>
</kw>
<msg timestamp="20250619 06:31:41.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:41.106" endtime="20250619 06:31:41.115"/>
</kw>
<msg timestamp="20250619 06:31:41.115" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20250619 06:31:41.105" endtime="20250619 06:31:41.115"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:31:41.115" endtime="20250619 06:31:41.115"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:41.118" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:41.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:41.123" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250619 06:31:41.116" endtime="20250619 06:31:41.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:41.123" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250619 06:31:41.123" endtime="20250619 06:31:41.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:41.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:41.123" endtime="20250619 06:31:41.124"/>
</kw>
<status status="PASS" starttime="20250619 06:31:41.116" endtime="20250619 06:31:41.124"/>
</kw>
<msg timestamp="20250619 06:31:41.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:41.116" endtime="20250619 06:31:41.124"/>
</kw>
<msg timestamp="20250619 06:31:41.124" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250619 06:31:41.115" endtime="20250619 06:31:41.124"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:31:41.124" endtime="20250619 06:31:41.124"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:41.127" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:41.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:41.132" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20250619 06:31:41.125" endtime="20250619 06:31:41.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:41.133" level="INFO">100</msg>
<status status="PASS" starttime="20250619 06:31:41.132" endtime="20250619 06:31:41.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:41.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:41.133" endtime="20250619 06:31:41.133"/>
</kw>
<status status="PASS" starttime="20250619 06:31:41.125" endtime="20250619 06:31:41.133"/>
</kw>
<msg timestamp="20250619 06:31:41.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:41.125" endtime="20250619 06:31:41.133"/>
</kw>
<msg timestamp="20250619 06:31:41.133" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20250619 06:31:41.124" endtime="20250619 06:31:41.133"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:31:41.134" endtime="20250619 06:31:41.134"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:41.137" level="INFO">Running command 'ozone sh bucket setquota /49606-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:44.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:44.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:41.135" endtime="20250619 06:31:44.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:44.071" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:44.070" endtime="20250619 06:31:44.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:44.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:44.071" endtime="20250619 06:31:44.071"/>
</kw>
<status status="PASS" starttime="20250619 06:31:41.135" endtime="20250619 06:31:44.071"/>
</kw>
<msg timestamp="20250619 06:31:44.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:41.134" endtime="20250619 06:31:44.071"/>
</kw>
<status status="PASS" starttime="20250619 06:31:41.134" endtime="20250619 06:31:44.072"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:44.075" level="INFO">Running command 'ozone sh bucket info /49606-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250619 06:31:47.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:47.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:44.073" endtime="20250619 06:31:47.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:47.333" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:47.332" endtime="20250619 06:31:47.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:47.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:47.333" endtime="20250619 06:31:47.334"/>
</kw>
<status status="PASS" starttime="20250619 06:31:44.072" endtime="20250619 06:31:47.334"/>
</kw>
<msg timestamp="20250619 06:31:47.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:44.072" endtime="20250619 06:31:47.334"/>
</kw>
<status status="PASS" starttime="20250619 06:31:44.072" endtime="20250619 06:31:47.334"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:47.337" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:47.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:47.342" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20250619 06:31:47.335" endtime="20250619 06:31:47.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:47.343" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20250619 06:31:47.342" endtime="20250619 06:31:47.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:47.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:47.343" endtime="20250619 06:31:47.343"/>
</kw>
<status status="PASS" starttime="20250619 06:31:47.335" endtime="20250619 06:31:47.343"/>
</kw>
<msg timestamp="20250619 06:31:47.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:47.334" endtime="20250619 06:31:47.344"/>
</kw>
<msg timestamp="20250619 06:31:47.344" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20250619 06:31:47.334" endtime="20250619 06:31:47.344"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:31:47.344" endtime="20250619 06:31:47.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:47.347" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:47.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:47.352" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20250619 06:31:47.345" endtime="20250619 06:31:47.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:47.352" level="INFO">1000</msg>
<status status="PASS" starttime="20250619 06:31:47.352" endtime="20250619 06:31:47.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:47.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:47.353" endtime="20250619 06:31:47.353"/>
</kw>
<status status="PASS" starttime="20250619 06:31:47.345" endtime="20250619 06:31:47.353"/>
</kw>
<msg timestamp="20250619 06:31:47.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:47.345" endtime="20250619 06:31:47.353"/>
</kw>
<msg timestamp="20250619 06:31:47.353" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20250619 06:31:47.344" endtime="20250619 06:31:47.354"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:31:47.354" endtime="20250619 06:31:47.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:47.357" level="INFO">Running command 'ozone sh bucket list /49606-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:50.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:50.694" level="INFO">${output} = 49606-without-scheme</msg>
<status status="PASS" starttime="20250619 06:31:47.355" endtime="20250619 06:31:50.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:50.695" level="INFO">49606-without-scheme</msg>
<status status="PASS" starttime="20250619 06:31:50.695" endtime="20250619 06:31:50.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:50.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:50.696" endtime="20250619 06:31:50.696"/>
</kw>
<status status="PASS" starttime="20250619 06:31:47.355" endtime="20250619 06:31:50.696"/>
</kw>
<msg timestamp="20250619 06:31:50.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:47.354" endtime="20250619 06:31:50.696"/>
</kw>
<msg timestamp="20250619 06:31:50.696" level="INFO">${result} = 49606-without-scheme</msg>
<status status="PASS" starttime="20250619 06:31:47.354" endtime="20250619 06:31:50.696"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:31:50.696" endtime="20250619 06:31:50.697"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:50.701" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:50.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:50.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:50.698" endtime="20250619 06:31:50.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:50.705" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:50.704" endtime="20250619 06:31:50.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:50.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:50.705" endtime="20250619 06:31:50.705"/>
</kw>
<status status="PASS" starttime="20250619 06:31:50.698" endtime="20250619 06:31:50.705"/>
</kw>
<msg timestamp="20250619 06:31:50.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:50.698" endtime="20250619 06:31:50.706"/>
</kw>
<status status="PASS" starttime="20250619 06:31:50.697" endtime="20250619 06:31:50.706"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<arg>key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250619 06:31:50.707" level="INFO">${cmd} = key put /49606-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get /49606-without-scheme/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS /49606-without-scheme/bb1/key1_RATIS /op...</msg>
<status status="PASS" starttime="20250619 06:31:50.707" endtime="20250619 06:31:50.707"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:50.710" level="INFO">Running command 'ozone sh --execute 'key put /49606-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get /49606-without-scheme/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS /49606-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt' --execute 'key get /49606-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS' --execute 'key cp /49606-without-scheme/bb1 key1 key1-copy' --execute 'key get /49606-without-scheme/bb1/key1-copy /tmp/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:56.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:56.063" level="INFO">${output} = key put /49606-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt
key get /49606-without-scheme/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS /49606-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt
key ...</msg>
<status status="PASS" starttime="20250619 06:31:50.707" endtime="20250619 06:31:56.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:56.064" level="INFO">key put /49606-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt
key get /49606-without-scheme/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS /49606-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt
key get /49606-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS
key cp /49606-without-scheme/bb1 key1 key1-copy
key get /49606-without-scheme/bb1/key1-copy /tmp/key1-copy</msg>
<status status="PASS" starttime="20250619 06:31:56.064" endtime="20250619 06:31:56.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:56.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:56.064" endtime="20250619 06:31:56.065"/>
</kw>
<status status="PASS" starttime="20250619 06:31:50.707" endtime="20250619 06:31:56.065"/>
</kw>
<msg timestamp="20250619 06:31:56.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:50.707" endtime="20250619 06:31:56.065"/>
</kw>
<status status="PASS" starttime="20250619 06:31:50.706" endtime="20250619 06:31:56.065"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:56.068" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:56.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:56.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:56.066" endtime="20250619 06:31:56.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:56.072" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:56.071" endtime="20250619 06:31:56.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:56.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:56.072" endtime="20250619 06:31:56.072"/>
</kw>
<status status="PASS" starttime="20250619 06:31:56.066" endtime="20250619 06:31:56.072"/>
</kw>
<msg timestamp="20250619 06:31:56.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:56.065" endtime="20250619 06:31:56.073"/>
</kw>
<status status="PASS" starttime="20250619 06:31:56.065" endtime="20250619 06:31:56.073"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:56.075" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:56.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:56.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:56.074" endtime="20250619 06:31:56.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:56.079" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:56.078" endtime="20250619 06:31:56.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:56.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:56.079" endtime="20250619 06:31:56.079"/>
</kw>
<status status="PASS" starttime="20250619 06:31:56.073" endtime="20250619 06:31:56.079"/>
</kw>
<msg timestamp="20250619 06:31:56.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:56.073" endtime="20250619 06:31:56.079"/>
</kw>
<status status="PASS" starttime="20250619 06:31:56.073" endtime="20250619 06:31:56.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:56.083" level="INFO">Running command 'ozone sh key info /49606-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:59.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:59.418" level="INFO">${output} = {
  "volumeName": "49606-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-06-19T06:31:55.343Z",
  "modificationTime":...</msg>
<status status="PASS" starttime="20250619 06:31:56.081" endtime="20250619 06:31:59.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:59.419" level="INFO">{
  "volumeName": "49606-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-06-19T06:31:55.343Z",
  "modificationTime": "2025-06-19T06:31:55.401Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600007,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 131,
  "file": true
}</msg>
<status status="PASS" starttime="20250619 06:31:59.418" endtime="20250619 06:31:59.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:59.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:59.419" endtime="20250619 06:31:59.419"/>
</kw>
<status status="PASS" starttime="20250619 06:31:56.080" endtime="20250619 06:31:59.419"/>
</kw>
<msg timestamp="20250619 06:31:59.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:56.080" endtime="20250619 06:31:59.419"/>
</kw>
<msg timestamp="20250619 06:31:59.420" level="INFO">${result} = {
  "volumeName": "49606-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-06-19T06:31:55.343Z",
  "modificationTime":...</msg>
<status status="PASS" starttime="20250619 06:31:56.080" endtime="20250619 06:31:59.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:31:59.420" endtime="20250619 06:31:59.420"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:59.423" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:31:59.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:31:59.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:31:59.421" endtime="20250619 06:31:59.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:31:59.427" level="INFO"/>
<status status="PASS" starttime="20250619 06:31:59.426" endtime="20250619 06:31:59.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:31:59.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:31:59.427" endtime="20250619 06:31:59.427"/>
</kw>
<status status="PASS" starttime="20250619 06:31:59.421" endtime="20250619 06:31:59.427"/>
</kw>
<msg timestamp="20250619 06:31:59.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:31:59.420" endtime="20250619 06:31:59.427"/>
</kw>
<status status="PASS" starttime="20250619 06:31:59.420" endtime="20250619 06:31:59.427"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:31:59.430" level="INFO">Running command 'ozone sh key get /49606-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:02.384" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:32:02.384" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250619 06:31:59.428" endtime="20250619 06:32:02.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:02.385" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250619 06:32:02.384" endtime="20250619 06:32:02.385"/>
</kw>
<msg timestamp="20250619 06:32:02.385" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250619 06:31:59.428" endtime="20250619 06:32:02.385"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:32:02.385" endtime="20250619 06:32:02.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:02.389" level="INFO">Running command 'ozone sh key get --force /49606-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:07.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:07.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:32:02.387" endtime="20250619 06:32:07.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:07.152" level="INFO"/>
<status status="PASS" starttime="20250619 06:32:07.151" endtime="20250619 06:32:07.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:07.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:07.152" endtime="20250619 06:32:07.152"/>
</kw>
<status status="PASS" starttime="20250619 06:32:02.386" endtime="20250619 06:32:07.153"/>
</kw>
<msg timestamp="20250619 06:32:07.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:02.386" endtime="20250619 06:32:07.153"/>
</kw>
<msg timestamp="20250619 06:32:07.153" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250619 06:32:02.385" endtime="20250619 06:32:07.153"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:32:07.153" endtime="20250619 06:32:07.153"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 sample.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:07.156" level="INFO">Running command 'ozone sh key put /49606-without-scheme/bb1/key1 sample.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:10.215" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:32:10.215" level="INFO">${output} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250619 06:32:07.154" endtime="20250619 06:32:10.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:10.216" level="INFO">Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250619 06:32:10.215" endtime="20250619 06:32:10.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:10.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:10.216" endtime="20250619 06:32:10.216"/>
</kw>
<msg timestamp="20250619 06:32:10.217" level="INFO">${result} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250619 06:32:07.153" endtime="20250619 06:32:10.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File not found: sample.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:32:10.217" endtime="20250619 06:32:10.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:10.220" level="INFO">Running command 'ozone sh key info /49606-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:13.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:13.450" level="INFO">${output} = {
  "volumeName": "49606-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-06-19T06:31:53.771Z",
  "modificationTime": "2025...</msg>
<status status="PASS" starttime="20250619 06:32:10.218" endtime="20250619 06:32:13.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:13.451" level="INFO">{
  "volumeName": "49606-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-06-19T06:31:53.771Z",
  "modificationTime": "2025-06-19T06:31:55.081Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600006,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 127,
  "file": true
}</msg>
<status status="PASS" starttime="20250619 06:32:13.451" endtime="20250619 06:32:13.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:13.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:13.452" endtime="20250619 06:32:13.452"/>
</kw>
<status status="PASS" starttime="20250619 06:32:10.218" endtime="20250619 06:32:13.452"/>
</kw>
<msg timestamp="20250619 06:32:13.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:10.218" endtime="20250619 06:32:13.452"/>
</kw>
<msg timestamp="20250619 06:32:13.452" level="INFO">${result} = {
  "volumeName": "49606-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-06-19T06:31:53.771Z",
  "modificationTime": "2025...</msg>
<status status="PASS" starttime="20250619 06:32:10.217" endtime="20250619 06:32:13.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:32:13.452" endtime="20250619 06:32:13.453"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:32:13.453" endtime="20250619 06:32:13.453"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:13.456" level="INFO">Running command 'ozone sh key list /49606-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:16.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:16.714" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250619 06:32:13.454" endtime="20250619 06:32:16.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:16.715" level="INFO">key1</msg>
<status status="PASS" starttime="20250619 06:32:16.715" endtime="20250619 06:32:16.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:16.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:16.715" endtime="20250619 06:32:16.716"/>
</kw>
<status status="PASS" starttime="20250619 06:32:13.454" endtime="20250619 06:32:16.716"/>
</kw>
<msg timestamp="20250619 06:32:16.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:13.454" endtime="20250619 06:32:16.716"/>
</kw>
<msg timestamp="20250619 06:32:16.716" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20250619 06:32:13.453" endtime="20250619 06:32:16.716"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:32:16.716" endtime="20250619 06:32:16.717"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:16.720" level="INFO">Running command 'ozone sh key rename /49606-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:19.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:19.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:32:16.718" endtime="20250619 06:32:19.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:19.987" level="INFO"/>
<status status="PASS" starttime="20250619 06:32:19.987" endtime="20250619 06:32:19.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:19.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:19.987" endtime="20250619 06:32:19.988"/>
</kw>
<status status="PASS" starttime="20250619 06:32:16.717" endtime="20250619 06:32:19.988"/>
</kw>
<msg timestamp="20250619 06:32:19.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:16.717" endtime="20250619 06:32:19.988"/>
</kw>
<status status="PASS" starttime="20250619 06:32:16.717" endtime="20250619 06:32:19.988"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:19.991" level="INFO">Running command 'ozone sh key list /49606-without-scheme/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:23.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:23.187" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20250619 06:32:19.989" endtime="20250619 06:32:23.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:23.188" level="INFO">key2</msg>
<status status="PASS" starttime="20250619 06:32:23.188" endtime="20250619 06:32:23.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:23.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:23.188" endtime="20250619 06:32:23.189"/>
</kw>
<status status="PASS" starttime="20250619 06:32:19.989" endtime="20250619 06:32:23.189"/>
</kw>
<msg timestamp="20250619 06:32:23.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:19.989" endtime="20250619 06:32:23.189"/>
</kw>
<msg timestamp="20250619 06:32:23.189" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20250619 06:32:19.988" endtime="20250619 06:32:23.189"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:32:23.189" endtime="20250619 06:32:23.190"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250619 06:32:23.191" level="INFO">${cmd} = key delete /49606-without-scheme/bb1/key2' --execute 'key delete /49606-without-scheme/bb1/key1_RATIS' --execute 'key delete /49606-without-scheme/bb1/key1-copy</msg>
<status status="PASS" starttime="20250619 06:32:23.190" endtime="20250619 06:32:23.191"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:23.194" level="INFO">Running command 'ozone sh --execute 'key delete /49606-without-scheme/bb1/key2' --execute 'key delete /49606-without-scheme/bb1/key1_RATIS' --execute 'key delete /49606-without-scheme/bb1/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:26.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:26.619" level="INFO">${output} = key delete /49606-without-scheme/bb1/key2
Key moved inside Trash: /.Trash/testuser/Current/key2 
key delete /49606-without-scheme/bb1/key1_RATIS
Key moved inside Trash: /.Trash/testuser/Current/key1_R...</msg>
<status status="PASS" starttime="20250619 06:32:23.191" endtime="20250619 06:32:26.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:26.620" level="INFO">key delete /49606-without-scheme/bb1/key2
Key moved inside Trash: /.Trash/testuser/Current/key2 
key delete /49606-without-scheme/bb1/key1_RATIS
Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS 
key delete /49606-without-scheme/bb1/key1-copy
Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20250619 06:32:26.619" endtime="20250619 06:32:26.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:26.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:26.620" endtime="20250619 06:32:26.620"/>
</kw>
<status status="PASS" starttime="20250619 06:32:23.191" endtime="20250619 06:32:26.620"/>
</kw>
<msg timestamp="20250619 06:32:26.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:23.191" endtime="20250619 06:32:26.620"/>
</kw>
<status status="PASS" starttime="20250619 06:32:23.190" endtime="20250619 06:32:26.620"/>
</kw>
<status status="PASS" starttime="20250619 06:31:50.697" endtime="20250619 06:32:26.620"/>
</kw>
<status status="PASS" starttime="20250619 06:31:50.697" endtime="20250619 06:32:26.621"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:26.624" level="INFO">Running command 'ozone sh volume clrquota --space-quota /49606-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:29.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:29.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:32:26.622" endtime="20250619 06:32:29.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:29.532" level="INFO"/>
<status status="PASS" starttime="20250619 06:32:29.531" endtime="20250619 06:32:29.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:29.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:29.532" endtime="20250619 06:32:29.532"/>
</kw>
<status status="PASS" starttime="20250619 06:32:26.621" endtime="20250619 06:32:29.532"/>
</kw>
<msg timestamp="20250619 06:32:29.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:26.621" endtime="20250619 06:32:29.532"/>
</kw>
<status status="PASS" starttime="20250619 06:32:26.621" endtime="20250619 06:32:29.532"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:29.536" level="INFO">Running command 'ozone sh volume info /49606-without-scheme | jq -r '. | select(.name=="49606-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:32.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:32.604" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:32:29.534" endtime="20250619 06:32:32.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:32.605" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:32:32.604" endtime="20250619 06:32:32.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:32.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:32.605" endtime="20250619 06:32:32.605"/>
</kw>
<status status="PASS" starttime="20250619 06:32:29.533" endtime="20250619 06:32:32.605"/>
</kw>
<msg timestamp="20250619 06:32:32.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:29.533" endtime="20250619 06:32:32.606"/>
</kw>
<msg timestamp="20250619 06:32:32.606" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:32:29.533" endtime="20250619 06:32:32.606"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:32:32.606" endtime="20250619 06:32:32.606"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:32.610" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /49606-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:35.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:35.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:32:32.607" endtime="20250619 06:32:35.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:35.589" level="INFO"/>
<status status="PASS" starttime="20250619 06:32:35.588" endtime="20250619 06:32:35.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:35.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:35.589" endtime="20250619 06:32:35.589"/>
</kw>
<status status="PASS" starttime="20250619 06:32:32.607" endtime="20250619 06:32:35.589"/>
</kw>
<msg timestamp="20250619 06:32:35.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:32.607" endtime="20250619 06:32:35.589"/>
</kw>
<status status="PASS" starttime="20250619 06:32:32.606" endtime="20250619 06:32:35.589"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:35.593" level="INFO">Running command 'ozone sh volume info /49606-without-scheme | jq -r '. | select(.name=="49606-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:38.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:38.742" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:32:35.591" endtime="20250619 06:32:38.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:38.743" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:32:38.742" endtime="20250619 06:32:38.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:38.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:38.743" endtime="20250619 06:32:38.743"/>
</kw>
<status status="PASS" starttime="20250619 06:32:35.590" endtime="20250619 06:32:38.743"/>
</kw>
<msg timestamp="20250619 06:32:38.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:35.590" endtime="20250619 06:32:38.743"/>
</kw>
<msg timestamp="20250619 06:32:38.744" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:32:35.590" endtime="20250619 06:32:38.744"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:32:38.744" endtime="20250619 06:32:38.744"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:38.747" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /49606-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:41.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:41.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:32:38.745" endtime="20250619 06:32:41.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:41.864" level="INFO"/>
<status status="PASS" starttime="20250619 06:32:41.863" endtime="20250619 06:32:41.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:41.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:41.864" endtime="20250619 06:32:41.864"/>
</kw>
<status status="PASS" starttime="20250619 06:32:38.745" endtime="20250619 06:32:41.864"/>
</kw>
<msg timestamp="20250619 06:32:41.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:38.744" endtime="20250619 06:32:41.864"/>
</kw>
<status status="PASS" starttime="20250619 06:32:38.744" endtime="20250619 06:32:41.864"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:41.868" level="INFO">Running command 'ozone sh bucket info /49606-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:45.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:45.007" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:32:41.866" endtime="20250619 06:32:45.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:45.008" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:32:45.007" endtime="20250619 06:32:45.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:45.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:45.008" endtime="20250619 06:32:45.008"/>
</kw>
<status status="PASS" starttime="20250619 06:32:41.865" endtime="20250619 06:32:45.008"/>
</kw>
<msg timestamp="20250619 06:32:45.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:41.865" endtime="20250619 06:32:45.009"/>
</kw>
<msg timestamp="20250619 06:32:45.009" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:32:41.864" endtime="20250619 06:32:45.009"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:32:45.009" endtime="20250619 06:32:45.009"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:45.012" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /49606-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:47.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:47.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:32:45.010" endtime="20250619 06:32:47.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:47.934" level="INFO"/>
<status status="PASS" starttime="20250619 06:32:47.934" endtime="20250619 06:32:47.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:47.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:47.934" endtime="20250619 06:32:47.935"/>
</kw>
<status status="PASS" starttime="20250619 06:32:45.010" endtime="20250619 06:32:47.935"/>
</kw>
<msg timestamp="20250619 06:32:47.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:45.010" endtime="20250619 06:32:47.935"/>
</kw>
<status status="PASS" starttime="20250619 06:32:45.009" endtime="20250619 06:32:47.935"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:47.938" level="INFO">Running command 'ozone sh bucket info /49606-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:51.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:51.147" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:32:47.936" endtime="20250619 06:32:51.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:51.148" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:32:51.148" endtime="20250619 06:32:51.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:51.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:51.148" endtime="20250619 06:32:51.149"/>
</kw>
<status status="PASS" starttime="20250619 06:32:47.936" endtime="20250619 06:32:51.149"/>
</kw>
<msg timestamp="20250619 06:32:51.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:47.936" endtime="20250619 06:32:51.149"/>
</kw>
<msg timestamp="20250619 06:32:51.149" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:32:47.935" endtime="20250619 06:32:51.149"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:32:51.149" endtime="20250619 06:32:51.150"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:51.153" level="INFO">Running command 'ozone sh bucket delete -r --yes /49606-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:54.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:54.242" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250619 06:32:51.151" endtime="20250619 06:32:54.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:54.243" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250619 06:32:54.242" endtime="20250619 06:32:54.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:54.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:54.243" endtime="20250619 06:32:54.243"/>
</kw>
<status status="PASS" starttime="20250619 06:32:51.150" endtime="20250619 06:32:54.243"/>
</kw>
<msg timestamp="20250619 06:32:54.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:51.150" endtime="20250619 06:32:54.243"/>
</kw>
<status status="PASS" starttime="20250619 06:32:51.150" endtime="20250619 06:32:54.243"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:54.247" level="INFO">Running command 'ozone sh volume delete /49606-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:32:57.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:32:57.161" level="INFO">${output} = Volume 49606-without-scheme is deleted</msg>
<status status="PASS" starttime="20250619 06:32:54.244" endtime="20250619 06:32:57.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:32:57.162" level="INFO">Volume 49606-without-scheme is deleted</msg>
<status status="PASS" starttime="20250619 06:32:57.162" endtime="20250619 06:32:57.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:32:57.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:32:57.162" endtime="20250619 06:32:57.163"/>
</kw>
<status status="PASS" starttime="20250619 06:32:54.244" endtime="20250619 06:32:57.163"/>
</kw>
<msg timestamp="20250619 06:32:57.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:54.244" endtime="20250619 06:32:57.163"/>
</kw>
<status status="PASS" starttime="20250619 06:32:54.243" endtime="20250619 06:32:57.163"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:32:57.166" level="INFO">Running command 'ozone sh volume create /49606-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:00.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:00.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:32:57.164" endtime="20250619 06:33:00.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:00.169" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:00.169" endtime="20250619 06:33:00.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:00.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:00.170" endtime="20250619 06:33:00.170"/>
</kw>
<status status="PASS" starttime="20250619 06:32:57.164" endtime="20250619 06:33:00.170"/>
</kw>
<msg timestamp="20250619 06:33:00.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:32:57.164" endtime="20250619 06:33:00.170"/>
</kw>
<status status="PASS" starttime="20250619 06:32:57.163" endtime="20250619 06:33:00.170"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:00.174" level="INFO">Running command 'ozone sh volume info /49606-without-scheme &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250619 06:33:03.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:03.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:00.172" endtime="20250619 06:33:03.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:03.342" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:03.342" endtime="20250619 06:33:03.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:03.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:03.343" endtime="20250619 06:33:03.343"/>
</kw>
<status status="PASS" starttime="20250619 06:33:00.171" endtime="20250619 06:33:03.343"/>
</kw>
<msg timestamp="20250619 06:33:03.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:00.171" endtime="20250619 06:33:03.343"/>
</kw>
<status status="PASS" starttime="20250619 06:33:00.170" endtime="20250619 06:33:03.343"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:03.347" level="INFO">Running command 'jq -r '. | select(.name=="49606-without-scheme") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:03.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:03.352" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:33:03.344" endtime="20250619 06:33:03.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:03.353" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:33:03.352" endtime="20250619 06:33:03.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:03.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:03.353" endtime="20250619 06:33:03.353"/>
</kw>
<status status="PASS" starttime="20250619 06:33:03.344" endtime="20250619 06:33:03.353"/>
</kw>
<msg timestamp="20250619 06:33:03.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:03.344" endtime="20250619 06:33:03.353"/>
</kw>
<msg timestamp="20250619 06:33:03.353" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:33:03.343" endtime="20250619 06:33:03.353"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:33:03.354" endtime="20250619 06:33:03.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:03.357" level="INFO">Running command 'jq -r '. | select(.name=="49606-without-scheme") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:03.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:03.361" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:33:03.355" endtime="20250619 06:33:03.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:03.362" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:33:03.361" endtime="20250619 06:33:03.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:03.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:03.362" endtime="20250619 06:33:03.362"/>
</kw>
<status status="PASS" starttime="20250619 06:33:03.355" endtime="20250619 06:33:03.362"/>
</kw>
<msg timestamp="20250619 06:33:03.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:03.354" endtime="20250619 06:33:03.362"/>
</kw>
<msg timestamp="20250619 06:33:03.363" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:33:03.354" endtime="20250619 06:33:03.363"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:33:03.363" endtime="20250619 06:33:03.363"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:03.366" level="INFO">Running command 'ozone sh bucket create /49606-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:06.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:06.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:03.364" endtime="20250619 06:33:06.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:06.381" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:06.381" endtime="20250619 06:33:06.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:06.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:06.381" endtime="20250619 06:33:06.382"/>
</kw>
<status status="PASS" starttime="20250619 06:33:03.364" endtime="20250619 06:33:06.382"/>
</kw>
<msg timestamp="20250619 06:33:06.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:03.363" endtime="20250619 06:33:06.382"/>
</kw>
<status status="PASS" starttime="20250619 06:33:03.363" endtime="20250619 06:33:06.382"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:06.386" level="INFO">Running command 'ozone sh bucket info /49606-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250619 06:33:09.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:09.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:06.383" endtime="20250619 06:33:09.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:09.580" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:09.579" endtime="20250619 06:33:09.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:09.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:09.580" endtime="20250619 06:33:09.580"/>
</kw>
<status status="PASS" starttime="20250619 06:33:06.383" endtime="20250619 06:33:09.580"/>
</kw>
<msg timestamp="20250619 06:33:09.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:06.383" endtime="20250619 06:33:09.580"/>
</kw>
<status status="PASS" starttime="20250619 06:33:06.382" endtime="20250619 06:33:09.580"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:09.584" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:09.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:09.588" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:33:09.581" endtime="20250619 06:33:09.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:09.589" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:33:09.589" endtime="20250619 06:33:09.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:09.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:09.589" endtime="20250619 06:33:09.589"/>
</kw>
<status status="PASS" starttime="20250619 06:33:09.581" endtime="20250619 06:33:09.590"/>
</kw>
<msg timestamp="20250619 06:33:09.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:09.581" endtime="20250619 06:33:09.590"/>
</kw>
<msg timestamp="20250619 06:33:09.590" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:33:09.581" endtime="20250619 06:33:09.590"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:33:09.590" endtime="20250619 06:33:09.590"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:09.593" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:09.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:09.598" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:33:09.591" endtime="20250619 06:33:09.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:09.598" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:33:09.598" endtime="20250619 06:33:09.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:09.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:09.598" endtime="20250619 06:33:09.599"/>
</kw>
<status status="PASS" starttime="20250619 06:33:09.591" endtime="20250619 06:33:09.599"/>
</kw>
<msg timestamp="20250619 06:33:09.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:09.591" endtime="20250619 06:33:09.599"/>
</kw>
<msg timestamp="20250619 06:33:09.599" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:33:09.590" endtime="20250619 06:33:09.599"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:33:09.599" endtime="20250619 06:33:09.600"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:09.602" level="INFO">Running command 'ozone sh bucket delete /49606-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:12.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:12.587" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250619 06:33:09.600" endtime="20250619 06:33:12.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:12.588" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250619 06:33:12.588" endtime="20250619 06:33:12.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:12.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:12.588" endtime="20250619 06:33:12.589"/>
</kw>
<status status="PASS" starttime="20250619 06:33:09.600" endtime="20250619 06:33:12.589"/>
</kw>
<msg timestamp="20250619 06:33:12.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:09.600" endtime="20250619 06:33:12.589"/>
</kw>
<status status="PASS" starttime="20250619 06:33:09.600" endtime="20250619 06:33:12.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:12.592" level="INFO">Running command 'ozone sh volume delete /49606-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:15.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:15.486" level="INFO">${output} = Volume 49606-without-scheme is deleted</msg>
<status status="PASS" starttime="20250619 06:33:12.590" endtime="20250619 06:33:15.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:15.487" level="INFO">Volume 49606-without-scheme is deleted</msg>
<status status="PASS" starttime="20250619 06:33:15.486" endtime="20250619 06:33:15.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:15.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:15.487" endtime="20250619 06:33:15.488"/>
</kw>
<status status="PASS" starttime="20250619 06:33:12.590" endtime="20250619 06:33:15.488"/>
</kw>
<msg timestamp="20250619 06:33:15.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:12.590" endtime="20250619 06:33:15.488"/>
</kw>
<status status="PASS" starttime="20250619 06:33:12.589" endtime="20250619 06:33:15.488"/>
</kw>
<status status="PASS" starttime="20250619 06:31:19.296" endtime="20250619 06:33:15.488"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250619 06:31:19.296" endtime="20250619 06:33:15.488"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20250619 06:31:19.275" endtime="20250619 06:33:15.489"/>
</suite>
<suite id="s1-s2-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250619 06:33:15.496" level="INFO">${random} = 77145</msg>
<status status="PASS" starttime="20250619 06:33:15.496" endtime="20250619 06:33:15.496"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:33:15.497" level="INFO">${prefix} = 77145</msg>
<status status="PASS" starttime="20250619 06:33:15.496" endtime="20250619 06:33:15.497"/>
</kw>
<status status="PASS" starttime="20250619 06:33:15.496" endtime="20250619 06:33:15.497"/>
</kw>
<test id="s1-s2-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:33:15.498" endtime="20250619 06:33:15.498"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:15.501" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:15.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:15.505" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:33:15.499" endtime="20250619 06:33:15.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:15.505" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:33:15.505" endtime="20250619 06:33:15.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:15.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:15.506" endtime="20250619 06:33:15.506"/>
</kw>
<status status="PASS" starttime="20250619 06:33:15.499" endtime="20250619 06:33:15.506"/>
</kw>
<msg timestamp="20250619 06:33:15.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:15.498" endtime="20250619 06:33:15.506"/>
</kw>
<msg timestamp="20250619 06:33:15.506" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:33:15.498" endtime="20250619 06:33:15.506"/>
</kw>
<msg timestamp="20250619 06:33:15.506" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:33:15.498" endtime="20250619 06:33:15.506"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:33:15.507" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:33:15.507" endtime="20250619 06:33:15.507"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:15.510" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:15.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:15.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:15.508" endtime="20250619 06:33:15.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:15.595" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:15.594" endtime="20250619 06:33:15.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:15.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:15.595" endtime="20250619 06:33:15.596"/>
</kw>
<status status="PASS" starttime="20250619 06:33:15.508" endtime="20250619 06:33:15.596"/>
</kw>
<msg timestamp="20250619 06:33:15.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:15.507" endtime="20250619 06:33:15.596"/>
</kw>
<status status="PASS" starttime="20250619 06:33:15.507" endtime="20250619 06:33:15.596"/>
</kw>
<status status="PASS" starttime="20250619 06:33:15.507" endtime="20250619 06:33:15.596"/>
</kw>
<status status="PASS" starttime="20250619 06:33:15.497" endtime="20250619 06:33:15.596"/>
</kw>
<status status="PASS" starttime="20250619 06:33:15.497" endtime="20250619 06:33:15.596"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:15.599" level="INFO">Running command 'ozone sh volume info o3://om:9862/77145-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:18.397" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:33:18.397" level="INFO">${output} = VOLUME_NOT_FOUND Volume 77145-with-host is not found</msg>
<status status="PASS" starttime="20250619 06:33:15.597" endtime="20250619 06:33:18.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:18.398" level="INFO">VOLUME_NOT_FOUND Volume 77145-with-host is not found</msg>
<status status="PASS" starttime="20250619 06:33:18.398" endtime="20250619 06:33:18.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:18.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:18.398" endtime="20250619 06:33:18.399"/>
</kw>
<msg timestamp="20250619 06:33:18.399" level="INFO">${result} = VOLUME_NOT_FOUND Volume 77145-with-host is not found</msg>
<status status="PASS" starttime="20250619 06:33:15.597" endtime="20250619 06:33:18.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:33:18.399" endtime="20250619 06:33:18.399"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:18.402" level="INFO">Running command 'ozone sh volume create o3://om:9862/77145-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:21.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:21.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:18.400" endtime="20250619 06:33:21.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:21.389" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:21.388" endtime="20250619 06:33:21.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:21.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:21.389" endtime="20250619 06:33:21.389"/>
</kw>
<status status="PASS" starttime="20250619 06:33:18.400" endtime="20250619 06:33:21.389"/>
</kw>
<msg timestamp="20250619 06:33:21.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:18.400" endtime="20250619 06:33:21.389"/>
</kw>
<msg timestamp="20250619 06:33:21.390" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250619 06:33:18.399" endtime="20250619 06:33:21.390"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250619 06:33:21.390" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250619 06:33:21.390" endtime="20250619 06:33:21.390"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:21.393" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="77145-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:24.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:24.560" level="INFO">${output} = {
  "metadata": {},
  "name": "77145-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20250619 06:33:21.391" endtime="20250619 06:33:24.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:24.561" level="INFO">{
  "metadata": {},
  "name": "77145-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2025-06-19T06:33:21.274Z",
  "modificationTime": "2025-06-19T06:33:21.274Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ],
      "aclSet": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "READ",
        "LIST"
      ],
      "aclSet": [
        "READ",
        "LIST"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20250619 06:33:24.561" endtime="20250619 06:33:24.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:24.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:24.561" endtime="20250619 06:33:24.562"/>
</kw>
<status status="PASS" starttime="20250619 06:33:21.391" endtime="20250619 06:33:24.562"/>
</kw>
<msg timestamp="20250619 06:33:24.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:21.391" endtime="20250619 06:33:24.562"/>
</kw>
<msg timestamp="20250619 06:33:24.562" level="INFO">${result} = {
  "metadata": {},
  "name": "77145-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20250619 06:33:21.390" endtime="20250619 06:33:24.562"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:33:24.562" endtime="20250619 06:33:24.563"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:24.566" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/77145-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:27.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:27.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:24.563" endtime="20250619 06:33:27.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:27.633" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:27.633" endtime="20250619 06:33:27.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:27.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:27.634" endtime="20250619 06:33:27.634"/>
</kw>
<status status="PASS" starttime="20250619 06:33:24.563" endtime="20250619 06:33:27.634"/>
</kw>
<msg timestamp="20250619 06:33:27.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:24.563" endtime="20250619 06:33:27.635"/>
</kw>
<status status="PASS" starttime="20250619 06:33:24.563" endtime="20250619 06:33:27.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:27.638" level="INFO">Running command 'ozone sh volume info o3://om:9862/77145-with-host | jq -r '. | select(.name=="77145-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:30.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:30.837" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250619 06:33:27.636" endtime="20250619 06:33:30.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:30.838" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250619 06:33:30.838" endtime="20250619 06:33:30.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:30.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:30.838" endtime="20250619 06:33:30.839"/>
</kw>
<status status="PASS" starttime="20250619 06:33:27.636" endtime="20250619 06:33:30.839"/>
</kw>
<msg timestamp="20250619 06:33:30.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:27.635" endtime="20250619 06:33:30.839"/>
</kw>
<msg timestamp="20250619 06:33:30.839" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250619 06:33:27.635" endtime="20250619 06:33:30.839"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:33:30.839" endtime="20250619 06:33:30.839"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:30.843" level="INFO">Running command 'ozone sh bucket create o3://om:9862/77145-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:33.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:33.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:30.841" endtime="20250619 06:33:33.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:33.860" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:33.859" endtime="20250619 06:33:33.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:33.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:33.860" endtime="20250619 06:33:33.860"/>
</kw>
<status status="PASS" starttime="20250619 06:33:30.840" endtime="20250619 06:33:33.860"/>
</kw>
<msg timestamp="20250619 06:33:33.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:30.840" endtime="20250619 06:33:33.860"/>
</kw>
<msg timestamp="20250619 06:33:33.861" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250619 06:33:30.839" endtime="20250619 06:33:33.861"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250619 06:33:33.861" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250619 06:33:33.861" endtime="20250619 06:33:33.861"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:33.864" level="INFO">Running command 'ozone sh bucket info o3://om:9862/77145-with-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250619 06:33:37.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:37.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:33.862" endtime="20250619 06:33:37.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:37.093" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:37.093" endtime="20250619 06:33:37.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:37.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:37.093" endtime="20250619 06:33:37.094"/>
</kw>
<status status="PASS" starttime="20250619 06:33:33.862" endtime="20250619 06:33:37.094"/>
</kw>
<msg timestamp="20250619 06:33:37.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:33.862" endtime="20250619 06:33:37.094"/>
</kw>
<status status="PASS" starttime="20250619 06:33:33.861" endtime="20250619 06:33:37.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:37.097" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:37.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:37.102" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20250619 06:33:37.095" endtime="20250619 06:33:37.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:37.103" level="INFO">DISK</msg>
<status status="PASS" starttime="20250619 06:33:37.103" endtime="20250619 06:33:37.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:37.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:37.103" endtime="20250619 06:33:37.104"/>
</kw>
<status status="PASS" starttime="20250619 06:33:37.095" endtime="20250619 06:33:37.104"/>
</kw>
<msg timestamp="20250619 06:33:37.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:37.095" endtime="20250619 06:33:37.104"/>
</kw>
<msg timestamp="20250619 06:33:37.104" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20250619 06:33:37.094" endtime="20250619 06:33:37.104"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:33:37.104" endtime="20250619 06:33:37.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:37.108" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:37.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:37.113" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250619 06:33:37.106" endtime="20250619 06:33:37.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:37.113" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250619 06:33:37.113" endtime="20250619 06:33:37.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:37.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:37.114" endtime="20250619 06:33:37.114"/>
</kw>
<status status="PASS" starttime="20250619 06:33:37.105" endtime="20250619 06:33:37.114"/>
</kw>
<msg timestamp="20250619 06:33:37.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:37.105" endtime="20250619 06:33:37.114"/>
</kw>
<msg timestamp="20250619 06:33:37.114" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250619 06:33:37.105" endtime="20250619 06:33:37.114"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:33:37.114" endtime="20250619 06:33:37.115"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:37.118" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:37.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:37.123" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20250619 06:33:37.116" endtime="20250619 06:33:37.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:37.124" level="INFO">100</msg>
<status status="PASS" starttime="20250619 06:33:37.123" endtime="20250619 06:33:37.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:37.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:37.124" endtime="20250619 06:33:37.124"/>
</kw>
<status status="PASS" starttime="20250619 06:33:37.115" endtime="20250619 06:33:37.124"/>
</kw>
<msg timestamp="20250619 06:33:37.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:37.115" endtime="20250619 06:33:37.124"/>
</kw>
<msg timestamp="20250619 06:33:37.124" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20250619 06:33:37.115" endtime="20250619 06:33:37.124"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:33:37.125" endtime="20250619 06:33:37.125"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:37.128" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/77145-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:40.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:40.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:37.126" endtime="20250619 06:33:40.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:40.067" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:40.067" endtime="20250619 06:33:40.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:40.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:40.067" endtime="20250619 06:33:40.068"/>
</kw>
<status status="PASS" starttime="20250619 06:33:37.126" endtime="20250619 06:33:40.068"/>
</kw>
<msg timestamp="20250619 06:33:40.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:37.125" endtime="20250619 06:33:40.068"/>
</kw>
<status status="PASS" starttime="20250619 06:33:37.125" endtime="20250619 06:33:40.068"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:40.071" level="INFO">Running command 'ozone sh bucket info o3://om:9862/77145-with-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250619 06:33:43.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:43.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:40.069" endtime="20250619 06:33:43.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:43.202" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:43.201" endtime="20250619 06:33:43.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:43.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:43.202" endtime="20250619 06:33:43.202"/>
</kw>
<status status="PASS" starttime="20250619 06:33:40.069" endtime="20250619 06:33:43.202"/>
</kw>
<msg timestamp="20250619 06:33:43.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:40.069" endtime="20250619 06:33:43.203"/>
</kw>
<status status="PASS" starttime="20250619 06:33:40.068" endtime="20250619 06:33:43.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:43.206" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:43.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:43.211" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20250619 06:33:43.204" endtime="20250619 06:33:43.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:43.211" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20250619 06:33:43.211" endtime="20250619 06:33:43.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:43.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:43.212" endtime="20250619 06:33:43.212"/>
</kw>
<status status="PASS" starttime="20250619 06:33:43.203" endtime="20250619 06:33:43.212"/>
</kw>
<msg timestamp="20250619 06:33:43.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:43.203" endtime="20250619 06:33:43.212"/>
</kw>
<msg timestamp="20250619 06:33:43.212" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20250619 06:33:43.203" endtime="20250619 06:33:43.212"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:33:43.212" endtime="20250619 06:33:43.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:43.216" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:43.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:43.220" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20250619 06:33:43.214" endtime="20250619 06:33:43.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:43.221" level="INFO">1000</msg>
<status status="PASS" starttime="20250619 06:33:43.221" endtime="20250619 06:33:43.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:43.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:43.221" endtime="20250619 06:33:43.222"/>
</kw>
<status status="PASS" starttime="20250619 06:33:43.213" endtime="20250619 06:33:43.222"/>
</kw>
<msg timestamp="20250619 06:33:43.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:43.213" endtime="20250619 06:33:43.222"/>
</kw>
<msg timestamp="20250619 06:33:43.222" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20250619 06:33:43.213" endtime="20250619 06:33:43.222"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:33:43.222" endtime="20250619 06:33:43.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:43.225" level="INFO">Running command 'ozone sh bucket list o3://om:9862/77145-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:46.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:46.429" level="INFO">${output} = 77145-with-host</msg>
<status status="PASS" starttime="20250619 06:33:43.223" endtime="20250619 06:33:46.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:46.430" level="INFO">77145-with-host</msg>
<status status="PASS" starttime="20250619 06:33:46.429" endtime="20250619 06:33:46.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:46.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:46.430" endtime="20250619 06:33:46.430"/>
</kw>
<status status="PASS" starttime="20250619 06:33:43.223" endtime="20250619 06:33:46.431"/>
</kw>
<msg timestamp="20250619 06:33:46.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:43.223" endtime="20250619 06:33:46.431"/>
</kw>
<msg timestamp="20250619 06:33:46.431" level="INFO">${result} = 77145-with-host</msg>
<status status="PASS" starttime="20250619 06:33:43.222" endtime="20250619 06:33:46.431"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:33:46.431" endtime="20250619 06:33:46.431"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:46.435" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:46.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:46.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:46.433" endtime="20250619 06:33:46.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:46.439" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:46.439" endtime="20250619 06:33:46.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:46.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:46.439" endtime="20250619 06:33:46.440"/>
</kw>
<status status="PASS" starttime="20250619 06:33:46.433" endtime="20250619 06:33:46.440"/>
</kw>
<msg timestamp="20250619 06:33:46.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:46.432" endtime="20250619 06:33:46.440"/>
</kw>
<status status="PASS" starttime="20250619 06:33:46.432" endtime="20250619 06:33:46.440"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<arg>key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250619 06:33:46.441" level="INFO">${cmd} = key put o3://om:9862/77145-with-host/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get o3://om:9862/77145-with-host/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS o3://om:9862/77145-with-ho...</msg>
<status status="PASS" starttime="20250619 06:33:46.441" endtime="20250619 06:33:46.441"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:46.444" level="INFO">Running command 'ozone sh --execute 'key put o3://om:9862/77145-with-host/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get o3://om:9862/77145-with-host/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS o3://om:9862/77145-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt' --execute 'key get o3://om:9862/77145-with-host/bb1/key1_RATIS /tmp/key1_RATIS' --execute 'key cp o3://om:9862/77145-with-host/bb1 key1 key1-copy' --execute 'key get o3://om:9862/77145-with-host/bb1/key1-copy /tmp/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:51.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:51.899" level="INFO">${output} = key put o3://om:9862/77145-with-host/bb1/key1 /opt/hadoop/NOTICE.txt
key get o3://om:9862/77145-with-host/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS o3://om:9862/77145-with-host/bb1/key1_RATIS /opt/h...</msg>
<status status="PASS" starttime="20250619 06:33:46.442" endtime="20250619 06:33:51.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:51.900" level="INFO">key put o3://om:9862/77145-with-host/bb1/key1 /opt/hadoop/NOTICE.txt
key get o3://om:9862/77145-with-host/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS o3://om:9862/77145-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt
key get o3://om:9862/77145-with-host/bb1/key1_RATIS /tmp/key1_RATIS
key cp o3://om:9862/77145-with-host/bb1 key1 key1-copy
key get o3://om:9862/77145-with-host/bb1/key1-copy /tmp/key1-copy</msg>
<status status="PASS" starttime="20250619 06:33:51.899" endtime="20250619 06:33:51.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:51.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:51.900" endtime="20250619 06:33:51.900"/>
</kw>
<status status="PASS" starttime="20250619 06:33:46.442" endtime="20250619 06:33:51.900"/>
</kw>
<msg timestamp="20250619 06:33:51.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:46.441" endtime="20250619 06:33:51.900"/>
</kw>
<status status="PASS" starttime="20250619 06:33:46.440" endtime="20250619 06:33:51.900"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:51.904" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:51.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:51.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:51.902" endtime="20250619 06:33:51.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:51.907" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:51.907" endtime="20250619 06:33:51.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:51.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:51.907" endtime="20250619 06:33:51.908"/>
</kw>
<status status="PASS" starttime="20250619 06:33:51.901" endtime="20250619 06:33:51.908"/>
</kw>
<msg timestamp="20250619 06:33:51.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:51.901" endtime="20250619 06:33:51.908"/>
</kw>
<status status="PASS" starttime="20250619 06:33:51.901" endtime="20250619 06:33:51.908"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:51.911" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:51.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:51.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:51.909" endtime="20250619 06:33:51.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:51.914" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:51.914" endtime="20250619 06:33:51.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:51.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:51.914" endtime="20250619 06:33:51.915"/>
</kw>
<status status="PASS" starttime="20250619 06:33:51.909" endtime="20250619 06:33:51.915"/>
</kw>
<msg timestamp="20250619 06:33:51.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:51.908" endtime="20250619 06:33:51.915"/>
</kw>
<status status="PASS" starttime="20250619 06:33:51.908" endtime="20250619 06:33:51.915"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:51.918" level="INFO">Running command 'ozone sh key info o3://om:9862/77145-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:55.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:55.063" level="INFO">${output} = {
  "volumeName": "77145-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-06-19T06:33:51.198Z",
  "modificationTime": "202...</msg>
<status status="PASS" starttime="20250619 06:33:51.916" endtime="20250619 06:33:55.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:55.065" level="INFO">{
  "volumeName": "77145-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-06-19T06:33:51.198Z",
  "modificationTime": "2025-06-19T06:33:51.246Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600010,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 185,
  "file": true
}</msg>
<status status="PASS" starttime="20250619 06:33:55.064" endtime="20250619 06:33:55.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:55.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:55.065" endtime="20250619 06:33:55.065"/>
</kw>
<status status="PASS" starttime="20250619 06:33:51.916" endtime="20250619 06:33:55.065"/>
</kw>
<msg timestamp="20250619 06:33:55.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:51.916" endtime="20250619 06:33:55.065"/>
</kw>
<msg timestamp="20250619 06:33:55.066" level="INFO">${result} = {
  "volumeName": "77145-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-06-19T06:33:51.198Z",
  "modificationTime": "202...</msg>
<status status="PASS" starttime="20250619 06:33:51.915" endtime="20250619 06:33:55.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:33:55.066" endtime="20250619 06:33:55.066"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:55.069" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:55.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:33:55.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:55.067" endtime="20250619 06:33:55.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:55.072" level="INFO"/>
<status status="PASS" starttime="20250619 06:33:55.072" endtime="20250619 06:33:55.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:33:55.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:33:55.072" endtime="20250619 06:33:55.073"/>
</kw>
<status status="PASS" starttime="20250619 06:33:55.066" endtime="20250619 06:33:55.073"/>
</kw>
<msg timestamp="20250619 06:33:55.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:55.066" endtime="20250619 06:33:55.073"/>
</kw>
<status status="PASS" starttime="20250619 06:33:55.066" endtime="20250619 06:33:55.073"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:55.076" level="INFO">Running command 'ozone sh key get o3://om:9862/77145-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:33:58.042" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:33:58.042" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250619 06:33:55.074" endtime="20250619 06:33:58.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:33:58.043" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250619 06:33:58.042" endtime="20250619 06:33:58.043"/>
</kw>
<msg timestamp="20250619 06:33:58.043" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250619 06:33:55.073" endtime="20250619 06:33:58.043"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:33:58.043" endtime="20250619 06:33:58.044"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:33:58.047" level="INFO">Running command 'ozone sh key get --force o3://om:9862/77145-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:02.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:02.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:33:58.045" endtime="20250619 06:34:02.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:02.566" level="INFO"/>
<status status="PASS" starttime="20250619 06:34:02.566" endtime="20250619 06:34:02.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:02.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:02.566" endtime="20250619 06:34:02.567"/>
</kw>
<status status="PASS" starttime="20250619 06:33:58.044" endtime="20250619 06:34:02.567"/>
</kw>
<msg timestamp="20250619 06:34:02.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:33:58.044" endtime="20250619 06:34:02.567"/>
</kw>
<msg timestamp="20250619 06:34:02.567" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250619 06:33:58.044" endtime="20250619 06:34:02.567"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:34:02.567" endtime="20250619 06:34:02.567"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 sample.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:02.570" level="INFO">Running command 'ozone sh key put o3://om:9862/77145-with-host/bb1/key1 sample.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:05.629" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:34:05.629" level="INFO">${output} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250619 06:34:02.568" endtime="20250619 06:34:05.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:05.630" level="INFO">Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250619 06:34:05.629" endtime="20250619 06:34:05.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:05.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:05.630" endtime="20250619 06:34:05.630"/>
</kw>
<msg timestamp="20250619 06:34:05.631" level="INFO">${result} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250619 06:34:02.567" endtime="20250619 06:34:05.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File not found: sample.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:34:05.631" endtime="20250619 06:34:05.631"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:05.634" level="INFO">Running command 'ozone sh key info o3://om:9862/77145-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:09.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:09.030" level="INFO">${output} = {
  "volumeName": "77145-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-06-19T06:33:49.637Z",
  "modificationTime": "2025-06-1...</msg>
<status status="PASS" starttime="20250619 06:34:05.632" endtime="20250619 06:34:09.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:09.031" level="INFO">{
  "volumeName": "77145-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-06-19T06:33:49.637Z",
  "modificationTime": "2025-06-19T06:33:50.926Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600009,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 181,
  "file": true
}</msg>
<status status="PASS" starttime="20250619 06:34:09.031" endtime="20250619 06:34:09.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:09.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:09.031" endtime="20250619 06:34:09.032"/>
</kw>
<status status="PASS" starttime="20250619 06:34:05.632" endtime="20250619 06:34:09.032"/>
</kw>
<msg timestamp="20250619 06:34:09.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:05.632" endtime="20250619 06:34:09.032"/>
</kw>
<msg timestamp="20250619 06:34:09.032" level="INFO">${result} = {
  "volumeName": "77145-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "testuser",
  "dataSize": 15892,
  "creationTime": "2025-06-19T06:33:49.637Z",
  "modificationTime": "2025-06-1...</msg>
<status status="PASS" starttime="20250619 06:34:05.631" endtime="20250619 06:34:09.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:34:09.032" endtime="20250619 06:34:09.032"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:34:09.032" endtime="20250619 06:34:09.033"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:09.036" level="INFO">Running command 'ozone sh key list o3://om:9862/77145-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:12.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:12.292" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250619 06:34:09.034" endtime="20250619 06:34:12.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:12.293" level="INFO">key1</msg>
<status status="PASS" starttime="20250619 06:34:12.292" endtime="20250619 06:34:12.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:12.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:12.293" endtime="20250619 06:34:12.293"/>
</kw>
<status status="PASS" starttime="20250619 06:34:09.033" endtime="20250619 06:34:12.293"/>
</kw>
<msg timestamp="20250619 06:34:12.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:09.033" endtime="20250619 06:34:12.294"/>
</kw>
<msg timestamp="20250619 06:34:12.294" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20250619 06:34:09.033" endtime="20250619 06:34:12.294"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:34:12.294" endtime="20250619 06:34:12.294"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:12.297" level="INFO">Running command 'ozone sh key rename o3://om:9862/77145-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:15.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:15.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:34:12.295" endtime="20250619 06:34:15.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:15.200" level="INFO"/>
<status status="PASS" starttime="20250619 06:34:15.200" endtime="20250619 06:34:15.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:15.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:15.201" endtime="20250619 06:34:15.201"/>
</kw>
<status status="PASS" starttime="20250619 06:34:12.295" endtime="20250619 06:34:15.201"/>
</kw>
<msg timestamp="20250619 06:34:15.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:12.295" endtime="20250619 06:34:15.201"/>
</kw>
<status status="PASS" starttime="20250619 06:34:12.294" endtime="20250619 06:34:15.201"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:15.205" level="INFO">Running command 'ozone sh key list o3://om:9862/77145-with-host/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:18.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:18.389" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20250619 06:34:15.202" endtime="20250619 06:34:18.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:18.390" level="INFO">key2</msg>
<status status="PASS" starttime="20250619 06:34:18.389" endtime="20250619 06:34:18.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:18.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:18.390" endtime="20250619 06:34:18.390"/>
</kw>
<status status="PASS" starttime="20250619 06:34:15.202" endtime="20250619 06:34:18.390"/>
</kw>
<msg timestamp="20250619 06:34:18.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:15.202" endtime="20250619 06:34:18.390"/>
</kw>
<msg timestamp="20250619 06:34:18.391" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20250619 06:34:15.201" endtime="20250619 06:34:18.391"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:34:18.391" endtime="20250619 06:34:18.391"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250619 06:34:18.392" level="INFO">${cmd} = key delete o3://om:9862/77145-with-host/bb1/key2' --execute 'key delete o3://om:9862/77145-with-host/bb1/key1_RATIS' --execute 'key delete o3://om:9862/77145-with-host/bb1/key1-copy</msg>
<status status="PASS" starttime="20250619 06:34:18.392" endtime="20250619 06:34:18.392"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:18.395" level="INFO">Running command 'ozone sh --execute 'key delete o3://om:9862/77145-with-host/bb1/key2' --execute 'key delete o3://om:9862/77145-with-host/bb1/key1_RATIS' --execute 'key delete o3://om:9862/77145-with-host/bb1/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:22.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:22.000" level="INFO">${output} = key delete o3://om:9862/77145-with-host/bb1/key2
Key moved inside Trash: /.Trash/testuser/Current/key2 
key delete o3://om:9862/77145-with-host/bb1/key1_RATIS
Key moved inside Trash: /.Trash/testuser/...</msg>
<status status="PASS" starttime="20250619 06:34:18.393" endtime="20250619 06:34:22.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:22.001" level="INFO">key delete o3://om:9862/77145-with-host/bb1/key2
Key moved inside Trash: /.Trash/testuser/Current/key2 
key delete o3://om:9862/77145-with-host/bb1/key1_RATIS
Key moved inside Trash: /.Trash/testuser/Current/key1_RATIS 
key delete o3://om:9862/77145-with-host/bb1/key1-copy
Key moved inside Trash: /.Trash/testuser/Current/key1-copy </msg>
<status status="PASS" starttime="20250619 06:34:22.000" endtime="20250619 06:34:22.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:22.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:22.001" endtime="20250619 06:34:22.001"/>
</kw>
<status status="PASS" starttime="20250619 06:34:18.392" endtime="20250619 06:34:22.001"/>
</kw>
<msg timestamp="20250619 06:34:22.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:18.392" endtime="20250619 06:34:22.001"/>
</kw>
<status status="PASS" starttime="20250619 06:34:18.391" endtime="20250619 06:34:22.001"/>
</kw>
<status status="PASS" starttime="20250619 06:33:46.432" endtime="20250619 06:34:22.002"/>
</kw>
<status status="PASS" starttime="20250619 06:33:46.431" endtime="20250619 06:34:22.002"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:22.005" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/77145-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:25.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:25.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:34:22.003" endtime="20250619 06:34:25.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:25.047" level="INFO"/>
<status status="PASS" starttime="20250619 06:34:25.047" endtime="20250619 06:34:25.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:25.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:25.047" endtime="20250619 06:34:25.048"/>
</kw>
<status status="PASS" starttime="20250619 06:34:22.002" endtime="20250619 06:34:25.048"/>
</kw>
<msg timestamp="20250619 06:34:25.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:22.002" endtime="20250619 06:34:25.048"/>
</kw>
<status status="PASS" starttime="20250619 06:34:22.002" endtime="20250619 06:34:25.048"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:25.051" level="INFO">Running command 'ozone sh volume info o3://om:9862/77145-with-host | jq -r '. | select(.name=="77145-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:28.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:28.262" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:34:25.049" endtime="20250619 06:34:28.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:28.263" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:34:28.262" endtime="20250619 06:34:28.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:28.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:28.263" endtime="20250619 06:34:28.263"/>
</kw>
<status status="PASS" starttime="20250619 06:34:25.049" endtime="20250619 06:34:28.264"/>
</kw>
<msg timestamp="20250619 06:34:28.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:25.049" endtime="20250619 06:34:28.264"/>
</kw>
<msg timestamp="20250619 06:34:28.264" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:34:25.048" endtime="20250619 06:34:28.264"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:34:28.264" endtime="20250619 06:34:28.264"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:28.267" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/77145-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:31.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:31.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:34:28.265" endtime="20250619 06:34:31.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:31.299" level="INFO"/>
<status status="PASS" starttime="20250619 06:34:31.298" endtime="20250619 06:34:31.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:31.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:31.299" endtime="20250619 06:34:31.299"/>
</kw>
<status status="PASS" starttime="20250619 06:34:28.265" endtime="20250619 06:34:31.299"/>
</kw>
<msg timestamp="20250619 06:34:31.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:28.265" endtime="20250619 06:34:31.300"/>
</kw>
<status status="PASS" starttime="20250619 06:34:28.264" endtime="20250619 06:34:31.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:31.303" level="INFO">Running command 'ozone sh volume info o3://om:9862/77145-with-host | jq -r '. | select(.name=="77145-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:34.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:34.474" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:34:31.301" endtime="20250619 06:34:34.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:34.475" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:34:34.475" endtime="20250619 06:34:34.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:34.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:34.475" endtime="20250619 06:34:34.476"/>
</kw>
<status status="PASS" starttime="20250619 06:34:31.301" endtime="20250619 06:34:34.476"/>
</kw>
<msg timestamp="20250619 06:34:34.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:31.300" endtime="20250619 06:34:34.476"/>
</kw>
<msg timestamp="20250619 06:34:34.476" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:34:31.300" endtime="20250619 06:34:34.476"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:34:34.476" endtime="20250619 06:34:34.477"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:34.480" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/77145-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:37.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:37.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:34:34.478" endtime="20250619 06:34:37.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:37.384" level="INFO"/>
<status status="PASS" starttime="20250619 06:34:37.383" endtime="20250619 06:34:37.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:37.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:37.384" endtime="20250619 06:34:37.384"/>
</kw>
<status status="PASS" starttime="20250619 06:34:34.478" endtime="20250619 06:34:37.384"/>
</kw>
<msg timestamp="20250619 06:34:37.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:34.477" endtime="20250619 06:34:37.384"/>
</kw>
<status status="PASS" starttime="20250619 06:34:34.477" endtime="20250619 06:34:37.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:37.388" level="INFO">Running command 'ozone sh bucket info o3://om:9862/77145-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:40.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:40.430" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:34:37.386" endtime="20250619 06:34:40.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:40.431" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:34:40.431" endtime="20250619 06:34:40.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:40.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:40.431" endtime="20250619 06:34:40.432"/>
</kw>
<status status="PASS" starttime="20250619 06:34:37.385" endtime="20250619 06:34:40.432"/>
</kw>
<msg timestamp="20250619 06:34:40.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:37.385" endtime="20250619 06:34:40.432"/>
</kw>
<msg timestamp="20250619 06:34:40.432" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:34:37.385" endtime="20250619 06:34:40.432"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:34:40.432" endtime="20250619 06:34:40.432"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:40.436" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/77145-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:43.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:43.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:34:40.433" endtime="20250619 06:34:43.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:43.293" level="INFO"/>
<status status="PASS" starttime="20250619 06:34:43.292" endtime="20250619 06:34:43.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:43.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:43.293" endtime="20250619 06:34:43.293"/>
</kw>
<status status="PASS" starttime="20250619 06:34:40.433" endtime="20250619 06:34:43.293"/>
</kw>
<msg timestamp="20250619 06:34:43.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:40.433" endtime="20250619 06:34:43.293"/>
</kw>
<status status="PASS" starttime="20250619 06:34:40.433" endtime="20250619 06:34:43.294"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:43.297" level="INFO">Running command 'ozone sh bucket info o3://om:9862/77145-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:46.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:46.490" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:34:43.295" endtime="20250619 06:34:46.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:46.490" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:34:46.490" endtime="20250619 06:34:46.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:46.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:46.491" endtime="20250619 06:34:46.491"/>
</kw>
<status status="PASS" starttime="20250619 06:34:43.294" endtime="20250619 06:34:46.491"/>
</kw>
<msg timestamp="20250619 06:34:46.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:43.294" endtime="20250619 06:34:46.491"/>
</kw>
<msg timestamp="20250619 06:34:46.491" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:34:43.294" endtime="20250619 06:34:46.491"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:34:46.492" endtime="20250619 06:34:46.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:46.495" level="INFO">Running command 'ozone sh bucket delete -r --yes o3://om:9862/77145-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:49.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:49.614" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250619 06:34:46.493" endtime="20250619 06:34:49.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:49.615" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250619 06:34:49.614" endtime="20250619 06:34:49.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:49.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:49.615" endtime="20250619 06:34:49.615"/>
</kw>
<status status="PASS" starttime="20250619 06:34:46.492" endtime="20250619 06:34:49.615"/>
</kw>
<msg timestamp="20250619 06:34:49.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:46.492" endtime="20250619 06:34:49.616"/>
</kw>
<status status="PASS" starttime="20250619 06:34:46.492" endtime="20250619 06:34:49.616"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:49.619" level="INFO">Running command 'ozone sh volume delete o3://om:9862/77145-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:52.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:52.591" level="INFO">${output} = Volume 77145-with-host is deleted</msg>
<status status="PASS" starttime="20250619 06:34:49.617" endtime="20250619 06:34:52.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:52.592" level="INFO">Volume 77145-with-host is deleted</msg>
<status status="PASS" starttime="20250619 06:34:52.591" endtime="20250619 06:34:52.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:52.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:52.592" endtime="20250619 06:34:52.592"/>
</kw>
<status status="PASS" starttime="20250619 06:34:49.616" endtime="20250619 06:34:52.592"/>
</kw>
<msg timestamp="20250619 06:34:52.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:49.616" endtime="20250619 06:34:52.593"/>
</kw>
<status status="PASS" starttime="20250619 06:34:49.616" endtime="20250619 06:34:52.593"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:52.596" level="INFO">Running command 'ozone sh volume create o3://om:9862/77145-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:55.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:55.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:34:52.594" endtime="20250619 06:34:55.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:55.570" level="INFO"/>
<status status="PASS" starttime="20250619 06:34:55.570" endtime="20250619 06:34:55.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:55.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:55.570" endtime="20250619 06:34:55.571"/>
</kw>
<status status="PASS" starttime="20250619 06:34:52.594" endtime="20250619 06:34:55.571"/>
</kw>
<msg timestamp="20250619 06:34:55.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:52.593" endtime="20250619 06:34:55.571"/>
</kw>
<status status="PASS" starttime="20250619 06:34:52.593" endtime="20250619 06:34:55.571"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:55.574" level="INFO">Running command 'ozone sh volume info o3://om:9862/77145-with-host &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250619 06:34:58.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:58.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:34:55.572" endtime="20250619 06:34:58.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:58.795" level="INFO"/>
<status status="PASS" starttime="20250619 06:34:58.795" endtime="20250619 06:34:58.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:58.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:58.795" endtime="20250619 06:34:58.796"/>
</kw>
<status status="PASS" starttime="20250619 06:34:55.572" endtime="20250619 06:34:58.796"/>
</kw>
<msg timestamp="20250619 06:34:58.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:55.572" endtime="20250619 06:34:58.796"/>
</kw>
<status status="PASS" starttime="20250619 06:34:55.571" endtime="20250619 06:34:58.796"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:58.799" level="INFO">Running command 'jq -r '. | select(.name=="77145-with-host") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:58.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:58.804" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:34:58.797" endtime="20250619 06:34:58.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:58.805" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:34:58.804" endtime="20250619 06:34:58.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:58.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:58.805" endtime="20250619 06:34:58.805"/>
</kw>
<status status="PASS" starttime="20250619 06:34:58.797" endtime="20250619 06:34:58.806"/>
</kw>
<msg timestamp="20250619 06:34:58.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:58.797" endtime="20250619 06:34:58.806"/>
</kw>
<msg timestamp="20250619 06:34:58.806" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:34:58.796" endtime="20250619 06:34:58.806"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:34:58.806" endtime="20250619 06:34:58.806"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:58.810" level="INFO">Running command 'jq -r '. | select(.name=="77145-with-host") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:34:58.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:34:58.814" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:34:58.808" endtime="20250619 06:34:58.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:34:58.815" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:34:58.815" endtime="20250619 06:34:58.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:34:58.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:34:58.815" endtime="20250619 06:34:58.815"/>
</kw>
<status status="PASS" starttime="20250619 06:34:58.807" endtime="20250619 06:34:58.816"/>
</kw>
<msg timestamp="20250619 06:34:58.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:58.807" endtime="20250619 06:34:58.816"/>
</kw>
<msg timestamp="20250619 06:34:58.816" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:34:58.806" endtime="20250619 06:34:58.816"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:34:58.816" endtime="20250619 06:34:58.816"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:34:58.819" level="INFO">Running command 'ozone sh bucket create o3://om:9862/77145-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:01.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:35:01.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:34:58.817" endtime="20250619 06:35:01.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:01.699" level="INFO"/>
<status status="PASS" starttime="20250619 06:35:01.698" endtime="20250619 06:35:01.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:01.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:01.699" endtime="20250619 06:35:01.699"/>
</kw>
<status status="PASS" starttime="20250619 06:34:58.817" endtime="20250619 06:35:01.699"/>
</kw>
<msg timestamp="20250619 06:35:01.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:34:58.817" endtime="20250619 06:35:01.699"/>
</kw>
<status status="PASS" starttime="20250619 06:34:58.816" endtime="20250619 06:35:01.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:01.703" level="INFO">Running command 'ozone sh bucket info o3://om:9862/77145-with-host/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250619 06:35:04.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:35:04.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:35:01.701" endtime="20250619 06:35:04.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:04.949" level="INFO"/>
<status status="PASS" starttime="20250619 06:35:04.949" endtime="20250619 06:35:04.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:04.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:04.949" endtime="20250619 06:35:04.950"/>
</kw>
<status status="PASS" starttime="20250619 06:35:01.700" endtime="20250619 06:35:04.950"/>
</kw>
<msg timestamp="20250619 06:35:04.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:35:01.700" endtime="20250619 06:35:04.950"/>
</kw>
<status status="PASS" starttime="20250619 06:35:01.700" endtime="20250619 06:35:04.950"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:04.953" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:04.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:35:04.958" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:35:04.951" endtime="20250619 06:35:04.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:04.958" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:35:04.958" endtime="20250619 06:35:04.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:04.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:04.959" endtime="20250619 06:35:04.959"/>
</kw>
<status status="PASS" starttime="20250619 06:35:04.951" endtime="20250619 06:35:04.959"/>
</kw>
<msg timestamp="20250619 06:35:04.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:35:04.950" endtime="20250619 06:35:04.959"/>
</kw>
<msg timestamp="20250619 06:35:04.959" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:35:04.950" endtime="20250619 06:35:04.959"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:35:04.960" endtime="20250619 06:35:04.960"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:04.963" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:04.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:35:04.967" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250619 06:35:04.961" endtime="20250619 06:35:04.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:04.968" level="INFO">-1</msg>
<status status="PASS" starttime="20250619 06:35:04.968" endtime="20250619 06:35:04.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:04.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:04.968" endtime="20250619 06:35:04.969"/>
</kw>
<status status="PASS" starttime="20250619 06:35:04.960" endtime="20250619 06:35:04.969"/>
</kw>
<msg timestamp="20250619 06:35:04.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:35:04.960" endtime="20250619 06:35:04.969"/>
</kw>
<msg timestamp="20250619 06:35:04.969" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250619 06:35:04.960" endtime="20250619 06:35:04.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:35:04.969" endtime="20250619 06:35:04.969"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:04.972" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/77145-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:07.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:35:07.916" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250619 06:35:04.970" endtime="20250619 06:35:07.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:07.917" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250619 06:35:07.917" endtime="20250619 06:35:07.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:07.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:07.917" endtime="20250619 06:35:07.918"/>
</kw>
<status status="PASS" starttime="20250619 06:35:04.970" endtime="20250619 06:35:07.918"/>
</kw>
<msg timestamp="20250619 06:35:07.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:35:04.970" endtime="20250619 06:35:07.918"/>
</kw>
<status status="PASS" starttime="20250619 06:35:04.969" endtime="20250619 06:35:07.918"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:07.921" level="INFO">Running command 'ozone sh volume delete o3://om:9862/77145-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:11.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:35:11.080" level="INFO">${output} = Volume 77145-with-host is deleted</msg>
<status status="PASS" starttime="20250619 06:35:07.919" endtime="20250619 06:35:11.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:11.081" level="INFO">Volume 77145-with-host is deleted</msg>
<status status="PASS" starttime="20250619 06:35:11.080" endtime="20250619 06:35:11.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:11.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:11.081" endtime="20250619 06:35:11.081"/>
</kw>
<status status="PASS" starttime="20250619 06:35:07.919" endtime="20250619 06:35:11.081"/>
</kw>
<msg timestamp="20250619 06:35:11.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:35:07.919" endtime="20250619 06:35:11.081"/>
</kw>
<status status="PASS" starttime="20250619 06:35:07.918" endtime="20250619 06:35:11.082"/>
</kw>
<status status="PASS" starttime="20250619 06:33:15.596" endtime="20250619 06:35:11.082"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250619 06:33:15.497" endtime="20250619 06:35:11.082"/>
</test>
<test id="s1-s2-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:35:11.083" endtime="20250619 06:35:11.083"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:11.087" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:11.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:35:11.090" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:35:11.085" endtime="20250619 06:35:11.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:11.091" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:35:11.091" endtime="20250619 06:35:11.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:11.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:11.091" endtime="20250619 06:35:11.092"/>
</kw>
<status status="PASS" starttime="20250619 06:35:11.084" endtime="20250619 06:35:11.092"/>
</kw>
<msg timestamp="20250619 06:35:11.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:35:11.084" endtime="20250619 06:35:11.092"/>
</kw>
<msg timestamp="20250619 06:35:11.092" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:35:11.084" endtime="20250619 06:35:11.092"/>
</kw>
<msg timestamp="20250619 06:35:11.092" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:35:11.084" endtime="20250619 06:35:11.092"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:35:11.092" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:35:11.092" endtime="20250619 06:35:11.092"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:11.096" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:11.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:35:11.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:35:11.094" endtime="20250619 06:35:11.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:11.175" level="INFO"/>
<status status="PASS" starttime="20250619 06:35:11.174" endtime="20250619 06:35:11.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:11.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:11.175" endtime="20250619 06:35:11.175"/>
</kw>
<status status="PASS" starttime="20250619 06:35:11.094" endtime="20250619 06:35:11.175"/>
</kw>
<msg timestamp="20250619 06:35:11.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:35:11.093" endtime="20250619 06:35:11.175"/>
</kw>
<status status="PASS" starttime="20250619 06:35:11.093" endtime="20250619 06:35:11.176"/>
</kw>
<status status="PASS" starttime="20250619 06:35:11.093" endtime="20250619 06:35:11.176"/>
</kw>
<status status="PASS" starttime="20250619 06:35:11.083" endtime="20250619 06:35:11.176"/>
</kw>
<status status="PASS" starttime="20250619 06:35:11.083" endtime="20250619 06:35:11.176"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 1.5GB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:11.179" level="INFO">Running command 'ozone sh volume create o3://om:9862/77145-with-errors --space-quota 1.5GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:14.080" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:35:14.080" level="INFO">${output} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250619 06:35:11.177" endtime="20250619 06:35:14.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:14.081" level="INFO">1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250619 06:35:14.080" endtime="20250619 06:35:14.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:14.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:14.081" endtime="20250619 06:35:14.082"/>
</kw>
<msg timestamp="20250619 06:35:14.082" level="INFO">${result} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250619 06:35:11.176" endtime="20250619 06:35:14.082"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5GB is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:35:14.082" endtime="20250619 06:35:14.082"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:14.086" level="INFO">Running command 'ozone sh volume create o3://om:9862/77145-with-errors --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:16.957" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:35:16.957" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250619 06:35:14.083" endtime="20250619 06:35:16.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:16.958" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250619 06:35:16.958" endtime="20250619 06:35:16.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:16.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:16.958" endtime="20250619 06:35:16.959"/>
</kw>
<msg timestamp="20250619 06:35:16.959" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250619 06:35:14.082" endtime="20250619 06:35:16.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:35:16.959" endtime="20250619 06:35:16.959"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:16.962" level="INFO">Running command 'ozone sh volume create o3://om:9862/77145-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:20.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:35:20.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:35:16.960" endtime="20250619 06:35:20.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:20.065" level="INFO"/>
<status status="PASS" starttime="20250619 06:35:20.064" endtime="20250619 06:35:20.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:20.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:20.065" endtime="20250619 06:35:20.065"/>
</kw>
<status status="PASS" starttime="20250619 06:35:16.959" endtime="20250619 06:35:20.066"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:20.068" level="INFO">Running command 'ozone sh bucket create o3://om:9862/77145-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:23.129" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:35:23.129" level="INFO">${output} = INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20250619 06:35:20.066" endtime="20250619 06:35:23.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:23.130" level="INFO">INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20250619 06:35:23.130" endtime="20250619 06:35:23.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:23.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:23.130" endtime="20250619 06:35:23.131"/>
</kw>
<msg timestamp="20250619 06:35:23.131" level="INFO">${result} = INVALID_BUCKET_NAME Invalid bucket name: bucket_1</msg>
<status status="PASS" starttime="20250619 06:35:20.066" endtime="20250619 06:35:23.131"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:35:23.131" endtime="20250619 06:35:23.131"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --space-quota 1.5GB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:23.134" level="INFO">Running command 'ozone sh bucket create o3://om:9862/77145-with-errors/bucket1 --space-quota 1.5GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:25.953" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:35:25.953" level="INFO">${output} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250619 06:35:23.132" endtime="20250619 06:35:25.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:25.954" level="INFO">1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250619 06:35:25.954" endtime="20250619 06:35:25.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:25.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:25.954" endtime="20250619 06:35:25.955"/>
</kw>
<msg timestamp="20250619 06:35:25.955" level="INFO">${result} = 1.5GB is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250619 06:35:23.131" endtime="20250619 06:35:25.955"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5GB is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:35:25.955" endtime="20250619 06:35:25.955"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:25.958" level="INFO">Running command 'ozone sh bucket create o3://om:9862/77145-with-errors/bucket1 --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:28.788" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:35:28.788" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250619 06:35:25.956" endtime="20250619 06:35:28.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:28.789" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250619 06:35:28.789" endtime="20250619 06:35:28.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:28.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:28.790" endtime="20250619 06:35:28.790"/>
</kw>
<msg timestamp="20250619 06:35:28.791" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250619 06:35:25.955" endtime="20250619 06:35:28.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:35:28.791" endtime="20250619 06:35:28.791"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:28.793" level="INFO">Running command 'ozone sh bucket create o3://om:9862/77145-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:29.867" level="INFO">${rc} = 2</msg>
<msg timestamp="20250619 06:35:29.867" level="INFO">${output} = Invalid value for option '--layout': cannot convert 'Invalid' to BucketLayout (java.lang.IllegalArgumentException: Unknown bucket layout: Invalid)
Usage: ozone sh bucket create [-ghV] [--verbose] [-k=...</msg>
<status status="PASS" starttime="20250619 06:35:28.791" endtime="20250619 06:35:29.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:29.868" level="INFO">Invalid value for option '--layout': cannot convert 'Invalid' to BucketLayout (java.lang.IllegalArgumentException: Unknown bucket layout: Invalid)
Usage: ozone sh bucket create [-ghV] [--verbose] [-k=&lt;bekName&gt;]
                              [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the bucket (format: volume/bucket).
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: fso (for file system
                             optimized buckets FILE_SYSTEM_OPTIMIZED), obs (for
                             object store optimized OBJECT_STORE) and legacy
                             (LEGACY is Deprecated)
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.
      --verbose            More verbose output. Show the stack trace of the
                             errors.</msg>
<status status="PASS" starttime="20250619 06:35:29.867" endtime="20250619 06:35:29.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:29.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:29.868" endtime="20250619 06:35:29.869"/>
</kw>
<msg timestamp="20250619 06:35:29.869" level="INFO">${result} = Invalid value for option '--layout': cannot convert 'Invalid' to BucketLayout (java.lang.IllegalArgumentException: Unknown bucket layout: Invalid)
Usage: ozone sh bucket create [-ghV] [--verbose] [-k=...</msg>
<status status="PASS" starttime="20250619 06:35:28.791" endtime="20250619 06:35:29.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:35:29.869" endtime="20250619 06:35:29.869"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:29.872" level="INFO">Running command 'ozone sh bucket create o3://om:9862/77145-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:32.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:35:32.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:35:29.870" endtime="20250619 06:35:32.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:32.913" level="INFO"/>
<status status="PASS" starttime="20250619 06:35:32.912" endtime="20250619 06:35:32.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:32.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:32.913" endtime="20250619 06:35:32.913"/>
</kw>
<status status="PASS" starttime="20250619 06:35:29.869" endtime="20250619 06:35:32.913"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:32.916" level="INFO">Running command 'ozone sh key info o3://om:9862/77145-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:35.933" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:35:35.933" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20250619 06:35:32.914" endtime="20250619 06:35:35.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:35.934" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20250619 06:35:35.934" endtime="20250619 06:35:35.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:35.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:35.935" endtime="20250619 06:35:35.935"/>
</kw>
<msg timestamp="20250619 06:35:35.935" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20250619 06:35:32.913" endtime="20250619 06:35:35.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:35:35.935" endtime="20250619 06:35:35.935"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:35.938" level="INFO">Running command 'ozone sh key put o3://om:9862/77145-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:36.996" level="INFO">${rc} = 2</msg>
<msg timestamp="20250619 06:35:36.997" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20250619 06:35:35.936" endtime="20250619 06:35:36.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:36.997" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--type'. No enum constant org.apache.hadoop.hdds.client.ReplicationType.invalid. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [--verbose]
                        [--expectedGeneration=&lt;expectedGeneration&gt;]
                        [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt; &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the key (format: volume/bucket/key).
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
      --expectedGeneration=&lt;expectedGeneration&gt;
                   Store key only if it already exists and its generation
                     matches the value provided
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.
      --verbose    More verbose output. Show the stack trace of the errors.</msg>
<status status="PASS" starttime="20250619 06:35:36.997" endtime="20250619 06:35:36.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:36.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:36.998" endtime="20250619 06:35:36.998"/>
</kw>
<msg timestamp="20250619 06:35:36.998" level="INFO">${result} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with invalid (java.lang.IllegalArgumentException: Invalid value 'invalid' for option '--typ...</msg>
<status status="PASS" starttime="20250619 06:35:35.936" endtime="20250619 06:35:36.998"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${volume}/bucket1 --space-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:37.001" level="INFO">Running command 'ozone sh bucket setquota 77145-with-errors/bucket1 --space-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:40.038" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:35:40.038" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250619 06:35:36.999" endtime="20250619 06:35:40.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:40.039" level="INFO">1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250619 06:35:40.038" endtime="20250619 06:35:40.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:40.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:40.039" endtime="20250619 06:35:40.039"/>
</kw>
<msg timestamp="20250619 06:35:40.039" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250619 06:35:36.998" endtime="20250619 06:35:40.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:35:40.040" endtime="20250619 06:35:40.040"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${volume}/bucket1 --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:40.042" level="INFO">Running command 'ozone sh bucket setquota 77145-with-errors/bucket1 --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:42.894" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:35:42.894" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250619 06:35:40.040" endtime="20250619 06:35:42.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:42.895" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250619 06:35:42.895" endtime="20250619 06:35:42.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:42.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:42.895" endtime="20250619 06:35:42.896"/>
</kw>
<msg timestamp="20250619 06:35:42.896" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250619 06:35:40.040" endtime="20250619 06:35:42.896"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:35:42.896" endtime="20250619 06:35:42.896"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:42.899" level="INFO">Running command 'ozone sh volume setquota 77145-with-errors --space-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:45.907" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:35:45.908" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250619 06:35:42.897" endtime="20250619 06:35:45.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:45.908" level="INFO">1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250619 06:35:45.908" endtime="20250619 06:35:45.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:45.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:45.909" endtime="20250619 06:35:45.909"/>
</kw>
<msg timestamp="20250619 06:35:45.909" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer with byte numeration(B, KB, MB, GB and TB)</msg>
<status status="PASS" starttime="20250619 06:35:42.896" endtime="20250619 06:35:45.909"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:35:45.909" endtime="20250619 06:35:45.909"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --namespace-quota 1.5</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:45.912" level="INFO">Running command 'ozone sh volume setquota 77145-with-errors --namespace-quota 1.5 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:48.914" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:35:48.914" level="INFO">${output} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250619 06:35:45.910" endtime="20250619 06:35:48.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:48.914" level="INFO">1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250619 06:35:48.914" endtime="20250619 06:35:48.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:48.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:48.915" endtime="20250619 06:35:48.915"/>
</kw>
<msg timestamp="20250619 06:35:48.915" level="INFO">${result} = 1.5 is invalid. The quota value should be a positive integer</msg>
<status status="PASS" starttime="20250619 06:35:45.910" endtime="20250619 06:35:48.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:35:48.915" endtime="20250619 06:35:48.916"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket setquota ${volume}/bucket1 --space-quota 2KB</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:48.918" level="INFO">Running command 'ozone sh bucket setquota 77145-with-errors/bucket1 --space-quota 2KB 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:51.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:35:51.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:35:48.916" endtime="20250619 06:35:51.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:51.848" level="INFO"/>
<status status="PASS" starttime="20250619 06:35:51.847" endtime="20250619 06:35:51.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:51.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:51.848" endtime="20250619 06:35:51.848"/>
</kw>
<status status="PASS" starttime="20250619 06:35:48.916" endtime="20250619 06:35:51.849"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:51.851" level="INFO">Running command 'ozone sh key put 77145-with-errors/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:54.838" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:35:54.838" level="INFO">${output} = QUOTA_EXCEEDED The DiskSpace quota of bucket:bucket1 exceeded quotaInBytes: 2048 Bytes but diskspace consumed: 805306368 Bytes.</msg>
<status status="PASS" starttime="20250619 06:35:51.849" endtime="20250619 06:35:54.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:54.839" level="INFO">QUOTA_EXCEEDED The DiskSpace quota of bucket:bucket1 exceeded quotaInBytes: 2048 Bytes but diskspace consumed: 805306368 Bytes.</msg>
<status status="PASS" starttime="20250619 06:35:54.839" endtime="20250619 06:35:54.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:54.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:54.839" endtime="20250619 06:35:54.840"/>
</kw>
<msg timestamp="20250619 06:35:54.840" level="INFO">${result} = QUOTA_EXCEEDED The DiskSpace quota of bucket:bucket1 exceeded quotaInBytes: 2048 Bytes but diskspace consumed: 805306368 Bytes.</msg>
<status status="PASS" starttime="20250619 06:35:51.849" endtime="20250619 06:35:54.840"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_EXCEEDED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:35:54.840" endtime="20250619 06:35:54.840"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1KB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:54.843" level="INFO">Running command 'ozone sh volume setquota 77145-with-errors --space-quota 1KB 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:35:57.812" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:35:57.812" level="INFO">${output} = QUOTA_EXCEEDED Total buckets quota in this volume should not be greater than volume quota : the total space quota is:2048. But the volume space quota is:1024</msg>
<status status="PASS" starttime="20250619 06:35:54.841" endtime="20250619 06:35:57.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:35:57.813" level="INFO">QUOTA_EXCEEDED Total buckets quota in this volume should not be greater than volume quota : the total space quota is:2048. But the volume space quota is:1024</msg>
<status status="PASS" starttime="20250619 06:35:57.812" endtime="20250619 06:35:57.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:35:57.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:35:57.813" endtime="20250619 06:35:57.814"/>
</kw>
<msg timestamp="20250619 06:35:57.814" level="INFO">${result} = QUOTA_EXCEEDED Total buckets quota in this volume should not be greater than volume quota : the total space quota is:2048. But the volume space quota is:1024</msg>
<status status="PASS" starttime="20250619 06:35:54.840" endtime="20250619 06:35:57.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_EXCEEDED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:35:57.814" endtime="20250619 06:35:57.814"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket clrquota ${volume}/bucket1 --space-quota</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:35:57.817" level="INFO">Running command 'ozone sh bucket clrquota 77145-with-errors/bucket1 --space-quota 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:00.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:00.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:35:57.815" endtime="20250619 06:36:00.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:00.817" level="INFO"/>
<status status="PASS" starttime="20250619 06:36:00.817" endtime="20250619 06:36:00.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:00.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:00.817" endtime="20250619 06:36:00.818"/>
</kw>
<status status="PASS" starttime="20250619 06:35:57.814" endtime="20250619 06:36:00.818"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1GB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:00.820" level="INFO">Running command 'ozone sh volume setquota 77145-with-errors --space-quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:03.785" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:36:03.785" level="INFO">${output} = QUOTA_ERROR Can not set volume space quota on volume as some of buckets in this volume have no quota set.</msg>
<status status="PASS" starttime="20250619 06:36:00.818" endtime="20250619 06:36:03.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:03.786" level="INFO">QUOTA_ERROR Can not set volume space quota on volume as some of buckets in this volume have no quota set.</msg>
<status status="PASS" starttime="20250619 06:36:03.785" endtime="20250619 06:36:03.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:03.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:03.786" endtime="20250619 06:36:03.786"/>
</kw>
<msg timestamp="20250619 06:36:03.787" level="INFO">${result} = QUOTA_ERROR Can not set volume space quota on volume as some of buckets in this volume have no quota set.</msg>
<status status="PASS" starttime="20250619 06:36:00.818" endtime="20250619 06:36:03.787"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_ERROR</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:36:03.787" endtime="20250619 06:36:03.787"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:03.790" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/77145-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:06.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:06.626" level="INFO">${output} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250619 06:36:03.788" endtime="20250619 06:36:06.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:06.627" level="INFO">Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250619 06:36:06.627" endtime="20250619 06:36:06.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:06.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:06.627" endtime="20250619 06:36:06.628"/>
</kw>
<status status="PASS" starttime="20250619 06:36:03.787" endtime="20250619 06:36:06.628"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume setquota ${volume} --space-quota 1GB</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:06.630" level="INFO">Running command 'ozone sh volume setquota 77145-with-errors --space-quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:09.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:09.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:36:06.628" endtime="20250619 06:36:09.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:09.594" level="INFO"/>
<status status="PASS" starttime="20250619 06:36:09.593" endtime="20250619 06:36:09.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:09.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:09.594" endtime="20250619 06:36:09.594"/>
</kw>
<status status="PASS" starttime="20250619 06:36:06.628" endtime="20250619 06:36:09.594"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:09.597" level="INFO">Running command 'ozone sh bucket create o3://om:9862/77145-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:12.675" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:36:12.675" level="INFO">${output} = QUOTA_ERROR Bucket space quota in this volume should be set as volume space quota is already set.</msg>
<status status="PASS" starttime="20250619 06:36:09.595" endtime="20250619 06:36:12.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:12.676" level="INFO">QUOTA_ERROR Bucket space quota in this volume should be set as volume space quota is already set.</msg>
<status status="PASS" starttime="20250619 06:36:12.675" endtime="20250619 06:36:12.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:12.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:12.676" endtime="20250619 06:36:12.676"/>
</kw>
<msg timestamp="20250619 06:36:12.676" level="INFO">${result} = QUOTA_ERROR Bucket space quota in this volume should be set as volume space quota is already set.</msg>
<status status="PASS" starttime="20250619 06:36:09.594" endtime="20250619 06:36:12.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_ERROR</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250619 06:36:12.676" endtime="20250619 06:36:12.677"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:12.679" level="INFO">Running command 'ozone sh volume delete o3://om:9862/77145-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:15.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:15.604" level="INFO">${output} = Volume 77145-with-errors is deleted</msg>
<status status="PASS" starttime="20250619 06:36:12.677" endtime="20250619 06:36:15.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:15.605" level="INFO">Volume 77145-with-errors is deleted</msg>
<status status="PASS" starttime="20250619 06:36:15.605" endtime="20250619 06:36:15.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:15.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:15.606" endtime="20250619 06:36:15.606"/>
</kw>
<status status="PASS" starttime="20250619 06:36:12.677" endtime="20250619 06:36:15.606"/>
</kw>
<status status="PASS" starttime="20250619 06:35:11.176" endtime="20250619 06:36:15.606"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250619 06:35:11.082" endtime="20250619 06:36:15.606"/>
</test>
<test id="s1-s2-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:36:15.608" endtime="20250619 06:36:15.608"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:15.611" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:15.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:15.615" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:36:15.609" endtime="20250619 06:36:15.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:15.615" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:36:15.615" endtime="20250619 06:36:15.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:15.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:15.616" endtime="20250619 06:36:15.616"/>
</kw>
<status status="PASS" starttime="20250619 06:36:15.609" endtime="20250619 06:36:15.616"/>
</kw>
<msg timestamp="20250619 06:36:15.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:15.609" endtime="20250619 06:36:15.616"/>
</kw>
<msg timestamp="20250619 06:36:15.616" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:36:15.608" endtime="20250619 06:36:15.616"/>
</kw>
<msg timestamp="20250619 06:36:15.616" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:36:15.608" endtime="20250619 06:36:15.616"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:36:15.617" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:36:15.617" endtime="20250619 06:36:15.617"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:15.620" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:15.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:15.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:36:15.618" endtime="20250619 06:36:15.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:15.699" level="INFO"/>
<status status="PASS" starttime="20250619 06:36:15.698" endtime="20250619 06:36:15.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:15.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:15.699" endtime="20250619 06:36:15.699"/>
</kw>
<status status="PASS" starttime="20250619 06:36:15.618" endtime="20250619 06:36:15.699"/>
</kw>
<msg timestamp="20250619 06:36:15.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:15.617" endtime="20250619 06:36:15.699"/>
</kw>
<status status="PASS" starttime="20250619 06:36:15.617" endtime="20250619 06:36:15.699"/>
</kw>
<status status="PASS" starttime="20250619 06:36:15.617" endtime="20250619 06:36:15.699"/>
</kw>
<status status="PASS" starttime="20250619 06:36:15.608" endtime="20250619 06:36:15.700"/>
</kw>
<status status="PASS" starttime="20250619 06:36:15.607" endtime="20250619 06:36:15.700"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:15.703" level="INFO">Running command 'ozone sh volume create o3://om:9862/77145-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:18.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:18.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:36:15.701" endtime="20250619 06:36:18.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:18.667" level="INFO"/>
<status status="PASS" starttime="20250619 06:36:18.666" endtime="20250619 06:36:18.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:18.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:18.667" endtime="20250619 06:36:18.667"/>
</kw>
<status status="PASS" starttime="20250619 06:36:15.701" endtime="20250619 06:36:18.667"/>
</kw>
<msg timestamp="20250619 06:36:18.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:15.700" endtime="20250619 06:36:18.667"/>
</kw>
<status status="PASS" starttime="20250619 06:36:15.700" endtime="20250619 06:36:18.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:18.671" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/77145-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:21.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:21.927" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250619 06:36:18.668" endtime="20250619 06:36:21.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:21.928" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
} ]</msg>
<status status="PASS" starttime="20250619 06:36:21.928" endtime="20250619 06:36:21.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:21.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:21.929" endtime="20250619 06:36:21.929"/>
</kw>
<status status="PASS" starttime="20250619 06:36:18.668" endtime="20250619 06:36:21.929"/>
</kw>
<msg timestamp="20250619 06:36:21.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:18.668" endtime="20250619 06:36:21.929"/>
</kw>
<msg timestamp="20250619 06:36:21.929" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250619 06:36:18.668" endtime="20250619 06:36:21.929"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:21.933" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
} ]' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:21.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:21.938" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250619 06:36:21.930" endtime="20250619 06:36:21.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:21.939" level="INFO">testuser</msg>
<status status="PASS" starttime="20250619 06:36:21.938" endtime="20250619 06:36:21.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:21.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:21.939" endtime="20250619 06:36:21.939"/>
</kw>
<status status="PASS" starttime="20250619 06:36:21.930" endtime="20250619 06:36:21.939"/>
</kw>
<msg timestamp="20250619 06:36:21.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:21.930" endtime="20250619 06:36:21.939"/>
</kw>
<msg timestamp="20250619 06:36:21.939" level="INFO">${acl_check} = testuser</msg>
<status status="PASS" starttime="20250619 06:36:21.929" endtime="20250619 06:36:21.939"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${acl_check}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250619 06:36:21.940" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20250619 06:36:21.940" endtime="20250619 06:36:21.940"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:21.943" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/77145-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:24.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:24.854" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20250619 06:36:21.941" endtime="20250619 06:36:24.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:24.855" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20250619 06:36:24.854" endtime="20250619 06:36:24.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:24.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:24.855" endtime="20250619 06:36:24.855"/>
</kw>
<status status="PASS" starttime="20250619 06:36:21.940" endtime="20250619 06:36:24.855"/>
</kw>
<msg timestamp="20250619 06:36:24.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:21.940" endtime="20250619 06:36:24.856"/>
</kw>
<msg timestamp="20250619 06:36:24.856" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20250619 06:36:21.940" endtime="20250619 06:36:24.856"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:24.859" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/77145-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:27.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:27.988" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250619 06:36:24.857" endtime="20250619 06:36:27.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:27.990" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20250619 06:36:27.989" endtime="20250619 06:36:27.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:27.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:27.990" endtime="20250619 06:36:27.990"/>
</kw>
<status status="PASS" starttime="20250619 06:36:24.856" endtime="20250619 06:36:27.990"/>
</kw>
<msg timestamp="20250619 06:36:27.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:24.856" endtime="20250619 06:36:27.991"/>
</kw>
<msg timestamp="20250619 06:36:27.991" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250619 06:36:24.856" endtime="20250619 06:36:27.991"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:27.994" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:27.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:27.999" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250619 06:36:27.992" endtime="20250619 06:36:27.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:28.000" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250619 06:36:27.999" endtime="20250619 06:36:28.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:28.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:28.000" endtime="20250619 06:36:28.000"/>
</kw>
<status status="PASS" starttime="20250619 06:36:27.991" endtime="20250619 06:36:28.000"/>
</kw>
<msg timestamp="20250619 06:36:28.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:27.991" endtime="20250619 06:36:28.000"/>
</kw>
<msg timestamp="20250619 06:36:28.001" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250619 06:36:27.991" endtime="20250619 06:36:28.001"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:36:28.001" endtime="20250619 06:36:28.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:28.004" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/77145-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:30.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:30.990" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250619 06:36:28.002" endtime="20250619 06:36:30.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:30.991" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250619 06:36:30.990" endtime="20250619 06:36:30.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:30.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:30.991" endtime="20250619 06:36:30.991"/>
</kw>
<status status="PASS" starttime="20250619 06:36:28.001" endtime="20250619 06:36:30.991"/>
</kw>
<msg timestamp="20250619 06:36:30.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:28.001" endtime="20250619 06:36:30.992"/>
</kw>
<msg timestamp="20250619 06:36:30.992" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250619 06:36:28.001" endtime="20250619 06:36:30.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:30.995" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/77145-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:34.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:34.092" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250619 06:36:30.993" endtime="20250619 06:36:34.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:34.093" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20250619 06:36:34.093" endtime="20250619 06:36:34.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:34.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:34.094" endtime="20250619 06:36:34.094"/>
</kw>
<status status="PASS" starttime="20250619 06:36:30.992" endtime="20250619 06:36:34.094"/>
</kw>
<msg timestamp="20250619 06:36:34.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:30.992" endtime="20250619 06:36:34.094"/>
</kw>
<msg timestamp="20250619 06:36:34.094" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250619 06:36:30.992" endtime="20250619 06:36:34.094"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:34.098" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:34.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:34.103" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250619 06:36:34.095" endtime="20250619 06:36:34.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:34.104" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250619 06:36:34.103" endtime="20250619 06:36:34.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:34.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:34.104" endtime="20250619 06:36:34.104"/>
</kw>
<status status="PASS" starttime="20250619 06:36:34.095" endtime="20250619 06:36:34.104"/>
</kw>
<msg timestamp="20250619 06:36:34.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:34.095" endtime="20250619 06:36:34.104"/>
</kw>
<msg timestamp="20250619 06:36:34.104" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250619 06:36:34.094" endtime="20250619 06:36:34.104"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:36:34.105" endtime="20250619 06:36:34.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:34.108" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/77145-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:37.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:37.114" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250619 06:36:34.106" endtime="20250619 06:36:37.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:37.115" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250619 06:36:37.115" endtime="20250619 06:36:37.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:37.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:37.116" endtime="20250619 06:36:37.116"/>
</kw>
<status status="PASS" starttime="20250619 06:36:34.106" endtime="20250619 06:36:37.116"/>
</kw>
<msg timestamp="20250619 06:36:37.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:34.105" endtime="20250619 06:36:37.116"/>
</kw>
<msg timestamp="20250619 06:36:37.116" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250619 06:36:34.105" endtime="20250619 06:36:37.116"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:37.119" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/77145-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:40.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:40.281" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250619 06:36:37.117" endtime="20250619 06:36:40.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:40.282" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250619 06:36:40.281" endtime="20250619 06:36:40.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:40.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:40.282" endtime="20250619 06:36:40.282"/>
</kw>
<status status="PASS" starttime="20250619 06:36:37.117" endtime="20250619 06:36:40.282"/>
</kw>
<msg timestamp="20250619 06:36:40.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:37.117" endtime="20250619 06:36:40.283"/>
</kw>
<msg timestamp="20250619 06:36:40.283" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20250619 06:36:37.116" endtime="20250619 06:36:40.283"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:40.286" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:40.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:40.291" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250619 06:36:40.284" endtime="20250619 06:36:40.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:40.292" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250619 06:36:40.291" endtime="20250619 06:36:40.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:40.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:40.292" endtime="20250619 06:36:40.292"/>
</kw>
<status status="PASS" starttime="20250619 06:36:40.283" endtime="20250619 06:36:40.292"/>
</kw>
<msg timestamp="20250619 06:36:40.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:40.283" endtime="20250619 06:36:40.293"/>
</kw>
<msg timestamp="20250619 06:36:40.293" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250619 06:36:40.283" endtime="20250619 06:36:40.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:36:40.293" endtime="20250619 06:36:40.293"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:40.296" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclSet" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ],
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclSet" : [ "ALL" ],
  "aclList" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:40.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:40.301" level="INFO">${output} = superuser1</msg>
<status status="PASS" starttime="20250619 06:36:40.294" endtime="20250619 06:36:40.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:40.301" level="INFO">superuser1</msg>
<status status="PASS" starttime="20250619 06:36:40.301" endtime="20250619 06:36:40.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:40.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:40.302" endtime="20250619 06:36:40.302"/>
</kw>
<status status="PASS" starttime="20250619 06:36:40.294" endtime="20250619 06:36:40.302"/>
</kw>
<msg timestamp="20250619 06:36:40.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:40.293" endtime="20250619 06:36:40.302"/>
</kw>
<msg timestamp="20250619 06:36:40.302" level="INFO">${acl_check} = superuser1</msg>
<status status="PASS" starttime="20250619 06:36:40.293" endtime="20250619 06:36:40.302"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250619 06:36:40.302" endtime="20250619 06:36:40.303"/>
</kw>
<status status="PASS" starttime="20250619 06:36:15.700" endtime="20250619 06:36:40.303"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250619 06:36:15.607" endtime="20250619 06:36:40.303"/>
</test>
<test id="s1-s2-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:36:40.304" endtime="20250619 06:36:40.304"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:40.308" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:40.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:40.311" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:36:40.306" endtime="20250619 06:36:40.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:40.312" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:36:40.311" endtime="20250619 06:36:40.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:40.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:40.312" endtime="20250619 06:36:40.312"/>
</kw>
<status status="PASS" starttime="20250619 06:36:40.305" endtime="20250619 06:36:40.312"/>
</kw>
<msg timestamp="20250619 06:36:40.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:40.305" endtime="20250619 06:36:40.312"/>
</kw>
<msg timestamp="20250619 06:36:40.312" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:36:40.305" endtime="20250619 06:36:40.312"/>
</kw>
<msg timestamp="20250619 06:36:40.313" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:36:40.305" endtime="20250619 06:36:40.313"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:36:40.313" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:36:40.313" endtime="20250619 06:36:40.313"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:40.316" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:40.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:40.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:36:40.314" endtime="20250619 06:36:40.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:40.408" level="INFO"/>
<status status="PASS" starttime="20250619 06:36:40.407" endtime="20250619 06:36:40.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:40.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:40.408" endtime="20250619 06:36:40.408"/>
</kw>
<status status="PASS" starttime="20250619 06:36:40.314" endtime="20250619 06:36:40.408"/>
</kw>
<msg timestamp="20250619 06:36:40.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:40.314" endtime="20250619 06:36:40.408"/>
</kw>
<status status="PASS" starttime="20250619 06:36:40.313" endtime="20250619 06:36:40.408"/>
</kw>
<status status="PASS" starttime="20250619 06:36:40.313" endtime="20250619 06:36:40.409"/>
</kw>
<status status="PASS" starttime="20250619 06:36:40.304" endtime="20250619 06:36:40.409"/>
</kw>
<status status="PASS" starttime="20250619 06:36:40.304" endtime="20250619 06:36:40.409"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:40.412" level="INFO">Running command 'ozone sh bucket create o3://om:9862/77145-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:43.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:43.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:36:40.410" endtime="20250619 06:36:43.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:43.471" level="INFO"/>
<status status="PASS" starttime="20250619 06:36:43.471" endtime="20250619 06:36:43.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:43.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:43.471" endtime="20250619 06:36:43.472"/>
</kw>
<status status="PASS" starttime="20250619 06:36:40.410" endtime="20250619 06:36:43.472"/>
</kw>
<msg timestamp="20250619 06:36:43.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:40.410" endtime="20250619 06:36:43.472"/>
</kw>
<status status="PASS" starttime="20250619 06:36:40.409" endtime="20250619 06:36:43.472"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:43.475" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/77145-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:46.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:46.553" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250619 06:36:43.473" endtime="20250619 06:36:46.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:46.554" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20250619 06:36:46.553" endtime="20250619 06:36:46.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:46.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:46.554" endtime="20250619 06:36:46.554"/>
</kw>
<status status="PASS" starttime="20250619 06:36:43.473" endtime="20250619 06:36:46.554"/>
</kw>
<msg timestamp="20250619 06:36:46.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:43.473" endtime="20250619 06:36:46.554"/>
</kw>
<msg timestamp="20250619 06:36:46.555" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclLi...</msg>
<status status="PASS" starttime="20250619 06:36:43.472" endtime="20250619 06:36:46.555"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:46.558" level="INFO">Running command 'echo '[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ],
  "aclSet" : [ "READ", "LIST" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ],
  "aclSet" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ],
  "aclSet" : [ "ALL" ]
} ]' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:36:46.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:36:46.563" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250619 06:36:46.556" endtime="20250619 06:36:46.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:36:46.563" level="INFO">testuser</msg>
<status status="PASS" starttime="20250619 06:36:46.563" endtime="20250619 06:36:46.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:36:46.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:36:46.564" endtime="20250619 06:36:46.564"/>
</kw>
<status status="PASS" starttime="20250619 06:36:46.555" endtime="20250619 06:36:46.564"/>
</kw>
<msg timestamp="20250619 06:36:46.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:36:46.555" endtime="20250619 06:36:46.564"/>
</kw>
<msg timestamp="20250619 06:36:46.564" level="INFO">${acl_check} = testuser</msg>
<status status="PASS" starttime="20250619 06:36:46.555" endtime="20250619 06:36:46.564"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${acl_check}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250619 06:36:46.565" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20250619 06:36:46.565" endtime="20250619 06:36:46.565"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:36:46.568" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/77145-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:46:40.304" level="FAIL">Test timeout 10 minutes exceeded.</msg>
<status status="FAIL" starttime="20250619 06:36:46.566" endtime="20250619 06:46:40.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20250619 06:46:40.304" endtime="20250619 06:46:40.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20250619 06:46:40.304" endtime="20250619 06:46:40.304"/>
</kw>
<status status="FAIL" starttime="20250619 06:36:46.565" endtime="20250619 06:46:40.304"/>
</kw>
<msg timestamp="20250619 06:46:40.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250619 06:36:46.565" endtime="20250619 06:46:40.305"/>
</kw>
<status status="FAIL" starttime="20250619 06:36:46.565" endtime="20250619 06:46:40.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250619 06:46:40.305" endtime="20250619 06:46:40.305"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:40.305" endtime="20250619 06:46:40.305"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:40.305" endtime="20250619 06:46:40.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<status status="NOT RUN" starttime="20250619 06:46:40.305" endtime="20250619 06:46:40.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250619 06:46:40.305" endtime="20250619 06:46:40.305"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:40.305" endtime="20250619 06:46:40.306"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:40.306" endtime="20250619 06:46:40.306"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<status status="NOT RUN" starttime="20250619 06:46:40.306" endtime="20250619 06:46:40.306"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250619 06:46:40.306" endtime="20250619 06:46:40.306"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:40.306" endtime="20250619 06:46:40.306"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:40.306" endtime="20250619 06:46:40.306"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:40.306" endtime="20250619 06:46:40.306"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:40.306" endtime="20250619 06:46:40.306"/>
</kw>
<status status="FAIL" starttime="20250619 06:36:40.409" endtime="20250619 06:46:40.306"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250619 06:36:40.303" endtime="20250619 06:46:40.307">Test timeout 10 minutes exceeded.</status>
</test>
<test id="s1-s2-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:46:40.308" endtime="20250619 06:46:40.308"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:46:40.313" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:46:40.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:46:40.317" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:46:40.310" endtime="20250619 06:46:40.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:46:40.318" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:46:40.318" endtime="20250619 06:46:40.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:46:40.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:46:40.318" endtime="20250619 06:46:40.319"/>
</kw>
<status status="PASS" starttime="20250619 06:46:40.309" endtime="20250619 06:46:40.319"/>
</kw>
<msg timestamp="20250619 06:46:40.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:46:40.309" endtime="20250619 06:46:40.319"/>
</kw>
<msg timestamp="20250619 06:46:40.319" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:46:40.309" endtime="20250619 06:46:40.319"/>
</kw>
<msg timestamp="20250619 06:46:40.319" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:46:40.308" endtime="20250619 06:46:40.319"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:46:40.320" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:46:40.319" endtime="20250619 06:46:40.320"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:46:40.323" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:46:40.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:46:40.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:46:40.321" endtime="20250619 06:46:40.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:46:40.402" level="INFO"/>
<status status="PASS" starttime="20250619 06:46:40.401" endtime="20250619 06:46:40.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:46:40.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:46:40.402" endtime="20250619 06:46:40.402"/>
</kw>
<status status="PASS" starttime="20250619 06:46:40.320" endtime="20250619 06:46:40.403"/>
</kw>
<msg timestamp="20250619 06:46:40.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:46:40.320" endtime="20250619 06:46:40.403"/>
</kw>
<status status="PASS" starttime="20250619 06:46:40.320" endtime="20250619 06:46:40.403"/>
</kw>
<status status="PASS" starttime="20250619 06:46:40.320" endtime="20250619 06:46:40.403"/>
</kw>
<status status="PASS" starttime="20250619 06:46:40.308" endtime="20250619 06:46:40.403"/>
</kw>
<status status="PASS" starttime="20250619 06:46:40.307" endtime="20250619 06:46:40.403"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:46:40.407" level="INFO">Running command 'ozone sh key put o3://om:9862/77145-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:46:41.627" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:46:41.627" level="INFO">${output} = Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250619 06:46:40.404" endtime="20250619 06:46:41.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:46:41.628" level="INFO">Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250619 06:46:41.627" endtime="20250619 06:46:41.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:46:41.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250619 06:46:41.628" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20250619 06:46:41.628" endtime="20250619 06:46:41.628"/>
</kw>
<status status="FAIL" starttime="20250619 06:46:40.404" endtime="20250619 06:46:41.629"/>
</kw>
<msg timestamp="20250619 06:46:41.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250619 06:46:40.404" endtime="20250619 06:46:41.629"/>
</kw>
<status status="FAIL" starttime="20250619 06:46:40.404" endtime="20250619 06:46:41.629"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20250619 06:46:41.629" endtime="20250619 06:46:41.629"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:41.629" endtime="20250619 06:46:41.629"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${acl_check}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="NOT RUN" starttime="20250619 06:46:41.629" endtime="20250619 06:46:41.629"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<status status="NOT RUN" starttime="20250619 06:46:41.629" endtime="20250619 06:46:41.629"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20250619 06:46:41.629" endtime="20250619 06:46:41.629"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:41.630" endtime="20250619 06:46:41.630"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:41.630" endtime="20250619 06:46:41.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<status status="NOT RUN" starttime="20250619 06:46:41.630" endtime="20250619 06:46:41.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20250619 06:46:41.630" endtime="20250619 06:46:41.630"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:41.630" endtime="20250619 06:46:41.630"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:41.630" endtime="20250619 06:46:41.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc</arg>
<status status="NOT RUN" starttime="20250619 06:46:41.630" endtime="20250619 06:46:41.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20250619 06:46:41.630" endtime="20250619 06:46:41.630"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:41.631" endtime="20250619 06:46:41.631"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:41.631" endtime="20250619 06:46:41.631"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:41.631" endtime="20250619 06:46:41.631"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:41.631" endtime="20250619 06:46:41.631"/>
</kw>
<status status="FAIL" starttime="20250619 06:46:40.403" endtime="20250619 06:46:41.631"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250619 06:46:40.307" endtime="20250619 06:46:41.631">255 != 0</status>
</test>
<test id="s1-s2-s5-t6" name="Test native authorizer" line="42">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:46:41.633" endtime="20250619 06:46:41.633"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:46:41.636" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:46:41.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:46:41.640" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:46:41.634" endtime="20250619 06:46:41.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:46:41.640" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:46:41.640" endtime="20250619 06:46:41.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:46:41.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:46:41.640" endtime="20250619 06:46:41.641"/>
</kw>
<status status="PASS" starttime="20250619 06:46:41.634" endtime="20250619 06:46:41.641"/>
</kw>
<msg timestamp="20250619 06:46:41.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:46:41.634" endtime="20250619 06:46:41.641"/>
</kw>
<msg timestamp="20250619 06:46:41.641" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:46:41.633" endtime="20250619 06:46:41.641"/>
</kw>
<msg timestamp="20250619 06:46:41.641" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:46:41.633" endtime="20250619 06:46:41.641"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:46:41.642" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:46:41.641" endtime="20250619 06:46:41.642"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:46:41.645" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:46:41.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:46:41.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:46:41.643" endtime="20250619 06:46:41.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:46:41.726" level="INFO"/>
<status status="PASS" starttime="20250619 06:46:41.725" endtime="20250619 06:46:41.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:46:41.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:46:41.726" endtime="20250619 06:46:41.726"/>
</kw>
<status status="PASS" starttime="20250619 06:46:41.643" endtime="20250619 06:46:41.726"/>
</kw>
<msg timestamp="20250619 06:46:41.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:46:41.642" endtime="20250619 06:46:41.726"/>
</kw>
<status status="PASS" starttime="20250619 06:46:41.642" endtime="20250619 06:46:41.727"/>
</kw>
<status status="PASS" starttime="20250619 06:46:41.642" endtime="20250619 06:46:41.727"/>
</kw>
<status status="PASS" starttime="20250619 06:46:41.633" endtime="20250619 06:46:41.727"/>
</kw>
<status status="PASS" starttime="20250619 06:46:41.632" endtime="20250619 06:46:41.727"/>
</kw>
<kw name="Test native authorizer" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250619 06:46:41.727" endtime="20250619 06:46:41.727"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a group:root:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:46:41.731" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/77145-acls -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:46:42.982" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:46:42.982" level="INFO">${output} = Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250619 06:46:41.728" endtime="20250619 06:46:42.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:46:42.983" level="INFO">Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250619 06:46:42.982" endtime="20250619 06:46:42.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:46:42.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250619 06:46:42.983" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20250619 06:46:42.983" endtime="20250619 06:46:42.983"/>
</kw>
<status status="FAIL" starttime="20250619 06:46:41.728" endtime="20250619 06:46:42.983"/>
</kw>
<msg timestamp="20250619 06:46:42.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250619 06:46:41.728" endtime="20250619 06:46:42.984"/>
</kw>
<status status="FAIL" starttime="20250619 06:46:41.728" endtime="20250619 06:46:42.984"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.984" endtime="20250619 06:46:42.984"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250619 06:46:42.984" endtime="20250619 06:46:42.984"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.984" endtime="20250619 06:46:42.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250619 06:46:42.984" endtime="20250619 06:46:42.985"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.985" endtime="20250619 06:46:42.985"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250619 06:46:42.985" endtime="20250619 06:46:42.985"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:xy</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.985" endtime="20250619 06:46:42.985"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250619 06:46:42.985" endtime="20250619 06:46:42.985"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.985" endtime="20250619 06:46:42.985"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250619 06:46:42.985" endtime="20250619 06:46:42.985"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:xyrw</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.985" endtime="20250619 06:46:42.985"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.985" endtime="20250619 06:46:42.985"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250619 06:46:42.985" endtime="20250619 06:46:42.986"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.986" endtime="20250619 06:46:42.986"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250619 06:46:42.986" endtime="20250619 06:46:42.986"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:l</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.986" endtime="20250619 06:46:42.986"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.986" endtime="20250619 06:46:42.986"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.986" endtime="20250619 06:46:42.986"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.986" endtime="20250619 06:46:42.986"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250619 06:46:42.986" endtime="20250619 06:46:42.986"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.986" endtime="20250619 06:46:42.986"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250619 06:46:42.986" endtime="20250619 06:46:42.986"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:testuser2:a</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.987" endtime="20250619 06:46:42.987"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.987" endtime="20250619 06:46:42.987"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.987" endtime="20250619 06:46:42.987"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250619 06:46:42.987" endtime="20250619 06:46:42.987"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.987" endtime="20250619 06:46:42.987"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.987" endtime="20250619 06:46:42.987"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250619 06:46:42.987" endtime="20250619 06:46:42.987"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250619 06:46:42.987" endtime="20250619 06:46:42.987"/>
</kw>
<status status="FAIL" starttime="20250619 06:46:41.727" endtime="20250619 06:46:42.987"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250619 06:46:41.632" endtime="20250619 06:46:42.988">255 != 0</status>
</test>
<test id="s1-s2-s5-t7" name="RpcClient prefix acls" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:46:42.989" endtime="20250619 06:46:42.989"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:46:42.992" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:46:42.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:46:42.996" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:46:42.990" endtime="20250619 06:46:42.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:46:42.997" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:46:42.996" endtime="20250619 06:46:42.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:46:42.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:46:42.997" endtime="20250619 06:46:42.997"/>
</kw>
<status status="PASS" starttime="20250619 06:46:42.990" endtime="20250619 06:46:42.997"/>
</kw>
<msg timestamp="20250619 06:46:42.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:46:42.990" endtime="20250619 06:46:42.997"/>
</kw>
<msg timestamp="20250619 06:46:42.998" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:46:42.989" endtime="20250619 06:46:42.998"/>
</kw>
<msg timestamp="20250619 06:46:42.998" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:46:42.989" endtime="20250619 06:46:42.998"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:46:42.998" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:46:42.998" endtime="20250619 06:46:42.998"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:46:43.001" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:46:43.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:46:43.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:46:42.999" endtime="20250619 06:46:43.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:46:43.082" level="INFO"/>
<status status="PASS" starttime="20250619 06:46:43.082" endtime="20250619 06:46:43.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:46:43.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:46:43.082" endtime="20250619 06:46:43.083"/>
</kw>
<status status="PASS" starttime="20250619 06:46:42.999" endtime="20250619 06:46:43.083"/>
</kw>
<msg timestamp="20250619 06:46:43.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:46:42.999" endtime="20250619 06:46:43.083"/>
</kw>
<status status="PASS" starttime="20250619 06:46:42.999" endtime="20250619 06:46:43.083"/>
</kw>
<status status="PASS" starttime="20250619 06:46:42.998" endtime="20250619 06:46:43.083"/>
</kw>
<status status="PASS" starttime="20250619 06:46:42.989" endtime="20250619 06:46:43.083"/>
</kw>
<status status="PASS" starttime="20250619 06:46:42.988" endtime="20250619 06:46:43.083"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:46:43.087" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/77145-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:46:44.369" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:46:44.369" level="INFO">${output} = Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250619 06:46:43.085" endtime="20250619 06:46:44.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:46:44.370" level="INFO">Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250619 06:46:44.369" endtime="20250619 06:46:44.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:46:44.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250619 06:46:44.370" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20250619 06:46:44.370" endtime="20250619 06:46:44.370"/>
</kw>
<status status="FAIL" starttime="20250619 06:46:43.085" endtime="20250619 06:46:44.371"/>
</kw>
<msg timestamp="20250619 06:46:44.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250619 06:46:43.084" endtime="20250619 06:46:44.371"/>
</kw>
<status status="FAIL" starttime="20250619 06:46:43.084" endtime="20250619 06:46:44.371"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<status status="NOT RUN" starttime="20250619 06:46:44.371" endtime="20250619 06:46:44.371"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:44.371" endtime="20250619 06:46:44.371"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:44.371" endtime="20250619 06:46:44.371"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<status status="NOT RUN" starttime="20250619 06:46:44.371" endtime="20250619 06:46:44.371"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<status status="NOT RUN" starttime="20250619 06:46:44.371" endtime="20250619 06:46:44.371"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:44.371" endtime="20250619 06:46:44.372"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:44.372" endtime="20250619 06:46:44.372"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser:rwxyc</arg>
<status status="NOT RUN" starttime="20250619 06:46:44.372" endtime="20250619 06:46:44.372"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<status status="NOT RUN" starttime="20250619 06:46:44.372" endtime="20250619 06:46:44.372"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:44.372" endtime="20250619 06:46:44.372"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:44.372" endtime="20250619 06:46:44.372"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:44.372" endtime="20250619 06:46:44.372"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:44.372" endtime="20250619 06:46:44.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20250619 06:46:44.372" endtime="20250619 06:46:44.372"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<status status="NOT RUN" starttime="20250619 06:46:44.372" endtime="20250619 06:46:44.373"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:44.373" endtime="20250619 06:46:44.373"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:44.373" endtime="20250619 06:46:44.373"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:46:44.373" endtime="20250619 06:46:44.373"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:46:44.373" endtime="20250619 06:46:44.373"/>
</kw>
<status status="FAIL" starttime="20250619 06:46:43.083" endtime="20250619 06:46:44.373"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250619 06:46:42.988" endtime="20250619 06:46:44.373">255 != 0</status>
</test>
<test id="s1-s2-s5-t8" name="RpcClient without host" line="48">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:46:44.375" endtime="20250619 06:46:44.375"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:46:44.378" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:46:44.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:46:44.382" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:46:44.376" endtime="20250619 06:46:44.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:46:44.383" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:46:44.382" endtime="20250619 06:46:44.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:46:44.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:46:44.383" endtime="20250619 06:46:44.383"/>
</kw>
<status status="PASS" starttime="20250619 06:46:44.376" endtime="20250619 06:46:44.383"/>
</kw>
<msg timestamp="20250619 06:46:44.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:46:44.375" endtime="20250619 06:46:44.383"/>
</kw>
<msg timestamp="20250619 06:46:44.384" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:46:44.375" endtime="20250619 06:46:44.384"/>
</kw>
<msg timestamp="20250619 06:46:44.384" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:46:44.375" endtime="20250619 06:46:44.384"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:46:44.384" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:46:44.384" endtime="20250619 06:46:44.384"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:46:44.388" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:46:44.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:46:44.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:46:44.386" endtime="20250619 06:46:44.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:46:44.443" level="INFO"/>
<status status="PASS" starttime="20250619 06:46:44.442" endtime="20250619 06:46:44.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:46:44.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:46:44.443" endtime="20250619 06:46:44.443"/>
</kw>
<status status="PASS" starttime="20250619 06:46:44.385" endtime="20250619 06:46:44.443"/>
</kw>
<msg timestamp="20250619 06:46:44.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:46:44.385" endtime="20250619 06:46:44.443"/>
</kw>
<status status="PASS" starttime="20250619 06:46:44.385" endtime="20250619 06:46:44.443"/>
</kw>
<status status="PASS" starttime="20250619 06:46:44.384" endtime="20250619 06:46:44.444"/>
</kw>
<status status="PASS" starttime="20250619 06:46:44.374" endtime="20250619 06:46:44.444"/>
</kw>
<status status="PASS" starttime="20250619 06:46:44.374" endtime="20250619 06:46:44.444"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:46:44.447" level="INFO">Running command 'ozone sh volume info o3:///77145-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:56:44.375" level="FAIL">Test timeout 10 minutes exceeded.</msg>
<status status="FAIL" starttime="20250619 06:46:44.445" endtime="20250619 06:56:44.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.375" endtime="20250619 06:56:44.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.375" endtime="20250619 06:56:44.375"/>
</kw>
<status status="FAIL" starttime="20250619 06:46:44.445" endtime="20250619 06:56:44.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.375" endtime="20250619 06:56:44.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.376" endtime="20250619 06:56:44.376"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.376" endtime="20250619 06:56:44.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.376" endtime="20250619 06:56:44.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.376" endtime="20250619 06:56:44.376"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.376" endtime="20250619 06:56:44.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.376" endtime="20250619 06:56:44.376"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.376" endtime="20250619 06:56:44.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.376" endtime="20250619 06:56:44.377"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.377" endtime="20250619 06:56:44.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.377" endtime="20250619 06:56:44.377"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.377" endtime="20250619 06:56:44.377"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.377" endtime="20250619 06:56:44.377"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.377" endtime="20250619 06:56:44.377"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.377" endtime="20250619 06:56:44.377"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.377" endtime="20250619 06:56:44.377"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.377" endtime="20250619 06:56:44.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.377" endtime="20250619 06:56:44.378"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.378" endtime="20250619 06:56:44.378"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.378" endtime="20250619 06:56:44.378"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.378" endtime="20250619 06:56:44.378"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.378" endtime="20250619 06:56:44.378"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.378" endtime="20250619 06:56:44.378"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.378" endtime="20250619 06:56:44.378"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.378" endtime="20250619 06:56:44.378"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.378" endtime="20250619 06:56:44.378"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.378" endtime="20250619 06:56:44.378"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.379" endtime="20250619 06:56:44.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.379" endtime="20250619 06:56:44.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.379" endtime="20250619 06:56:44.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.379" endtime="20250619 06:56:44.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.379" endtime="20250619 06:56:44.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.379" endtime="20250619 06:56:44.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.379" endtime="20250619 06:56:44.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.379" endtime="20250619 06:56:44.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.379" endtime="20250619 06:56:44.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.379" endtime="20250619 06:56:44.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.380" endtime="20250619 06:56:44.380"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.380" endtime="20250619 06:56:44.380"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.380" endtime="20250619 06:56:44.380"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.380" endtime="20250619 06:56:44.380"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.380" endtime="20250619 06:56:44.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.380" endtime="20250619 06:56:44.380"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.380" endtime="20250619 06:56:44.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.380" endtime="20250619 06:56:44.380"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.380" endtime="20250619 06:56:44.380"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.380" endtime="20250619 06:56:44.380"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.381" endtime="20250619 06:56:44.381"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.381" endtime="20250619 06:56:44.381"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.381" endtime="20250619 06:56:44.381"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.381" endtime="20250619 06:56:44.381"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250619 06:56:44.381" endtime="20250619 06:56:44.381"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.381" endtime="20250619 06:56:44.381"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250619 06:56:44.381" endtime="20250619 06:56:44.381"/>
</kw>
<status status="FAIL" starttime="20250619 06:46:44.444" endtime="20250619 06:56:44.381"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250619 06:46:44.374" endtime="20250619 06:56:44.381">Test timeout 10 minutes exceeded.</status>
</test>
<test id="s1-s2-s5-t9" name="RpcClient Delete key" line="51">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:56:44.383" endtime="20250619 06:56:44.383"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:56:44.387" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:56:44.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:56:44.390" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:56:44.385" endtime="20250619 06:56:44.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:56:44.391" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:56:44.391" endtime="20250619 06:56:44.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:56:44.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:56:44.391" endtime="20250619 06:56:44.392"/>
</kw>
<status status="PASS" starttime="20250619 06:56:44.384" endtime="20250619 06:56:44.392"/>
</kw>
<msg timestamp="20250619 06:56:44.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:56:44.384" endtime="20250619 06:56:44.392"/>
</kw>
<msg timestamp="20250619 06:56:44.392" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:56:44.384" endtime="20250619 06:56:44.392"/>
</kw>
<msg timestamp="20250619 06:56:44.392" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:56:44.383" endtime="20250619 06:56:44.392"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:56:44.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:56:44.393" endtime="20250619 06:56:44.393"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:56:44.396" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:56:44.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:56:44.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:56:44.394" endtime="20250619 06:56:44.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:56:44.475" level="INFO"/>
<status status="PASS" starttime="20250619 06:56:44.474" endtime="20250619 06:56:44.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:56:44.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:56:44.475" endtime="20250619 06:56:44.475"/>
</kw>
<status status="PASS" starttime="20250619 06:56:44.394" endtime="20250619 06:56:44.475"/>
</kw>
<msg timestamp="20250619 06:56:44.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:56:44.394" endtime="20250619 06:56:44.475"/>
</kw>
<status status="PASS" starttime="20250619 06:56:44.393" endtime="20250619 06:56:44.475"/>
</kw>
<status status="PASS" starttime="20250619 06:56:44.393" endtime="20250619 06:56:44.475"/>
</kw>
<status status="PASS" starttime="20250619 06:56:44.383" endtime="20250619 06:56:44.476"/>
</kw>
<status status="PASS" starttime="20250619 06:56:44.382" endtime="20250619 06:56:44.476"/>
</kw>
<kw name="Test Delete key with Trash" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-del</arg>
<kw name="Ozone Shell Batch" library="shell">
<arg>volume create ${protocol}${server}/${volume}</arg>
<arg>bucket create ${protocol}${server}/${volume}/bfso --layout FILE_SYSTEM_OPTIMIZED</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/bfso/key3 /opt/hadoop/NOTICE.txt</arg>
<arg>key delete ${protocol}${server}/${volume}/bfso/key3</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250619 06:56:44.477" level="INFO">${cmd} = volume create o3://om:9862/77145-with-del' --execute 'bucket create o3://om:9862/77145-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED' --execute 'key put -t RATIS o3://om:9862/77145-with-del/bfso/key3 /...</msg>
<status status="PASS" starttime="20250619 06:56:44.477" endtime="20250619 06:56:44.477"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:56:44.480" level="INFO">Running command 'ozone sh --execute 'volume create o3://om:9862/77145-with-del' --execute 'bucket create o3://om:9862/77145-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED' --execute 'key put -t RATIS o3://om:9862/77145-with-del/bfso/key3 /opt/hadoop/NOTICE.txt' --execute 'key delete o3://om:9862/77145-with-del/bfso/key3' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:56:46.048" level="INFO">${rc} = 255</msg>
<msg timestamp="20250619 06:56:46.048" level="INFO">${output} = volume create o3://om:9862/77145-with-del
Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250619 06:56:44.478" endtime="20250619 06:56:46.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:56:46.049" level="INFO">volume create o3://om:9862/77145-with-del
Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250619 06:56:46.048" endtime="20250619 06:56:46.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:56:46.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250619 06:56:46.049" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20250619 06:56:46.049" endtime="20250619 06:56:46.049"/>
</kw>
<status status="FAIL" starttime="20250619 06:56:44.477" endtime="20250619 06:56:46.050"/>
</kw>
<msg timestamp="20250619 06:56:46.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250619 06:56:44.477" endtime="20250619 06:56:46.050"/>
</kw>
<status status="FAIL" starttime="20250619 06:56:44.476" endtime="20250619 06:56:46.050"/>
</kw>
<kw name="Execute" library="os">
<var>${fsokey}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bfso</arg>
<status status="NOT RUN" starttime="20250619 06:56:46.050" endtime="20250619 06:56:46.050"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${fsokey}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:56:46.050" endtime="20250619 06:56:46.050"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="NOT RUN" starttime="20250619 06:56:46.050" endtime="20250619 06:56:46.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250619 06:56:46.050" endtime="20250619 06:56:46.050"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${fsokey}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<status status="NOT RUN" starttime="20250619 06:56:46.050" endtime="20250619 06:56:46.050"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key3</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250619 06:56:46.050" endtime="20250619 06:56:46.051"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket create ${protocol}${server}/${volume}/obsbkt --layout OBJECT_STORE</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/obsbkt/key2 /opt/hadoop/NOTICE.txt</arg>
<arg>key delete ${protocol}${server}/${volume}/obsbkt/key2</arg>
<status status="NOT RUN" starttime="20250619 06:56:46.051" endtime="20250619 06:56:46.051"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/obsbkt</arg>
<status status="NOT RUN" starttime="20250619 06:56:46.051" endtime="20250619 06:56:46.051"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250619 06:56:46.051" endtime="20250619 06:56:46.051"/>
</kw>
<status status="FAIL" starttime="20250619 06:56:44.476" endtime="20250619 06:56:46.051"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250619 06:56:44.382" endtime="20250619 06:56:46.051">255 != 0</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20250619 06:33:15.490" endtime="20250619 06:56:46.052"/>
</suite>
<suite id="s1-s2-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s2-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250619 06:56:46.061" endtime="20250619 06:56:46.061"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:56:46.065" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:56:46.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:56:46.068" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250619 06:56:46.062" endtime="20250619 06:56:46.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:56:46.069" level="INFO">scm</msg>
<status status="PASS" starttime="20250619 06:56:46.069" endtime="20250619 06:56:46.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:56:46.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:56:46.069" endtime="20250619 06:56:46.070"/>
</kw>
<status status="PASS" starttime="20250619 06:56:46.062" endtime="20250619 06:56:46.070"/>
</kw>
<msg timestamp="20250619 06:56:46.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:56:46.062" endtime="20250619 06:56:46.070"/>
</kw>
<msg timestamp="20250619 06:56:46.070" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250619 06:56:46.061" endtime="20250619 06:56:46.070"/>
</kw>
<msg timestamp="20250619 06:56:46.070" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:56:46.061" endtime="20250619 06:56:46.070"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250619 06:56:46.071" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250619 06:56:46.070" endtime="20250619 06:56:46.071"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:56:46.074" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 06:56:46.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20250619 06:56:46.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250619 06:56:46.072" endtime="20250619 06:56:46.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250619 06:56:46.144" level="INFO"/>
<status status="PASS" starttime="20250619 06:56:46.143" endtime="20250619 06:56:46.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250619 06:56:46.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250619 06:56:46.144" endtime="20250619 06:56:46.144"/>
</kw>
<status status="PASS" starttime="20250619 06:56:46.072" endtime="20250619 06:56:46.144"/>
</kw>
<msg timestamp="20250619 06:56:46.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250619 06:56:46.072" endtime="20250619 06:56:46.145"/>
</kw>
<status status="PASS" starttime="20250619 06:56:46.071" endtime="20250619 06:56:46.145"/>
</kw>
<status status="PASS" starttime="20250619 06:56:46.071" endtime="20250619 06:56:46.145"/>
</kw>
<status status="PASS" starttime="20250619 06:56:46.061" endtime="20250619 06:56:46.145"/>
</kw>
<status status="PASS" starttime="20250619 06:56:46.060" endtime="20250619 06:56:46.145"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250619 06:56:46.145" level="INFO">${random} = 0Jz6Mpe7X5</msg>
<status status="PASS" starttime="20250619 06:56:46.145" endtime="20250619 06:56:46.145"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250619 06:56:46.149" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 0Jz6Mpe7X5 --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250619 07:01:46.060" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20250619 06:56:46.147" endtime="20250619 07:01:46.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20250619 07:01:46.061" endtime="20250619 07:01:46.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20250619 07:01:46.061" endtime="20250619 07:01:46.061"/>
</kw>
<status status="FAIL" starttime="20250619 06:56:46.146" endtime="20250619 07:01:46.061"/>
</kw>
<msg timestamp="20250619 07:01:46.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250619 06:56:46.146" endtime="20250619 07:01:46.061"/>
</kw>
<status status="FAIL" starttime="20250619 06:56:46.146" endtime="20250619 07:01:46.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250619 07:01:46.062" endtime="20250619 07:01:46.062"/>
</kw>
<status status="FAIL" starttime="20250619 06:56:46.145" endtime="20250619 07:01:46.062"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<status status="NOT RUN" starttime="20250619 07:01:46.062" endtime="20250619 07:01:46.062"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250619 06:56:46.060" endtime="20250619 07:01:46.062">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest for one datanode</doc>
<status status="FAIL" starttime="20250619 06:56:46.054" endtime="20250619 07:01:46.063"/>
</suite>
<status status="FAIL" starttime="20250619 06:26:57.939" endtime="20250619 07:01:46.065"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2088254"/>
</suite>
<statistics>
<total>
<stat pass="29" fail="7" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="29" fail="7" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure.Kinit</stat>
<stat pass="28" fail="7" skip="0" id="s1-s2" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="18" fail="0" skip="0" id="s1-s2-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="3" fail="6" skip="0" id="s1-s2-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="0" fail="1" skip="0" id="s1-s2-s6" name="Single Node">ozonesecure.Basic.Single Node</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
