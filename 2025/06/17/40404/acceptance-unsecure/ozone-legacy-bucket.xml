<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250617 21:31:14.899" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:20.311" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:20.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:20.316" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250617 21:30:20.309" endtime="20250617 21:30:20.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:20.316" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250617 21:30:20.316" endtime="20250617 21:30:20.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:20.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:20.316" endtime="20250617 21:30:20.317"/>
</kw>
<status status="PASS" starttime="20250617 21:30:20.309" endtime="20250617 21:30:20.317"/>
</kw>
<msg timestamp="20250617 21:30:20.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:20.309" endtime="20250617 21:30:20.317"/>
</kw>
<status status="PASS" starttime="20250617 21:30:20.308" endtime="20250617 21:30:20.317"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:30:20.317" endtime="20250617 21:30:20.318"/>
</kw>
<status status="PASS" starttime="20250617 21:30:20.317" endtime="20250617 21:30:20.318"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:30:20.318" level="INFO">${random} = gibka</msg>
<status status="PASS" starttime="20250617 21:30:20.318" endtime="20250617 21:30:20.318"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:30:20.319" level="INFO">${VOLUME} = vol-gibka</msg>
<status status="PASS" starttime="20250617 21:30:20.318" endtime="20250617 21:30:20.319"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:20.321" level="INFO">Running command 'ozone sh volume create /vol-gibka 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:25.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:25.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:30:20.319" endtime="20250617 21:30:25.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:25.358" level="INFO"/>
<status status="PASS" starttime="20250617 21:30:25.358" endtime="20250617 21:30:25.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:25.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:25.359" endtime="20250617 21:30:25.359"/>
</kw>
<status status="PASS" starttime="20250617 21:30:20.319" endtime="20250617 21:30:25.359"/>
</kw>
<msg timestamp="20250617 21:30:25.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:20.319" endtime="20250617 21:30:25.359"/>
</kw>
<msg timestamp="20250617 21:30:25.359" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250617 21:30:20.319" endtime="20250617 21:30:25.359"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:25.359" endtime="20250617 21:30:25.360"/>
</kw>
<status status="PASS" starttime="20250617 21:30:20.318" endtime="20250617 21:30:25.360"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:30:20.308" endtime="20250617 21:30:25.360"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:30:25.361" level="INFO">${random} = vokgu</msg>
<status status="PASS" starttime="20250617 21:30:25.361" endtime="20250617 21:30:25.361"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:30:25.362" level="INFO">${BUCKET} = buc-vokgu</msg>
<status status="PASS" starttime="20250617 21:30:25.361" endtime="20250617 21:30:25.362"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:25.365" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-gibka/buc-vokgu 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:28.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:28.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:30:25.363" endtime="20250617 21:30:28.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:28.260" level="INFO"/>
<status status="PASS" starttime="20250617 21:30:28.260" endtime="20250617 21:30:28.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:28.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:28.260" endtime="20250617 21:30:28.261"/>
</kw>
<status status="PASS" starttime="20250617 21:30:25.362" endtime="20250617 21:30:28.261"/>
</kw>
<msg timestamp="20250617 21:30:28.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:25.362" endtime="20250617 21:30:28.261"/>
</kw>
<msg timestamp="20250617 21:30:28.261" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250617 21:30:25.362" endtime="20250617 21:30:28.261"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:28.261" endtime="20250617 21:30:28.262"/>
</kw>
<status status="PASS" starttime="20250617 21:30:25.361" endtime="20250617 21:30:28.262"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:30:25.360" endtime="20250617 21:30:28.262"/>
</test>
<test id="s1-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:28.266" level="INFO">Running command 'ozone sh key put /vol-gibka/buc-vokgu/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:33.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:33.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:30:28.264" endtime="20250617 21:30:33.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:33.125" level="INFO"/>
<status status="PASS" starttime="20250617 21:30:33.125" endtime="20250617 21:30:33.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:33.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:33.125" endtime="20250617 21:30:33.126"/>
</kw>
<status status="PASS" starttime="20250617 21:30:28.264" endtime="20250617 21:30:33.126"/>
</kw>
<msg timestamp="20250617 21:30:33.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:28.264" endtime="20250617 21:30:33.126"/>
</kw>
<msg timestamp="20250617 21:30:33.126" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250617 21:30:28.263" endtime="20250617 21:30:33.126"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:33.126" endtime="20250617 21:30:33.126"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:33.129" level="INFO">Running command 'ozone sh key put /vol-gibka/buc-vokgu/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:30:33.127" endtime="20250617 21:30:37.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.400" level="INFO"/>
<status status="PASS" starttime="20250617 21:30:37.399" endtime="20250617 21:30:37.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.400" endtime="20250617 21:30:37.400"/>
</kw>
<status status="PASS" starttime="20250617 21:30:33.127" endtime="20250617 21:30:37.400"/>
</kw>
<msg timestamp="20250617 21:30:37.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:33.127" endtime="20250617 21:30:37.401"/>
</kw>
<msg timestamp="20250617 21:30:37.401" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250617 21:30:33.126" endtime="20250617 21:30:37.401"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.401" endtime="20250617 21:30:37.401"/>
</kw>
<status status="PASS" starttime="20250617 21:30:28.263" endtime="20250617 21:30:37.401"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:30:28.262" endtime="20250617 21:30:37.401"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.405" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.410" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250617 21:30:37.403" endtime="20250617 21:30:37.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.411" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250617 21:30:37.410" endtime="20250617 21:30:37.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.411" endtime="20250617 21:30:37.412"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.403" endtime="20250617 21:30:37.412"/>
</kw>
<msg timestamp="20250617 21:30:37.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.403" endtime="20250617 21:30:37.412"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.403" endtime="20250617 21:30:37.412"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.416" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.551" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.414" endtime="20250617 21:30:37.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.552" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.552" endtime="20250617 21:30:37.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.552" endtime="20250617 21:30:37.553"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.413" endtime="20250617 21:30:37.553"/>
</kw>
<msg timestamp="20250617 21:30:37.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.413" endtime="20250617 21:30:37.553"/>
</kw>
<msg timestamp="20250617 21:30:37.554" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.413" endtime="20250617 21:30:37.554"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.554" endtime="20250617 21:30:37.554"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.554" endtime="20250617 21:30:37.554"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.554" endtime="20250617 21:30:37.555"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.554" endtime="20250617 21:30:37.555"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.554" endtime="20250617 21:30:37.555"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.412" endtime="20250617 21:30:37.555"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:30:37.555" endtime="20250617 21:30:37.556"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.555" endtime="20250617 21:30:37.556"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.561" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.571" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.557" endtime="20250617 21:30:37.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.572" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.571" endtime="20250617 21:30:37.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.572" endtime="20250617 21:30:37.572"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.557" endtime="20250617 21:30:37.573"/>
</kw>
<msg timestamp="20250617 21:30:37.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.557" endtime="20250617 21:30:37.573"/>
</kw>
<msg timestamp="20250617 21:30:37.573" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.556" endtime="20250617 21:30:37.573"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.573" endtime="20250617 21:30:37.573"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.573" endtime="20250617 21:30:37.573"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.573" endtime="20250617 21:30:37.574"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.573" endtime="20250617 21:30:37.574"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.573" endtime="20250617 21:30:37.574"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.556" endtime="20250617 21:30:37.574"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:30:37.574" endtime="20250617 21:30:37.574"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.574" endtime="20250617 21:30:37.574"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.577" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.586" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.575" endtime="20250617 21:30:37.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.587" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.586" endtime="20250617 21:30:37.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.587" endtime="20250617 21:30:37.587"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.575" endtime="20250617 21:30:37.587"/>
</kw>
<msg timestamp="20250617 21:30:37.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.575" endtime="20250617 21:30:37.588"/>
</kw>
<msg timestamp="20250617 21:30:37.588" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.575" endtime="20250617 21:30:37.588"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.588" endtime="20250617 21:30:37.588"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.588" endtime="20250617 21:30:37.588"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.588" endtime="20250617 21:30:37.588"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.588" endtime="20250617 21:30:37.588"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.588" endtime="20250617 21:30:37.589"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.574" endtime="20250617 21:30:37.589"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:30:37.589" endtime="20250617 21:30:37.589"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.589" endtime="20250617 21:30:37.589"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.592" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.600" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.590" endtime="20250617 21:30:37.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.601" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.601" endtime="20250617 21:30:37.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.601" endtime="20250617 21:30:37.602"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.590" endtime="20250617 21:30:37.602"/>
</kw>
<msg timestamp="20250617 21:30:37.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.590" endtime="20250617 21:30:37.602"/>
</kw>
<msg timestamp="20250617 21:30:37.602" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.590" endtime="20250617 21:30:37.602"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.602" endtime="20250617 21:30:37.602"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.602" endtime="20250617 21:30:37.602"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.603" endtime="20250617 21:30:37.603"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.602" endtime="20250617 21:30:37.603"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.602" endtime="20250617 21:30:37.603"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.589" endtime="20250617 21:30:37.603"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.402" endtime="20250617 21:30:37.603"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:30:37.402" endtime="20250617 21:30:37.603"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.607" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.611" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250617 21:30:37.605" endtime="20250617 21:30:37.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.611" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250617 21:30:37.611" endtime="20250617 21:30:37.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.612" endtime="20250617 21:30:37.612"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.605" endtime="20250617 21:30:37.612"/>
</kw>
<msg timestamp="20250617 21:30:37.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.605" endtime="20250617 21:30:37.612"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.604" endtime="20250617 21:30:37.612"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.615" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/usage?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.629" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.613" endtime="20250617 21:30:37.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.630" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.630" endtime="20250617 21:30:37.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.630" endtime="20250617 21:30:37.631"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.613" endtime="20250617 21:30:37.631"/>
</kw>
<msg timestamp="20250617 21:30:37.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.613" endtime="20250617 21:30:37.631"/>
</kw>
<msg timestamp="20250617 21:30:37.631" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.613" endtime="20250617 21:30:37.631"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.632" endtime="20250617 21:30:37.632"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.631" endtime="20250617 21:30:37.632"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.632" endtime="20250617 21:30:37.632"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.632" endtime="20250617 21:30:37.632"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.631" endtime="20250617 21:30:37.632"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.612" endtime="20250617 21:30:37.632"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:30:37.633" endtime="20250617 21:30:37.633"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.632" endtime="20250617 21:30:37.633"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.636" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/usage?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.645" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.634" endtime="20250617 21:30:37.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.646" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.645" endtime="20250617 21:30:37.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.646" endtime="20250617 21:30:37.646"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.634" endtime="20250617 21:30:37.646"/>
</kw>
<msg timestamp="20250617 21:30:37.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.634" endtime="20250617 21:30:37.647"/>
</kw>
<msg timestamp="20250617 21:30:37.647" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.633" endtime="20250617 21:30:37.647"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.647" endtime="20250617 21:30:37.647"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.647" endtime="20250617 21:30:37.647"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.647" endtime="20250617 21:30:37.647"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.647" endtime="20250617 21:30:37.647"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.647" endtime="20250617 21:30:37.647"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.633" endtime="20250617 21:30:37.648"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:30:37.648" endtime="20250617 21:30:37.648"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.648" endtime="20250617 21:30:37.648"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.651" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/usage?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.659" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.649" endtime="20250617 21:30:37.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.660" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.660" endtime="20250617 21:30:37.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.660" endtime="20250617 21:30:37.660"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.649" endtime="20250617 21:30:37.660"/>
</kw>
<msg timestamp="20250617 21:30:37.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.649" endtime="20250617 21:30:37.661"/>
</kw>
<msg timestamp="20250617 21:30:37.661" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.649" endtime="20250617 21:30:37.661"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.661" endtime="20250617 21:30:37.661"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.661" endtime="20250617 21:30:37.661"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.661" endtime="20250617 21:30:37.661"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.661" endtime="20250617 21:30:37.661"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.661" endtime="20250617 21:30:37.661"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.648" endtime="20250617 21:30:37.662"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:30:37.662" endtime="20250617 21:30:37.662"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.662" endtime="20250617 21:30:37.662"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.665" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/usage?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.673" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.663" endtime="20250617 21:30:37.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.674" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.673" endtime="20250617 21:30:37.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.674" endtime="20250617 21:30:37.674"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.663" endtime="20250617 21:30:37.675"/>
</kw>
<msg timestamp="20250617 21:30:37.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.663" endtime="20250617 21:30:37.675"/>
</kw>
<msg timestamp="20250617 21:30:37.675" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.662" endtime="20250617 21:30:37.675"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.675" endtime="20250617 21:30:37.675"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.675" endtime="20250617 21:30:37.675"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.675" endtime="20250617 21:30:37.676"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.675" endtime="20250617 21:30:37.676"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.675" endtime="20250617 21:30:37.676"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.662" endtime="20250617 21:30:37.676"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.604" endtime="20250617 21:30:37.676"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:30:37.604" endtime="20250617 21:30:37.676"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.680" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.684" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250617 21:30:37.678" endtime="20250617 21:30:37.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.684" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250617 21:30:37.684" endtime="20250617 21:30:37.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.684" endtime="20250617 21:30:37.685"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.677" endtime="20250617 21:30:37.685"/>
</kw>
<msg timestamp="20250617 21:30:37.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.677" endtime="20250617 21:30:37.685"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.677" endtime="20250617 21:30:37.685"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.688" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.698" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.686" endtime="20250617 21:30:37.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.699" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.698" endtime="20250617 21:30:37.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.699" endtime="20250617 21:30:37.699"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.686" endtime="20250617 21:30:37.699"/>
</kw>
<msg timestamp="20250617 21:30:37.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.686" endtime="20250617 21:30:37.699"/>
</kw>
<msg timestamp="20250617 21:30:37.699" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.685" endtime="20250617 21:30:37.699"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.700" endtime="20250617 21:30:37.700"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.700" endtime="20250617 21:30:37.700"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.700" endtime="20250617 21:30:37.700"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.700" endtime="20250617 21:30:37.700"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.700" endtime="20250617 21:30:37.700"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.685" endtime="20250617 21:30:37.700"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:30:37.701" endtime="20250617 21:30:37.701"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.700" endtime="20250617 21:30:37.701"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.704" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.712" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.702" endtime="20250617 21:30:37.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.713" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.713" endtime="20250617 21:30:37.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.713" endtime="20250617 21:30:37.713"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.702" endtime="20250617 21:30:37.714"/>
</kw>
<msg timestamp="20250617 21:30:37.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.702" endtime="20250617 21:30:37.714"/>
</kw>
<msg timestamp="20250617 21:30:37.714" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.701" endtime="20250617 21:30:37.714"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.714" endtime="20250617 21:30:37.714"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.714" endtime="20250617 21:30:37.714"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.714" endtime="20250617 21:30:37.715"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.714" endtime="20250617 21:30:37.715"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.714" endtime="20250617 21:30:37.715"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.701" endtime="20250617 21:30:37.715"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:30:37.715" endtime="20250617 21:30:37.715"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.715" endtime="20250617 21:30:37.715"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.718" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.727" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.717" endtime="20250617 21:30:37.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.727" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.727" endtime="20250617 21:30:37.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.728" endtime="20250617 21:30:37.728"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.716" endtime="20250617 21:30:37.728"/>
</kw>
<msg timestamp="20250617 21:30:37.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.716" endtime="20250617 21:30:37.728"/>
</kw>
<msg timestamp="20250617 21:30:37.728" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.716" endtime="20250617 21:30:37.728"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.729" endtime="20250617 21:30:37.729"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.728" endtime="20250617 21:30:37.729"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.729" endtime="20250617 21:30:37.729"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.729" endtime="20250617 21:30:37.729"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.728" endtime="20250617 21:30:37.729"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.716" endtime="20250617 21:30:37.729"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:30:37.730" endtime="20250617 21:30:37.730"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.729" endtime="20250617 21:30:37.730"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.733" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.741" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.731" endtime="20250617 21:30:37.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.742" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.741" endtime="20250617 21:30:37.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.742" endtime="20250617 21:30:37.742"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.731" endtime="20250617 21:30:37.742"/>
</kw>
<msg timestamp="20250617 21:30:37.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.730" endtime="20250617 21:30:37.742"/>
</kw>
<msg timestamp="20250617 21:30:37.742" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.730" endtime="20250617 21:30:37.742"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.743" endtime="20250617 21:30:37.743"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.743" endtime="20250617 21:30:37.743"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.743" endtime="20250617 21:30:37.743"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.743" endtime="20250617 21:30:37.743"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.743" endtime="20250617 21:30:37.743"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.730" endtime="20250617 21:30:37.743"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.677" endtime="20250617 21:30:37.743"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:30:37.676" endtime="20250617 21:30:37.744"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.748" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.752" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250617 21:30:37.746" endtime="20250617 21:30:37.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.753" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250617 21:30:37.752" endtime="20250617 21:30:37.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.753" endtime="20250617 21:30:37.753"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.745" endtime="20250617 21:30:37.753"/>
</kw>
<msg timestamp="20250617 21:30:37.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.745" endtime="20250617 21:30:37.753"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.745" endtime="20250617 21:30:37.754"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.757" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.769" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.755" endtime="20250617 21:30:37.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.770" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.769" endtime="20250617 21:30:37.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.770" endtime="20250617 21:30:37.770"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.754" endtime="20250617 21:30:37.770"/>
</kw>
<msg timestamp="20250617 21:30:37.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.754" endtime="20250617 21:30:37.770"/>
</kw>
<msg timestamp="20250617 21:30:37.770" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.754" endtime="20250617 21:30:37.771"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.771" endtime="20250617 21:30:37.771"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.771" endtime="20250617 21:30:37.771"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.771" endtime="20250617 21:30:37.771"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.771" endtime="20250617 21:30:37.771"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.771" endtime="20250617 21:30:37.771"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.754" endtime="20250617 21:30:37.771"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:30:37.772" endtime="20250617 21:30:37.772"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.771" endtime="20250617 21:30:37.772"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.775" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.783" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.773" endtime="20250617 21:30:37.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.784" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.783" endtime="20250617 21:30:37.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.784" endtime="20250617 21:30:37.784"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.773" endtime="20250617 21:30:37.784"/>
</kw>
<msg timestamp="20250617 21:30:37.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.773" endtime="20250617 21:30:37.784"/>
</kw>
<msg timestamp="20250617 21:30:37.785" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.772" endtime="20250617 21:30:37.785"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.785" endtime="20250617 21:30:37.785"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.785" endtime="20250617 21:30:37.785"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.785" endtime="20250617 21:30:37.785"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.785" endtime="20250617 21:30:37.785"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.785" endtime="20250617 21:30:37.785"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.772" endtime="20250617 21:30:37.785"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:30:37.786" endtime="20250617 21:30:37.786"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.786" endtime="20250617 21:30:37.786"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.789" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.797" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.787" endtime="20250617 21:30:37.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.798" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.797" endtime="20250617 21:30:37.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.798" endtime="20250617 21:30:37.798"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.787" endtime="20250617 21:30:37.798"/>
</kw>
<msg timestamp="20250617 21:30:37.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.787" endtime="20250617 21:30:37.798"/>
</kw>
<msg timestamp="20250617 21:30:37.798" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.786" endtime="20250617 21:30:37.798"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.799" endtime="20250617 21:30:37.799"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.799" endtime="20250617 21:30:37.799"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.799" endtime="20250617 21:30:37.799"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.799" endtime="20250617 21:30:37.799"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.799" endtime="20250617 21:30:37.799"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.786" endtime="20250617 21:30:37.799"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:30:37.800" endtime="20250617 21:30:37.800"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.799" endtime="20250617 21:30:37.800"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.803" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.811" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.801" endtime="20250617 21:30:37.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.811" level="INFO">200</msg>
<status status="PASS" starttime="20250617 21:30:37.811" endtime="20250617 21:30:37.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.812" endtime="20250617 21:30:37.812"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.801" endtime="20250617 21:30:37.812"/>
</kw>
<msg timestamp="20250617 21:30:37.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.801" endtime="20250617 21:30:37.812"/>
</kw>
<msg timestamp="20250617 21:30:37.812" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250617 21:30:37.800" endtime="20250617 21:30:37.812"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.813" endtime="20250617 21:30:37.813"/>
</kw>
<status status="NOT RUN" starttime="20250617 21:30:37.812" endtime="20250617 21:30:37.813"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:30:37.813" endtime="20250617 21:30:37.813"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.813" endtime="20250617 21:30:37.813"/>
</branch>
<status status="PASS" starttime="20250617 21:30:37.812" endtime="20250617 21:30:37.813"/>
</if>
<status status="PASS" starttime="20250617 21:30:37.800" endtime="20250617 21:30:37.813"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.745" endtime="20250617 21:30:37.813"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:30:37.744" endtime="20250617 21:30:37.813"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:37.818" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:37.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:37.825" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250617 21:30:37.816" endtime="20250617 21:30:37.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:37.826" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250617 21:30:37.826" endtime="20250617 21:30:37.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:37.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:37.826" endtime="20250617 21:30:37.827"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.815" endtime="20250617 21:30:37.827"/>
</kw>
<msg timestamp="20250617 21:30:37.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:37.815" endtime="20250617 21:30:37.827"/>
</kw>
<msg timestamp="20250617 21:30:37.827" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250617 21:30:37.815" endtime="20250617 21:30:37.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250617 21:30:37.827" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250617 21:30:37.827" endtime="20250617 21:30:37.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:37.828" endtime="20250617 21:30:37.828"/>
</kw>
<status status="FAIL" starttime="20250617 21:30:37.815" endtime="20250617 21:30:37.828"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:47.832" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:47.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:47.843" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250617 21:30:47.830" endtime="20250617 21:30:47.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:47.843" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250617 21:30:47.843" endtime="20250617 21:30:47.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:47.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:47.844" endtime="20250617 21:30:47.844"/>
</kw>
<status status="PASS" starttime="20250617 21:30:47.830" endtime="20250617 21:30:47.844"/>
</kw>
<msg timestamp="20250617 21:30:47.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:47.830" endtime="20250617 21:30:47.844"/>
</kw>
<msg timestamp="20250617 21:30:47.844" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250617 21:30:47.829" endtime="20250617 21:30:47.844"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250617 21:30:47.845" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250617 21:30:47.844" endtime="20250617 21:30:47.845"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:47.845" endtime="20250617 21:30:47.845"/>
</kw>
<status status="FAIL" starttime="20250617 21:30:47.829" endtime="20250617 21:30:47.845"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:30:57.849" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:30:57.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:30:57.858" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250617 21:30:57.847" endtime="20250617 21:30:57.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:30:57.859" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250617 21:30:57.858" endtime="20250617 21:30:57.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:30:57.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:30:57.859" endtime="20250617 21:30:57.859"/>
</kw>
<status status="PASS" starttime="20250617 21:30:57.847" endtime="20250617 21:30:57.859"/>
</kw>
<msg timestamp="20250617 21:30:57.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:30:57.846" endtime="20250617 21:30:57.860"/>
</kw>
<msg timestamp="20250617 21:30:57.860" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250617 21:30:57.846" endtime="20250617 21:30:57.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250617 21:30:57.860" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250617 21:30:57.860" endtime="20250617 21:30:57.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:30:57.860" endtime="20250617 21:30:57.860"/>
</kw>
<status status="FAIL" starttime="20250617 21:30:57.845" endtime="20250617 21:30:57.860"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:31:07.864" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:31:07.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:31:07.883" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20250617 21:31:07.862" endtime="20250617 21:31:07.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:31:07.884" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:07.883" endtime="20250617 21:31:07.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:31:07.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:31:07.884" endtime="20250617 21:31:07.884"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.862" endtime="20250617 21:31:07.884"/>
</kw>
<msg timestamp="20250617 21:31:07.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:31:07.862" endtime="20250617 21:31:07.884"/>
</kw>
<msg timestamp="20250617 21:31:07.884" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20250617 21:31:07.861" endtime="20250617 21:31:07.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:07.885" endtime="20250617 21:31:07.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:07.885" endtime="20250617 21:31:07.885"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.861" endtime="20250617 21:31:07.885"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.814" endtime="20250617 21:31:07.885"/>
</kw>
<status status="PASS" starttime="20250617 21:30:37.814" endtime="20250617 21:31:07.885"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:30:37.814" endtime="20250617 21:31:07.885"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:31:07.890" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-gibka 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:31:07.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:31:07.913" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-gibka","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250617 21:31:07.888" endtime="20250617 21:31:07.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:31:07.914" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-gibka","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1750195825142,"modificationTime":1750195825142,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-gibka"},"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:07.913" endtime="20250617 21:31:07.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:31:07.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:31:07.914" endtime="20250617 21:31:07.914"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.888" endtime="20250617 21:31:07.914"/>
</kw>
<msg timestamp="20250617 21:31:07.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:31:07.888" endtime="20250617 21:31:07.914"/>
</kw>
<msg timestamp="20250617 21:31:07.915" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-gibka","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250617 21:31:07.887" endtime="20250617 21:31:07.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:07.915" endtime="20250617 21:31:07.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:07.915" endtime="20250617 21:31:07.915"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.887" endtime="20250617 21:31:07.915"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.887" endtime="20250617 21:31:07.915"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.886" endtime="20250617 21:31:07.916"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:31:07.886" endtime="20250617 21:31:07.916"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:31:07.921" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-gibka/buc-vokgu 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:31:07.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:31:07.943" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-vokgu","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250617 21:31:07.919" endtime="20250617 21:31:07.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:31:07.944" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-vokgu","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1750195828103,"modificationTime":1750195828103,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-gibka","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"LEGACY","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:07.943" endtime="20250617 21:31:07.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:31:07.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:31:07.944" endtime="20250617 21:31:07.944"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.918" endtime="20250617 21:31:07.944"/>
</kw>
<msg timestamp="20250617 21:31:07.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:31:07.918" endtime="20250617 21:31:07.945"/>
</kw>
<msg timestamp="20250617 21:31:07.945" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-vokgu","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250617 21:31:07.918" endtime="20250617 21:31:07.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:07.945" endtime="20250617 21:31:07.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:07.945" endtime="20250617 21:31:07.945"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.918" endtime="20250617 21:31:07.945"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.917" endtime="20250617 21:31:07.946"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.917" endtime="20250617 21:31:07.946"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:31:07.916" endtime="20250617 21:31:07.946"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:31:07.950" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-gibka/buc-vokgu/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:31:07.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:31:07.989" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250617 21:31:07.948" endtime="20250617 21:31:07.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:31:07.990" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1750195831104,"modificationTime":1750195832682,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-gibka","bucketName":"buc-vokgu","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:07.990" endtime="20250617 21:31:07.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:31:07.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:31:07.990" endtime="20250617 21:31:07.991"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.948" endtime="20250617 21:31:07.991"/>
</kw>
<msg timestamp="20250617 21:31:07.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:31:07.948" endtime="20250617 21:31:07.991"/>
</kw>
<msg timestamp="20250617 21:31:07.991" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250617 21:31:07.948" endtime="20250617 21:31:07.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:07.991" endtime="20250617 21:31:07.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:07.991" endtime="20250617 21:31:07.992"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.947" endtime="20250617 21:31:07.992"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.947" endtime="20250617 21:31:07.992"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.947" endtime="20250617 21:31:07.992"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:31:07.946" endtime="20250617 21:31:07.992"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:31:07.997" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-gibka/buc-vokgu/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:31:08.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:31:08.009" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250617 21:31:07.995" endtime="20250617 21:31:08.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:31:08.009" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":[]},"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:08.009" endtime="20250617 21:31:08.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:31:08.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:31:08.010" endtime="20250617 21:31:08.010"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.995" endtime="20250617 21:31:08.010"/>
</kw>
<msg timestamp="20250617 21:31:08.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:31:07.995" endtime="20250617 21:31:08.010"/>
</kw>
<msg timestamp="20250617 21:31:08.010" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250617 21:31:07.994" endtime="20250617 21:31:08.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:08.010" endtime="20250617 21:31:08.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:08.011" endtime="20250617 21:31:08.011"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.994" endtime="20250617 21:31:08.011"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.994" endtime="20250617 21:31:08.011"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.993" endtime="20250617 21:31:08.011"/>
</kw>
<status status="PASS" starttime="20250617 21:31:07.993" endtime="20250617 21:31:08.011"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:31:08.011" endtime="20250617 21:31:08.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:31:07.992" endtime="20250617 21:31:08.012"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:31:08.016" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/usage?path=/vol-gibka/buc-vokgu&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:31:08.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:31:08.028" level="INFO">${output} = {"status":"OK","path":"/vol-gibka/buc-vokgu","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-gibka/buc-vokgu/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250617 21:31:08.014" endtime="20250617 21:31:08.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:31:08.028" level="INFO">{"status":"OK","path":"/vol-gibka/buc-vokgu","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-gibka/buc-vokgu/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20250617 21:31:08.028" endtime="20250617 21:31:08.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:31:08.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:31:08.028" endtime="20250617 21:31:08.029"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.014" endtime="20250617 21:31:08.029"/>
</kw>
<msg timestamp="20250617 21:31:08.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:31:08.014" endtime="20250617 21:31:08.029"/>
</kw>
<msg timestamp="20250617 21:31:08.029" level="INFO">${result} = {"status":"OK","path":"/vol-gibka/buc-vokgu","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-gibka/buc-vokgu/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250617 21:31:08.013" endtime="20250617 21:31:08.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:08.029" endtime="20250617 21:31:08.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:08.030" endtime="20250617 21:31:08.030"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.013" endtime="20250617 21:31:08.030"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.013" endtime="20250617 21:31:08.030"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.012" endtime="20250617 21:31:08.030"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:31:08.012" endtime="20250617 21:31:08.030"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:31:08.035" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-gibka 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:31:08.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:31:08.044" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:08.033" endtime="20250617 21:31:08.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:31:08.045" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:08.044" endtime="20250617 21:31:08.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:31:08.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:31:08.045" endtime="20250617 21:31:08.045"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.032" endtime="20250617 21:31:08.045"/>
</kw>
<msg timestamp="20250617 21:31:08.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:31:08.032" endtime="20250617 21:31:08.046"/>
</kw>
<msg timestamp="20250617 21:31:08.046" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:08.032" endtime="20250617 21:31:08.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:08.046" endtime="20250617 21:31:08.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:08.046" endtime="20250617 21:31:08.046"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.032" endtime="20250617 21:31:08.046"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.031" endtime="20250617 21:31:08.046"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.031" endtime="20250617 21:31:08.047"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:31:08.030" endtime="20250617 21:31:08.047"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:31:08.051" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-gibka/buc-vokgu 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:31:08.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:31:08.060" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:08.049" endtime="20250617 21:31:08.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:31:08.060" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:08.060" endtime="20250617 21:31:08.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:31:08.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:31:08.061" endtime="20250617 21:31:08.061"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.049" endtime="20250617 21:31:08.061"/>
</kw>
<msg timestamp="20250617 21:31:08.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:31:08.049" endtime="20250617 21:31:08.061"/>
</kw>
<msg timestamp="20250617 21:31:08.061" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:08.048" endtime="20250617 21:31:08.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:08.061" endtime="20250617 21:31:08.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:08.062" endtime="20250617 21:31:08.062"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.048" endtime="20250617 21:31:08.062"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.048" endtime="20250617 21:31:08.062"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.047" endtime="20250617 21:31:08.062"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:31:08.047" endtime="20250617 21:31:08.062"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:31:08.067" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:31:08.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:31:08.075" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:08.065" endtime="20250617 21:31:08.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:31:08.076" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:08.075" endtime="20250617 21:31:08.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:31:08.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:31:08.076" endtime="20250617 21:31:08.076"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.064" endtime="20250617 21:31:08.076"/>
</kw>
<msg timestamp="20250617 21:31:08.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:31:08.064" endtime="20250617 21:31:08.076"/>
</kw>
<msg timestamp="20250617 21:31:08.077" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250617 21:31:08.064" endtime="20250617 21:31:08.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:08.077" endtime="20250617 21:31:08.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:31:08.077" endtime="20250617 21:31:08.077"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.064" endtime="20250617 21:31:08.077"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.063" endtime="20250617 21:31:08.077"/>
</kw>
<status status="PASS" starttime="20250617 21:31:08.063" endtime="20250617 21:31:08.077"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:31:08.063" endtime="20250617 21:31:08.077"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" starttime="20250617 21:30:20.274" endtime="20250617 21:31:08.078"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
