<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250617 22:01:42.288" rpa="false" schemaversion="4">
<suite id="s1" name="ozone">
<suite id="s1-s1" name="Lib" source="/opt/hadoop/smoketest/lib">
<suite id="s1-s1-s1" name="Fs Tests" source="/opt/hadoop/smoketest/lib/fs_tests.robot">
<test id="s1-s1-s1-t1" name="Format o3fs URL without path" line="22">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.897" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250617 21:32:01.896" endtime="20250617 21:32:01.897"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.897" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250617 21:32:01.897" endtime="20250617 21:32:01.897"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.896" endtime="20250617 21:32:01.897"/>
</kw>
<msg timestamp="20250617 21:32:01.897" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250617 21:32:01.896" endtime="20250617 21:32:01.897"/>
</kw>
<msg timestamp="20250617 21:32:01.897" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20250617 21:32:01.894" endtime="20250617 21:32:01.897"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.897" endtime="20250617 21:32:01.898"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.894" endtime="20250617 21:32:01.898"/>
</test>
<test id="s1-s1-s1-t2" name="Format o3fs URL with path" line="26">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.900" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250617 21:32:01.900" endtime="20250617 21:32:01.900"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.900" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250617 21:32:01.900" endtime="20250617 21:32:01.900"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.899" endtime="20250617 21:32:01.900"/>
</kw>
<msg timestamp="20250617 21:32:01.900" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250617 21:32:01.899" endtime="20250617 21:32:01.900"/>
</kw>
<msg timestamp="20250617 21:32:01.900" level="INFO">${result} = o3fs://bucket1.vol1.om/dir/file</msg>
<status status="PASS" starttime="20250617 21:32:01.898" endtime="20250617 21:32:01.901"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.901" endtime="20250617 21:32:01.901"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.898" endtime="20250617 21:32:01.901"/>
</test>
<test id="s1-s1-s1-t3" name="Format o3fs URL with OM" line="30">
<kw name="Format o3fs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>omservice</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.903" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250617 21:32:01.903" endtime="20250617 21:32:01.903"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.904" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20250617 21:32:01.903" endtime="20250617 21:32:01.904"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.902" endtime="20250617 21:32:01.904"/>
</kw>
<msg timestamp="20250617 21:32:01.904" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20250617 21:32:01.902" endtime="20250617 21:32:01.904"/>
</kw>
<msg timestamp="20250617 21:32:01.904" level="INFO">${result} = o3fs://bucket1.vol1.omservice/dir/file</msg>
<status status="PASS" starttime="20250617 21:32:01.901" endtime="20250617 21:32:01.904"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.omservice/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.904" endtime="20250617 21:32:01.904"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.901" endtime="20250617 21:32:01.905"/>
</test>
<test id="s1-s1-s1-t4" name="Format ofs URL without path" line="35">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.907" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250617 21:32:01.907" endtime="20250617 21:32:01.907"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.908" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250617 21:32:01.907" endtime="20250617 21:32:01.908"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.907" endtime="20250617 21:32:01.908"/>
</kw>
<msg timestamp="20250617 21:32:01.908" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250617 21:32:01.906" endtime="20250617 21:32:01.908"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250617 21:32:01.909" endtime="20250617 21:32:01.909"/>
</kw>
<msg timestamp="20250617 21:32:01.909" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20250617 21:32:01.908" endtime="20250617 21:32:01.909"/>
</kw>
<msg timestamp="20250617 21:32:01.909" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20250617 21:32:01.905" endtime="20250617 21:32:01.909"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.910" endtime="20250617 21:32:01.910"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.905" endtime="20250617 21:32:01.910"/>
</test>
<test id="s1-s1-s1-t5" name="Format ofs URL with path" line="39">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.912" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250617 21:32:01.912" endtime="20250617 21:32:01.912"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.913" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250617 21:32:01.912" endtime="20250617 21:32:01.913"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.911" endtime="20250617 21:32:01.913"/>
</kw>
<msg timestamp="20250617 21:32:01.913" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250617 21:32:01.911" endtime="20250617 21:32:01.913"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.914" level="INFO">${first} = d</msg>
<status status="PASS" starttime="20250617 21:32:01.914" endtime="20250617 21:32:01.914"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.915" level="INFO">${result} = /dir/file</msg>
<status status="PASS" starttime="20250617 21:32:01.914" endtime="20250617 21:32:01.915"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.914" endtime="20250617 21:32:01.915"/>
</kw>
<msg timestamp="20250617 21:32:01.915" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" starttime="20250617 21:32:01.913" endtime="20250617 21:32:01.915"/>
</kw>
<msg timestamp="20250617 21:32:01.915" level="INFO">${result} = ofs://om/vol1/bucket1/dir/file</msg>
<status status="PASS" starttime="20250617 21:32:01.910" endtime="20250617 21:32:01.915"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.915" endtime="20250617 21:32:01.915"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.910" endtime="20250617 21:32:01.915"/>
</test>
<test id="s1-s1-s1-t6" name="Format ofs URL with OM" line="43">
<kw name="Format ofs URL" library="fs">
<var>${result}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>om:1234</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.918" level="INFO">${last} = 4</msg>
<status status="PASS" starttime="20250617 21:32:01.917" endtime="20250617 21:32:01.918"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.918" level="INFO">${result} = om:1234/</msg>
<status status="PASS" starttime="20250617 21:32:01.918" endtime="20250617 21:32:01.918"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.917" endtime="20250617 21:32:01.918"/>
</kw>
<msg timestamp="20250617 21:32:01.918" level="INFO">${om_with_trailing} = om:1234/</msg>
<status status="PASS" starttime="20250617 21:32:01.916" endtime="20250617 21:32:01.918"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.920" level="INFO">${first} = d</msg>
<status status="PASS" starttime="20250617 21:32:01.919" endtime="20250617 21:32:01.920"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.920" level="INFO">${result} = /dir/file</msg>
<status status="PASS" starttime="20250617 21:32:01.920" endtime="20250617 21:32:01.920"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.919" endtime="20250617 21:32:01.920"/>
</kw>
<msg timestamp="20250617 21:32:01.920" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" starttime="20250617 21:32:01.918" endtime="20250617 21:32:01.920"/>
</kw>
<msg timestamp="20250617 21:32:01.920" level="INFO">${result} = ofs://om:1234/vol1/bucket1/dir/file</msg>
<status status="PASS" starttime="20250617 21:32:01.916" endtime="20250617 21:32:01.920"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>ofs://om:1234/vol1/bucket1/dir/file</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.921" endtime="20250617 21:32:01.921"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.916" endtime="20250617 21:32:01.921"/>
</test>
<test id="s1-s1-s1-t7" name="Format FS URL with ofs scheme" line="48">
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>ofs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.924" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250617 21:32:01.924" endtime="20250617 21:32:01.924"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.925" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250617 21:32:01.924" endtime="20250617 21:32:01.925"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.924" endtime="20250617 21:32:01.925"/>
</kw>
<msg timestamp="20250617 21:32:01.925" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250617 21:32:01.923" endtime="20250617 21:32:01.925"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250617 21:32:01.926" endtime="20250617 21:32:01.926"/>
</kw>
<msg timestamp="20250617 21:32:01.926" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20250617 21:32:01.925" endtime="20250617 21:32:01.926"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.923" endtime="20250617 21:32:01.927"/>
</kw>
<msg timestamp="20250617 21:32:01.927" level="INFO">${url} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20250617 21:32:01.922" endtime="20250617 21:32:01.927"/>
</kw>
<msg timestamp="20250617 21:32:01.927" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20250617 21:32:01.921" endtime="20250617 21:32:01.927"/>
</kw>
<kw name="Format ofs URL" library="fs">
<var>${expected}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.929" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20250617 21:32:01.928" endtime="20250617 21:32:01.929"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.929" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20250617 21:32:01.929" endtime="20250617 21:32:01.929"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.928" endtime="20250617 21:32:01.929"/>
</kw>
<msg timestamp="20250617 21:32:01.929" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20250617 21:32:01.928" endtime="20250617 21:32:01.929"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250617 21:32:01.930" endtime="20250617 21:32:01.930"/>
</kw>
<msg timestamp="20250617 21:32:01.930" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20250617 21:32:01.929" endtime="20250617 21:32:01.930"/>
</kw>
<msg timestamp="20250617 21:32:01.931" level="INFO">${expected} = ofs://om/vol1/bucket1</msg>
<status status="PASS" starttime="20250617 21:32:01.927" endtime="20250617 21:32:01.931"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.931" endtime="20250617 21:32:01.931"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.921" endtime="20250617 21:32:01.931"/>
</test>
<test id="s1-s1-s1-t8" name="Format FS URL with o3fs scheme" line="53">
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>o3fs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.934" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250617 21:32:01.934" endtime="20250617 21:32:01.934"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.934" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250617 21:32:01.934" endtime="20250617 21:32:01.934"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.933" endtime="20250617 21:32:01.934"/>
</kw>
<msg timestamp="20250617 21:32:01.935" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250617 21:32:01.933" endtime="20250617 21:32:01.935"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.933" endtime="20250617 21:32:01.935"/>
</kw>
<msg timestamp="20250617 21:32:01.935" level="INFO">${url} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20250617 21:32:01.932" endtime="20250617 21:32:01.935"/>
</kw>
<msg timestamp="20250617 21:32:01.935" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20250617 21:32:01.932" endtime="20250617 21:32:01.935"/>
</kw>
<kw name="Format o3fs URL" library="fs">
<var>${expected}</var>
<arg>vol1</arg>
<arg>bucket1</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.937" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20250617 21:32:01.936" endtime="20250617 21:32:01.937"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.937" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20250617 21:32:01.937" endtime="20250617 21:32:01.937"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.936" endtime="20250617 21:32:01.937"/>
</kw>
<msg timestamp="20250617 21:32:01.937" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20250617 21:32:01.936" endtime="20250617 21:32:01.937"/>
</kw>
<msg timestamp="20250617 21:32:01.937" level="INFO">${expected} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" starttime="20250617 21:32:01.935" endtime="20250617 21:32:01.937"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.938" endtime="20250617 21:32:01.938"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.931" endtime="20250617 21:32:01.938"/>
</test>
<test id="s1-s1-s1-t9" name="Format FS URL with unsupported scheme" line="58">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<var>${result}</var>
<arg>*</arg>
<arg>Format FS URL</arg>
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Format FS URL" library="fs">
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20250617 21:32:01.940" level="FAIL">Unsupported FS scheme: http</msg>
<status status="FAIL" starttime="20250617 21:32:01.940" endtime="20250617 21:32:01.940"/>
</kw>
<status status="FAIL" starttime="20250617 21:32:01.939" endtime="20250617 21:32:01.940"/>
</kw>
<status status="FAIL" starttime="20250617 21:32:01.939" endtime="20250617 21:32:01.940"/>
</kw>
<msg timestamp="20250617 21:32:01.940" level="INFO">${result} = Unsupported FS scheme: http</msg>
<status status="PASS" starttime="20250617 21:32:01.938" endtime="20250617 21:32:01.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>http</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:01.940" endtime="20250617 21:32:01.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>nsupported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:01.941" endtime="20250617 21:32:01.941"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.938" endtime="20250617 21:32:01.941"/>
</test>
<status status="PASS" starttime="20250617 21:32:01.885" endtime="20250617 21:32:01.941"/>
</suite>
<suite id="s1-s1-s2" name="Os Tests" source="/opt/hadoop/smoketest/lib/os_tests.robot">
<test id="s1-s1-s2-t1" name="Execute" line="22">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>echo 42</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:01.957" level="INFO">Running command 'echo 42 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:01.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:01.958" level="INFO">${output} = 42</msg>
<status status="PASS" starttime="20250617 21:32:01.954" endtime="20250617 21:32:01.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:01.959" level="INFO">42</msg>
<status status="PASS" starttime="20250617 21:32:01.958" endtime="20250617 21:32:01.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:01.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:01.959" endtime="20250617 21:32:01.959"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.954" endtime="20250617 21:32:01.959"/>
</kw>
<msg timestamp="20250617 21:32:01.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:01.954" endtime="20250617 21:32:01.959"/>
</kw>
<msg timestamp="20250617 21:32:01.959" level="INFO">${output} = 42</msg>
<status status="PASS" starttime="20250617 21:32:01.954" endtime="20250617 21:32:01.959"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>42</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.959" endtime="20250617 21:32:01.960"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.953" endtime="20250617 21:32:01.960"/>
</test>
<test id="s1-s1-s2-t2" name="Execute failing command" line="26">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*</arg>
<arg>Execute</arg>
<arg>false</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Execute" library="os">
<arg>false</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:01.963" level="INFO">Running command 'false 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:01.965" level="INFO">${rc} = 1</msg>
<msg timestamp="20250617 21:32:01.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:01.961" endtime="20250617 21:32:01.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:01.965" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:01.965" endtime="20250617 21:32:01.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:01.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250617 21:32:01.966" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20250617 21:32:01.965" endtime="20250617 21:32:01.966"/>
</kw>
<status status="FAIL" starttime="20250617 21:32:01.961" endtime="20250617 21:32:01.966"/>
</kw>
<msg timestamp="20250617 21:32:01.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250617 21:32:01.961" endtime="20250617 21:32:01.966"/>
</kw>
<status status="FAIL" starttime="20250617 21:32:01.961" endtime="20250617 21:32:01.966"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.961" endtime="20250617 21:32:01.966"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.960" endtime="20250617 21:32:01.966"/>
</test>
<test id="s1-s1-s2-t3" name="Execute And Ignore Error" line="29">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>echo 123 &amp;&amp; false</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:01.969" level="INFO">Running command 'echo 123 &amp;&amp; false 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:01.970" level="INFO">${rc} = 1</msg>
<msg timestamp="20250617 21:32:01.970" level="INFO">${output} = 123</msg>
<status status="PASS" starttime="20250617 21:32:01.967" endtime="20250617 21:32:01.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:01.971" level="INFO">123</msg>
<status status="PASS" starttime="20250617 21:32:01.971" endtime="20250617 21:32:01.971"/>
</kw>
<msg timestamp="20250617 21:32:01.971" level="INFO">${output} = 123</msg>
<status status="PASS" starttime="20250617 21:32:01.967" endtime="20250617 21:32:01.971"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>123</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.971" endtime="20250617 21:32:01.972"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.967" endtime="20250617 21:32:01.972"/>
</test>
<test id="s1-s1-s2-t4" name="Execute and checkrc" line="33">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>echo failure &amp;&amp; exit 1</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:01.975" level="INFO">Running command 'echo failure &amp;&amp; exit 1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:01.976" level="INFO">${rc} = 1</msg>
<msg timestamp="20250617 21:32:01.976" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20250617 21:32:01.973" endtime="20250617 21:32:01.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:01.976" level="INFO">failure</msg>
<status status="PASS" starttime="20250617 21:32:01.976" endtime="20250617 21:32:01.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:01.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:01.977" endtime="20250617 21:32:01.977"/>
</kw>
<msg timestamp="20250617 21:32:01.977" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20250617 21:32:01.972" endtime="20250617 21:32:01.977"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>failure</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.977" endtime="20250617 21:32:01.977"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.972" endtime="20250617 21:32:01.977"/>
</test>
<test id="s1-s1-s2-t5" name="Execute and checkrc RC mismatch" line="37">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*</arg>
<arg>Execute and checkrc</arg>
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Execute and checkrc" library="os">
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:01.980" level="INFO">Running command 'echo failure &amp;&amp; exit 3 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:01.982" level="INFO">${rc} = 3</msg>
<msg timestamp="20250617 21:32:01.982" level="INFO">${output} = failure</msg>
<status status="PASS" starttime="20250617 21:32:01.979" endtime="20250617 21:32:01.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:01.982" level="INFO">failure</msg>
<status status="PASS" starttime="20250617 21:32:01.982" endtime="20250617 21:32:01.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:01.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250617 21:32:01.983" level="FAIL">3 != 1</msg>
<status status="FAIL" starttime="20250617 21:32:01.983" endtime="20250617 21:32:01.983"/>
</kw>
<status status="FAIL" starttime="20250617 21:32:01.978" endtime="20250617 21:32:01.983"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.978" endtime="20250617 21:32:01.983"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.978" endtime="20250617 21:32:01.983"/>
</test>
<status status="PASS" starttime="20250617 21:32:01.942" endtime="20250617 21:32:01.984"/>
</suite>
<suite id="s1-s1-s3" name="String Tests" source="/opt/hadoop/smoketest/lib/string_tests.robot">
<test id="s1-s1-s3-t1" name="Ensure Leading without Leading" line="22">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>/</arg>
<arg>a/b</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.987" level="INFO">${first} = a</msg>
<status status="PASS" starttime="20250617 21:32:01.987" endtime="20250617 21:32:01.987"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.988" level="INFO">${result} = /a/b</msg>
<status status="PASS" starttime="20250617 21:32:01.988" endtime="20250617 21:32:01.988"/>
</kw>
<msg timestamp="20250617 21:32:01.988" level="INFO">${result} = /a/b</msg>
<status status="PASS" starttime="20250617 21:32:01.987" endtime="20250617 21:32:01.988"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>/a/b</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.988" endtime="20250617 21:32:01.988"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.986" endtime="20250617 21:32:01.988"/>
</test>
<test id="s1-s1-s3-t2" name="Ensure Leading with Leading" line="26">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>_</arg>
<arg>_a_b_c</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.989" level="INFO">${first} = _</msg>
<status status="PASS" starttime="20250617 21:32:01.989" endtime="20250617 21:32:01.989"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.990" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" starttime="20250617 21:32:01.990" endtime="20250617 21:32:01.990"/>
</kw>
<msg timestamp="20250617 21:32:01.990" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" starttime="20250617 21:32:01.989" endtime="20250617 21:32:01.990"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>_a_b_c</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.990" endtime="20250617 21:32:01.990"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.989" endtime="20250617 21:32:01.990"/>
</test>
<test id="s1-s1-s3-t3" name="Ensure Leading for empty" line="30">
<kw name="Ensure Leading" library="string">
<var>${result}</var>
<arg>|</arg>
<arg>${EMPTY}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.992" level="INFO">${first} = </msg>
<status status="PASS" starttime="20250617 21:32:01.992" endtime="20250617 21:32:01.992"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.992" level="INFO">${result} = |</msg>
<status status="PASS" starttime="20250617 21:32:01.992" endtime="20250617 21:32:01.992"/>
</kw>
<msg timestamp="20250617 21:32:01.993" level="INFO">${result} = |</msg>
<status status="PASS" starttime="20250617 21:32:01.991" endtime="20250617 21:32:01.993"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>|</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.993" endtime="20250617 21:32:01.993"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.991" endtime="20250617 21:32:01.993"/>
</test>
<test id="s1-s1-s3-t4" name="Ensure Trailing without Trailing" line="35">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>.</arg>
<arg>x.y.z</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.994" level="INFO">${last} = z</msg>
<status status="PASS" starttime="20250617 21:32:01.994" endtime="20250617 21:32:01.994"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.994" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" starttime="20250617 21:32:01.994" endtime="20250617 21:32:01.994"/>
</kw>
<msg timestamp="20250617 21:32:01.994" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" starttime="20250617 21:32:01.993" endtime="20250617 21:32:01.995"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>x.y.z.</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.995" endtime="20250617 21:32:01.995"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.993" endtime="20250617 21:32:01.995"/>
</test>
<test id="s1-s1-s3-t5" name="Ensure Trailing with Trailing" line="39">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>x</arg>
<arg>axbxcx</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.996" level="INFO">${last} = x</msg>
<status status="PASS" starttime="20250617 21:32:01.996" endtime="20250617 21:32:01.996"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.996" level="INFO">${result} = axbxcx</msg>
<status status="PASS" starttime="20250617 21:32:01.996" endtime="20250617 21:32:01.996"/>
</kw>
<msg timestamp="20250617 21:32:01.997" level="INFO">${result} = axbxcx</msg>
<status status="PASS" starttime="20250617 21:32:01.996" endtime="20250617 21:32:01.997"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>axbxcx</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:01.997" endtime="20250617 21:32:01.997"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.995" endtime="20250617 21:32:01.997"/>
</test>
<test id="s1-s1-s3-t6" name="Ensure Trailing for empty" line="43">
<kw name="Ensure Trailing" library="string">
<var>${result}</var>
<arg>=</arg>
<arg>${EMPTY}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20250617 21:32:01.999" level="INFO">${last} = </msg>
<status status="PASS" starttime="20250617 21:32:01.998" endtime="20250617 21:32:01.999"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:01.999" level="INFO">${result} = =</msg>
<status status="PASS" starttime="20250617 21:32:01.999" endtime="20250617 21:32:01.999"/>
</kw>
<msg timestamp="20250617 21:32:01.999" level="INFO">${result} = =</msg>
<status status="PASS" starttime="20250617 21:32:01.998" endtime="20250617 21:32:01.999"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>=</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:02.000" endtime="20250617 21:32:02.000"/>
</kw>
<status status="PASS" starttime="20250617 21:32:01.997" endtime="20250617 21:32:02.000"/>
</test>
<status status="PASS" starttime="20250617 21:32:01.984" endtime="20250617 21:32:02.000"/>
</suite>
<status status="PASS" starttime="20250617 21:32:01.869" endtime="20250617 21:32:02.002"/>
</suite>
<suite id="s1-s2" name="Ozone-Lib" source="/opt/hadoop/smoketest/ozone-lib">
<suite id="s1-s2-s1" name="Shell Tests" source="/opt/hadoop/smoketest/ozone-lib/shell_tests.robot">
<test id="s1-s2-s1-t1" name="Bucket Exists should not if No Such Volume" line="27">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/no-such-volume/any-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:02.529" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/no-such-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:07.372" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:32:07.372" level="INFO">${output} = VOLUME_NOT_FOUND Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20250617 21:32:02.527" endtime="20250617 21:32:07.372"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250617 21:32:07.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:07.372" endtime="20250617 21:32:07.373"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250617 21:32:07.373" endtime="20250617 21:32:07.373"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250617 21:32:07.373" endtime="20250617 21:32:07.373"/>
</kw>
<msg timestamp="20250617 21:32:07.373" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250617 21:32:02.526" endtime="20250617 21:32:07.373"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:07.374" endtime="20250617 21:32:07.374"/>
</kw>
<status status="PASS" starttime="20250617 21:32:02.526" endtime="20250617 21:32:07.374"/>
</test>
<test id="s1-s2-s1-t2" name="Bucket Exists should not if No Such Bucket" line="31">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:07.377" level="INFO">Running command 'ozone sh volume create o3://om/vol1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:10.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:10.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:07.375" endtime="20250617 21:32:10.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:10.330" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:10.329" endtime="20250617 21:32:10.330"/>
</kw>
<status status="PASS" starttime="20250617 21:32:07.375" endtime="20250617 21:32:10.330"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/no-such-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:10.333" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:13.181" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:32:13.181" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found: vol1/no-such-bucket</msg>
<status status="PASS" starttime="20250617 21:32:10.331" endtime="20250617 21:32:13.181"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250617 21:32:13.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:13.181" endtime="20250617 21:32:13.182"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250617 21:32:13.182" endtime="20250617 21:32:13.182"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250617 21:32:13.182" endtime="20250617 21:32:13.182"/>
</kw>
<msg timestamp="20250617 21:32:13.182" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250617 21:32:10.330" endtime="20250617 21:32:13.182"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:13.182" endtime="20250617 21:32:13.183"/>
</kw>
<status status="PASS" starttime="20250617 21:32:07.374" endtime="20250617 21:32:13.183"/>
</test>
<test id="s1-s2-s1-t3" name="Bucket Exists" line="36">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/vol1/bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:13.186" level="INFO">Running command 'ozone sh bucket create o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:16.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:16.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:13.184" endtime="20250617 21:32:16.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:16.067" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:16.067" endtime="20250617 21:32:16.067"/>
</kw>
<status status="PASS" starttime="20250617 21:32:13.184" endtime="20250617 21:32:16.067"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:16.070" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:18.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:18.983" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTim...</msg>
<status status="PASS" starttime="20250617 21:32:16.068" endtime="20250617 21:32:18.983"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:32:18.983" endtime="20250617 21:32:18.983"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:32:18.984" endtime="20250617 21:32:18.984"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:32:18.984" endtime="20250617 21:32:18.984"/>
</kw>
<msg timestamp="20250617 21:32:18.984" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250617 21:32:16.068" endtime="20250617 21:32:18.984"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${TRUE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:18.984" endtime="20250617 21:32:18.985"/>
</kw>
<status status="PASS" starttime="20250617 21:32:13.183" endtime="20250617 21:32:18.985"/>
</test>
<test id="s1-s2-s1-t4" name="Bucket Exists should not if No Such OM service" line="41">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://no-such-host/any-volume/any-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:18.988" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://no-such-host/any-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:20.249" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:32:20.249" level="INFO">${output} = Cannot resolve OM host no-such-host in the URI</msg>
<status status="PASS" starttime="20250617 21:32:18.986" endtime="20250617 21:32:20.249"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250617 21:32:20.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:20.249" endtime="20250617 21:32:20.250"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250617 21:32:20.250" endtime="20250617 21:32:20.250"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250617 21:32:20.250" endtime="20250617 21:32:20.250"/>
</kw>
<msg timestamp="20250617 21:32:20.250" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250617 21:32:18.986" endtime="20250617 21:32:20.250"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${exists}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:20.250" endtime="20250617 21:32:20.250"/>
</kw>
<status status="PASS" starttime="20250617 21:32:18.985" endtime="20250617 21:32:20.251"/>
</test>
<test id="s1-s2-s1-t5" name="Key Should Match Local File" line="46">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put o3://${OM_SERVICE_ID}/vol1/bucket/passwd /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:20.254" level="INFO">Running command 'ozone sh key put o3://om/vol1/bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:25.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:25.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:20.252" endtime="20250617 21:32:25.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:25.186" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:25.185" endtime="20250617 21:32:25.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:25.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:25.186" endtime="20250617 21:32:25.186"/>
</kw>
<status status="PASS" starttime="20250617 21:32:20.252" endtime="20250617 21:32:25.186"/>
</kw>
<msg timestamp="20250617 21:32:25.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:20.252" endtime="20250617 21:32:25.186"/>
</kw>
<status status="PASS" starttime="20250617 21:32:20.251" endtime="20250617 21:32:25.186"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:32:25.188" level="INFO">${postfix} = 10772</msg>
<status status="PASS" starttime="20250617 21:32:25.187" endtime="20250617 21:32:25.188"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250617 21:32:25.188" level="INFO">${tmpfile} = /tmp/tempkey-10772</msg>
<status status="PASS" starttime="20250617 21:32:25.188" endtime="20250617 21:32:25.188"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:25.191" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-10772 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:29.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:29.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:25.189" endtime="20250617 21:32:29.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:29.516" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:29.515" endtime="20250617 21:32:29.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:29.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:29.516" endtime="20250617 21:32:29.516"/>
</kw>
<status status="PASS" starttime="20250617 21:32:25.189" endtime="20250617 21:32:29.516"/>
</kw>
<msg timestamp="20250617 21:32:29.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:25.188" endtime="20250617 21:32:29.517"/>
</kw>
<status status="PASS" starttime="20250617 21:32:25.188" endtime="20250617 21:32:29.517"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250617 21:32:29.519" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-10772 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:29.521" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250617 21:32:29.517" endtime="20250617 21:32:29.521"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:29.524" level="INFO">Running command 'rm -f /tmp/tempkey-10772 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:29.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:29.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:29.523" endtime="20250617 21:32:29.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:29.528" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:29.528" endtime="20250617 21:32:29.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:29.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:29.528" endtime="20250617 21:32:29.528"/>
</kw>
<status status="PASS" starttime="20250617 21:32:29.522" endtime="20250617 21:32:29.528"/>
</kw>
<msg timestamp="20250617 21:32:29.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:29.522" endtime="20250617 21:32:29.529"/>
</kw>
<status status="PASS" starttime="20250617 21:32:29.521" endtime="20250617 21:32:29.529"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:29.529" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250617 21:32:29.529" endtime="20250617 21:32:29.529"/>
</kw>
<msg timestamp="20250617 21:32:29.529" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250617 21:32:25.187" endtime="20250617 21:32:29.529"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250617 21:32:29.529" endtime="20250617 21:32:29.529"/>
</kw>
<status status="PASS" starttime="20250617 21:32:25.186" endtime="20250617 21:32:29.530"/>
</kw>
<status status="PASS" starttime="20250617 21:32:20.251" endtime="20250617 21:32:29.530"/>
</test>
<test id="s1-s2-s1-t6" name="Compare Key With Local File with Different File" line="50">
<kw name="Create Random File KB" library="os">
<var>${random_file}</var>
<arg>42</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Get Random Filename" library="os">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:32:29.533" level="INFO">${postfix} = mrskdqaqsi</msg>
<status status="PASS" starttime="20250617 21:32:29.532" endtime="20250617 21:32:29.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempfile-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250617 21:32:29.533" level="INFO">${tmpfile} = /tmp/tempfile-mrskdqaqsi</msg>
<status status="PASS" starttime="20250617 21:32:29.533" endtime="20250617 21:32:29.533"/>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${tmpfile}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20250617 21:32:29.533" level="INFO" html="true">File '&lt;a href="file:///tmp/tempfile-mrskdqaqsi"&gt;/tmp/tempfile-mrskdqaqsi&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250617 21:32:29.533" endtime="20250617 21:32:29.533"/>
</kw>
<status status="PASS" starttime="20250617 21:32:29.532" endtime="20250617 21:32:29.533"/>
</kw>
<msg timestamp="20250617 21:32:29.534" level="INFO">${path} = /tmp/tempfile-mrskdqaqsi</msg>
<status status="PASS" starttime="20250617 21:32:29.531" endtime="20250617 21:32:29.534"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:29.536" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/tempfile-mrskdqaqsi bs=1024 count=42 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:29.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:29.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:29.534" endtime="20250617 21:32:29.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:29.540" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:29.540" endtime="20250617 21:32:29.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:29.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:29.540" endtime="20250617 21:32:29.540"/>
</kw>
<status status="PASS" starttime="20250617 21:32:29.534" endtime="20250617 21:32:29.541"/>
</kw>
<msg timestamp="20250617 21:32:29.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:29.534" endtime="20250617 21:32:29.541"/>
</kw>
<status status="PASS" starttime="20250617 21:32:29.534" endtime="20250617 21:32:29.541"/>
</kw>
<msg timestamp="20250617 21:32:29.541" level="INFO">${path} = /tmp/tempfile-mrskdqaqsi</msg>
<status status="PASS" starttime="20250617 21:32:29.531" endtime="20250617 21:32:29.541"/>
</kw>
<msg timestamp="20250617 21:32:29.541" level="INFO">${random_file} = /tmp/tempfile-mrskdqaqsi</msg>
<status status="PASS" starttime="20250617 21:32:29.530" endtime="20250617 21:32:29.541"/>
</kw>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>${random_file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:32:29.542" level="INFO">${postfix} = 85923</msg>
<status status="PASS" starttime="20250617 21:32:29.542" endtime="20250617 21:32:29.542"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250617 21:32:29.542" level="INFO">${tmpfile} = /tmp/tempkey-85923</msg>
<status status="PASS" starttime="20250617 21:32:29.542" endtime="20250617 21:32:29.542"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:29.545" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-85923 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:33.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:33.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:29.543" endtime="20250617 21:32:33.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:33.593" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:33.592" endtime="20250617 21:32:33.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:33.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:33.593" endtime="20250617 21:32:33.593"/>
</kw>
<status status="PASS" starttime="20250617 21:32:29.543" endtime="20250617 21:32:33.593"/>
</kw>
<msg timestamp="20250617 21:32:33.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:29.543" endtime="20250617 21:32:33.593"/>
</kw>
<status status="PASS" starttime="20250617 21:32:29.542" endtime="20250617 21:32:33.593"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250617 21:32:33.595" level="INFO">Running command 'diff -q /tmp/tempfile-mrskdqaqsi /tmp/tempkey-85923 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:33.598" level="INFO">${rc} = 1</msg>
<status status="PASS" starttime="20250617 21:32:33.594" endtime="20250617 21:32:33.598"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:33.601" level="INFO">Running command 'rm -f /tmp/tempkey-85923 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:33.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:33.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:33.599" endtime="20250617 21:32:33.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:33.605" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:33.604" endtime="20250617 21:32:33.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:33.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:33.605" endtime="20250617 21:32:33.605"/>
</kw>
<status status="PASS" starttime="20250617 21:32:33.599" endtime="20250617 21:32:33.605"/>
</kw>
<msg timestamp="20250617 21:32:33.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:33.599" endtime="20250617 21:32:33.605"/>
</kw>
<status status="PASS" starttime="20250617 21:32:33.598" endtime="20250617 21:32:33.605"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:33.606" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20250617 21:32:33.605" endtime="20250617 21:32:33.606"/>
</kw>
<msg timestamp="20250617 21:32:33.606" level="INFO">${matches} = False</msg>
<status status="PASS" starttime="20250617 21:32:29.541" endtime="20250617 21:32:33.606"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${matches}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:33.606" endtime="20250617 21:32:33.606"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${random_file}</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250617 21:32:33.607" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-mrskdqaqsi"&gt;/tmp/tempfile-mrskdqaqsi&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250617 21:32:33.606" endtime="20250617 21:32:33.607"/>
</kw>
<status status="PASS" starttime="20250617 21:32:29.530" endtime="20250617 21:32:33.607"/>
</test>
<test id="s1-s2-s1-t7" name="Compare Key With Local File if File Does Not Exist" line="56">
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/no-such-file</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:32:33.608" level="INFO">${postfix} = 62860</msg>
<status status="PASS" starttime="20250617 21:32:33.608" endtime="20250617 21:32:33.608"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250617 21:32:33.609" level="INFO">${tmpfile} = /tmp/tempkey-62860</msg>
<status status="PASS" starttime="20250617 21:32:33.608" endtime="20250617 21:32:33.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:33.611" level="INFO">Running command 'ozone sh key get o3://om/vol1/bucket/passwd /tmp/tempkey-62860 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:37.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:37.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:33.610" endtime="20250617 21:32:37.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:37.619" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:37.619" endtime="20250617 21:32:37.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:37.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:37.620" endtime="20250617 21:32:37.620"/>
</kw>
<status status="PASS" starttime="20250617 21:32:33.609" endtime="20250617 21:32:37.620"/>
</kw>
<msg timestamp="20250617 21:32:37.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:33.609" endtime="20250617 21:32:37.620"/>
</kw>
<status status="PASS" starttime="20250617 21:32:33.609" endtime="20250617 21:32:37.620"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250617 21:32:37.622" level="INFO">Running command 'diff -q /no-such-file /tmp/tempkey-62860 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:37.625" level="INFO">${rc} = 2</msg>
<status status="PASS" starttime="20250617 21:32:37.620" endtime="20250617 21:32:37.625"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:37.628" level="INFO">Running command 'rm -f /tmp/tempkey-62860 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:37.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:37.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:37.626" endtime="20250617 21:32:37.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:37.632" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:37.632" endtime="20250617 21:32:37.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:37.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:37.632" endtime="20250617 21:32:37.632"/>
</kw>
<status status="PASS" starttime="20250617 21:32:37.626" endtime="20250617 21:32:37.632"/>
</kw>
<msg timestamp="20250617 21:32:37.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:37.626" endtime="20250617 21:32:37.633"/>
</kw>
<status status="PASS" starttime="20250617 21:32:37.625" endtime="20250617 21:32:37.633"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:32:37.633" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20250617 21:32:37.633" endtime="20250617 21:32:37.633"/>
</kw>
<msg timestamp="20250617 21:32:37.633" level="INFO">${matches} = False</msg>
<status status="PASS" starttime="20250617 21:32:33.608" endtime="20250617 21:32:37.633"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${matches}</arg>
<arg>${FALSE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:32:37.633" endtime="20250617 21:32:37.634"/>
</kw>
<status status="PASS" starttime="20250617 21:32:33.607" endtime="20250617 21:32:37.634"/>
</test>
<test id="s1-s2-s1-t8" name="Rejects Put Key With Zero Expected Generation" line="60">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh key put --expectedGeneration 0 o3://${OM_SERVICE_ID}/vol1/bucket/passwd /etc/passwd</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:37.637" level="INFO">Running command 'ozone sh key put --expectedGeneration 0 o3://om/vol1/bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:40.636" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:32:40.636" level="INFO">${output} = expectedGeneration must be positive, but was 0</msg>
<status status="PASS" starttime="20250617 21:32:37.635" endtime="20250617 21:32:40.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:40.637" level="INFO">expectedGeneration must be positive, but was 0</msg>
<status status="PASS" starttime="20250617 21:32:40.637" endtime="20250617 21:32:40.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:40.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:40.637" endtime="20250617 21:32:40.637"/>
</kw>
<msg timestamp="20250617 21:32:40.638" level="INFO">${output} = expectedGeneration must be positive, but was 0</msg>
<status status="PASS" starttime="20250617 21:32:37.634" endtime="20250617 21:32:40.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>must be positive</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:40.638" endtime="20250617 21:32:40.638"/>
</kw>
<status status="PASS" starttime="20250617 21:32:37.634" endtime="20250617 21:32:40.638"/>
</test>
<test id="s1-s2-s1-t9" name="Rejects Put Key With Negative Expected Generation" line="64">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh key put --expectedGeneration -1 o3://${OM_SERVICE_ID}/vol1/bucket/passwd /etc/passwd</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:40.641" level="INFO">Running command 'ozone sh key put --expectedGeneration -1 o3://om/vol1/bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:43.344" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:32:43.344" level="INFO">${output} = expectedGeneration must be positive, but was -1</msg>
<status status="PASS" starttime="20250617 21:32:40.639" endtime="20250617 21:32:43.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:43.345" level="INFO">expectedGeneration must be positive, but was -1</msg>
<status status="PASS" starttime="20250617 21:32:43.345" endtime="20250617 21:32:43.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:43.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:43.345" endtime="20250617 21:32:43.346"/>
</kw>
<msg timestamp="20250617 21:32:43.346" level="INFO">${output} = expectedGeneration must be positive, but was -1</msg>
<status status="PASS" starttime="20250617 21:32:40.639" endtime="20250617 21:32:43.346"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>must be positive</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:43.346" endtime="20250617 21:32:43.346"/>
</kw>
<status status="PASS" starttime="20250617 21:32:40.638" endtime="20250617 21:32:43.346"/>
</test>
<status status="PASS" starttime="20250617 21:32:02.504" endtime="20250617 21:32:43.348"/>
</suite>
<status status="PASS" starttime="20250617 21:32:02.488" endtime="20250617 21:32:43.350"/>
</suite>
<suite id="s1-s3" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s3-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s3-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:32:43.893" endtime="20250617 21:32:43.893"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:43.896" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:43.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:43.937" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 17 Jun 2025 21:32:43 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 12 Mar 2025 22:12:52 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20250617 21:32:43.894" endtime="20250617 21:32:43.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:43.938" level="INFO">HTTP/1.1 200 OK
Date: Tue, 17 Jun 2025 21:32:43 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 12 Mar 2025 22:12:52 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20250617 21:32:43.937" endtime="20250617 21:32:43.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:43.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:43.938" endtime="20250617 21:32:43.939"/>
</kw>
<status status="PASS" starttime="20250617 21:32:43.894" endtime="20250617 21:32:43.939"/>
</kw>
<msg timestamp="20250617 21:32:43.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:43.893" endtime="20250617 21:32:43.939"/>
</kw>
<msg timestamp="20250617 21:32:43.939" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 17 Jun 2025 21:32:43 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 12 Mar 2025 22:12:52 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20250617 21:32:43.893" endtime="20250617 21:32:43.939"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:43.939" endtime="20250617 21:32:43.940"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:32:43.892" endtime="20250617 21:32:43.940"/>
</test>
<test id="s1-s3-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:32:43.941" endtime="20250617 21:32:43.941"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:32:43.942" level="INFO">${random} = 7N8q29NJVQ</msg>
<status status="PASS" starttime="20250617 21:32:43.942" endtime="20250617 21:32:43.942"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:43.947" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 7N8q29NJVQ  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:49.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:49.281" level="INFO">${output} = 2025-06-17 21:32:45,454 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:32:45,615 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:32:43.945" endtime="20250617 21:32:49.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:49.282" level="INFO">2025-06-17 21:32:45,454 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:32:45,615 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:32:45,616 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:32:45,778 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 7N8q29NJVQ and number-of-tests 1
2025-06-17 21:32:45,847 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:32:46,850 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:32:47,598 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-06-17 21:32:47,771 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:32:47,851 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:32:48,852 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-06-17 21:32:48,878 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=862.011688, max=862.011688, mean=862.011688, stddev=0.0, median=862.011688, p75=862.011688, p95=862.011688, p98=862.011688, p99=862.011688, p999=862.011688, mean_rate=0.7996127859091979, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:32:48,878 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-06-17 21:32:48,878 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:32:48,878 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250617 21:32:49.281" endtime="20250617 21:32:49.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:49.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:49.282" endtime="20250617 21:32:49.283"/>
</kw>
<status status="PASS" starttime="20250617 21:32:43.944" endtime="20250617 21:32:49.283"/>
</kw>
<msg timestamp="20250617 21:32:49.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:43.944" endtime="20250617 21:32:49.283"/>
</kw>
<msg timestamp="20250617 21:32:49.283" level="INFO">${result} = 2025-06-17 21:32:45,454 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:32:45,615 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:32:43.943" endtime="20250617 21:32:49.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:49.283" endtime="20250617 21:32:49.283"/>
</kw>
<status status="PASS" starttime="20250617 21:32:43.942" endtime="20250617 21:32:49.284"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:49.287" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 7N8q29NJVQ  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:54.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:54.332" level="INFO">${output} = 2025-06-17 21:32:50,542 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:32:50,696 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:32:49.285" endtime="20250617 21:32:54.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:54.333" level="INFO">2025-06-17 21:32:50,542 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:32:50,696 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:32:50,696 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:32:50,857 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 7N8q29NJVQ and number-of-tests 1
2025-06-17 21:32:50,920 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:32:51,921 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:32:52,485 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:32:52,921 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:32:53,922 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-06-17 21:32:53,939 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=21.917397, max=21.917397, mean=21.917397, stddev=0.0, median=21.917397, p75=21.917397, p95=21.917397, p98=21.917397, p99=21.917397, p999=21.917397, mean_rate=1.2271301336913982, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:32:53,939 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-06-17 21:32:53,939 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:32:53,939 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250617 21:32:54.332" endtime="20250617 21:32:54.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:54.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:54.333" endtime="20250617 21:32:54.333"/>
</kw>
<status status="PASS" starttime="20250617 21:32:49.285" endtime="20250617 21:32:54.333"/>
</kw>
<msg timestamp="20250617 21:32:54.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:49.285" endtime="20250617 21:32:54.333"/>
</kw>
<msg timestamp="20250617 21:32:54.334" level="INFO">${result} = 2025-06-17 21:32:50,542 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:32:50,696 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:32:49.285" endtime="20250617 21:32:54.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:54.334" endtime="20250617 21:32:54.334"/>
</kw>
<status status="PASS" starttime="20250617 21:32:49.284" endtime="20250617 21:32:54.334"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:32:43.940" endtime="20250617 21:32:54.334"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250617 21:32:43.869" endtime="20250617 21:32:54.335"/>
</suite>
<suite id="s1-s3-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s3-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:54.342" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:55.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:55.366" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250617 21:32:54.340" endtime="20250617 21:32:55.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:55.366" level="INFO">om</msg>
<status status="PASS" starttime="20250617 21:32:55.366" endtime="20250617 21:32:55.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:55.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:55.367" endtime="20250617 21:32:55.367"/>
</kw>
<status status="PASS" starttime="20250617 21:32:54.340" endtime="20250617 21:32:55.367"/>
</kw>
<msg timestamp="20250617 21:32:55.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:54.339" endtime="20250617 21:32:55.367"/>
</kw>
<msg timestamp="20250617 21:32:55.367" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250617 21:32:54.339" endtime="20250617 21:32:55.367"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:55.368" endtime="20250617 21:32:55.368"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:55.371" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:56.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:56.477" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250617 21:32:55.369" endtime="20250617 21:32:56.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:56.478" level="INFO">om</msg>
<status status="PASS" starttime="20250617 21:32:56.478" endtime="20250617 21:32:56.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:56.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:56.478" endtime="20250617 21:32:56.479"/>
</kw>
<status status="PASS" starttime="20250617 21:32:55.369" endtime="20250617 21:32:56.479"/>
</kw>
<msg timestamp="20250617 21:32:56.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:55.368" endtime="20250617 21:32:56.479"/>
</kw>
<msg timestamp="20250617 21:32:56.479" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250617 21:32:55.368" endtime="20250617 21:32:56.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:56.479" endtime="20250617 21:32:56.479"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:32:54.339" endtime="20250617 21:32:56.480"/>
</test>
<test id="s1-s3-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:56.483" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:57.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:57.448" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250617 21:32:56.481" endtime="20250617 21:32:57.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:57.448" level="INFO">scm</msg>
<status status="PASS" starttime="20250617 21:32:57.448" endtime="20250617 21:32:57.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:57.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:57.449" endtime="20250617 21:32:57.449"/>
</kw>
<status status="PASS" starttime="20250617 21:32:56.481" endtime="20250617 21:32:57.449"/>
</kw>
<msg timestamp="20250617 21:32:57.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:56.481" endtime="20250617 21:32:57.449"/>
</kw>
<msg timestamp="20250617 21:32:57.449" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20250617 21:32:56.480" endtime="20250617 21:32:57.449"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:57.449" endtime="20250617 21:32:57.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:57.453" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:58.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:58.394" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250617 21:32:57.451" endtime="20250617 21:32:58.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:58.395" level="INFO">scm</msg>
<status status="PASS" starttime="20250617 21:32:58.394" endtime="20250617 21:32:58.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:58.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:58.395" endtime="20250617 21:32:58.396"/>
</kw>
<status status="PASS" starttime="20250617 21:32:57.450" endtime="20250617 21:32:58.396"/>
</kw>
<msg timestamp="20250617 21:32:58.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:57.450" endtime="20250617 21:32:58.396"/>
</kw>
<msg timestamp="20250617 21:32:58.396" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20250617 21:32:57.450" endtime="20250617 21:32:58.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:58.396" endtime="20250617 21:32:58.396"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:32:56.480" endtime="20250617 21:32:58.397"/>
</test>
<test id="s1-s3-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:58.400" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:59.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:59.252" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250617 21:32:58.398" endtime="20250617 21:32:59.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:59.253" level="INFO">om</msg>
<status status="PASS" starttime="20250617 21:32:59.253" endtime="20250617 21:32:59.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:59.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:59.253" endtime="20250617 21:32:59.254"/>
</kw>
<status status="PASS" starttime="20250617 21:32:58.398" endtime="20250617 21:32:59.254"/>
</kw>
<msg timestamp="20250617 21:32:59.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:58.398" endtime="20250617 21:32:59.254"/>
</kw>
<msg timestamp="20250617 21:32:59.254" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250617 21:32:58.397" endtime="20250617 21:32:59.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:59.254" endtime="20250617 21:32:59.254"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:59.255" endtime="20250617 21:32:59.255"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:59.258" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:00.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:00.154" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20250617 21:32:59.256" endtime="20250617 21:33:00.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:00.155" level="INFO">om</msg>
<status status="PASS" starttime="20250617 21:33:00.155" endtime="20250617 21:33:00.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:00.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:00.156" endtime="20250617 21:33:00.156"/>
</kw>
<status status="PASS" starttime="20250617 21:32:59.255" endtime="20250617 21:33:00.156"/>
</kw>
<msg timestamp="20250617 21:33:00.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:59.255" endtime="20250617 21:33:00.156"/>
</kw>
<msg timestamp="20250617 21:33:00.156" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20250617 21:32:59.255" endtime="20250617 21:33:00.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:00.156" endtime="20250617 21:33:00.157"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:00.157" endtime="20250617 21:33:00.157"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:32:58.397" endtime="20250617 21:33:00.157"/>
</test>
<test id="s1-s3-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:00.161" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:01.059" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:33:01.059" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250617 21:33:00.159" endtime="20250617 21:33:01.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:01.060" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250617 21:33:01.059" endtime="20250617 21:33:01.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:01.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:01.060" endtime="20250617 21:33:01.060"/>
</kw>
<msg timestamp="20250617 21:33:01.061" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250617 21:33:00.158" endtime="20250617 21:33:01.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:01.061" endtime="20250617 21:33:01.061"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:01.064" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:01.951" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:33:01.951" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250617 21:33:01.061" endtime="20250617 21:33:01.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:01.952" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250617 21:33:01.952" endtime="20250617 21:33:01.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:01.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:01.952" endtime="20250617 21:33:01.953"/>
</kw>
<msg timestamp="20250617 21:33:01.953" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20250617 21:33:01.061" endtime="20250617 21:33:01.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:01.953" endtime="20250617 21:33:01.953"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:33:00.158" endtime="20250617 21:33:01.953"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20250617 21:32:54.336" endtime="20250617 21:33:01.954"/>
</suite>
<suite id="s1-s3-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:33:01.968" level="INFO">${random} = 80075</msg>
<status status="PASS" starttime="20250617 21:33:01.968" endtime="20250617 21:33:01.968"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:33:01.969" level="INFO">${source} = 80075-source</msg>
<status status="PASS" starttime="20250617 21:33:01.968" endtime="20250617 21:33:01.969"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:33:01.970" level="INFO">${target} = 80075-target</msg>
<status status="PASS" starttime="20250617 21:33:01.969" endtime="20250617 21:33:01.970"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>volume create ${source}</arg>
<arg>volume create ${target}</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250617 21:33:01.970" level="INFO">${cmd} = volume create 80075-source' --execute 'volume create 80075-target</msg>
<status status="PASS" starttime="20250617 21:33:01.970" endtime="20250617 21:33:01.970"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:01.973" level="INFO">Running command 'ozone sh --execute 'volume create 80075-source' --execute 'volume create 80075-target' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:05.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:05.022" level="INFO">${output} = volume create 80075-source
volume create 80075-target</msg>
<status status="PASS" starttime="20250617 21:33:01.971" endtime="20250617 21:33:05.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:05.022" level="INFO">volume create 80075-source
volume create 80075-target</msg>
<status status="PASS" starttime="20250617 21:33:05.022" endtime="20250617 21:33:05.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:05.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:05.022" endtime="20250617 21:33:05.023"/>
</kw>
<status status="PASS" starttime="20250617 21:33:01.970" endtime="20250617 21:33:05.023"/>
</kw>
<msg timestamp="20250617 21:33:05.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:01.970" endtime="20250617 21:33:05.023"/>
</kw>
<status status="PASS" starttime="20250617 21:33:01.970" endtime="20250617 21:33:05.023"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:05.023" endtime="20250617 21:33:05.023"/>
</kw>
<status status="PASS" starttime="20250617 21:33:01.967" endtime="20250617 21:33:05.024"/>
</kw>
<test id="s1-s3-s3-t1" name="Link to non-existent bucket" line="91">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:05.024" endtime="20250617 21:33:05.025"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:05.028" level="INFO">Running command 'ozone sh bucket link 80075-source/no-such-bucket 80075-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:07.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:07.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:33:05.025" endtime="20250617 21:33:07.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:07.837" level="INFO"/>
<status status="PASS" starttime="20250617 21:33:07.837" endtime="20250617 21:33:07.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:07.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:07.837" endtime="20250617 21:33:07.838"/>
</kw>
<status status="PASS" starttime="20250617 21:33:05.025" endtime="20250617 21:33:07.838"/>
</kw>
<msg timestamp="20250617 21:33:07.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:05.025" endtime="20250617 21:33:07.838"/>
</kw>
<status status="PASS" starttime="20250617 21:33:05.025" endtime="20250617 21:33:07.838"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:07.841" level="INFO">Running command 'ozone sh key list 80075-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:10.687" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:33:10.687" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found: 80075-source/no-such-bucket</msg>
<status status="PASS" starttime="20250617 21:33:07.839" endtime="20250617 21:33:10.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:10.688" level="INFO">BUCKET_NOT_FOUND Bucket not found: 80075-source/no-such-bucket</msg>
<status status="PASS" starttime="20250617 21:33:10.687" endtime="20250617 21:33:10.688"/>
</kw>
<msg timestamp="20250617 21:33:10.688" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found: 80075-source/no-such-bucket</msg>
<status status="PASS" starttime="20250617 21:33:07.838" endtime="20250617 21:33:10.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:10.688" endtime="20250617 21:33:10.689"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:33:05.024" endtime="20250617 21:33:10.689"/>
</test>
<test id="s1-s3-s3-t2" name="Key create passthrough" line="96">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:10.690" endtime="20250617 21:33:10.690"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket link ${source}/bucket1 ${target}/link1</arg>
<arg>bucket create ${source}/bucket1</arg>
<arg>key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250617 21:33:10.691" level="INFO">${cmd} = bucket link 80075-source/bucket1 80075-target/link1' --execute 'bucket create 80075-source/bucket1' --execute 'key put 80075-target/link1/key1 /etc/passwd</msg>
<status status="PASS" starttime="20250617 21:33:10.691" endtime="20250617 21:33:10.691"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:10.694" level="INFO">Running command 'ozone sh --execute 'bucket link 80075-source/bucket1 80075-target/link1' --execute 'bucket create 80075-source/bucket1' --execute 'key put 80075-target/link1/key1 /etc/passwd' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:15.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:15.154" level="INFO">${output} = bucket link 80075-source/bucket1 80075-target/link1
bucket create 80075-source/bucket1
key put 80075-target/link1/key1 /etc/passwd</msg>
<status status="PASS" starttime="20250617 21:33:10.691" endtime="20250617 21:33:15.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:15.155" level="INFO">bucket link 80075-source/bucket1 80075-target/link1
bucket create 80075-source/bucket1
key put 80075-target/link1/key1 /etc/passwd</msg>
<status status="PASS" starttime="20250617 21:33:15.155" endtime="20250617 21:33:15.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:15.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:15.156" endtime="20250617 21:33:15.156"/>
</kw>
<status status="PASS" starttime="20250617 21:33:10.691" endtime="20250617 21:33:15.156"/>
</kw>
<msg timestamp="20250617 21:33:15.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:10.691" endtime="20250617 21:33:15.156"/>
</kw>
<status status="PASS" starttime="20250617 21:33:10.690" endtime="20250617 21:33:15.156"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:33:15.157" level="INFO">${postfix} = 98702</msg>
<status status="PASS" starttime="20250617 21:33:15.157" endtime="20250617 21:33:15.157"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250617 21:33:15.158" level="INFO">${tmpfile} = /tmp/tempkey-98702</msg>
<status status="PASS" starttime="20250617 21:33:15.158" endtime="20250617 21:33:15.158"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:15.161" level="INFO">Running command 'ozone sh key get 80075-target/link1/key1 /tmp/tempkey-98702 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:19.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:19.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:33:15.159" endtime="20250617 21:33:19.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:19.152" level="INFO"/>
<status status="PASS" starttime="20250617 21:33:19.152" endtime="20250617 21:33:19.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:19.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:19.152" endtime="20250617 21:33:19.153"/>
</kw>
<status status="PASS" starttime="20250617 21:33:15.158" endtime="20250617 21:33:19.153"/>
</kw>
<msg timestamp="20250617 21:33:19.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:15.158" endtime="20250617 21:33:19.153"/>
</kw>
<status status="PASS" starttime="20250617 21:33:15.158" endtime="20250617 21:33:19.153"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250617 21:33:19.155" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-98702 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:19.158" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250617 21:33:19.153" endtime="20250617 21:33:19.158"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:19.161" level="INFO">Running command 'rm -f /tmp/tempkey-98702 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:19.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:19.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:33:19.159" endtime="20250617 21:33:19.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:19.165" level="INFO"/>
<status status="PASS" starttime="20250617 21:33:19.165" endtime="20250617 21:33:19.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:19.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:19.165" endtime="20250617 21:33:19.165"/>
</kw>
<status status="PASS" starttime="20250617 21:33:19.159" endtime="20250617 21:33:19.166"/>
</kw>
<msg timestamp="20250617 21:33:19.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:19.159" endtime="20250617 21:33:19.166"/>
</kw>
<status status="PASS" starttime="20250617 21:33:19.158" endtime="20250617 21:33:19.166"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:33:19.166" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250617 21:33:19.166" endtime="20250617 21:33:19.166"/>
</kw>
<msg timestamp="20250617 21:33:19.166" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250617 21:33:15.157" endtime="20250617 21:33:19.166"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250617 21:33:19.166" endtime="20250617 21:33:19.167"/>
</kw>
<status status="PASS" starttime="20250617 21:33:15.156" endtime="20250617 21:33:19.167"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:33:10.689" endtime="20250617 21:33:19.167"/>
</test>
<test id="s1-s3-s3-t3" name="Key read passthrough" line="102">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:19.168" endtime="20250617 21:33:19.168"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:19.170" level="INFO">Running command 'ozone sh key put 80075-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:23.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:23.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:33:19.169" endtime="20250617 21:33:23.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:23.352" level="INFO"/>
<status status="PASS" starttime="20250617 21:33:23.352" endtime="20250617 21:33:23.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:23.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:23.352" endtime="20250617 21:33:23.353"/>
</kw>
<status status="PASS" starttime="20250617 21:33:19.168" endtime="20250617 21:33:23.353"/>
</kw>
<msg timestamp="20250617 21:33:23.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:19.168" endtime="20250617 21:33:23.353"/>
</kw>
<status status="PASS" starttime="20250617 21:33:19.168" endtime="20250617 21:33:23.353"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:33:23.354" level="INFO">${postfix} = 66650</msg>
<status status="PASS" starttime="20250617 21:33:23.354" endtime="20250617 21:33:23.354"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250617 21:33:23.355" level="INFO">${tmpfile} = /tmp/tempkey-66650</msg>
<status status="PASS" starttime="20250617 21:33:23.354" endtime="20250617 21:33:23.355"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:23.357" level="INFO">Running command 'ozone sh key get 80075-source/bucket1/key2 /tmp/tempkey-66650 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:27.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:27.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:33:23.355" endtime="20250617 21:33:27.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:27.479" level="INFO"/>
<status status="PASS" starttime="20250617 21:33:27.478" endtime="20250617 21:33:27.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:27.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:27.479" endtime="20250617 21:33:27.479"/>
</kw>
<status status="PASS" starttime="20250617 21:33:23.355" endtime="20250617 21:33:27.479"/>
</kw>
<msg timestamp="20250617 21:33:27.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:23.355" endtime="20250617 21:33:27.479"/>
</kw>
<status status="PASS" starttime="20250617 21:33:23.355" endtime="20250617 21:33:27.479"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250617 21:33:27.482" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-66650 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:27.484" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250617 21:33:27.480" endtime="20250617 21:33:27.484"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:27.488" level="INFO">Running command 'rm -f /tmp/tempkey-66650 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:27.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:27.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:33:27.486" endtime="20250617 21:33:27.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:27.492" level="INFO"/>
<status status="PASS" starttime="20250617 21:33:27.491" endtime="20250617 21:33:27.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:27.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:27.492" endtime="20250617 21:33:27.492"/>
</kw>
<status status="PASS" starttime="20250617 21:33:27.485" endtime="20250617 21:33:27.492"/>
</kw>
<msg timestamp="20250617 21:33:27.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:27.485" endtime="20250617 21:33:27.492"/>
</kw>
<status status="PASS" starttime="20250617 21:33:27.485" endtime="20250617 21:33:27.492"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:33:27.493" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250617 21:33:27.492" endtime="20250617 21:33:27.493"/>
</kw>
<msg timestamp="20250617 21:33:27.493" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250617 21:33:23.354" endtime="20250617 21:33:27.493"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250617 21:33:27.493" endtime="20250617 21:33:27.493"/>
</kw>
<status status="PASS" starttime="20250617 21:33:23.353" endtime="20250617 21:33:27.493"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:33:19.167" endtime="20250617 21:33:27.493"/>
</test>
<test id="s1-s3-s3-t4" name="Key list passthrough" line="106">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:27.494" endtime="20250617 21:33:27.494"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:27.497" level="INFO">Running command 'ozone sh key list 80075-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:30.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:30.585" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20250617 21:33:27.495" endtime="20250617 21:33:30.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:30.586" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20250617 21:33:30.585" endtime="20250617 21:33:30.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:30.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:30.586" endtime="20250617 21:33:30.586"/>
</kw>
<status status="PASS" starttime="20250617 21:33:27.495" endtime="20250617 21:33:30.587"/>
</kw>
<msg timestamp="20250617 21:33:30.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:27.495" endtime="20250617 21:33:30.587"/>
</kw>
<msg timestamp="20250617 21:33:30.587" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20250617 21:33:27.495" endtime="20250617 21:33:30.587"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:30.590" level="INFO">Running command 'ozone sh key list 80075-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:33.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:33.525" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20250617 21:33:30.588" endtime="20250617 21:33:33.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:33.526" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20250617 21:33:33.525" endtime="20250617 21:33:33.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:33.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:33.526" endtime="20250617 21:33:33.526"/>
</kw>
<status status="PASS" starttime="20250617 21:33:30.588" endtime="20250617 21:33:33.526"/>
</kw>
<msg timestamp="20250617 21:33:33.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:30.587" endtime="20250617 21:33:33.526"/>
</kw>
<msg timestamp="20250617 21:33:33.526" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20250617 21:33:30.587" endtime="20250617 21:33:33.527"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:33:33.527" endtime="20250617 21:33:33.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:33.527" endtime="20250617 21:33:33.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:33.527" endtime="20250617 21:33:33.528"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:33:27.494" endtime="20250617 21:33:33.528"/>
</test>
<test id="s1-s3-s3-t5" name="Key delete passthrough" line="113">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:33.529" endtime="20250617 21:33:33.529"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:33.532" level="INFO">Running command 'ozone sh key delete 80075-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:36.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:36.397" level="INFO">${output} = Key moved inside Trash: /.Trash/hadoop/Current/key2 </msg>
<status status="PASS" starttime="20250617 21:33:33.530" endtime="20250617 21:33:36.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:36.398" level="INFO">Key moved inside Trash: /.Trash/hadoop/Current/key2 </msg>
<status status="PASS" starttime="20250617 21:33:36.398" endtime="20250617 21:33:36.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:36.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:36.398" endtime="20250617 21:33:36.399"/>
</kw>
<status status="PASS" starttime="20250617 21:33:33.529" endtime="20250617 21:33:36.399"/>
</kw>
<msg timestamp="20250617 21:33:36.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:33.529" endtime="20250617 21:33:36.399"/>
</kw>
<status status="PASS" starttime="20250617 21:33:33.529" endtime="20250617 21:33:36.399"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket1keys}</var>
<arg>ozone sh key list ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:36.402" level="INFO">Running command 'ozone sh key list 80075-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:39.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:39.428" level="INFO">${output} = [ {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-06-17T21:33:36.275Z",
  "modificationTime" : "20...</msg>
<status status="PASS" starttime="20250617 21:33:36.400" endtime="20250617 21:33:39.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:39.428" level="INFO">[ {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-06-17T21:33:36.275Z",
  "modificationTime" : "2025-06-17T21:33:36.275Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-06-17T21:33:36.275Z",
  "modificationTime" : "2025-06-17T21:33:36.275Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-06-17T21:33:36.275Z",
  "modificationTime" : "2025-06-17T21:33:36.290Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/Current/key2",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-06-17T21:33:21.820Z",
  "modificationTime" : "2025-06-17T21:33:22.902Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "hadoop",
  "dataSize" : 1062,
  "creationTime" : "2025-06-17T21:33:13.684Z",
  "modificationTime" : "2025-06-17T21:33:14.742Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250617 21:33:39.428" endtime="20250617 21:33:39.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:39.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:39.429" endtime="20250617 21:33:39.429"/>
</kw>
<status status="PASS" starttime="20250617 21:33:36.400" endtime="20250617 21:33:39.429"/>
</kw>
<msg timestamp="20250617 21:33:39.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:36.400" endtime="20250617 21:33:39.429"/>
</kw>
<msg timestamp="20250617 21:33:39.429" level="INFO">${bucket1keys} = [ {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-06-17T21:33:36.275Z",
  "modificationTime" : "20...</msg>
<status status="PASS" starttime="20250617 21:33:36.399" endtime="20250617 21:33:39.429"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:39.433" level="INFO">Running command 'echo '[ {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-06-17T21:33:36.275Z",
  "modificationTime" : "2025-06-17T21:33:36.275Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-06-17T21:33:36.275Z",
  "modificationTime" : "2025-06-17T21:33:36.275Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-06-17T21:33:36.275Z",
  "modificationTime" : "2025-06-17T21:33:36.290Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/Current/key2",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-06-17T21:33:21.820Z",
  "modificationTime" : "2025-06-17T21:33:22.902Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "hadoop",
  "dataSize" : 1062,
  "creationTime" : "2025-06-17T21:33:13.684Z",
  "modificationTime" : "2025-06-17T21:33:14.742Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash")) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:39.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:39.437" level="INFO">${output} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/key2</msg>
<status status="PASS" starttime="20250617 21:33:39.431" endtime="20250617 21:33:39.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:39.438" level="INFO">.Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/key2</msg>
<status status="PASS" starttime="20250617 21:33:39.438" endtime="20250617 21:33:39.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:39.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:39.438" endtime="20250617 21:33:39.439"/>
</kw>
<status status="PASS" starttime="20250617 21:33:39.430" endtime="20250617 21:33:39.439"/>
</kw>
<msg timestamp="20250617 21:33:39.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:39.430" endtime="20250617 21:33:39.439"/>
</kw>
<msg timestamp="20250617 21:33:39.439" level="INFO">${source_list} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/key2</msg>
<status status="PASS" starttime="20250617 21:33:39.430" endtime="20250617 21:33:39.439"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${source_list}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250617 21:33:39.439" endtime="20250617 21:33:39.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:39.439" endtime="20250617 21:33:39.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:39.442" level="INFO">Running command 'echo '[ {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-06-17T21:33:36.275Z",
  "modificationTime" : "2025-06-17T21:33:36.275Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/",
  "owner" : "hadoop",
  "dataSize" : 0,
  "creationTime" : "2025-06-17T21:33:36.275Z",
  "modificationTime" : "2025-06-17T21:33:36.275Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2025-06-17T21:33:36.275Z",
  "modificationTime" : "2025-06-17T21:33:36.290Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : false
}, {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/hadoop/Current/key2",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-06-17T21:33:21.820Z",
  "modificationTime" : "2025-06-17T21:33:22.902Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "80075-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "hadoop",
  "dataSize" : 1062,
  "creationTime" : "2025-06-17T21:33:13.684Z",
  "modificationTime" : "2025-06-17T21:33:14.742Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:39.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:39.447" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250617 21:33:39.441" endtime="20250617 21:33:39.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:39.448" level="INFO">key1</msg>
<status status="PASS" starttime="20250617 21:33:39.447" endtime="20250617 21:33:39.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:39.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:39.448" endtime="20250617 21:33:39.448"/>
</kw>
<status status="PASS" starttime="20250617 21:33:39.440" endtime="20250617 21:33:39.448"/>
</kw>
<msg timestamp="20250617 21:33:39.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:39.440" endtime="20250617 21:33:39.448"/>
</kw>
<msg timestamp="20250617 21:33:39.449" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20250617 21:33:39.440" endtime="20250617 21:33:39.449"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:39.449" endtime="20250617 21:33:39.449"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:33:33.528" endtime="20250617 21:33:39.449"/>
</test>
<test id="s1-s3-s3-t6" name="Bucket list contains links" line="122">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:39.450" endtime="20250617 21:33:39.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:39.453" level="INFO">Running command 'ozone sh bucket list 80075-target 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:42.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:42.676" level="INFO">${output} = [ {
  "volumeName" : "80075-target",
  "name" : "dangling-link",
  "sourceVolume" : "80075-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-06-17T21:33:07.738Z",
  "modificationT...</msg>
<status status="PASS" starttime="20250617 21:33:39.451" endtime="20250617 21:33:42.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:42.676" level="INFO">[ {
  "volumeName" : "80075-target",
  "name" : "dangling-link",
  "sourceVolume" : "80075-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-06-17T21:33:07.738Z",
  "modificationTime" : "2025-06-17T21:33:07.738Z",
  "owner" : "hadoop",
  "link" : true
}, {
  "volumeName" : "80075-target",
  "name" : "link1",
  "sourceVolume" : "80075-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-17T21:33:13.604Z",
  "modificationTime" : "2025-06-17T21:33:13.604Z",
  "owner" : "hadoop",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20250617 21:33:42.676" endtime="20250617 21:33:42.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:42.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:42.677" endtime="20250617 21:33:42.677"/>
</kw>
<status status="PASS" starttime="20250617 21:33:39.451" endtime="20250617 21:33:42.677"/>
</kw>
<msg timestamp="20250617 21:33:42.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:39.451" endtime="20250617 21:33:42.677"/>
</kw>
<msg timestamp="20250617 21:33:42.677" level="INFO">${result} = [ {
  "volumeName" : "80075-target",
  "name" : "dangling-link",
  "sourceVolume" : "80075-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-06-17T21:33:07.738Z",
  "modificationT...</msg>
<status status="PASS" starttime="20250617 21:33:39.450" endtime="20250617 21:33:42.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:42.677" endtime="20250617 21:33:42.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:42.678" endtime="20250617 21:33:42.678"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:33:39.449" endtime="20250617 21:33:42.678"/>
</test>
<test id="s1-s3-s3-t7" name="Bucket info shows source" line="127">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:42.679" endtime="20250617 21:33:42.679"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:42.683" level="INFO">Running command 'ozone sh bucket info 80075-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:45.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:45.682" level="INFO">${output} = {
  "volumeName" : "80075-target",
  "name" : "link1",
  "sourceVolume" : "80075-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-17T21:33:13.604Z",
  "modificationTime" : "2025-06-1...</msg>
<status status="PASS" starttime="20250617 21:33:42.681" endtime="20250617 21:33:45.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:45.683" level="INFO">{
  "volumeName" : "80075-target",
  "name" : "link1",
  "sourceVolume" : "80075-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-17T21:33:13.604Z",
  "modificationTime" : "2025-06-17T21:33:13.604Z",
  "owner" : "hadoop",
  "link" : true
}</msg>
<status status="PASS" starttime="20250617 21:33:45.682" endtime="20250617 21:33:45.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:45.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:45.683" endtime="20250617 21:33:45.683"/>
</kw>
<status status="PASS" starttime="20250617 21:33:42.680" endtime="20250617 21:33:45.684"/>
</kw>
<msg timestamp="20250617 21:33:45.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:42.680" endtime="20250617 21:33:45.684"/>
</kw>
<msg timestamp="20250617 21:33:45.684" level="INFO">${result} = {
  "volumeName" : "80075-target",
  "name" : "link1",
  "sourceVolume" : "80075-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-17T21:33:13.604Z",
  "modificationTime" : "2025-06-1...</msg>
<status status="PASS" starttime="20250617 21:33:42.679" endtime="20250617 21:33:45.684"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:45.684" endtime="20250617 21:33:45.684"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:45.684" endtime="20250617 21:33:45.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:45.685" endtime="20250617 21:33:45.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:45.685" endtime="20250617 21:33:45.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:45.685" endtime="20250617 21:33:45.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:45.686" endtime="20250617 21:33:45.686"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:45.686" endtime="20250617 21:33:45.686"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:33:42.679" endtime="20250617 21:33:45.687"/>
</test>
<test id="s1-s3-s3-t8" name="Source and target bucket have different ACLs" line="137">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:45.688" endtime="20250617 21:33:45.688"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:45.691" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 80075-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:48.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:48.700" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250617 21:33:45.689" endtime="20250617 21:33:48.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:48.701" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250617 21:33:48.700" endtime="20250617 21:33:48.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:48.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:48.701" endtime="20250617 21:33:48.701"/>
</kw>
<status status="PASS" starttime="20250617 21:33:45.688" endtime="20250617 21:33:48.701"/>
</kw>
<msg timestamp="20250617 21:33:48.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:45.688" endtime="20250617 21:33:48.702"/>
</kw>
<status status="PASS" starttime="20250617 21:33:45.688" endtime="20250617 21:33:48.702"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:48.706" level="INFO">Running command 'ozone sh bucket getacl 80075-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:51.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:51.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:33:48.704" endtime="20250617 21:33:51.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:51.685" level="INFO"/>
<status status="PASS" starttime="20250617 21:33:51.684" endtime="20250617 21:33:51.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:51.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:51.685" endtime="20250617 21:33:51.685"/>
</kw>
<status status="PASS" starttime="20250617 21:33:48.703" endtime="20250617 21:33:51.685"/>
</kw>
<msg timestamp="20250617 21:33:51.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:48.703" endtime="20250617 21:33:51.686"/>
</kw>
<msg timestamp="20250617 21:33:51.686" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250617 21:33:48.703" endtime="20250617 21:33:51.686"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:33:51.686" endtime="20250617 21:33:51.686"/>
</kw>
<status status="PASS" starttime="20250617 21:33:48.702" endtime="20250617 21:33:51.686"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source=false</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:51.691" level="INFO">Running command 'ozone sh bucket getacl --source=false 80075-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:54.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:54.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:33:51.689" endtime="20250617 21:33:54.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:54.706" level="INFO"/>
<status status="PASS" starttime="20250617 21:33:54.705" endtime="20250617 21:33:54.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:54.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:54.706" endtime="20250617 21:33:54.706"/>
</kw>
<status status="PASS" starttime="20250617 21:33:51.688" endtime="20250617 21:33:54.706"/>
</kw>
<msg timestamp="20250617 21:33:54.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:51.688" endtime="20250617 21:33:54.706"/>
</kw>
<msg timestamp="20250617 21:33:54.707" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250617 21:33:51.687" endtime="20250617 21:33:54.707"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:33:54.707" endtime="20250617 21:33:54.707"/>
</kw>
<status status="PASS" starttime="20250617 21:33:51.686" endtime="20250617 21:33:54.707"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:54.711" level="INFO">Running command 'ozone sh bucket getacl --source 80075-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:57.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:57.938" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:33:54.709" endtime="20250617 21:33:57.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:57.938" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:33:57.938" endtime="20250617 21:33:57.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:57.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:57.939" endtime="20250617 21:33:57.939"/>
</kw>
<status status="PASS" starttime="20250617 21:33:54.708" endtime="20250617 21:33:57.939"/>
</kw>
<msg timestamp="20250617 21:33:57.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:54.708" endtime="20250617 21:33:57.939"/>
</kw>
<msg timestamp="20250617 21:33:57.939" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:33:54.708" endtime="20250617 21:33:57.939"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:33:57.939" endtime="20250617 21:33:57.940"/>
</kw>
<status status="PASS" starttime="20250617 21:33:54.707" endtime="20250617 21:33:57.940"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:57.943" level="INFO">Running command 'ozone sh bucket getacl 80075-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:00.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:00.884" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:33:57.941" endtime="20250617 21:34:00.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:00.885" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:34:00.885" endtime="20250617 21:34:00.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:00.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:00.885" endtime="20250617 21:34:00.886"/>
</kw>
<status status="PASS" starttime="20250617 21:33:57.941" endtime="20250617 21:34:00.886"/>
</kw>
<msg timestamp="20250617 21:34:00.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:57.941" endtime="20250617 21:34:00.886"/>
</kw>
<msg timestamp="20250617 21:34:00.886" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:33:57.940" endtime="20250617 21:34:00.886"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:00.886" endtime="20250617 21:34:00.887"/>
</kw>
<status status="PASS" starttime="20250617 21:33:57.940" endtime="20250617 21:34:00.887"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket removeacl --acl user:user1:y ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:00.890" level="INFO">Running command 'ozone sh bucket removeacl --acl user:user1:y 80075-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:03.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:03.669" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250617 21:34:00.888" endtime="20250617 21:34:03.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:03.670" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250617 21:34:03.669" endtime="20250617 21:34:03.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:03.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:03.670" endtime="20250617 21:34:03.670"/>
</kw>
<status status="PASS" starttime="20250617 21:34:00.887" endtime="20250617 21:34:03.670"/>
</kw>
<msg timestamp="20250617 21:34:03.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:00.887" endtime="20250617 21:34:03.671"/>
</kw>
<status status="PASS" starttime="20250617 21:34:00.887" endtime="20250617 21:34:03.671"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:03.675" level="INFO">Running command 'ozone sh bucket getacl 80075-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:06.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:06.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:34:03.673" endtime="20250617 21:34:06.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:06.639" level="INFO"/>
<status status="PASS" starttime="20250617 21:34:06.638" endtime="20250617 21:34:06.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:06.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:06.639" endtime="20250617 21:34:06.639"/>
</kw>
<status status="PASS" starttime="20250617 21:34:03.672" endtime="20250617 21:34:06.639"/>
</kw>
<msg timestamp="20250617 21:34:06.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:03.672" endtime="20250617 21:34:06.639"/>
</kw>
<msg timestamp="20250617 21:34:06.639" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250617 21:34:03.672" endtime="20250617 21:34:06.640"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:06.640" endtime="20250617 21:34:06.640"/>
</kw>
<status status="PASS" starttime="20250617 21:34:03.671" endtime="20250617 21:34:06.640"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:06.644" level="INFO">Running command 'ozone sh bucket getacl --source 80075-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:09.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:09.729" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:34:06.642" endtime="20250617 21:34:09.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:09.730" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:34:09.729" endtime="20250617 21:34:09.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:09.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:09.730" endtime="20250617 21:34:09.730"/>
</kw>
<status status="PASS" starttime="20250617 21:34:06.641" endtime="20250617 21:34:09.730"/>
</kw>
<msg timestamp="20250617 21:34:09.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:06.641" endtime="20250617 21:34:09.730"/>
</kw>
<msg timestamp="20250617 21:34:09.730" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:34:06.641" endtime="20250617 21:34:09.730"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:09.731" endtime="20250617 21:34:09.731"/>
</kw>
<status status="PASS" starttime="20250617 21:34:06.640" endtime="20250617 21:34:09.731"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setacl --acl user:user1:rw ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:09.734" level="INFO">Running command 'ozone sh bucket setacl --acl user:user1:rw 80075-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:12.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:12.398" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250617 21:34:09.732" endtime="20250617 21:34:12.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:12.399" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250617 21:34:12.398" endtime="20250617 21:34:12.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:12.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:12.399" endtime="20250617 21:34:12.399"/>
</kw>
<status status="PASS" starttime="20250617 21:34:09.732" endtime="20250617 21:34:12.400"/>
</kw>
<msg timestamp="20250617 21:34:12.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:09.731" endtime="20250617 21:34:12.400"/>
</kw>
<status status="PASS" starttime="20250617 21:34:09.731" endtime="20250617 21:34:12.400"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:12.404" level="INFO">Running command 'ozone sh bucket getacl 80075-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:15.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:15.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:34:12.402" endtime="20250617 21:34:15.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:15.339" level="INFO"/>
<status status="PASS" starttime="20250617 21:34:15.339" endtime="20250617 21:34:15.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:15.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:15.339" endtime="20250617 21:34:15.340"/>
</kw>
<status status="PASS" starttime="20250617 21:34:12.402" endtime="20250617 21:34:15.340"/>
</kw>
<msg timestamp="20250617 21:34:15.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:12.401" endtime="20250617 21:34:15.340"/>
</kw>
<msg timestamp="20250617 21:34:15.340" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250617 21:34:12.401" endtime="20250617 21:34:15.340"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:15.340" endtime="20250617 21:34:15.341"/>
</kw>
<status status="PASS" starttime="20250617 21:34:12.400" endtime="20250617 21:34:15.341"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:15.344" level="INFO">Running command 'ozone sh bucket getacl --source 80075-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:18.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:18.342" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250617 21:34:15.342" endtime="20250617 21:34:18.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:18.343" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250617 21:34:18.342" endtime="20250617 21:34:18.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:18.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:18.343" endtime="20250617 21:34:18.344"/>
</kw>
<status status="PASS" starttime="20250617 21:34:15.342" endtime="20250617 21:34:18.344"/>
</kw>
<msg timestamp="20250617 21:34:18.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:15.342" endtime="20250617 21:34:18.344"/>
</kw>
<msg timestamp="20250617 21:34:18.344" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250617 21:34:15.341" endtime="20250617 21:34:18.344"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:18.344" endtime="20250617 21:34:18.345"/>
</kw>
<status status="PASS" starttime="20250617 21:34:15.341" endtime="20250617 21:34:18.345"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:18.348" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 80075-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:21.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:21.015" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250617 21:34:18.346" endtime="20250617 21:34:21.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:21.016" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250617 21:34:21.015" endtime="20250617 21:34:21.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:21.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:21.016" endtime="20250617 21:34:21.016"/>
</kw>
<status status="PASS" starttime="20250617 21:34:18.345" endtime="20250617 21:34:21.016"/>
</kw>
<msg timestamp="20250617 21:34:21.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:18.345" endtime="20250617 21:34:21.016"/>
</kw>
<status status="PASS" starttime="20250617 21:34:18.345" endtime="20250617 21:34:21.017"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:21.020" level="INFO">Running command 'ozone sh bucket getacl 80075-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:23.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:23.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:34:21.018" endtime="20250617 21:34:23.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:23.945" level="INFO"/>
<status status="PASS" starttime="20250617 21:34:23.945" endtime="20250617 21:34:23.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:23.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:23.946" endtime="20250617 21:34:23.946"/>
</kw>
<status status="PASS" starttime="20250617 21:34:21.018" endtime="20250617 21:34:23.946"/>
</kw>
<msg timestamp="20250617 21:34:23.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:21.018" endtime="20250617 21:34:23.946"/>
</kw>
<msg timestamp="20250617 21:34:23.946" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20250617 21:34:21.017" endtime="20250617 21:34:23.946"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:23.947" endtime="20250617 21:34:23.947"/>
</kw>
<status status="PASS" starttime="20250617 21:34:21.017" endtime="20250617 21:34:23.947"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:23.951" level="INFO">Running command 'ozone sh bucket getacl --source 80075-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:26.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:26.948" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250617 21:34:23.949" endtime="20250617 21:34:26.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:26.949" level="INFO">READ</msg>
<status status="PASS" starttime="20250617 21:34:26.949" endtime="20250617 21:34:26.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:26.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:26.949" endtime="20250617 21:34:26.950"/>
</kw>
<status status="PASS" starttime="20250617 21:34:23.948" endtime="20250617 21:34:26.950"/>
</kw>
<msg timestamp="20250617 21:34:26.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:23.948" endtime="20250617 21:34:26.950"/>
</kw>
<msg timestamp="20250617 21:34:26.950" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250617 21:34:23.947" endtime="20250617 21:34:26.950"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:26.950" endtime="20250617 21:34:26.951"/>
</kw>
<status status="PASS" starttime="20250617 21:34:23.947" endtime="20250617 21:34:26.951"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:33:45.687" endtime="20250617 21:34:26.951"/>
</test>
<test id="s1-s3-s3-t9" name="Source and target key have same ACLs" line="156">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:34:26.952" endtime="20250617 21:34:26.952"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl user:user1:rwxy ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:26.955" level="INFO">Running command 'ozone sh key addacl --acl user:user1:rwxy 80075-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:29.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:29.678" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250617 21:34:26.953" endtime="20250617 21:34:29.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:29.679" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250617 21:34:29.679" endtime="20250617 21:34:29.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:29.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:29.680" endtime="20250617 21:34:29.680"/>
</kw>
<status status="PASS" starttime="20250617 21:34:26.953" endtime="20250617 21:34:29.680"/>
</kw>
<msg timestamp="20250617 21:34:29.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:26.952" endtime="20250617 21:34:29.680"/>
</kw>
<status status="PASS" starttime="20250617 21:34:26.952" endtime="20250617 21:34:29.680"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:29.684" level="INFO">Running command 'ozone sh key getacl 80075-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:32.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:32.651" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:34:29.682" endtime="20250617 21:34:32.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:32.652" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:34:32.651" endtime="20250617 21:34:32.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:32.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:32.652" endtime="20250617 21:34:32.652"/>
</kw>
<status status="PASS" starttime="20250617 21:34:29.682" endtime="20250617 21:34:32.652"/>
</kw>
<msg timestamp="20250617 21:34:32.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:29.681" endtime="20250617 21:34:32.652"/>
</kw>
<msg timestamp="20250617 21:34:32.653" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:34:29.681" endtime="20250617 21:34:32.653"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:32.653" endtime="20250617 21:34:32.653"/>
</kw>
<status status="PASS" starttime="20250617 21:34:29.680" endtime="20250617 21:34:32.653"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:32.657" level="INFO">Running command 'ozone sh key getacl 80075-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:35.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:35.639" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:34:32.655" endtime="20250617 21:34:35.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:35.640" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:34:35.640" endtime="20250617 21:34:35.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:35.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:35.640" endtime="20250617 21:34:35.641"/>
</kw>
<status status="PASS" starttime="20250617 21:34:32.654" endtime="20250617 21:34:35.641"/>
</kw>
<msg timestamp="20250617 21:34:35.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:32.654" endtime="20250617 21:34:35.641"/>
</kw>
<msg timestamp="20250617 21:34:35.641" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:34:32.654" endtime="20250617 21:34:35.641"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:35.641" endtime="20250617 21:34:35.642"/>
</kw>
<status status="PASS" starttime="20250617 21:34:32.653" endtime="20250617 21:34:35.642"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key removeacl --acl user:user1:y ${target}/link1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:35.645" level="INFO">Running command 'ozone sh key removeacl --acl user:user1:y 80075-target/link1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:38.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:38.362" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250617 21:34:35.643" endtime="20250617 21:34:38.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:38.362" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250617 21:34:38.362" endtime="20250617 21:34:38.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:38.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:38.363" endtime="20250617 21:34:38.363"/>
</kw>
<status status="PASS" starttime="20250617 21:34:35.642" endtime="20250617 21:34:38.363"/>
</kw>
<msg timestamp="20250617 21:34:38.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:35.642" endtime="20250617 21:34:38.363"/>
</kw>
<status status="PASS" starttime="20250617 21:34:35.642" endtime="20250617 21:34:38.363"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:38.367" level="INFO">Running command 'ozone sh key getacl 80075-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:41.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:41.245" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:34:38.365" endtime="20250617 21:34:41.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:41.246" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:34:41.246" endtime="20250617 21:34:41.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:41.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:41.246" endtime="20250617 21:34:41.247"/>
</kw>
<status status="PASS" starttime="20250617 21:34:38.365" endtime="20250617 21:34:41.247"/>
</kw>
<msg timestamp="20250617 21:34:41.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:38.364" endtime="20250617 21:34:41.247"/>
</kw>
<msg timestamp="20250617 21:34:41.247" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:34:38.364" endtime="20250617 21:34:41.247"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:41.247" endtime="20250617 21:34:41.247"/>
</kw>
<status status="PASS" starttime="20250617 21:34:38.364" endtime="20250617 21:34:41.247"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:41.251" level="INFO">Running command 'ozone sh key getacl 80075-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:44.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:44.313" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:34:41.249" endtime="20250617 21:34:44.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:44.314" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:34:44.314" endtime="20250617 21:34:44.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:44.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:44.315" endtime="20250617 21:34:44.315"/>
</kw>
<status status="PASS" starttime="20250617 21:34:41.249" endtime="20250617 21:34:44.315"/>
</kw>
<msg timestamp="20250617 21:34:44.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:41.248" endtime="20250617 21:34:44.315"/>
</kw>
<msg timestamp="20250617 21:34:44.315" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:34:41.248" endtime="20250617 21:34:44.315"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:44.315" endtime="20250617 21:34:44.316"/>
</kw>
<status status="PASS" starttime="20250617 21:34:41.248" endtime="20250617 21:34:44.316"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key setacl --acl user:user1:rw ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:44.319" level="INFO">Running command 'ozone sh key setacl --acl user:user1:rw 80075-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:47.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:47.153" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250617 21:34:44.317" endtime="20250617 21:34:47.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:47.154" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250617 21:34:47.153" endtime="20250617 21:34:47.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:47.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:47.154" endtime="20250617 21:34:47.154"/>
</kw>
<status status="PASS" starttime="20250617 21:34:44.316" endtime="20250617 21:34:47.154"/>
</kw>
<msg timestamp="20250617 21:34:47.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:44.316" endtime="20250617 21:34:47.154"/>
</kw>
<status status="PASS" starttime="20250617 21:34:44.316" endtime="20250617 21:34:47.154"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:47.158" level="INFO">Running command 'ozone sh key getacl 80075-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:50.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:50.074" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250617 21:34:47.156" endtime="20250617 21:34:50.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:50.075" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250617 21:34:50.074" endtime="20250617 21:34:50.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:50.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:50.075" endtime="20250617 21:34:50.075"/>
</kw>
<status status="PASS" starttime="20250617 21:34:47.156" endtime="20250617 21:34:50.076"/>
</kw>
<msg timestamp="20250617 21:34:50.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:47.155" endtime="20250617 21:34:50.076"/>
</kw>
<msg timestamp="20250617 21:34:50.076" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250617 21:34:47.155" endtime="20250617 21:34:50.076"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:50.076" endtime="20250617 21:34:50.076"/>
</kw>
<status status="PASS" starttime="20250617 21:34:47.155" endtime="20250617 21:34:50.076"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:50.080" level="INFO">Running command 'ozone sh key getacl 80075-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:52.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:52.921" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250617 21:34:50.078" endtime="20250617 21:34:52.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:52.922" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250617 21:34:52.921" endtime="20250617 21:34:52.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:52.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:52.922" endtime="20250617 21:34:52.922"/>
</kw>
<status status="PASS" starttime="20250617 21:34:50.077" endtime="20250617 21:34:52.922"/>
</kw>
<msg timestamp="20250617 21:34:52.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:50.077" endtime="20250617 21:34:52.922"/>
</kw>
<msg timestamp="20250617 21:34:52.923" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250617 21:34:50.077" endtime="20250617 21:34:52.923"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:52.923" endtime="20250617 21:34:52.923"/>
</kw>
<status status="PASS" starttime="20250617 21:34:50.076" endtime="20250617 21:34:52.923"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl group:group2:r ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:52.926" level="INFO">Running command 'ozone sh key addacl --acl group:group2:r 80075-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:55.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:55.778" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250617 21:34:52.924" endtime="20250617 21:34:55.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:55.779" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250617 21:34:55.779" endtime="20250617 21:34:55.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:55.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:55.779" endtime="20250617 21:34:55.780"/>
</kw>
<status status="PASS" starttime="20250617 21:34:52.924" endtime="20250617 21:34:55.780"/>
</kw>
<msg timestamp="20250617 21:34:55.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:52.923" endtime="20250617 21:34:55.780"/>
</kw>
<status status="PASS" starttime="20250617 21:34:52.923" endtime="20250617 21:34:55.780"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:55.784" level="INFO">Running command 'ozone sh key getacl 80075-target/link1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:58.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:58.672" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250617 21:34:55.782" endtime="20250617 21:34:58.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:58.673" level="INFO">READ</msg>
<status status="PASS" starttime="20250617 21:34:58.672" endtime="20250617 21:34:58.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:58.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:58.673" endtime="20250617 21:34:58.674"/>
</kw>
<status status="PASS" starttime="20250617 21:34:55.782" endtime="20250617 21:34:58.674"/>
</kw>
<msg timestamp="20250617 21:34:58.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:55.781" endtime="20250617 21:34:58.674"/>
</kw>
<msg timestamp="20250617 21:34:58.674" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250617 21:34:55.781" endtime="20250617 21:34:58.674"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:34:58.674" endtime="20250617 21:34:58.674"/>
</kw>
<status status="PASS" starttime="20250617 21:34:55.780" endtime="20250617 21:34:58.674"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:58.678" level="INFO">Running command 'ozone sh key getacl 80075-source/bucket1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:01.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:01.681" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250617 21:34:58.676" endtime="20250617 21:35:01.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:01.682" level="INFO">READ</msg>
<status status="PASS" starttime="20250617 21:35:01.682" endtime="20250617 21:35:01.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:01.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:01.682" endtime="20250617 21:35:01.683"/>
</kw>
<status status="PASS" starttime="20250617 21:34:58.676" endtime="20250617 21:35:01.683"/>
</kw>
<msg timestamp="20250617 21:35:01.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:58.676" endtime="20250617 21:35:01.683"/>
</kw>
<msg timestamp="20250617 21:35:01.683" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250617 21:34:58.675" endtime="20250617 21:35:01.683"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:35:01.683" endtime="20250617 21:35:01.684"/>
</kw>
<status status="PASS" starttime="20250617 21:34:58.675" endtime="20250617 21:35:01.684"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:34:26.951" endtime="20250617 21:35:01.684"/>
</test>
<test id="s1-s3-s3-t10" name="Source and target prefix have same ACLs" line="171">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:35:01.685" endtime="20250617 21:35:01.685"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl --acl user:user1:rwxy ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:01.688" level="INFO">Running command 'ozone sh prefix addacl --acl user:user1:rwxy 80075-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:04.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:04.492" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250617 21:35:01.686" endtime="20250617 21:35:04.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:04.493" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250617 21:35:04.492" endtime="20250617 21:35:04.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:04.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:04.493" endtime="20250617 21:35:04.493"/>
</kw>
<status status="PASS" starttime="20250617 21:35:01.686" endtime="20250617 21:35:04.493"/>
</kw>
<msg timestamp="20250617 21:35:04.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:01.685" endtime="20250617 21:35:04.494"/>
</kw>
<status status="PASS" starttime="20250617 21:35:01.685" endtime="20250617 21:35:04.494"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:04.498" level="INFO">Running command 'ozone sh prefix getacl 80075-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:07.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:07.524" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:35:04.495" endtime="20250617 21:35:07.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:07.525" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:35:07.525" endtime="20250617 21:35:07.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:07.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:07.525" endtime="20250617 21:35:07.526"/>
</kw>
<status status="PASS" starttime="20250617 21:35:04.495" endtime="20250617 21:35:07.526"/>
</kw>
<msg timestamp="20250617 21:35:07.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:04.495" endtime="20250617 21:35:07.526"/>
</kw>
<msg timestamp="20250617 21:35:07.526" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:35:04.494" endtime="20250617 21:35:07.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:35:07.526" endtime="20250617 21:35:07.526"/>
</kw>
<status status="PASS" starttime="20250617 21:35:04.494" endtime="20250617 21:35:07.527"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:07.530" level="INFO">Running command 'ozone sh prefix getacl 80075-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:10.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:10.472" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:35:07.528" endtime="20250617 21:35:10.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:10.473" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:35:10.472" endtime="20250617 21:35:10.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:10.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:10.473" endtime="20250617 21:35:10.473"/>
</kw>
<status status="PASS" starttime="20250617 21:35:07.528" endtime="20250617 21:35:10.474"/>
</kw>
<msg timestamp="20250617 21:35:10.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:07.528" endtime="20250617 21:35:10.474"/>
</kw>
<msg timestamp="20250617 21:35:10.474" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20250617 21:35:07.527" endtime="20250617 21:35:10.474"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:35:10.474" endtime="20250617 21:35:10.474"/>
</kw>
<status status="PASS" starttime="20250617 21:35:07.527" endtime="20250617 21:35:10.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix removeacl --acl user:user1:y ${target}/link1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:10.477" level="INFO">Running command 'ozone sh prefix removeacl --acl user:user1:y 80075-target/link1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:13.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:13.146" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250617 21:35:10.475" endtime="20250617 21:35:13.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:13.147" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20250617 21:35:13.147" endtime="20250617 21:35:13.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:13.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:13.147" endtime="20250617 21:35:13.148"/>
</kw>
<status status="PASS" starttime="20250617 21:35:10.475" endtime="20250617 21:35:13.148"/>
</kw>
<msg timestamp="20250617 21:35:13.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:10.475" endtime="20250617 21:35:13.148"/>
</kw>
<status status="PASS" starttime="20250617 21:35:10.474" endtime="20250617 21:35:13.148"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:13.152" level="INFO">Running command 'ozone sh prefix getacl 80075-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:16.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:16.126" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:35:13.150" endtime="20250617 21:35:16.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:16.127" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:35:16.127" endtime="20250617 21:35:16.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:16.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:16.127" endtime="20250617 21:35:16.128"/>
</kw>
<status status="PASS" starttime="20250617 21:35:13.149" endtime="20250617 21:35:16.128"/>
</kw>
<msg timestamp="20250617 21:35:16.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:13.149" endtime="20250617 21:35:16.128"/>
</kw>
<msg timestamp="20250617 21:35:16.128" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:35:13.149" endtime="20250617 21:35:16.128"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:35:16.128" endtime="20250617 21:35:16.129"/>
</kw>
<status status="PASS" starttime="20250617 21:35:13.148" endtime="20250617 21:35:16.129"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:16.133" level="INFO">Running command 'ozone sh prefix getacl 80075-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:19.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:19.126" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:35:16.131" endtime="20250617 21:35:19.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:19.127" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:35:19.127" endtime="20250617 21:35:19.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:19.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:19.127" endtime="20250617 21:35:19.128"/>
</kw>
<status status="PASS" starttime="20250617 21:35:16.130" endtime="20250617 21:35:19.128"/>
</kw>
<msg timestamp="20250617 21:35:19.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:16.130" endtime="20250617 21:35:19.128"/>
</kw>
<msg timestamp="20250617 21:35:19.128" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20250617 21:35:16.129" endtime="20250617 21:35:19.128"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:35:19.128" endtime="20250617 21:35:19.129"/>
</kw>
<status status="PASS" starttime="20250617 21:35:16.129" endtime="20250617 21:35:19.129"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix setacl --acl user:user1:rw ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:19.132" level="INFO">Running command 'ozone sh prefix setacl --acl user:user1:rw 80075-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:21.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:21.833" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20250617 21:35:19.130" endtime="20250617 21:35:21.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:21.834" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20250617 21:35:21.834" endtime="20250617 21:35:21.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:21.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:21.834" endtime="20250617 21:35:21.835"/>
</kw>
<status status="PASS" starttime="20250617 21:35:19.129" endtime="20250617 21:35:21.835"/>
</kw>
<msg timestamp="20250617 21:35:21.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:19.129" endtime="20250617 21:35:21.835"/>
</kw>
<status status="PASS" starttime="20250617 21:35:19.129" endtime="20250617 21:35:21.835"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:21.839" level="INFO">Running command 'ozone sh prefix getacl 80075-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:24.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:24.905" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250617 21:35:21.836" endtime="20250617 21:35:24.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:24.905" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250617 21:35:24.905" endtime="20250617 21:35:24.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:24.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:24.906" endtime="20250617 21:35:24.906"/>
</kw>
<status status="PASS" starttime="20250617 21:35:21.836" endtime="20250617 21:35:24.906"/>
</kw>
<msg timestamp="20250617 21:35:24.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:21.836" endtime="20250617 21:35:24.906"/>
</kw>
<msg timestamp="20250617 21:35:24.906" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250617 21:35:21.835" endtime="20250617 21:35:24.906"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:35:24.906" endtime="20250617 21:35:24.907"/>
</kw>
<status status="PASS" starttime="20250617 21:35:21.835" endtime="20250617 21:35:24.907"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:24.910" level="INFO">Running command 'ozone sh prefix getacl 80075-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:27.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:27.790" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20250617 21:35:24.908" endtime="20250617 21:35:27.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:27.791" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20250617 21:35:27.791" endtime="20250617 21:35:27.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:27.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:27.791" endtime="20250617 21:35:27.792"/>
</kw>
<status status="PASS" starttime="20250617 21:35:24.908" endtime="20250617 21:35:27.792"/>
</kw>
<msg timestamp="20250617 21:35:27.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:24.908" endtime="20250617 21:35:27.792"/>
</kw>
<msg timestamp="20250617 21:35:27.792" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20250617 21:35:24.907" endtime="20250617 21:35:27.792"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:35:27.792" endtime="20250617 21:35:27.792"/>
</kw>
<status status="PASS" starttime="20250617 21:35:24.907" endtime="20250617 21:35:27.792"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl --acl group:group2:r ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:27.796" level="INFO">Running command 'ozone sh prefix addacl --acl group:group2:r 80075-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:30.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:30.504" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250617 21:35:27.794" endtime="20250617 21:35:30.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:30.505" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20250617 21:35:30.504" endtime="20250617 21:35:30.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:30.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:30.505" endtime="20250617 21:35:30.505"/>
</kw>
<status status="PASS" starttime="20250617 21:35:27.793" endtime="20250617 21:35:30.506"/>
</kw>
<msg timestamp="20250617 21:35:30.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:27.793" endtime="20250617 21:35:30.506"/>
</kw>
<status status="PASS" starttime="20250617 21:35:27.792" endtime="20250617 21:35:30.506"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:30.510" level="INFO">Running command 'ozone sh prefix getacl 80075-target/link1/prefix1/ | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:33.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:33.486" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250617 21:35:30.508" endtime="20250617 21:35:33.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:33.487" level="INFO">READ</msg>
<status status="PASS" starttime="20250617 21:35:33.487" endtime="20250617 21:35:33.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:33.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:33.488" endtime="20250617 21:35:33.488"/>
</kw>
<status status="PASS" starttime="20250617 21:35:30.507" endtime="20250617 21:35:33.488"/>
</kw>
<msg timestamp="20250617 21:35:33.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:30.507" endtime="20250617 21:35:33.488"/>
</kw>
<msg timestamp="20250617 21:35:33.488" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250617 21:35:30.506" endtime="20250617 21:35:33.488"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:35:33.488" endtime="20250617 21:35:33.489"/>
</kw>
<status status="PASS" starttime="20250617 21:35:30.506" endtime="20250617 21:35:33.489"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:33.492" level="INFO">Running command 'ozone sh prefix getacl 80075-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:36.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:36.367" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20250617 21:35:33.490" endtime="20250617 21:35:36.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:36.368" level="INFO">READ</msg>
<status status="PASS" starttime="20250617 21:35:36.368" endtime="20250617 21:35:36.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:36.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:36.368" endtime="20250617 21:35:36.369"/>
</kw>
<status status="PASS" starttime="20250617 21:35:33.490" endtime="20250617 21:35:36.369"/>
</kw>
<msg timestamp="20250617 21:35:36.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:33.490" endtime="20250617 21:35:36.369"/>
</kw>
<msg timestamp="20250617 21:35:36.369" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20250617 21:35:33.489" endtime="20250617 21:35:36.369"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:35:36.369" endtime="20250617 21:35:36.369"/>
</kw>
<status status="PASS" starttime="20250617 21:35:33.489" endtime="20250617 21:35:36.369"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:35:01.684" endtime="20250617 21:35:36.370"/>
</test>
<test id="s1-s3-s3-t11" name="Buckets and links share namespace" line="186">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:35:36.371" endtime="20250617 21:35:36.371"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:36.374" level="INFO">Running command 'ozone sh bucket link 80075-source/bucket2 80075-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:39.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:39.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:35:36.372" endtime="20250617 21:35:39.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:39.208" level="INFO"/>
<status status="PASS" starttime="20250617 21:35:39.208" endtime="20250617 21:35:39.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:39.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:39.208" endtime="20250617 21:35:39.209"/>
</kw>
<status status="PASS" starttime="20250617 21:35:36.372" endtime="20250617 21:35:39.209"/>
</kw>
<msg timestamp="20250617 21:35:39.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:36.371" endtime="20250617 21:35:39.209"/>
</kw>
<status status="PASS" starttime="20250617 21:35:36.371" endtime="20250617 21:35:39.209"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:39.211" level="INFO">Running command 'ozone sh bucket create 80075-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:41.995" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:35:41.995" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250617 21:35:39.209" endtime="20250617 21:35:41.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:41.996" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250617 21:35:41.995" endtime="20250617 21:35:41.996"/>
</kw>
<msg timestamp="20250617 21:35:41.996" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250617 21:35:39.209" endtime="20250617 21:35:41.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:35:41.997" endtime="20250617 21:35:41.997"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:42.001" level="INFO">Running command 'ozone sh bucket create 80075-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:44.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:44.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:35:41.998" endtime="20250617 21:35:44.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:44.705" level="INFO"/>
<status status="PASS" starttime="20250617 21:35:44.705" endtime="20250617 21:35:44.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:44.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:44.706" endtime="20250617 21:35:44.706"/>
</kw>
<status status="PASS" starttime="20250617 21:35:41.998" endtime="20250617 21:35:44.706"/>
</kw>
<msg timestamp="20250617 21:35:44.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:41.998" endtime="20250617 21:35:44.706"/>
</kw>
<status status="PASS" starttime="20250617 21:35:41.997" endtime="20250617 21:35:44.706"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:44.709" level="INFO">Running command 'ozone sh bucket link 80075-source/bucket1 80075-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:47.539" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:35:47.539" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250617 21:35:44.707" endtime="20250617 21:35:47.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:47.540" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250617 21:35:47.540" endtime="20250617 21:35:47.540"/>
</kw>
<msg timestamp="20250617 21:35:47.541" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20250617 21:35:44.706" endtime="20250617 21:35:47.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:35:47.541" endtime="20250617 21:35:47.541"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:35:36.370" endtime="20250617 21:35:47.541"/>
</test>
<test id="s1-s3-s3-t12" name="Can follow link with read access" line="195">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:35:47.542" endtime="20250617 21:35:47.542"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:35:47.542" endtime="20250617 21:35:47.543"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:35:47.542" endtime="20250617 21:35:47.543"/>
</test>
<test id="s1-s3-s3-t13" name="Cannot follow link without read access" line="198">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:35:47.543" endtime="20250617 21:35:47.544"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:35:47.544" endtime="20250617 21:35:47.544"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:35:47.543" endtime="20250617 21:35:47.544"/>
</test>
<test id="s1-s3-s3-t14" name="ACL verified on source and target bucket" line="201">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:35:47.545" endtime="20250617 21:35:47.545"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source and target bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:35:47.545" endtime="20250617 21:35:47.545"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:35:47.544" endtime="20250617 21:35:47.545"/>
</test>
<test id="s1-s3-s3-t15" name="Loop in link chain is detected" line="204">
<kw name="Create link loop" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:35:47.546" endtime="20250617 21:35:47.546"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket link ${target}/loop1 ${target}/loop2</arg>
<arg>bucket link ${target}/loop2 ${target}/loop3</arg>
<arg>bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250617 21:35:47.547" level="INFO">${cmd} = bucket link 80075-target/loop1 80075-target/loop2' --execute 'bucket link 80075-target/loop2 80075-target/loop3' --execute 'bucket link 80075-target/loop3 80075-target/loop1</msg>
<status status="PASS" starttime="20250617 21:35:47.547" endtime="20250617 21:35:47.547"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:47.550" level="INFO">Running command 'ozone sh --execute 'bucket link 80075-target/loop1 80075-target/loop2' --execute 'bucket link 80075-target/loop2 80075-target/loop3' --execute 'bucket link 80075-target/loop3 80075-target/loop1' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:50.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:50.476" level="INFO">${output} = bucket link 80075-target/loop1 80075-target/loop2
bucket link 80075-target/loop2 80075-target/loop3
bucket link 80075-target/loop3 80075-target/loop1</msg>
<status status="PASS" starttime="20250617 21:35:47.548" endtime="20250617 21:35:50.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:50.477" level="INFO">bucket link 80075-target/loop1 80075-target/loop2
bucket link 80075-target/loop2 80075-target/loop3
bucket link 80075-target/loop3 80075-target/loop1</msg>
<status status="PASS" starttime="20250617 21:35:50.477" endtime="20250617 21:35:50.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:50.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:50.477" endtime="20250617 21:35:50.478"/>
</kw>
<status status="PASS" starttime="20250617 21:35:47.547" endtime="20250617 21:35:50.478"/>
</kw>
<msg timestamp="20250617 21:35:50.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:47.547" endtime="20250617 21:35:50.478"/>
</kw>
<status status="PASS" starttime="20250617 21:35:47.546" endtime="20250617 21:35:50.478"/>
</kw>
<status status="PASS" starttime="20250617 21:35:47.546" endtime="20250617 21:35:50.478"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:50.481" level="INFO">Running command 'ozone sh key list 80075-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:53.174" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:35:53.175" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20250617 21:35:50.479" endtime="20250617 21:35:53.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:53.175" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20250617 21:35:53.175" endtime="20250617 21:35:53.176"/>
</kw>
<msg timestamp="20250617 21:35:53.176" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20250617 21:35:50.478" endtime="20250617 21:35:53.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:35:53.176" endtime="20250617 21:35:53.176"/>
</kw>
<kw name="Delete link loop" type="TEARDOWN">
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket delete ${target}/loop1</arg>
<arg>bucket delete ${target}/loop2</arg>
<arg>bucket delete ${target}/loop3</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250617 21:35:53.177" level="INFO">${cmd} = bucket delete 80075-target/loop1' --execute 'bucket delete 80075-target/loop2' --execute 'bucket delete 80075-target/loop3</msg>
<status status="PASS" starttime="20250617 21:35:53.177" endtime="20250617 21:35:53.177"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:53.180" level="INFO">Running command 'ozone sh --execute 'bucket delete 80075-target/loop1' --execute 'bucket delete 80075-target/loop2' --execute 'bucket delete 80075-target/loop3' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:56.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:56.170" level="INFO">${output} = bucket delete 80075-target/loop1
Bucket loop1 is deleted
bucket delete 80075-target/loop2
Bucket loop2 is deleted
bucket delete 80075-target/loop3
Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20250617 21:35:53.178" endtime="20250617 21:35:56.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:56.170" level="INFO">bucket delete 80075-target/loop1
Bucket loop1 is deleted
bucket delete 80075-target/loop2
Bucket loop2 is deleted
bucket delete 80075-target/loop3
Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20250617 21:35:56.170" endtime="20250617 21:35:56.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:56.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:56.171" endtime="20250617 21:35:56.171"/>
</kw>
<status status="PASS" starttime="20250617 21:35:53.178" endtime="20250617 21:35:56.171"/>
</kw>
<msg timestamp="20250617 21:35:56.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:53.177" endtime="20250617 21:35:56.171"/>
</kw>
<status status="PASS" starttime="20250617 21:35:53.177" endtime="20250617 21:35:56.171"/>
</kw>
<status status="PASS" starttime="20250617 21:35:53.176" endtime="20250617 21:35:56.171"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:35:47.546" endtime="20250617 21:35:56.171"/>
</test>
<test id="s1-s3-s3-t16" name="Multiple links to same bucket are allowed" line="210">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:35:56.172" endtime="20250617 21:35:56.173"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket link ${source}/bucket1 ${target}/link3</arg>
<arg>key put ${target}/link3/key3 /etc/group</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250617 21:35:56.174" level="INFO">${cmd} = bucket link 80075-source/bucket1 80075-target/link3' --execute 'key put 80075-target/link3/key3 /etc/group</msg>
<status status="PASS" starttime="20250617 21:35:56.173" endtime="20250617 21:35:56.174"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:56.176" level="INFO">Running command 'ozone sh --execute 'bucket link 80075-source/bucket1 80075-target/link3' --execute 'key put 80075-target/link3/key3 /etc/group' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:00.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:00.637" level="INFO">${output} = bucket link 80075-source/bucket1 80075-target/link3
key put 80075-target/link3/key3 /etc/group</msg>
<status status="PASS" starttime="20250617 21:35:56.174" endtime="20250617 21:36:00.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:00.638" level="INFO">bucket link 80075-source/bucket1 80075-target/link3
key put 80075-target/link3/key3 /etc/group</msg>
<status status="PASS" starttime="20250617 21:36:00.637" endtime="20250617 21:36:00.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:00.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:00.638" endtime="20250617 21:36:00.638"/>
</kw>
<status status="PASS" starttime="20250617 21:35:56.174" endtime="20250617 21:36:00.639"/>
</kw>
<msg timestamp="20250617 21:36:00.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:56.174" endtime="20250617 21:36:00.639"/>
</kw>
<status status="PASS" starttime="20250617 21:35:56.173" endtime="20250617 21:36:00.639"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:36:00.640" level="INFO">${postfix} = 01079</msg>
<status status="PASS" starttime="20250617 21:36:00.640" endtime="20250617 21:36:00.640"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250617 21:36:00.640" level="INFO">${tmpfile} = /tmp/tempkey-01079</msg>
<status status="PASS" starttime="20250617 21:36:00.640" endtime="20250617 21:36:00.640"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone ${cmd} ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:00.644" level="INFO">Running command 'ozone sh key get 80075-target/link1/key3 /tmp/tempkey-01079 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:04.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:04.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:36:00.641" endtime="20250617 21:36:04.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:04.571" level="INFO"/>
<status status="PASS" starttime="20250617 21:36:04.570" endtime="20250617 21:36:04.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:04.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:04.571" endtime="20250617 21:36:04.571"/>
</kw>
<status status="PASS" starttime="20250617 21:36:00.641" endtime="20250617 21:36:04.571"/>
</kw>
<msg timestamp="20250617 21:36:04.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:00.641" endtime="20250617 21:36:04.571"/>
</kw>
<status status="PASS" starttime="20250617 21:36:00.640" endtime="20250617 21:36:04.572"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20250617 21:36:04.574" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-01079 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:04.576" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20250617 21:36:04.572" endtime="20250617 21:36:04.576"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:04.580" level="INFO">Running command 'rm -f /tmp/tempkey-01079 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:04.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:04.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:36:04.578" endtime="20250617 21:36:04.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:04.583" level="INFO"/>
<status status="PASS" starttime="20250617 21:36:04.583" endtime="20250617 21:36:04.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:04.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:04.584" endtime="20250617 21:36:04.584"/>
</kw>
<status status="PASS" starttime="20250617 21:36:04.577" endtime="20250617 21:36:04.584"/>
</kw>
<msg timestamp="20250617 21:36:04.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:04.577" endtime="20250617 21:36:04.584"/>
</kw>
<status status="PASS" starttime="20250617 21:36:04.577" endtime="20250617 21:36:04.584"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20250617 21:36:04.585" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20250617 21:36:04.584" endtime="20250617 21:36:04.585"/>
</kw>
<msg timestamp="20250617 21:36:04.585" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20250617 21:36:00.639" endtime="20250617 21:36:04.585"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250617 21:36:04.585" endtime="20250617 21:36:04.585"/>
</kw>
<status status="PASS" starttime="20250617 21:36:00.639" endtime="20250617 21:36:04.585"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:35:56.172" endtime="20250617 21:36:04.585"/>
</test>
<test id="s1-s3-s3-t17" name="Source bucket not affected by deleting link" line="215">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:36:04.586" endtime="20250617 21:36:04.586"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:04.589" level="INFO">Running command 'ozone sh bucket delete 80075-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:07.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:07.387" level="INFO">${output} = Bucket link1 is deleted</msg>
<status status="PASS" starttime="20250617 21:36:04.587" endtime="20250617 21:36:07.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:07.388" level="INFO">Bucket link1 is deleted</msg>
<status status="PASS" starttime="20250617 21:36:07.387" endtime="20250617 21:36:07.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:07.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:07.388" endtime="20250617 21:36:07.388"/>
</kw>
<status status="PASS" starttime="20250617 21:36:04.587" endtime="20250617 21:36:07.388"/>
</kw>
<msg timestamp="20250617 21:36:07.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:04.587" endtime="20250617 21:36:07.388"/>
</kw>
<status status="PASS" starttime="20250617 21:36:04.586" endtime="20250617 21:36:07.388"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:07.392" level="INFO">Running command 'ozone sh bucket list 80075-target 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:10.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:10.470" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "80075-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "...</msg>
<status status="PASS" starttime="20250617 21:36:07.389" endtime="20250617 21:36:10.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:10.471" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "80075-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2025-06-17T21:35:44.614Z",
  "modificationTime" : "2025-06-17T21:35:44.614Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}, {
  "volumeName" : "80075-target",
  "name" : "dangling-link",
  "sourceVolume" : "80075-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2025-06-17T21:33:07.738Z",
  "modificationTime" : "2025-06-17T21:33:07.738Z",
  "owner" : "hadoop",
  "link" : true
}, {
  "volumeName" : "80075-target",
  "name" : "link2",
  "sourceVolume" : "80075-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2025-06-17T21:35:39.087Z",
  "modificationTime" : "2025-06-17T21:35:39.087Z",
  "owner" : "hadoop",
  "link" : true
}, {
  "volumeName" : "80075-target",
  "name" : "link3",
  "sourceVolume" : "80075-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-17T21:35:59.048Z",
  "modificationTime" : "2025-06-17T21:35:59.048Z",
  "owner" : "hadoop",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20250617 21:36:10.470" endtime="20250617 21:36:10.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:10.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:10.471" endtime="20250617 21:36:10.471"/>
</kw>
<status status="PASS" starttime="20250617 21:36:07.389" endtime="20250617 21:36:10.472"/>
</kw>
<msg timestamp="20250617 21:36:10.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:07.389" endtime="20250617 21:36:10.472"/>
</kw>
<msg timestamp="20250617 21:36:10.472" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "80075-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "...</msg>
<status status="PASS" starttime="20250617 21:36:07.389" endtime="20250617 21:36:10.472"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:36:10.472" endtime="20250617 21:36:10.472"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:10.476" level="INFO">Running command 'ozone sh key list 80075-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:13.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:13.407" level="INFO">${output} = .Trash/
.Trash/hadoop/
key1
key3</msg>
<status status="PASS" starttime="20250617 21:36:10.473" endtime="20250617 21:36:13.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:13.408" level="INFO">.Trash/
.Trash/hadoop/
key1
key3</msg>
<status status="PASS" starttime="20250617 21:36:13.407" endtime="20250617 21:36:13.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:13.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:13.408" endtime="20250617 21:36:13.408"/>
</kw>
<status status="PASS" starttime="20250617 21:36:10.473" endtime="20250617 21:36:13.408"/>
</kw>
<msg timestamp="20250617 21:36:13.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:10.473" endtime="20250617 21:36:13.409"/>
</kw>
<msg timestamp="20250617 21:36:13.409" level="INFO">${source_list} = .Trash/
.Trash/hadoop/
key1
key3</msg>
<status status="PASS" starttime="20250617 21:36:10.472" endtime="20250617 21:36:13.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:36:13.409" endtime="20250617 21:36:13.409"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:36:04.586" endtime="20250617 21:36:13.409"/>
</test>
<test id="s1-s3-s3-t18" name="Setting bucket property on link not allowed" line="222">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:36:13.410" endtime="20250617 21:36:13.410"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:13.413" level="INFO">Running command 'ozone sh bucket link 80075-source/bucket1 80075-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:16.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:16.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:36:13.411" endtime="20250617 21:36:16.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:16.232" level="INFO"/>
<status status="PASS" starttime="20250617 21:36:16.231" endtime="20250617 21:36:16.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:16.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:16.232" endtime="20250617 21:36:16.232"/>
</kw>
<status status="PASS" starttime="20250617 21:36:13.411" endtime="20250617 21:36:16.232"/>
</kw>
<msg timestamp="20250617 21:36:16.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:13.411" endtime="20250617 21:36:16.232"/>
</kw>
<status status="PASS" starttime="20250617 21:36:13.411" endtime="20250617 21:36:16.233"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:16.235" level="INFO">Running command 'ozone sh bucket setquota 80075-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:19.059" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:36:19.059" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20250617 21:36:16.233" endtime="20250617 21:36:19.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:19.060" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20250617 21:36:19.060" endtime="20250617 21:36:19.060"/>
</kw>
<msg timestamp="20250617 21:36:19.060" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20250617 21:36:16.233" endtime="20250617 21:36:19.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:36:19.061" endtime="20250617 21:36:19.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:19.064" level="INFO">Running command 'ozone sh bucket info 80075-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:22.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:22.012" level="INFO">${output} = {
  "volumeName" : "80075-target",
  "name" : "link4",
  "sourceVolume" : "80075-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-17T21:36:16.128Z",
  "modificationTime" : "2025-06-1...</msg>
<status status="PASS" starttime="20250617 21:36:19.062" endtime="20250617 21:36:22.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:22.013" level="INFO">{
  "volumeName" : "80075-target",
  "name" : "link4",
  "sourceVolume" : "80075-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-17T21:36:16.128Z",
  "modificationTime" : "2025-06-17T21:36:16.128Z",
  "owner" : "hadoop",
  "link" : true
}</msg>
<status status="PASS" starttime="20250617 21:36:22.013" endtime="20250617 21:36:22.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:22.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:22.013" endtime="20250617 21:36:22.014"/>
</kw>
<status status="PASS" starttime="20250617 21:36:19.062" endtime="20250617 21:36:22.014"/>
</kw>
<msg timestamp="20250617 21:36:22.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:19.061" endtime="20250617 21:36:22.014"/>
</kw>
<msg timestamp="20250617 21:36:22.014" level="INFO">${result} = {
  "volumeName" : "80075-target",
  "name" : "link4",
  "sourceVolume" : "80075-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2025-06-17T21:36:16.128Z",
  "modificationTime" : "2025-06-1...</msg>
<status status="PASS" starttime="20250617 21:36:19.061" endtime="20250617 21:36:22.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:36:22.014" endtime="20250617 21:36:22.015"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20250617 21:36:13.410" endtime="20250617 21:36:22.015"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20250617 21:33:01.955" endtime="20250617 21:36:22.016"/>
</suite>
<suite id="s1-s3-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:36:22.047" level="INFO">${random} = 65013</msg>
<status status="PASS" starttime="20250617 21:36:22.047" endtime="20250617 21:36:22.047"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:36:22.048" level="INFO">${prefix} = 65013</msg>
<status status="PASS" starttime="20250617 21:36:22.047" endtime="20250617 21:36:22.048"/>
</kw>
<status status="PASS" starttime="20250617 21:36:22.047" endtime="20250617 21:36:22.048"/>
</kw>
<test id="s1-s3-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:22.052" level="INFO">Running command 'ozone sh volume info /65013-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:24.869" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:36:24.869" level="INFO">${output} = VOLUME_NOT_FOUND Volume 65013-without-scheme is not found</msg>
<status status="PASS" starttime="20250617 21:36:22.050" endtime="20250617 21:36:24.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:24.870" level="INFO">VOLUME_NOT_FOUND Volume 65013-without-scheme is not found</msg>
<status status="PASS" starttime="20250617 21:36:24.869" endtime="20250617 21:36:24.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:24.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:24.870" endtime="20250617 21:36:24.870"/>
</kw>
<msg timestamp="20250617 21:36:24.871" level="INFO">${result} = VOLUME_NOT_FOUND Volume 65013-without-scheme is not found</msg>
<status status="PASS" starttime="20250617 21:36:22.049" endtime="20250617 21:36:24.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:36:24.871" endtime="20250617 21:36:24.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:24.874" level="INFO">Running command 'ozone sh volume create /65013-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:27.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:27.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:36:24.872" endtime="20250617 21:36:27.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:27.623" level="INFO"/>
<status status="PASS" starttime="20250617 21:36:27.622" endtime="20250617 21:36:27.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:27.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:27.623" endtime="20250617 21:36:27.623"/>
</kw>
<status status="PASS" starttime="20250617 21:36:24.872" endtime="20250617 21:36:27.623"/>
</kw>
<msg timestamp="20250617 21:36:27.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:24.871" endtime="20250617 21:36:27.623"/>
</kw>
<msg timestamp="20250617 21:36:27.624" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250617 21:36:24.871" endtime="20250617 21:36:27.624"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250617 21:36:27.624" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250617 21:36:27.624" endtime="20250617 21:36:27.624"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:27.627" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="65013-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:30.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:30.518" level="INFO">${output} = {
  "metadata": {},
  "name": "65013-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2...</msg>
<status status="PASS" starttime="20250617 21:36:27.625" endtime="20250617 21:36:30.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:30.519" level="INFO">{
  "metadata": {},
  "name": "65013-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2025-06-17T21:36:27.532Z",
  "modificationTime": "2025-06-17T21:36:27.532Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ],
      "aclSet": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "READ",
        "LIST"
      ],
      "aclSet": [
        "READ",
        "LIST"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20250617 21:36:30.518" endtime="20250617 21:36:30.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:30.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:30.519" endtime="20250617 21:36:30.519"/>
</kw>
<status status="PASS" starttime="20250617 21:36:27.625" endtime="20250617 21:36:30.520"/>
</kw>
<msg timestamp="20250617 21:36:30.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:27.625" endtime="20250617 21:36:30.520"/>
</kw>
<msg timestamp="20250617 21:36:30.520" level="INFO">${result} = {
  "metadata": {},
  "name": "65013-without-scheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2...</msg>
<status status="PASS" starttime="20250617 21:36:27.624" endtime="20250617 21:36:30.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:36:30.520" endtime="20250617 21:36:30.520"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:30.523" level="INFO">Running command 'ozone sh volume setquota /65013-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:33.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:33.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:36:30.521" endtime="20250617 21:36:33.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:33.286" level="INFO"/>
<status status="PASS" starttime="20250617 21:36:33.285" endtime="20250617 21:36:33.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:33.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:33.286" endtime="20250617 21:36:33.286"/>
</kw>
<status status="PASS" starttime="20250617 21:36:30.521" endtime="20250617 21:36:33.286"/>
</kw>
<msg timestamp="20250617 21:36:33.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:30.521" endtime="20250617 21:36:33.287"/>
</kw>
<status status="PASS" starttime="20250617 21:36:30.520" endtime="20250617 21:36:33.287"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:33.290" level="INFO">Running command 'ozone sh volume info /65013-without-scheme | jq -r '. | select(.name=="65013-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:36.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:36.234" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250617 21:36:33.288" endtime="20250617 21:36:36.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:36.235" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250617 21:36:36.235" endtime="20250617 21:36:36.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:36.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:36.236" endtime="20250617 21:36:36.236"/>
</kw>
<status status="PASS" starttime="20250617 21:36:33.288" endtime="20250617 21:36:36.236"/>
</kw>
<msg timestamp="20250617 21:36:36.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:33.287" endtime="20250617 21:36:36.236"/>
</kw>
<msg timestamp="20250617 21:36:36.236" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250617 21:36:33.287" endtime="20250617 21:36:36.236"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:36:36.236" endtime="20250617 21:36:36.237"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:36.240" level="INFO">Running command 'ozone sh bucket create /65013-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:39.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:39.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:36:36.238" endtime="20250617 21:36:39.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:39.125" level="INFO"/>
<status status="PASS" starttime="20250617 21:36:39.124" endtime="20250617 21:36:39.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:39.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:39.125" endtime="20250617 21:36:39.125"/>
</kw>
<status status="PASS" starttime="20250617 21:36:36.237" endtime="20250617 21:36:39.126"/>
</kw>
<msg timestamp="20250617 21:36:39.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:36.237" endtime="20250617 21:36:39.126"/>
</kw>
<msg timestamp="20250617 21:36:39.126" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250617 21:36:36.237" endtime="20250617 21:36:39.126"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20250617 21:36:39.126" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20250617 21:36:39.126" endtime="20250617 21:36:39.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:39.129" level="INFO">Running command 'ozone sh bucket info /65013-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250617 21:36:42.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:42.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:36:39.127" endtime="20250617 21:36:42.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:42.141" level="INFO"/>
<status status="PASS" starttime="20250617 21:36:42.140" endtime="20250617 21:36:42.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:42.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:42.141" endtime="20250617 21:36:42.141"/>
</kw>
<status status="PASS" starttime="20250617 21:36:39.127" endtime="20250617 21:36:42.141"/>
</kw>
<msg timestamp="20250617 21:36:42.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:39.127" endtime="20250617 21:36:42.141"/>
</kw>
<status status="PASS" starttime="20250617 21:36:39.126" endtime="20250617 21:36:42.142"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:42.145" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .storageType' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:42.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:42.150" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20250617 21:36:42.143" endtime="20250617 21:36:42.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:42.150" level="INFO">DISK</msg>
<status status="PASS" starttime="20250617 21:36:42.150" endtime="20250617 21:36:42.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:42.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:42.150" endtime="20250617 21:36:42.151"/>
</kw>
<status status="PASS" starttime="20250617 21:36:42.142" endtime="20250617 21:36:42.151"/>
</kw>
<msg timestamp="20250617 21:36:42.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:42.142" endtime="20250617 21:36:42.151"/>
</kw>
<msg timestamp="20250617 21:36:42.151" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20250617 21:36:42.142" endtime="20250617 21:36:42.151"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:36:42.151" endtime="20250617 21:36:42.152"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:42.154" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:42.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:42.159" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20250617 21:36:42.152" endtime="20250617 21:36:42.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:42.159" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20250617 21:36:42.159" endtime="20250617 21:36:42.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:42.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:42.160" endtime="20250617 21:36:42.160"/>
</kw>
<status status="PASS" starttime="20250617 21:36:42.152" endtime="20250617 21:36:42.160"/>
</kw>
<msg timestamp="20250617 21:36:42.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:42.152" endtime="20250617 21:36:42.160"/>
</kw>
<msg timestamp="20250617 21:36:42.160" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20250617 21:36:42.152" endtime="20250617 21:36:42.160"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:36:42.160" endtime="20250617 21:36:42.161"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:42.163" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:42.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:42.168" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20250617 21:36:42.162" endtime="20250617 21:36:42.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:42.168" level="INFO">100</msg>
<status status="PASS" starttime="20250617 21:36:42.168" endtime="20250617 21:36:42.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:42.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:42.168" endtime="20250617 21:36:42.169"/>
</kw>
<status status="PASS" starttime="20250617 21:36:42.161" endtime="20250617 21:36:42.169"/>
</kw>
<msg timestamp="20250617 21:36:42.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:42.161" endtime="20250617 21:36:42.169"/>
</kw>
<msg timestamp="20250617 21:36:42.169" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20250617 21:36:42.161" endtime="20250617 21:36:42.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:36:42.169" endtime="20250617 21:36:42.170"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:42.172" level="INFO">Running command 'ozone sh bucket setquota /65013-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:45.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:45.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:36:42.170" endtime="20250617 21:36:45.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:45.035" level="INFO"/>
<status status="PASS" starttime="20250617 21:36:45.034" endtime="20250617 21:36:45.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:45.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:45.035" endtime="20250617 21:36:45.035"/>
</kw>
<status status="PASS" starttime="20250617 21:36:42.170" endtime="20250617 21:36:45.035"/>
</kw>
<msg timestamp="20250617 21:36:45.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:42.170" endtime="20250617 21:36:45.035"/>
</kw>
<status status="PASS" starttime="20250617 21:36:42.170" endtime="20250617 21:36:45.035"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:45.039" level="INFO">Running command 'ozone sh bucket info /65013-without-scheme/bb1 &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250617 21:36:48.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:48.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:36:45.037" endtime="20250617 21:36:48.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:48.143" level="INFO"/>
<status status="PASS" starttime="20250617 21:36:48.143" endtime="20250617 21:36:48.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:48.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:48.143" endtime="20250617 21:36:48.144"/>
</kw>
<status status="PASS" starttime="20250617 21:36:45.036" endtime="20250617 21:36:48.144"/>
</kw>
<msg timestamp="20250617 21:36:48.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:45.036" endtime="20250617 21:36:48.144"/>
</kw>
<status status="PASS" starttime="20250617 21:36:45.036" endtime="20250617 21:36:48.144"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:48.148" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:48.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:48.152" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20250617 21:36:48.145" endtime="20250617 21:36:48.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:48.153" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20250617 21:36:48.153" endtime="20250617 21:36:48.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:48.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:48.153" endtime="20250617 21:36:48.153"/>
</kw>
<status status="PASS" starttime="20250617 21:36:48.145" endtime="20250617 21:36:48.154"/>
</kw>
<msg timestamp="20250617 21:36:48.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:48.145" endtime="20250617 21:36:48.154"/>
</kw>
<msg timestamp="20250617 21:36:48.154" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20250617 21:36:48.144" endtime="20250617 21:36:48.154"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:36:48.154" endtime="20250617 21:36:48.154"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:48.157" level="INFO">Running command 'jq -r '. | select(.name=="bb1") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:48.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:48.161" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20250617 21:36:48.155" endtime="20250617 21:36:48.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:48.162" level="INFO">1000</msg>
<status status="PASS" starttime="20250617 21:36:48.162" endtime="20250617 21:36:48.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:48.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:48.162" endtime="20250617 21:36:48.163"/>
</kw>
<status status="PASS" starttime="20250617 21:36:48.155" endtime="20250617 21:36:48.163"/>
</kw>
<msg timestamp="20250617 21:36:48.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:48.155" endtime="20250617 21:36:48.163"/>
</kw>
<msg timestamp="20250617 21:36:48.163" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20250617 21:36:48.154" endtime="20250617 21:36:48.163"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:36:48.163" endtime="20250617 21:36:48.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:48.166" level="INFO">Running command 'ozone sh bucket list /65013-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:51.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:51.072" level="INFO">${output} = 65013-without-scheme</msg>
<status status="PASS" starttime="20250617 21:36:48.164" endtime="20250617 21:36:51.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:51.073" level="INFO">65013-without-scheme</msg>
<status status="PASS" starttime="20250617 21:36:51.072" endtime="20250617 21:36:51.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:51.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:51.073" endtime="20250617 21:36:51.073"/>
</kw>
<status status="PASS" starttime="20250617 21:36:48.164" endtime="20250617 21:36:51.074"/>
</kw>
<msg timestamp="20250617 21:36:51.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:48.164" endtime="20250617 21:36:51.074"/>
</kw>
<msg timestamp="20250617 21:36:51.074" level="INFO">${result} = 65013-without-scheme</msg>
<status status="PASS" starttime="20250617 21:36:48.164" endtime="20250617 21:36:51.074"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:36:51.074" endtime="20250617 21:36:51.074"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:51.078" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 /tmp/key1_RATIS /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:51.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:51.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:36:51.076" endtime="20250617 21:36:51.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:51.082" level="INFO"/>
<status status="PASS" starttime="20250617 21:36:51.081" endtime="20250617 21:36:51.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:51.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:51.082" endtime="20250617 21:36:51.082"/>
</kw>
<status status="PASS" starttime="20250617 21:36:51.075" endtime="20250617 21:36:51.082"/>
</kw>
<msg timestamp="20250617 21:36:51.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:51.075" endtime="20250617 21:36:51.082"/>
</kw>
<status status="PASS" starttime="20250617 21:36:51.075" endtime="20250617 21:36:51.082"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<arg>key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<arg>key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250617 21:36:51.084" level="INFO">${cmd} = key put /65013-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get /65013-without-scheme/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS /65013-without-scheme/bb1/key1_RATIS /op...</msg>
<status status="PASS" starttime="20250617 21:36:51.083" endtime="20250617 21:36:51.084"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:51.086" level="INFO">Running command 'ozone sh --execute 'key put /65013-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt' --execute 'key get /65013-without-scheme/bb1/key1 /tmp/NOTICE.txt.1' --execute 'key put -t RATIS /65013-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt' --execute 'key get /65013-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS' --execute 'key cp /65013-without-scheme/bb1 key1 key1-copy' --execute 'key get /65013-without-scheme/bb1/key1-copy /tmp/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:55.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:55.882" level="INFO">${output} = key put /65013-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt
key get /65013-without-scheme/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS /65013-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt
key ...</msg>
<status status="PASS" starttime="20250617 21:36:51.084" endtime="20250617 21:36:55.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:55.883" level="INFO">key put /65013-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt
key get /65013-without-scheme/bb1/key1 /tmp/NOTICE.txt.1
key put -t RATIS /65013-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt
key get /65013-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS
key cp /65013-without-scheme/bb1 key1 key1-copy
key get /65013-without-scheme/bb1/key1-copy /tmp/key1-copy</msg>
<status status="PASS" starttime="20250617 21:36:55.882" endtime="20250617 21:36:55.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:55.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:55.883" endtime="20250617 21:36:55.883"/>
</kw>
<status status="PASS" starttime="20250617 21:36:51.084" endtime="20250617 21:36:55.884"/>
</kw>
<msg timestamp="20250617 21:36:55.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:51.084" endtime="20250617 21:36:55.884"/>
</kw>
<status status="PASS" starttime="20250617 21:36:51.083" endtime="20250617 21:36:55.884"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:55.887" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:55.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:55.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:36:55.885" endtime="20250617 21:36:55.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:55.890" level="INFO"/>
<status status="PASS" starttime="20250617 21:36:55.890" endtime="20250617 21:36:55.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:55.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:55.890" endtime="20250617 21:36:55.891"/>
</kw>
<status status="PASS" starttime="20250617 21:36:55.884" endtime="20250617 21:36:55.891"/>
</kw>
<msg timestamp="20250617 21:36:55.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:55.884" endtime="20250617 21:36:55.891"/>
</kw>
<status status="PASS" starttime="20250617 21:36:55.884" endtime="20250617 21:36:55.891"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:55.894" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:55.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:55.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:36:55.892" endtime="20250617 21:36:55.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:55.897" level="INFO"/>
<status status="PASS" starttime="20250617 21:36:55.897" endtime="20250617 21:36:55.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:55.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:55.897" endtime="20250617 21:36:55.897"/>
</kw>
<status status="PASS" starttime="20250617 21:36:55.892" endtime="20250617 21:36:55.898"/>
</kw>
<msg timestamp="20250617 21:36:55.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:55.891" endtime="20250617 21:36:55.898"/>
</kw>
<status status="PASS" starttime="20250617 21:36:55.891" endtime="20250617 21:36:55.898"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:55.901" level="INFO">Running command 'ozone sh key info /65013-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:58.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:58.860" level="INFO">${output} = {
  "volumeName": "65013-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-06-17T21:36:55.273Z",
  "modificationTime": "...</msg>
<status status="PASS" starttime="20250617 21:36:55.899" endtime="20250617 21:36:58.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:58.861" level="INFO">{
  "volumeName": "65013-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-06-17T21:36:55.273Z",
  "modificationTime": "2025-06-17T21:36:55.320Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600007,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 115,
  "file": true
}</msg>
<status status="PASS" starttime="20250617 21:36:58.860" endtime="20250617 21:36:58.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:58.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:58.861" endtime="20250617 21:36:58.861"/>
</kw>
<status status="PASS" starttime="20250617 21:36:55.899" endtime="20250617 21:36:58.862"/>
</kw>
<msg timestamp="20250617 21:36:58.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:55.898" endtime="20250617 21:36:58.862"/>
</kw>
<msg timestamp="20250617 21:36:58.862" level="INFO">${result} = {
  "volumeName": "65013-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-06-17T21:36:55.273Z",
  "modificationTime": "...</msg>
<status status="PASS" starttime="20250617 21:36:55.898" endtime="20250617 21:36:58.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:36:58.862" endtime="20250617 21:36:58.862"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:58.865" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:36:58.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:36:58.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:36:58.863" endtime="20250617 21:36:58.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:36:58.869" level="INFO"/>
<status status="PASS" starttime="20250617 21:36:58.868" endtime="20250617 21:36:58.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:36:58.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:36:58.869" endtime="20250617 21:36:58.869"/>
</kw>
<status status="PASS" starttime="20250617 21:36:58.863" endtime="20250617 21:36:58.869"/>
</kw>
<msg timestamp="20250617 21:36:58.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:36:58.863" endtime="20250617 21:36:58.869"/>
</kw>
<status status="PASS" starttime="20250617 21:36:58.862" endtime="20250617 21:36:58.869"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:36:58.872" level="INFO">Running command 'ozone sh key get /65013-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:01.527" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:37:01.527" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250617 21:36:58.870" endtime="20250617 21:37:01.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:01.528" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250617 21:37:01.527" endtime="20250617 21:37:01.528"/>
</kw>
<msg timestamp="20250617 21:37:01.528" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20250617 21:36:58.870" endtime="20250617 21:37:01.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:37:01.528" endtime="20250617 21:37:01.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:01.532" level="INFO">Running command 'ozone sh key get --force /65013-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:05.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:05.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:37:01.530" endtime="20250617 21:37:05.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:05.502" level="INFO"/>
<status status="PASS" starttime="20250617 21:37:05.501" endtime="20250617 21:37:05.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:05.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:05.502" endtime="20250617 21:37:05.502"/>
</kw>
<status status="PASS" starttime="20250617 21:37:01.529" endtime="20250617 21:37:05.502"/>
</kw>
<msg timestamp="20250617 21:37:05.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:01.529" endtime="20250617 21:37:05.502"/>
</kw>
<msg timestamp="20250617 21:37:05.503" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250617 21:37:01.529" endtime="20250617 21:37:05.503"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:37:05.503" endtime="20250617 21:37:05.503"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 sample.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:05.506" level="INFO">Running command 'ozone sh key put /65013-without-scheme/bb1/key1 sample.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:08.343" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:37:08.343" level="INFO">${output} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250617 21:37:05.504" endtime="20250617 21:37:08.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:08.344" level="INFO">Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250617 21:37:08.343" endtime="20250617 21:37:08.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:08.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:08.344" endtime="20250617 21:37:08.344"/>
</kw>
<msg timestamp="20250617 21:37:08.344" level="INFO">${result} = Error: File not found: sample.txt</msg>
<status status="PASS" starttime="20250617 21:37:05.503" endtime="20250617 21:37:08.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File not found: sample.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:37:08.344" endtime="20250617 21:37:08.345"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:08.348" level="INFO">Running command 'ozone sh key info /65013-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:11.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:11.590" level="INFO">${output} = {
  "volumeName": "65013-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-06-17T21:36:54.005Z",
  "modificationTime": "2025-0...</msg>
<status status="PASS" starttime="20250617 21:37:08.346" endtime="20250617 21:37:11.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:11.591" level="INFO">{
  "volumeName": "65013-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-06-17T21:36:54.005Z",
  "modificationTime": "2025-06-17T21:36:55.071Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "minimumNodes": 1,
    "replicationType": "RATIS"
  },
  "metadata": {},
  "tags": {},
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 115816896921600006,
      "length": 15892,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "generation": 111,
  "file": true
}</msg>
<status status="PASS" starttime="20250617 21:37:11.590" endtime="20250617 21:37:11.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:11.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:11.591" endtime="20250617 21:37:11.591"/>
</kw>
<status status="PASS" starttime="20250617 21:37:08.346" endtime="20250617 21:37:11.591"/>
</kw>
<msg timestamp="20250617 21:37:11.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:08.345" endtime="20250617 21:37:11.591"/>
</kw>
<msg timestamp="20250617 21:37:11.592" level="INFO">${result} = {
  "volumeName": "65013-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "owner": "hadoop",
  "dataSize": 15892,
  "creationTime": "2025-06-17T21:36:54.005Z",
  "modificationTime": "2025-0...</msg>
<status status="PASS" starttime="20250617 21:37:08.345" endtime="20250617 21:37:11.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:37:11.592" endtime="20250617 21:37:11.592"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:37:11.592" endtime="20250617 21:37:11.592"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:11.595" level="INFO">Running command 'ozone sh key list /65013-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:14.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:14.570" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20250617 21:37:11.593" endtime="20250617 21:37:14.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:14.570" level="INFO">key1</msg>
<status status="PASS" starttime="20250617 21:37:14.570" endtime="20250617 21:37:14.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:14.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:14.571" endtime="20250617 21:37:14.571"/>
</kw>
<status status="PASS" starttime="20250617 21:37:11.593" endtime="20250617 21:37:14.571"/>
</kw>
<msg timestamp="20250617 21:37:14.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:11.593" endtime="20250617 21:37:14.571"/>
</kw>
<msg timestamp="20250617 21:37:14.571" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20250617 21:37:11.592" endtime="20250617 21:37:14.571"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:37:14.571" endtime="20250617 21:37:14.572"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:14.575" level="INFO">Running command 'ozone sh key rename /65013-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:17.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:17.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:37:14.573" endtime="20250617 21:37:17.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:17.484" level="INFO"/>
<status status="PASS" starttime="20250617 21:37:17.484" endtime="20250617 21:37:17.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:17.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:17.484" endtime="20250617 21:37:17.485"/>
</kw>
<status status="PASS" starttime="20250617 21:37:14.572" endtime="20250617 21:37:17.485"/>
</kw>
<msg timestamp="20250617 21:37:17.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:14.572" endtime="20250617 21:37:17.485"/>
</kw>
<status status="PASS" starttime="20250617 21:37:14.572" endtime="20250617 21:37:17.485"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key2") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:17.488" level="INFO">Running command 'ozone sh key list /65013-without-scheme/bb1 | jq -r '.[] | select(.name=="key2") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:20.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:20.454" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20250617 21:37:17.486" endtime="20250617 21:37:20.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:20.455" level="INFO">key2</msg>
<status status="PASS" starttime="20250617 21:37:20.454" endtime="20250617 21:37:20.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:20.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:20.455" endtime="20250617 21:37:20.455"/>
</kw>
<status status="PASS" starttime="20250617 21:37:17.486" endtime="20250617 21:37:20.455"/>
</kw>
<msg timestamp="20250617 21:37:20.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:17.486" endtime="20250617 21:37:20.456"/>
</kw>
<msg timestamp="20250617 21:37:20.456" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20250617 21:37:17.485" endtime="20250617 21:37:20.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:37:20.456" endtime="20250617 21:37:20.456"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<arg>key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250617 21:37:20.457" level="INFO">${cmd} = key delete /65013-without-scheme/bb1/key2' --execute 'key delete /65013-without-scheme/bb1/key1_RATIS' --execute 'key delete /65013-without-scheme/bb1/key1-copy</msg>
<status status="PASS" starttime="20250617 21:37:20.457" endtime="20250617 21:37:20.457"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:20.460" level="INFO">Running command 'ozone sh --execute 'key delete /65013-without-scheme/bb1/key2' --execute 'key delete /65013-without-scheme/bb1/key1_RATIS' --execute 'key delete /65013-without-scheme/bb1/key1-copy' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:23.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:23.727" level="INFO">${output} = key delete /65013-without-scheme/bb1/key2
Key moved inside Trash: /.Trash/hadoop/Current/key2 
key delete /65013-without-scheme/bb1/key1_RATIS
Key moved inside Trash: /.Trash/hadoop/Current/key1_RATIS...</msg>
<status status="PASS" starttime="20250617 21:37:20.458" endtime="20250617 21:37:23.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:23.728" level="INFO">key delete /65013-without-scheme/bb1/key2
Key moved inside Trash: /.Trash/hadoop/Current/key2 
key delete /65013-without-scheme/bb1/key1_RATIS
Key moved inside Trash: /.Trash/hadoop/Current/key1_RATIS 
key delete /65013-without-scheme/bb1/key1-copy
Key moved inside Trash: /.Trash/hadoop/Current/key1-copy </msg>
<status status="PASS" starttime="20250617 21:37:23.727" endtime="20250617 21:37:23.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:23.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:23.728" endtime="20250617 21:37:23.728"/>
</kw>
<status status="PASS" starttime="20250617 21:37:20.457" endtime="20250617 21:37:23.728"/>
</kw>
<msg timestamp="20250617 21:37:23.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:20.457" endtime="20250617 21:37:23.728"/>
</kw>
<status status="PASS" starttime="20250617 21:37:20.456" endtime="20250617 21:37:23.729"/>
</kw>
<status status="PASS" starttime="20250617 21:36:51.074" endtime="20250617 21:37:23.729"/>
</kw>
<status status="PASS" starttime="20250617 21:36:51.074" endtime="20250617 21:37:23.729"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:23.732" level="INFO">Running command 'ozone sh volume clrquota --space-quota /65013-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:26.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:26.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:37:23.730" endtime="20250617 21:37:26.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:26.558" level="INFO"/>
<status status="PASS" starttime="20250617 21:37:26.557" endtime="20250617 21:37:26.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:26.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:26.558" endtime="20250617 21:37:26.559"/>
</kw>
<status status="PASS" starttime="20250617 21:37:23.729" endtime="20250617 21:37:26.559"/>
</kw>
<msg timestamp="20250617 21:37:26.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:23.729" endtime="20250617 21:37:26.559"/>
</kw>
<status status="PASS" starttime="20250617 21:37:23.729" endtime="20250617 21:37:26.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:26.563" level="INFO">Running command 'ozone sh volume info /65013-without-scheme | jq -r '. | select(.name=="65013-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:29.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:29.508" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250617 21:37:26.560" endtime="20250617 21:37:29.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:29.509" level="INFO">-1</msg>
<status status="PASS" starttime="20250617 21:37:29.508" endtime="20250617 21:37:29.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:29.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:29.509" endtime="20250617 21:37:29.510"/>
</kw>
<status status="PASS" starttime="20250617 21:37:26.560" endtime="20250617 21:37:29.510"/>
</kw>
<msg timestamp="20250617 21:37:29.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:26.560" endtime="20250617 21:37:29.510"/>
</kw>
<msg timestamp="20250617 21:37:29.510" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250617 21:37:26.559" endtime="20250617 21:37:29.510"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:37:29.511" endtime="20250617 21:37:29.511"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:29.515" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /65013-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:32.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:32.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:37:29.513" endtime="20250617 21:37:32.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:32.248" level="INFO"/>
<status status="PASS" starttime="20250617 21:37:32.247" endtime="20250617 21:37:32.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:32.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:32.248" endtime="20250617 21:37:32.249"/>
</kw>
<status status="PASS" starttime="20250617 21:37:29.512" endtime="20250617 21:37:32.249"/>
</kw>
<msg timestamp="20250617 21:37:32.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:29.512" endtime="20250617 21:37:32.249"/>
</kw>
<status status="PASS" starttime="20250617 21:37:29.511" endtime="20250617 21:37:32.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:32.252" level="INFO">Running command 'ozone sh volume info /65013-without-scheme | jq -r '. | select(.name=="65013-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:35.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:35.133" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250617 21:37:32.250" endtime="20250617 21:37:35.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:35.134" level="INFO">-1</msg>
<status status="PASS" starttime="20250617 21:37:35.133" endtime="20250617 21:37:35.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:35.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:35.134" endtime="20250617 21:37:35.134"/>
</kw>
<status status="PASS" starttime="20250617 21:37:32.250" endtime="20250617 21:37:35.134"/>
</kw>
<msg timestamp="20250617 21:37:35.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:32.250" endtime="20250617 21:37:35.135"/>
</kw>
<msg timestamp="20250617 21:37:35.135" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250617 21:37:32.249" endtime="20250617 21:37:35.135"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:37:35.135" endtime="20250617 21:37:35.135"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:35.138" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /65013-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:37.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:37.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:37:35.136" endtime="20250617 21:37:37.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:37.967" level="INFO"/>
<status status="PASS" starttime="20250617 21:37:37.966" endtime="20250617 21:37:37.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:37.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:37.967" endtime="20250617 21:37:37.967"/>
</kw>
<status status="PASS" starttime="20250617 21:37:35.136" endtime="20250617 21:37:37.967"/>
</kw>
<msg timestamp="20250617 21:37:37.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:35.136" endtime="20250617 21:37:37.967"/>
</kw>
<status status="PASS" starttime="20250617 21:37:35.135" endtime="20250617 21:37:37.968"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:37.971" level="INFO">Running command 'ozone sh bucket info /65013-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:40.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:40.924" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250617 21:37:37.969" endtime="20250617 21:37:40.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:40.925" level="INFO">-1</msg>
<status status="PASS" starttime="20250617 21:37:40.924" endtime="20250617 21:37:40.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:40.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:40.925" endtime="20250617 21:37:40.925"/>
</kw>
<status status="PASS" starttime="20250617 21:37:37.968" endtime="20250617 21:37:40.925"/>
</kw>
<msg timestamp="20250617 21:37:40.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:37.968" endtime="20250617 21:37:40.925"/>
</kw>
<msg timestamp="20250617 21:37:40.925" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250617 21:37:37.968" endtime="20250617 21:37:40.926"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:37:40.926" endtime="20250617 21:37:40.926"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:40.929" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /65013-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:43.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:43.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:37:40.927" endtime="20250617 21:37:43.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:43.898" level="INFO"/>
<status status="PASS" starttime="20250617 21:37:43.897" endtime="20250617 21:37:43.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:43.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:43.898" endtime="20250617 21:37:43.898"/>
</kw>
<status status="PASS" starttime="20250617 21:37:40.927" endtime="20250617 21:37:43.898"/>
</kw>
<msg timestamp="20250617 21:37:43.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:40.926" endtime="20250617 21:37:43.898"/>
</kw>
<status status="PASS" starttime="20250617 21:37:40.926" endtime="20250617 21:37:43.898"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:43.902" level="INFO">Running command 'ozone sh bucket info /65013-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:46.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:46.822" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250617 21:37:43.900" endtime="20250617 21:37:46.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:46.823" level="INFO">-1</msg>
<status status="PASS" starttime="20250617 21:37:46.822" endtime="20250617 21:37:46.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:46.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:46.823" endtime="20250617 21:37:46.823"/>
</kw>
<status status="PASS" starttime="20250617 21:37:43.899" endtime="20250617 21:37:46.823"/>
</kw>
<msg timestamp="20250617 21:37:46.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:43.899" endtime="20250617 21:37:46.823"/>
</kw>
<msg timestamp="20250617 21:37:46.824" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250617 21:37:43.899" endtime="20250617 21:37:46.824"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:37:46.824" endtime="20250617 21:37:46.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:46.827" level="INFO">Running command 'ozone sh bucket delete -r --yes /65013-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:49.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:49.813" level="INFO">${output} = Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250617 21:37:46.825" endtime="20250617 21:37:49.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:49.814" level="INFO">Bucket bb1 is deleted</msg>
<status status="PASS" starttime="20250617 21:37:49.813" endtime="20250617 21:37:49.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:49.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:49.814" endtime="20250617 21:37:49.814"/>
</kw>
<status status="PASS" starttime="20250617 21:37:46.825" endtime="20250617 21:37:49.814"/>
</kw>
<msg timestamp="20250617 21:37:49.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:46.824" endtime="20250617 21:37:49.814"/>
</kw>
<status status="PASS" starttime="20250617 21:37:46.824" endtime="20250617 21:37:49.815"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:49.818" level="INFO">Running command 'ozone sh volume delete /65013-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:52.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:52.560" level="INFO">${output} = Volume 65013-without-scheme is deleted</msg>
<status status="PASS" starttime="20250617 21:37:49.816" endtime="20250617 21:37:52.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:52.561" level="INFO">Volume 65013-without-scheme is deleted</msg>
<status status="PASS" starttime="20250617 21:37:52.560" endtime="20250617 21:37:52.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:52.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:52.561" endtime="20250617 21:37:52.561"/>
</kw>
<status status="PASS" starttime="20250617 21:37:49.815" endtime="20250617 21:37:52.561"/>
</kw>
<msg timestamp="20250617 21:37:52.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:49.815" endtime="20250617 21:37:52.561"/>
</kw>
<status status="PASS" starttime="20250617 21:37:49.815" endtime="20250617 21:37:52.562"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:52.565" level="INFO">Running command 'ozone sh volume create /65013-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:55.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:55.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:37:52.563" endtime="20250617 21:37:55.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:55.286" level="INFO"/>
<status status="PASS" starttime="20250617 21:37:55.286" endtime="20250617 21:37:55.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:55.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:55.286" endtime="20250617 21:37:55.287"/>
</kw>
<status status="PASS" starttime="20250617 21:37:52.562" endtime="20250617 21:37:55.287"/>
</kw>
<msg timestamp="20250617 21:37:55.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:52.562" endtime="20250617 21:37:55.287"/>
</kw>
<status status="PASS" starttime="20250617 21:37:52.562" endtime="20250617 21:37:55.287"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:55.291" level="INFO">Running command 'ozone sh volume info /65013-without-scheme &gt; /tmp/bb1.json'.</msg>
<msg timestamp="20250617 21:37:58.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:58.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:37:55.288" endtime="20250617 21:37:58.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:58.211" level="INFO"/>
<status status="PASS" starttime="20250617 21:37:58.210" endtime="20250617 21:37:58.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:58.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:58.211" endtime="20250617 21:37:58.211"/>
</kw>
<status status="PASS" starttime="20250617 21:37:55.288" endtime="20250617 21:37:58.211"/>
</kw>
<msg timestamp="20250617 21:37:58.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:55.288" endtime="20250617 21:37:58.211"/>
</kw>
<status status="PASS" starttime="20250617 21:37:55.287" endtime="20250617 21:37:58.211"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:58.215" level="INFO">Running command 'jq -r '. | select(.name=="65013-without-scheme") | .quotaInBytes' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:58.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:58.219" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250617 21:37:58.212" endtime="20250617 21:37:58.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:58.220" level="INFO">-1</msg>
<status status="PASS" starttime="20250617 21:37:58.220" endtime="20250617 21:37:58.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:58.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:58.220" endtime="20250617 21:37:58.220"/>
</kw>
<status status="PASS" starttime="20250617 21:37:58.212" endtime="20250617 21:37:58.221"/>
</kw>
<msg timestamp="20250617 21:37:58.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:58.212" endtime="20250617 21:37:58.221"/>
</kw>
<msg timestamp="20250617 21:37:58.221" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250617 21:37:58.212" endtime="20250617 21:37:58.221"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:37:58.221" endtime="20250617 21:37:58.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:58.224" level="INFO">Running command 'jq -r '. | select(.name=="65013-without-scheme") | .quotaInNamespace' /tmp/bb1.json 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:37:58.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:37:58.228" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20250617 21:37:58.222" endtime="20250617 21:37:58.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:37:58.229" level="INFO">-1</msg>
<status status="PASS" starttime="20250617 21:37:58.229" endtime="20250617 21:37:58.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:37:58.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:37:58.229" endtime="20250617 21:37:58.230"/>
</kw>
<status status="PASS" starttime="20250617 21:37:58.222" endtime="20250617 21:37:58.230"/>
</kw>
<msg timestamp="20250617 21:37:58.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:37:58.222" endtime="20250617 21:37:58.230"/>
</kw>
<msg timestamp="20250617 21:37:58.230" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20250617 21:37:58.221" endtime="20250617 21:37:58.230"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250617 21:37:58.230" endtime="20250617 21:37:58.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:37:58.233" level="INFO">Running command 'ozone sh bucket create /65013-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:46:22.049" level="FAIL">Test timeout 10 minutes exceeded.</msg>
<status status="FAIL" starttime="20250617 21:37:58.231" endtime="20250617 21:46:22.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20250617 21:46:22.049" endtime="20250617 21:46:22.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20250617 21:46:22.050" endtime="20250617 21:46:22.050"/>
</kw>
<status status="FAIL" starttime="20250617 21:37:58.231" endtime="20250617 21:46:22.050"/>
</kw>
<msg timestamp="20250617 21:46:22.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250617 21:37:58.231" endtime="20250617 21:46:22.050"/>
</kw>
<status status="FAIL" starttime="20250617 21:37:58.230" endtime="20250617 21:46:22.050"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:22.050" endtime="20250617 21:46:22.050"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:22.050" endtime="20250617 21:46:22.050"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:22.050" endtime="20250617 21:46:22.050"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:22.051" endtime="20250617 21:46:22.051"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:22.051" endtime="20250617 21:46:22.051"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:22.051" endtime="20250617 21:46:22.051"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:22.051" endtime="20250617 21:46:22.051"/>
</kw>
<status status="FAIL" starttime="20250617 21:36:22.048" endtime="20250617 21:46:22.051"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250617 21:36:22.048" endtime="20250617 21:46:22.051">Test timeout 10 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20250617 21:36:22.019" endtime="20250617 21:46:22.052"/>
</suite>
<suite id="s1-s3-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:46:22.060" level="INFO">${random} = 49204</msg>
<status status="PASS" starttime="20250617 21:46:22.060" endtime="20250617 21:46:22.060"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:46:22.060" level="INFO">${prefix} = 49204</msg>
<status status="PASS" starttime="20250617 21:46:22.060" endtime="20250617 21:46:22.060"/>
</kw>
<status status="PASS" starttime="20250617 21:46:22.059" endtime="20250617 21:46:22.060"/>
</kw>
<test id="s1-s3-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:46:22.061" endtime="20250617 21:46:22.061"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:46:22.064" level="INFO">Running command 'ozone sh volume info o3://om:9862/49204-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:46:23.285" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:46:23.285" level="INFO">${output} = Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:22.062" endtime="20250617 21:46:23.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:46:23.286" level="INFO">Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:23.285" endtime="20250617 21:46:23.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:46:23.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:46:23.286" endtime="20250617 21:46:23.286"/>
</kw>
<msg timestamp="20250617 21:46:23.286" level="INFO">${result} = Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:22.061" endtime="20250617 21:46:23.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250617 21:46:23.287" level="FAIL">'Cannot resolve OM host om in the URI' does not contain 'VOLUME_NOT_FOUND'</msg>
<status status="FAIL" starttime="20250617 21:46:23.287" endtime="20250617 21:46:23.287"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.287" endtime="20250617 21:46:23.287"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.287" endtime="20250617 21:46:23.287"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.287" endtime="20250617 21:46:23.287"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.287" endtime="20250617 21:46:23.288"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.288" endtime="20250617 21:46:23.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.288" endtime="20250617 21:46:23.288"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.288" endtime="20250617 21:46:23.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.288" endtime="20250617 21:46:23.288"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.288" endtime="20250617 21:46:23.288"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.288" endtime="20250617 21:46:23.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.288" endtime="20250617 21:46:23.288"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.288" endtime="20250617 21:46:23.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.289" endtime="20250617 21:46:23.289"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.289" endtime="20250617 21:46:23.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.289" endtime="20250617 21:46:23.289"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.289" endtime="20250617 21:46:23.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.289" endtime="20250617 21:46:23.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.289" endtime="20250617 21:46:23.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.289" endtime="20250617 21:46:23.289"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.289" endtime="20250617 21:46:23.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.289" endtime="20250617 21:46:23.289"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.290" endtime="20250617 21:46:23.290"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.290" endtime="20250617 21:46:23.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.290" endtime="20250617 21:46:23.290"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.290" endtime="20250617 21:46:23.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.290" endtime="20250617 21:46:23.290"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.290" endtime="20250617 21:46:23.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.290" endtime="20250617 21:46:23.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.290" endtime="20250617 21:46:23.290"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.290" endtime="20250617 21:46:23.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.291" endtime="20250617 21:46:23.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.291" endtime="20250617 21:46:23.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.291" endtime="20250617 21:46:23.291"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.291" endtime="20250617 21:46:23.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.291" endtime="20250617 21:46:23.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.291" endtime="20250617 21:46:23.291"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.291" endtime="20250617 21:46:23.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.291" endtime="20250617 21:46:23.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.291" endtime="20250617 21:46:23.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.291" endtime="20250617 21:46:23.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.292" endtime="20250617 21:46:23.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.292" endtime="20250617 21:46:23.292"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.292" endtime="20250617 21:46:23.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.292" endtime="20250617 21:46:23.292"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.292" endtime="20250617 21:46:23.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.292" endtime="20250617 21:46:23.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.292" endtime="20250617 21:46:23.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.292" endtime="20250617 21:46:23.292"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.292" endtime="20250617 21:46:23.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.292" endtime="20250617 21:46:23.292"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:23.293" endtime="20250617 21:46:23.293"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.293" endtime="20250617 21:46:23.293"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:23.293" endtime="20250617 21:46:23.293"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:22.061" endtime="20250617 21:46:23.293"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250617 21:46:22.061" endtime="20250617 21:46:23.293">'Cannot resolve OM host om in the URI' does not contain 'VOLUME_NOT_FOUND'</status>
</test>
<test id="s1-s3-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:46:23.294" endtime="20250617 21:46:23.294"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 1.5GB</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:46:23.297" level="INFO">Running command 'ozone sh volume create o3://om:9862/49204-with-errors --space-quota 1.5GB 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:46:24.493" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:46:24.493" level="INFO">${output} = Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:23.295" endtime="20250617 21:46:24.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:46:24.494" level="INFO">Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:24.493" endtime="20250617 21:46:24.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:46:24.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:46:24.494" endtime="20250617 21:46:24.494"/>
</kw>
<msg timestamp="20250617 21:46:24.494" level="INFO">${result} = Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:23.295" endtime="20250617 21:46:24.494"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5GB is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250617 21:46:24.495" level="FAIL">'Cannot resolve OM host om in the URI' does not contain '1.5GB is invalid'</msg>
<status status="FAIL" starttime="20250617 21:46:24.495" endtime="20250617 21:46:24.495"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --namespace-quota 1.5</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.495" endtime="20250617 21:46:24.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.495" endtime="20250617 21:46:24.495"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.495" endtime="20250617 21:46:24.495"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.495" endtime="20250617 21:46:24.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.496" endtime="20250617 21:46:24.496"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --space-quota 1.5GB</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.496" endtime="20250617 21:46:24.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5GB is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.496" endtime="20250617 21:46:24.496"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --namespace-quota 1.5</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.496" endtime="20250617 21:46:24.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.496" endtime="20250617 21:46:24.496"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.496" endtime="20250617 21:46:24.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.496" endtime="20250617 21:46:24.496"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.496" endtime="20250617 21:46:24.496"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.496" endtime="20250617 21:46:24.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.497" endtime="20250617 21:46:24.497"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.497" endtime="20250617 21:46:24.497"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${volume}/bucket1 --space-quota 1.5</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.497" endtime="20250617 21:46:24.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.497" endtime="20250617 21:46:24.497"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${volume}/bucket1 --namespace-quota 1.5</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.497" endtime="20250617 21:46:24.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.497" endtime="20250617 21:46:24.497"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1.5</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.497" endtime="20250617 21:46:24.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.497" endtime="20250617 21:46:24.497"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --namespace-quota 1.5</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.497" endtime="20250617 21:46:24.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>1.5 is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.498" endtime="20250617 21:46:24.498"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket setquota ${volume}/bucket1 --space-quota 2KB</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.498" endtime="20250617 21:46:24.498"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.498" endtime="20250617 21:46:24.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_EXCEEDED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.498" endtime="20250617 21:46:24.498"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1KB</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.498" endtime="20250617 21:46:24.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_EXCEEDED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.498" endtime="20250617 21:46:24.498"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket clrquota ${volume}/bucket1 --space-quota</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.498" endtime="20250617 21:46:24.498"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume setquota ${volume} --space-quota 1GB</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.498" endtime="20250617 21:46:24.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_ERROR</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.498" endtime="20250617 21:46:24.499"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.499" endtime="20250617 21:46:24.499"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume setquota ${volume} --space-quota 1GB</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.499" endtime="20250617 21:46:24.499"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.499" endtime="20250617 21:46:24.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>QUOTA_ERROR</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:24.499" endtime="20250617 21:46:24.499"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20250617 21:46:24.499" endtime="20250617 21:46:24.499"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:23.294" endtime="20250617 21:46:24.499"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250617 21:46:23.293" endtime="20250617 21:46:24.499">'Cannot resolve OM host om in the URI' does not contain '1.5GB is invalid'</status>
</test>
<test id="s1-s3-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:46:24.500" endtime="20250617 21:46:24.500"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:46:24.504" level="INFO">Running command 'ozone sh volume create o3://om:9862/49204-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:46:25.690" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:46:25.690" level="INFO">${output} = Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:24.502" endtime="20250617 21:46:25.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:46:25.691" level="INFO">Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:25.690" endtime="20250617 21:46:25.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:46:25.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250617 21:46:25.691" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20250617 21:46:25.691" endtime="20250617 21:46:25.691"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:24.501" endtime="20250617 21:46:25.692"/>
</kw>
<msg timestamp="20250617 21:46:25.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250617 21:46:24.501" endtime="20250617 21:46:25.692"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:24.501" endtime="20250617 21:46:25.692"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:25.692" endtime="20250617 21:46:25.692"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:25.692" endtime="20250617 21:46:25.692"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${acl_check}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="NOT RUN" starttime="20250617 21:46:25.692" endtime="20250617 21:46:25.692"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<status status="NOT RUN" starttime="20250617 21:46:25.692" endtime="20250617 21:46:25.692"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:25.692" endtime="20250617 21:46:25.692"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:25.693" endtime="20250617 21:46:25.693"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:25.693" endtime="20250617 21:46:25.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<status status="NOT RUN" starttime="20250617 21:46:25.693" endtime="20250617 21:46:25.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:25.693" endtime="20250617 21:46:25.693"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:25.693" endtime="20250617 21:46:25.693"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:25.693" endtime="20250617 21:46:25.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<status status="NOT RUN" starttime="20250617 21:46:25.693" endtime="20250617 21:46:25.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:25.693" endtime="20250617 21:46:25.693"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:25.693" endtime="20250617 21:46:25.694"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:25.694" endtime="20250617 21:46:25.694"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:25.694" endtime="20250617 21:46:25.694"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:25.694" endtime="20250617 21:46:25.694"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:24.501" endtime="20250617 21:46:25.694"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250617 21:46:24.500" endtime="20250617 21:46:25.694">255 != 0</status>
</test>
<test id="s1-s3-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:46:25.695" endtime="20250617 21:46:25.696"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:46:25.699" level="INFO">Running command 'ozone sh bucket create o3://om:9862/49204-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:46:26.899" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:46:26.899" level="INFO">${output} = Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:25.697" endtime="20250617 21:46:26.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:46:26.900" level="INFO">Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:26.900" endtime="20250617 21:46:26.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:46:26.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250617 21:46:26.901" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20250617 21:46:26.900" endtime="20250617 21:46:26.901"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:25.696" endtime="20250617 21:46:26.901"/>
</kw>
<msg timestamp="20250617 21:46:26.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250617 21:46:25.696" endtime="20250617 21:46:26.901"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:25.696" endtime="20250617 21:46:26.901"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:26.901" endtime="20250617 21:46:26.901"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:26.901" endtime="20250617 21:46:26.901"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${acl_check}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="NOT RUN" starttime="20250617 21:46:26.902" endtime="20250617 21:46:26.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<status status="NOT RUN" starttime="20250617 21:46:26.902" endtime="20250617 21:46:26.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:26.902" endtime="20250617 21:46:26.902"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:26.902" endtime="20250617 21:46:26.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:26.902" endtime="20250617 21:46:26.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<status status="NOT RUN" starttime="20250617 21:46:26.902" endtime="20250617 21:46:26.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:26.902" endtime="20250617 21:46:26.902"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:26.902" endtime="20250617 21:46:26.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:26.902" endtime="20250617 21:46:26.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc,group:superuser1:a[DEFAULT]</arg>
<status status="NOT RUN" starttime="20250617 21:46:26.903" endtime="20250617 21:46:26.903"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:26.903" endtime="20250617 21:46:26.903"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:26.903" endtime="20250617 21:46:26.903"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:26.903" endtime="20250617 21:46:26.903"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:26.903" endtime="20250617 21:46:26.903"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:26.903" endtime="20250617 21:46:26.903"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:25.696" endtime="20250617 21:46:26.903"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250617 21:46:25.695" endtime="20250617 21:46:26.903">255 != 0</status>
</test>
<test id="s1-s3-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:46:26.904" endtime="20250617 21:46:26.905"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:46:26.908" level="INFO">Running command 'ozone sh key put o3://om:9862/49204-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:46:28.107" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:46:28.107" level="INFO">${output} = Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:26.906" endtime="20250617 21:46:28.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:46:28.108" level="INFO">Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:28.107" endtime="20250617 21:46:28.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:46:28.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250617 21:46:28.109" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20250617 21:46:28.108" endtime="20250617 21:46:28.109"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:26.905" endtime="20250617 21:46:28.109"/>
</kw>
<msg timestamp="20250617 21:46:28.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250617 21:46:26.905" endtime="20250617 21:46:28.109"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:26.905" endtime="20250617 21:46:28.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.109" endtime="20250617 21:46:28.109"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.109" endtime="20250617 21:46:28.110"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${acl_check}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.110" endtime="20250617 21:46:28.110"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.110" endtime="20250617 21:46:28.110"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.110" endtime="20250617 21:46:28.110"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.110" endtime="20250617 21:46:28.110"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.110" endtime="20250617 21:46:28.110"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.110" endtime="20250617 21:46:28.110"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.110" endtime="20250617 21:46:28.110"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.110" endtime="20250617 21:46:28.110"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.111" endtime="20250617 21:46:28.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser:rwxyc</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.111" endtime="20250617 21:46:28.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.111" endtime="20250617 21:46:28.111"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.111" endtime="20250617 21:46:28.111"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.111" endtime="20250617 21:46:28.111"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.111" endtime="20250617 21:46:28.111"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.111" endtime="20250617 21:46:28.111"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:26.905" endtime="20250617 21:46:28.111"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250617 21:46:26.904" endtime="20250617 21:46:28.112">255 != 0</status>
</test>
<test id="s1-s3-s5-t6" name="Test native authorizer" line="42">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:46:28.112" endtime="20250617 21:46:28.113"/>
</kw>
<kw name="Test native authorizer" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250617 21:46:28.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:46:28.113" endtime="20250617 21:46:28.113"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a group:root:a</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.113" endtime="20250617 21:46:28.113"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.113" endtime="20250617 21:46:28.114"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.114" endtime="20250617 21:46:28.114"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.114" endtime="20250617 21:46:28.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.114" endtime="20250617 21:46:28.114"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.114" endtime="20250617 21:46:28.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.114" endtime="20250617 21:46:28.114"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:xy</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.114" endtime="20250617 21:46:28.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2 doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.114" endtime="20250617 21:46:28.114"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.114" endtime="20250617 21:46:28.114"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.114" endtime="20250617 21:46:28.114"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:xyrw</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.114" endtime="20250617 21:46:28.115"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.115" endtime="20250617 21:46:28.115"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.115" endtime="20250617 21:46:28.115"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.115" endtime="20250617 21:46:28.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2 doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.115" endtime="20250617 21:46:28.115"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:testuser2:l</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.115" endtime="20250617 21:46:28.115"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.115" endtime="20250617 21:46:28.115"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.115" endtime="20250617 21:46:28.115"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.115" endtime="20250617 21:46:28.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.115" endtime="20250617 21:46:28.115"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.116" endtime="20250617 21:46:28.116"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.116" endtime="20250617 21:46:28.116"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:testuser2:a</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.116" endtime="20250617 21:46:28.116"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.116" endtime="20250617 21:46:28.116"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.116" endtime="20250617 21:46:28.116"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.116" endtime="20250617 21:46:28.116"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.116" endtime="20250617 21:46:28.116"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.116" endtime="20250617 21:46:28.116"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<status status="NOT RUN" starttime="20250617 21:46:28.116" endtime="20250617 21:46:28.116"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250617 21:46:28.116" endtime="20250617 21:46:28.116"/>
</kw>
<status status="PASS" starttime="20250617 21:46:28.113" endtime="20250617 21:46:28.116"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20250617 21:46:28.112" endtime="20250617 21:46:28.117"/>
</test>
<test id="s1-s3-s5-t7" name="RpcClient prefix acls" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:46:28.117" endtime="20250617 21:46:28.117"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:46:28.121" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/49204-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:46:29.351" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:46:29.351" level="INFO">${output} = Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:28.119" endtime="20250617 21:46:29.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:46:29.352" level="INFO">Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:46:29.352" endtime="20250617 21:46:29.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:46:29.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250617 21:46:29.353" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20250617 21:46:29.352" endtime="20250617 21:46:29.353"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:28.118" endtime="20250617 21:46:29.353"/>
</kw>
<msg timestamp="20250617 21:46:29.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250617 21:46:28.118" endtime="20250617 21:46:29.353"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:28.118" endtime="20250617 21:46:29.353"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<status status="NOT RUN" starttime="20250617 21:46:29.353" endtime="20250617 21:46:29.353"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:29.353" endtime="20250617 21:46:29.353"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:29.353" endtime="20250617 21:46:29.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<status status="NOT RUN" starttime="20250617 21:46:29.354" endtime="20250617 21:46:29.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<status status="NOT RUN" starttime="20250617 21:46:29.354" endtime="20250617 21:46:29.354"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:29.354" endtime="20250617 21:46:29.354"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:29.354" endtime="20250617 21:46:29.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser:rwxyc</arg>
<status status="NOT RUN" starttime="20250617 21:46:29.354" endtime="20250617 21:46:29.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<status status="NOT RUN" starttime="20250617 21:46:29.355" endtime="20250617 21:46:29.355"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:29.355" endtime="20250617 21:46:29.355"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:29.355" endtime="20250617 21:46:29.355"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="DEFAULT" and (.aclList | contains(["ALL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:29.355" endtime="20250617 21:46:29.355"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:29.355" endtime="20250617 21:46:29.355"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20250617 21:46:29.355" endtime="20250617 21:46:29.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<status status="NOT RUN" starttime="20250617 21:46:29.355" endtime="20250617 21:46:29.355"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="USER" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["READ", "WRITE", "READ_ACL", "WRITE_ACL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:29.355" endtime="20250617 21:46:29.355"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:29.355" endtime="20250617 21:46:29.355"/>
</kw>
<kw name="Execute" library="os">
<var>${acl_check}</var>
<arg>echo '${result}' | jq -r '.[] | select(.type=="GROUP" and .name=="superuser1" and .aclScope=="ACCESS" and (.aclList | contains(["ALL"]))) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:46:29.355" endtime="20250617 21:46:29.356"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acl_check}</arg>
<arg>superuser1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:46:29.356" endtime="20250617 21:46:29.356"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:28.117" endtime="20250617 21:46:29.356"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250617 21:46:28.117" endtime="20250617 21:46:29.356">255 != 0</status>
</test>
<test id="s1-s3-s5-t8" name="RpcClient without host" line="48">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:46:29.357" endtime="20250617 21:46:29.357"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:46:29.361" level="INFO">Running command 'ozone sh volume info o3:///49204-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:56:29.357" level="FAIL">Test timeout 10 minutes exceeded.</msg>
<status status="FAIL" starttime="20250617 21:46:29.359" endtime="20250617 21:56:29.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.358" endtime="20250617 21:56:29.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.358" endtime="20250617 21:56:29.358"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:29.358" endtime="20250617 21:56:29.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.358" endtime="20250617 21:56:29.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.358" endtime="20250617 21:56:29.358"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.359" endtime="20250617 21:56:29.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.359" endtime="20250617 21:56:29.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.359" endtime="20250617 21:56:29.359"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.359" endtime="20250617 21:56:29.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.359" endtime="20250617 21:56:29.359"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.359" endtime="20250617 21:56:29.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.359" endtime="20250617 21:56:29.359"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.359" endtime="20250617 21:56:29.359"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.359" endtime="20250617 21:56:29.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .storageType' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.360" endtime="20250617 21:56:29.360"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.360" endtime="20250617 21:56:29.360"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.360" endtime="20250617 21:56:29.360"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.360" endtime="20250617 21:56:29.360"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.360" endtime="20250617 21:56:29.360"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.360" endtime="20250617 21:56:29.360"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.360" endtime="20250617 21:56:29.360"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.360" endtime="20250617 21:56:29.360"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.360" endtime="20250617 21:56:29.360"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.361" endtime="20250617 21:56:29.361"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.361" endtime="20250617 21:56:29.361"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.361" endtime="20250617 21:56:29.361"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.361" endtime="20250617 21:56:29.361"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.361" endtime="20250617 21:56:29.361"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.361" endtime="20250617 21:56:29.361"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.361" endtime="20250617 21:56:29.361"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.361" endtime="20250617 21:56:29.361"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.361" endtime="20250617 21:56:29.361"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.361" endtime="20250617 21:56:29.362"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.362" endtime="20250617 21:56:29.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.362" endtime="20250617 21:56:29.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.362" endtime="20250617 21:56:29.362"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.362" endtime="20250617 21:56:29.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.362" endtime="20250617 21:56:29.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.362" endtime="20250617 21:56:29.362"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.362" endtime="20250617 21:56:29.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.362" endtime="20250617 21:56:29.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete -r --yes ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.362" endtime="20250617 21:56:29.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.363" endtime="20250617 21:56:29.363"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.363" endtime="20250617 21:56:29.363"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume info ${protocol}${server}/${volume} &gt; ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.363" endtime="20250617 21:56:29.363"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInBytes' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.363" endtime="20250617 21:56:29.363"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.363" endtime="20250617 21:56:29.363"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="${volume}") | .quotaInNamespace' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.363" endtime="20250617 21:56:29.363"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.363" endtime="20250617 21:56:29.363"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.363" endtime="20250617 21:56:29.363"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 &gt; ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.363" endtime="20250617 21:56:29.363"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInBytes' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.363" endtime="20250617 21:56:29.363"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.364" endtime="20250617 21:56:29.364"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>jq -r '. | select(.name=="bb1") | .quotaInNamespace' ${TMP_JSON}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.364" endtime="20250617 21:56:29.364"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250617 21:56:29.364" endtime="20250617 21:56:29.364"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.364" endtime="20250617 21:56:29.364"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20250617 21:56:29.364" endtime="20250617 21:56:29.364"/>
</kw>
<status status="FAIL" starttime="20250617 21:46:29.357" endtime="20250617 21:56:29.364"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250617 21:46:29.356" endtime="20250617 21:56:29.364">Test timeout 10 minutes exceeded.</status>
</test>
<test id="s1-s3-s5-t9" name="RpcClient Delete key" line="51">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:56:29.365" endtime="20250617 21:56:29.366"/>
</kw>
<kw name="Test Delete key with Trash" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-del</arg>
<kw name="Ozone Shell Batch" library="shell">
<arg>volume create ${protocol}${server}/${volume}</arg>
<arg>bucket create ${protocol}${server}/${volume}/bfso --layout FILE_SYSTEM_OPTIMIZED</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/bfso/key3 /opt/hadoop/NOTICE.txt</arg>
<arg>key delete ${protocol}${server}/${volume}/bfso/key3</arg>
<kw name="Catenate" library="BuiltIn">
<var>${cmd}</var>
<arg>SEPARATOR=' --execute '</arg>
<arg>@{commands}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250617 21:56:29.367" level="INFO">${cmd} = volume create o3://om:9862/49204-with-del' --execute 'bucket create o3://om:9862/49204-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED' --execute 'key put -t RATIS o3://om:9862/49204-with-del/bfso/key3 /...</msg>
<status status="PASS" starttime="20250617 21:56:29.367" endtime="20250617 21:56:29.367"/>
</kw>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh --execute '${cmd}'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:56:29.370" level="INFO">Running command 'ozone sh --execute 'volume create o3://om:9862/49204-with-del' --execute 'bucket create o3://om:9862/49204-with-del/bfso --layout FILE_SYSTEM_OPTIMIZED' --execute 'key put -t RATIS o3://om:9862/49204-with-del/bfso/key3 /opt/hadoop/NOTICE.txt' --execute 'key delete o3://om:9862/49204-with-del/bfso/key3' 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:56:30.754" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:56:30.754" level="INFO">${output} = volume create o3://om:9862/49204-with-del
Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:56:29.368" endtime="20250617 21:56:30.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:56:30.755" level="INFO">volume create o3://om:9862/49204-with-del
Cannot resolve OM host om in the URI</msg>
<status status="PASS" starttime="20250617 21:56:30.755" endtime="20250617 21:56:30.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:56:30.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250617 21:56:30.756" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20250617 21:56:30.755" endtime="20250617 21:56:30.756"/>
</kw>
<status status="FAIL" starttime="20250617 21:56:29.368" endtime="20250617 21:56:30.756"/>
</kw>
<msg timestamp="20250617 21:56:30.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250617 21:56:29.367" endtime="20250617 21:56:30.756"/>
</kw>
<status status="FAIL" starttime="20250617 21:56:29.366" endtime="20250617 21:56:30.756"/>
</kw>
<kw name="Execute" library="os">
<var>${fsokey}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bfso</arg>
<status status="NOT RUN" starttime="20250617 21:56:30.756" endtime="20250617 21:56:30.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${fsokey}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:56:30.756" endtime="20250617 21:56:30.756"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="NOT RUN" starttime="20250617 21:56:30.756" endtime="20250617 21:56:30.757"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:56:30.757" endtime="20250617 21:56:30.757"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${fsokey}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<status status="NOT RUN" starttime="20250617 21:56:30.757" endtime="20250617 21:56:30.757"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key3</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:56:30.757" endtime="20250617 21:56:30.757"/>
</kw>
<kw name="Ozone Shell Batch" library="shell">
<arg>bucket create ${protocol}${server}/${volume}/obsbkt --layout OBJECT_STORE</arg>
<arg>key put -t RATIS ${protocol}${server}/${volume}/obsbkt/key2 /opt/hadoop/NOTICE.txt</arg>
<arg>key delete ${protocol}${server}/${volume}/obsbkt/key2</arg>
<status status="NOT RUN" starttime="20250617 21:56:30.757" endtime="20250617 21:56:30.757"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/obsbkt</arg>
<status status="NOT RUN" starttime="20250617 21:56:30.757" endtime="20250617 21:56:30.757"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 21:56:30.757" endtime="20250617 21:56:30.757"/>
</kw>
<status status="FAIL" starttime="20250617 21:56:29.366" endtime="20250617 21:56:30.757"/>
</kw>
<timeout value="10 minutes"/>
<status status="FAIL" starttime="20250617 21:56:29.365" endtime="20250617 21:56:30.758">255 != 0</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20250617 21:46:22.053" endtime="20250617 21:56:30.758"/>
</suite>
<suite id="s1-s3-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s3-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:56:30.766" endtime="20250617 21:56:30.767"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:56:30.767" level="INFO">${random} = 8O3QzIrr4H</msg>
<status status="PASS" starttime="20250617 21:56:30.767" endtime="20250617 21:56:30.767"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:56:30.770" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 8O3QzIrr4H --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 22:01:30.767" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20250617 21:56:30.768" endtime="20250617 22:01:30.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20250617 22:01:30.767" endtime="20250617 22:01:30.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20250617 22:01:30.768" endtime="20250617 22:01:30.768"/>
</kw>
<status status="FAIL" starttime="20250617 21:56:30.768" endtime="20250617 22:01:30.768"/>
</kw>
<msg timestamp="20250617 22:01:30.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250617 21:56:30.768" endtime="20250617 22:01:30.768"/>
</kw>
<status status="FAIL" starttime="20250617 21:56:30.767" endtime="20250617 22:01:30.768"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250617 22:01:30.768" endtime="20250617 22:01:30.768"/>
</kw>
<status status="FAIL" starttime="20250617 21:56:30.767" endtime="20250617 22:01:30.768"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<status status="NOT RUN" starttime="20250617 22:01:30.768" endtime="20250617 22:01:30.768"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250617 21:56:30.766" endtime="20250617 22:01:30.769">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest for one datanode</doc>
<status status="FAIL" starttime="20250617 21:56:30.760" endtime="20250617 22:01:30.769"/>
</suite>
<status status="FAIL" starttime="20250617 21:32:43.852" endtime="20250617 22:01:30.771"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1767914"/>
</suite>
<statistics>
<total>
<stat pass="54" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="54" fail="10" skip="0" id="s1" name="ozone">ozone</stat>
<stat pass="20" fail="0" skip="0" id="s1-s1" name="Lib">ozone.Lib</stat>
<stat pass="9" fail="0" skip="0" id="s1-s1-s1" name="Fs Tests">ozone.Lib.Fs Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s2" name="Os Tests">ozone.Lib.Os Tests</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s3" name="String Tests">ozone.Lib.String Tests</stat>
<stat pass="9" fail="0" skip="0" id="s1-s2" name="Ozone-Lib">ozone.Ozone-Lib</stat>
<stat pass="9" fail="0" skip="0" id="s1-s2-s1" name="Shell Tests">ozone.Ozone-Lib.Shell Tests</stat>
<stat pass="25" fail="10" skip="0" id="s1-s3" name="Basic">ozone.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s1" name="Basic">ozone.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3-s2" name="Getconf">ozone.Basic.Getconf</stat>
<stat pass="18" fail="0" skip="0" id="s1-s3-s3" name="Links">ozone.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3-s4" name="Ozone-Shell-Single">ozone.Basic.Ozone-Shell-Single</stat>
<stat pass="1" fail="8" skip="0" id="s1-s3-s5" name="Ozone-Shell">ozone.Basic.Ozone-Shell</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3-s6" name="Single Node">ozone.Basic.Single Node</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
