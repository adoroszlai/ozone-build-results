<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250617 21:56:27.487" rpa="false" schemaversion="4">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:54:45.390" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:54:51.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:54:51.124" level="INFO">${output} = 2025-06-17 21:54:46,333 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:54:46,524 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:54:45.388" endtime="20250617 21:54:51.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:54:51.125" level="INFO">2025-06-17 21:54:46,333 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:54:46,524 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:54:46,524 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:54:46,700 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-06-17 21:54:46,750 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:54:47,750 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:54:48,751 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:54:49,751 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:54:49,753 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-06-17 21:54:49,832 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-06-17 21:54:49,997 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:54:50,752 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-06-17 21:54:50,783 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=821.915663, max=821.915663, mean=821.915663, stddev=0.0, median=821.915663, p75=821.915663, p95=821.915663, p98=821.915663, p99=821.915663, p999=821.915663, mean_rate=1.0735447505089515, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:54:50,784 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2025-06-17 21:54:50,784 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:54:50,784 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250617 21:54:51.124" endtime="20250617 21:54:51.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:54:51.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:54:51.125" endtime="20250617 21:54:51.125"/>
</kw>
<status status="PASS" starttime="20250617 21:54:45.388" endtime="20250617 21:54:51.126"/>
</kw>
<msg timestamp="20250617 21:54:51.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:54:45.388" endtime="20250617 21:54:51.126"/>
</kw>
<msg timestamp="20250617 21:54:51.126" level="INFO">${result} = 2025-06-17 21:54:46,333 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:54:46,524 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:54:45.387" endtime="20250617 21:54:51.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:54:51.126" endtime="20250617 21:54:51.126"/>
</kw>
<status status="PASS" starttime="20250617 21:54:45.386" endtime="20250617 21:54:51.126"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:54:45.386" endtime="20250617 21:54:51.127"/>
</test>
<test id="s1-s1-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:54:51.131" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:54:54.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:54:54.442" level="INFO">${output} = 2025-06-17 21:54:52,006 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:54:52,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:54:51.129" endtime="20250617 21:54:54.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:54:54.443" level="INFO">2025-06-17 21:54:52,006 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:54:52,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:54:52,173 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:54:52,352 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2025-06-17 21:54:52,405 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:54:53,406 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:54:54,406 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-06-17 21:54:54,415 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=61.413972, max=61.413972, mean=61.413972, stddev=0.0, median=61.413972, p75=61.413972, p95=61.413972, p98=61.413972, p99=61.413972, p999=61.413972, mean_rate=0.9588363077781169, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:54:54,415 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-06-17 21:54:54,415 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:54:54,415 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250617 21:54:54.443" endtime="20250617 21:54:54.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:54:54.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:54:54.443" endtime="20250617 21:54:54.444"/>
</kw>
<status status="PASS" starttime="20250617 21:54:51.129" endtime="20250617 21:54:54.444"/>
</kw>
<msg timestamp="20250617 21:54:54.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:54:51.129" endtime="20250617 21:54:54.444"/>
</kw>
<msg timestamp="20250617 21:54:54.444" level="INFO">${result} = 2025-06-17 21:54:52,006 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:54:52,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:54:51.128" endtime="20250617 21:54:54.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:54:54.444" endtime="20250617 21:54:54.445"/>
</kw>
<status status="PASS" starttime="20250617 21:54:51.128" endtime="20250617 21:54:54.445"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:54:51.127" endtime="20250617 21:54:54.445"/>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:54:54.449" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:54:56.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:54:56.775" level="INFO">${output} = 2025-06-17 21:54:55,348 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:54:55,514 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:54:54.447" endtime="20250617 21:54:56.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:54:56.776" level="INFO">2025-06-17 21:54:55,348 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:54:55,514 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:54:55,514 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:54:55,677 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2025-06-17 21:54:55,726 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:54:56,726 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-06-17 21:54:56,735 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=9.499521, max=9.499521, mean=9.499521, stddev=0.0, median=9.499521, p75=9.499521, p95=9.499521, p98=9.499521, p99=9.499521, p999=9.499521, mean_rate=5.689332205700104, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:54:56,735 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-06-17 21:54:56,735 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:54:56,735 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250617 21:54:56.775" endtime="20250617 21:54:56.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:54:56.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:54:56.776" endtime="20250617 21:54:56.776"/>
</kw>
<status status="PASS" starttime="20250617 21:54:54.447" endtime="20250617 21:54:56.777"/>
</kw>
<msg timestamp="20250617 21:54:56.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:54:54.447" endtime="20250617 21:54:56.777"/>
</kw>
<msg timestamp="20250617 21:54:56.777" level="INFO">${result} = 2025-06-17 21:54:55,348 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:54:55,514 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:54:54.446" endtime="20250617 21:54:56.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:54:56.777" endtime="20250617 21:54:56.777"/>
</kw>
<status status="PASS" starttime="20250617 21:54:54.446" endtime="20250617 21:54:56.777"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:54:54.445" endtime="20250617 21:54:56.777"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250617 21:54:45.354" endtime="20250617 21:54:56.778"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s2-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:54:57.311" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:55:00.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:55:00.936" level="INFO">${output} = 2025-06-17 21:54:58,184 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:54:58,350 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:54:57.309" endtime="20250617 21:55:00.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:55:00.937" level="INFO">2025-06-17 21:54:58,184 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:54:58,350 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:54:58,351 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:54:58,526 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-06-17 21:54:58,578 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:54:59,579 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:54:59,619 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:55:00,579 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-06-17 21:55:00,596 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=21.732288, max=21.732288, mean=21.732288, stddev=0.0, median=21.732288, p75=21.732288, p95=21.732288, p98=21.732288, p99=21.732288, p999=21.732288, mean_rate=2.2358368188985946, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:55:00,596 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-06-17 21:55:00,596 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:55:00,596 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250617 21:55:00.936" endtime="20250617 21:55:00.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:55:00.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:55:00.937" endtime="20250617 21:55:00.937"/>
</kw>
<status status="PASS" starttime="20250617 21:54:57.308" endtime="20250617 21:55:00.937"/>
</kw>
<msg timestamp="20250617 21:55:00.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:54:57.308" endtime="20250617 21:55:00.938"/>
</kw>
<msg timestamp="20250617 21:55:00.938" level="INFO">${result} = 2025-06-17 21:54:58,184 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:54:58,350 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:54:57.308" endtime="20250617 21:55:00.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:55:00.938" endtime="20250617 21:55:00.938"/>
</kw>
<status status="PASS" starttime="20250617 21:54:57.306" endtime="20250617 21:55:00.938"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:54:57.306" endtime="20250617 21:55:00.938"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250617 21:54:57.275" endtime="20250617 21:55:00.939"/>
</suite>
<suite id="s1-s3" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s3-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:55:01.476" endtime="20250617 21:55:01.477"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:55:01.480" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:55:05.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:55:05.863" level="INFO">${output} = 2025-06-17 21:55:02,395 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:02,571 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:55:01.478" endtime="20250617 21:55:05.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:55:05.864" level="INFO">2025-06-17 21:55:02,395 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:02,571 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:55:02,571 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:55:03,251 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-06-17 21:55:03,477 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-06-17 21:55:03,501 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-06-17 21:55:03,542 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:55:04,501 [Thread-4] INFO freon.ProgressBar: Progress: 9.00 % (9 out of 100)
2025-06-17 21:55:05,502 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-06-17 21:55:05,521 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=5.891366, max=628.186319, mean=17.02317439469745, stddev=61.320404696955954, median=10.333651, p75=12.070588, p95=16.411871, p98=29.024704, p99=29.064558, p999=628.186319, mean_rate=54.02994811081568, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:55:05,522 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-06-17 21:55:05,522 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:55:05,522 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250617 21:55:05.863" endtime="20250617 21:55:05.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:55:05.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:55:05.864" endtime="20250617 21:55:05.864"/>
</kw>
<status status="PASS" starttime="20250617 21:55:01.477" endtime="20250617 21:55:05.865"/>
</kw>
<msg timestamp="20250617 21:55:05.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:55:01.477" endtime="20250617 21:55:05.865"/>
</kw>
<msg timestamp="20250617 21:55:05.865" level="INFO">${result} = 2025-06-17 21:55:02,395 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:02,571 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:55:01.477" endtime="20250617 21:55:05.865"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:55:05.865" endtime="20250617 21:55:05.865"/>
</kw>
<status status="PASS" starttime="20250617 21:55:01.475" endtime="20250617 21:55:05.865"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:55:01.475" endtime="20250617 21:55:05.866"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250617 21:55:01.444" endtime="20250617 21:55:05.866"/>
</suite>
<suite id="s1-s4" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s4-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:55:06.405" endtime="20250617 21:55:06.405"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:55:06.408" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:55:10.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:55:10.045" level="INFO">${output} = 2025-06-17 21:55:07,291 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:07,461 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:55:06.406" endtime="20250617 21:55:10.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:55:10.046" level="INFO">2025-06-17 21:55:07,291 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:07,461 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:55:07,461 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:55:07,636 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-06-17 21:55:07,684 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-06-17 21:55:08,188 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-06-17 21:55:08,414 [main] INFO freon.DatanodeChunkValidator: Using pipeline Pipeline-4aeb7627-50d2-4989-9d56-f1019eb2df70
2025-06-17 21:55:08,456 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:55:08,685 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-06-17 21:55:09,685 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-06-17 21:55:09,703 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.466002, max=5.402923, mean=1.9776815400000003, stddev=0.4551709379769631, median=1.907327, p75=2.13979, p95=2.515442, p98=2.812655, p99=3.008097, p999=5.402923, mean_rate=152.56720363334767, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:55:09,704 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-06-17 21:55:09,704 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:55:09,704 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250617 21:55:10.046" endtime="20250617 21:55:10.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:55:10.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:55:10.046" endtime="20250617 21:55:10.047"/>
</kw>
<status status="PASS" starttime="20250617 21:55:06.406" endtime="20250617 21:55:10.047"/>
</kw>
<msg timestamp="20250617 21:55:10.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:55:06.406" endtime="20250617 21:55:10.047"/>
</kw>
<msg timestamp="20250617 21:55:10.047" level="INFO">${result} = 2025-06-17 21:55:07,291 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:07,461 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:55:06.405" endtime="20250617 21:55:10.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:55:10.047" endtime="20250617 21:55:10.048"/>
</kw>
<status status="PASS" starttime="20250617 21:55:06.404" endtime="20250617 21:55:10.048"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:55:06.403" endtime="20250617 21:55:10.048"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250617 21:55:06.363" endtime="20250617 21:55:10.049"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s5-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:55:43.975" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:55:53.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:55:53.687" level="INFO">${output} = 2025-06-17 21:55:44,920 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:45,091 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:55:43.973" endtime="20250617 21:55:53.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:55:53.688" level="INFO">2025-06-17 21:55:44,920 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:45,091 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:55:45,091 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:55:45,272 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-06-17 21:55:45,322 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:55:46,323 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:55:47,323 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:55:47,825 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:810)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:200)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:193)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:158)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:115)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1246)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1169)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:525)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1953)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3198)
, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2025-06-17 21:55:48,324 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:55:49,324 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:55:50,324 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:55:51,325 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:55:52,325 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:55:52,520 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:55:53,326 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-06-17 21:55:53,341 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=18.822761, max=18.822761, mean=18.822761, stddev=0.0, median=18.822761, p75=18.822761, p95=18.822761, p98=18.822761, p99=18.822761, p999=18.822761, mean_rate=4.856575326075809, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:55:53,341 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2025-06-17 21:55:53,341 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:55:53,341 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250617 21:55:53.688" endtime="20250617 21:55:53.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:55:53.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:55:53.688" endtime="20250617 21:55:53.689"/>
</kw>
<status status="PASS" starttime="20250617 21:55:43.973" endtime="20250617 21:55:53.689"/>
</kw>
<msg timestamp="20250617 21:55:53.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:55:43.973" endtime="20250617 21:55:53.689"/>
</kw>
<msg timestamp="20250617 21:55:53.689" level="INFO">${result} = 2025-06-17 21:55:44,920 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:45,091 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:55:43.972" endtime="20250617 21:55:53.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:55:53.689" endtime="20250617 21:55:53.690"/>
</kw>
<status status="PASS" starttime="20250617 21:55:43.971" endtime="20250617 21:55:53.690"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:55:43.971" endtime="20250617 21:55:53.690"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250617 21:55:43.939" endtime="20250617 21:55:53.691"/>
</suite>
<suite id="s1-s6" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s6-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:55:54.236" endtime="20250617 21:55:54.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:55:54.239" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:55:57.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:55:57.890" level="INFO">${output} = 2025-06-17 21:55:55,134 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:55,292 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:55:54.237" endtime="20250617 21:55:57.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:55:57.891" level="INFO">2025-06-17 21:55:55,134 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:55,292 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:55:55,292 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:55:55,465 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-06-17 21:55:55,521 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-06-17 21:55:55,949 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-06-17 21:55:56,168 [main] INFO freon.DatanodeChunkValidator: Using pipeline Pipeline-4aeb7627-50d2-4989-9d56-f1019eb2df70
2025-06-17 21:55:56,216 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:55:56,522 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-06-17 21:55:57,523 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-06-17 21:55:57,543 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.561171, max=5.922233, mean=2.879185991731193, stddev=0.8166627792723203, median=2.65879, p75=3.280074, p95=4.225449, p98=5.304477, p99=5.511745, p999=5.922233, mean_rate=152.1329192739783, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:55:57,544 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-06-17 21:55:57,544 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:55:57,544 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250617 21:55:57.891" endtime="20250617 21:55:57.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:55:57.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:55:57.891" endtime="20250617 21:55:57.892"/>
</kw>
<status status="PASS" starttime="20250617 21:55:54.237" endtime="20250617 21:55:57.892"/>
</kw>
<msg timestamp="20250617 21:55:57.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:55:54.237" endtime="20250617 21:55:57.892"/>
</kw>
<msg timestamp="20250617 21:55:57.892" level="INFO">${result} = 2025-06-17 21:55:55,134 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:55,292 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:55:54.236" endtime="20250617 21:55:57.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:55:57.892" endtime="20250617 21:55:57.893"/>
</kw>
<status status="PASS" starttime="20250617 21:55:54.234" endtime="20250617 21:55:57.893"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:55:54.234" endtime="20250617 21:55:57.893"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250617 21:55:54.197" endtime="20250617 21:55:57.894"/>
</suite>
<suite id="s1-s7" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:55:58.423" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:56:02.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:56:02.070" level="INFO">${output} = 2025-06-17 21:55:59,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:59,480 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:55:58.421" endtime="20250617 21:56:02.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:56:02.070" level="INFO">2025-06-17 21:55:59,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:59,480 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:55:59,480 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:55:59,643 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-06-17 21:55:59,707 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:56:00,707 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:56:00,823 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:56:01,708 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-06-17 21:56:01,728 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=843.741183, max=843.741183, mean=843.741183, stddev=0.0, median=843.741183, p75=843.741183, p95=843.741183, p98=843.741183, p99=843.741183, p999=843.741183, mean_rate=0.8853331234975786, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:56:01,728 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-06-17 21:56:01,729 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:56:01,729 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250617 21:56:02.070" endtime="20250617 21:56:02.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:56:02.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:56:02.071" endtime="20250617 21:56:02.071"/>
</kw>
<status status="PASS" starttime="20250617 21:55:58.420" endtime="20250617 21:56:02.071"/>
</kw>
<msg timestamp="20250617 21:56:02.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:55:58.420" endtime="20250617 21:56:02.071"/>
</kw>
<msg timestamp="20250617 21:56:02.071" level="INFO">${result} = 2025-06-17 21:55:59,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:55:59,480 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:55:58.420" endtime="20250617 21:56:02.071"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:56:02.071" endtime="20250617 21:56:02.072"/>
</kw>
<status status="PASS" starttime="20250617 21:55:58.418" endtime="20250617 21:56:02.072"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:55:58.418" endtime="20250617 21:56:02.072"/>
</test>
<test id="s1-s7-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:56:02.077" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:56:04.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:56:04.426" level="INFO">${output} = 2025-06-17 21:56:02,971 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:03,136 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:56:02.075" endtime="20250617 21:56:04.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:56:04.427" level="INFO">2025-06-17 21:56:02,971 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:03,136 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:56:03,136 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:56:03,326 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2025-06-17 21:56:03,390 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:56:04,391 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-06-17 21:56:04,399 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=59.220848, max=59.220848, mean=59.220848, stddev=0.0, median=59.220848, p75=59.220848, p95=59.220848, p98=59.220848, p99=59.220848, p999=59.220848, mean_rate=5.595684196505298, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:56:04,400 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-06-17 21:56:04,400 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:56:04,400 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250617 21:56:04.427" endtime="20250617 21:56:04.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:56:04.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:56:04.427" endtime="20250617 21:56:04.428"/>
</kw>
<status status="PASS" starttime="20250617 21:56:02.074" endtime="20250617 21:56:04.428"/>
</kw>
<msg timestamp="20250617 21:56:04.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:56:02.074" endtime="20250617 21:56:04.428"/>
</kw>
<msg timestamp="20250617 21:56:04.428" level="INFO">${result} = 2025-06-17 21:56:02,971 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:03,136 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:56:02.074" endtime="20250617 21:56:04.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:56:04.428" endtime="20250617 21:56:04.428"/>
</kw>
<status status="PASS" starttime="20250617 21:56:02.073" endtime="20250617 21:56:04.429"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:56:02.072" endtime="20250617 21:56:04.429"/>
</test>
<test id="s1-s7-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:56:04.433" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:56:06.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:56:06.764" level="INFO">${output} = 2025-06-17 21:56:05,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:05,486 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:56:04.431" endtime="20250617 21:56:06.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:56:06.765" level="INFO">2025-06-17 21:56:05,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:05,486 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:56:05,486 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:56:05,669 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2025-06-17 21:56:05,719 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:56:06,720 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-06-17 21:56:06,728 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=12.284178, max=12.284178, mean=12.284178, stddev=0.0, median=12.284178, p75=12.284178, p95=12.284178, p98=12.284178, p99=12.284178, p999=12.284178, mean_rate=6.282002128606165, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:56:06,728 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-06-17 21:56:06,728 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:56:06,728 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250617 21:56:06.764" endtime="20250617 21:56:06.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:56:06.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:56:06.765" endtime="20250617 21:56:06.765"/>
</kw>
<status status="PASS" starttime="20250617 21:56:04.431" endtime="20250617 21:56:06.765"/>
</kw>
<msg timestamp="20250617 21:56:06.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:56:04.431" endtime="20250617 21:56:06.766"/>
</kw>
<msg timestamp="20250617 21:56:06.766" level="INFO">${result} = 2025-06-17 21:56:05,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:05,486 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:56:04.430" endtime="20250617 21:56:06.766"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:56:06.766" endtime="20250617 21:56:06.766"/>
</kw>
<status status="PASS" starttime="20250617 21:56:04.430" endtime="20250617 21:56:06.766"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:56:04.429" endtime="20250617 21:56:06.766"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250617 21:55:58.386" endtime="20250617 21:56:06.767"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s8-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:56:07.308" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:56:10.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:56:10.961" level="INFO">${output} = 2025-06-17 21:56:08,214 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:08,381 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:56:07.306" endtime="20250617 21:56:10.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:56:10.961" level="INFO">2025-06-17 21:56:08,214 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:08,381 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:56:08,381 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:56:08,554 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-06-17 21:56:08,605 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:56:09,558 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:56:09,605 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-06-17 21:56:10,606 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-06-17 21:56:10,620 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=22.83274, max=22.83274, mean=22.83274, stddev=0.0, median=22.83274, p75=22.83274, p95=22.83274, p98=22.83274, p99=22.83274, p999=22.83274, mean_rate=1.9286533088588513, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:56:10,620 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-06-17 21:56:10,620 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:56:10,620 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250617 21:56:10.961" endtime="20250617 21:56:10.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:56:10.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:56:10.962" endtime="20250617 21:56:10.962"/>
</kw>
<status status="PASS" starttime="20250617 21:56:07.306" endtime="20250617 21:56:10.962"/>
</kw>
<msg timestamp="20250617 21:56:10.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:56:07.306" endtime="20250617 21:56:10.962"/>
</kw>
<msg timestamp="20250617 21:56:10.962" level="INFO">${result} = 2025-06-17 21:56:08,214 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:08,381 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:56:07.305" endtime="20250617 21:56:10.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:56:10.963" endtime="20250617 21:56:10.963"/>
</kw>
<status status="PASS" starttime="20250617 21:56:07.304" endtime="20250617 21:56:10.963"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:56:07.303" endtime="20250617 21:56:10.963"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250617 21:56:07.272" endtime="20250617 21:56:10.964"/>
</suite>
<suite id="s1-s9" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s9-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:56:11.544" endtime="20250617 21:56:11.545"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:56:11.548" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:56:16.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:56:16.851" level="INFO">${output} = 2025-06-17 21:56:12,439 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:12,598 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:56:11.545" endtime="20250617 21:56:16.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:56:16.852" level="INFO">2025-06-17 21:56:12,439 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:12,598 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:56:12,598 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:56:13,220 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-06-17 21:56:13,467 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-06-17 21:56:13,488 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-06-17 21:56:13,528 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:56:14,489 [Thread-4] INFO freon.ProgressBar: Progress: 13.00 % (13 out of 100)
2025-06-17 21:56:15,490 [Thread-4] INFO freon.ProgressBar: Progress: 93.00 % (93 out of 100)
2025-06-17 21:56:16,491 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-06-17 21:56:16,509 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=6.898059, max=467.307246, mean=18.529654096162034, stddev=45.306174378038094, median=12.033465, p75=17.26029, p95=28.459458, p98=32.814297, p99=34.973372, p999=467.307246, mean_rate=34.97281898519343, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:56:16,509 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-06-17 21:56:16,509 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:56:16,509 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250617 21:56:16.851" endtime="20250617 21:56:16.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:56:16.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:56:16.852" endtime="20250617 21:56:16.852"/>
</kw>
<status status="PASS" starttime="20250617 21:56:11.545" endtime="20250617 21:56:16.853"/>
</kw>
<msg timestamp="20250617 21:56:16.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:56:11.545" endtime="20250617 21:56:16.853"/>
</kw>
<msg timestamp="20250617 21:56:16.853" level="INFO">${result} = 2025-06-17 21:56:12,439 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:12,598 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:56:11.545" endtime="20250617 21:56:16.853"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:56:16.853" endtime="20250617 21:56:16.853"/>
</kw>
<status status="PASS" starttime="20250617 21:56:11.543" endtime="20250617 21:56:16.853"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:56:11.542" endtime="20250617 21:56:16.854"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250617 21:56:11.510" endtime="20250617 21:56:16.854"/>
</suite>
<suite id="s1-s10" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s10-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:56:17.390" endtime="20250617 21:56:17.390"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:56:17.393" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:56:21.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:56:21.019" level="INFO">${output} = 2025-06-17 21:56:18,265 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:18,427 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:56:17.391" endtime="20250617 21:56:21.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:56:21.020" level="INFO">2025-06-17 21:56:18,265 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:18,427 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:56:18,427 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:56:18,610 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-06-17 21:56:18,658 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-06-17 21:56:19,074 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-06-17 21:56:19,290 [main] INFO freon.DatanodeChunkValidator: Using pipeline Pipeline-4aeb7627-50d2-4989-9d56-f1019eb2df70
2025-06-17 21:56:19,332 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:56:19,659 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-06-17 21:56:20,659 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-06-17 21:56:20,680 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.364033, max=4.714772, mean=1.9280510760211214, stddev=0.44774101761856877, median=1.836474, p75=2.083227, p95=2.547682, p98=2.985995, p99=3.304182, p999=4.714772, mean_rate=135.4557913929231, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:56:20,680 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-06-17 21:56:20,680 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:56:20,680 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250617 21:56:21.020" endtime="20250617 21:56:21.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:56:21.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:56:21.020" endtime="20250617 21:56:21.021"/>
</kw>
<status status="PASS" starttime="20250617 21:56:17.391" endtime="20250617 21:56:21.021"/>
</kw>
<msg timestamp="20250617 21:56:21.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:56:17.390" endtime="20250617 21:56:21.021"/>
</kw>
<msg timestamp="20250617 21:56:21.021" level="INFO">${result} = 2025-06-17 21:56:18,265 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:56:18,427 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:56:17.390" endtime="20250617 21:56:21.021"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:56:21.021" endtime="20250617 21:56:21.022"/>
</kw>
<status status="PASS" starttime="20250617 21:56:17.388" endtime="20250617 21:56:21.022"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:56:17.388" endtime="20250617 21:56:21.022"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250617 21:56:17.356" endtime="20250617 21:56:21.023"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="57729"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate-Chunk">restart.Validate-Chunk</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
