<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250617 21:35:17.009" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:15.086" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:23.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:23.725" level="INFO">${output} = 2025-06-17 21:32:15,954 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:32:16,123 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:32:15.084" endtime="20250617 21:32:23.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:23.726" level="INFO">2025-06-17 21:32:15,954 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:32:16,123 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:32:16,123 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:32:16,303 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-06-17 21:32:16,350 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-06-17 21:32:17,203 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-06-17 21:32:17,313 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-06-17 21:32:17,351 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-06-17 21:32:17,534 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:32:18,351 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2025-06-17 21:32:19,352 [Thread-3] INFO freon.ProgressBar: Progress: 14.00 % (14 out of 100)
2025-06-17 21:32:20,353 [Thread-3] INFO freon.ProgressBar: Progress: 39.00 % (39 out of 100)
2025-06-17 21:32:21,353 [Thread-3] INFO freon.ProgressBar: Progress: 65.00 % (65 out of 100)
2025-06-17 21:32:22,354 [Thread-3] INFO freon.ProgressBar: Progress: 96.00 % (96 out of 100)
2025-06-17 21:32:23,354 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-06-17 21:32:23,383 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=24.376585, max=861.932899, mean=50.33535584899852, stddev=86.82198742948599, median=35.71757, p75=42.934669, p95=65.837063, p98=187.98049, p99=324.171274, p999=861.932899, mean_rate=16.634909639931884, m1=19.2, m5=19.2, m15=19.2, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:32:23,384 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2025-06-17 21:32:23,384 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:32:23,384 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250617 21:32:23.725" endtime="20250617 21:32:23.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:23.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:23.726" endtime="20250617 21:32:23.726"/>
</kw>
<status status="PASS" starttime="20250617 21:32:15.083" endtime="20250617 21:32:23.727"/>
</kw>
<msg timestamp="20250617 21:32:23.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:15.083" endtime="20250617 21:32:23.727"/>
</kw>
<msg timestamp="20250617 21:32:23.727" level="INFO">${result} = 2025-06-17 21:32:15,954 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:32:16,123 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:32:15.083" endtime="20250617 21:32:23.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:23.727" endtime="20250617 21:32:23.727"/>
</kw>
<status status="PASS" starttime="20250617 21:32:15.082" endtime="20250617 21:32:23.727"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:32:23.728" level="INFO">${random} = 17484</msg>
<status status="PASS" starttime="20250617 21:32:23.727" endtime="20250617 21:32:23.728"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:32:23.729" level="INFO">${volume_name} = 17484-volume-for-prepare</msg>
<status status="PASS" starttime="20250617 21:32:23.728" endtime="20250617 21:32:23.729"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:32:23.729" level="INFO">${bucket_name} = 17484-bucket-for-prepare</msg>
<status status="PASS" starttime="20250617 21:32:23.729" endtime="20250617 21:32:23.729"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:23.732" level="INFO">Running command 'ozone sh volume create /17484-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:25.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:25.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:23.730" endtime="20250617 21:32:25.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:25.580" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:25.580" endtime="20250617 21:32:25.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:25.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:25.581" endtime="20250617 21:32:25.581"/>
</kw>
<status status="PASS" starttime="20250617 21:32:23.730" endtime="20250617 21:32:25.581"/>
</kw>
<msg timestamp="20250617 21:32:25.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:23.730" endtime="20250617 21:32:25.581"/>
</kw>
<status status="PASS" starttime="20250617 21:32:23.730" endtime="20250617 21:32:25.581"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:25.585" level="INFO">Running command 'ozone sh bucket create /17484-volume-for-prepare/17484-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:27.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:27.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:25.582" endtime="20250617 21:32:27.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:27.419" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:27.418" endtime="20250617 21:32:27.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:27.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:27.419" endtime="20250617 21:32:27.419"/>
</kw>
<status status="PASS" starttime="20250617 21:32:25.582" endtime="20250617 21:32:27.419"/>
</kw>
<msg timestamp="20250617 21:32:27.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:25.582" endtime="20250617 21:32:27.419"/>
</kw>
<status status="PASS" starttime="20250617 21:32:25.581" endtime="20250617 21:32:27.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:27.422" level="INFO">Running command 'ozone sh key put /17484-volume-for-prepare/17484-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:30.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:30.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:27.420" endtime="20250617 21:32:30.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:30.488" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:30.488" endtime="20250617 21:32:30.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:30.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:30.488" endtime="20250617 21:32:30.489"/>
</kw>
<status status="PASS" starttime="20250617 21:32:27.420" endtime="20250617 21:32:30.489"/>
</kw>
<msg timestamp="20250617 21:32:30.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:27.420" endtime="20250617 21:32:30.489"/>
</kw>
<status status="PASS" starttime="20250617 21:32:27.419" endtime="20250617 21:32:30.489"/>
</kw>
<status status="PASS" starttime="20250617 21:32:15.082" endtime="20250617 21:32:30.489"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:32:30.490" endtime="20250617 21:32:30.490"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:30.493" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:37.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:37.290" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250617 21:32:30.491" endtime="20250617 21:32:37.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:37.291" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250617 21:32:37.290" endtime="20250617 21:32:37.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:37.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:37.291" endtime="20250617 21:32:37.292"/>
</kw>
<status status="PASS" starttime="20250617 21:32:30.491" endtime="20250617 21:32:37.292"/>
</kw>
<msg timestamp="20250617 21:32:37.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:30.491" endtime="20250617 21:32:37.292"/>
</kw>
<msg timestamp="20250617 21:32:37.292" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250617 21:32:30.490" endtime="20250617 21:32:37.292"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:37.293" endtime="20250617 21:32:37.293"/>
</kw>
<status status="PASS" starttime="20250617 21:32:37.292" endtime="20250617 21:32:37.293"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:32:30.489" endtime="20250617 21:32:37.293"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:32:37.294" endtime="20250617 21:32:37.295"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:37.299" level="INFO">Running command 'ozone sh key info /17484-volume-for-prepare/17484-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:39.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:39.510" level="INFO">${output} = {
  "volumeName" : "17484-volume-for-prepare",
  "bucketName" : "17484-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-06-17T21:32:2...</msg>
<status status="PASS" starttime="20250617 21:32:37.296" endtime="20250617 21:32:39.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:39.511" level="INFO">{
  "volumeName" : "17484-volume-for-prepare",
  "bucketName" : "17484-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-06-17T21:32:29.298Z",
  "modificationTime" : "2025-06-17T21:32:30.133Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 115816896921600101,
    "length" : 15892,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 411,
  "file" : true
}</msg>
<status status="PASS" starttime="20250617 21:32:39.511" endtime="20250617 21:32:39.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:39.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:39.511" endtime="20250617 21:32:39.512"/>
</kw>
<status status="PASS" starttime="20250617 21:32:37.295" endtime="20250617 21:32:39.512"/>
</kw>
<msg timestamp="20250617 21:32:39.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:37.295" endtime="20250617 21:32:39.512"/>
</kw>
<msg timestamp="20250617 21:32:39.512" level="INFO">${result} = {
  "volumeName" : "17484-volume-for-prepare",
  "bucketName" : "17484-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-06-17T21:32:2...</msg>
<status status="PASS" starttime="20250617 21:32:37.295" endtime="20250617 21:32:39.512"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:39.512" endtime="20250617 21:32:39.513"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:32:37.294" endtime="20250617 21:32:39.513"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:32:39.514" endtime="20250617 21:32:39.514"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:39.516" level="INFO">Running command 'ozone sh key put /17484-volume-for-prepare/17484-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:41.324" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:32:41.324" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250617 21:32:39.514" endtime="20250617 21:32:41.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:41.325" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250617 21:32:41.325" endtime="20250617 21:32:41.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:41.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:41.325" endtime="20250617 21:32:41.326"/>
</kw>
<msg timestamp="20250617 21:32:41.326" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250617 21:32:39.514" endtime="20250617 21:32:41.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:41.326" endtime="20250617 21:32:41.326"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:41.329" level="INFO">Running command 'ozone sh key info /17484-volume-for-prepare/17484-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:43.113" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:32:43.113" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250617 21:32:41.327" endtime="20250617 21:32:43.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:43.114" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250617 21:32:43.113" endtime="20250617 21:32:43.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:43.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:43.114" endtime="20250617 21:32:43.114"/>
</kw>
<status status="PASS" starttime="20250617 21:32:41.326" endtime="20250617 21:32:43.115"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:32:39.513" endtime="20250617 21:32:43.115"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20250617 21:32:15.043" endtime="20250617 21:32:43.115"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:32:43.643" level="INFO">${random} = 70708</msg>
<status status="PASS" starttime="20250617 21:32:43.643" endtime="20250617 21:32:43.643"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:32:43.644" level="INFO">${volume_name} = 70708-volume-for-cancel</msg>
<status status="PASS" starttime="20250617 21:32:43.643" endtime="20250617 21:32:43.644"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:32:43.645" level="INFO">${bucket_name} = 70708-bucket-for-cancel</msg>
<status status="PASS" starttime="20250617 21:32:43.644" endtime="20250617 21:32:43.645"/>
</kw>
<status status="PASS" starttime="20250617 21:32:43.642" endtime="20250617 21:32:43.645"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:32:43.645" endtime="20250617 21:32:43.645"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:43.649" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:45.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:45.209" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250617 21:32:43.646" endtime="20250617 21:32:45.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:45.210" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250617 21:32:45.209" endtime="20250617 21:32:45.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:45.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:45.210" endtime="20250617 21:32:45.210"/>
</kw>
<status status="PASS" starttime="20250617 21:32:43.646" endtime="20250617 21:32:45.210"/>
</kw>
<msg timestamp="20250617 21:32:45.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:43.646" endtime="20250617 21:32:45.211"/>
</kw>
<msg timestamp="20250617 21:32:45.211" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250617 21:32:43.646" endtime="20250617 21:32:45.211"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:45.211" endtime="20250617 21:32:45.211"/>
</kw>
<status status="PASS" starttime="20250617 21:32:45.211" endtime="20250617 21:32:45.212"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:32:43.645" endtime="20250617 21:32:45.212"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:32:45.213" endtime="20250617 21:32:45.213"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:45.216" level="INFO">Running command 'ozone sh volume create /70708-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:46.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:46.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:45.214" endtime="20250617 21:32:46.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:46.979" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:46.978" endtime="20250617 21:32:46.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:46.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:46.979" endtime="20250617 21:32:46.979"/>
</kw>
<status status="PASS" starttime="20250617 21:32:45.213" endtime="20250617 21:32:46.979"/>
</kw>
<msg timestamp="20250617 21:32:46.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:45.213" endtime="20250617 21:32:46.979"/>
</kw>
<status status="PASS" starttime="20250617 21:32:45.213" endtime="20250617 21:32:46.979"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:46.982" level="INFO">Running command 'ozone sh bucket create /70708-volume-for-cancel/70708-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:48.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:48.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:46.980" endtime="20250617 21:32:48.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:48.788" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:48.788" endtime="20250617 21:32:48.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:48.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:48.788" endtime="20250617 21:32:48.789"/>
</kw>
<status status="PASS" starttime="20250617 21:32:46.980" endtime="20250617 21:32:48.789"/>
</kw>
<msg timestamp="20250617 21:32:48.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:46.980" endtime="20250617 21:32:48.789"/>
</kw>
<status status="PASS" starttime="20250617 21:32:46.979" endtime="20250617 21:32:48.789"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:48.792" level="INFO">Running command 'ozone sh key put /70708-volume-for-cancel/70708-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:51.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:51.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:32:48.790" endtime="20250617 21:32:51.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:51.672" level="INFO"/>
<status status="PASS" starttime="20250617 21:32:51.671" endtime="20250617 21:32:51.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:51.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:51.672" endtime="20250617 21:32:51.672"/>
</kw>
<status status="PASS" starttime="20250617 21:32:48.790" endtime="20250617 21:32:51.672"/>
</kw>
<msg timestamp="20250617 21:32:51.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:48.789" endtime="20250617 21:32:51.672"/>
</kw>
<msg timestamp="20250617 21:32:51.672" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250617 21:32:48.789" endtime="20250617 21:32:51.672"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:51.676" level="INFO">Running command 'ozone sh key info /70708-volume-for-cancel/70708-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:32:53.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:32:53.802" level="INFO">${output} = {
  "volumeName" : "70708-volume-for-cancel",
  "bucketName" : "70708-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-06-17T21:32:50.5...</msg>
<status status="PASS" starttime="20250617 21:32:51.674" endtime="20250617 21:32:53.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:32:53.803" level="INFO">{
  "volumeName" : "70708-volume-for-cancel",
  "bucketName" : "70708-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-06-17T21:32:50.542Z",
  "modificationTime" : "2025-06-17T21:32:51.312Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 5,
    "localID" : 115816896921600103,
    "length" : 15892,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 423,
  "file" : true
}</msg>
<status status="PASS" starttime="20250617 21:32:53.802" endtime="20250617 21:32:53.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:32:53.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:32:53.803" endtime="20250617 21:32:53.803"/>
</kw>
<status status="PASS" starttime="20250617 21:32:51.673" endtime="20250617 21:32:53.803"/>
</kw>
<msg timestamp="20250617 21:32:53.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:51.673" endtime="20250617 21:32:53.803"/>
</kw>
<msg timestamp="20250617 21:32:53.804" level="INFO">${result} = {
  "volumeName" : "70708-volume-for-cancel",
  "bucketName" : "70708-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-06-17T21:32:50.5...</msg>
<status status="PASS" starttime="20250617 21:32:51.673" endtime="20250617 21:32:53.804"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:32:53.804" endtime="20250617 21:32:53.804"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:32:45.212" endtime="20250617 21:32:53.804"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20250617 21:32:43.609" endtime="20250617 21:32:53.805"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:32:54.353" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:00.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:00.975" level="INFO">${output} = 2025-06-17 21:32:55,208 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:32:55,364 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:32:54.351" endtime="20250617 21:33:00.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:00.975" level="INFO">2025-06-17 21:32:55,208 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:32:55,364 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-06-17 21:32:55,364 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-06-17 21:32:55,550 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-06-17 21:32:55,595 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-06-17 21:32:56,557 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-06-17 21:32:56,596 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-06-17 21:32:57,596 [Thread-3] INFO freon.ProgressBar: Progress: 14.00 % (14 out of 100)
2025-06-17 21:32:58,597 [Thread-3] INFO freon.ProgressBar: Progress: 42.00 % (42 out of 100)
2025-06-17 21:32:59,597 [Thread-3] INFO freon.ProgressBar: Progress: 78.00 % (78 out of 100)
2025-06-17 21:33:00,598 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-06-17 21:33:00,634 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=19.443155, max=652.568503, mean=37.66859897959078, stddev=61.72699265490455, median=29.990372, p75=35.139201, p95=46.249428, p98=58.120501, p99=63.614746, p999=652.568503, mean_rate=23.921887518125633, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-06-17 21:33:00,634 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2025-06-17 21:33:00,634 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-06-17 21:33:00,634 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250617 21:33:00.975" endtime="20250617 21:33:00.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:00.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:00.976" endtime="20250617 21:33:00.976"/>
</kw>
<status status="PASS" starttime="20250617 21:32:54.351" endtime="20250617 21:33:00.976"/>
</kw>
<msg timestamp="20250617 21:33:00.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:32:54.351" endtime="20250617 21:33:00.976"/>
</kw>
<msg timestamp="20250617 21:33:00.976" level="INFO">${result} = 2025-06-17 21:32:55,208 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-06-17 21:32:55,364 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250617 21:32:54.350" endtime="20250617 21:33:00.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:00.977" endtime="20250617 21:33:00.977"/>
</kw>
<status status="PASS" starttime="20250617 21:32:54.350" endtime="20250617 21:33:00.977"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:33:00.977" level="INFO">${random} = 20118</msg>
<status status="PASS" starttime="20250617 21:33:00.977" endtime="20250617 21:33:00.977"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:33:00.978" level="INFO">${volume_name} = 20118-volume-for-prepare</msg>
<status status="PASS" starttime="20250617 21:33:00.977" endtime="20250617 21:33:00.978"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:33:00.979" level="INFO">${bucket_name} = 20118-bucket-for-prepare</msg>
<status status="PASS" starttime="20250617 21:33:00.978" endtime="20250617 21:33:00.979"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:00.982" level="INFO">Running command 'ozone sh volume create /20118-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:02.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:02.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:33:00.980" endtime="20250617 21:33:02.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:02.771" level="INFO"/>
<status status="PASS" starttime="20250617 21:33:02.771" endtime="20250617 21:33:02.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:02.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:02.771" endtime="20250617 21:33:02.772"/>
</kw>
<status status="PASS" starttime="20250617 21:33:00.980" endtime="20250617 21:33:02.772"/>
</kw>
<msg timestamp="20250617 21:33:02.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:00.979" endtime="20250617 21:33:02.772"/>
</kw>
<status status="PASS" starttime="20250617 21:33:00.979" endtime="20250617 21:33:02.772"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:02.775" level="INFO">Running command 'ozone sh bucket create /20118-volume-for-prepare/20118-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:04.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:04.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:33:02.773" endtime="20250617 21:33:04.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:04.692" level="INFO"/>
<status status="PASS" starttime="20250617 21:33:04.691" endtime="20250617 21:33:04.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:04.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:04.692" endtime="20250617 21:33:04.692"/>
</kw>
<status status="PASS" starttime="20250617 21:33:02.773" endtime="20250617 21:33:04.692"/>
</kw>
<msg timestamp="20250617 21:33:04.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:02.773" endtime="20250617 21:33:04.693"/>
</kw>
<status status="PASS" starttime="20250617 21:33:02.772" endtime="20250617 21:33:04.693"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:04.696" level="INFO">Running command 'ozone sh key put /20118-volume-for-prepare/20118-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:07.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:07.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:33:04.693" endtime="20250617 21:33:07.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:07.670" level="INFO"/>
<status status="PASS" starttime="20250617 21:33:07.670" endtime="20250617 21:33:07.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:07.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:07.670" endtime="20250617 21:33:07.670"/>
</kw>
<status status="PASS" starttime="20250617 21:33:04.693" endtime="20250617 21:33:07.671"/>
</kw>
<msg timestamp="20250617 21:33:07.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:04.693" endtime="20250617 21:33:07.671"/>
</kw>
<status status="PASS" starttime="20250617 21:33:04.693" endtime="20250617 21:33:07.671"/>
</kw>
<status status="PASS" starttime="20250617 21:32:54.349" endtime="20250617 21:33:07.671"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:07.672" endtime="20250617 21:33:07.672"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:07.675" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:14.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:14.298" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250617 21:33:07.673" endtime="20250617 21:33:14.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:14.299" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250617 21:33:14.299" endtime="20250617 21:33:14.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:14.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:14.299" endtime="20250617 21:33:14.300"/>
</kw>
<status status="PASS" starttime="20250617 21:33:07.673" endtime="20250617 21:33:14.300"/>
</kw>
<msg timestamp="20250617 21:33:14.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:07.672" endtime="20250617 21:33:14.300"/>
</kw>
<msg timestamp="20250617 21:33:14.300" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250617 21:33:07.672" endtime="20250617 21:33:14.300"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:14.301" endtime="20250617 21:33:14.301"/>
</kw>
<status status="PASS" starttime="20250617 21:33:14.300" endtime="20250617 21:33:14.301"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:33:07.671" endtime="20250617 21:33:14.301"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:14.302" endtime="20250617 21:33:14.302"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:14.306" level="INFO">Running command 'ozone sh key info /20118-volume-for-prepare/20118-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:16.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:16.271" level="INFO">${output} = {
  "volumeName" : "20118-volume-for-prepare",
  "bucketName" : "20118-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-06-17T21:33:0...</msg>
<status status="PASS" starttime="20250617 21:33:14.303" endtime="20250617 21:33:16.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:16.272" level="INFO">{
  "volumeName" : "20118-volume-for-prepare",
  "bucketName" : "20118-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-06-17T21:33:06.548Z",
  "modificationTime" : "2025-06-17T21:33:07.322Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 115816896921600204,
    "length" : 15892,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 833,
  "file" : true
}</msg>
<status status="PASS" starttime="20250617 21:33:16.272" endtime="20250617 21:33:16.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:16.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:16.272" endtime="20250617 21:33:16.273"/>
</kw>
<status status="PASS" starttime="20250617 21:33:14.303" endtime="20250617 21:33:16.273"/>
</kw>
<msg timestamp="20250617 21:33:16.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:14.303" endtime="20250617 21:33:16.273"/>
</kw>
<msg timestamp="20250617 21:33:16.273" level="INFO">${result} = {
  "volumeName" : "20118-volume-for-prepare",
  "bucketName" : "20118-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 15892,
  "creationTime" : "2025-06-17T21:33:0...</msg>
<status status="PASS" starttime="20250617 21:33:14.303" endtime="20250617 21:33:16.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:16.273" endtime="20250617 21:33:16.273"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:33:14.302" endtime="20250617 21:33:16.274"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:16.274" endtime="20250617 21:33:16.275"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:16.277" level="INFO">Running command 'ozone sh key put /20118-volume-for-prepare/20118-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:18.086" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:33:18.086" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250617 21:33:16.275" endtime="20250617 21:33:18.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:18.087" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250617 21:33:18.086" endtime="20250617 21:33:18.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:18.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:18.087" endtime="20250617 21:33:18.087"/>
</kw>
<msg timestamp="20250617 21:33:18.088" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250617 21:33:16.275" endtime="20250617 21:33:18.088"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:18.088" endtime="20250617 21:33:18.088"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:18.091" level="INFO">Running command 'ozone sh key info /20118-volume-for-prepare/20118-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:19.986" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:33:19.986" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250617 21:33:18.089" endtime="20250617 21:33:19.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:19.986" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250617 21:33:19.986" endtime="20250617 21:33:19.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:19.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:19.987" endtime="20250617 21:33:19.987"/>
</kw>
<status status="PASS" starttime="20250617 21:33:18.088" endtime="20250617 21:33:19.987"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:33:16.274" endtime="20250617 21:33:19.987"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20250617 21:32:54.304" endtime="20250617 21:33:19.988"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:20.517" endtime="20250617 21:33:20.517"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:33:20.518" level="INFO">${random} = 09550</msg>
<status status="PASS" starttime="20250617 21:33:20.517" endtime="20250617 21:33:20.518"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:33:20.519" level="INFO">${volume_name} = 09550-volume-for-prepare</msg>
<status status="PASS" starttime="20250617 21:33:20.518" endtime="20250617 21:33:20.519"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:20.521" level="INFO">Running command 'ozone sh volume create /09550-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:22.360" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:33:22.360" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250617 21:33:20.519" endtime="20250617 21:33:22.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:22.361" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250617 21:33:22.361" endtime="20250617 21:33:22.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:22.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:22.361" endtime="20250617 21:33:22.362"/>
</kw>
<msg timestamp="20250617 21:33:22.362" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250617 21:33:20.519" endtime="20250617 21:33:22.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:22.362" endtime="20250617 21:33:22.362"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:22.365" level="INFO">Running command 'ozone sh volume info /09550-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:24.116" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:33:24.116" level="INFO">${output} = VOLUME_NOT_FOUND Volume 09550-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250617 21:33:22.363" endtime="20250617 21:33:24.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:24.117" level="INFO">VOLUME_NOT_FOUND Volume 09550-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250617 21:33:24.116" endtime="20250617 21:33:24.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:24.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:24.117" endtime="20250617 21:33:24.117"/>
</kw>
<msg timestamp="20250617 21:33:24.117" level="INFO">${result} = VOLUME_NOT_FOUND Volume 09550-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250617 21:33:22.362" endtime="20250617 21:33:24.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:33:24.117" endtime="20250617 21:33:24.118"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:33:20.516" endtime="20250617 21:33:24.118"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:33:24.119" endtime="20250617 21:33:24.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:33:24.122" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:33:26.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:33:26.097" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "17484-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20250617 21:33:24.120" endtime="20250617 21:33:26.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:33:26.098" level="INFO">[ {
  "metadata" : { },
  "name" : "17484-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-06-17T21:32:25.534Z",
  "modificationTime" : "2025-06-17T21:32:25.534Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "20118-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-06-17T21:33:02.740Z",
  "modificationTime" : "2025-06-17T21:33:02.740Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "70708-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-06-17T21:32:46.946Z",
  "modificationTime" : "2025-06-17T21:32:46.946Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-06-17T21:31:59.879Z",
  "modificationTime" : "2025-06-17T21:31:59.879Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-06-17T21:32:17.211Z",
  "modificationTime" : "2025-06-17T21:32:17.211Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20250617 21:33:26.098" endtime="20250617 21:33:26.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:33:26.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:33:26.098" endtime="20250617 21:33:26.099"/>
</kw>
<status status="PASS" starttime="20250617 21:33:24.119" endtime="20250617 21:33:26.099"/>
</kw>
<msg timestamp="20250617 21:33:26.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:33:24.119" endtime="20250617 21:33:26.099"/>
</kw>
<msg timestamp="20250617 21:33:26.099" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "17484-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20250617 21:33:24.119" endtime="20250617 21:33:26.099"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:33:24.118" endtime="20250617 21:33:26.099"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20250617 21:33:20.483" endtime="20250617 21:33:26.100"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:34:12.760" endtime="20250617 21:34:12.761"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:34:12.761" level="INFO">${random} = 62383</msg>
<status status="PASS" starttime="20250617 21:34:12.761" endtime="20250617 21:34:12.761"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250617 21:34:12.762" level="INFO">${volume_name} = 62383-volume-for-prepare</msg>
<status status="PASS" starttime="20250617 21:34:12.761" endtime="20250617 21:34:12.762"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:12.764" level="INFO">Running command 'ozone sh volume create /62383-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:14.751" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:34:14.751" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250617 21:34:12.762" endtime="20250617 21:34:14.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:14.752" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250617 21:34:14.752" endtime="20250617 21:34:14.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:14.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:14.752" endtime="20250617 21:34:14.753"/>
</kw>
<msg timestamp="20250617 21:34:14.753" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250617 21:34:12.762" endtime="20250617 21:34:14.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:34:14.753" endtime="20250617 21:34:14.753"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:14.756" level="INFO">Running command 'ozone sh volume info /62383-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:16.506" level="INFO">${rc} = 255</msg>
<msg timestamp="20250617 21:34:16.506" level="INFO">${output} = VOLUME_NOT_FOUND Volume 62383-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250617 21:34:14.754" endtime="20250617 21:34:16.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:16.507" level="INFO">VOLUME_NOT_FOUND Volume 62383-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250617 21:34:16.506" endtime="20250617 21:34:16.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:16.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:16.507" endtime="20250617 21:34:16.507"/>
</kw>
<msg timestamp="20250617 21:34:16.508" level="INFO">${result} = VOLUME_NOT_FOUND Volume 62383-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250617 21:34:14.753" endtime="20250617 21:34:16.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:34:16.508" endtime="20250617 21:34:16.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:34:12.760" endtime="20250617 21:34:16.508"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250617 21:34:16.509" endtime="20250617 21:34:16.509"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:34:16.512" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:34:18.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:34:18.488" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "17484-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20250617 21:34:16.510" endtime="20250617 21:34:18.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:34:18.489" level="INFO">[ {
  "metadata" : { },
  "name" : "17484-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-06-17T21:32:25.534Z",
  "modificationTime" : "2025-06-17T21:32:25.534Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "20118-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-06-17T21:33:02.740Z",
  "modificationTime" : "2025-06-17T21:33:02.740Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "70708-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-06-17T21:32:46.946Z",
  "modificationTime" : "2025-06-17T21:32:46.946Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-06-17T21:31:59.879Z",
  "modificationTime" : "2025-06-17T21:31:59.879Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-06-17T21:32:17.211Z",
  "modificationTime" : "2025-06-17T21:32:17.211Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ],
    "aclSet" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ],
    "aclSet" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20250617 21:34:18.488" endtime="20250617 21:34:18.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:34:18.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:34:18.489" endtime="20250617 21:34:18.489"/>
</kw>
<status status="PASS" starttime="20250617 21:34:16.510" endtime="20250617 21:34:18.489"/>
</kw>
<msg timestamp="20250617 21:34:18.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:34:16.509" endtime="20250617 21:34:18.489"/>
</kw>
<msg timestamp="20250617 21:34:18.489" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "17484-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20250617 21:34:16.509" endtime="20250617 21:34:18.489"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:34:16.508" endtime="20250617 21:34:18.490"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20250617 21:34:12.726" endtime="20250617 21:34:18.490"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:01.586" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:03.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:03.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:35:01.583" endtime="20250617 21:35:03.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:03.642" level="INFO"/>
<status status="PASS" starttime="20250617 21:35:03.641" endtime="20250617 21:35:03.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:03.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:03.642" endtime="20250617 21:35:03.649"/>
</kw>
<status status="PASS" starttime="20250617 21:35:01.583" endtime="20250617 21:35:03.649"/>
</kw>
<msg timestamp="20250617 21:35:03.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:01.583" endtime="20250617 21:35:03.649"/>
</kw>
<msg timestamp="20250617 21:35:03.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:35:01.582" endtime="20250617 21:35:03.649"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:35:03.650" endtime="20250617 21:35:03.650"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:03.656" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:05.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:05.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:35:03.651" endtime="20250617 21:35:05.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:05.566" level="INFO"/>
<status status="PASS" starttime="20250617 21:35:05.566" endtime="20250617 21:35:05.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:05.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:05.566" endtime="20250617 21:35:05.567"/>
</kw>
<status status="PASS" starttime="20250617 21:35:03.651" endtime="20250617 21:35:05.567"/>
</kw>
<msg timestamp="20250617 21:35:05.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:03.651" endtime="20250617 21:35:05.567"/>
</kw>
<msg timestamp="20250617 21:35:05.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:35:03.650" endtime="20250617 21:35:05.567"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:35:05.567" endtime="20250617 21:35:05.568"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:05.571" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:08.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:08.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:35:05.569" endtime="20250617 21:35:08.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:08.839" level="INFO"/>
<status status="PASS" starttime="20250617 21:35:08.839" endtime="20250617 21:35:08.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:08.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:08.840" endtime="20250617 21:35:08.840"/>
</kw>
<status status="PASS" starttime="20250617 21:35:05.568" endtime="20250617 21:35:08.840"/>
</kw>
<msg timestamp="20250617 21:35:08.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:05.568" endtime="20250617 21:35:08.840"/>
</kw>
<msg timestamp="20250617 21:35:08.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:35:05.568" endtime="20250617 21:35:08.840"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:35:08.840" endtime="20250617 21:35:08.841"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:35:01.582" endtime="20250617 21:35:08.841"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250617 21:35:01.548" endtime="20250617 21:35:08.841"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250617 21:35:09.383" level="INFO">${random} = 46724</msg>
<status status="PASS" starttime="20250617 21:35:09.383" endtime="20250617 21:35:09.383"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250617 21:35:09.386" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-46724 2&gt;&amp;1'.</msg>
<msg timestamp="20250617 21:35:12.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20250617 21:35:12.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:35:09.384" endtime="20250617 21:35:12.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250617 21:35:12.380" level="INFO"/>
<status status="PASS" starttime="20250617 21:35:12.379" endtime="20250617 21:35:12.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250617 21:35:12.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250617 21:35:12.380" endtime="20250617 21:35:12.380"/>
</kw>
<status status="PASS" starttime="20250617 21:35:09.384" endtime="20250617 21:35:12.380"/>
</kw>
<msg timestamp="20250617 21:35:12.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250617 21:35:09.384" endtime="20250617 21:35:12.381"/>
</kw>
<msg timestamp="20250617 21:35:12.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250617 21:35:09.383" endtime="20250617 21:35:12.381"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250617 21:35:12.381" endtime="20250617 21:35:12.381"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250617 21:35:09.382" endtime="20250617 21:35:12.381"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250617 21:35:09.349" endtime="20250617 21:35:12.382"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="85659"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
