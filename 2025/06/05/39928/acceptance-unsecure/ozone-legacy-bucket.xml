<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250605 02:37:34.595" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:35.512" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:35.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:35.527" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250605 02:36:35.507" endtime="20250605 02:36:35.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:35.528" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250605 02:36:35.527" endtime="20250605 02:36:35.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:35.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:35.528" endtime="20250605 02:36:35.531"/>
</kw>
<status status="PASS" starttime="20250605 02:36:35.506" endtime="20250605 02:36:35.531"/>
</kw>
<msg timestamp="20250605 02:36:35.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:35.506" endtime="20250605 02:36:35.532"/>
</kw>
<status status="PASS" starttime="20250605 02:36:35.505" endtime="20250605 02:36:35.532"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:36:35.532" endtime="20250605 02:36:35.533"/>
</kw>
<status status="PASS" starttime="20250605 02:36:35.532" endtime="20250605 02:36:35.533"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250605 02:36:35.535" level="INFO">${random} = ihajw</msg>
<status status="PASS" starttime="20250605 02:36:35.533" endtime="20250605 02:36:35.535"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250605 02:36:35.536" level="INFO">${VOLUME} = vol-ihajw</msg>
<status status="PASS" starttime="20250605 02:36:35.536" endtime="20250605 02:36:35.536"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:35.547" level="INFO">Running command 'ozone sh volume create /vol-ihajw 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:44.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:44.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250605 02:36:35.540" endtime="20250605 02:36:44.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:44.947" level="INFO"/>
<status status="PASS" starttime="20250605 02:36:44.946" endtime="20250605 02:36:44.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:44.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:44.947" endtime="20250605 02:36:44.947"/>
</kw>
<status status="PASS" starttime="20250605 02:36:35.538" endtime="20250605 02:36:44.947"/>
</kw>
<msg timestamp="20250605 02:36:44.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:35.537" endtime="20250605 02:36:44.947"/>
</kw>
<msg timestamp="20250605 02:36:44.947" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250605 02:36:35.536" endtime="20250605 02:36:44.947"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:44.947" endtime="20250605 02:36:44.948"/>
</kw>
<status status="PASS" starttime="20250605 02:36:35.533" endtime="20250605 02:36:44.948"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:36:35.504" endtime="20250605 02:36:44.948"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250605 02:36:44.949" level="INFO">${random} = pvmli</msg>
<status status="PASS" starttime="20250605 02:36:44.949" endtime="20250605 02:36:44.949"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250605 02:36:44.950" level="INFO">${BUCKET} = buc-pvmli</msg>
<status status="PASS" starttime="20250605 02:36:44.950" endtime="20250605 02:36:44.950"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:44.953" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-ihajw/buc-pvmli 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:47.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:47.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250605 02:36:44.951" endtime="20250605 02:36:47.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:47.677" level="INFO"/>
<status status="PASS" starttime="20250605 02:36:47.677" endtime="20250605 02:36:47.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:47.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:47.677" endtime="20250605 02:36:47.678"/>
</kw>
<status status="PASS" starttime="20250605 02:36:44.950" endtime="20250605 02:36:47.678"/>
</kw>
<msg timestamp="20250605 02:36:47.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:44.950" endtime="20250605 02:36:47.678"/>
</kw>
<msg timestamp="20250605 02:36:47.678" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250605 02:36:44.950" endtime="20250605 02:36:47.678"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:47.678" endtime="20250605 02:36:47.678"/>
</kw>
<status status="PASS" starttime="20250605 02:36:44.949" endtime="20250605 02:36:47.679"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:36:44.948" endtime="20250605 02:36:47.679"/>
</test>
<test id="s1-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:47.683" level="INFO">Running command 'ozone sh key put /vol-ihajw/buc-pvmli/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:52.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:52.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250605 02:36:47.681" endtime="20250605 02:36:52.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:52.956" level="INFO"/>
<status status="PASS" starttime="20250605 02:36:52.955" endtime="20250605 02:36:52.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:52.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:52.956" endtime="20250605 02:36:52.956"/>
</kw>
<status status="PASS" starttime="20250605 02:36:47.681" endtime="20250605 02:36:52.956"/>
</kw>
<msg timestamp="20250605 02:36:52.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:47.680" endtime="20250605 02:36:52.956"/>
</kw>
<msg timestamp="20250605 02:36:52.957" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250605 02:36:47.680" endtime="20250605 02:36:52.957"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:52.957" endtime="20250605 02:36:52.957"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:52.960" level="INFO">Running command 'ozone sh key put /vol-ihajw/buc-pvmli/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250605 02:36:52.958" endtime="20250605 02:36:57.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.111" level="INFO"/>
<status status="PASS" starttime="20250605 02:36:57.110" endtime="20250605 02:36:57.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.111" endtime="20250605 02:36:57.111"/>
</kw>
<status status="PASS" starttime="20250605 02:36:52.958" endtime="20250605 02:36:57.111"/>
</kw>
<msg timestamp="20250605 02:36:57.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:52.957" endtime="20250605 02:36:57.112"/>
</kw>
<msg timestamp="20250605 02:36:57.112" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250605 02:36:52.957" endtime="20250605 02:36:57.112"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.112" endtime="20250605 02:36:57.112"/>
</kw>
<status status="PASS" starttime="20250605 02:36:47.680" endtime="20250605 02:36:57.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:36:47.679" endtime="20250605 02:36:57.112"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.116" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.121" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250605 02:36:57.114" endtime="20250605 02:36:57.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.121" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250605 02:36:57.121" endtime="20250605 02:36:57.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.122" endtime="20250605 02:36:57.122"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.114" endtime="20250605 02:36:57.122"/>
</kw>
<msg timestamp="20250605 02:36:57.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.114" endtime="20250605 02:36:57.122"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.114" endtime="20250605 02:36:57.122"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.126" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.240" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.124" endtime="20250605 02:36:57.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.241" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.240" endtime="20250605 02:36:57.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.241" endtime="20250605 02:36:57.241"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.123" endtime="20250605 02:36:57.242"/>
</kw>
<msg timestamp="20250605 02:36:57.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.123" endtime="20250605 02:36:57.242"/>
</kw>
<msg timestamp="20250605 02:36:57.242" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.123" endtime="20250605 02:36:57.242"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.243" endtime="20250605 02:36:57.243"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.242" endtime="20250605 02:36:57.243"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.243" endtime="20250605 02:36:57.243"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.243" endtime="20250605 02:36:57.243"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.242" endtime="20250605 02:36:57.243"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.122" endtime="20250605 02:36:57.244"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:36:57.244" endtime="20250605 02:36:57.244"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.244" endtime="20250605 02:36:57.244"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.249" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.259" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.246" endtime="20250605 02:36:57.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.260" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.260" endtime="20250605 02:36:57.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.260" endtime="20250605 02:36:57.261"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.246" endtime="20250605 02:36:57.261"/>
</kw>
<msg timestamp="20250605 02:36:57.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.245" endtime="20250605 02:36:57.261"/>
</kw>
<msg timestamp="20250605 02:36:57.261" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.245" endtime="20250605 02:36:57.261"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.261" endtime="20250605 02:36:57.261"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.261" endtime="20250605 02:36:57.261"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.261" endtime="20250605 02:36:57.262"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.261" endtime="20250605 02:36:57.262"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.261" endtime="20250605 02:36:57.262"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.245" endtime="20250605 02:36:57.262"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:36:57.262" endtime="20250605 02:36:57.262"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.262" endtime="20250605 02:36:57.262"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.265" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.274" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.264" endtime="20250605 02:36:57.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.275" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.274" endtime="20250605 02:36:57.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.275" endtime="20250605 02:36:57.275"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.263" endtime="20250605 02:36:57.275"/>
</kw>
<msg timestamp="20250605 02:36:57.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.263" endtime="20250605 02:36:57.275"/>
</kw>
<msg timestamp="20250605 02:36:57.275" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.263" endtime="20250605 02:36:57.275"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.276" endtime="20250605 02:36:57.276"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.276" endtime="20250605 02:36:57.276"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.276" endtime="20250605 02:36:57.276"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.276" endtime="20250605 02:36:57.276"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.275" endtime="20250605 02:36:57.276"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.262" endtime="20250605 02:36:57.276"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:36:57.277" endtime="20250605 02:36:57.277"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.276" endtime="20250605 02:36:57.277"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.280" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.288" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.278" endtime="20250605 02:36:57.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.289" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.289" endtime="20250605 02:36:57.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.289" endtime="20250605 02:36:57.290"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.278" endtime="20250605 02:36:57.290"/>
</kw>
<msg timestamp="20250605 02:36:57.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.278" endtime="20250605 02:36:57.290"/>
</kw>
<msg timestamp="20250605 02:36:57.290" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.277" endtime="20250605 02:36:57.290"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.290" endtime="20250605 02:36:57.290"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.290" endtime="20250605 02:36:57.290"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.290" endtime="20250605 02:36:57.291"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.290" endtime="20250605 02:36:57.291"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.290" endtime="20250605 02:36:57.291"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.277" endtime="20250605 02:36:57.291"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.113" endtime="20250605 02:36:57.291"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:36:57.113" endtime="20250605 02:36:57.291"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.295" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.299" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250605 02:36:57.293" endtime="20250605 02:36:57.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.299" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250605 02:36:57.299" endtime="20250605 02:36:57.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.299" endtime="20250605 02:36:57.300"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.292" endtime="20250605 02:36:57.300"/>
</kw>
<msg timestamp="20250605 02:36:57.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.292" endtime="20250605 02:36:57.300"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.292" endtime="20250605 02:36:57.300"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.303" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.318" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.301" endtime="20250605 02:36:57.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.319" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.318" endtime="20250605 02:36:57.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.319" endtime="20250605 02:36:57.319"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.301" endtime="20250605 02:36:57.319"/>
</kw>
<msg timestamp="20250605 02:36:57.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.301" endtime="20250605 02:36:57.319"/>
</kw>
<msg timestamp="20250605 02:36:57.320" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.300" endtime="20250605 02:36:57.320"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.320" endtime="20250605 02:36:57.320"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.320" endtime="20250605 02:36:57.320"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.320" endtime="20250605 02:36:57.320"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.320" endtime="20250605 02:36:57.320"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.320" endtime="20250605 02:36:57.320"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.300" endtime="20250605 02:36:57.320"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:36:57.321" endtime="20250605 02:36:57.321"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.321" endtime="20250605 02:36:57.321"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.325" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.334" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.323" endtime="20250605 02:36:57.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.334" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.334" endtime="20250605 02:36:57.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.334" endtime="20250605 02:36:57.335"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.322" endtime="20250605 02:36:57.335"/>
</kw>
<msg timestamp="20250605 02:36:57.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.322" endtime="20250605 02:36:57.335"/>
</kw>
<msg timestamp="20250605 02:36:57.335" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.322" endtime="20250605 02:36:57.335"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.335" endtime="20250605 02:36:57.335"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.335" endtime="20250605 02:36:57.335"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.336" endtime="20250605 02:36:57.336"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.335" endtime="20250605 02:36:57.336"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.335" endtime="20250605 02:36:57.336"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.321" endtime="20250605 02:36:57.336"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:36:57.336" endtime="20250605 02:36:57.337"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.336" endtime="20250605 02:36:57.337"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.339" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.347" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.338" endtime="20250605 02:36:57.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.348" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.347" endtime="20250605 02:36:57.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.348" endtime="20250605 02:36:57.348"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.337" endtime="20250605 02:36:57.348"/>
</kw>
<msg timestamp="20250605 02:36:57.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.337" endtime="20250605 02:36:57.348"/>
</kw>
<msg timestamp="20250605 02:36:57.348" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.337" endtime="20250605 02:36:57.348"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.349" endtime="20250605 02:36:57.349"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.349" endtime="20250605 02:36:57.349"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.349" endtime="20250605 02:36:57.349"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.349" endtime="20250605 02:36:57.349"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.349" endtime="20250605 02:36:57.349"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.337" endtime="20250605 02:36:57.349"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:36:57.350" endtime="20250605 02:36:57.350"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.349" endtime="20250605 02:36:57.350"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.353" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.360" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.351" endtime="20250605 02:36:57.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.361" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.361" endtime="20250605 02:36:57.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.361" endtime="20250605 02:36:57.362"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.351" endtime="20250605 02:36:57.362"/>
</kw>
<msg timestamp="20250605 02:36:57.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.350" endtime="20250605 02:36:57.362"/>
</kw>
<msg timestamp="20250605 02:36:57.362" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.350" endtime="20250605 02:36:57.362"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.362" endtime="20250605 02:36:57.362"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.362" endtime="20250605 02:36:57.362"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.363" endtime="20250605 02:36:57.363"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.362" endtime="20250605 02:36:57.363"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.362" endtime="20250605 02:36:57.363"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.350" endtime="20250605 02:36:57.363"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.292" endtime="20250605 02:36:57.363"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:36:57.291" endtime="20250605 02:36:57.363"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.367" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.370" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250605 02:36:57.365" endtime="20250605 02:36:57.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.371" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250605 02:36:57.371" endtime="20250605 02:36:57.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.371" endtime="20250605 02:36:57.372"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.365" endtime="20250605 02:36:57.372"/>
</kw>
<msg timestamp="20250605 02:36:57.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.364" endtime="20250605 02:36:57.372"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.364" endtime="20250605 02:36:57.372"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.375" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.385" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.373" endtime="20250605 02:36:57.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.385" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.385" endtime="20250605 02:36:57.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.385" endtime="20250605 02:36:57.386"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.373" endtime="20250605 02:36:57.386"/>
</kw>
<msg timestamp="20250605 02:36:57.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.373" endtime="20250605 02:36:57.386"/>
</kw>
<msg timestamp="20250605 02:36:57.386" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.372" endtime="20250605 02:36:57.386"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.386" endtime="20250605 02:36:57.386"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.386" endtime="20250605 02:36:57.386"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.387" endtime="20250605 02:36:57.387"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.387" endtime="20250605 02:36:57.387"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.386" endtime="20250605 02:36:57.387"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.372" endtime="20250605 02:36:57.387"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:36:57.387" endtime="20250605 02:36:57.388"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.387" endtime="20250605 02:36:57.388"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.391" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.399" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.389" endtime="20250605 02:36:57.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.399" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.399" endtime="20250605 02:36:57.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.400" endtime="20250605 02:36:57.400"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.388" endtime="20250605 02:36:57.400"/>
</kw>
<msg timestamp="20250605 02:36:57.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.388" endtime="20250605 02:36:57.400"/>
</kw>
<msg timestamp="20250605 02:36:57.400" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.388" endtime="20250605 02:36:57.400"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.401" endtime="20250605 02:36:57.401"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.400" endtime="20250605 02:36:57.401"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.401" endtime="20250605 02:36:57.401"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.401" endtime="20250605 02:36:57.401"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.400" endtime="20250605 02:36:57.401"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.388" endtime="20250605 02:36:57.401"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:36:57.402" endtime="20250605 02:36:57.402"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.401" endtime="20250605 02:36:57.402"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.405" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.412" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.403" endtime="20250605 02:36:57.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.413" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.413" endtime="20250605 02:36:57.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.413" endtime="20250605 02:36:57.414"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.403" endtime="20250605 02:36:57.414"/>
</kw>
<msg timestamp="20250605 02:36:57.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.402" endtime="20250605 02:36:57.414"/>
</kw>
<msg timestamp="20250605 02:36:57.414" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.402" endtime="20250605 02:36:57.414"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.414" endtime="20250605 02:36:57.414"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.414" endtime="20250605 02:36:57.414"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.415" endtime="20250605 02:36:57.415"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.414" endtime="20250605 02:36:57.415"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.414" endtime="20250605 02:36:57.415"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.402" endtime="20250605 02:36:57.415"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:36:57.415" endtime="20250605 02:36:57.415"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.415" endtime="20250605 02:36:57.415"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.418" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.426" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.417" endtime="20250605 02:36:57.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.427" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.427" endtime="20250605 02:36:57.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.427" endtime="20250605 02:36:57.428"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.416" endtime="20250605 02:36:57.428"/>
</kw>
<msg timestamp="20250605 02:36:57.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.416" endtime="20250605 02:36:57.428"/>
</kw>
<msg timestamp="20250605 02:36:57.428" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.416" endtime="20250605 02:36:57.428"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.428" endtime="20250605 02:36:57.428"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.428" endtime="20250605 02:36:57.428"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.428" endtime="20250605 02:36:57.429"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.428" endtime="20250605 02:36:57.429"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.428" endtime="20250605 02:36:57.429"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.416" endtime="20250605 02:36:57.429"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.364" endtime="20250605 02:36:57.429"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:36:57.363" endtime="20250605 02:36:57.429"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.433" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.437" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250605 02:36:57.431" endtime="20250605 02:36:57.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.438" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20250605 02:36:57.437" endtime="20250605 02:36:57.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.438" endtime="20250605 02:36:57.438"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.431" endtime="20250605 02:36:57.438"/>
</kw>
<msg timestamp="20250605 02:36:57.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.430" endtime="20250605 02:36:57.438"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.430" endtime="20250605 02:36:57.438"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.441" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.454" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.439" endtime="20250605 02:36:57.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.455" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.454" endtime="20250605 02:36:57.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.455" endtime="20250605 02:36:57.455"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.439" endtime="20250605 02:36:57.455"/>
</kw>
<msg timestamp="20250605 02:36:57.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.439" endtime="20250605 02:36:57.455"/>
</kw>
<msg timestamp="20250605 02:36:57.456" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.439" endtime="20250605 02:36:57.456"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.456" endtime="20250605 02:36:57.456"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.456" endtime="20250605 02:36:57.456"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.456" endtime="20250605 02:36:57.456"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.456" endtime="20250605 02:36:57.456"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.456" endtime="20250605 02:36:57.456"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.438" endtime="20250605 02:36:57.456"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:36:57.457" endtime="20250605 02:36:57.457"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.456" endtime="20250605 02:36:57.457"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.460" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.468" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.458" endtime="20250605 02:36:57.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.469" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.468" endtime="20250605 02:36:57.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.469" endtime="20250605 02:36:57.469"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.458" endtime="20250605 02:36:57.469"/>
</kw>
<msg timestamp="20250605 02:36:57.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.458" endtime="20250605 02:36:57.470"/>
</kw>
<msg timestamp="20250605 02:36:57.470" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.457" endtime="20250605 02:36:57.470"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.470" endtime="20250605 02:36:57.470"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.470" endtime="20250605 02:36:57.470"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.470" endtime="20250605 02:36:57.470"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.470" endtime="20250605 02:36:57.470"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.470" endtime="20250605 02:36:57.470"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.457" endtime="20250605 02:36:57.470"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:36:57.471" endtime="20250605 02:36:57.471"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.471" endtime="20250605 02:36:57.471"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.474" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.482" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.472" endtime="20250605 02:36:57.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.483" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.482" endtime="20250605 02:36:57.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.483" endtime="20250605 02:36:57.483"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.472" endtime="20250605 02:36:57.483"/>
</kw>
<msg timestamp="20250605 02:36:57.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.472" endtime="20250605 02:36:57.483"/>
</kw>
<msg timestamp="20250605 02:36:57.484" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.471" endtime="20250605 02:36:57.484"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.484" endtime="20250605 02:36:57.484"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.484" endtime="20250605 02:36:57.484"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.484" endtime="20250605 02:36:57.484"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.484" endtime="20250605 02:36:57.484"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.484" endtime="20250605 02:36:57.484"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.471" endtime="20250605 02:36:57.484"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:36:57.485" endtime="20250605 02:36:57.485"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.485" endtime="20250605 02:36:57.485"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.488" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.496" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.486" endtime="20250605 02:36:57.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.496" level="INFO">200</msg>
<status status="PASS" starttime="20250605 02:36:57.496" endtime="20250605 02:36:57.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.496" endtime="20250605 02:36:57.497"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.486" endtime="20250605 02:36:57.497"/>
</kw>
<msg timestamp="20250605 02:36:57.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.486" endtime="20250605 02:36:57.497"/>
</kw>
<msg timestamp="20250605 02:36:57.497" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20250605 02:36:57.485" endtime="20250605 02:36:57.497"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.497" endtime="20250605 02:36:57.497"/>
</kw>
<status status="NOT RUN" starttime="20250605 02:36:57.497" endtime="20250605 02:36:57.498"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:36:57.498" endtime="20250605 02:36:57.498"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.498" endtime="20250605 02:36:57.498"/>
</branch>
<status status="PASS" starttime="20250605 02:36:57.497" endtime="20250605 02:36:57.498"/>
</if>
<status status="PASS" starttime="20250605 02:36:57.485" endtime="20250605 02:36:57.498"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.430" endtime="20250605 02:36:57.498"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:36:57.429" endtime="20250605 02:36:57.498"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:36:57.502" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:36:57.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:36:57.510" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250605 02:36:57.501" endtime="20250605 02:36:57.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:36:57.510" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250605 02:36:57.510" endtime="20250605 02:36:57.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:36:57.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:36:57.510" endtime="20250605 02:36:57.511"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.500" endtime="20250605 02:36:57.511"/>
</kw>
<msg timestamp="20250605 02:36:57.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:36:57.500" endtime="20250605 02:36:57.511"/>
</kw>
<msg timestamp="20250605 02:36:57.511" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250605 02:36:57.500" endtime="20250605 02:36:57.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250605 02:36:57.512" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250605 02:36:57.511" endtime="20250605 02:36:57.512"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:36:57.512" endtime="20250605 02:36:57.512"/>
</kw>
<status status="FAIL" starttime="20250605 02:36:57.500" endtime="20250605 02:36:57.512"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:37:07.516" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:37:07.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:37:07.527" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250605 02:37:07.514" endtime="20250605 02:37:07.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:37:07.527" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250605 02:37:07.527" endtime="20250605 02:37:07.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:37:07.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:37:07.528" endtime="20250605 02:37:07.528"/>
</kw>
<status status="PASS" starttime="20250605 02:37:07.514" endtime="20250605 02:37:07.528"/>
</kw>
<msg timestamp="20250605 02:37:07.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:37:07.514" endtime="20250605 02:37:07.528"/>
</kw>
<msg timestamp="20250605 02:37:07.528" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250605 02:37:07.513" endtime="20250605 02:37:07.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250605 02:37:07.529" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250605 02:37:07.528" endtime="20250605 02:37:07.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:37:07.529" endtime="20250605 02:37:07.529"/>
</kw>
<status status="FAIL" starttime="20250605 02:37:07.513" endtime="20250605 02:37:07.529"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:37:17.533" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:37:17.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:37:17.542" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250605 02:37:17.531" endtime="20250605 02:37:17.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:37:17.543" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250605 02:37:17.543" endtime="20250605 02:37:17.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:37:17.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:37:17.543" endtime="20250605 02:37:17.544"/>
</kw>
<status status="PASS" starttime="20250605 02:37:17.531" endtime="20250605 02:37:17.544"/>
</kw>
<msg timestamp="20250605 02:37:17.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:37:17.530" endtime="20250605 02:37:17.544"/>
</kw>
<msg timestamp="20250605 02:37:17.544" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20250605 02:37:17.530" endtime="20250605 02:37:17.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250605 02:37:17.544" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20250605 02:37:17.544" endtime="20250605 02:37:17.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250605 02:37:17.544" endtime="20250605 02:37:17.545"/>
</kw>
<status status="FAIL" starttime="20250605 02:37:17.529" endtime="20250605 02:37:17.545"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:37:27.549" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:37:27.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:37:27.566" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20250605 02:37:27.547" endtime="20250605 02:37:27.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:37:27.567" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.566" endtime="20250605 02:37:27.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:37:27.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:37:27.567" endtime="20250605 02:37:27.567"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.546" endtime="20250605 02:37:27.567"/>
</kw>
<msg timestamp="20250605 02:37:27.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:37:27.546" endtime="20250605 02:37:27.567"/>
</kw>
<msg timestamp="20250605 02:37:27.567" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20250605 02:37:27.546" endtime="20250605 02:37:27.567"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.568" endtime="20250605 02:37:27.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.568" endtime="20250605 02:37:27.568"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.545" endtime="20250605 02:37:27.568"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.499" endtime="20250605 02:37:27.568"/>
</kw>
<status status="PASS" starttime="20250605 02:36:57.499" endtime="20250605 02:37:27.568"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:36:57.499" endtime="20250605 02:37:27.568"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:37:27.573" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ihajw 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:37:27.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:37:27.602" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ihajw","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250605 02:37:27.571" endtime="20250605 02:37:27.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:37:27.603" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ihajw","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1749091004752,"modificationTime":1749091004752,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-ihajw"},"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.603" endtime="20250605 02:37:27.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:37:27.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:37:27.604" endtime="20250605 02:37:27.604"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.571" endtime="20250605 02:37:27.604"/>
</kw>
<msg timestamp="20250605 02:37:27.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:37:27.571" endtime="20250605 02:37:27.604"/>
</kw>
<msg timestamp="20250605 02:37:27.604" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ihajw","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20250605 02:37:27.570" endtime="20250605 02:37:27.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.604" endtime="20250605 02:37:27.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.605" endtime="20250605 02:37:27.605"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.570" endtime="20250605 02:37:27.605"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.570" endtime="20250605 02:37:27.605"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.569" endtime="20250605 02:37:27.605"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:37:27.569" endtime="20250605 02:37:27.605"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:37:27.610" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ihajw/buc-pvmli 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:37:27.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:37:27.632" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-pvmli","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250605 02:37:27.608" endtime="20250605 02:37:27.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:37:27.632" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-pvmli","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1749091007568,"modificationTime":1749091007568,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-ihajw","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"LEGACY","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.632" endtime="20250605 02:37:27.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:37:27.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:37:27.633" endtime="20250605 02:37:27.633"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.608" endtime="20250605 02:37:27.633"/>
</kw>
<msg timestamp="20250605 02:37:27.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:37:27.608" endtime="20250605 02:37:27.633"/>
</kw>
<msg timestamp="20250605 02:37:27.633" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-pvmli","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20250605 02:37:27.607" endtime="20250605 02:37:27.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.634" endtime="20250605 02:37:27.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.634" endtime="20250605 02:37:27.634"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.607" endtime="20250605 02:37:27.634"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.607" endtime="20250605 02:37:27.634"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.606" endtime="20250605 02:37:27.634"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:37:27.606" endtime="20250605 02:37:27.634"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:37:27.639" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ihajw/buc-pvmli/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:37:27.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:37:27.675" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250605 02:37:27.637" endtime="20250605 02:37:27.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:37:27.676" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1749091010609,"modificationTime":1749091012361,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["READ","LIST"]}],"volumeName":"vol-ihajw","bucketName":"buc-pvmli","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":115816896921600001},"blockCommitSequenceId":2,"replicaIndex":null,"containerID":1,"localID":115816896921600001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"underConstruction":false,"containerID":1,"localID":115816896921600001,"blockCommitSequenceId":2}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"minimumNodes":1,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.676" endtime="20250605 02:37:27.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:37:27.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:37:27.676" endtime="20250605 02:37:27.677"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.637" endtime="20250605 02:37:27.677"/>
</kw>
<msg timestamp="20250605 02:37:27.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:37:27.637" endtime="20250605 02:37:27.677"/>
</kw>
<msg timestamp="20250605 02:37:27.677" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20250605 02:37:27.636" endtime="20250605 02:37:27.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.677" endtime="20250605 02:37:27.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.677" endtime="20250605 02:37:27.678"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.636" endtime="20250605 02:37:27.678"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.636" endtime="20250605 02:37:27.678"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.635" endtime="20250605 02:37:27.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:37:27.635" endtime="20250605 02:37:27.678"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:37:27.683" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ihajw/buc-pvmli/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:37:27.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:37:27.695" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250605 02:37:27.681" endtime="20250605 02:37:27.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:37:27.696" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":[]},"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.695" endtime="20250605 02:37:27.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:37:27.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:37:27.696" endtime="20250605 02:37:27.696"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.681" endtime="20250605 02:37:27.696"/>
</kw>
<msg timestamp="20250605 02:37:27.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:37:27.681" endtime="20250605 02:37:27.697"/>
</kw>
<msg timestamp="20250605 02:37:27.697" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20250605 02:37:27.680" endtime="20250605 02:37:27.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.697" endtime="20250605 02:37:27.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.697" endtime="20250605 02:37:27.697"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.680" endtime="20250605 02:37:27.697"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.680" endtime="20250605 02:37:27.697"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.679" endtime="20250605 02:37:27.697"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.679" endtime="20250605 02:37:27.698"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250605 02:37:27.698" endtime="20250605 02:37:27.698"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:37:27.678" endtime="20250605 02:37:27.698"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:37:27.702" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-ihajw/buc-pvmli&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:37:27.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:37:27.715" level="INFO">${output} = {"status":"OK","path":"/vol-ihajw/buc-pvmli","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ihajw/buc-pvmli/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250605 02:37:27.700" endtime="20250605 02:37:27.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:37:27.716" level="INFO">{"status":"OK","path":"/vol-ihajw/buc-pvmli","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ihajw/buc-pvmli/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20250605 02:37:27.715" endtime="20250605 02:37:27.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:37:27.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:37:27.716" endtime="20250605 02:37:27.716"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.700" endtime="20250605 02:37:27.716"/>
</kw>
<msg timestamp="20250605 02:37:27.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:37:27.700" endtime="20250605 02:37:27.716"/>
</kw>
<msg timestamp="20250605 02:37:27.717" level="INFO">${result} = {"status":"OK","path":"/vol-ihajw/buc-pvmli","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ihajw/buc-pvmli/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20250605 02:37:27.700" endtime="20250605 02:37:27.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.717" endtime="20250605 02:37:27.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.717" endtime="20250605 02:37:27.717"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.699" endtime="20250605 02:37:27.717"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.699" endtime="20250605 02:37:27.717"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.699" endtime="20250605 02:37:27.717"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:37:27.698" endtime="20250605 02:37:27.718"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:37:27.722" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ihajw 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:37:27.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:37:27.733" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.720" endtime="20250605 02:37:27.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:37:27.733" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.733" endtime="20250605 02:37:27.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:37:27.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:37:27.733" endtime="20250605 02:37:27.734"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.720" endtime="20250605 02:37:27.734"/>
</kw>
<msg timestamp="20250605 02:37:27.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:37:27.720" endtime="20250605 02:37:27.734"/>
</kw>
<msg timestamp="20250605 02:37:27.734" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.719" endtime="20250605 02:37:27.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.734" endtime="20250605 02:37:27.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.735" endtime="20250605 02:37:27.735"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.719" endtime="20250605 02:37:27.735"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.719" endtime="20250605 02:37:27.735"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.718" endtime="20250605 02:37:27.735"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:37:27.718" endtime="20250605 02:37:27.735"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:37:27.739" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ihajw/buc-pvmli 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:37:27.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:37:27.749" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.737" endtime="20250605 02:37:27.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:37:27.749" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.749" endtime="20250605 02:37:27.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:37:27.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:37:27.749" endtime="20250605 02:37:27.750"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.737" endtime="20250605 02:37:27.750"/>
</kw>
<msg timestamp="20250605 02:37:27.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:37:27.737" endtime="20250605 02:37:27.750"/>
</kw>
<msg timestamp="20250605 02:37:27.750" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.737" endtime="20250605 02:37:27.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.750" endtime="20250605 02:37:27.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.751" endtime="20250605 02:37:27.751"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.736" endtime="20250605 02:37:27.751"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.736" endtime="20250605 02:37:27.751"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.736" endtime="20250605 02:37:27.751"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:37:27.735" endtime="20250605 02:37:27.751"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250605 02:37:27.756" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250605 02:37:27.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20250605 02:37:27.765" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.754" endtime="20250605 02:37:27.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250605 02:37:27.766" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.766" endtime="20250605 02:37:27.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250605 02:37:27.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250605 02:37:27.767" endtime="20250605 02:37:27.767"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.753" endtime="20250605 02:37:27.767"/>
</kw>
<msg timestamp="20250605 02:37:27.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250605 02:37:27.753" endtime="20250605 02:37:27.767"/>
</kw>
<msg timestamp="20250605 02:37:27.767" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20250605 02:37:27.753" endtime="20250605 02:37:27.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.767" endtime="20250605 02:37:27.768"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250605 02:37:27.768" endtime="20250605 02:37:27.768"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.753" endtime="20250605 02:37:27.768"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.752" endtime="20250605 02:37:27.768"/>
</kw>
<status status="PASS" starttime="20250605 02:37:27.752" endtime="20250605 02:37:27.768"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250605 02:37:27.752" endtime="20250605 02:37:27.768"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" starttime="20250605 02:36:35.450" endtime="20250605 02:37:27.769"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
