<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250223 09:48:20.297" rpa="false" schemaversion="4">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:46:31.149" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:46:36.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:46:36.904" level="INFO">${output} = 2025-02-23 09:46:32,175 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:32,333 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:46:31.147" endtime="20250223 09:46:36.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:46:36.905" level="INFO">2025-02-23 09:46:32,175 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:32,333 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:46:32,333 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:46:32,473 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-02-23 09:46:32,534 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:46:33,535 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:46:34,535 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:46:35,451 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-02-23 09:46:35,527 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-02-23 09:46:35,536 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:46:35,685 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:46:36,536 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-23 09:46:36,565 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=815.354404, max=815.354404, mean=815.354404, stddev=0.0, median=815.354404, p75=815.354404, p95=815.354404, p98=815.354404, p99=815.354404, p999=815.354404, mean_rate=0.9807660267952302, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:46:36,565 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2025-02-23 09:46:36,565 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:46:36,565 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250223 09:46:36.905" endtime="20250223 09:46:36.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:46:36.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:46:36.906" endtime="20250223 09:46:36.906"/>
</kw>
<status status="PASS" starttime="20250223 09:46:31.147" endtime="20250223 09:46:36.906"/>
</kw>
<msg timestamp="20250223 09:46:36.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:46:31.147" endtime="20250223 09:46:36.906"/>
</kw>
<msg timestamp="20250223 09:46:36.906" level="INFO">${result} = 2025-02-23 09:46:32,175 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:32,333 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:46:31.147" endtime="20250223 09:46:36.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:46:36.906" endtime="20250223 09:46:36.907"/>
</kw>
<status status="PASS" starttime="20250223 09:46:31.145" endtime="20250223 09:46:36.907"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:46:31.145" endtime="20250223 09:46:36.907"/>
</test>
<test id="s1-s1-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:46:36.912" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:46:40.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:46:40.042" level="INFO">${output} = 2025-02-23 09:46:37,824 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:37,968 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:46:36.910" endtime="20250223 09:46:40.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:46:40.043" level="INFO">2025-02-23 09:46:37,824 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:37,968 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:46:37,968 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:46:38,117 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2025-02-23 09:46:38,167 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:46:39,167 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-23 09:46:40,005 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=77.221742, max=77.221742, mean=77.221742, stddev=0.0, median=77.221742, p75=77.221742, p95=77.221742, p98=77.221742, p99=77.221742, p999=77.221742, mean_rate=0.991758945324026, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:46:40,006 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-23 09:46:40,006 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:46:40,006 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250223 09:46:40.043" endtime="20250223 09:46:40.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:46:40.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:46:40.043" endtime="20250223 09:46:40.044"/>
</kw>
<status status="PASS" starttime="20250223 09:46:36.909" endtime="20250223 09:46:40.044"/>
</kw>
<msg timestamp="20250223 09:46:40.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:46:36.909" endtime="20250223 09:46:40.044"/>
</kw>
<msg timestamp="20250223 09:46:40.044" level="INFO">${result} = 2025-02-23 09:46:37,824 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:37,968 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:46:36.909" endtime="20250223 09:46:40.044"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:46:40.044" endtime="20250223 09:46:40.045"/>
</kw>
<status status="PASS" starttime="20250223 09:46:36.908" endtime="20250223 09:46:40.045"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:46:36.907" endtime="20250223 09:46:40.045"/>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:46:40.049" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:46:43.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:46:43.355" level="INFO">${output} = 2025-02-23 09:46:41,101 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:41,237 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:46:40.047" endtime="20250223 09:46:43.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:46:43.356" level="INFO">2025-02-23 09:46:41,101 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:41,237 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:46:41,237 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:46:41,383 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2025-02-23 09:46:41,439 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:46:42,440 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-23 09:46:43,317 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=11.658639, max=11.658639, mean=11.658639, stddev=0.0, median=11.658639, p75=11.658639, p95=11.658639, p98=11.658639, p99=11.658639, p999=11.658639, mean_rate=0.991892184017544, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:46:43,318 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-23 09:46:43,318 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:46:43,318 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250223 09:46:43.355" endtime="20250223 09:46:43.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:46:43.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:46:43.356" endtime="20250223 09:46:43.356"/>
</kw>
<status status="PASS" starttime="20250223 09:46:40.047" endtime="20250223 09:46:43.356"/>
</kw>
<msg timestamp="20250223 09:46:43.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:46:40.047" endtime="20250223 09:46:43.356"/>
</kw>
<msg timestamp="20250223 09:46:43.356" level="INFO">${result} = 2025-02-23 09:46:41,101 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:41,237 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:46:40.046" endtime="20250223 09:46:43.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:46:43.357" endtime="20250223 09:46:43.357"/>
</kw>
<status status="PASS" starttime="20250223 09:46:40.046" endtime="20250223 09:46:43.357"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:46:40.045" endtime="20250223 09:46:43.357"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250223 09:46:31.114" endtime="20250223 09:46:43.358"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s2-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:46:43.903" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:46:48.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:46:48.051" level="INFO">${output} = 2025-02-23 09:46:44,833 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:44,973 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:46:43.901" endtime="20250223 09:46:48.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:46:48.051" level="INFO">2025-02-23 09:46:44,833 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:44,973 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:46:44,973 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:46:45,138 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-02-23 09:46:45,183 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:46:46,149 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:46:46,184 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:46:47,185 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-23 09:46:47,709 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=21.981447, max=21.981447, mean=21.981447, stddev=0.0, median=21.981447, p75=21.981447, p95=21.981447, p98=21.981447, p99=21.981447, p999=21.981447, mean_rate=0.9867670794794574, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:46:47,710 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-02-23 09:46:47,710 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:46:47,710 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250223 09:46:48.051" endtime="20250223 09:46:48.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:46:48.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:46:48.052" endtime="20250223 09:46:48.052"/>
</kw>
<status status="PASS" starttime="20250223 09:46:43.900" endtime="20250223 09:46:48.052"/>
</kw>
<msg timestamp="20250223 09:46:48.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:46:43.900" endtime="20250223 09:46:48.052"/>
</kw>
<msg timestamp="20250223 09:46:48.052" level="INFO">${result} = 2025-02-23 09:46:44,833 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:44,973 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:46:43.900" endtime="20250223 09:46:48.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:46:48.053" endtime="20250223 09:46:48.053"/>
</kw>
<status status="PASS" starttime="20250223 09:46:43.899" endtime="20250223 09:46:48.053"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:46:43.898" endtime="20250223 09:46:48.053"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250223 09:46:43.867" endtime="20250223 09:46:48.054"/>
</suite>
<suite id="s1-s3" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s3-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:46:48.586" endtime="20250223 09:46:48.586"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:46:48.589" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:46:53.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:46:53.929" level="INFO">${output} = 2025-02-23 09:46:49,531 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:49,673 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:46:48.587" endtime="20250223 09:46:53.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:46:53.930" level="INFO">2025-02-23 09:46:49,531 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:49,673 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:46:49,673 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:46:50,230 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-02-23 09:46:50,535 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-02-23 09:46:50,568 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-23 09:46:50,614 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:46:51,569 [Thread-4] INFO freon.ProgressBar: Progress: 8.00 % (8 out of 100)
2025-02-23 09:46:52,570 [Thread-4] INFO freon.ProgressBar: Progress: 99.00 % (99 out of 100)
2025-02-23 09:46:53,570 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-23 09:46:53,589 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=6.76295, max=643.360612, mean=17.794783492235894, stddev=62.73158130131144, median=10.760008, p75=12.983634, p95=16.639659, p98=31.438988, p99=34.535007, p999=643.360612, mean_rate=35.090336064636546, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:46:53,589 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-02-23 09:46:53,589 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:46:53,589 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250223 09:46:53.929" endtime="20250223 09:46:53.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:46:53.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:46:53.930" endtime="20250223 09:46:53.930"/>
</kw>
<status status="PASS" starttime="20250223 09:46:48.587" endtime="20250223 09:46:53.930"/>
</kw>
<msg timestamp="20250223 09:46:53.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:46:48.587" endtime="20250223 09:46:53.930"/>
</kw>
<msg timestamp="20250223 09:46:53.931" level="INFO">${result} = 2025-02-23 09:46:49,531 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:49,673 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:46:48.586" endtime="20250223 09:46:53.931"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:46:53.931" endtime="20250223 09:46:53.931"/>
</kw>
<status status="PASS" starttime="20250223 09:46:48.585" endtime="20250223 09:46:53.931"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:46:48.584" endtime="20250223 09:46:53.931"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250223 09:46:48.553" endtime="20250223 09:46:53.932"/>
</suite>
<suite id="s1-s4" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s4-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:46:54.465" endtime="20250223 09:46:54.465"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:46:54.468" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:46:58.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:46:58.399" level="INFO">${output} = 2025-02-23 09:46:55,402 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:55,548 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:46:54.466" endtime="20250223 09:46:58.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:46:58.400" level="INFO">2025-02-23 09:46:55,402 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:55,548 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:46:55,548 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:46:55,699 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-02-23 09:46:55,765 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-23 09:46:56,194 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-02-23 09:46:56,440 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=123b733c-dd77-4b42-af3d-2f77777231f0
2025-02-23 09:46:56,484 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:46:56,765 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-23 09:46:57,766 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-23 09:46:58,060 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.400659, max=4.67495, mean=2.2363637100000004, stddev=0.6388470058802388, median=2.055998, p75=2.508281, p95=3.539399, p98=4.196715, p99=4.307989, p999=4.67495, mean_rate=98.09341037210488, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:46:58,060 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-23 09:46:58,061 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:46:58,061 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250223 09:46:58.400" endtime="20250223 09:46:58.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:46:58.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:46:58.400" endtime="20250223 09:46:58.401"/>
</kw>
<status status="PASS" starttime="20250223 09:46:54.466" endtime="20250223 09:46:58.401"/>
</kw>
<msg timestamp="20250223 09:46:58.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:46:54.466" endtime="20250223 09:46:58.401"/>
</kw>
<msg timestamp="20250223 09:46:58.401" level="INFO">${result} = 2025-02-23 09:46:55,402 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:46:55,548 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:46:54.465" endtime="20250223 09:46:58.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:46:58.401" endtime="20250223 09:46:58.402"/>
</kw>
<status status="PASS" starttime="20250223 09:46:54.463" endtime="20250223 09:46:58.402"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:46:54.463" endtime="20250223 09:46:58.402"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250223 09:46:54.430" endtime="20250223 09:46:58.402"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s5-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:47:32.697" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:47:43.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:47:43.148" level="INFO">${output} = 2025-02-23 09:47:33,715 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:33,891 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:47:32.695" endtime="20250223 09:47:43.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:47:43.149" level="INFO">2025-02-23 09:47:33,715 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:33,891 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:47:33,891 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:47:34,045 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-02-23 09:47:34,099 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:47:35,100 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:47:36,100 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:47:36,527 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:812)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:233)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:226)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:161)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:127)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:118)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1246)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1169)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:525)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1953)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3198)
, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2025-02-23 09:47:37,101 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:47:38,101 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:47:39,101 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:47:40,102 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:47:41,102 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:47:41,187 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:47:42,103 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-23 09:47:42,807 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=37.455073, max=37.455073, mean=37.455073, stddev=0.0, median=37.455073, p75=37.455073, p95=37.455073, p98=37.455073, p99=37.455073, p999=37.455073, mean_rate=0.9857179882541116, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:47:42,807 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2025-02-23 09:47:42,807 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:47:42,807 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250223 09:47:43.149" endtime="20250223 09:47:43.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:47:43.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:47:43.149" endtime="20250223 09:47:43.150"/>
</kw>
<status status="PASS" starttime="20250223 09:47:32.695" endtime="20250223 09:47:43.150"/>
</kw>
<msg timestamp="20250223 09:47:43.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:47:32.695" endtime="20250223 09:47:43.150"/>
</kw>
<msg timestamp="20250223 09:47:43.150" level="INFO">${result} = 2025-02-23 09:47:33,715 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:33,891 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:47:32.694" endtime="20250223 09:47:43.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:47:43.150" endtime="20250223 09:47:43.151"/>
</kw>
<status status="PASS" starttime="20250223 09:47:32.693" endtime="20250223 09:47:43.151"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:47:32.693" endtime="20250223 09:47:43.151"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250223 09:47:32.660" endtime="20250223 09:47:43.152"/>
</suite>
<suite id="s1-s6" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s6-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:47:43.692" endtime="20250223 09:47:43.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:47:43.696" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:47:47.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:47:47.709" level="INFO">${output} = 2025-02-23 09:47:44,628 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:44,772 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:47:43.693" endtime="20250223 09:47:47.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:47:47.710" level="INFO">2025-02-23 09:47:44,628 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:44,772 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:47:44,772 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:47:44,956 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-02-23 09:47:45,002 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-23 09:47:45,401 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-02-23 09:47:45,666 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=123b733c-dd77-4b42-af3d-2f77777231f0
2025-02-23 09:47:45,709 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:47:46,003 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-23 09:47:47,004 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-23 09:47:47,368 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.526193, max=4.887529, mean=2.2549242699999996, stddev=0.4520644788317669, median=2.209552, p75=2.403662, p95=2.866998, p98=3.402139, p99=3.602774, p999=4.887529, mean_rate=98.05116562402064, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:47:47,369 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-23 09:47:47,369 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:47:47,369 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250223 09:47:47.710" endtime="20250223 09:47:47.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:47:47.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:47:47.710" endtime="20250223 09:47:47.711"/>
</kw>
<status status="PASS" starttime="20250223 09:47:43.693" endtime="20250223 09:47:47.711"/>
</kw>
<msg timestamp="20250223 09:47:47.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:47:43.693" endtime="20250223 09:47:47.711"/>
</kw>
<msg timestamp="20250223 09:47:47.711" level="INFO">${result} = 2025-02-23 09:47:44,628 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:44,772 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:47:43.693" endtime="20250223 09:47:47.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:47:47.711" endtime="20250223 09:47:47.711"/>
</kw>
<status status="PASS" starttime="20250223 09:47:43.691" endtime="20250223 09:47:47.711"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:47:43.690" endtime="20250223 09:47:47.712"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250223 09:47:43.659" endtime="20250223 09:47:47.712"/>
</suite>
<suite id="s1-s7" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:47:48.252" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:47:51.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:47:51.886" level="INFO">${output} = 2025-02-23 09:47:49,186 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:49,322 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:47:48.250" endtime="20250223 09:47:51.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:47:51.887" level="INFO">2025-02-23 09:47:49,186 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:49,322 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:47:49,322 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:47:49,474 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-02-23 09:47:49,523 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:47:50,524 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:47:50,596 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:47:51,524 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-23 09:47:51,544 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=911.407555, max=911.407555, mean=911.407555, stddev=0.0, median=911.407555, p75=911.407555, p95=911.407555, p98=911.407555, p99=911.407555, p999=911.407555, mean_rate=0.8281616707399798, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:47:51,544 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-23 09:47:51,544 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:47:51,544 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250223 09:47:51.886" endtime="20250223 09:47:51.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:47:51.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:47:51.887" endtime="20250223 09:47:51.887"/>
</kw>
<status status="PASS" starttime="20250223 09:47:48.250" endtime="20250223 09:47:51.888"/>
</kw>
<msg timestamp="20250223 09:47:51.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:47:48.250" endtime="20250223 09:47:51.888"/>
</kw>
<msg timestamp="20250223 09:47:51.888" level="INFO">${result} = 2025-02-23 09:47:49,186 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:49,322 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:47:48.249" endtime="20250223 09:47:51.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:47:51.888" endtime="20250223 09:47:51.888"/>
</kw>
<status status="PASS" starttime="20250223 09:47:48.248" endtime="20250223 09:47:51.888"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:47:48.248" endtime="20250223 09:47:51.888"/>
</test>
<test id="s1-s7-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:47:51.893" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:47:55.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:47:55.130" level="INFO">${output} = 2025-02-23 09:47:52,898 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:53,040 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:47:51.891" endtime="20250223 09:47:55.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:47:55.131" level="INFO">2025-02-23 09:47:52,898 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:53,040 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:47:53,040 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:47:53,202 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2025-02-23 09:47:53,254 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:47:54,254 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-23 09:47:55,096 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=55.683873, max=55.683873, mean=55.683873, stddev=0.0, median=55.683873, p75=55.683873, p95=55.683873, p98=55.683873, p99=55.683873, p999=55.683873, mean_rate=0.9902689429930006, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:47:55,097 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-23 09:47:55,097 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:47:55,097 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250223 09:47:55.131" endtime="20250223 09:47:55.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:47:55.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:47:55.132" endtime="20250223 09:47:55.132"/>
</kw>
<status status="PASS" starttime="20250223 09:47:51.891" endtime="20250223 09:47:55.132"/>
</kw>
<msg timestamp="20250223 09:47:55.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:47:51.891" endtime="20250223 09:47:55.132"/>
</kw>
<msg timestamp="20250223 09:47:55.132" level="INFO">${result} = 2025-02-23 09:47:52,898 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:53,040 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:47:51.890" endtime="20250223 09:47:55.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:47:55.133" endtime="20250223 09:47:55.133"/>
</kw>
<status status="PASS" starttime="20250223 09:47:51.889" endtime="20250223 09:47:55.133"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:47:51.889" endtime="20250223 09:47:55.133"/>
</test>
<test id="s1-s7-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:47:55.138" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:47:58.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:47:58.363" level="INFO">${output} = 2025-02-23 09:47:56,140 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:56,282 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:47:55.136" endtime="20250223 09:47:58.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:47:58.364" level="INFO">2025-02-23 09:47:56,140 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:56,282 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:47:56,282 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:47:56,441 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2025-02-23 09:47:56,492 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:47:57,492 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-23 09:47:58,323 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=13.897549, max=13.897549, mean=13.897549, stddev=0.0, median=13.897549, p75=13.897549, p95=13.897549, p98=13.897549, p99=13.897549, p999=13.897549, mean_rate=0.9909912974840653, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:47:58,324 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-23 09:47:58,324 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:47:58,324 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250223 09:47:58.363" endtime="20250223 09:47:58.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:47:58.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:47:58.364" endtime="20250223 09:47:58.365"/>
</kw>
<status status="PASS" starttime="20250223 09:47:55.135" endtime="20250223 09:47:58.365"/>
</kw>
<msg timestamp="20250223 09:47:58.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:47:55.135" endtime="20250223 09:47:58.365"/>
</kw>
<msg timestamp="20250223 09:47:58.365" level="INFO">${result} = 2025-02-23 09:47:56,140 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:47:56,282 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:47:55.135" endtime="20250223 09:47:58.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:47:58.365" endtime="20250223 09:47:58.365"/>
</kw>
<status status="PASS" starttime="20250223 09:47:55.134" endtime="20250223 09:47:58.365"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:47:55.134" endtime="20250223 09:47:58.366"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250223 09:47:48.215" endtime="20250223 09:47:58.366"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s8-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:47:58.917" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:48:03.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:48:03.170" level="INFO">${output} = 2025-02-23 09:47:59,874 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:48:00,090 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:47:58.915" endtime="20250223 09:48:03.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:48:03.171" level="INFO">2025-02-23 09:47:59,874 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:48:00,090 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:48:00,090 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:48:00,253 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-02-23 09:48:00,308 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:48:01,251 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:48:01,309 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:48:02,309 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-23 09:48:02,830 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=20.62351, max=20.62351, mean=20.62351, stddev=0.0, median=20.62351, p75=20.62351, p95=20.62351, p98=20.62351, p99=20.62351, p999=20.62351, mean_rate=0.9856637134916877, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:48:02,830 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-02-23 09:48:02,830 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:48:02,830 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250223 09:48:03.170" endtime="20250223 09:48:03.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:48:03.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:48:03.171" endtime="20250223 09:48:03.171"/>
</kw>
<status status="PASS" starttime="20250223 09:47:58.915" endtime="20250223 09:48:03.171"/>
</kw>
<msg timestamp="20250223 09:48:03.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:47:58.914" endtime="20250223 09:48:03.171"/>
</kw>
<msg timestamp="20250223 09:48:03.172" level="INFO">${result} = 2025-02-23 09:47:59,874 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:48:00,090 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:47:58.914" endtime="20250223 09:48:03.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:48:03.172" endtime="20250223 09:48:03.172"/>
</kw>
<status status="PASS" starttime="20250223 09:47:58.913" endtime="20250223 09:48:03.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:47:58.912" endtime="20250223 09:48:03.172"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250223 09:47:58.878" endtime="20250223 09:48:03.173"/>
</suite>
<suite id="s1-s9" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s9-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:48:03.726" endtime="20250223 09:48:03.726"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:48:03.729" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:48:09.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:48:09.069" level="INFO">${output} = 2025-02-23 09:48:04,696 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:48:04,839 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:48:03.727" endtime="20250223 09:48:09.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:48:09.070" level="INFO">2025-02-23 09:48:04,696 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:48:04,839 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:48:04,839 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:48:05,422 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-02-23 09:48:05,675 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-02-23 09:48:05,708 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-23 09:48:05,757 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:48:06,709 [Thread-4] INFO freon.ProgressBar: Progress: 15.00 % (15 out of 100)
2025-02-23 09:48:07,710 [Thread-4] INFO freon.ProgressBar: Progress: 96.00 % (96 out of 100)
2025-02-23 09:48:08,711 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-23 09:48:08,729 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=7.13393, max=519.845166, mean=17.834490926114196, stddev=50.37262695486818, median=12.218, p75=13.970173, p95=18.173984, p98=25.240936, p99=40.052265, p999=519.845166, mean_rate=35.25501424937342, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:48:08,729 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-02-23 09:48:08,730 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:48:08,730 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250223 09:48:09.070" endtime="20250223 09:48:09.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:48:09.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:48:09.070" endtime="20250223 09:48:09.071"/>
</kw>
<status status="PASS" starttime="20250223 09:48:03.727" endtime="20250223 09:48:09.071"/>
</kw>
<msg timestamp="20250223 09:48:09.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:48:03.727" endtime="20250223 09:48:09.071"/>
</kw>
<msg timestamp="20250223 09:48:09.071" level="INFO">${result} = 2025-02-23 09:48:04,696 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:48:04,839 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:48:03.726" endtime="20250223 09:48:09.071"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:48:09.071" endtime="20250223 09:48:09.072"/>
</kw>
<status status="PASS" starttime="20250223 09:48:03.724" endtime="20250223 09:48:09.072"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:48:03.724" endtime="20250223 09:48:09.072"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250223 09:48:03.693" endtime="20250223 09:48:09.073"/>
</suite>
<suite id="s1-s10" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s10-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:48:09.629" endtime="20250223 09:48:09.629"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:48:09.632" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:48:13.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:48:13.617" level="INFO">${output} = 2025-02-23 09:48:10,595 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:48:10,749 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:48:09.630" endtime="20250223 09:48:13.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:48:13.618" level="INFO">2025-02-23 09:48:10,595 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:48:10,749 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:48:10,749 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:48:10,898 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-02-23 09:48:10,951 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-23 09:48:11,326 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-02-23 09:48:11,559 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=123b733c-dd77-4b42-af3d-2f77777231f0
2025-02-23 09:48:11,602 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:48:11,953 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-23 09:48:12,953 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-23 09:48:13,272 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.379126, max=7.26774, mean=2.629925960000001, stddev=1.3931024253072488, median=2.036959, p75=2.664427, p95=6.143318, p98=6.633073, p99=6.66836, p999=7.26774, mean_rate=97.85386913777799, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:48:13,272 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-23 09:48:13,272 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:48:13,272 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250223 09:48:13.617" endtime="20250223 09:48:13.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:48:13.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:48:13.618" endtime="20250223 09:48:13.618"/>
</kw>
<status status="PASS" starttime="20250223 09:48:09.629" endtime="20250223 09:48:13.619"/>
</kw>
<msg timestamp="20250223 09:48:13.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:48:09.629" endtime="20250223 09:48:13.619"/>
</kw>
<msg timestamp="20250223 09:48:13.619" level="INFO">${result} = 2025-02-23 09:48:10,595 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:48:10,749 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:48:09.629" endtime="20250223 09:48:13.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:48:13.619" endtime="20250223 09:48:13.619"/>
</kw>
<status status="PASS" starttime="20250223 09:48:09.627" endtime="20250223 09:48:13.619"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:48:09.627" endtime="20250223 09:48:13.620"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250223 09:48:09.594" endtime="20250223 09:48:13.620"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="64179"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate-Chunk">restart.Validate-Chunk</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
