<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250223 09:30:13.530" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:17.175" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:27:24.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:27:24.760" level="INFO">${output} = 2025-02-23 09:27:18,072 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:27:18,213 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:27:17.172" endtime="20250223 09:27:24.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:27:24.761" level="INFO">2025-02-23 09:27:18,072 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:27:18,213 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:27:18,213 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:27:18,344 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-02-23 09:27:18,387 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-23 09:27:19,167 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-02-23 09:27:19,273 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-02-23 09:27:19,388 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-23 09:27:19,478 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:27:20,388 [Thread-3] INFO freon.ProgressBar: Progress: 2.00 % (2 out of 100)
2025-02-23 09:27:21,389 [Thread-3] INFO freon.ProgressBar: Progress: 18.00 % (18 out of 100)
2025-02-23 09:27:22,390 [Thread-3] INFO freon.ProgressBar: Progress: 46.00 % (46 out of 100)
2025-02-23 09:27:23,391 [Thread-3] INFO freon.ProgressBar: Progress: 77.00 % (77 out of 100)
2025-02-23 09:27:24,391 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-23 09:27:24,417 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=22.687032, max=840.228619, mean=47.542288381407346, stddev=82.41122993324326, median=35.014296, p75=41.918798, p95=63.168474, p98=172.888843, p99=229.622441, p999=840.228619, mean_rate=19.601903533717067, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:27:24,417 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2025-02-23 09:27:24,417 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:27:24,418 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250223 09:27:24.760" endtime="20250223 09:27:24.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:27:24.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:27:24.761" endtime="20250223 09:27:24.761"/>
</kw>
<status status="PASS" starttime="20250223 09:27:17.172" endtime="20250223 09:27:24.761"/>
</kw>
<msg timestamp="20250223 09:27:24.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:27:17.172" endtime="20250223 09:27:24.761"/>
</kw>
<msg timestamp="20250223 09:27:24.762" level="INFO">${result} = 2025-02-23 09:27:18,072 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:27:18,213 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:27:17.171" endtime="20250223 09:27:24.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:27:24.762" endtime="20250223 09:27:24.762"/>
</kw>
<status status="PASS" starttime="20250223 09:27:17.170" endtime="20250223 09:27:24.762"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250223 09:27:24.762" level="INFO">${random} = 14298</msg>
<status status="PASS" starttime="20250223 09:27:24.762" endtime="20250223 09:27:24.762"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250223 09:27:24.763" level="INFO">${volume_name} = 14298-volume-for-prepare</msg>
<status status="PASS" starttime="20250223 09:27:24.762" endtime="20250223 09:27:24.763"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250223 09:27:24.764" level="INFO">${bucket_name} = 14298-bucket-for-prepare</msg>
<status status="PASS" starttime="20250223 09:27:24.763" endtime="20250223 09:27:24.764"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:24.767" level="INFO">Running command 'ozone sh volume create /14298-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:27:26.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:27:26.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:27:24.765" endtime="20250223 09:27:26.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:27:26.550" level="INFO"/>
<status status="PASS" starttime="20250223 09:27:26.549" endtime="20250223 09:27:26.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:27:26.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:27:26.550" endtime="20250223 09:27:26.550"/>
</kw>
<status status="PASS" starttime="20250223 09:27:24.765" endtime="20250223 09:27:26.551"/>
</kw>
<msg timestamp="20250223 09:27:26.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:27:24.765" endtime="20250223 09:27:26.551"/>
</kw>
<status status="PASS" starttime="20250223 09:27:24.764" endtime="20250223 09:27:26.551"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:26.554" level="INFO">Running command 'ozone sh bucket create /14298-volume-for-prepare/14298-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:27:28.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:27:28.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:27:26.552" endtime="20250223 09:27:28.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:27:28.319" level="INFO"/>
<status status="PASS" starttime="20250223 09:27:28.318" endtime="20250223 09:27:28.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:27:28.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:27:28.319" endtime="20250223 09:27:28.319"/>
</kw>
<status status="PASS" starttime="20250223 09:27:26.551" endtime="20250223 09:27:28.319"/>
</kw>
<msg timestamp="20250223 09:27:28.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:27:26.551" endtime="20250223 09:27:28.319"/>
</kw>
<status status="PASS" starttime="20250223 09:27:26.551" endtime="20250223 09:27:28.319"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:28.322" level="INFO">Running command 'ozone sh key put /14298-volume-for-prepare/14298-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:27:31.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:27:31.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:27:28.320" endtime="20250223 09:27:31.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:27:31.139" level="INFO"/>
<status status="PASS" starttime="20250223 09:27:31.139" endtime="20250223 09:27:31.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:27:31.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:27:31.139" endtime="20250223 09:27:31.139"/>
</kw>
<status status="PASS" starttime="20250223 09:27:28.320" endtime="20250223 09:27:31.139"/>
</kw>
<msg timestamp="20250223 09:27:31.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:27:28.320" endtime="20250223 09:27:31.140"/>
</kw>
<status status="PASS" starttime="20250223 09:27:28.319" endtime="20250223 09:27:31.140"/>
</kw>
<status status="PASS" starttime="20250223 09:27:17.170" endtime="20250223 09:27:31.140"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:27:31.141" endtime="20250223 09:27:31.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:31.144" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:27:37.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:27:37.793" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250223 09:27:31.142" endtime="20250223 09:27:37.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:27:37.794" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250223 09:27:37.793" endtime="20250223 09:27:37.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:27:37.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:27:37.794" endtime="20250223 09:27:37.794"/>
</kw>
<status status="PASS" starttime="20250223 09:27:31.141" endtime="20250223 09:27:37.794"/>
</kw>
<msg timestamp="20250223 09:27:37.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:27:31.141" endtime="20250223 09:27:37.795"/>
</kw>
<msg timestamp="20250223 09:27:37.795" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250223 09:27:31.141" endtime="20250223 09:27:37.795"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:27:37.795" endtime="20250223 09:27:37.795"/>
</kw>
<status status="PASS" starttime="20250223 09:27:37.795" endtime="20250223 09:27:37.795"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:27:31.140" endtime="20250223 09:27:37.796"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:27:37.797" endtime="20250223 09:27:37.797"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:37.800" level="INFO">Running command 'ozone sh key info /14298-volume-for-prepare/14298-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:27:39.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:27:39.812" level="INFO">${output} = {
  "volumeName" : "14298-volume-for-prepare",
  "bucketName" : "14298-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-23T09:27:3...</msg>
<status status="PASS" starttime="20250223 09:27:37.798" endtime="20250223 09:27:39.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:27:39.813" level="INFO">{
  "volumeName" : "14298-volume-for-prepare",
  "bucketName" : "14298-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-23T09:27:30.026Z",
  "modificationTime" : "2025-02-23T09:27:30.790Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 115816896921600101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 411,
  "file" : true
}</msg>
<status status="PASS" starttime="20250223 09:27:39.813" endtime="20250223 09:27:39.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:27:39.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:27:39.813" endtime="20250223 09:27:39.814"/>
</kw>
<status status="PASS" starttime="20250223 09:27:37.797" endtime="20250223 09:27:39.814"/>
</kw>
<msg timestamp="20250223 09:27:39.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:27:37.797" endtime="20250223 09:27:39.814"/>
</kw>
<msg timestamp="20250223 09:27:39.814" level="INFO">${result} = {
  "volumeName" : "14298-volume-for-prepare",
  "bucketName" : "14298-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-23T09:27:3...</msg>
<status status="PASS" starttime="20250223 09:27:37.797" endtime="20250223 09:27:39.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:27:39.814" endtime="20250223 09:27:39.814"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:27:37.796" endtime="20250223 09:27:39.815"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:27:39.815" endtime="20250223 09:27:39.816"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:39.818" level="INFO">Running command 'ozone sh key put /14298-volume-for-prepare/14298-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:27:41.725" level="INFO">${rc} = 255</msg>
<msg timestamp="20250223 09:27:41.725" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250223 09:27:39.816" endtime="20250223 09:27:41.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:27:41.725" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250223 09:27:41.725" endtime="20250223 09:27:41.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:27:41.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:27:41.726" endtime="20250223 09:27:41.726"/>
</kw>
<msg timestamp="20250223 09:27:41.726" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250223 09:27:39.816" endtime="20250223 09:27:41.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:27:41.726" endtime="20250223 09:27:41.726"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:41.729" level="INFO">Running command 'ozone sh key info /14298-volume-for-prepare/14298-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:27:43.431" level="INFO">${rc} = 255</msg>
<msg timestamp="20250223 09:27:43.431" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250223 09:27:41.727" endtime="20250223 09:27:43.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:27:43.432" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250223 09:27:43.431" endtime="20250223 09:27:43.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:27:43.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:27:43.432" endtime="20250223 09:27:43.432"/>
</kw>
<status status="PASS" starttime="20250223 09:27:41.726" endtime="20250223 09:27:43.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:27:39.815" endtime="20250223 09:27:43.433"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20250223 09:27:17.131" endtime="20250223 09:27:43.433"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250223 09:27:43.965" level="INFO">${random} = 50937</msg>
<status status="PASS" starttime="20250223 09:27:43.965" endtime="20250223 09:27:43.965"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250223 09:27:43.967" level="INFO">${volume_name} = 50937-volume-for-cancel</msg>
<status status="PASS" starttime="20250223 09:27:43.965" endtime="20250223 09:27:43.967"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250223 09:27:43.968" level="INFO">${bucket_name} = 50937-bucket-for-cancel</msg>
<status status="PASS" starttime="20250223 09:27:43.967" endtime="20250223 09:27:43.968"/>
</kw>
<status status="PASS" starttime="20250223 09:27:43.965" endtime="20250223 09:27:43.968"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:27:43.969" endtime="20250223 09:27:43.969"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:43.973" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:27:45.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:27:45.640" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250223 09:27:43.970" endtime="20250223 09:27:45.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:27:45.641" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250223 09:27:45.641" endtime="20250223 09:27:45.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:27:45.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:27:45.641" endtime="20250223 09:27:45.642"/>
</kw>
<status status="PASS" starttime="20250223 09:27:43.969" endtime="20250223 09:27:45.642"/>
</kw>
<msg timestamp="20250223 09:27:45.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:27:43.969" endtime="20250223 09:27:45.642"/>
</kw>
<msg timestamp="20250223 09:27:45.642" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250223 09:27:43.969" endtime="20250223 09:27:45.642"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:27:45.643" endtime="20250223 09:27:45.643"/>
</kw>
<status status="PASS" starttime="20250223 09:27:45.642" endtime="20250223 09:27:45.643"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:27:43.968" endtime="20250223 09:27:45.643"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:27:45.644" endtime="20250223 09:27:45.644"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:45.647" level="INFO">Running command 'ozone sh volume create /50937-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:27:47.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:27:47.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:27:45.645" endtime="20250223 09:27:47.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:27:47.349" level="INFO"/>
<status status="PASS" starttime="20250223 09:27:47.348" endtime="20250223 09:27:47.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:27:47.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:27:47.349" endtime="20250223 09:27:47.349"/>
</kw>
<status status="PASS" starttime="20250223 09:27:45.645" endtime="20250223 09:27:47.350"/>
</kw>
<msg timestamp="20250223 09:27:47.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:27:45.644" endtime="20250223 09:27:47.350"/>
</kw>
<status status="PASS" starttime="20250223 09:27:45.644" endtime="20250223 09:27:47.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:47.353" level="INFO">Running command 'ozone sh bucket create /50937-volume-for-cancel/50937-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:27:49.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:27:49.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:27:47.351" endtime="20250223 09:27:49.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:27:49.093" level="INFO"/>
<status status="PASS" starttime="20250223 09:27:49.092" endtime="20250223 09:27:49.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:27:49.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:27:49.093" endtime="20250223 09:27:49.093"/>
</kw>
<status status="PASS" starttime="20250223 09:27:47.351" endtime="20250223 09:27:49.093"/>
</kw>
<msg timestamp="20250223 09:27:49.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:27:47.350" endtime="20250223 09:27:49.093"/>
</kw>
<status status="PASS" starttime="20250223 09:27:47.350" endtime="20250223 09:27:49.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:49.097" level="INFO">Running command 'ozone sh key put /50937-volume-for-cancel/50937-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:27:51.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:27:51.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:27:49.094" endtime="20250223 09:27:51.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:27:51.994" level="INFO"/>
<status status="PASS" starttime="20250223 09:27:51.993" endtime="20250223 09:27:51.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:27:51.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:27:51.994" endtime="20250223 09:27:51.994"/>
</kw>
<status status="PASS" starttime="20250223 09:27:49.094" endtime="20250223 09:27:51.994"/>
</kw>
<msg timestamp="20250223 09:27:51.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:27:49.094" endtime="20250223 09:27:51.995"/>
</kw>
<msg timestamp="20250223 09:27:51.995" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250223 09:27:49.094" endtime="20250223 09:27:51.995"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:51.997" level="INFO">Running command 'ozone sh key info /50937-volume-for-cancel/50937-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:27:53.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:27:53.998" level="INFO">${output} = {
  "volumeName" : "50937-volume-for-cancel",
  "bucketName" : "50937-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-23T09:27:50.8...</msg>
<status status="PASS" starttime="20250223 09:27:51.996" endtime="20250223 09:27:53.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:27:53.999" level="INFO">{
  "volumeName" : "50937-volume-for-cancel",
  "bucketName" : "50937-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-23T09:27:50.883Z",
  "modificationTime" : "2025-02-23T09:27:51.637Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 115816896921600103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 423,
  "file" : true
}</msg>
<status status="PASS" starttime="20250223 09:27:53.999" endtime="20250223 09:27:53.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:27:53.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:27:53.999" endtime="20250223 09:27:54.000"/>
</kw>
<status status="PASS" starttime="20250223 09:27:51.995" endtime="20250223 09:27:54.000"/>
</kw>
<msg timestamp="20250223 09:27:54.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:27:51.995" endtime="20250223 09:27:54.000"/>
</kw>
<msg timestamp="20250223 09:27:54.000" level="INFO">${result} = {
  "volumeName" : "50937-volume-for-cancel",
  "bucketName" : "50937-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-23T09:27:50.8...</msg>
<status status="PASS" starttime="20250223 09:27:51.995" endtime="20250223 09:27:54.000"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:27:54.000" endtime="20250223 09:27:54.000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:27:45.643" endtime="20250223 09:27:54.000"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20250223 09:27:43.920" endtime="20250223 09:27:54.001"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:27:54.540" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:28:01.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:28:01.282" level="INFO">${output} = 2025-02-23 09:27:55,562 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:27:55,702 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:27:54.538" endtime="20250223 09:28:01.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:28:01.283" level="INFO">2025-02-23 09:27:55,562 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:27:55,702 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:27:55,702 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:27:55,853 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-02-23 09:27:55,906 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-23 09:27:56,837 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:27:56,907 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-23 09:27:57,909 [Thread-3] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2025-02-23 09:27:58,909 [Thread-3] INFO freon.ProgressBar: Progress: 48.00 % (48 out of 100)
2025-02-23 09:27:59,911 [Thread-3] INFO freon.ProgressBar: Progress: 85.00 % (85 out of 100)
2025-02-23 09:28:00,913 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-23 09:28:00,940 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=19.973624, max=653.892028, mean=35.65815386227816, stddev=61.71661854624189, median=29.139523, p75=33.269783, p95=37.933948, p98=41.978884, p99=52.127735, p999=653.892028, mean_rate=23.757940083542316, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:28:00,941 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2025-02-23 09:28:00,941 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:28:00,941 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250223 09:28:01.282" endtime="20250223 09:28:01.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:28:01.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:28:01.283" endtime="20250223 09:28:01.283"/>
</kw>
<status status="PASS" starttime="20250223 09:27:54.538" endtime="20250223 09:28:01.283"/>
</kw>
<msg timestamp="20250223 09:28:01.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:27:54.538" endtime="20250223 09:28:01.284"/>
</kw>
<msg timestamp="20250223 09:28:01.284" level="INFO">${result} = 2025-02-23 09:27:55,562 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:27:55,702 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:27:54.538" endtime="20250223 09:28:01.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:28:01.284" endtime="20250223 09:28:01.284"/>
</kw>
<status status="PASS" starttime="20250223 09:27:54.537" endtime="20250223 09:28:01.284"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250223 09:28:01.284" level="INFO">${random} = 64159</msg>
<status status="PASS" starttime="20250223 09:28:01.284" endtime="20250223 09:28:01.285"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250223 09:28:01.285" level="INFO">${volume_name} = 64159-volume-for-prepare</msg>
<status status="PASS" starttime="20250223 09:28:01.285" endtime="20250223 09:28:01.286"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250223 09:28:01.286" level="INFO">${bucket_name} = 64159-bucket-for-prepare</msg>
<status status="PASS" starttime="20250223 09:28:01.286" endtime="20250223 09:28:01.286"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:28:01.289" level="INFO">Running command 'ozone sh volume create /64159-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:28:03.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:28:03.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:28:01.287" endtime="20250223 09:28:03.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:28:03.009" level="INFO"/>
<status status="PASS" starttime="20250223 09:28:03.008" endtime="20250223 09:28:03.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:28:03.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:28:03.009" endtime="20250223 09:28:03.009"/>
</kw>
<status status="PASS" starttime="20250223 09:28:01.287" endtime="20250223 09:28:03.009"/>
</kw>
<msg timestamp="20250223 09:28:03.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:28:01.287" endtime="20250223 09:28:03.010"/>
</kw>
<status status="PASS" starttime="20250223 09:28:01.287" endtime="20250223 09:28:03.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:28:03.013" level="INFO">Running command 'ozone sh bucket create /64159-volume-for-prepare/64159-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:28:04.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:28:04.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:28:03.011" endtime="20250223 09:28:04.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:28:04.806" level="INFO"/>
<status status="PASS" starttime="20250223 09:28:04.806" endtime="20250223 09:28:04.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:28:04.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:28:04.806" endtime="20250223 09:28:04.807"/>
</kw>
<status status="PASS" starttime="20250223 09:28:03.010" endtime="20250223 09:28:04.807"/>
</kw>
<msg timestamp="20250223 09:28:04.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:28:03.010" endtime="20250223 09:28:04.807"/>
</kw>
<status status="PASS" starttime="20250223 09:28:03.010" endtime="20250223 09:28:04.807"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:28:04.810" level="INFO">Running command 'ozone sh key put /64159-volume-for-prepare/64159-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:28:07.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:28:07.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:28:04.808" endtime="20250223 09:28:07.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:28:07.718" level="INFO"/>
<status status="PASS" starttime="20250223 09:28:07.718" endtime="20250223 09:28:07.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:28:07.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:28:07.719" endtime="20250223 09:28:07.719"/>
</kw>
<status status="PASS" starttime="20250223 09:28:04.808" endtime="20250223 09:28:07.719"/>
</kw>
<msg timestamp="20250223 09:28:07.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:28:04.808" endtime="20250223 09:28:07.719"/>
</kw>
<status status="PASS" starttime="20250223 09:28:04.807" endtime="20250223 09:28:07.719"/>
</kw>
<status status="PASS" starttime="20250223 09:27:54.537" endtime="20250223 09:28:07.719"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:28:07.720" endtime="20250223 09:28:07.720"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:28:07.724" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:28:14.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:28:14.409" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250223 09:28:07.721" endtime="20250223 09:28:14.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:28:14.410" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250223 09:28:14.409" endtime="20250223 09:28:14.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:28:14.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:28:14.410" endtime="20250223 09:28:14.410"/>
</kw>
<status status="PASS" starttime="20250223 09:28:07.721" endtime="20250223 09:28:14.410"/>
</kw>
<msg timestamp="20250223 09:28:14.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:28:07.721" endtime="20250223 09:28:14.411"/>
</kw>
<msg timestamp="20250223 09:28:14.411" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250223 09:28:07.720" endtime="20250223 09:28:14.411"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:28:14.411" endtime="20250223 09:28:14.411"/>
</kw>
<status status="PASS" starttime="20250223 09:28:14.411" endtime="20250223 09:28:14.412"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:28:07.720" endtime="20250223 09:28:14.412"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:28:14.413" endtime="20250223 09:28:14.413"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:28:14.416" level="INFO">Running command 'ozone sh key info /64159-volume-for-prepare/64159-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:28:16.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:28:16.429" level="INFO">${output} = {
  "volumeName" : "64159-volume-for-prepare",
  "bucketName" : "64159-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-23T09:28:0...</msg>
<status status="PASS" starttime="20250223 09:28:14.414" endtime="20250223 09:28:16.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:28:16.430" level="INFO">{
  "volumeName" : "64159-volume-for-prepare",
  "bucketName" : "64159-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-23T09:28:06.594Z",
  "modificationTime" : "2025-02-23T09:28:07.372Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 115816896921600204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 833,
  "file" : true
}</msg>
<status status="PASS" starttime="20250223 09:28:16.429" endtime="20250223 09:28:16.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:28:16.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:28:16.430" endtime="20250223 09:28:16.430"/>
</kw>
<status status="PASS" starttime="20250223 09:28:14.413" endtime="20250223 09:28:16.430"/>
</kw>
<msg timestamp="20250223 09:28:16.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:28:14.413" endtime="20250223 09:28:16.430"/>
</kw>
<msg timestamp="20250223 09:28:16.430" level="INFO">${result} = {
  "volumeName" : "64159-volume-for-prepare",
  "bucketName" : "64159-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-23T09:28:0...</msg>
<status status="PASS" starttime="20250223 09:28:14.413" endtime="20250223 09:28:16.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:28:16.430" endtime="20250223 09:28:16.431"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:28:14.412" endtime="20250223 09:28:16.431"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:28:16.432" endtime="20250223 09:28:16.432"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:28:16.434" level="INFO">Running command 'ozone sh key put /64159-volume-for-prepare/64159-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:28:18.204" level="INFO">${rc} = 255</msg>
<msg timestamp="20250223 09:28:18.204" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250223 09:28:16.432" endtime="20250223 09:28:18.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:28:18.205" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250223 09:28:18.204" endtime="20250223 09:28:18.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:28:18.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:28:18.205" endtime="20250223 09:28:18.205"/>
</kw>
<msg timestamp="20250223 09:28:18.206" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250223 09:28:16.432" endtime="20250223 09:28:18.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:28:18.206" endtime="20250223 09:28:18.206"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:28:18.208" level="INFO">Running command 'ozone sh key info /64159-volume-for-prepare/64159-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:28:20.001" level="INFO">${rc} = 255</msg>
<msg timestamp="20250223 09:28:20.001" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250223 09:28:18.206" endtime="20250223 09:28:20.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:28:20.002" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250223 09:28:20.001" endtime="20250223 09:28:20.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:28:20.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:28:20.002" endtime="20250223 09:28:20.002"/>
</kw>
<status status="PASS" starttime="20250223 09:28:18.206" endtime="20250223 09:28:20.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:28:16.431" endtime="20250223 09:28:20.003"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20250223 09:27:54.498" endtime="20250223 09:28:20.004"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:28:20.523" endtime="20250223 09:28:20.523"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250223 09:28:20.523" level="INFO">${random} = 47500</msg>
<status status="PASS" starttime="20250223 09:28:20.523" endtime="20250223 09:28:20.523"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250223 09:28:20.524" level="INFO">${volume_name} = 47500-volume-for-prepare</msg>
<status status="PASS" starttime="20250223 09:28:20.523" endtime="20250223 09:28:20.524"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:28:20.527" level="INFO">Running command 'ozone sh volume create /47500-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:28:22.283" level="INFO">${rc} = 255</msg>
<msg timestamp="20250223 09:28:22.283" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250223 09:28:20.525" endtime="20250223 09:28:22.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:28:22.284" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250223 09:28:22.283" endtime="20250223 09:28:22.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:28:22.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:28:22.284" endtime="20250223 09:28:22.284"/>
</kw>
<msg timestamp="20250223 09:28:22.285" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250223 09:28:20.524" endtime="20250223 09:28:22.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:28:22.285" endtime="20250223 09:28:22.285"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:28:22.288" level="INFO">Running command 'ozone sh volume info /47500-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:28:24.039" level="INFO">${rc} = 255</msg>
<msg timestamp="20250223 09:28:24.039" level="INFO">${output} = VOLUME_NOT_FOUND Volume 47500-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250223 09:28:22.286" endtime="20250223 09:28:24.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:28:24.040" level="INFO">VOLUME_NOT_FOUND Volume 47500-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250223 09:28:24.040" endtime="20250223 09:28:24.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:28:24.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:28:24.041" endtime="20250223 09:28:24.041"/>
</kw>
<msg timestamp="20250223 09:28:24.041" level="INFO">${result} = VOLUME_NOT_FOUND Volume 47500-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250223 09:28:22.285" endtime="20250223 09:28:24.041"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:28:24.041" endtime="20250223 09:28:24.042"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:28:20.522" endtime="20250223 09:28:24.042"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:28:24.043" endtime="20250223 09:28:24.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:28:24.047" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:28:26.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:28:26.023" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "64159-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20250223 09:28:24.044" endtime="20250223 09:28:26.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:28:26.023" level="INFO">[ {
  "metadata" : { },
  "name" : "64159-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-23T09:28:02.990Z",
  "modificationTime" : "2025-02-23T09:28:02.990Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-02-23T09:26:59.114Z",
  "modificationTime" : "2025-02-23T09:26:59.114Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-23T09:27:19.175Z",
  "modificationTime" : "2025-02-23T09:27:19.175Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "14298-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-23T09:27:26.525Z",
  "modificationTime" : "2025-02-23T09:27:26.525Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "50937-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-23T09:27:47.316Z",
  "modificationTime" : "2025-02-23T09:27:47.316Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20250223 09:28:26.023" endtime="20250223 09:28:26.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:28:26.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:28:26.024" endtime="20250223 09:28:26.024"/>
</kw>
<status status="PASS" starttime="20250223 09:28:24.044" endtime="20250223 09:28:26.024"/>
</kw>
<msg timestamp="20250223 09:28:26.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:28:24.044" endtime="20250223 09:28:26.024"/>
</kw>
<msg timestamp="20250223 09:28:26.024" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "64159-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20250223 09:28:24.043" endtime="20250223 09:28:26.024"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:28:24.042" endtime="20250223 09:28:26.024"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20250223 09:28:20.489" endtime="20250223 09:28:26.025"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:29:08.767" endtime="20250223 09:29:08.767"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250223 09:29:08.768" level="INFO">${random} = 57867</msg>
<status status="PASS" starttime="20250223 09:29:08.767" endtime="20250223 09:29:08.768"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250223 09:29:08.768" level="INFO">${volume_name} = 57867-volume-for-prepare</msg>
<status status="PASS" starttime="20250223 09:29:08.768" endtime="20250223 09:29:08.768"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:29:08.771" level="INFO">Running command 'ozone sh volume create /57867-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:29:10.575" level="INFO">${rc} = 255</msg>
<msg timestamp="20250223 09:29:10.576" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250223 09:29:08.769" endtime="20250223 09:29:10.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:29:10.576" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250223 09:29:10.576" endtime="20250223 09:29:10.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:29:10.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:29:10.576" endtime="20250223 09:29:10.577"/>
</kw>
<msg timestamp="20250223 09:29:10.577" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250223 09:29:08.769" endtime="20250223 09:29:10.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:29:10.577" endtime="20250223 09:29:10.577"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:29:10.580" level="INFO">Running command 'ozone sh volume info /57867-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:29:12.269" level="INFO">${rc} = 255</msg>
<msg timestamp="20250223 09:29:12.269" level="INFO">${output} = VOLUME_NOT_FOUND Volume 57867-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250223 09:29:10.578" endtime="20250223 09:29:12.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:29:12.270" level="INFO">VOLUME_NOT_FOUND Volume 57867-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250223 09:29:12.269" endtime="20250223 09:29:12.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:29:12.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:29:12.270" endtime="20250223 09:29:12.270"/>
</kw>
<msg timestamp="20250223 09:29:12.270" level="INFO">${result} = VOLUME_NOT_FOUND Volume 57867-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250223 09:29:10.577" endtime="20250223 09:29:12.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:29:12.270" endtime="20250223 09:29:12.271"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:29:08.766" endtime="20250223 09:29:12.271"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:29:12.272" endtime="20250223 09:29:12.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:29:12.275" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:29:14.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:29:14.211" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "64159-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20250223 09:29:12.273" endtime="20250223 09:29:14.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:29:14.212" level="INFO">[ {
  "metadata" : { },
  "name" : "64159-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-23T09:28:02.990Z",
  "modificationTime" : "2025-02-23T09:28:02.990Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-02-23T09:27:00.405Z",
  "modificationTime" : "2025-02-23T09:27:00.405Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-23T09:27:19.175Z",
  "modificationTime" : "2025-02-23T09:27:19.175Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "14298-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-23T09:27:26.525Z",
  "modificationTime" : "2025-02-23T09:27:26.525Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "50937-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-23T09:27:47.316Z",
  "modificationTime" : "2025-02-23T09:27:47.316Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20250223 09:29:14.211" endtime="20250223 09:29:14.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:29:14.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:29:14.212" endtime="20250223 09:29:14.212"/>
</kw>
<status status="PASS" starttime="20250223 09:29:12.273" endtime="20250223 09:29:14.212"/>
</kw>
<msg timestamp="20250223 09:29:14.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:29:12.272" endtime="20250223 09:29:14.213"/>
</kw>
<msg timestamp="20250223 09:29:14.213" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "64159-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20250223 09:29:12.272" endtime="20250223 09:29:14.213"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:29:12.271" endtime="20250223 09:29:14.213"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20250223 09:29:08.733" endtime="20250223 09:29:14.214"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:29:58.456" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:30:00.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:30:00.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:29:58.454" endtime="20250223 09:30:00.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:30:00.321" level="INFO"/>
<status status="PASS" starttime="20250223 09:30:00.320" endtime="20250223 09:30:00.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:30:00.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:30:00.321" endtime="20250223 09:30:00.321"/>
</kw>
<status status="PASS" starttime="20250223 09:29:58.453" endtime="20250223 09:30:00.321"/>
</kw>
<msg timestamp="20250223 09:30:00.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:29:58.453" endtime="20250223 09:30:00.322"/>
</kw>
<msg timestamp="20250223 09:30:00.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:29:58.453" endtime="20250223 09:30:00.322"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:30:00.322" endtime="20250223 09:30:00.322"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:30:00.326" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:30:02.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:30:02.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:30:00.324" endtime="20250223 09:30:02.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:30:02.154" level="INFO"/>
<status status="PASS" starttime="20250223 09:30:02.154" endtime="20250223 09:30:02.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:30:02.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:30:02.154" endtime="20250223 09:30:02.155"/>
</kw>
<status status="PASS" starttime="20250223 09:30:00.323" endtime="20250223 09:30:02.155"/>
</kw>
<msg timestamp="20250223 09:30:02.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:30:00.323" endtime="20250223 09:30:02.155"/>
</kw>
<msg timestamp="20250223 09:30:02.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:30:00.322" endtime="20250223 09:30:02.155"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:30:02.155" endtime="20250223 09:30:02.155"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:30:02.158" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:30:05.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:30:05.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:30:02.156" endtime="20250223 09:30:05.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:30:05.345" level="INFO"/>
<status status="PASS" starttime="20250223 09:30:05.345" endtime="20250223 09:30:05.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:30:05.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:30:05.346" endtime="20250223 09:30:05.346"/>
</kw>
<status status="PASS" starttime="20250223 09:30:02.156" endtime="20250223 09:30:05.346"/>
</kw>
<msg timestamp="20250223 09:30:05.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:30:02.156" endtime="20250223 09:30:05.346"/>
</kw>
<msg timestamp="20250223 09:30:05.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:30:02.156" endtime="20250223 09:30:05.346"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:30:05.346" endtime="20250223 09:30:05.347"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:29:58.452" endtime="20250223 09:30:05.347"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250223 09:29:58.419" endtime="20250223 09:30:05.348"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250223 09:30:05.877" level="INFO">${random} = 96283</msg>
<status status="PASS" starttime="20250223 09:30:05.877" endtime="20250223 09:30:05.877"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:30:05.880" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-96283 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:30:08.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:30:08.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:30:05.878" endtime="20250223 09:30:08.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:30:08.853" level="INFO"/>
<status status="PASS" starttime="20250223 09:30:08.852" endtime="20250223 09:30:08.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:30:08.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:30:08.853" endtime="20250223 09:30:08.853"/>
</kw>
<status status="PASS" starttime="20250223 09:30:05.878" endtime="20250223 09:30:08.853"/>
</kw>
<msg timestamp="20250223 09:30:08.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:30:05.878" endtime="20250223 09:30:08.853"/>
</kw>
<msg timestamp="20250223 09:30:08.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:30:05.877" endtime="20250223 09:30:08.853"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:30:08.854" endtime="20250223 09:30:08.854"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:30:05.876" endtime="20250223 09:30:08.854"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250223 09:30:05.843" endtime="20250223 09:30:08.855"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="82847"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
