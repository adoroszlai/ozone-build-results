<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250223 09:35:58.314" rpa="false" schemaversion="4">
<suite id="s1" name="ozonescripts">
<suite id="s1-s1" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s1-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:35:09.160" endtime="20250223 09:35:09.160"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250223 09:35:09.161" level="INFO">${random} = M5eLHOJwiE</msg>
<status status="PASS" starttime="20250223 09:35:09.160" endtime="20250223 09:35:09.161"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:09.168" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p M5eLHOJwiE --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:19.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:19.007" level="INFO">${output} = 2025-02-23 09:35:10,291 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:35:10,424 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:35:09.163" endtime="20250223 09:35:19.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:19.008" level="INFO">2025-02-23 09:35:10,291 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:35:10,424 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:35:10,424 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:35:10,568 [main] INFO freon.BaseFreonGenerator: Executing test with prefix M5eLHOJwiE and number-of-tests 1
2025-02-23 09:35:10,617 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:35:11,617 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:35:12,618 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:35:13,100 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:812)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:233)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:226)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:161)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:127)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:118)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1246)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1169)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:525)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1953)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3198)
, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2025-02-23 09:35:13,618 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:35:14,619 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:35:15,619 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:35:16,619 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:35:17,569 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-02-23 09:35:17,620 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:35:17,634 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-02-23 09:35:17,785 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:35:18,620 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-23 09:35:18,669 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=919.785686, max=919.785686, mean=919.785686, stddev=0.0, median=919.785686, p75=919.785686, p95=919.785686, p98=919.785686, p99=919.785686, p999=919.785686, mean_rate=0.9821706464335846, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:35:18,669 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2025-02-23 09:35:18,669 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:35:18,669 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250223 09:35:19.007" endtime="20250223 09:35:19.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:35:19.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:35:19.008" endtime="20250223 09:35:19.008"/>
</kw>
<status status="PASS" starttime="20250223 09:35:09.162" endtime="20250223 09:35:19.008"/>
</kw>
<msg timestamp="20250223 09:35:19.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:35:09.162" endtime="20250223 09:35:19.008"/>
</kw>
<msg timestamp="20250223 09:35:19.009" level="INFO">${result} = 2025-02-23 09:35:10,291 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:35:10,424 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:35:09.162" endtime="20250223 09:35:19.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:35:19.009" endtime="20250223 09:35:19.009"/>
</kw>
<status status="PASS" starttime="20250223 09:35:09.161" endtime="20250223 09:35:19.009"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:19.013" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p M5eLHOJwiE  2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:23.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:23.125" level="INFO">${output} = 2025-02-23 09:35:19,911 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:35:20,040 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:35:19.011" endtime="20250223 09:35:23.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:23.125" level="INFO">2025-02-23 09:35:19,911 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:35:20,040 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-23 09:35:20,040 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-23 09:35:20,182 [main] INFO freon.BaseFreonGenerator: Executing test with prefix M5eLHOJwiE and number-of-tests 1
2025-02-23 09:35:20,231 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:35:21,231 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-23 09:35:21,283 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-23 09:35:22,232 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-23 09:35:22,785 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=17.908046, max=17.908046, mean=17.908046, stddev=0.0, median=17.908046, p75=17.908046, p95=17.908046, p98=17.908046, p99=17.908046, p999=17.908046, mean_rate=0.9860648438667047, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-23 09:35:22,786 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2025-02-23 09:35:22,786 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-23 09:35:22,786 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250223 09:35:23.125" endtime="20250223 09:35:23.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:35:23.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:35:23.126" endtime="20250223 09:35:23.126"/>
</kw>
<status status="PASS" starttime="20250223 09:35:19.011" endtime="20250223 09:35:23.126"/>
</kw>
<msg timestamp="20250223 09:35:23.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:35:19.010" endtime="20250223 09:35:23.126"/>
</kw>
<msg timestamp="20250223 09:35:23.126" level="INFO">${result} = 2025-02-23 09:35:19,911 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-23 09:35:20,040 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250223 09:35:19.010" endtime="20250223 09:35:23.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:35:23.126" endtime="20250223 09:35:23.127"/>
</kw>
<status status="PASS" starttime="20250223 09:35:19.009" endtime="20250223 09:35:23.127"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:35:09.159" endtime="20250223 09:35:23.127"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20250223 09:35:09.102" endtime="20250223 09:35:23.128"/>
</suite>
<suite id="s1-s2" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250223 09:35:23.619" endtime="20250223 09:35:23.619"/>
</kw>
<test id="s1-s2-t1" name="List pipelines" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:23.622" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:25.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:25.060" level="INFO">${output} = Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, ...</msg>
<status status="PASS" starttime="20250223 09:35:23.620" endtime="20250223 09:35:25.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:25.061" level="INFO">Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:3bc4bb71-c92f-490d-80e0-7c5d4c3baade, CreationTimestamp2025-02-23T09:34:55.904Z[UTC]]</msg>
<status status="PASS" starttime="20250223 09:35:25.061" endtime="20250223 09:35:25.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:35:25.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:35:25.061" endtime="20250223 09:35:25.062"/>
</kw>
<status status="PASS" starttime="20250223 09:35:23.620" endtime="20250223 09:35:25.062"/>
</kw>
<msg timestamp="20250223 09:35:25.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:35:23.620" endtime="20250223 09:35:25.062"/>
</kw>
<msg timestamp="20250223 09:35:25.062" level="INFO">${output} = Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, ...</msg>
<status status="PASS" starttime="20250223 09:35:23.620" endtime="20250223 09:35:25.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>RATIS/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:35:25.062" endtime="20250223 09:35:25.063"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>ozone admin pipeline list | grep 'ReplicationConfig: RATIS/ONE' | head -n 1 | cut -d' ' -f3 | sed 's/,$//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:25.065" level="INFO">Running command 'ozone admin pipeline list | grep 'ReplicationConfig: RATIS/ONE' | head -n 1 | cut -d' ' -f3 | sed 's/,$//' 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:26.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:26.493" level="INFO">${output} = a62f9733-0fa3-4d7d-97ab-13ef7b8d8115</msg>
<status status="PASS" starttime="20250223 09:35:25.063" endtime="20250223 09:35:26.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:26.494" level="INFO">a62f9733-0fa3-4d7d-97ab-13ef7b8d8115</msg>
<status status="PASS" starttime="20250223 09:35:26.494" endtime="20250223 09:35:26.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:35:26.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:35:26.494" endtime="20250223 09:35:26.495"/>
</kw>
<status status="PASS" starttime="20250223 09:35:25.063" endtime="20250223 09:35:26.495"/>
</kw>
<msg timestamp="20250223 09:35:26.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:35:25.063" endtime="20250223 09:35:26.495"/>
</kw>
<msg timestamp="20250223 09:35:26.495" level="INFO">${pipeline} = a62f9733-0fa3-4d7d-97ab-13ef7b8d8115</msg>
<status status="PASS" starttime="20250223 09:35:25.063" endtime="20250223 09:35:26.495"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250223 09:35:26.495" level="INFO">${PIPELINE} = a62f9733-0fa3-4d7d-97ab-13ef7b8d8115</msg>
<status status="PASS" starttime="20250223 09:35:26.495" endtime="20250223 09:35:26.495"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:35:23.619" endtime="20250223 09:35:26.495"/>
</test>
<test id="s1-s2-t2" name="List pipeline with json option" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --json | jq 'map(.replicationConfig) | contains([{"replicationFactor": "ONE", "replicationType": "RATIS"}])'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:26.499" level="INFO">Running command 'ozone admin pipeline list --json | jq 'map(.replicationConfig) | contains([{"replicationFactor": "ONE", "replicationType": "RATIS"}])' 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:27.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:27.995" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250223 09:35:26.497" endtime="20250223 09:35:27.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:27.996" level="INFO">true</msg>
<status status="PASS" starttime="20250223 09:35:27.995" endtime="20250223 09:35:27.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:35:27.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:35:27.996" endtime="20250223 09:35:27.996"/>
</kw>
<status status="PASS" starttime="20250223 09:35:26.497" endtime="20250223 09:35:27.997"/>
</kw>
<msg timestamp="20250223 09:35:27.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:35:26.497" endtime="20250223 09:35:27.997"/>
</kw>
<msg timestamp="20250223 09:35:27.997" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250223 09:35:26.496" endtime="20250223 09:35:27.997"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>$output</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250223 09:35:27.997" endtime="20250223 09:35:28.000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:35:26.496" endtime="20250223 09:35:28.000"/>
</test>
<test id="s1-s2-t3" name="List pipelines with explicit host" line="38">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:28.004" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:29.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:29.475" level="INFO">${output} = Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, ...</msg>
<status status="PASS" starttime="20250223 09:35:28.002" endtime="20250223 09:35:29.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:29.476" level="INFO">Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:3bc4bb71-c92f-490d-80e0-7c5d4c3baade, CreationTimestamp2025-02-23T09:34:55.904Z[UTC]]</msg>
<status status="PASS" starttime="20250223 09:35:29.476" endtime="20250223 09:35:29.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:35:29.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:35:29.476" endtime="20250223 09:35:29.477"/>
</kw>
<status status="PASS" starttime="20250223 09:35:28.002" endtime="20250223 09:35:29.477"/>
</kw>
<msg timestamp="20250223 09:35:29.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:35:28.001" endtime="20250223 09:35:29.477"/>
</kw>
<msg timestamp="20250223 09:35:29.477" level="INFO">${output} = Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, ...</msg>
<status status="PASS" starttime="20250223 09:35:28.001" endtime="20250223 09:35:29.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>RATIS/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:35:29.477" endtime="20250223 09:35:29.477"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:35:28.001" endtime="20250223 09:35:29.478"/>
</test>
<test id="s1-s2-t4" name="List pipelines with explicit host and json option" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM} --json | jq 'map(.replicationConfig) | contains([{"replicationFactor": "ONE", "replicationType": "RATIS"}])'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:29.481" level="INFO">Running command 'ozone admin pipeline list --scm scm --json | jq 'map(.replicationConfig) | contains([{"replicationFactor": "ONE", "replicationType": "RATIS"}])' 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:30.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:30.975" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250223 09:35:29.479" endtime="20250223 09:35:30.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:30.976" level="INFO">true</msg>
<status status="PASS" starttime="20250223 09:35:30.976" endtime="20250223 09:35:30.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:35:30.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:35:30.976" endtime="20250223 09:35:30.977"/>
</kw>
<status status="PASS" starttime="20250223 09:35:29.479" endtime="20250223 09:35:30.977"/>
</kw>
<msg timestamp="20250223 09:35:30.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:35:29.479" endtime="20250223 09:35:30.977"/>
</kw>
<msg timestamp="20250223 09:35:30.977" level="INFO">${output} = true</msg>
<status status="PASS" starttime="20250223 09:35:29.478" endtime="20250223 09:35:30.977"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:35:29.478" endtime="20250223 09:35:30.977"/>
</test>
<test id="s1-s2-t5" name="Deactivate pipeline" line="45">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:30.981" level="INFO">Running command 'ozone admin pipeline deactivate "a62f9733-0fa3-4d7d-97ab-13ef7b8d8115" 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:32.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:32.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:35:30.979" endtime="20250223 09:35:32.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:32.427" level="INFO"/>
<status status="PASS" starttime="20250223 09:35:32.427" endtime="20250223 09:35:32.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:35:32.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:35:32.427" endtime="20250223 09:35:32.428"/>
</kw>
<status status="PASS" starttime="20250223 09:35:30.979" endtime="20250223 09:35:32.428"/>
</kw>
<msg timestamp="20250223 09:35:32.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:35:30.979" endtime="20250223 09:35:32.428"/>
</kw>
<status status="PASS" starttime="20250223 09:35:30.978" endtime="20250223 09:35:32.428"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:32.431" level="INFO">Running command 'ozone admin pipeline list | grep "a62f9733-0fa3-4d7d-97ab-13ef7b8d8115" 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:33.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:33.842" level="INFO">${output} = Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, ...</msg>
<status status="PASS" starttime="20250223 09:35:32.429" endtime="20250223 09:35:33.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:33.843" level="INFO">Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, State:DORMANT, leaderId:3bc4bb71-c92f-490d-80e0-7c5d4c3baade, CreationTimestamp2025-02-23T09:34:55.904Z[UTC]]</msg>
<status status="PASS" starttime="20250223 09:35:33.843" endtime="20250223 09:35:33.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:35:33.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:35:33.843" endtime="20250223 09:35:33.844"/>
</kw>
<status status="PASS" starttime="20250223 09:35:32.429" endtime="20250223 09:35:33.844"/>
</kw>
<msg timestamp="20250223 09:35:33.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:35:32.429" endtime="20250223 09:35:33.844"/>
</kw>
<msg timestamp="20250223 09:35:33.844" level="INFO">${output} = Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, ...</msg>
<status status="PASS" starttime="20250223 09:35:32.428" endtime="20250223 09:35:33.844"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:35:33.844" endtime="20250223 09:35:33.844"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:35:30.978" endtime="20250223 09:35:33.844"/>
</test>
<test id="s1-s2-t6" name="Activate pipeline" line="50">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:33.848" level="INFO">Running command 'ozone admin pipeline activate "a62f9733-0fa3-4d7d-97ab-13ef7b8d8115" 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:35.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:35.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:35:33.846" endtime="20250223 09:35:35.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:35.199" level="INFO"/>
<status status="PASS" starttime="20250223 09:35:35.198" endtime="20250223 09:35:35.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:35:35.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:35:35.199" endtime="20250223 09:35:35.199"/>
</kw>
<status status="PASS" starttime="20250223 09:35:33.846" endtime="20250223 09:35:35.199"/>
</kw>
<msg timestamp="20250223 09:35:35.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:35:33.845" endtime="20250223 09:35:35.200"/>
</kw>
<status status="PASS" starttime="20250223 09:35:33.845" endtime="20250223 09:35:35.200"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:35.203" level="INFO">Running command 'ozone admin pipeline list | grep "a62f9733-0fa3-4d7d-97ab-13ef7b8d8115" 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:36.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:36.632" level="INFO">${output} = Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, ...</msg>
<status status="PASS" starttime="20250223 09:35:35.201" endtime="20250223 09:35:36.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:36.633" level="INFO">Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:3bc4bb71-c92f-490d-80e0-7c5d4c3baade, CreationTimestamp2025-02-23T09:34:55.904Z[UTC]]</msg>
<status status="PASS" starttime="20250223 09:35:36.632" endtime="20250223 09:35:36.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:35:36.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:35:36.633" endtime="20250223 09:35:36.633"/>
</kw>
<status status="PASS" starttime="20250223 09:35:35.200" endtime="20250223 09:35:36.633"/>
</kw>
<msg timestamp="20250223 09:35:36.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:35:35.200" endtime="20250223 09:35:36.634"/>
</kw>
<msg timestamp="20250223 09:35:36.634" level="INFO">${output} = Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, ...</msg>
<status status="PASS" starttime="20250223 09:35:35.200" endtime="20250223 09:35:36.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:35:36.634" endtime="20250223 09:35:36.634"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:35:33.845" endtime="20250223 09:35:36.634"/>
</test>
<test id="s1-s2-t7" name="Close pipeline" line="55">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:36.638" level="INFO">Running command 'ozone admin pipeline close "a62f9733-0fa3-4d7d-97ab-13ef7b8d8115" 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:38.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:38.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250223 09:35:36.636" endtime="20250223 09:35:38.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:38.079" level="INFO"/>
<status status="PASS" starttime="20250223 09:35:38.079" endtime="20250223 09:35:38.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:35:38.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:35:38.079" endtime="20250223 09:35:38.080"/>
</kw>
<status status="PASS" starttime="20250223 09:35:36.636" endtime="20250223 09:35:38.080"/>
</kw>
<msg timestamp="20250223 09:35:38.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:35:36.635" endtime="20250223 09:35:38.080"/>
</kw>
<status status="PASS" starttime="20250223 09:35:36.635" endtime="20250223 09:35:38.080"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:38.083" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:39.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:39.553" level="INFO">${output} = Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, ...</msg>
<status status="PASS" starttime="20250223 09:35:38.081" endtime="20250223 09:35:39.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:39.554" level="INFO">Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, State:CLOSED, leaderId:3bc4bb71-c92f-490d-80e0-7c5d4c3baade, CreationTimestamp2025-02-23T09:34:55.904Z[UTC]]</msg>
<status status="PASS" starttime="20250223 09:35:39.553" endtime="20250223 09:35:39.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250223 09:35:39.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250223 09:35:39.554" endtime="20250223 09:35:39.554"/>
</kw>
<status status="PASS" starttime="20250223 09:35:38.080" endtime="20250223 09:35:39.554"/>
</kw>
<msg timestamp="20250223 09:35:39.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250223 09:35:38.080" endtime="20250223 09:35:39.555"/>
</kw>
<msg timestamp="20250223 09:35:39.555" level="INFO">${output} = Pipeline[ Id: a62f9733-0fa3-4d7d-97ab-13ef7b8d8115, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, ...</msg>
<status status="PASS" starttime="20250223 09:35:38.080" endtime="20250223 09:35:39.555"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250223 09:35:39.555" endtime="20250223 09:35:39.555"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250223 09:35:39.555" endtime="20250223 09:35:39.556"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:35:36.635" endtime="20250223 09:35:39.556"/>
</test>
<test id="s1-s2-t8" name="Incomplete command" line="61">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:39.559" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:40.693" level="INFO">${rc} = 2</msg>
<msg timestamp="20250223 09:35:40.693" level="INFO">${output} = Missing required subcommand
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and ...</msg>
<status status="PASS" starttime="20250223 09:35:39.557" endtime="20250223 09:35:40.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:40.694" level="INFO">Missing required subcommand
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20250223 09:35:40.693" endtime="20250223 09:35:40.694"/>
</kw>
<msg timestamp="20250223 09:35:40.694" level="INFO">${output} = Missing required subcommand
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and ...</msg>
<status status="PASS" starttime="20250223 09:35:39.557" endtime="20250223 09:35:40.694"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Missing required subcommand</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:35:40.694" endtime="20250223 09:35:40.694"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:35:40.694" endtime="20250223 09:35:40.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:35:40.695" endtime="20250223 09:35:40.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:35:40.695" endtime="20250223 09:35:40.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250223 09:35:40.695" endtime="20250223 09:35:40.696"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:35:39.556" endtime="20250223 09:35:40.696"/>
</test>
<test id="s1-s2-t9" name="Create pipeline" line="69">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create -t RATIS -f ONE</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250223 09:35:40.699" level="INFO">Running command 'ozone admin pipeline create -t RATIS -f ONE 2&gt;&amp;1'.</msg>
<msg timestamp="20250223 09:35:42.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20250223 09:35:42.167" level="INFO">${output} = PipelineID=c325d5f1-c777-4f96-9bf3-3f5743db5eb9 is created. Pipeline[ Id: c325d5f1-c777-4f96-9bf3-3f5743db5eb9, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default...</msg>
<status status="PASS" starttime="20250223 09:35:40.697" endtime="20250223 09:35:42.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250223 09:35:42.168" level="INFO">PipelineID=c325d5f1-c777-4f96-9bf3-3f5743db5eb9 is created. Pipeline[ Id: c325d5f1-c777-4f96-9bf3-3f5743db5eb9, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default/172.20.0.4) ReplicaIndex: 0, ReplicationConfig: RATIS/ONE, State:ALLOCATED, leaderId:, CreationTimestamp2025-02-23T09:35:42.092Z[UTC]]</msg>
<status status="PASS" starttime="20250223 09:35:42.168" endtime="20250223 09:35:42.168"/>
</kw>
<msg timestamp="20250223 09:35:42.168" level="INFO">${output} = PipelineID=c325d5f1-c777-4f96-9bf3-3f5743db5eb9 is created. Pipeline[ Id: c325d5f1-c777-4f96-9bf3-3f5743db5eb9, Nodes: 3bc4bb71-c92f-490d-80e0-7c5d4c3baade(ozonescripts-datanode-1.ozonescripts_default...</msg>
<status status="PASS" starttime="20250223 09:35:40.696" endtime="20250223 09:35:42.168"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<arg>RATIS/ONE</arg>
<arg>Cannot create pipeline</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20250223 09:35:42.168" endtime="20250223 09:35:42.169"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250223 09:35:40.696" endtime="20250223 09:35:42.169"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20250223 09:35:23.587" endtime="20250223 09:35:42.170"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="32609"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonescripts">ozonescripts</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Single Node">ozonescripts.Single Node</stat>
<stat pass="9" fail="0" skip="0" id="s1-s2" name="Pipeline">ozonescripts.Pipeline</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
