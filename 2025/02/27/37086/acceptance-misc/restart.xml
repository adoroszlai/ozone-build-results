<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250227 16:40:38.465" rpa="false" schemaversion="4">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:38:58.748" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:39:04.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:39:04.429" level="INFO">${output} = 2025-02-27 16:38:59,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:38:59,887 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:38:58.746" endtime="20250227 16:39:04.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:39:04.430" level="INFO">2025-02-27 16:38:59,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:38:59,887 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:38:59,887 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:39:00,023 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-02-27 16:39:00,068 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:39:01,069 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:39:02,069 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:39:02,986 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-02-27 16:39:03,058 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-02-27 16:39:03,069 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:39:03,212 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-27 16:39:04,070 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-27 16:39:04,089 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=841.195685, max=841.195685, mean=841.195685, stddev=0.0, median=841.195685, p75=841.195685, p95=841.195685, p98=841.195685, p99=841.195685, p999=841.195685, mean_rate=0.987713966229455, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:39:04,089 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2025-02-27 16:39:04,089 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:39:04,089 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250227 16:39:04.429" endtime="20250227 16:39:04.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:39:04.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:39:04.430" endtime="20250227 16:39:04.430"/>
</kw>
<status status="PASS" starttime="20250227 16:38:58.746" endtime="20250227 16:39:04.430"/>
</kw>
<msg timestamp="20250227 16:39:04.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:38:58.746" endtime="20250227 16:39:04.430"/>
</kw>
<msg timestamp="20250227 16:39:04.431" level="INFO">${result} = 2025-02-27 16:38:59,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:38:59,887 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:38:58.746" endtime="20250227 16:39:04.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:39:04.431" endtime="20250227 16:39:04.431"/>
</kw>
<status status="PASS" starttime="20250227 16:38:58.744" endtime="20250227 16:39:04.431"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:38:58.744" endtime="20250227 16:39:04.431"/>
</test>
<test id="s1-s1-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:39:04.436" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:39:06.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:39:06.735" level="INFO">${output} = 2025-02-27 16:39:05,358 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:05,492 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:39:04.434" endtime="20250227 16:39:06.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:39:06.736" level="INFO">2025-02-27 16:39:05,358 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:05,492 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:39:05,492 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:39:05,639 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2025-02-27 16:39:05,688 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:39:06,689 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-27 16:39:06,696 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=61.805779, max=61.805779, mean=61.805779, stddev=0.0, median=61.805779, p75=61.805779, p95=61.805779, p98=61.805779, p99=61.805779, p999=61.805779, mean_rate=7.747588644384117, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:39:06,697 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-02-27 16:39:06,697 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:39:06,697 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250227 16:39:06.735" endtime="20250227 16:39:06.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:39:06.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:39:06.736" endtime="20250227 16:39:06.737"/>
</kw>
<status status="PASS" starttime="20250227 16:39:04.434" endtime="20250227 16:39:06.737"/>
</kw>
<msg timestamp="20250227 16:39:06.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:39:04.433" endtime="20250227 16:39:06.737"/>
</kw>
<msg timestamp="20250227 16:39:06.737" level="INFO">${result} = 2025-02-27 16:39:05,358 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:05,492 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:39:04.433" endtime="20250227 16:39:06.737"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:39:06.737" endtime="20250227 16:39:06.737"/>
</kw>
<status status="PASS" starttime="20250227 16:39:04.432" endtime="20250227 16:39:06.737"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:39:04.432" endtime="20250227 16:39:06.738"/>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:39:06.742" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:39:09.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:39:09.089" level="INFO">${output} = 2025-02-27 16:39:07,669 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:07,803 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:39:06.740" endtime="20250227 16:39:09.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:39:09.090" level="INFO">2025-02-27 16:39:07,669 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:07,803 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:39:07,803 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:39:07,990 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2025-02-27 16:39:08,052 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:39:09,052 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-27 16:39:09,061 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=12.716656, max=12.716656, mean=12.716656, stddev=0.0, median=12.716656, p75=12.716656, p95=12.716656, p98=12.716656, p99=12.716656, p999=12.716656, mean_rate=7.386116297990764, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:39:09,062 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-02-27 16:39:09,062 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:39:09,062 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250227 16:39:09.090" endtime="20250227 16:39:09.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:39:09.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:39:09.090" endtime="20250227 16:39:09.091"/>
</kw>
<status status="PASS" starttime="20250227 16:39:06.740" endtime="20250227 16:39:09.091"/>
</kw>
<msg timestamp="20250227 16:39:09.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:39:06.740" endtime="20250227 16:39:09.091"/>
</kw>
<msg timestamp="20250227 16:39:09.091" level="INFO">${result} = 2025-02-27 16:39:07,669 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:07,803 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:39:06.739" endtime="20250227 16:39:09.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:39:09.091" endtime="20250227 16:39:09.091"/>
</kw>
<status status="PASS" starttime="20250227 16:39:06.739" endtime="20250227 16:39:09.091"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:39:06.738" endtime="20250227 16:39:09.092"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250227 16:38:58.712" endtime="20250227 16:39:09.092"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s2-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:39:09.616" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:39:13.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:39:13.259" level="INFO">${output} = 2025-02-27 16:39:10,566 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:10,712 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:39:09.614" endtime="20250227 16:39:13.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:39:13.260" level="INFO">2025-02-27 16:39:10,566 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:10,712 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:39:10,712 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:39:10,858 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-02-27 16:39:10,904 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:39:11,905 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:39:11,908 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-27 16:39:12,905 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-27 16:39:12,919 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=23.088444, max=23.088444, mean=23.088444, stddev=0.0, median=23.088444, p75=23.088444, p95=23.088444, p98=23.088444, p99=23.088444, p999=23.088444, mean_rate=2.035058966128627, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:39:12,920 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-27 16:39:12,920 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:39:12,920 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250227 16:39:13.260" endtime="20250227 16:39:13.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:39:13.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:39:13.260" endtime="20250227 16:39:13.261"/>
</kw>
<status status="PASS" starttime="20250227 16:39:09.614" endtime="20250227 16:39:13.261"/>
</kw>
<msg timestamp="20250227 16:39:13.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:39:09.614" endtime="20250227 16:39:13.261"/>
</kw>
<msg timestamp="20250227 16:39:13.261" level="INFO">${result} = 2025-02-27 16:39:10,566 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:10,712 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:39:09.613" endtime="20250227 16:39:13.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:39:13.261" endtime="20250227 16:39:13.262"/>
</kw>
<status status="PASS" starttime="20250227 16:39:09.612" endtime="20250227 16:39:13.262"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:39:09.611" endtime="20250227 16:39:13.262"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250227 16:39:09.581" endtime="20250227 16:39:13.263"/>
</suite>
<suite id="s1-s3" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s3-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:39:13.793" endtime="20250227 16:39:13.793"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:39:13.796" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:39:18.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:39:18.029" level="INFO">${output} = 2025-02-27 16:39:14,702 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:14,837 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:39:13.794" endtime="20250227 16:39:18.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:39:18.030" level="INFO">2025-02-27 16:39:14,702 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:14,837 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:39:14,837 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:39:15,393 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-02-27 16:39:15,632 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-02-27 16:39:15,663 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-27 16:39:15,701 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-27 16:39:16,664 [Thread-4] INFO freon.ProgressBar: Progress: 10.00 % (10 out of 100)
2025-02-27 16:39:17,665 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-27 16:39:17,686 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=5.648273, max=662.486515, mean=16.94437036083755, stddev=64.62952883168268, median=10.173866, p75=11.75329, p95=16.834965, p98=20.291764, p99=20.88254, p999=662.486515, mean_rate=53.57147689098746, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:39:17,686 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-27 16:39:17,686 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:39:17,686 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250227 16:39:18.029" endtime="20250227 16:39:18.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:39:18.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:39:18.030" endtime="20250227 16:39:18.030"/>
</kw>
<status status="PASS" starttime="20250227 16:39:13.794" endtime="20250227 16:39:18.030"/>
</kw>
<msg timestamp="20250227 16:39:18.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:39:13.794" endtime="20250227 16:39:18.030"/>
</kw>
<msg timestamp="20250227 16:39:18.031" level="INFO">${result} = 2025-02-27 16:39:14,702 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:14,837 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:39:13.793" endtime="20250227 16:39:18.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:39:18.031" endtime="20250227 16:39:18.031"/>
</kw>
<status status="PASS" starttime="20250227 16:39:13.792" endtime="20250227 16:39:18.031"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:39:13.791" endtime="20250227 16:39:18.031"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250227 16:39:13.761" endtime="20250227 16:39:18.032"/>
</suite>
<suite id="s1-s4" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s4-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:39:18.604" endtime="20250227 16:39:18.604"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:39:18.609" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:39:22.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:39:22.347" level="INFO">${output} = 2025-02-27 16:39:19,558 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:19,698 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:39:18.606" endtime="20250227 16:39:22.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:39:22.348" level="INFO">2025-02-27 16:39:19,558 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:19,698 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:39:19,698 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:39:19,924 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-02-27 16:39:19,988 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-27 16:39:20,410 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-02-27 16:39:20,633 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=6bbc6309-a810-4931-a269-8f7ae169e4d4
2025-02-27 16:39:20,677 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-27 16:39:20,988 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-27 16:39:21,989 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-27 16:39:22,007 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.487159, max=4.433343, mean=2.0537722600000006, stddev=0.49085704425648446, median=1.919627, p75=2.168941, p95=3.007612, p98=3.185793, p99=4.288001, p999=4.433343, mean_rate=132.00660412671627, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:39:22,007 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-27 16:39:22,007 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:39:22,007 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250227 16:39:22.347" endtime="20250227 16:39:22.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:39:22.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:39:22.348" endtime="20250227 16:39:22.348"/>
</kw>
<status status="PASS" starttime="20250227 16:39:18.605" endtime="20250227 16:39:22.348"/>
</kw>
<msg timestamp="20250227 16:39:22.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:39:18.605" endtime="20250227 16:39:22.349"/>
</kw>
<msg timestamp="20250227 16:39:22.349" level="INFO">${result} = 2025-02-27 16:39:19,558 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:19,698 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:39:18.605" endtime="20250227 16:39:22.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:39:22.349" endtime="20250227 16:39:22.349"/>
</kw>
<status status="PASS" starttime="20250227 16:39:18.602" endtime="20250227 16:39:22.349"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:39:18.602" endtime="20250227 16:39:22.349"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250227 16:39:18.556" endtime="20250227 16:39:22.350"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s5-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:39:54.650" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:40:05.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:40:05.770" level="INFO">${output} = 2025-02-27 16:39:56,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:56,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:39:54.648" endtime="20250227 16:40:05.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:40:05.770" level="INFO">2025-02-27 16:39:56,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:56,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:39:56,208 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:39:56,364 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2025-02-27 16:39:56,413 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:39:57,414 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:39:58,414 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:39:59,291 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:812)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:233)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:226)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:161)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:127)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:118)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1246)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1169)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:525)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1953)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3198)
, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2025-02-27 16:39:59,415 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:40:00,415 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:40:01,415 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:40:02,416 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:40:03,416 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:40:03,980 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-27 16:40:04,417 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:40:05,417 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-27 16:40:05,429 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=16.373277, max=16.373277, mean=16.373277, stddev=0.0, median=16.373277, p75=16.373277, p95=16.373277, p98=16.373277, p99=16.373277, p999=16.373277, mean_rate=1.1143102612035964, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:40:05,430 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2025-02-27 16:40:05,430 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:40:05,430 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250227 16:40:05.770" endtime="20250227 16:40:05.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:40:05.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:40:05.771" endtime="20250227 16:40:05.771"/>
</kw>
<status status="PASS" starttime="20250227 16:39:54.648" endtime="20250227 16:40:05.771"/>
</kw>
<msg timestamp="20250227 16:40:05.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:39:54.647" endtime="20250227 16:40:05.771"/>
</kw>
<msg timestamp="20250227 16:40:05.771" level="INFO">${result} = 2025-02-27 16:39:56,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:39:56,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:39:54.647" endtime="20250227 16:40:05.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:40:05.772" endtime="20250227 16:40:05.772"/>
</kw>
<status status="PASS" starttime="20250227 16:39:54.645" endtime="20250227 16:40:05.772"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:39:54.645" endtime="20250227 16:40:05.772"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250227 16:39:54.605" endtime="20250227 16:40:05.773"/>
</suite>
<suite id="s1-s6" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s6-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:40:06.309" endtime="20250227 16:40:06.309"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:40:06.312" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:40:09.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:40:09.934" level="INFO">${output} = 2025-02-27 16:40:07,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:07,372 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:06.310" endtime="20250227 16:40:09.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:40:09.935" level="INFO">2025-02-27 16:40:07,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:07,372 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:40:07,372 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:40:07,521 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2025-02-27 16:40:07,572 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-27 16:40:07,967 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-02-27 16:40:08,207 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=6bbc6309-a810-4931-a269-8f7ae169e4d4
2025-02-27 16:40:08,256 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-27 16:40:08,573 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-27 16:40:09,574 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-27 16:40:09,594 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.622441, max=6.721998, mean=2.4087618711307788, stddev=0.7226283782116979, median=2.242152, p75=2.53351, p95=3.946413, p98=5.076213, p99=6.721998, p999=6.721998, mean_rate=139.92627625924015, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:40:09,595 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-27 16:40:09,595 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:40:09,595 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250227 16:40:09.934" endtime="20250227 16:40:09.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:40:09.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:40:09.935" endtime="20250227 16:40:09.935"/>
</kw>
<status status="PASS" starttime="20250227 16:40:06.310" endtime="20250227 16:40:09.936"/>
</kw>
<msg timestamp="20250227 16:40:09.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:40:06.310" endtime="20250227 16:40:09.936"/>
</kw>
<msg timestamp="20250227 16:40:09.936" level="INFO">${result} = 2025-02-27 16:40:07,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:07,372 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:06.310" endtime="20250227 16:40:09.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:40:09.936" endtime="20250227 16:40:09.936"/>
</kw>
<status status="PASS" starttime="20250227 16:40:06.308" endtime="20250227 16:40:09.936"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:40:06.307" endtime="20250227 16:40:09.937"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250227 16:40:06.278" endtime="20250227 16:40:09.937"/>
</suite>
<suite id="s1-s7" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:40:10.475" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:40:14.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:40:14.085" level="INFO">${output} = 2025-02-27 16:40:11,398 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:11,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:10.473" endtime="20250227 16:40:14.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:40:14.086" level="INFO">2025-02-27 16:40:11,398 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:11,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:40:11,539 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:40:11,671 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-02-27 16:40:11,720 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:40:12,721 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:40:12,782 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-27 16:40:13,721 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-27 16:40:13,742 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=791.847877, max=791.847877, mean=791.847877, stddev=0.0, median=791.847877, p75=791.847877, p95=791.847877, p98=791.847877, p99=791.847877, p999=791.847877, mean_rate=0.8501565109231288, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:40:13,742 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-27 16:40:13,742 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:40:13,742 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250227 16:40:14.086" endtime="20250227 16:40:14.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:40:14.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:40:14.086" endtime="20250227 16:40:14.087"/>
</kw>
<status status="PASS" starttime="20250227 16:40:10.473" endtime="20250227 16:40:14.087"/>
</kw>
<msg timestamp="20250227 16:40:14.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:40:10.473" endtime="20250227 16:40:14.087"/>
</kw>
<msg timestamp="20250227 16:40:14.087" level="INFO">${result} = 2025-02-27 16:40:11,398 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:11,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:10.472" endtime="20250227 16:40:14.087"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:40:14.087" endtime="20250227 16:40:14.088"/>
</kw>
<status status="PASS" starttime="20250227 16:40:10.471" endtime="20250227 16:40:14.088"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:40:10.470" endtime="20250227 16:40:14.088"/>
</test>
<test id="s1-s7-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:40:14.092" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:40:16.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:40:16.448" level="INFO">${output} = 2025-02-27 16:40:15,002 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:15,152 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:14.090" endtime="20250227 16:40:16.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:40:16.448" level="INFO">2025-02-27 16:40:15,002 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:15,152 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:40:15,152 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:40:15,314 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2025-02-27 16:40:15,402 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:40:16,403 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-27 16:40:16,410 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=58.606153, max=58.606153, mean=58.606153, stddev=0.0, median=58.606153, p75=58.606153, p95=58.606153, p98=58.606153, p99=58.606153, p999=58.606153, mean_rate=7.189796603026733, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:40:16,411 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-02-27 16:40:16,411 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:40:16,411 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250227 16:40:16.448" endtime="20250227 16:40:16.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:40:16.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:40:16.449" endtime="20250227 16:40:16.449"/>
</kw>
<status status="PASS" starttime="20250227 16:40:14.090" endtime="20250227 16:40:16.449"/>
</kw>
<msg timestamp="20250227 16:40:16.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:40:14.090" endtime="20250227 16:40:16.449"/>
</kw>
<msg timestamp="20250227 16:40:16.449" level="INFO">${result} = 2025-02-27 16:40:15,002 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:15,152 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:14.089" endtime="20250227 16:40:16.449"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:40:16.450" endtime="20250227 16:40:16.450"/>
</kw>
<status status="PASS" starttime="20250227 16:40:14.089" endtime="20250227 16:40:16.450"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:40:14.088" endtime="20250227 16:40:16.450"/>
</test>
<test id="s1-s7-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:40:16.454" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:40:18.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:40:18.780" level="INFO">${output} = 2025-02-27 16:40:17,385 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:17,515 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:16.452" endtime="20250227 16:40:18.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:40:18.781" level="INFO">2025-02-27 16:40:17,385 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:17,515 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:40:17,515 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:40:17,676 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2025-02-27 16:40:17,725 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:40:18,726 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-27 16:40:18,734 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=10.849445, max=10.849445, mean=10.849445, stddev=0.0, median=10.849445, p75=10.849445, p95=10.849445, p98=10.849445, p99=10.849445, p999=10.849445, mean_rate=4.740266865742706, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:40:18,735 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2025-02-27 16:40:18,735 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:40:18,735 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250227 16:40:18.780" endtime="20250227 16:40:18.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:40:18.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:40:18.781" endtime="20250227 16:40:18.782"/>
</kw>
<status status="PASS" starttime="20250227 16:40:16.452" endtime="20250227 16:40:18.782"/>
</kw>
<msg timestamp="20250227 16:40:18.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:40:16.452" endtime="20250227 16:40:18.782"/>
</kw>
<msg timestamp="20250227 16:40:18.782" level="INFO">${result} = 2025-02-27 16:40:17,385 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:17,515 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:16.452" endtime="20250227 16:40:18.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:40:18.782" endtime="20250227 16:40:18.783"/>
</kw>
<status status="PASS" starttime="20250227 16:40:16.451" endtime="20250227 16:40:18.783"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:40:16.450" endtime="20250227 16:40:18.783"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20250227 16:40:10.438" endtime="20250227 16:40:18.784"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s8-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:40:19.320" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:40:22.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:40:22.935" level="INFO">${output} = 2025-02-27 16:40:20,245 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:20,380 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:19.318" endtime="20250227 16:40:22.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:40:22.936" level="INFO">2025-02-27 16:40:20,245 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:20,380 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:40:20,380 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:40:20,523 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2025-02-27 16:40:20,574 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:40:21,447 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-27 16:40:21,575 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2025-02-27 16:40:22,575 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2025-02-27 16:40:22,590 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=21.670499, max=21.670499, mean=21.670499, stddev=0.0, median=21.670499, p75=21.670499, p95=21.670499, p98=21.670499, p99=21.670499, p999=21.670499, mean_rate=1.595508434426383, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:40:22,590 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-27 16:40:22,591 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:40:22,591 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20250227 16:40:22.936" endtime="20250227 16:40:22.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:40:22.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:40:22.936" endtime="20250227 16:40:22.937"/>
</kw>
<status status="PASS" starttime="20250227 16:40:19.318" endtime="20250227 16:40:22.937"/>
</kw>
<msg timestamp="20250227 16:40:22.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:40:19.318" endtime="20250227 16:40:22.937"/>
</kw>
<msg timestamp="20250227 16:40:22.937" level="INFO">${result} = 2025-02-27 16:40:20,245 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:20,380 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:19.318" endtime="20250227 16:40:22.937"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:40:22.937" endtime="20250227 16:40:22.937"/>
</kw>
<status status="PASS" starttime="20250227 16:40:19.316" endtime="20250227 16:40:22.938"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:40:19.316" endtime="20250227 16:40:22.938"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20250227 16:40:19.286" endtime="20250227 16:40:22.938"/>
</suite>
<suite id="s1-s9" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s9-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:40:23.574" endtime="20250227 16:40:23.574"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:40:23.577" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:40:27.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:40:27.904" level="INFO">${output} = 2025-02-27 16:40:24,497 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:24,653 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:23.575" endtime="20250227 16:40:27.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:40:27.905" level="INFO">2025-02-27 16:40:24,497 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:24,653 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:40:24,653 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:40:25,222 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-02-27 16:40:25,516 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-02-27 16:40:25,543 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-27 16:40:25,584 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-27 16:40:26,543 [Thread-4] INFO freon.ProgressBar: Progress: 20.00 % (20 out of 100)
2025-02-27 16:40:27,544 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-27 16:40:27,561 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=7.257427, max=484.998101, mean=16.971209300836534, stddev=47.016927946331926, median=11.628469, p75=14.874672, p95=18.365845, p98=22.158813, p99=26.719702, p999=484.998101, mean_rate=53.858666370241494, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:40:27,562 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-27 16:40:27,562 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:40:27,562 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250227 16:40:27.905" endtime="20250227 16:40:27.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:40:27.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:40:27.905" endtime="20250227 16:40:27.906"/>
</kw>
<status status="PASS" starttime="20250227 16:40:23.575" endtime="20250227 16:40:27.906"/>
</kw>
<msg timestamp="20250227 16:40:27.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:40:23.575" endtime="20250227 16:40:27.906"/>
</kw>
<msg timestamp="20250227 16:40:27.906" level="INFO">${result} = 2025-02-27 16:40:24,497 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:24,653 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:23.575" endtime="20250227 16:40:27.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:40:27.906" endtime="20250227 16:40:27.907"/>
</kw>
<status status="PASS" starttime="20250227 16:40:23.573" endtime="20250227 16:40:27.907"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:40:23.573" endtime="20250227 16:40:27.907"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20250227 16:40:23.542" endtime="20250227 16:40:27.908"/>
</suite>
<suite id="s1-s10" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s10-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:40:28.441" endtime="20250227 16:40:28.442"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:40:28.445" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:40:32.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:40:32.104" level="INFO">${output} = 2025-02-27 16:40:29,405 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:29,538 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:28.443" endtime="20250227 16:40:32.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:40:32.105" level="INFO">2025-02-27 16:40:29,405 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:29,538 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:40:29,538 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:40:29,684 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2025-02-27 16:40:29,737 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-27 16:40:30,139 [main] INFO proxy.SCMContainerLocationFailoverProxyProvider: Created fail-over proxy for protocol StorageContainerLocationProtocolPB with 1 nodes: [nodeId=scmNodeId,nodeAddress=scm/10.9.0.17:9860]
2025-02-27 16:40:30,387 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=6bbc6309-a810-4931-a269-8f7ae169e4d4
2025-02-27 16:40:30,431 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-27 16:40:30,738 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-27 16:40:31,738 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-27 16:40:31,760 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.342126, max=4.03551, mean=1.9166012900000011, stddev=0.38430746550514205, median=1.861065, p75=2.037955, p95=2.569049, p98=2.718952, p99=3.150679, p999=4.03551, mean_rate=130.92305576208412, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:40:31,761 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-02-27 16:40:31,761 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:40:31,761 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250227 16:40:32.105" endtime="20250227 16:40:32.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:40:32.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:40:32.105" endtime="20250227 16:40:32.106"/>
</kw>
<status status="PASS" starttime="20250227 16:40:28.442" endtime="20250227 16:40:32.106"/>
</kw>
<msg timestamp="20250227 16:40:32.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:40:28.442" endtime="20250227 16:40:32.106"/>
</kw>
<msg timestamp="20250227 16:40:32.106" level="INFO">${result} = 2025-02-27 16:40:29,405 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:40:29,538 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:40:28.442" endtime="20250227 16:40:32.106"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:40:32.106" endtime="20250227 16:40:32.106"/>
</kw>
<status status="PASS" starttime="20250227 16:40:28.440" endtime="20250227 16:40:32.107"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:40:28.440" endtime="20250227 16:40:32.107"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20250227 16:40:28.409" endtime="20250227 16:40:32.107"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="57016"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate-Chunk">restart.Validate-Chunk</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
