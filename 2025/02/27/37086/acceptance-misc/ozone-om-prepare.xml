<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250227 16:22:42.754" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:19:38.813" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:19:47.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:19:47.446" level="INFO">${output} = 2025-02-27 16:19:39,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:19:39,863 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:19:38.811" endtime="20250227 16:19:47.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:19:47.446" level="INFO">2025-02-27 16:19:39,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:19:39,863 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:19:39,863 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:19:40,018 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-02-27 16:19:40,067 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-27 16:19:40,988 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2025-02-27 16:19:41,070 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-27 16:19:41,092 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2025-02-27 16:19:41,285 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-27 16:19:42,071 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2025-02-27 16:19:43,071 [Thread-3] INFO freon.ProgressBar: Progress: 14.00 % (14 out of 100)
2025-02-27 16:19:44,072 [Thread-3] INFO freon.ProgressBar: Progress: 42.00 % (42 out of 100)
2025-02-27 16:19:45,072 [Thread-3] INFO freon.ProgressBar: Progress: 67.00 % (67 out of 100)
2025-02-27 16:19:46,072 [Thread-3] INFO freon.ProgressBar: Progress: 98.00 % (98 out of 100)
2025-02-27 16:19:47,073 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-27 16:19:47,100 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=24.484273, max=917.485614, mean=49.43361285989025, stddev=89.44219041220923, median=35.194253, p75=41.63008, p95=61.709206, p98=173.555378, p99=214.019375, p999=917.485614, mean_rate=16.72885650018997, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:19:47,100 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2025-02-27 16:19:47,100 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:19:47,100 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250227 16:19:47.446" endtime="20250227 16:19:47.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:19:47.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:19:47.447" endtime="20250227 16:19:47.447"/>
</kw>
<status status="PASS" starttime="20250227 16:19:38.811" endtime="20250227 16:19:47.447"/>
</kw>
<msg timestamp="20250227 16:19:47.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:19:38.810" endtime="20250227 16:19:47.447"/>
</kw>
<msg timestamp="20250227 16:19:47.447" level="INFO">${result} = 2025-02-27 16:19:39,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:19:39,863 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:19:38.810" endtime="20250227 16:19:47.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:19:47.447" endtime="20250227 16:19:47.448"/>
</kw>
<status status="PASS" starttime="20250227 16:19:38.809" endtime="20250227 16:19:47.448"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:19:47.448" level="INFO">${random} = 42813</msg>
<status status="PASS" starttime="20250227 16:19:47.448" endtime="20250227 16:19:47.448"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:19:47.449" level="INFO">${volume_name} = 42813-volume-for-prepare</msg>
<status status="PASS" starttime="20250227 16:19:47.448" endtime="20250227 16:19:47.449"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:19:47.450" level="INFO">${bucket_name} = 42813-bucket-for-prepare</msg>
<status status="PASS" starttime="20250227 16:19:47.449" endtime="20250227 16:19:47.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:19:47.453" level="INFO">Running command 'ozone sh volume create /42813-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:19:49.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:19:49.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:19:47.451" endtime="20250227 16:19:49.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:19:49.193" level="INFO"/>
<status status="PASS" starttime="20250227 16:19:49.193" endtime="20250227 16:19:49.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:19:49.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:19:49.193" endtime="20250227 16:19:49.194"/>
</kw>
<status status="PASS" starttime="20250227 16:19:47.450" endtime="20250227 16:19:49.194"/>
</kw>
<msg timestamp="20250227 16:19:49.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:19:47.450" endtime="20250227 16:19:49.194"/>
</kw>
<status status="PASS" starttime="20250227 16:19:47.450" endtime="20250227 16:19:49.194"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:19:49.197" level="INFO">Running command 'ozone sh bucket create /42813-volume-for-prepare/42813-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:19:51.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:19:51.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:19:49.195" endtime="20250227 16:19:51.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:19:51.018" level="INFO"/>
<status status="PASS" starttime="20250227 16:19:51.018" endtime="20250227 16:19:51.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:19:51.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:19:51.018" endtime="20250227 16:19:51.019"/>
</kw>
<status status="PASS" starttime="20250227 16:19:49.195" endtime="20250227 16:19:51.019"/>
</kw>
<msg timestamp="20250227 16:19:51.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:19:49.195" endtime="20250227 16:19:51.019"/>
</kw>
<status status="PASS" starttime="20250227 16:19:49.194" endtime="20250227 16:19:51.019"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:19:51.022" level="INFO">Running command 'ozone sh key put /42813-volume-for-prepare/42813-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:19:53.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:19:53.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:19:51.020" endtime="20250227 16:19:53.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:19:53.839" level="INFO"/>
<status status="PASS" starttime="20250227 16:19:53.839" endtime="20250227 16:19:53.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:19:53.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:19:53.839" endtime="20250227 16:19:53.840"/>
</kw>
<status status="PASS" starttime="20250227 16:19:51.020" endtime="20250227 16:19:53.840"/>
</kw>
<msg timestamp="20250227 16:19:53.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:19:51.020" endtime="20250227 16:19:53.840"/>
</kw>
<status status="PASS" starttime="20250227 16:19:51.019" endtime="20250227 16:19:53.840"/>
</kw>
<status status="PASS" starttime="20250227 16:19:38.809" endtime="20250227 16:19:53.840"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:19:53.841" endtime="20250227 16:19:53.841"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:19:53.844" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:00.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:00.583" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250227 16:19:53.842" endtime="20250227 16:20:00.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:00.584" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250227 16:20:00.583" endtime="20250227 16:20:00.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:00.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:00.584" endtime="20250227 16:20:00.584"/>
</kw>
<status status="PASS" starttime="20250227 16:19:53.842" endtime="20250227 16:20:00.585"/>
</kw>
<msg timestamp="20250227 16:20:00.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:19:53.842" endtime="20250227 16:20:00.585"/>
</kw>
<msg timestamp="20250227 16:20:00.585" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250227 16:19:53.841" endtime="20250227 16:20:00.585"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:20:00.585" endtime="20250227 16:20:00.586"/>
</kw>
<status status="PASS" starttime="20250227 16:20:00.585" endtime="20250227 16:20:00.586"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:19:53.840" endtime="20250227 16:20:00.586"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:20:00.587" endtime="20250227 16:20:00.587"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:00.590" level="INFO">Running command 'ozone sh key info /42813-volume-for-prepare/42813-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:02.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:02.638" level="INFO">${output} = {
  "volumeName" : "42813-volume-for-prepare",
  "bucketName" : "42813-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-27T16:19:5...</msg>
<status status="PASS" starttime="20250227 16:20:00.588" endtime="20250227 16:20:02.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:02.639" level="INFO">{
  "volumeName" : "42813-volume-for-prepare",
  "bucketName" : "42813-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-27T16:19:52.736Z",
  "modificationTime" : "2025-02-27T16:19:53.488Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 115816896921600101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 411,
  "file" : true
}</msg>
<status status="PASS" starttime="20250227 16:20:02.639" endtime="20250227 16:20:02.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:02.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:02.639" endtime="20250227 16:20:02.639"/>
</kw>
<status status="PASS" starttime="20250227 16:20:00.587" endtime="20250227 16:20:02.640"/>
</kw>
<msg timestamp="20250227 16:20:02.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:20:00.587" endtime="20250227 16:20:02.640"/>
</kw>
<msg timestamp="20250227 16:20:02.640" level="INFO">${result} = {
  "volumeName" : "42813-volume-for-prepare",
  "bucketName" : "42813-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-27T16:19:5...</msg>
<status status="PASS" starttime="20250227 16:20:00.587" endtime="20250227 16:20:02.640"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:20:02.640" endtime="20250227 16:20:02.640"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:20:00.586" endtime="20250227 16:20:02.640"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:20:02.641" endtime="20250227 16:20:02.641"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:02.644" level="INFO">Running command 'ozone sh key put /42813-volume-for-prepare/42813-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:04.361" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:20:04.361" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250227 16:20:02.642" endtime="20250227 16:20:04.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:04.361" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250227 16:20:04.361" endtime="20250227 16:20:04.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:04.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:04.362" endtime="20250227 16:20:04.362"/>
</kw>
<msg timestamp="20250227 16:20:04.362" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250227 16:20:02.641" endtime="20250227 16:20:04.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:20:04.362" endtime="20250227 16:20:04.362"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:04.365" level="INFO">Running command 'ozone sh key info /42813-volume-for-prepare/42813-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:06.125" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:20:06.125" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250227 16:20:04.363" endtime="20250227 16:20:06.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:06.126" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250227 16:20:06.125" endtime="20250227 16:20:06.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:06.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:06.126" endtime="20250227 16:20:06.126"/>
</kw>
<status status="PASS" starttime="20250227 16:20:04.363" endtime="20250227 16:20:06.126"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:20:02.641" endtime="20250227 16:20:06.127"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20250227 16:19:38.770" endtime="20250227 16:20:06.127"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:20:06.645" level="INFO">${random} = 08478</msg>
<status status="PASS" starttime="20250227 16:20:06.644" endtime="20250227 16:20:06.645"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:20:06.646" level="INFO">${volume_name} = 08478-volume-for-cancel</msg>
<status status="PASS" starttime="20250227 16:20:06.645" endtime="20250227 16:20:06.646"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:20:06.646" level="INFO">${bucket_name} = 08478-bucket-for-cancel</msg>
<status status="PASS" starttime="20250227 16:20:06.646" endtime="20250227 16:20:06.646"/>
</kw>
<status status="PASS" starttime="20250227 16:20:06.644" endtime="20250227 16:20:06.646"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:20:06.647" endtime="20250227 16:20:06.647"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:06.650" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:08.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:08.245" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250227 16:20:06.648" endtime="20250227 16:20:08.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:08.246" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250227 16:20:08.246" endtime="20250227 16:20:08.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:08.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:08.246" endtime="20250227 16:20:08.247"/>
</kw>
<status status="PASS" starttime="20250227 16:20:06.648" endtime="20250227 16:20:08.247"/>
</kw>
<msg timestamp="20250227 16:20:08.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:20:06.647" endtime="20250227 16:20:08.247"/>
</kw>
<msg timestamp="20250227 16:20:08.247" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20250227 16:20:06.647" endtime="20250227 16:20:08.247"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:20:08.247" endtime="20250227 16:20:08.248"/>
</kw>
<status status="PASS" starttime="20250227 16:20:08.247" endtime="20250227 16:20:08.248"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:20:06.647" endtime="20250227 16:20:08.248"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:20:08.249" endtime="20250227 16:20:08.249"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:08.252" level="INFO">Running command 'ozone sh volume create /08478-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:10.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:10.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:20:08.250" endtime="20250227 16:20:10.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:10.009" level="INFO"/>
<status status="PASS" starttime="20250227 16:20:10.009" endtime="20250227 16:20:10.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:10.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:10.009" endtime="20250227 16:20:10.010"/>
</kw>
<status status="PASS" starttime="20250227 16:20:08.250" endtime="20250227 16:20:10.010"/>
</kw>
<msg timestamp="20250227 16:20:10.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:20:08.250" endtime="20250227 16:20:10.010"/>
</kw>
<status status="PASS" starttime="20250227 16:20:08.249" endtime="20250227 16:20:10.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:10.013" level="INFO">Running command 'ozone sh bucket create /08478-volume-for-cancel/08478-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:11.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:11.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:20:10.011" endtime="20250227 16:20:11.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:11.809" level="INFO"/>
<status status="PASS" starttime="20250227 16:20:11.809" endtime="20250227 16:20:11.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:11.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:11.810" endtime="20250227 16:20:11.810"/>
</kw>
<status status="PASS" starttime="20250227 16:20:10.011" endtime="20250227 16:20:11.810"/>
</kw>
<msg timestamp="20250227 16:20:11.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:20:10.010" endtime="20250227 16:20:11.810"/>
</kw>
<status status="PASS" starttime="20250227 16:20:10.010" endtime="20250227 16:20:11.810"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:11.813" level="INFO">Running command 'ozone sh key put /08478-volume-for-cancel/08478-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:14.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:14.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:20:11.811" endtime="20250227 16:20:14.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:14.756" level="INFO"/>
<status status="PASS" starttime="20250227 16:20:14.755" endtime="20250227 16:20:14.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:14.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:14.756" endtime="20250227 16:20:14.756"/>
</kw>
<status status="PASS" starttime="20250227 16:20:11.811" endtime="20250227 16:20:14.756"/>
</kw>
<msg timestamp="20250227 16:20:14.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:20:11.811" endtime="20250227 16:20:14.756"/>
</kw>
<msg timestamp="20250227 16:20:14.756" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250227 16:20:11.810" endtime="20250227 16:20:14.757"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:14.760" level="INFO">Running command 'ozone sh key info /08478-volume-for-cancel/08478-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:16.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:16.758" level="INFO">${output} = {
  "volumeName" : "08478-volume-for-cancel",
  "bucketName" : "08478-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-27T16:20:13.5...</msg>
<status status="PASS" starttime="20250227 16:20:14.757" endtime="20250227 16:20:16.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:16.759" level="INFO">{
  "volumeName" : "08478-volume-for-cancel",
  "bucketName" : "08478-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-27T16:20:13.548Z",
  "modificationTime" : "2025-02-27T16:20:14.403Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 115816896921600103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 423,
  "file" : true
}</msg>
<status status="PASS" starttime="20250227 16:20:16.758" endtime="20250227 16:20:16.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:16.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:16.759" endtime="20250227 16:20:16.759"/>
</kw>
<status status="PASS" starttime="20250227 16:20:14.757" endtime="20250227 16:20:16.760"/>
</kw>
<msg timestamp="20250227 16:20:16.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:20:14.757" endtime="20250227 16:20:16.760"/>
</kw>
<msg timestamp="20250227 16:20:16.760" level="INFO">${result} = {
  "volumeName" : "08478-volume-for-cancel",
  "bucketName" : "08478-bucket-for-cancel",
  "name" : "cancel-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-27T16:20:13.5...</msg>
<status status="PASS" starttime="20250227 16:20:14.757" endtime="20250227 16:20:16.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:20:16.760" endtime="20250227 16:20:16.760"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:20:08.248" endtime="20250227 16:20:16.760"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20250227 16:20:06.611" endtime="20250227 16:20:16.761"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:17.283" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:23.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:23.884" level="INFO">${output} = 2025-02-27 16:20:18,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:20:18,312 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:20:17.281" endtime="20250227 16:20:23.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:23.885" level="INFO">2025-02-27 16:20:18,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:20:18,312 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-02-27 16:20:18,312 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-02-27 16:20:18,468 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2025-02-27 16:20:18,519 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-27 16:20:19,418 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2025-02-27 16:20:19,520 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-02-27 16:20:20,520 [Thread-3] INFO freon.ProgressBar: Progress: 14.00 % (14 out of 100)
2025-02-27 16:20:21,521 [Thread-3] INFO freon.ProgressBar: Progress: 43.00 % (43 out of 100)
2025-02-27 16:20:22,521 [Thread-3] INFO freon.ProgressBar: Progress: 81.00 % (81 out of 100)
2025-02-27 16:20:23,522 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-02-27 16:20:23,545 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=19.328643, max=712.859105, mean=36.88349881980238, stddev=67.7611799350349, median=28.089829, p75=35.322936, p95=46.074514, p98=49.737136, p99=53.332925, p999=712.859105, mean_rate=23.63801208943814, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-02-27 16:20:23,545 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2025-02-27 16:20:23,545 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-02-27 16:20:23,545 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250227 16:20:23.885" endtime="20250227 16:20:23.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:23.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:23.885" endtime="20250227 16:20:23.886"/>
</kw>
<status status="PASS" starttime="20250227 16:20:17.281" endtime="20250227 16:20:23.886"/>
</kw>
<msg timestamp="20250227 16:20:23.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:20:17.281" endtime="20250227 16:20:23.886"/>
</kw>
<msg timestamp="20250227 16:20:23.886" level="INFO">${result} = 2025-02-27 16:20:18,173 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-02-27 16:20:18,312 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250227 16:20:17.280" endtime="20250227 16:20:23.886"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:20:23.886" endtime="20250227 16:20:23.886"/>
</kw>
<status status="PASS" starttime="20250227 16:20:17.279" endtime="20250227 16:20:23.887"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:20:23.887" level="INFO">${random} = 67666</msg>
<status status="PASS" starttime="20250227 16:20:23.887" endtime="20250227 16:20:23.887"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:20:23.888" level="INFO">${volume_name} = 67666-volume-for-prepare</msg>
<status status="PASS" starttime="20250227 16:20:23.887" endtime="20250227 16:20:23.888"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:20:23.889" level="INFO">${bucket_name} = 67666-bucket-for-prepare</msg>
<status status="PASS" starttime="20250227 16:20:23.888" endtime="20250227 16:20:23.889"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:23.892" level="INFO">Running command 'ozone sh volume create /67666-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:25.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:25.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:20:23.890" endtime="20250227 16:20:25.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:25.691" level="INFO"/>
<status status="PASS" starttime="20250227 16:20:25.691" endtime="20250227 16:20:25.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:25.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:25.691" endtime="20250227 16:20:25.692"/>
</kw>
<status status="PASS" starttime="20250227 16:20:23.889" endtime="20250227 16:20:25.692"/>
</kw>
<msg timestamp="20250227 16:20:25.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:20:23.889" endtime="20250227 16:20:25.692"/>
</kw>
<status status="PASS" starttime="20250227 16:20:23.889" endtime="20250227 16:20:25.692"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:25.695" level="INFO">Running command 'ozone sh bucket create /67666-volume-for-prepare/67666-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:27.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:27.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:20:25.693" endtime="20250227 16:20:27.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:27.416" level="INFO"/>
<status status="PASS" starttime="20250227 16:20:27.415" endtime="20250227 16:20:27.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:27.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:27.416" endtime="20250227 16:20:27.416"/>
</kw>
<status status="PASS" starttime="20250227 16:20:25.693" endtime="20250227 16:20:27.416"/>
</kw>
<msg timestamp="20250227 16:20:27.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:20:25.693" endtime="20250227 16:20:27.416"/>
</kw>
<status status="PASS" starttime="20250227 16:20:25.692" endtime="20250227 16:20:27.416"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:27.419" level="INFO">Running command 'ozone sh key put /67666-volume-for-prepare/67666-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:30.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:30.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:20:27.417" endtime="20250227 16:20:30.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:30.234" level="INFO"/>
<status status="PASS" starttime="20250227 16:20:30.233" endtime="20250227 16:20:30.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:30.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:30.234" endtime="20250227 16:20:30.234"/>
</kw>
<status status="PASS" starttime="20250227 16:20:27.417" endtime="20250227 16:20:30.234"/>
</kw>
<msg timestamp="20250227 16:20:30.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:20:27.417" endtime="20250227 16:20:30.234"/>
</kw>
<status status="PASS" starttime="20250227 16:20:27.416" endtime="20250227 16:20:30.234"/>
</kw>
<status status="PASS" starttime="20250227 16:20:17.279" endtime="20250227 16:20:30.234"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:20:30.235" endtime="20250227 16:20:30.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:30.239" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:36.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:36.989" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250227 16:20:30.237" endtime="20250227 16:20:36.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:36.989" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20250227 16:20:36.989" endtime="20250227 16:20:36.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:36.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:36.990" endtime="20250227 16:20:36.990"/>
</kw>
<status status="PASS" starttime="20250227 16:20:30.236" endtime="20250227 16:20:36.990"/>
</kw>
<msg timestamp="20250227 16:20:36.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:20:30.236" endtime="20250227 16:20:36.990"/>
</kw>
<msg timestamp="20250227 16:20:36.990" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20250227 16:20:30.236" endtime="20250227 16:20:36.990"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:20:36.991" endtime="20250227 16:20:36.991"/>
</kw>
<status status="PASS" starttime="20250227 16:20:36.990" endtime="20250227 16:20:36.991"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:20:30.235" endtime="20250227 16:20:36.991"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:20:36.992" endtime="20250227 16:20:36.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:36.995" level="INFO">Running command 'ozone sh key info /67666-volume-for-prepare/67666-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:38.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:38.931" level="INFO">${output} = {
  "volumeName" : "67666-volume-for-prepare",
  "bucketName" : "67666-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-27T16:20:2...</msg>
<status status="PASS" starttime="20250227 16:20:36.993" endtime="20250227 16:20:38.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:38.932" level="INFO">{
  "volumeName" : "67666-volume-for-prepare",
  "bucketName" : "67666-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-27T16:20:29.129Z",
  "modificationTime" : "2025-02-27T16:20:29.885Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 115816896921600204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 831,
  "file" : true
}</msg>
<status status="PASS" starttime="20250227 16:20:38.931" endtime="20250227 16:20:38.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:38.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:38.932" endtime="20250227 16:20:38.932"/>
</kw>
<status status="PASS" starttime="20250227 16:20:36.993" endtime="20250227 16:20:38.932"/>
</kw>
<msg timestamp="20250227 16:20:38.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:20:36.993" endtime="20250227 16:20:38.932"/>
</kw>
<msg timestamp="20250227 16:20:38.933" level="INFO">${result} = {
  "volumeName" : "67666-volume-for-prepare",
  "bucketName" : "67666-bucket-for-prepare",
  "name" : "prepare-key",
  "owner" : "hadoop",
  "dataSize" : 17289,
  "creationTime" : "2025-02-27T16:20:2...</msg>
<status status="PASS" starttime="20250227 16:20:36.993" endtime="20250227 16:20:38.933"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:20:38.933" endtime="20250227 16:20:38.933"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:20:36.992" endtime="20250227 16:20:38.933"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:20:38.934" endtime="20250227 16:20:38.934"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:38.937" level="INFO">Running command 'ozone sh key put /67666-volume-for-prepare/67666-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:40.748" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:20:40.748" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250227 16:20:38.935" endtime="20250227 16:20:40.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:40.749" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250227 16:20:40.749" endtime="20250227 16:20:40.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:40.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:40.749" endtime="20250227 16:20:40.750"/>
</kw>
<msg timestamp="20250227 16:20:40.750" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250227 16:20:38.934" endtime="20250227 16:20:40.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:20:40.750" endtime="20250227 16:20:40.751"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:40.753" level="INFO">Running command 'ozone sh key info /67666-volume-for-prepare/67666-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:42.488" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:20:42.488" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250227 16:20:40.751" endtime="20250227 16:20:42.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:42.489" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20250227 16:20:42.489" endtime="20250227 16:20:42.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:42.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:42.489" endtime="20250227 16:20:42.490"/>
</kw>
<status status="PASS" starttime="20250227 16:20:40.751" endtime="20250227 16:20:42.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:20:38.933" endtime="20250227 16:20:42.490"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20250227 16:20:17.241" endtime="20250227 16:20:42.491"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:20:43.010" endtime="20250227 16:20:43.010"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:20:43.011" level="INFO">${random} = 42127</msg>
<status status="PASS" starttime="20250227 16:20:43.010" endtime="20250227 16:20:43.011"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:20:43.012" level="INFO">${volume_name} = 42127-volume-for-prepare</msg>
<status status="PASS" starttime="20250227 16:20:43.011" endtime="20250227 16:20:43.012"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:43.014" level="INFO">Running command 'ozone sh volume create /42127-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:44.727" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:20:44.727" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250227 16:20:43.012" endtime="20250227 16:20:44.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:44.728" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250227 16:20:44.727" endtime="20250227 16:20:44.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:44.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:44.728" endtime="20250227 16:20:44.728"/>
</kw>
<msg timestamp="20250227 16:20:44.729" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250227 16:20:43.012" endtime="20250227 16:20:44.729"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:20:44.729" endtime="20250227 16:20:44.729"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:44.731" level="INFO">Running command 'ozone sh volume info /42127-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:46.422" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:20:46.422" level="INFO">${output} = VOLUME_NOT_FOUND Volume 42127-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250227 16:20:44.729" endtime="20250227 16:20:46.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:46.423" level="INFO">VOLUME_NOT_FOUND Volume 42127-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250227 16:20:46.422" endtime="20250227 16:20:46.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:46.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:46.423" endtime="20250227 16:20:46.423"/>
</kw>
<msg timestamp="20250227 16:20:46.424" level="INFO">${result} = VOLUME_NOT_FOUND Volume 42127-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250227 16:20:44.729" endtime="20250227 16:20:46.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:20:46.424" endtime="20250227 16:20:46.424"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:20:43.010" endtime="20250227 16:20:46.424"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:20:46.425" endtime="20250227 16:20:46.425"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:20:46.428" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:20:48.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:20:48.321" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "67666-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20250227 16:20:46.426" endtime="20250227 16:20:48.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:20:48.322" level="INFO">[ {
  "metadata" : { },
  "name" : "67666-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-27T16:20:25.659Z",
  "modificationTime" : "2025-02-27T16:20:25.659Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "08478-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-27T16:20:09.975Z",
  "modificationTime" : "2025-02-27T16:20:09.975Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-02-27T16:19:25.443Z",
  "modificationTime" : "2025-02-27T16:19:25.443Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "42813-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-27T16:19:49.158Z",
  "modificationTime" : "2025-02-27T16:19:49.158Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-27T16:19:40.998Z",
  "modificationTime" : "2025-02-27T16:19:40.998Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20250227 16:20:48.322" endtime="20250227 16:20:48.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:20:48.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:20:48.322" endtime="20250227 16:20:48.323"/>
</kw>
<status status="PASS" starttime="20250227 16:20:46.426" endtime="20250227 16:20:48.323"/>
</kw>
<msg timestamp="20250227 16:20:48.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:20:46.425" endtime="20250227 16:20:48.323"/>
</kw>
<msg timestamp="20250227 16:20:48.323" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "67666-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20250227 16:20:46.425" endtime="20250227 16:20:48.323"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:20:46.424" endtime="20250227 16:20:48.323"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20250227 16:20:42.978" endtime="20250227 16:20:48.324"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:21:33.449" endtime="20250227 16:21:33.450"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:21:33.450" level="INFO">${random} = 24915</msg>
<status status="PASS" starttime="20250227 16:21:33.450" endtime="20250227 16:21:33.450"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250227 16:21:33.451" level="INFO">${volume_name} = 24915-volume-for-prepare</msg>
<status status="PASS" starttime="20250227 16:21:33.450" endtime="20250227 16:21:33.451"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:21:33.453" level="INFO">Running command 'ozone sh volume create /24915-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:21:35.265" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:21:35.265" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250227 16:21:33.451" endtime="20250227 16:21:35.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:21:35.266" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250227 16:21:35.265" endtime="20250227 16:21:35.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:21:35.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:21:35.266" endtime="20250227 16:21:35.266"/>
</kw>
<msg timestamp="20250227 16:21:35.266" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20250227 16:21:33.451" endtime="20250227 16:21:35.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:21:35.267" endtime="20250227 16:21:35.267"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:21:35.269" level="INFO">Running command 'ozone sh volume info /24915-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:21:37.000" level="INFO">${rc} = 255</msg>
<msg timestamp="20250227 16:21:37.000" level="INFO">${output} = VOLUME_NOT_FOUND Volume 24915-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250227 16:21:35.267" endtime="20250227 16:21:37.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:21:37.000" level="INFO">VOLUME_NOT_FOUND Volume 24915-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250227 16:21:37.000" endtime="20250227 16:21:37.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:21:37.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:21:37.001" endtime="20250227 16:21:37.001"/>
</kw>
<msg timestamp="20250227 16:21:37.001" level="INFO">${result} = VOLUME_NOT_FOUND Volume 24915-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20250227 16:21:35.267" endtime="20250227 16:21:37.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:21:37.001" endtime="20250227 16:21:37.001"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:21:33.449" endtime="20250227 16:21:37.001"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250227 16:21:37.002" endtime="20250227 16:21:37.003"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:21:37.005" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:21:38.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:21:38.927" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "67666-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20250227 16:21:37.003" endtime="20250227 16:21:38.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:21:38.927" level="INFO">[ {
  "metadata" : { },
  "name" : "67666-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-27T16:20:25.659Z",
  "modificationTime" : "2025-02-27T16:20:25.659Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "08478-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-27T16:20:09.975Z",
  "modificationTime" : "2025-02-27T16:20:09.975Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2025-02-27T16:19:25.443Z",
  "modificationTime" : "2025-02-27T16:19:25.443Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "42813-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-27T16:19:49.158Z",
  "modificationTime" : "2025-02-27T16:19:49.158Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2025-02-27T16:19:40.998Z",
  "modificationTime" : "2025-02-27T16:19:40.998Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20250227 16:21:38.927" endtime="20250227 16:21:38.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:21:38.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:21:38.928" endtime="20250227 16:21:38.928"/>
</kw>
<status status="PASS" starttime="20250227 16:21:37.003" endtime="20250227 16:21:38.928"/>
</kw>
<msg timestamp="20250227 16:21:38.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:21:37.003" endtime="20250227 16:21:38.928"/>
</kw>
<msg timestamp="20250227 16:21:38.928" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "67666-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20250227 16:21:37.003" endtime="20250227 16:21:38.928"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:21:37.002" endtime="20250227 16:21:38.929"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20250227 16:21:33.416" endtime="20250227 16:21:38.929"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:22:27.748" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:22:29.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:22:29.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:22:27.746" endtime="20250227 16:22:29.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:22:29.617" level="INFO"/>
<status status="PASS" starttime="20250227 16:22:29.616" endtime="20250227 16:22:29.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:22:29.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:22:29.617" endtime="20250227 16:22:29.617"/>
</kw>
<status status="PASS" starttime="20250227 16:22:27.746" endtime="20250227 16:22:29.618"/>
</kw>
<msg timestamp="20250227 16:22:29.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:22:27.746" endtime="20250227 16:22:29.618"/>
</kw>
<msg timestamp="20250227 16:22:29.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:22:27.746" endtime="20250227 16:22:29.618"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:22:29.618" endtime="20250227 16:22:29.618"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:22:29.621" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:22:31.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:22:31.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:22:29.619" endtime="20250227 16:22:31.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:22:31.330" level="INFO"/>
<status status="PASS" starttime="20250227 16:22:31.330" endtime="20250227 16:22:31.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:22:31.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:22:31.331" endtime="20250227 16:22:31.331"/>
</kw>
<status status="PASS" starttime="20250227 16:22:29.619" endtime="20250227 16:22:31.331"/>
</kw>
<msg timestamp="20250227 16:22:31.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:22:29.619" endtime="20250227 16:22:31.331"/>
</kw>
<msg timestamp="20250227 16:22:31.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:22:29.618" endtime="20250227 16:22:31.331"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:22:31.331" endtime="20250227 16:22:31.332"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:22:31.334" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:22:34.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:22:34.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:22:31.333" endtime="20250227 16:22:34.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:22:34.512" level="INFO"/>
<status status="PASS" starttime="20250227 16:22:34.512" endtime="20250227 16:22:34.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:22:34.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:22:34.512" endtime="20250227 16:22:34.513"/>
</kw>
<status status="PASS" starttime="20250227 16:22:31.332" endtime="20250227 16:22:34.513"/>
</kw>
<msg timestamp="20250227 16:22:34.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:22:31.332" endtime="20250227 16:22:34.513"/>
</kw>
<msg timestamp="20250227 16:22:34.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:22:31.332" endtime="20250227 16:22:34.513"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:22:34.514" endtime="20250227 16:22:34.514"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:22:27.745" endtime="20250227 16:22:34.514"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250227 16:22:27.713" endtime="20250227 16:22:34.515"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250227 16:22:35.036" level="INFO">${random} = 27103</msg>
<status status="PASS" starttime="20250227 16:22:35.035" endtime="20250227 16:22:35.036"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250227 16:22:35.039" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-27103 2&gt;&amp;1'.</msg>
<msg timestamp="20250227 16:22:37.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20250227 16:22:37.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:22:35.037" endtime="20250227 16:22:37.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250227 16:22:37.939" level="INFO"/>
<status status="PASS" starttime="20250227 16:22:37.939" endtime="20250227 16:22:37.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250227 16:22:37.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250227 16:22:37.939" endtime="20250227 16:22:37.939"/>
</kw>
<status status="PASS" starttime="20250227 16:22:35.036" endtime="20250227 16:22:37.940"/>
</kw>
<msg timestamp="20250227 16:22:37.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250227 16:22:35.036" endtime="20250227 16:22:37.940"/>
</kw>
<msg timestamp="20250227 16:22:37.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250227 16:22:35.036" endtime="20250227 16:22:37.940"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250227 16:22:37.940" endtime="20250227 16:22:37.940"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250227 16:22:35.035" endtime="20250227 16:22:37.940"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20250227 16:22:35.003" endtime="20250227 16:22:37.941"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="83356"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
